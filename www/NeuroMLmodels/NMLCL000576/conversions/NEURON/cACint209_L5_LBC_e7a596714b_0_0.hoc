// Cell: cACint209_L5_LBC_e7a596714b_0_0
/*
{
  "id" : "cACint209_L5_LBC_e7a596714b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-15.6431, -2.66144, 0.0, 3.30324", "-14.0603, -2.4613, 0.0, 5.78525", "-12.4774, -2.26116, 0.0, 7.9612", "-10.8946, -2.06102, 0.0, 9.78332", "-9.31178, -1.86088, 0.0, 11.2789", "-7.72896, -1.66074, 0.0, 12.7179", "-6.14614, -1.4606, 0.0, 13.968", "-4.56331, -1.26046, 0.0, 15.126", "-2.98049, -1.06032, 0.0, 16.024", "-1.39766, -0.860182, 0.0, 16.3577", "0.185161, -0.660042, 0.0, 16.6168", "1.76798, -0.459902, 0.0, 16.4395", "3.35081, -0.259762, 0.0, 16.1401", "4.93363, -0.0596226, 0.0, 15.4809", "6.51646, 0.140517, 0.0, 14.5881", "8.09928, 0.340657, 0.0, 13.7036", "9.6821, 0.540797, 0.0, 12.5552", "11.2649, 0.740937, 0.0, 10.9185", "12.8478, 0.941077, 0.0, 9.17326", "14.4306, 1.14122, 0.0, 6.97209", "16.0134, 1.34136, 0.0, 4.21565" ]
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "12.1654, 2.55051, 1.3, 6.82", "15.1185, 3.22991, 2.02846, 6.82", "17.7922, 3.84502, 2.68797, 6.14", "18.8365, 4.08527, 2.94558, 6.14", "20.6912, 4.51195, 3.40306, 6.82", "23.0233, 5.04848, 3.97833, 6.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500004585168592
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-13.7947, -3.58926, -1.22, 6.59", "-19.4019, -6.99251, -3.72833, 5.23", "-25.6209, -10.767, -6.51034, 5.45", "-29.8006, -13.3039, -8.38013, 5.45", "-35.1218, -16.5336, -10.7605, 6.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500004585168592
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "16.0134, 1.34136, 0.0, 1.34158", "30.8949, 3.22305, 0.0, 1.34158", "45.7764, 5.10474, 0.0, 1.34158" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "23.0233, 5.04848, 3.97833, 3.64", "25.1169, 5.26531, 4.53914, 3.64", "29.5092, 5.72025, 5.71575, 3.64", "33.8865, 6.17362, 6.88833, 3.64", "40.2265, 6.83027, 8.58666, 3.64", "44.6846, 7.29202, 9.78089, 3.64", "51.8208, 8.03113, 11.6925, 5.0" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "23.0233, 5.04848, 3.97833, 0.91", "26.4881, 5.36402, 6.15447, 0.91", "29.0322, 5.59571, 7.75228, 1.36", "31.628, 5.83211, 9.38262, 1.36", "34.056, 6.05324, 10.9076, 1.36" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-35.1218, -16.5336, -10.7605, 2.27", "-35.7911, -13.2301, -12.2513, 2.27", "-36.6033, -9.2216, -14.0603, 1.59", "-37.2318, -6.12004, -15.46, 1.59", "-37.6262, -4.17328, -16.3386, 1.59", "-38.3245, -0.726886, -17.8939, 1.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-35.1218, -16.5336, -10.7605, 4.55", "-39.2221, -19.287, -10.7254, 4.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "45.7764, 5.10474, 0.0, 0.153092", "60.6579, 6.98643, 0.0, 0.153092", "75.5394, 8.86812, 0.0, 0.153092" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "51.8208, 8.03113, 11.6925, 2.73", "55.2874, 8.71019, 11.144, 2.73", "59.0672, 9.4506, 10.546, 2.73", "62.8118, 10.1841, 9.95361, 2.73", "67.1864, 11.0411, 9.26149, 3.41" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "51.8208, 8.03113, 11.6925, 1.82", "55.2089, 5.18836, 12.634, 1.82", "58.208, 2.85903, 13.578, 1.36", "61.2446, 0.442836, 14.7802, 1.59", "63.9905, -1.72524, 15.9416, 1.59", "66.4078, -3.62935, 16.9957, 1.59", "68.5643, -5.38116, 17.9696, 1.36", "70.5904, -7.09639, 19.0011, 1.36", "73.0882, -9.5639, 20.4079, 2.27", "75.3424, -11.9138, 21.7424, 2.05", "78.1359, -15.0194, 23.4879, 0.91", "79.7304, -16.9041, 24.4682, 1.14", "81.7916, -19.6446, 25.7301, 1.14", "84.1222, -23.1389, 27.0829, 1.14" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "34.056, 6.05324, 10.9076, 0.68", "37.6022, 5.90478, 10.7728, 0.68", "41.7971, 5.72558, 10.6614, 0.68", "47.2764, 5.47228, 10.5469, 0.45", "50.6988, 5.34816, 10.5291, 0.91", "54.6329, 5.30411, 10.548, 0.91", "57.883, 5.33043, 10.6338, 0.23", "60.8968, 5.5427, 10.7704, 1.14", "63.2319, 5.83774, 10.9287, 1.82", "67.1873, 6.48403, 11.2736, 0.91", "71.1984, 7.19045, 11.7527, 0.68", "76.1495, 8.18132, 12.747, 0.68", "79.0043, 8.85186, 13.7079, 0.45", "80.6379, 9.26569, 14.4473, 1.14", "82.4729, 9.7937, 15.4939, 0.23", "83.9493, 10.2543, 16.6167, 2.27", "87.8891, 11.5209, 20.3408, 1.14", "91.9212, 12.8008, 24.5889, 0.45", "92.7927, 13.0546, 25.5745, 1.36", "94.6309, 13.6063, 27.7701, 1.36", "97.5774, 14.6575, 31.4758, 0.23", "98.8662, 15.1758, 33.0656, 0.23", "100.048, 15.6857, 34.3878, 2.27" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "34.056, 6.05324, 10.9076, 1.14", "35.3332, 6.54844, 11.0577, 1.14", "37.7377, 7.48069, 11.3404, 2.27" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-38.3245, -0.726886, -17.8939, 0.45", "-39.7753, 1.34369, -17.7856, 0.45", "-41.362, 3.61334, -17.7477, 0.45", "-41.8833, 4.42797, -17.757, 1.14", "-43.2817, 6.85317, -17.8608, 0.23", "-44.0521, 8.311, -17.9535, 0.23", "-44.8949, 9.97103, -17.9632, 1.14", "-45.7958, 11.9992, -17.8896, 1.14", "-46.2297, 13.1854, -17.8591, 0.23", "-46.7017, 14.6537, -17.87, 0.68", "-47.7617, 18.2589, -18.0037, 0.23", "-48.6252, 21.731, -18.2754, 0.68", "-49.1608, 24.2013, -18.5483, 1.59", "-49.7446, 27.1803, -18.9778, 0.45", "-50.3544, 30.1426, -19.5165, 1.14", "-50.6826, 31.6911, -19.9037, 0.23", "-51.2971, 34.5327, -20.7204, 1.59", "-52.1524, 37.7769, -21.7599, 0.23", "-52.8056, 39.7104, -22.3473, 1.14", "-53.6113, 41.5667, -22.8379, 0.23", "-54.8865, 43.9043, -23.3704, 1.14", "-56.7343, 46.7035, -24.0049, 0.68", "-58.2602, 48.7234, -24.3722, 1.14", "-59.4139, 50.2237, -24.6007, 2.5", "-61.0626, 52.4678, -24.8495, 2.73", "-63.5914, 56.0953, -25.1802, 1.14", "-65.627, 59.215, -25.3581, 0.23", "-67.2576, 61.8693, -25.514, 0.91", "-69.2297, 65.5357, -25.607, 0.23", "-70.6121, 68.454, -25.5797, 0.23", "-71.8923, 71.5568, -25.4859, 0.91", "-72.7814, 73.9299, -25.4487, 0.23", "-73.2238, 75.1262, -25.4754, 0.91", "-74.2425, 77.7682, -25.6716, 0.23", "-75.3315, 80.4995, -25.8981, 1.82", "-76.4499, 83.1387, -26.1959, 3.86", "-78.8734, 88.6388, -26.9088, 1.36", "-80.3963, 91.9377, -27.4689, 0.68", "-81.6518, 94.4898, -27.9427, 0.91" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-38.3245, -0.726886, -17.8939, 1.59", "-38.3731, 1.21772, -19.5505, 1.59", "-38.3081, 2.72926, -20.8065, 1.59", "-38.1268, 4.04452, -21.9068, 1.59", "-37.7976, 5.54613, -23.116, 0.91", "-37.0581, 8.19153, -25.0861, 0.45", "-36.8169, 8.90627, -25.5674, 0.45", "-36.2138, 10.341, -26.3553, 0.45", "-35.5032, 11.8064, -26.934, 1.14", "-34.7518, 13.1016, -27.2814, 1.82", "-33.5573, 14.9062, -27.52, 0.68", "-32.3044, 16.6975, -27.6525, 1.36", "-31.2517, 18.2928, -27.8128, 0.45", "-30.3738, 19.682, -27.9795, 1.14", "-29.5027, 21.0621, -28.221, 0.23", "-28.7227, 22.1626, -28.5281, 1.82", "-26.6558, 24.6445, -29.4902, 0.68", "-25.4347, 25.9268, -30.1242, 1.59", "-24.5417, 26.7699, -30.6093, 1.59", "-23.0265, 28.128, -31.4031, 0.45", "-21.6713, 29.4213, -32.0875, 0.68", "-20.8134, 30.2252, -32.4621, 0.23", "-19.6519, 31.2734, -32.7879, 1.14", "-18.69, 32.1433, -32.9972, 0.23", "-17.5122, 33.2667, -33.2177, 0.23", "-16.2891, 34.5867, -33.3597, 0.68", "-15.5925, 35.478, -33.409, 0.23", "-13.9471, 37.8863, -33.5537, 0.23", "-9.38628, 45.6001, -34.9531, 0.23", "-4.90173, 53.4723, -34.5364, 0.23", "0.698588, 60.313, -32.7197, 0.23" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-39.2221, -19.287, -10.7254, 0.68", "-40.9896, -19.412, -12.1253, 0.68", "-42.7665, -19.5306, -13.5505, 0.45", "-44.7227, -19.7487, -15.1133, 0.45", "-45.9946, -19.9345, -16.1179, 0.45", "-47.8934, -20.2581, -17.5817, 1.36", "-50.3459, -20.7201, -19.4067, 1.36", "-51.3857, -20.9494, -20.1563, 1.14", "-52.989, -21.3652, -21.1774, 0.68", "-53.4683, -21.5168, -21.4244, 0.68", "-54.1284, -21.7223, -21.6787, 0.68", "-54.9743, -21.9729, -21.8817, 0.68", "-56.6575, -22.3874, -22.1193, 0.68", "-58.3056, -22.7529, -22.4107, 2.05", "-59.9676, -23.0775, -22.7366, 0.23", "-61.1523, -23.3342, -22.997, 1.14", "-63.1967, -23.7898, -23.4785, 0.23", "-64.2158, -24.0081, -23.727, 2.05", "-66.793, -24.4319, -24.26, 0.23", "-68.3189, -24.5357, -24.4881, 1.14", "-69.4394, -24.5885, -24.6148, 0.23", "-70.5669, -24.6458, -24.7332, 0.23", "-71.7027, -24.6099, -24.7962, 0.23", "-74.06, -24.2112, -24.5992, 0.23", "-75.3961, -23.5213, -24.079, 0.23", "-82.5682, -23.7011, -26.869, 0.23", "-89.9643, -23.457, -28.9889, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-39.2221, -19.287, -10.7254, 3.18", "-42.0827, -21.7385, -10.1644, 3.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "67.1864, 11.0411, 9.26149, 0.68", "68.9869, 9.58989, 9.27736, 0.68", "70.4178, 8.18368, 8.98525, 0.68", "71.3431, 7.0849, 8.68528, 0.68", "72.4174, 5.66902, 8.27367, 0.68", "73.0203, 4.85021, 8.01583, 0.68", "74.5117, 2.77596, 7.35651, 0.68", "76.1773, 0.142803, 6.42292, 1.36", "77.2677, -1.98349, 5.68044, 0.45", "77.5848, -2.68792, 5.4247, 1.14", "78.1453, -4.04279, 4.91021, 0.68", "78.4417, -4.77892, 4.6259, 2.27", "79.4186, -7.2435, 3.70337, 0.91", "79.9351, -8.62759, 3.16317, 0.23", "80.544, -10.1602, 2.4836, 0.23", "81.3554, -11.9393, 1.60081, 1.14", "82.034, -13.2721, 0.926091, 2.27", "82.9907, -14.8666, 0.190245, 1.14", "84.5576, -17.0101, -0.601935, 1.14", "85.4254, -18.0404, -0.906729, 1.14", "87.1403, -19.9566, -1.36392, 0.68", "88.5086, -21.251, -1.62532, 1.14", "90.6305, -22.9214, -1.94333, 0.23", "92.5256, -24.2296, -2.09546, 1.59", "94.7559, -25.6993, -2.09912, 0.68", "96.0654, -26.5596, -2.11639, 2.27", "98.2553, -27.9042, -2.15422, 1.14", "99.9789, -28.9229, -2.34692, 0.23", "101.191, -29.6697, -2.61522, 0.68", "102.9, -30.7318, -3.14395, 0.23", "104.588, -31.8294, -3.72402, 1.59", "105.685, -32.5768, -4.15463, 2.05", "107.643, -34.0264, -5.1321, 0.68", "108.58, -34.7264, -5.64463, 1.36", "110.673, -36.2906, -6.77066, 0.23", "111.582, -36.9862, -7.2116, 0.68", "112.81, -37.9771, -7.69038, 0.68", "113.769, -38.7471, -7.99176, 0.68", "114.607, -39.4322, -8.16336, 1.59", "116.283, -40.8606, -8.39261, 0.91", "117.983, -42.4181, -8.56385, 0.91", "119.351, -43.708, -8.70407, 1.59", "120.82, -45.1041, -8.89317, 0.45", "122.151, -46.3509, -9.06498, 0.45", "123.297, -47.3649, -9.2231, 0.68", "124.79, -48.5771, -9.4039, 1.82", "126.231, -49.7322, -9.5505, 0.91", "127.906, -51.0469, -9.68285, 0.23", "129.159, -51.9417, -9.77145, 0.68", "131.095, -53.2337, -9.92644, 0.68", "133.176, -54.5903, -10.0868, 0.23", "134.4, -55.3741, -10.1493, 0.91", "135.99, -56.3525, -10.2101, 0.23", "137.298, -57.1524, -10.1721, 0.23", "143.283, -62.8289, -12.8053, 0.23", "149.313, -68.1922, -15.9137, 0.23", "155.515, -73.0172, -19.4927, 0.23", "162.023, -77.5112, -22.9418, 0.23", "167.98, -82.5967, -26.5891, 0.23", "172.926, -87.969, -31.2118, 0.23", "178.132, -93.3979, -35.4747, 0.23", "183.541, -98.2958, -40.0865, 0.23" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "67.1864, 11.0411, 9.26149, 0.68", "71.421, 13.4739, 7.78564, 0.68", "74.5062, 14.9811, 6.62644, 0.68", "77.1515, 16.1268, 5.55237, 1.82", "78.7306, 16.7651, 4.87749, 1.36", "79.8847, 17.221, 4.38797, 2.05", "82.4088, 18.2113, 3.35143, 2.05", "85.9589, 19.4053, 1.87497, 0.91", "87.9607, 20.0842, 1.15071, 1.59", "89.8929, 20.7939, 0.499244, 2.05", "92.2721, 21.6763, -0.319159, 2.5", "94.2738, 22.4297, -0.999591, 2.73", "96.2701, 23.2248, -1.63359, 2.05", "97.9029, 23.9831, -2.00231, 2.95", "98.8724, 24.4667, -2.15959, 2.5" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "84.1222, -23.1389, 27.0829, 0.91", "83.3697, -25.9154, 28.6496, 0.91", "82.8568, -28.008, 29.8248, 0.45", "82.3666, -30.2941, 31.1014, 0.91", "82.1662, -31.2593, 31.6742, 0.91", "81.5837, -33.912, 33.2985, 0.23", "81.237, -35.493, 34.2794, 1.59", "80.8378, -37.4773, 35.5357, 0.45", "80.582, -38.8427, 36.4101, 1.82", "80.1177, -41.6918, 38.2316, 0.45", "79.7478, -43.997, 39.7078, 0.68", "79.5456, -45.3563, 40.5317, 2.27", "79.4257, -46.2691, 41.0421, 2.27", "79.1923, -48.3775, 42.1271, 1.14", "78.9166, -51.3238, 43.5284, 0.68", "78.7132, -54.0353, 44.7454, 1.14", "78.5436, -55.9358, 45.6102, 0.23", "78.3158, -57.7071, 46.4641, 1.82", "77.8683, -60.2774, 47.8761, 0.23", "77.4808, -62.0256, 49.0026, 0.23", "77.0493, -63.5777, 50.1418, 2.05", "76.4178, -65.7381, 51.8737, 0.68", "75.8285, -67.6099, 53.4933, 3.41", "74.8923, -70.5921, 56.1349, 0.45", "74.2789, -72.6376, 57.8569, 1.14", "73.7869, -74.5826, 59.3743, 1.59", "73.4039, -76.7491, 60.8939, 0.68", "73.3307, -77.6568, 61.4629, 1.36", "73.3368, -79.8756, 62.6508, 0.23", "73.5389, -82.0034, 63.5951, 2.05", "73.8126, -83.4944, 64.1918, 2.05", "74.3169, -85.323, 64.8959, 0.68", "74.9865, -87.3507, 65.7055, 1.36", "75.5219, -88.7757, 66.3054, 1.82", "75.8898, -89.6709, 66.7051, 1.82", "76.6835, -91.4137, 67.5695, 0.23", "77.6208, -93.4306, 68.5526, 2.73", "78.4665, -95.3097, 69.4424, 0.23", "78.8499, -96.1532, 69.8165, 1.14" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "84.1222, -23.1389, 27.0829, 3.41", "84.192, -23.2574, 27.1199, 3.41", "86.1363, -27.1545, 28.0331, 0.91", "87.3666, -29.9423, 28.6081, 0.91", "88.0717, -31.7083, 28.958, 1.36", "88.7617, -33.6331, 29.3365, 1.36", "90.0947, -37.6597, 30.1349, 0.91", "90.81, -40.3243, 30.6442, 1.36", "91.4838, -43.5424, 31.2198, 1.14", "91.8595, -45.5887, 31.5894, 1.36", "92.119, -47.0529, 31.8663, 0.68", "92.4226, -48.8142, 32.2343, 1.36", "92.8734, -51.5313, 32.8387, 0.23", "93.198, -53.4182, 33.2876, 0.91", "93.7316, -56.1568, 33.9201, 0.23", "94.2639, -58.5249, 34.5095, 2.05", "94.6867, -60.1858, 34.9628, 2.05", "95.6383, -63.5127, 35.9452, 0.91", "96.1645, -65.0897, 36.4461, 0.91", "96.8761, -67.0381, 37.1065, 0.68", "97.9571, -69.7507, 38.0933, 0.68", "98.6972, -71.4633, 38.7794, 0.68", "99.6726, -73.4973, 39.6208, 0.68", "101.191, -76.2783, 40.8191, 1.36", "101.619, -77.0069, 41.1345, 2.05" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "100.048, 15.6857, 34.3878, 1.36", "101.211, 17.1499, 35.9163, 1.36", "102.085, 18.2663, 37.0943, 0.23", "102.612, 18.9201, 37.7635, 1.36", "103.678, 20.3115, 39.2781, 0.45", "104.285, 21.0622, 40.2042, 0.91", "104.992, 21.852, 41.2113, 0.91", "106.341, 23.1666, 43.2159, 0.23", "107.073, 23.8381, 44.3606, 1.14", "108.251, 24.8003, 46.3837, 1.14", "109.46, 25.7022, 48.6566, 0.68", "110.486, 26.4304, 50.7086, 0.68", "111.507, 27.1154, 52.8103, 0.68", "112.188, 27.5699, 54.3071, 0.68", "113.27, 28.4384, 56.984, 2.05", "114.46, 29.6345, 60.1632, 0.68", "115.548, 31.1823, 63.6514, 1.82", "116.241, 32.4386, 66.2968, 0.45", "116.537, 33.0661, 67.4646, 1.59", "117.254, 34.941, 70.7414, 0.23", "117.561, 36.1513, 72.6158, 1.36", "117.779, 37.7744, 75.0528, 0.45", "117.927, 39.8164, 78.0911, 2.27", "117.995, 40.8629, 79.5934, 0.68", "118.222, 42.9563, 82.6102, 0.23", "118.497, 44.8343, 85.2585, 0.91", "118.746, 46.3107, 87.3022, 0.23", "119.033, 47.7706, 89.2147, 1.36", "119.48, 49.6278, 91.5185, 0.23", "120.242, 51.7901, 94.2572, 0.91", "120.641, 52.6462, 95.3146, 0.23", "121.099, 53.4732, 96.373, 1.36", "121.532, 54.2057, 97.2937, 1.36", "122.872, 56.2489, 99.7814, 0.23", "123.967, 57.7344, 101.54, 1.14", "124.959, 59.0047, 102.977, 0.23", "126.262, 60.5503, 104.668, 1.82", "127.028, 61.4323, 105.637, 2.05", "128.577, 63.2164, 107.531, 0.23", "129.984, 64.811, 109.176, 0.23", "130.5, 65.3722, 109.76, 1.36", "131.501, 66.3707, 110.846, 1.36", "132.623, 67.4671, 112.053, 0.23", "133.285, 68.1044, 112.787, 0.91", "134.52, 69.2392, 114.241, 0.23", "135.125, 69.7091, 114.896, 1.14", "135.821, 70.199, 115.59, 0.23", "136.494, 70.684, 116.159, 0.91", "138.386, 72.0998, 117.446, 0.23", "139.512, 72.9961, 118.144, 1.14", "141.294, 74.5424, 119.199, 0.23", "142.653, 75.8221, 120.035, 0.23", "144.628, 77.8828, 121.315, 0.68", "145.4, 78.8707, 121.883, 0.23", "145.794, 79.522, 122.236, 1.36", "146.728, 81.4703, 123.238, 0.23", "147.402, 83.3141, 124.178, 0.91", "148.323, 86.2437, 125.747, 0.23", "148.816, 87.9481, 126.784, 2.27", "149.323, 89.7047, 127.973, 0.23", "149.702, 91.0869, 128.967, 1.14", "150.091, 92.6322, 130.193, 0.23", "150.441, 94.1589, 131.57, 0.91", "150.767, 95.4235, 133.016, 0.23", "151.288, 96.9007, 135.018, 2.05", "151.552, 97.507, 135.909, 0.23", "151.983, 98.4303, 137.336, 1.59", "152.436, 99.2811, 138.632, 0.23", "153.363, 100.833, 140.967, 0.23", "153.808, 101.499, 141.905, 1.36", "154.532, 102.414, 143.091, 0.23", "155.056, 102.976, 143.84, 1.59", "156.479, 104.322, 145.703, 0.23", "157.333, 105.014, 146.776, 0.91", "159.013, 106.097, 148.865, 0.23", "159.822, 106.557, 149.897, 2.05", "162.258, 107.738, 153.046, 0.23", "163.111, 108.09, 154.131, 0.91", "164.201, 108.461, 155.546, 0.23", "166.337, 109.162, 158.259, 0.23" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "100.048, 15.6857, 34.3878, 1.14", "101.337, 15.229, 35.6254, 1.14", "103.098, 14.6243, 37.2866, 0.45", "104.886, 13.8963, 39.2608, 0.91", "105.768, 13.5185, 40.2002, 0.23", "107.147, 12.9216, 41.6851, 1.14", "107.91, 12.6243, 42.4676, 1.59", "109.504, 12.002, 44.1043, 1.59", "112.982, 10.8562, 47.1608, 0.23", "114.345, 10.4794, 48.1755, 2.05", "116.334, 9.99936, 49.5296, 0.23", "118.07, 9.6533, 50.5718, 0.23", "120.952, 9.15948, 52.1561, 2.05", "124.103, 8.74596, 53.657, 0.68", "127.351, 8.38953, 55.0361, 0.23", "129.739, 8.11264, 56.0434, 1.14", "130.759, 7.96036, 56.4291, 1.14", "133.798, 7.41157, 57.608, 0.23", "134.649, 7.25455, 57.9172, 0.23", "136.897, 6.7475, 58.7153, 0.68", "138.032, 6.4413, 59.0796, 1.82", "139.864, 5.86908, 59.5933, 1.82", "141.784, 5.2373, 60.0835, 0.23", "143.428, 4.6184, 60.3815, 1.14", "145.503, 3.7357, 60.6227, 0.23", "147.19, 2.79092, 60.7736, 1.14", "148.065, 2.22416, 60.8379, 0.23", "148.924, 1.63049, 60.875, 2.27", "150.922, 0.153899, 60.8526, 0.23", "152.445, -1.00135, 60.7806, 1.36", "157.201, -4.63948, 60.5106, 0.23", "159.417, -6.29435, 60.3391, 0.23", "160.989, -7.46526, 60.2424, 1.82", "163.076, -9.0137, 60.1233, 1.82", "166.014, -11.1592, 59.9725, 0.23", "168.455, -12.9647, 59.9098, 2.73", "170.278, -14.293, 59.8707, 2.73", "173.366, -16.6193, 59.9103, 0.23", "174.786, -17.6907, 60.0065, 0.23", "176.249, -18.7585, 60.156, 1.36", "179.19, -20.8542, 60.4508, 0.23", "181.072, -22.1264, 60.6254, 1.59", "183.312, -23.5008, 60.8386, 0.23", "186.178, -25.0298, 61.0387, 1.36", "188.713, -26.1912, 61.1978, 0.23", "191.816, -27.3722, 61.322, 0.23", "193.068, -27.7957, 61.3792, 2.05", "195.187, -28.452, 61.5378, 1.59", "197.929, -29.2172, 61.7763, 0.23", "201.323, -30.1414, 62.0343, 0.68", "203.449, -30.6832, 62.2562, 1.36", "207.027, -31.5371, 62.7089, 0.23", "208.327, -31.8839, 62.8646, 1.59", "209.674, -32.3096, 63.0588, 0.91", "211.436, -32.9218, 63.3816, 1.59" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "37.7377, 7.48069, 11.3404, 0.23", "39.3758, 6.06139, 11.49, 0.23", "41.3693, 4.19058, 11.4508, 0.68", "42.5303, 3.07148, 11.3473, 0.68", "43.8135, 1.79534, 11.1995, 1.59", "44.7566, 0.842957, 11.0859, 1.59", "46.1231, -0.616795, 10.9675, 0.68", "46.8975, -1.59441, 10.9111, 0.23", "47.2892, -2.12361, 10.8683, 0.91", "48.5982, -3.96434, 10.727, 1.59", "49.6774, -5.56974, 10.6496, 1.36", "50.6464, -7.09709, 10.6097, 0.23", "51.3954, -8.35666, 10.5729, 1.82", "52.2046, -9.85574, 10.5128, 2.27", "53.0886, -11.7791, 10.3685, 1.14", "53.819, -13.7416, 10.0985, 0.23", "54.2317, -15.0189, 9.83406, 1.14", "54.574, -16.2057, 9.5081, 1.59", "54.9871, -17.8705, 9.00037, 0.45", "55.2941, -19.2524, 8.61796, 0.45", "55.5898, -20.4551, 8.2875, 0.91", "56.005, -22.0541, 7.84575, 0.91", "56.4909, -23.6792, 7.41944, 0.91", "56.9758, -25.1097, 7.02374, 1.82", "57.461, -26.3448, 6.61868, 0.91", "58.0946, -27.7551, 6.12185, 0.23", "58.7439, -29.0746, 5.61311, 2.05", "59.3567, -30.1925, 5.1254, 2.05", "60.2968, -31.6663, 4.36857, 0.68", "60.929, -32.5812, 3.82541, 1.82", "61.5001, -33.3677, 3.29827, 1.82", "62.2722, -34.3803, 2.58152, 1.82", "63.0761, -35.3869, 1.91086, 0.23", "63.6714, -36.17, 1.46577, 0.23", "64.3916, -37.2438, 1.03603, 1.14", "64.743, -37.8484, 0.85502, 1.14", "65.3019, -38.9725, 0.615777, 0.23", "66.1162, -40.8498, 0.311784, 1.82", "66.8226, -42.6322, 0.0697138, 0.68", "67.6967, -44.9819, -0.246297, 0.68", "68.1757, -46.3242, -0.412467, 0.68", "68.809, -48.166, -0.669429, 0.68", "69.0566, -48.834, -0.768267, 1.82", "69.3724, -49.6749, -0.922252, 1.82", "70.0099, -51.2184, -1.22557, 0.45", "70.67, -52.6881, -1.61281, 0.45", "71.4033, -54.1776, -2.03559, 1.59", "72.28, -55.9099, -2.61246, 0.23", "72.5524, -56.4595, -2.78682, 0.23", "73.1269, -57.6305, -3.15838, 1.36", "74.0658, -59.4943, -3.78883, 0.45", "74.9966, -61.3395, -4.45611, 0.45", "75.9761, -63.3302, -5.18622, 2.73", "77.0763, -65.7494, -6.10769, 0.23", "77.4889, -66.6746, -6.44528, 0.23", "78.2794, -68.5832, -7.0932, 2.27" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "37.7377, 7.48069, 11.3404, 1.14", "40.214, 8.83512, 13.9345, 1.14", "42.4272, 9.87523, 16.12, 1.14", "45.0146, 10.872, 18.4304, 0.68", "48.2432, 11.8027, 21.1163, 0.91", "51.3096, 12.2383, 23.4837, 0.45", "53.122, 12.3634, 24.7884, 0.91", "55.4318, 12.177, 26.2366, 0.68", "57.4705, 11.6983, 27.377, 0.68", "59.4818, 10.9134, 28.4123, 0.68", "63.2443, 8.72065, 30.4075, 0.68", "64.3756, 7.90664, 31.0753, 1.59", "65.2881, 7.13019, 31.7251, 1.59", "67.1882, 5.368, 33.3122, 0.91", "69.4293, 3.19444, 35.3648, 1.36", "72.7836, -0.169994, 38.6543, 1.82", "75.4959, -3.12394, 41.5745, 0.91", "76.8978, -4.78305, 43.1896, 0.91", "78.5865, -6.89752, 45.2539, 1.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-81.6518, 94.4898, -27.9427, 0.23", "-83.2908, 96.323, -27.9915, 0.23", "-84.5496, 97.72, -27.9963, 0.23", "-85.1867, 98.4178, -28.0005, 1.59", "-85.8108, 99.1279, -28.0163, 2.5", "-87.053, 100.605, -28.051, 2.5", "-88.4543, 102.365, -28.0702, 0.23", "-88.9709, 103.09, -28.0881, 0.23", "-89.572, 103.983, -28.1025, 0.23", "-90.3383, 105.156, -28.0993, 1.59", "-91.4458, 106.867, -28.0929, 1.14", "-92.468, 108.47, -28.1338, 0.23", "-93.2286, 109.724, -28.2273, 1.59", "-93.8982, 110.887, -28.3379, 2.27", "-94.7499, 112.361, -28.5227, 0.23", "-95.4143, 113.521, -28.6874, 1.14", "-95.9743, 114.526, -28.8308, 0.23", "-96.4875, 115.493, -28.9407, 0.91", "-97.4646, 117.36, -29.0752, 0.23", "-98.3496, 119.035, -29.1585, 2.95", "-99.8721, 121.928, -29.2201, 0.23", "-100.706, 123.484, -29.1955, 1.82", "-101.801, 125.479, -29.0882, 0.23", "-102.483, 126.648, -29.0078, 0.23", "-103.202, 127.818, -28.9154, 0.91", "-103.936, 128.971, -28.8525, 1.14", "-104.7, 130.083, -28.8635, 0.23", "-105.555, 131.282, -28.9416, 1.36", "-106.59, 132.714, -29.0995, 0.68", "-108.124, 134.894, -29.3946, 0.68", "-109.241, 136.548, -29.6486, 2.05", "-110.58, 138.56, -30.0097, 0.23", "-111.758, 140.407, -30.3445, 1.82", "-112.7, 141.954, -30.6388, 0.23", "-113.051, 142.587, -30.7589, 1.14", "-113.843, 144.192, -31.0667, 0.23", "-114.285, 145.199, -31.2191, 1.14", "-114.647, 146.205, -31.3314, 1.14", "-114.897, 147.06, -31.4102, 0.23", "-115.154, 148.038, -31.4738, 1.14", "-115.555, 149.682, -31.6465, 0.23", "-115.937, 151.361, -31.8923, 2.05", "-116.155, 152.439, -32.0955, 0.23", "-116.593, 154.588, -32.5826, 0.23", "-116.789, 155.528, -32.8214, 1.14", "-117.231, 157.533, -33.4765, 0.23", "-117.602, 159.202, -34.1085, 1.14", "-118.053, 161.238, -34.94, 0.23", "-118.248, 162.092, -35.2926, 3.18", "-118.53, 163.322, -35.7954, 3.18", "-119.57, 167.839, -37.6672, 1.14", "-119.846, 169.025, -38.1381, 1.82", "-120.23, 170.741, -38.8044, 0.23", "-120.406, 171.603, -39.1218, 0.68", "-120.515, 172.218, -39.3256, 0.23", "-120.829, 174.19, -39.8904, 0.68", "-120.985, 175.301, -40.1285, 0.23", "-121.184, 176.946, -40.4556, 2.27", "-121.338, 178.453, -40.7241, 2.5", "-121.532, 180.248, -41.019, 0.23", "-121.645, 181.124, -41.1039, 0.45", "-121.784, 182.325, -41.1506, 0.23", "-121.927, 183.526, -41.1874, 0.23", "-122.077, 184.604, -41.2281, 0.23", "-122.353, 186.532, -41.2491, 1.59", "-122.798, 189.431, -41.1905, 0.23", "-122.989, 190.527, -41.1533, 0.23", "-123.176, 191.454, -41.1238, 0.45", "-123.53, 192.884, -41.0961, 0.23", "-123.614, 193.209, -41.0962, 0.91", "-124.015, 194.775, -41.1486, 0.23", "-124.225, 195.581, -41.2233, 0.23", "-124.659, 197.196, -41.3443, 2.73", "-125.118, 199.133, -41.4681, 0.23", "-125.248, 199.775, -41.5194, 0.23", "-125.464, 201.057, -41.6534, 0.23", "-125.582, 201.913, -41.7612, 0.91", "-125.754, 203.537, -41.9841, 0.23", "-125.86, 204.613, -42.1506, 1.14", "-126.041, 206.35, -42.4633, 0.23", "-126.199, 207.629, -42.6791, 1.82", "-126.291, 208.298, -42.7887, 1.82", "-126.618, 210.651, -43.1744, 0.23", "-126.778, 211.911, -43.4322, 1.14", "-127.045, 213.878, -43.8678, 0.23", "-127.239, 215.21, -44.1767, 2.05", "-127.373, 216.056, -44.4143, 2.73", "-127.613, 217.512, -44.8456, 0.23", "-128.021, 219.722, -45.5454, 1.14", "-128.416, 221.905, -46.3245, 0.23", "-128.57, 222.839, -46.6881, 0.68", "-128.784, 224.172, -47.2325, 0.23", "-128.993, 225.59, -47.816, 2.27", "-129.139, 226.636, -48.2579, 2.27", "-129.421, 229.109, -49.2779, 0.23", "-129.482, 230.223, -49.745, 0.91", "-129.477, 231.782, -50.3709, 0.23", "-129.399, 232.968, -50.8142, 1.36", "-129.114, 235.26, -51.7274, 0.45", "-129.031, 235.774, -51.9328, 0.45", "-128.705, 237.241, -52.5251, 1.59", "-128.28, 238.823, -53.2338, 0.91", "-127.945, 239.935, -53.7962, 0.23", "-127.517, 241.408, -54.561, 0.23", "-126.979, 243.583, -55.7949, 2.05", "-126.751, 244.768, -56.54, 0.23", "-126.584, 245.815, -57.2453, 1.14", "-126.396, 247.505, -58.4125, 1.14", "-126.302, 249.801, -60.0589, 0.23", "-126.343, 252.05, -61.6581, 1.82", "-126.506, 253.973, -63.0196, 0.45", "-126.605, 254.572, -63.4408, 1.36", "-126.89, 255.692, -64.2075, 1.36", "-127.465, 257.355, -65.3033, 0.23", "-127.893, 258.23, -65.8959, 1.14", "-128.286, 258.933, -66.3138, 1.14", "-128.846, 259.867, -66.8734, 0.68", "-129.85, 261.648, -67.9923, 0.23", "-130.66, 263.141, -68.9164, 1.82", "-131.706, 265.176, -70.1054, 0.23", "-132.254, 266.246, -70.7449, 0.91", "-133.023, 267.84, -71.6891, 0.23", "-133.5, 268.956, -72.3595, 1.82" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-81.6518, 94.4898, -27.9427, 0.23", "-81.8129, 96.1675, -28.6092, 0.23", "-82.0204, 97.3262, -29.0899, 0.68", "-82.3898, 99.0472, -29.7588, 0.23", "-82.7487, 100.363, -30.2579, 0.23", "-83.4384, 102.69, -31.1243, 0.68", "-84.2325, 105.205, -32.0244, 0.23", "-84.6239, 106.246, -32.3687, 0.68", "-86.3555, 110.553, -33.7609, 0.23", "-87.092, 112.298, -34.2973, 2.05", "-87.4599, 113.164, -34.5376, 2.73", "-89.3214, 117.479, -35.4927, 0.23", "-90.3262, 119.805, -35.9698, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "0.698588, 60.313, -32.7197, 0.23", "5.28319, 68.0468, -34.146, 0.23", "11.2785, 74.8405, -34.2541, 0.23", "17.6236, 81.1927, -33.1833, 0.23", "23.3671, 87.8892, -31.1645, 0.23", "29.2262, 94.403, -28.9238, 0.23", "35.2299, 100.686, -26.4513, 0.23", "39.7164, 108.122, -23.82, 0.23", "43.2722, 115.503, -19.9355, 0.23", "47.6469, 121.826, -15.203, 0.23", "50.965, 129.681, -12.0581, 0.23", "54.7804, 137.528, -9.50978, 0.23", "58.6949, 145.679, -8.40402, 0.23", "62.9336, 153.735, -8.80744, 0.23", "66.926, 161.873, -7.90625, 0.23", "70.9503, 169.787, -5.92799, 0.23", "76.3528, 176.478, -3.11985, 0.23", "82.07, 183.288, -1.4075, 0.23", "89.2573, 188.659, -0.55041, 0.23", "96.4724, 193.855, 0.883023, 0.23", "102.792, 200.125, 2.44247, 0.23", "109.24, 206.378, 3.45373, 0.23", "115.831, 212.365, 4.95217, 0.23", "122.676, 217.502, 7.74094, 0.23", "129.738, 222.657, 9.8868, 0.23", "136.506, 228.44, 11.3553, 0.23", "143.639, 233.757, 12.7794, 0.23", "151.802, 237.361, 13.711, 0.23", "160.01, 239.875, 16.2485, 0.23", "168.005, 242.667, 19.1596, 0.23", "174.776, 247.266, 22.8692, 0.23" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.698588, 60.313, -32.7197, 0.68", "6.46083, 69.2339, -34.8758, 0.23", "13.5352, 77.2615, -36.3416, 0.23" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-89.9643, -23.457, -28.9889, 0.23", "-96.7815, -19.6649, -33.1782, 0.23", "-104.371, -16.0185, -35.8924, 0.23", "-112.387, -12.7648, -37.6956, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-89.9643, -23.457, -28.9889, 0.68", "-95.5984, -27.639, -30.3486, 0.23", "-101.722, -30.9893, -31.7793, 0.23", "-107.315, -35.04, -33.6065, 0.23", "-112.496, -39.0636, -36.4327, 0.23", "-118.054, -42.9773, -38.6156, 0.23", "-123.366, -47.1928, -40.876, 0.23", "-129.306, -50.6296, -42.7996, 0.23", "-134.889, -54.6535, -44.7125, 0.23", "-140.588, -57.5689, -47.8213, 0.23", "-146.614, -59.3177, -51.1381, 0.23", "-152.955, -61.021, -53.8345, 0.23", "-158.131, -63.8041, -57.8428, 0.23", "-162.387, -65.6489, -63.2167, 0.23", "-167.369, -68.2778, -67.5556, 0.23", "-172.737, -70.6598, -71.557, 0.23", "-178.256, -72.2238, -75.7341, 0.23", "-182.896, -73.3331, -80.9804, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-42.0827, -21.7385, -10.1644, 1.36", "-45.1739, -22.474, -12.7722, 1.36", "-47.6867, -23.1465, -14.9413, 0.23", "-48.9893, -23.59, -16.0948, 1.14", "-51.8055, -24.6557, -18.5606, 0.23", "-53.8081, -25.4694, -20.2354, 1.14", "-54.8938, -25.9429, -21.1131, 1.14", "-55.6208, -26.3555, -21.6541, 1.14", "-57.1748, -27.464, -22.804, 0.23", "-57.831, -27.9813, -23.2324, 1.14", "-59.0953, -29.016, -23.842, 1.14", "-59.9923, -29.7635, -24.1888, 0.23", "-61.4453, -30.9606, -24.6735, 0.91", "-63.7394, -32.8037, -25.4628, 1.59", "-65.2852, -34.0732, -26.0244, 1.59", "-66.1425, -34.8081, -26.3577, 0.23", "-67.4, -35.9035, -26.872, 1.36", "-68.8751, -37.1624, -27.468, 0.45", "-70.147, -38.2235, -27.9968, 0.45", "-71.3821, -39.3957, -28.4098, 1.59", "-71.9943, -40.0585, -28.6817, 2.05" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-42.0827, -21.7385, -10.1644, 3.18", "-44.8552, -24.7539, -10.8911, 3.18", "-49.0317, -29.4994, -11.8464, 2.73", "-51.9147, -32.7753, -12.5058, 2.5", "-54.7151, -35.9573, -13.1464, 2.5", "-56.605, -38.1046, -13.5787, 2.5", "-58.7123, -40.4991, -14.0607, 3.41", "-61.2135, -43.4042, -14.7232, 3.86" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "183.541, -98.2958, -40.0865, 0.23", "193.507, -108.729, -42.088, 0.23" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "183.541, -98.2958, -40.0865, 0.68", "189.193, -103.329, -42.8393, 0.23", "194.807, -108.268, -45.82, 0.23", "200.194, -113.95, -47.794, 0.23" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "98.8724, 24.4667, -2.15959, 1.14", "100.801, 25.0357, -1.76695, 1.14", "103.293, 25.7882, -1.50602, 0.68", "106.249, 26.7103, -1.39053, 0.68", "108.604, 27.4379, -1.37976, 0.68", "110.667, 28.075, -1.41767, 0.68", "112.451, 28.6941, -1.49063, 1.36", "115.006, 29.6983, -1.69793, 2.27", "116.844, 30.4447, -1.88346, 1.36", "117.687, 30.7469, -1.98809, 2.27", "119.048, 31.2481, -2.20143, 2.05", "121.311, 32.0716, -2.55638, 1.59", "123.641, 32.9313, -2.79765, 0.91", "125.679, 33.6754, -2.80427, 0.91", "127.996, 34.4931, -2.78933, 1.36" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "98.8724, 24.4667, -2.15959, 0.45", "100.098, 25.3482, -0.759605, 0.45", "102.162, 26.8141, 1.38134, 0.45", "103.828, 27.998, 3.11023, 1.36", "105.696, 29.325, 5.04822, 0.45", "107.494, 30.6026, 6.91402, 0.91", "108.665, 31.4346, 8.12918, 0.23", "109.351, 31.9669, 8.81582, 2.05" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "78.8499, -96.1532, 69.8165, 0.23", "76.4867, -97.7754, 71.2821, 0.23", "75.6386, -98.2675, 71.9173, 0.23", "75.0225, -98.5553, 72.3952, 1.36", "74.3924, -98.8176, 72.8733, 1.36", "72.4399, -99.5035, 74.1691, 0.23", "71.3387, -99.8584, 74.8493, 0.91", "68.8455, -100.54, 76.2979, 0.23", "66.6374, -101.06, 77.4829, 1.14", "65.8575, -101.223, 77.8802, 1.14", "63.0144, -101.769, 79.2939, 0.23", "61.755, -102.012, 79.8941, 1.36", "59.5658, -102.513, 80.9527, 0.23", "56.8176, -103.231, 82.2931, 1.14", "53.5698, -104.181, 83.9731, 0.23", "51.6959, -104.785, 85.0105, 1.36", "51.0125, -105.026, 85.4139, 1.36", "48.2853, -106.01, 87.1221, 0.23", "47.6129, -106.271, 87.5733, 1.14", "46.887, -106.61, 88.078, 1.14", "45.9887, -107.062, 88.6824, 0.23", "45.3245, -107.367, 89.1204, 0.68", "43.5684, -107.988, 90.192, 0.23", "42.6304, -108.289, 90.7981, 0.91", "42.0917, -108.507, 91.1887, 0.23", "41.0015, -109.069, 92.0665, 0.91", "39.6062, -110.072, 93.3523, 0.23", "38.476, -111.149, 94.4909, 1.14", "37.2837, -112.605, 95.715, 0.23", "36.5106, -113.758, 96.596, 2.27", "36.1779, -114.364, 97.0094, 2.27", "34.9793, -116.842, 98.7243, 0.23", "34.4782, -117.938, 99.4676, 1.36", "33.2506, -120.728, 101.363, 0.23", "32.6739, -121.978, 102.264, 2.27", "31.5172, -124.397, 104.203, 0.23", "30.6931, -126.075, 105.654, 0.91", "30.132, -127.261, 106.774, 0.23", "29.6432, -128.371, 107.885, 1.59", "28.8755, -130.514, 110.09, 0.23", "28.4723, -131.867, 111.446, 1.82", "28.1749, -133.178, 112.699, 1.82", "27.8586, -134.977, 114.228, 0.23", "27.67, -136.25, 115.241, 1.14", "27.377, -138.003, 116.517, 0.23", "27.2352, -138.915, 117.085, 1.14", "27.0395, -140.42, 117.987, 0.23", "26.8118, -141.642, 118.691, 1.14", "26.3109, -143.786, 119.932, 0.23", "26.0758, -144.637, 120.445, 1.14", "25.6012, -146.255, 121.424, 0.23", "25.2558, -147.472, 122.147, 0.23", "24.6309, -149.701, 123.426, 1.14", "24.121, -151.578, 124.487, 0.23", "23.7361, -152.973, 125.256, 0.23", "23.0367, -155.537, 126.615, 0.91", "22.5945, -157.059, 127.383, 0.23", "22.0449, -158.841, 128.128, 0.91", "21.448, -160.835, 128.867, 0.23", "20.8486, -162.659, 129.449, 1.59", "20.1289, -164.894, 130.115, 0.45", "19.129, -167.833, 130.972, 2.27", "17.9515, -171.174, 131.987, 0.23", "17.3139, -172.92, 132.43, 0.23", "16.8664, -173.967, 132.661, 0.23", "15.8053, -176.123, 133.105, 1.14", "14.8628, -177.851, 133.453, 0.23", "13.7084, -179.861, 133.877, 0.23", "11.3544, -183.789, 134.809, 1.36", "9.43048, -186.878, 135.519, 0.23", "8.05015, -188.932, 135.978, 2.05", "5.76823, -192.143, 136.658, 0.23", "5.13491, -193.019, 136.843, 0.45", "4.32, -194.1, 137.095, 0.45", "3.25267, -195.413, 137.541, 0.23", "1.70701, -197.379, 138.186, 0.91", "1.12728, -198.028, 138.394, 0.23", "0.222108, -198.737, 138.641, 1.14" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "78.8499, -96.1532, 69.8165, 0.45", "79.4464, -97.8338, 71.6038, 0.45", "80.0343, -99.2947, 73.1785, 0.45", "80.4481, -100.383, 74.3439, 0.45", "81.1763, -102.316, 76.3634, 0.45", "81.7195, -103.655, 77.7081, 0.68", "82.3005, -104.994, 78.9541, 0.23", "82.7081, -105.748, 79.6538, 0.91", "83.2137, -106.551, 80.3681, 0.23", "83.6911, -107.302, 80.9498, 1.36", "84.3867, -108.459, 81.7296, 1.82", "85.6814, -110.686, 83.1252, 0.45", "87.3295, -113.598, 84.8425, 1.82", "88.2964, -115.236, 85.8023, 0.23", "89.4269, -117.102, 86.8855, 0.68", "90.2321, -118.468, 87.6753, 0.91", "90.9136, -119.693, 88.3684, 1.59", "91.8866, -121.507, 89.2998, 2.73" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "101.619, -77.0069, 41.1345, 0.23", "104.723, -78.6264, 40.7786, 0.23", "106.526, -79.3668, 40.5932, 0.91", "108.403, -80.0033, 40.432, 0.23", "109.615, -80.3519, 40.3561, 0.68", "111.809, -80.9237, 40.3559, 0.23", "114.555, -81.5757, 40.466, 0.45", "115.912, -81.7429, 40.6229, 0.23", "117.25, -81.7765, 40.8321, 1.14", "119.243, -81.7009, 41.2548, 0.23", "121.622, -81.5099, 41.8641, 0.23", "122.901, -81.3385, 42.2459, 1.82", "125.495, -80.8377, 43.0466, 0.68", "127.917, -80.27, 43.5676, 1.14", "128.925, -79.9863, 43.6985, 0.23", "130.021, -79.6267, 43.7381, 1.14", "132.58, -78.687, 43.5741, 0.23", "135.033, -77.7457, 43.2883, 0.23", "138.23, -76.512, 42.7746, 0.23", "140.447, -75.6757, 42.3632, 1.14", "143.063, -74.6519, 41.9172, 0.23", "144.888, -73.9169, 41.6617, 1.14", "146.635, -73.231, 41.5049, 0.23", "147.943, -72.7653, 41.5418, 0.91", "149.729, -72.2394, 41.8674, 0.23", "151.456, -71.9778, 42.356, 0.91", "152.319, -72.0186, 42.7316, 0.23", "153.788, -72.2898, 43.4844, 2.27", "156.088, -72.9612, 44.6578, 0.23", "156.853, -73.2374, 44.9669, 0.91", "158.999, -74.1117, 45.6167, 0.23", "161.187, -75.0944, 46.0738, 0.91", "162.828, -75.8637, 46.3323, 0.23", "165.4, -77.035, 46.5431, 0.91", "168.254, -78.2433, 46.5816, 0.23", "169.836, -78.7943, 46.5468, 1.36", "172.225, -79.4289, 46.4508, 0.23", "174.578, -79.9185, 46.2827, 0.23", "176.469, -80.2647, 46.1708, 0.45", "177.829, -80.4553, 46.1228, 1.14", "180.795, -80.7688, 46.1406, 0.23", "183.034, -80.9436, 46.1547, 0.45", "186.013, -81.1048, 46.1906, 0.23", "187.985, -81.1949, 46.3178, 0.23", "189.102, -81.2624, 46.4562, 1.14", "190.675, -81.391, 46.7168, 2.5", "192.229, -81.5578, 47.0456, 2.73", "193.573, -81.724, 47.3392, 1.82", "196.314, -82.147, 47.9648, 0.23", "197.225, -82.3308, 48.1255, 0.68", "199.848, -82.9024, 48.5576, 0.68", "202.51, -83.5329, 48.9383, 0.23", "204.132, -83.9656, 49.107, 0.91", "205.981, -84.5485, 49.1712, 0.23", "208.052, -85.3844, 48.9775, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "101.619, -77.0069, 41.1345, 0.68", "102.736, -80.5516, 41.968, 0.68", "103.821, -83.2575, 42.7078, 1.14", "104.908, -85.7414, 43.5585, 0.45", "106.081, -88.1479, 44.4799, 0.45", "107.144, -90.1257, 45.3492, 1.14", "107.967, -91.5829, 46.0247, 1.14", "108.858, -92.8564, 46.7881, 0.23", "110.123, -94.4341, 47.8052, 0.68", "111.032, -95.5032, 48.4744, 0.68", "112.392, -97.2382, 49.3586, 0.23", "113.465, -98.7159, 49.9813, 1.36", "114.202, -99.7436, 50.3189, 2.05", "115.33, -101.298, 50.6965, 2.05", "116.343, -102.715, 50.9908, 0.91", "117.334, -104.148, 51.2831, 1.36", "118.739, -106.064, 51.6627, 0.23", "120.487, -108.396, 52.2178, 1.36", "121.196, -109.305, 52.4785, 1.36", "123.415, -111.928, 53.4675, 0.68", "124.096, -112.683, 53.8281, 0.68", "125.514, -114.304, 54.6863, 0.45", "126.782, -115.935, 55.5949, 0.45", "127.91, -117.67, 56.5476, 0.23", "128.905, -119.383, 57.3716, 0.23", "129.937, -121.486, 58.314, 1.59", "130.755, -123.626, 59.3708, 0.23", "131.099, -124.79, 59.9599, 2.5", "131.546, -126.658, 60.8295, 2.5", "132.038, -129.363, 61.9368, 2.5", "132.796, -133.604, 63.502, 0.23", "133.451, -137.341, 64.9075, 0.23", "133.689, -138.622, 65.4173, 0.23", "134.21, -141.17, 66.4525, 1.36", "134.851, -144.411, 67.7623, 2.27", "135.129, -146.25, 68.4098, 2.27" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "211.436, -32.9218, 63.3816, 0.23", "214.568, -34.3703, 64.7778, 0.23", "218.578, -36.0046, 66.372, 1.36", "222.195, -37.1942, 67.5925, 0.23", "223.917, -37.6916, 68.0917, 0.91", "227.156, -38.5499, 68.8917, 0.23", "228.304, -38.8269, 69.1303, 0.68", "229.148, -38.951, 69.2269, 0.23", "231.999, -39.1994, 69.1088, 0.68", "233.106, -39.286, 68.9625, 0.23", "234.436, -39.4505, 68.7515, 1.36", "236.155, -39.7344, 68.4502, 1.36", "237.72, -40.011, 68.2245, 0.23", "240.615, -40.544, 67.8655, 1.14", "243.35, -41.0352, 67.5788, 0.23", "245.363, -41.3424, 67.4154, 0.91", "247.669, -41.6502, 67.2676, 0.23", "251.077, -42.0559, 67.087, 1.59", "252.554, -42.1933, 67.031, 1.59", "255.781, -42.4001, 66.9518, 0.23", "257.495, -42.4659, 66.912, 1.59", "258.699, -42.4727, 66.8741, 1.59", "260.825, -42.4301, 66.7735, 0.23", "262.26, -42.4085, 66.6898, 0.91", "264.01, -42.4322, 66.6208, 0.23", "266.618, -42.5278, 66.5427, 1.36", "271.217, -42.7474, 66.4329, 0.23", "273.497, -42.8568, 66.3954, 1.59", "278.494, -43.0715, 66.3626, 0.23", "281.536, -43.1605, 66.3845, 1.14", "284.201, -43.1672, 66.5478, 0.23", "286.188, -43.0773, 66.7947, 1.36", "288.137, -42.8663, 67.2093, 1.36", "289.8, -42.5409, 67.704, 0.23", "291.195, -42.0967, 68.2411, 1.59", "295.287, -40.4617, 70.0107, 0.23", "297.66, -39.4445, 71.0942, 1.36", "300.221, -38.4297, 72.178, 0.23", "301.313, -38.0468, 72.5815, 1.59", "303.814, -37.4142, 73.3217, 0.23", "305.626, -37.1856, 73.6613, 1.36", "307.363, -37.2581, 73.8853, 1.36", "310.192, -37.8463, 74.3113, 0.23", "311.604, -38.2291, 74.5472, 1.14", "314.327, -39.0231, 75.1387, 0.23", "316.611, -39.7192, 75.8051, 1.36", "320.88, -40.9283, 77.2924, 0.23", "324.258, -41.7439, 78.6241, 0.23", "327.177, -42.3077, 79.9008, 1.14", "329.62, -42.7335, 80.975, 0.23", "332.252, -43.0724, 82.1023, 1.36", "333.865, -43.2167, 82.764, 0.23", "335.519, -43.3042, 83.367, 1.59", "338.07, -43.4428, 84.2539, 0.23", "342.2, -43.9079, 85.5924, 0.23", "343.892, -44.1603, 86.0286, 0.23", "345.055, -44.3594, 86.2714, 1.36" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "211.436, -32.9218, 63.3816, 0.23", "212.365, -33.7364, 60.8004, 0.23", "212.98, -34.3322, 59.1977, 0.23", "213.553, -34.9417, 57.7476, 1.14", "214.086, -35.5668, 56.4156, 0.23", "214.853, -36.5442, 54.618, 1.14", "215.583, -37.5545, 52.9912, 0.23", "215.842, -37.9527, 52.4996, 0.68", "216.168, -38.5334, 51.8845, 0.23", "216.602, -39.2772, 51.1422, 1.14", "217.787, -41.1936, 49.4582, 0.23", "218.387, -42.0934, 48.7472, 1.36", "219.183, -43.1906, 47.9007, 0.23", "220.17, -44.4318, 46.9424, 1.59", "221.596, -45.9805, 45.4996, 0.23", "223.576, -47.8287, 43.4593, 0.23", "224.294, -48.3801, 42.7, 0.23", "224.993, -48.8162, 41.904, 2.05", "226.462, -49.5339, 40.1649, 0.23", "228.856, -50.455, 37.1351, 0.23", "229.503, -50.6447, 36.2045, 1.59", "230.295, -50.7567, 34.9697, 0.23", "231.247, -50.7757, 33.5249, 2.27", "231.637, -50.7637, 32.9267, 0.91", "232.535, -50.7357, 31.5924, 0.23", "233.556, -50.8108, 30.2154, 1.36", "234.807, -50.959, 28.4733, 0.23", "235.974, -51.2233, 26.9226, 1.82", "236.703, -51.4378, 26.0525, 0.23", "237.595, -51.7762, 25.0287, 0.23", "238.032, -51.9794, 24.5505, 1.14", "239.715, -53.0516, 22.7297, 0.23", "241.262, -54.1622, 21.1224, 1.36", "242.322, -54.9681, 20.0584, 0.91", "243.518, -55.8433, 18.8974, 0.23", "244.536, -56.6229, 17.8843, 1.59", "246.407, -58.0853, 16.0616, 0.23" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "78.2794, -68.5832, -7.0932, 0.23", "79.4865, -69.9114, -7.11214, 0.23", "80.1905, -70.7664, -7.16725, 2.05", "81.6737, -72.5285, -7.29706, 0.45", "82.4684, -73.4471, -7.38901, 0.45", "83.4805, -74.6148, -7.50312, 0.45", "84.4749, -75.751, -7.62592, 1.82", "85.6443, -77.108, -7.84729, 0.45", "86.5786, -78.1829, -8.05121, 0.45", "87.3092, -78.9899, -8.25282, 1.59", "88.3411, -80.2084, -8.53009, 0.23", "88.8977, -80.8861, -8.68991, 0.91", "89.7762, -81.8726, -8.96682, 0.23", "90.3607, -82.5168, -9.16127, 1.36", "90.9778, -83.2345, -9.40103, 1.36", "91.9947, -84.4234, -9.80431, 0.45", "92.9131, -85.4799, -10.1955, 2.27", "94.0523, -86.7945, -10.6576, 0.23", "94.8663, -87.7121, -10.9689, 0.23", "95.5761, -88.504, -11.2337, 2.05" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "78.2794, -68.5832, -7.0932, 0.91", "78.6702, -70.207, -10.5905, 0.91", "78.9955, -71.6969, -13.5397, 0.23", "79.1331, -72.6509, -15.5027, 1.36", "79.2125, -73.6862, -17.7001, 0.23", "79.2545, -74.6911, -19.8127, 0.91", "79.2674, -75.4886, -21.5486, 0.23", "79.1545, -76.5758, -24.0596, 1.36", "78.8157, -77.7423, -27.5357, 0.23", "78.3985, -78.4228, -30.4461, 0.23", "78.1341, -78.5867, -31.6844, 1.14", "77.2458, -78.6944, -34.9617, 0.23", "75.8877, -78.6108, -39.1697, 1.82", "74.2406, -78.3266, -43.477, 0.23", "73.154, -78.0904, -45.8667, 0.23", "71.1477, -77.613, -49.6267, 0.68", "69.653, -77.2352, -52.1717, 0.23", "68.6505, -76.9903, -53.7011, 1.36", "66.8027, -76.5975, -56.3101, 0.23", "64.6955, -76.3397, -59.1964, 1.59", "62.3505, -76.2419, -62.3826, 0.23", "60.7801, -76.3089, -64.4663, 0.23", "58.9679, -76.5655, -66.7896, 1.36", "56.999, -77.0394, -69.2654, 0.23", "55.6218, -77.5404, -71.0145, 0.23", "53.3549, -78.6996, -73.9196, 1.82", "51.9183, -79.5778, -75.8481, 0.45", "50.0511, -80.7916, -78.5573, 0.23", "49.2389, -81.3021, -79.8291, 0.91", "47.771, -82.1037, -82.1837, 0.23", "46.728, -82.4872, -83.8405, 1.14", "44.3983, -82.9619, -87.5047, 0.23", "42.7455, -83.1533, -90.1183, 1.36", "41.3661, -83.249, -92.3252, 0.23", "40.4835, -83.3399, -93.6408, 0.91", "39.2047, -83.5188, -95.4733, 0.23", "38.3071, -83.6714, -96.7298, 0.23", "37.5827, -83.8447, -97.656, 1.14", "35.1511, -84.4122, -100.631, 0.23", "33.3837, -84.8285, -102.803, 0.91", "31.8757, -85.1753, -104.754, 0.23", "31.2365, -85.329, -105.592, 1.14", "30.3327, -85.5721, -106.789, 1.14", "29.098, -86.0353, -108.406, 0.23", "27.8415, -86.6163, -110.107, 0.91", "26.2984, -87.4157, -112.295, 0.23", "25.5415, -87.8653, -113.392, 0.23", "24.0146, -88.8321, -115.682, 1.14", "22.3995, -90.0267, -118.385, 0.23", "21.1728, -91.0475, -120.542, 1.36", "19.7022, -92.1844, -123.226, 0.23", "18.9493, -92.7136, -124.547, 1.36", "18.4424, -93.0242, -125.406, 1.36", "17.0134, -93.7343, -127.899, 0.23", "16.2518, -94.0624, -129.217, 1.14", "14.8732, -94.6398, -131.324, 0.23", "13.7979, -95.0013, -132.918, 0.91", "12.7416, -95.3157, -134.399, 0.23", "11.277, -95.7955, -136.316, 0.23", "10.3207, -96.178, -137.434, 0.45", "8.74694, -96.8774, -139.248, 1.14", "7.40158, -97.6551, -140.668, 0.23", "6.60817, -98.0869, -141.501, 0.23", "5.20885, -98.8617, -142.963, 1.14", "3.68748, -99.7196, -144.596, 0.23", "1.45935, -101.022, -147.206, 1.14", "-0.085102, -102.018, -149.135, 0.23", "-1.77777, -103.208, -151.291, 0.23", "-2.75199, -103.928, -152.591, 0.23", "-4.81082, -105.543, -155.544, 0.23", "-5.50627, -106.122, -156.58, 0.68", "-7.22083, -107.768, -159.304, 0.23", "-8.18596, -108.733, -160.941, 1.14", "-8.87894, -109.569, -162.125, 0.23", "-10.2342, -111.29, -164.479, 1.36", "-13.3936, -114.017, -174.651, 1.36", "-16.4264, -117.257, -184.724, 1.36", "-20.7671, -120.738, -194.202, 1.36", "-23.7882, -125.381, -203.744, 1.36", "-27.5404, -129.03, -213.424, 1.36" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "78.5865, -6.89752, 45.2539, 1.14", "79.6681, -9.21443, 46.0081, 1.14", "81.2383, -12.696, 46.8051, 0.45", "82.5845, -15.8909, 47.5117, 0.91", "83.2455, -17.6809, 47.8584, 0.23", "83.5093, -18.4979, 48.0393, 1.14", "84.1541, -21.2489, 48.8098, 0.23", "84.3989, -24.5077, 49.9911, 0.91", "84.2244, -27.2796, 51.1382, 0.91", "83.908, -29.0958, 52.0069, 2.05", "83.1911, -31.7995, 53.5027, 0.68", "81.9589, -35.5421, 55.7141, 1.59", "80.4924, -39.1419, 57.937, 0.23", "80.0208, -40.1037, 58.5243, 1.36", "78.7793, -42.36, 59.8013, 0.45", "78.2295, -43.2745, 60.2586, 1.14", "76.4509, -46.0673, 61.2914, 0.23", "75.246, -47.9384, 61.7824, 1.14", "74.4658, -49.0148, 61.9896, 0.45", "73.3406, -50.5068, 62.2491, 2.27", "70.6107, -54.0198, 62.752, 0.23", "68.9424, -56.1462, 63.1004, 1.14", "68.3873, -56.8101, 63.2404, 0.23", "66.7302, -58.7253, 63.8651, 1.14", "64.5869, -61.2958, 65.0708, 0.23", "63.2711, -62.9202, 66.0122, 0.23", "62.4565, -64.0237, 66.7597, 0.23", "61.1719, -65.9535, 68.1537, 1.14", "59.516, -68.9606, 70.3665, 2.05", "58.3524, -71.6431, 72.3446, 0.68", "57.9715, -72.5855, 72.9978, 0.68", "56.7862, -75.3611, 74.7613, 0.68", "56.3465, -76.3327, 75.3319, 1.36", "55.2723, -78.5941, 76.5349, 0.23", "53.7298, -81.8477, 78.0446, 1.14", "52.598, -84.233, 79.1104, 0.23", "50.9613, -87.8599, 80.8035, 0.91", "49.6889, -90.7338, 82.1009, 0.23", "49.2657, -91.8192, 82.5403, 1.14", "48.4918, -94.4614, 83.3412, 0.45", "48.0814, -97.094, 83.8541, 1.14", "47.9407, -99.5401, 84.1303, 0.23", "47.903, -101.378, 84.207, 1.14", "47.8775, -103.716, 84.2004, 0.23", "47.8148, -106.297, 84.1621, 1.36", "47.4734, -110.923, 83.9702, 0.23", "47.2288, -112.955, 83.8118, 0.91", "46.8273, -115.713, 83.5343, 0.91" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "78.5865, -6.89752, 45.2539, 0.91", "79.8599, -5.82204, 47.16, 0.91", "80.6374, -5.16545, 48.3237, 0.91", "81.9488, -4.05789, 50.2866, 1.59" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-133.5, 268.956, -72.3595, 0.23", "-131.498, 270.605, -73.4747, 0.23", "-130.522, 271.67, -74.0436, 1.14", "-129.006, 273.72, -74.9787, 0.23", "-128.018, 275.332, -75.6156, 0.91", "-127.306, 276.757, -76.0859, 0.23", "-126.724, 278.147, -76.4271, 0.91", "-125.692, 281.666, -76.875, 0.23", "-125.357, 283.456, -76.9762, 0.23", "-125.176, 285.612, -76.8792, 0.23", "-125.117, 289.171, -76.3575, 0.91", "-125.177, 292.035, -75.7333, 0.23", "-125.314, 293.965, -75.1793, 1.59", "-125.638, 297.185, -74.0445, 0.23", "-125.921, 300.098, -72.8908, 0.91", "-126.169, 302.901, -71.6508, 0.23", "-126.295, 304.879, -70.6683, 1.36", "-126.456, 308.299, -69.0132, 0.23", "-126.469, 309.123, -68.6124, 0.23", "-126.404, 310.109, -68.0499, 0.23", "-126.218, 311.15, -67.5204, 0.23", "-125.63, 313.293, -66.471, 0.23" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-133.5, 268.956, -72.3595, 0.23", "-130.001, 267.417, -73.9069, 0.23", "-127.755, 266.43, -74.9003, 0.23", "-125.819, 265.578, -75.7568, 0.23", "-123.554, 264.582, -76.7585, 1.14", "-122.158, 263.969, -77.3759, 1.82", "-111.609, 259.37, -79.7565, 1.82" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "174.776, 247.266, 22.8692, 0.23", "180.599, 253.885, 25.0827, 0.23", "187.405, 259.595, 26.9285, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "174.776, 247.266, 22.8692, 0.68", "182.729, 256.337, 25.8225, 0.23", "190.442, 265.736, 28.4132, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "13.5352, 77.2615, -36.3416, 0.23", "22.6415, 86.0602, -41.4381, 0.23", "29.8078, 97.0868, -45.3706, 0.23", "37.7249, 107.542, -49.3484, 0.23", "45.6964, 118.193, -52.6608, 0.23", "54.7227, 126.927, -58.0013, 0.23", "61.7713, 136.04, -65.3525, 0.23", "69.6714, 144.106, -72.9942, 0.23", "78.6722, 152.395, -79.0124, 0.23", "87.3355, 159.869, -86.3924, 0.23", "94.5509, 166.92, -95.5231, 0.23", "102.521, 172.135, -105.179, 0.23", "111.478, 175.744, -114.659, 0.23", "121.151, 181.834, -121.988, 0.23", "128.738, 188.11, -131.351, 0.23", "134.904, 194.63, -141.564, 0.23", "141.711, 200.879, -151.526, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "13.5352, 77.2615, -36.3416, 0.68", "17.9011, 84.6136, -36.6297, 0.23", "22.8288, 91.5784, -37.0114, 0.23" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-71.9943, -40.0585, -28.6817, 0.23", "-68.2981, -42.6218, -30.7698, 0.23", "-64.8773, -45.0609, -32.782, 0.23", "-62.5735, -46.6894, -34.1651, 0.23", "-59.0527, -49.349, -36.4454, 0.23", "-55.3413, -52.1527, -38.8494, 0.23", "-51.3653, -55.1562, -41.4246, 0.23", "-48.5667, -57.2584, -43.2974, 0.23", "-44.2139, -60.6911, -46.3185, 0.23", "-41.0704, -63.2934, -48.6381, 0.23", "-32.5467, -70.8486, -55.1827, 0.23", "-21.6045, -76.5861, -59.3844, 0.23", "-10.3792, -80.9251, -64.375, 0.23", "2.1408, -83.4193, -66.6581, 0.23", "14.5065, -84.8127, -70.2947, 0.23", "27.1339, -84.93, -73.151, 0.23", "39.8345, -83.4625, -75.1235, 0.23", "52.6715, -81.9094, -75.4821, 0.23", "65.4738, -80.0754, -75.1727, 0.23", "77.8161, -76.2815, -76.0558, 0.23", "89.9151, -73.3176, -79.5426, 0.23", "102.631, -72.1882, -81.6452, 0.23", "115.421, -70.2494, -81.5149, 0.23", "128.251, -68.7964, -82.2848, 0.23", "140.762, -67.5345, -85.3357, 0.23", "153.112, -65.5375, -88.6291, 0.23", "165.209, -65.2882, -93.252, 0.23", "177.361, -66.3909, -97.6374, 0.23", "188.982, -66.3673, -103.378, 0.23", "200.023, -65.4484, -110.095, 0.23", "210.899, -62.7903, -116.586, 0.23", "222.01, -59.3503, -122.249, 0.23", "231.814, -53.4686, -128.307, 0.23", "241.35, -46.1585, -133.148, 0.23", "250.264, -37.218, -136.211, 0.23", "259.483, -28.0969, -137.328, 0.23", "268.915, -19.1213, -136.68, 0.23", "278.288, -10.0807, -136.95, 0.23", "286.415, 0.0483222, -138.135, 0.23", "294.148, 10.2613, -140.505, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-71.9943, -40.0585, -28.6817, 0.23", "-75.9815, -40.7537, -29.3234, 0.23", "-79.2427, -40.9598, -29.6492, 0.23", "-82.0138, -41.135, -29.926, 0.23", "-84.0741, -41.2652, -30.1318, 0.23", "-86.3606, -41.4097, -30.3602, 0.23", "-87.4775, -41.4803, -30.4717, 0.23", "-90.5478, -41.3634, -30.7233, 0.23", "-102.934, -40.3927, -33.2245, 0.23", "-115.506, -40.5892, -34.8167, 0.23", "-127.723, -43.0153, -37.2347, 0.23", "-139.845, -44.7788, -40.5171, 0.23", "-152.238, -46.1677, -42.805, 0.23", "-164.461, -49.5373, -43.467, 0.23", "-176.253, -54.239, -44.2073, 0.23", "-188.65, -56.8608, -43.6242, 0.23", "-200.942, -59.8828, -42.7447, 0.23", "-212.693, -64.2441, -40.6711, 0.23", "-223.429, -69.8095, -36.7295, 0.23", "-233.813, -76.738, -34.118, 0.23", "-243.735, -83.2073, -29.4385, 0.23" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-61.2135, -43.4042, -14.7232, 0.91", "-65.6665, -46.8341, -13.7786, 0.91", "-68.3705, -48.9214, -13.2274, 0.91", "-70.3405, -50.4412, -12.7539, 1.36", "-73.5026, -52.859, -11.9609, 2.05", "-76.2378, -54.9736, -11.2957, 1.36", "-77.0172, -55.5696, -11.0882, 1.36", "-79.3672, -57.3508, -10.2351, 0.68", "-82.0511, -59.2816, -9.18882, 1.36", "-83.8129, -60.4725, -8.55489, 2.5", "-87.9517, -63.1437, -6.99119, 1.59", "-91.8243, -65.4716, -5.50174, 2.05", "-95.5738, -67.665, -4.06709, 2.05", "-99.4882, -69.856, -2.5983, 3.86", "-103.846, -72.1747, -1.05904, 2.73", "-108.786, -74.6909, 0.600646, 1.59", "-112.6, -76.579, 1.79776, 0.68", "-114.115, -77.3386, 2.19535, 0.68", "-118.288, -79.4433, 3.08106, 1.82", "-119.854, -80.1819, 3.35137, 1.82", "-122.796, -81.4683, 3.61344, 0.23", "-123.886, -81.9216, 3.59046, 0.23", "-126.845, -83.143, 3.38908, 1.59", "-129.536, -84.2246, 3.0186, 1.59", "-132.493, -85.3247, 2.50197, 2.73", "-135.155, -86.206, 2.15802, 2.73", "-137.522, -86.91, 2.06237, 2.73", "-140.628, -87.7483, 2.21699, 1.59", "-143.754, -88.531, 2.65996, 2.5", "-149.003, -89.7995, 3.7652, 0.68", "-153.531, -90.897, 4.95883, 0.68", "-157.718, -91.8727, 6.21998, 1.14", "-161.269, -92.6241, 7.4494, 2.27", "-165.232, -93.3776, 9.0713, 2.27", "-167.186, -93.7342, 10.0426, 2.27" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-61.2135, -43.4042, -14.7232, 0.91", "-62.4032, -47.99, -14.6233, 0.91", "-63.1066, -50.6474, -14.5785, 0.45", "-63.7221, -53.0601, -14.5582, 1.14", "-64.2091, -54.955, -14.5706, 0.23", "-64.6259, -56.4941, -14.5886, 0.23", "-64.9703, -57.7129, -14.6263, 1.14", "-65.6972, -60.179, -14.7635, 0.45", "-66.1611, -61.8356, -14.9288, 0.68", "-66.7872, -64.1872, -15.3044, 0.23", "-67.1034, -65.5171, -15.5508, 0.91", "-67.4562, -67.3619, -15.8977, 0.23", "-67.8444, -69.9411, -16.4111, 1.36", "-68.1763, -72.6993, -16.9801, 0.23", "-68.4348, -75.38, -17.4763, 0.23", "-68.5386, -76.7371, -17.6988, 1.14", "-68.6604, -78.5859, -17.9112, 0.23", "-68.7893, -80.7898, -18.107, 0.23", "-68.8797, -82.2702, -18.2049, 1.14", "-69.1615, -85.5646, -18.308, 0.45", "-69.3701, -87.6779, -18.3048, 0.45", "-69.8437, -91.7441, -18.2999, 1.82", "-72.353, -100.825, -19.6284, 1.82", "-75.0064, -109.583, -22.1473, 1.82", "-78.9065, -117.771, -24.8692, 1.82", "-81.9784, -126.569, -26.7109, 1.82", "-83.8355, -135.865, -27.6589, 1.82", "-85.0027, -145.332, -27.8086, 1.82", "-86.1918, -154.799, -27.8595, 1.82", "-87.2242, -164.269, -28.3167, 1.82", "-86.975, -173.632, -30.0079, 1.82" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "127.996, 34.4931, -2.78933, 0.23", "130.188, 33.9319, -4.36105, 0.23", "131.092, 33.7292, -4.95713, 0.68", "132.563, 33.3993, -5.92721, 0.23", "133.241, 33.2474, -6.37389, 0.68", "134.611, 32.9403, -7.27707, 0.23", "134.996, 32.8538, -7.53138, 0.91", "135.854, 32.801, -8.01174, 0.23", "143.236, 30.7091, -12.0022, 0.23", "150.852, 30.0262, -16.0212, 0.23", "158.844, 28.7656, -19.0515, 0.23", "167.267, 27.9543, -20.7902, 0.23", "175.805, 26.7431, -21.2932, 0.23", "184.25, 25.669, -22.7646, 0.23", "192.54, 26.2597, -25.1202, 0.23" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "127.996, 34.4931, -2.78933, 0.68", "129.087, 35.0878, -2.78935, 0.68", "130.976, 35.9321, -2.8182, 2.05", "132.16, 36.4752, -2.76608, 2.05", "134.195, 37.5009, -2.5969, 0.68", "135.472, 38.1761, -2.4663, 1.36", "137.742, 39.3798, -2.21975, 2.27", "139.594, 40.3585, -1.99418, 0.68", "141.569, 41.3052, -1.7376, 0.68", "142.844, 41.8831, -1.57511, 1.59", "143.867, 42.3454, -1.43592, 2.73", "145.573, 43.1629, -1.21436, 2.5", "147.434, 44.1056, -0.999057, 1.14", "150.041, 45.3379, -0.704335, 0.68", "152.276, 46.2497, -0.562418, 1.14", "154.236, 46.9707, -0.438882, 0.45" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "109.351, 31.9669, 8.81582, 0.23", "111.466, 32.9457, 10.6948, 0.23", "113.471, 34.0877, 12.2728, 0.68", "114.809, 35.0617, 13.2747, 0.68", "116.223, 36.2686, 14.2998, 1.59", "117.372, 37.3742, 15.0563, 0.45", "118.635, 38.6019, 15.8733, 0.45", "119.52, 39.5133, 16.3633, 0.45", "121.187, 41.1065, 17.1348, 1.14", "123.021, 42.6608, 17.9349, 0.23", "124.612, 43.8858, 18.6252, 1.36", "126.034, 44.8266, 19.2562, 0.23", "127.244, 45.4462, 19.8372, 0.68", "128.671, 46.1145, 20.6059, 0.23", "130.048, 46.678, 21.3704, 1.36", "132.604, 47.6506, 22.8113, 0.23", "133.861, 48.1005, 23.5342, 1.14", "137.16, 49.3729, 25.4509, 0.23", "138.478, 49.9567, 26.3258, 0.23", "139.226, 50.34, 26.8447, 0.23", "140.644, 51.2251, 27.8768, 2.27", "142.125, 52.3144, 28.9529, 1.36", "144.454, 54.1915, 30.7078, 0.23", "146.465, 55.9255, 32.1897, 0.23", "147.959, 57.2364, 33.2121, 0.68", "150.452, 59.5196, 34.8438, 0.23", "151.731, 60.7866, 35.654, 0.23", "152.826, 61.9293, 36.2555, 1.14", "154.565, 63.7326, 37.0292, 0.23", "155.948, 65.0504, 37.5088, 2.27", "157.12, 66.0834, 37.9076, 2.27", "159.546, 68.0965, 38.6105, 0.23", "160.736, 69.0403, 38.9653, 0.91", "162.676, 70.5238, 39.4967, 0.23", "164.429, 71.7973, 40.0114, 1.36", "166.814, 73.4091, 40.7499, 0.23", "168.39, 74.3961, 41.2797, 1.14", "170.914, 75.9629, 42.2535, 0.23", "172.794, 77.2845, 43.3416, 1.36", "174.502, 78.6003, 44.6223, 0.23", "175.692, 79.6169, 45.8716, 1.36", "177.464, 81.3655, 48.4596, 0.23", "178.866, 83.0695, 51.2593, 1.82", "180.77, 86.1449, 56.3187, 0.23", "181.424, 87.4163, 58.4122, 2.05", "182.385, 89.5103, 61.8421, 0.68", "183.647, 92.4474, 66.5366, 1.14", "184.716, 94.7189, 69.9996, 1.36", "185.444, 96.0759, 71.9673, 0.23", "186.115, 97.4001, 73.6573, 0.23", "186.663, 98.7184, 75.2062, 0.23", "187.302, 100.619, 77.0983, 0.91", "187.703, 102.526, 78.892, 0.91", "187.995, 105.38, 81.5376, 0.23", "188.0, 107.588, 83.6077, 0.23", "187.795, 109.487, 85.292, 1.82", "187.492, 111.243, 86.8061, 0.45", "187.077, 113.387, 88.6952, 1.36", "186.73, 115.405, 90.6668, 0.23", "186.653, 116.454, 91.6652, 1.36", "186.635, 117.981, 93.1649, 0.23", "186.668, 119.958, 95.0976, 1.36", "186.725, 122.709, 97.9482, 0.23", "186.644, 125.122, 100.537, 2.05", "186.445, 127.345, 103.132, 0.68", "186.091, 130.454, 106.816, 1.59", "185.939, 131.458, 108.024, 1.59", "185.4, 134.168, 111.275, 0.23", "184.978, 135.707, 113.14, 0.23", "184.002, 138.545, 116.597, 0.23" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "109.351, 31.9669, 8.81582, 0.23", "108.685, 35.4172, 8.32724, 0.23", "108.375, 37.1344, 8.06216, 1.14", "108.086, 38.868, 7.79522, 0.23", "107.583, 41.7106, 7.3609, 1.14", "107.14, 44.0795, 7.00063, 0.23", "106.597, 46.8682, 6.57837, 0.68", "105.965, 50.3374, 6.019, 0.23", "105.735, 51.7012, 5.80447, 2.27", "105.135, 55.801, 5.2358, 0.91", "104.981, 56.9608, 5.09632, 0.91", "104.771, 58.7664, 4.90531, 1.59", "104.486, 62.2329, 4.6493, 0.23", "104.424, 63.7226, 4.54081, 0.23", "104.421, 66.3751, 4.35759, 2.05", "104.506, 67.7528, 4.18551, 2.05", "104.799, 70.4877, 3.69525, 0.23", "105.12, 72.4597, 3.1732, 0.91", "105.487, 73.9546, 2.60401, 0.68", "106.293, 76.4177, 1.44253, 0.23", "107.71, 79.5614, -0.331565, 1.14", "108.869, 81.4389, -1.62317, 0.23", "110.359, 83.1446, -3.06027, 0.23", "112.416, 84.925, -4.76709, 1.36", "113.247, 85.4807, -5.32029, 1.82", "114.594, 86.137, -6.04649, 0.45", "117.187, 87.2093, -7.08905, 0.91", "118.884, 87.8381, -7.6706, 0.23", "120.865, 88.5697, -8.20165, 0.91", "122.421, 89.1559, -8.53992, 0.23", "124.757, 90.1424, -8.98675, 1.36", "126.678, 91.1019, -9.4177, 0.23", "127.975, 91.8331, -9.7138, 1.36", "129.466, 92.7103, -10.1348, 1.82", "131.294, 93.818, -10.6455, 1.82", "133.724, 95.4406, -11.336, 0.45", "136.606, 97.7095, -12.1931, 1.14", "139.472, 100.507, -13.1582, 0.23", "141.5, 103.145, -13.8987, 1.14", "142.478, 105.075, -14.3177, 2.05", "142.948, 106.823, -14.5896, 2.05", "143.183, 109.473, -14.9271, 2.05", "143.106, 112.361, -15.2058, 0.91", "142.866, 114.681, -15.5374, 1.59", "142.56, 117.3, -16.0079, 0.23", "142.325, 119.714, -16.5635, 1.36", "142.099, 122.493, -17.2384, 0.23", "142.014, 123.54, -17.4999, 0.91", "141.716, 126.735, -18.3104, 0.23", "141.559, 128.097, -18.6736, 1.36", "141.0, 132.147, -19.7559, 0.23", "140.357, 135.651, -20.5783, 2.27", "139.863, 137.923, -20.9971, 0.23", "139.44, 139.677, -21.2707, 1.14", "139.106, 141.034, -21.4327, 0.23", "138.772, 142.513, -21.6073, 1.14", "138.385, 145.157, -21.9104, 0.23", "138.273, 147.622, -22.2216, 0.91", "138.375, 149.369, -22.4638, 0.23", "138.603, 151.138, -22.8291, 2.05", "138.981, 153.5, -23.3856, 0.68", "139.386, 155.569, -23.9395, 0.68", "139.927, 158.126, -24.7241, 1.59", "140.515, 160.814, -25.6376, 0.23", "141.353, 164.203, -26.9507, 1.36", "141.88, 166.058, -27.7262, 0.23", "142.725, 168.617, -28.813, 1.36", "143.591, 171.057, -29.8092, 0.23", "144.537, 173.745, -30.7835, 1.36", "145.752, 177.251, -31.9362, 0.23", "146.364, 179.045, -32.4494, 0.91", "147.488, 182.485, -33.4107, 0.23", "148.296, 185.185, -34.1045, 0.91", "149.506, 189.919, -35.1629, 0.23", "149.851, 191.848, -35.5331, 0.23", "150.059, 193.559, -35.8063, 1.14", "150.199, 195.613, -36.1442, 0.23", "150.22, 196.785, -36.3482, 1.36", "150.205, 198.376, -36.6489, 1.36", "150.265, 201.41, -37.3261, 0.23", "153.747, 212.802, -39.8828, 0.23", "156.367, 224.054, -43.7474, 0.23", "157.915, 235.372, -47.9893, 0.23", "161.62, 245.26, -53.9764, 0.23", "165.986, 256.125, -57.2788, 0.23", "169.548, 267.126, -61.0836, 0.23", "171.792, 278.03, -66.0077, 0.23", "175.603, 288.851, -70.06, 0.23", "181.306, 299.343, -72.2799, 0.23", "187.667, 309.077, -75.71, 0.23", "194.544, 319.004, -76.7121, 0.23" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "91.8866, -121.507, 89.2998, 0.91", "92.1097, -122.985, 90.9028, 0.91", "92.286, -124.042, 92.0537, 1.36", "92.4086, -124.745, 92.8012, 0.23", "92.5734, -125.559, 93.6493, 1.14", "92.9107, -126.901, 95.0132, 0.23", "93.4041, -128.672, 96.7637, 1.82", "94.0491, -130.721, 98.6405, 0.23", "94.3581, -131.461, 99.2896, 0.91", "94.5889, -131.894, 99.675, 0.91", "95.1, -132.665, 100.37, 0.23", "95.5212, -133.15, 100.834, 0.23", "95.9522, -133.491, 101.207, 0.23", "97.2234, -134.233, 102.025, 0.91", "97.9454, -134.597, 102.44, 0.23", "98.7888, -134.995, 102.885, 1.14", "100.552, -135.71, 103.65, 0.23", "101.127, -135.922, 103.849, 0.91", "102.847, -136.528, 104.291, 0.23", "103.725, -136.852, 104.409, 0.23", "104.698, -137.23, 104.435, 0.91", "106.011, -137.806, 104.393, 0.23", "106.528, -138.066, 104.362, 1.14", "107.607, -138.684, 104.34, 0.23", "108.783, -139.428, 104.359, 1.14", "110.058, -140.301, 104.436, 0.23", "111.812, -141.558, 104.615, 1.82", "113.087, -142.476, 104.849, 0.23", "114.351, -143.351, 105.149, 0.23", "115.23, -143.94, 105.413, 1.14", "116.29, -144.638, 105.794, 0.23", "117.706, -145.58, 106.358, 1.59", "119.31, -146.676, 106.972, 0.23", "120.755, -147.725, 107.503, 1.36", "121.881, -148.59, 107.899, 0.23", "122.791, -149.371, 108.202, 0.91", "123.477, -150.049, 108.428, 0.23", "124.866, -151.626, 108.88, 1.82", "126.118, -153.223, 109.27, 0.23", "126.619, -153.89, 109.425, 0.91", "127.681, -155.343, 109.765, 0.23", "128.58, -156.583, 110.095, 0.91", "129.471, -157.827, 110.481, 0.23", "130.343, -159.081, 110.937, 1.36", "131.289, -160.479, 111.51, 0.23", "132.163, -161.742, 112.131, 1.14", "133.364, -163.454, 113.117, 0.23", "134.248, -164.762, 113.866, 1.36", "134.45, -165.082, 114.049, 1.36", "135.482, -166.666, 114.989, 0.23", "136.492, -168.227, 115.932, 2.95", "137.644, -169.94, 116.988, 0.23", "138.7, -171.368, 117.923, 0.68", "139.572, -172.455, 118.649, 0.23", "140.767, -173.781, 119.548, 0.23", "141.863, -174.85, 120.26, 2.27", "143.294, -176.06, 121.072, 0.23", "144.816, -177.158, 121.866, 0.91", "145.768, -177.755, 122.354, 0.91", "147.648, -178.853, 123.239, 0.23", "149.043, -179.659, 123.889, 1.59", "150.211, -180.311, 124.425, 0.23", "151.383, -180.974, 124.967, 0.91", "152.894, -181.868, 125.678, 0.23", "153.558, -182.27, 126.021, 1.14", "155.229, -183.349, 127.005, 0.23", "155.87, -183.792, 127.459, 0.23", "156.982, -184.603, 128.371, 1.82" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "91.8866, -121.507, 89.2998, 0.23", "92.6529, -123.807, 90.3469, 0.23", "92.9242, -124.623, 90.7184, 0.68", "93.3424, -125.906, 91.3018, 0.23", "93.5577, -126.585, 91.6099, 0.91", "93.8194, -127.392, 91.9409, 0.23", "93.9476, -127.841, 92.093, 1.14", "94.0707, -128.389, 92.2375, 0.23", "94.2979, -129.541, 92.493, 0.91", "94.4185, -130.228, 92.6322, 0.23", "94.7409, -132.162, 92.9752, 1.36", "95.0201, -134.205, 93.2615, 1.36", "95.0709, -134.897, 93.3203, 0.23", "95.1085, -135.582, 93.368, 0.91", "95.1689, -137.268, 93.4545, 0.23", "95.2003, -139.367, 93.541, 0.91", "95.1578, -141.493, 93.6231, 0.23", "95.1203, -143.832, 93.6928, 0.68" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "135.129, -146.25, 68.4098, 0.23", "136.169, -150.716, 68.3807, 0.23", "136.96, -154.116, 68.3585, 1.36", "137.608, -156.898, 68.3404, 0.23", "138.676, -161.486, 68.3104, 2.73" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "135.129, -146.25, 68.4098, 0.23", "138.08, -146.473, 68.1454, 0.23", "139.735, -146.645, 67.9636, 0.23", "141.491, -146.805, 67.5948, 0.91", "142.82, -146.91, 67.2194, 0.23", "143.893, -146.977, 66.8985, 1.36", "146.113, -147.107, 66.2466, 0.23", "147.677, -147.216, 65.7923, 0.91", "150.46, -147.542, 64.9719, 0.23", "153.177, -147.977, 64.2076, 0.68", "154.492, -148.216, 63.8802, 0.23", "155.815, -148.511, 63.5879, 0.91", "157.158, -148.852, 63.3826, 0.91", "159.02, -149.447, 63.323, 0.23", "160.337, -149.939, 63.4379, 0.91", "161.205, -150.29, 63.566, 0.91", "162.891, -150.95, 63.8349, 0.23", "164.972, -151.615, 64.2639, 0.23", "166.755, -152.098, 64.6634, 0.91", "167.253, -152.206, 64.7896, 1.14", "168.147, -152.371, 65.0414, 1.14", "169.859, -152.673, 65.595, 1.14", "171.671, -152.876, 66.3051, 0.45" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "95.5761, -88.504, -11.2337, 0.45", "92.5611, -92.307, -8.87665, 0.45", "88.7518, -96.0231, -6.54776, 0.45", "87.6205, -96.8954, -5.9666, 0.45", "86.1495, -97.8404, -5.21961, 0.45", "83.4217, -99.2474, -3.79927, 0.45", "81.445, -100.297, -2.4596, 1.14", "79.1061, -101.482, -0.614795, 0.23", "77.8114, -102.369, 0.827781, 0.68", "75.769, -103.862, 3.50928, 0.23", "73.7967, -105.574, 6.84155, 2.05", "71.4937, -108.308, 12.3403, 0.45", "70.4675, -110.238, 16.0232, 0.91", "69.9608, -112.554, 19.7821, 0.23" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "95.5761, -88.504, -11.2337, 0.23", "97.8671, -89.8998, -11.7996, 0.23", "100.518, -91.4839, -12.1787, 0.23", "103.241, -93.0884, -12.4617, 1.36", "105.476, -94.5278, -12.6218, 0.23", "106.24, -95.0448, -12.6672, 0.91", "109.191, -97.3233, -12.7709, 0.23", "109.964, -97.9857, -12.763, 1.14", "111.453, -99.4256, -12.7431, 0.23", "112.745, -100.792, -12.7967, 2.5", "113.604, -101.788, -12.8814, 2.5", "117.032, -105.852, -13.4306, 0.23", "119.169, -108.51, -13.8977, 0.23", "120.153, -109.75, -14.1576, 2.5", "122.288, -112.462, -14.8796, 0.68", "124.001, -114.538, -15.5527, 0.68", "124.82, -115.513, -15.9166, 1.82", "127.124, -118.141, -17.1393, 0.45", "128.662, -119.851, -18.017, 1.59", "130.442, -121.827, -19.1329, 0.23", "131.148, -122.649, -19.6691, 0.23", "131.951, -123.703, -20.4044, 0.91", "132.573, -124.662, -21.0279, 0.91", "133.329, -125.944, -21.8123, 0.91", "134.501, -128.341, -23.0622, 1.82", "135.325, -130.294, -24.0425, 0.45", "135.825, -131.589, -24.7094, 0.91", "136.411, -133.104, -25.4613, 0.23", "137.217, -134.958, -26.3068, 1.14", "137.957, -136.451, -26.9126, 0.23", "138.649, -137.695, -27.4112, 0.91", "139.745, -139.447, -28.0789, 0.23", "141.073, -141.415, -28.7435, 2.5", "142.878, -143.802, -29.514, 0.23", "144.032, -145.208, -29.9393, 1.14", "145.986, -147.412, -30.6083, 0.23", "146.873, -148.348, -30.8966, 0.23", "149.095, -150.488, -31.5731, 0.91", "151.324, -152.373, -32.2421, 0.23", "152.831, -153.497, -32.6543, 0.23", "154.298, -154.466, -33.0071, 2.5", "157.68, -156.478, -33.7128, 0.23", "158.478, -156.94, -33.8969, 0.91", "161.054, -158.371, -34.5799, 0.23", "162.755, -159.332, -35.0534, 1.36", "164.252, -160.185, -35.4976, 1.36", "166.142, -161.336, -36.1162, 0.23", "167.664, -162.274, -36.8691, 0.91", "169.196, -163.228, -37.9263, 0.23", "170.318, -163.951, -38.9377, 0.68", "171.147, -164.473, -39.7863, 0.23", "172.7, -165.41, -41.4258, 2.27", "176.633, -167.449, -45.3192, 0.23", "179.192, -168.61, -47.6817, 1.36", "180.589, -169.227, -48.8656, 0.23", "181.303, -169.543, -49.4236, 0.91", "183.73, -170.69, -51.1606, 0.23", "186.337, -172.032, -52.8557, 2.5", "187.058, -172.503, -53.2197, 2.5", "191.101, -175.369, -54.9051, 0.23", "192.335, -176.259, -55.3402, 1.59", "195.308, -178.473, -56.2487, 0.68", "196.903, -179.7, -56.5702, 2.5", "200.533, -182.657, -57.1487, 0.23", "201.854, -183.716, -57.2628, 1.36", "203.446, -184.918, -57.151, 0.23", "205.334, -186.243, -56.8185, 0.23", "208.022, -187.914, -55.9174, 0.91" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "81.9488, -4.05789, 50.2866, 0.68", "81.5712, -3.47715, 53.3596, 0.68", "81.3868, -3.02565, 55.6562, 0.68", "81.3053, -2.83961, 56.6383, 1.59", "81.111, -2.5881, 58.4605, 0.23", "80.3447, -2.12007, 63.3871, 0.23", "79.5784, -2.18432, 67.6739, 1.36", "79.285, -2.4507, 69.4639, 0.23", "79.0156, -2.8514, 71.2949, 1.14", "78.6672, -3.56113, 74.2307, 0.23", "78.4212, -4.1296, 76.5388, 1.36", "77.9464, -5.482, 82.6723, 0.23", "77.686, -6.56747, 88.4285, 1.14", "77.6966, -6.70587, 89.4375, 0.23", "77.8393, -6.84588, 91.7601, 1.14", "78.1662, -6.68292, 95.6054, 0.23", "78.3105, -6.49042, 97.0408, 0.23", "78.472, -5.74782, 99.6341, 0.91", "78.418, -4.81316, 102.296, 0.23", "78.3383, -4.46611, 103.271, 0.91", "77.977, -3.73235, 105.233, 0.23", "77.464, -2.83574, 107.291, 1.14", "76.9707, -2.14837, 108.739, 1.82", "75.6223, -0.563313, 111.681, 0.68", "75.0864, 0.0154195, 112.776, 1.14", "74.2762, 0.868912, 114.558, 0.23", "73.8835, 1.21119, 115.462, 1.36", "73.2834, 1.58757, 116.713, 0.23", "72.4882, 1.96561, 118.386, 1.14", "71.3024, 2.43901, 120.84, 0.23", "70.2961, 2.7599, 122.911, 1.36", "69.2632, 3.06683, 124.93, 0.23", "68.548, 3.24027, 126.298, 2.05", "67.6043, 3.45552, 128.04, 2.05", "66.5699, 3.64994, 129.824, 0.68", "64.3592, 4.0334, 133.359, 0.23", "63.1631, 4.16187, 135.115, 0.23", "61.3491, 4.28236, 137.74, 1.59", "60.7661, 4.30478, 138.591, 0.23", "59.4346, 4.37577, 140.514, 1.14", "57.357, 4.63461, 143.444, 0.23", "56.2967, 4.87315, 144.945, 0.23", "54.2489, 5.34593, 148.061, 1.36", "52.6646, 5.56697, 150.646, 0.23", "51.4525, 5.75252, 152.695, 0.23", "50.1248, 5.99218, 155.012, 1.14", "47.9342, 6.33262, 158.964, 0.23", "45.9188, 6.59095, 162.963, 0.91", "43.8181, 6.51776, 167.343, 0.23" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "81.9488, -4.05789, 50.2866, 0.23", "84.4465, -3.02297, 52.0825, 0.23", "85.631, -2.66406, 53.1216, 1.36", "88.087, -1.97566, 55.4465, 0.23", "88.7837, -1.87965, 56.2171, 0.68", "91.0869, -1.68193, 58.8412, 0.23", "93.1226, -1.5148, 61.0672, 1.59", "95.6393, -1.49112, 63.914, 0.23", "96.1788, -1.51072, 64.5065, 1.14", "99.8795, -1.8377, 68.4588, 0.23", "101.037, -1.97121, 69.786, 1.36", "102.805, -2.13191, 71.8922, 0.23", "103.896, -2.1795, 73.1036, 0.91", "106.475, -2.10446, 75.846, 0.23", "109.733, -1.87377, 79.4519, 1.14", "110.838, -1.70859, 80.6822, 0.23", "112.405, -1.57524, 82.7161, 2.27", "113.701, -1.47336, 84.6252, 0.23", "114.912, -1.32189, 86.7014, 1.14", "116.293, -1.15474, 89.4284, 0.23", "116.87, -1.06408, 90.8067, 1.36", "119.172, -1.0886, 97.1341, 0.23", "119.713, -1.23946, 98.7855, 1.59", "120.737, -1.84785, 102.097, 0.23", "121.743, -2.89528, 105.588, 1.36", "122.254, -3.67378, 107.636, 1.36", "123.155, -5.729, 111.934, 0.23", "123.749, -7.28389, 114.645, 0.23", "124.331, -8.87208, 117.144, 0.23", "124.803, -10.387, 119.347, 0.23", "124.979, -11.2683, 120.61, 0.23", "125.141, -12.8684, 122.751, 0.23", "125.091, -14.4567, 125.073, 0.23", "124.907, -15.6196, 127.001, 0.23", "124.519, -17.5212, 130.629, 0.23", "124.409, -18.2088, 131.957, 0.23", "124.041, -20.3055, 135.523, 0.45" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "22.8288, 91.5784, -37.0114, 0.23", "28.9393, 99.9317, -37.766, 0.23", "35.5378, 107.921, -37.5592, 0.23", "41.4799, 116.396, -38.3617, 0.23", "48.7248, 123.759, -37.8495, 0.23", "55.2883, 131.545, -35.9668, 0.23", "63.1287, 137.732, -33.436, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "22.8288, 91.5784, -37.0114, 0.68", "28.7005, 98.992, -38.2619, 0.23", "33.6271, 106.536, -41.4384, 0.23", "38.0888, 114.479, -44.3668, 0.23", "42.5151, 121.763, -48.6715, 0.23", "46.4038, 129.266, -53.1398, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-167.186, -93.7342, 10.0426, 0.23", "-168.589, -95.9369, 10.335, 0.23", "-168.89, -96.4079, 10.4305, 0.91", "-170.494, -99.0133, 11.0601, 0.23", "-171.188, -100.139, 11.3541, 0.23", "-172.057, -101.522, 11.7305, 1.59", "-173.368, -103.647, 12.3627, 0.23", "-174.089, -104.784, 12.7926, 0.45", "-174.492, -105.448, 13.0586, 1.14", "-174.79, -106.014, 13.2997, 1.14", "-175.259, -106.987, 13.7039, 1.14", "-175.924, -108.426, 14.2628, 0.91", "-176.516, -109.683, 14.7046, 0.23", "-176.862, -110.397, 14.9285, 0.23", "-177.745, -112.27, 15.4264, 0.45", "-178.613, -114.059, 15.8238, 0.23", "-179.602, -115.881, 16.2884, 0.91", "-180.285, -117.001, 16.5954, 1.14", "-180.845, -117.888, 16.8674, 0.23", "-181.927, -119.554, 17.4567, 2.5", "-183.708, -122.152, 18.4733, 0.23", "-185.314, -124.46, 19.4214, 1.82", "-186.183, -125.651, 19.9432, 1.82", "-187.556, -127.448, 20.7648, 0.23", "-188.77, -128.99, 21.4896, 0.23", "-189.625, -130.084, 22.0127, 1.82", "-191.965, -133.203, 23.3646, 0.45", "-193.307, -134.96, 24.0024, 1.59", "-194.951, -137.021, 24.7162, 0.23", "-195.474, -137.623, 24.9076, 1.14", "-196.714, -138.99, 25.2916, 0.23", "-198.359, -140.796, 25.764, 1.82", "-200.234, -142.826, 26.1922, 0.23", "-201.426, -144.12, 26.4704, 0.23", "-202.909, -145.746, 26.8463, 2.05", "-204.548, -147.56, 27.3042, 0.68", "-206.073, -149.28, 27.7722, 0.68", "-207.906, -151.466, 28.4145, 0.68", "-209.565, -153.565, 29.1057, 2.05", "-210.345, -154.587, 29.4681, 2.5", "-211.893, -156.653, 30.227, 0.23", "-212.438, -157.321, 30.4664, 0.91", "-213.501, -158.58, 30.8111, 0.23", "-214.82, -160.096, 31.1053, 0.45", "-215.577, -160.932, 31.1821, 0.23", "-217.927, -163.426, 31.2981, 2.05", "-220.18, -165.809, 31.3181, 0.23", "-222.045, -167.825, 31.2431, 0.23", "-222.689, -168.57, 31.195, 0.23", "-223.212, -169.271, 31.1597, 0.23", "-223.906, -170.287, 31.2116, 0.23", "-224.462, -171.259, 31.3776, 0.23", "-226.09, -174.46, 32.2105, 3.41", "-226.725, -175.836, 32.6687, 2.73", "-227.924, -178.872, 33.8337, 0.23", "-228.87, -181.338, 34.9633, 1.14", "-229.428, -182.904, 35.7859, 1.14", "-230.079, -185.029, 37.0869, 0.23", "-230.43, -186.578, 38.2354, 1.82", "-230.753, -188.41, 39.66, 1.82", "-231.024, -190.527, 41.2509, 0.68", "-231.13, -191.931, 42.2164, 0.23", "-231.234, -193.759, 43.4536, 0.91", "-231.296, -195.786, 44.7871, 0.23", "-231.374, -198.078, 46.1419, 2.5", "-231.449, -201.463, 47.8858, 0.23", "-231.464, -202.968, 48.544, 0.91", "-231.502, -204.704, 49.2071, 0.23", "-231.525, -205.723, 49.5673, 1.82", "-231.524, -207.742, 50.2707, 0.23", "-231.486, -208.489, 50.5258, 0.23", "-231.277, -210.696, 51.2657, 0.91", "-231.121, -212.529, 51.8612, 0.23", "-230.954, -214.587, 52.5525, 1.14", "-230.785, -216.247, 53.1322, 0.23", "-230.438, -218.613, 53.7668, 1.82", "-230.239, -219.892, 54.011, 2.5", "-229.765, -223.3, 54.3479, 0.23", "-229.538, -225.739, 54.3384, 2.05", "-229.427, -227.554, 54.1722, 2.05", "-229.424, -231.976, 53.5612, 0.23", "-229.559, -233.822, 53.2508, 1.14", "-229.922, -236.113, 52.7625, 0.23", "-230.204, -237.404, 52.3888, 0.91", "-230.502, -238.38, 52.0672, 0.23", "-231.408, -240.46, 51.4564, 1.14", "-232.435, -242.162, 51.2465, 0.23", "-233.168, -243.285, 51.1697, 1.14" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-167.186, -93.7342, 10.0426, 0.68", "-169.94, -93.9176, 10.7066, 0.68", "-171.861, -93.9324, 11.1539, 0.68", "-172.584, -93.9067, 11.291, 0.68", "-173.309, -93.88, 11.4182, 0.68", "-173.911, -93.8586, 11.5125, 0.68", "-176.194, -93.8374, 11.8749, 1.59", "-177.497, -93.8414, 12.0786, 1.59", "-179.38, -93.8621, 12.3138, 0.91", "-181.786, -93.9406, 12.5745, 1.59", "-183.089, -94.0062, 12.7704, 0.23", "-184.771, -94.1636, 13.0905, 2.05", "-185.713, -94.3265, 13.292, 2.05", "-186.96, -94.6317, 13.608, 2.05", "-188.915, -95.2803, 14.1685, 0.45", "-191.438, -96.3974, 14.8425, 0.23", "-193.111, -97.3056, 15.2487, 0.23", "-195.297, -98.7788, 15.7212, 0.23", "-196.706, -99.9192, 16.001, 1.36", "-197.652, -100.839, 16.1713, 1.36", "-199.53, -102.967, 16.4923, 2.73", "-200.731, -104.482, 16.6878, 1.59", "-202.284, -106.527, 17.0117, 0.45", "-203.209, -107.736, 17.2575, 0.45", "-203.968, -108.662, 17.4866, 0.45", "-205.161, -110.018, 17.8925, 1.59", "-206.518, -111.519, 18.3834, 1.59", "-207.166, -112.237, 18.5962, 2.95", "-207.964, -113.1, 18.818, 2.95", "-209.155, -114.436, 19.0982, 2.95", "-211.404, -117.131, 19.5412, 0.45", "-212.33, -118.36, 19.6906, 1.59", "-213.272, -119.689, 19.8937, 2.27", "-214.128, -120.944, 20.1711, 2.27", "-215.321, -122.772, 20.6827, 0.45", "-216.37, -124.401, 21.2556, 2.5", "-217.336, -125.859, 21.8661, 3.41", "-218.773, -127.964, 22.8264, 0.23", "-219.636, -129.192, 23.4426, 1.36", "-220.423, -130.31, 24.0643, 0.45", "-221.758, -132.17, 25.1986, 3.41", "-222.416, -133.042, 25.7765, 3.41", "-223.866, -134.924, 27.1592, 2.05", "-225.088, -136.467, 28.3108, 0.45", "-226.078, -137.641, 29.2269, 1.59", "-227.363, -139.058, 30.3938, 1.14", "-228.845, -140.591, 31.6832, 0.91", "-230.168, -141.898, 32.8468, 1.36", "-231.473, -143.085, 33.9679, 0.23", "-232.177, -143.69, 34.4986, 1.82", "-233.254, -144.536, 35.188, 2.95", "-234.245, -145.276, 35.7122, 2.95" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-86.975, -173.632, -30.0079, 0.23", "-89.8652, -182.97, -33.9858, 0.23", "-93.4107, -192.69, -36.1059, 0.23", "-95.4217, -202.592, -39.2395, 0.23", "-95.6694, -212.702, -42.4013, 0.23", "-97.218, -222.791, -45.2172, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-86.975, -173.632, -30.0079, 0.23", "-89.3788, -185.842, -32.0927, 0.23", "-91.3695, -198.114, -34.2688, 0.23", "-95.3528, -209.79, -36.7777, 0.23", "-97.4841, -221.786, -40.0107, 0.23", "-98.0061, -233.461, -44.69, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "154.236, 46.9707, -0.438882, 0.45", "156.523, 48.1911, -0.557157, 0.45", "159.395, 49.6487, -0.68672, 0.68", "161.526, 50.8024, -0.58861, 0.68", "165.263, 52.7634, -0.266241, 0.68", "169.797, 55.1903, 0.159286, 0.68", "173.557, 57.2026, 0.504102, 0.68", "177.536, 59.3371, 0.936063, 0.45", "182.117, 61.7762, 1.45043, 0.45", "185.187, 63.3091, 1.77989, 0.68", "188.591, 65.0429, 2.17889, 0.23", "191.594, 66.7138, 2.56495, 1.14", "193.935, 68.0507, 2.71648, 0.23", "195.541, 68.9889, 2.66948, 1.14", "198.864, 70.9363, 2.23167, 0.45", "200.998, 72.2583, 1.86712, 0.23", "202.881, 73.4062, 1.5031, 0.23", "205.493, 75.052, 0.929124, 1.36", "210.073, 78.0434, -0.185216, 0.23", "212.802, 79.9238, -0.874791, 1.82", "214.048, 80.839, -1.20259, 2.5", "217.323, 83.2326, -2.02275, 0.23", "219.142, 84.5896, -2.45192, 0.68", "220.803, 85.8773, -2.79543, 1.36", "222.68, 87.438, -3.09274, 0.23", "224.099, 88.6746, -3.32015, 1.36", "225.491, 89.9136, -3.54187, 1.36", "227.486, 91.6747, -3.84809, 0.23", "228.401, 92.4284, -3.97534, 0.23", "231.176, 94.5656, -4.32817, 2.05", "232.271, 95.3844, -4.52844, 2.73", "235.113, 97.5081, -5.18226, 1.14", "237.421, 99.2878, -5.74732, 1.14", "239.691, 101.011, -6.31211, 0.23", "240.97, 101.945, -6.6288, 0.91", "244.638, 104.596, -7.53914, 1.59", "247.654, 106.826, -8.25932, 0.45", "249.829, 108.544, -8.71306, 1.14", "251.139, 109.636, -8.93035, 0.23", "251.838, 110.226, -9.00448, 0.23", "253.219, 111.388, -8.98758, 0.23", "254.959, 112.895, -8.77957, 0.91", "257.033, 114.883, -8.54255, 0.91", "258.555, 116.381, -8.41192, 2.05", "260.184, 117.98, -8.22837, 2.73", "263.376, 120.973, -7.82736, 0.23", "265.033, 122.448, -7.58055, 0.23", "267.209, 124.372, -7.1613, 0.23", "268.726, 125.689, -6.82815, 1.36", "271.095, 127.607, -6.17316, 0.23", "272.51, 128.63, -5.75317, 1.59", "274.757, 130.077, -5.06163, 0.23", "277.795, 131.886, -4.09363, 0.23", "278.937, 132.512, -3.74651, 2.05", "282.578, 134.541, -2.68208, 0.45", "285.043, 135.96, -1.95926, 0.45", "287.506, 137.415, -1.11725, 1.36", "289.002, 138.308, -0.579082, 2.27", "291.621, 139.924, 0.374352, 0.91", "293.803, 141.437, 1.22135, 0.23", "295.712, 142.953, 1.98703, 0.23", "297.654, 144.509, 2.8278, 1.14", "299.052, 145.592, 3.42679, 1.14", "300.74, 146.854, 4.15484, 1.14", "303.211, 148.614, 5.15197, 0.23", "303.993, 149.054, 5.39421, 0.91", "306.87, 150.338, 6.19916, 0.23", "307.644, 150.634, 6.39805, 1.14", "310.242, 151.437, 7.17964, 0.45", "312.189, 151.86, 7.76225, 2.5", "315.942, 152.515, 8.89278, 1.14", "319.869, 153.133, 10.0752, 0.23", "322.754, 153.538, 10.9185, 0.23", "326.867, 154.071, 12.1226, 1.14", "330.108, 154.396, 13.0499, 1.14" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "154.236, 46.9707, -0.438882, 0.91", "157.152, 48.3739, -1.74506, 0.91", "158.722, 49.1445, -2.29253, 1.36", "160.365, 49.9218, -2.64007, 0.23", "162.233, 50.8711, -2.83102, 0.45", "163.927, 51.7912, -2.88987, 0.91", "164.997, 52.3824, -2.88282, 0.45", "166.229, 53.0903, -2.75783, 1.14", "168.438, 54.2839, -2.50087, 1.14", "170.05, 55.0982, -2.34023, 0.23", "171.308, 55.6484, -2.34213, 0.45", "173.194, 56.4091, -2.52805, 0.23", "174.878, 56.981, -2.87796, 1.14", "176.308, 57.3707, -3.32735, 2.05", "177.824, 57.7016, -3.89038, 1.14", "181.229, 58.3505, -5.22383, 0.23", "182.456, 58.5901, -5.73402, 0.23", "184.158, 58.9525, -6.365, 1.36", "185.378, 59.2481, -6.71676, 2.5", "188.165, 60.0596, -7.26705, 0.23", "189.131, 60.407, -7.34388, 0.23", "190.537, 61.1146, -7.26079, 0.23", "192.776, 62.4542, -6.99412, 1.14", "193.986, 63.2679, -6.77836, 1.36", "195.973, 64.6705, -6.32087, 0.23", "197.862, 66.07, -5.82932, 0.68", "199.409, 67.2274, -5.43467, 0.23", "200.532, 68.0809, -5.19421, 1.82", "201.294, 68.6617, -5.10071, 1.82", "203.14, 70.0462, -4.94646, 0.23", "204.64, 71.1108, -4.88304, 0.23", "205.747, 71.8466, -4.87871, 0.91", "208.316, 73.4109, -5.06654, 0.23", "209.544, 74.1234, -5.22462, 1.36", "211.085, 75.0063, -5.51034, 0.23", "212.773, 75.9651, -5.87615, 1.36", "214.209, 76.7288, -6.17391, 0.23", "215.918, 77.6342, -6.50184, 1.14", "217.55, 78.5025, -6.78758, 0.23", "218.343, 78.9341, -6.90484, 0.23", "219.985, 79.8704, -7.09295, 2.05", "220.798, 80.3793, -7.16102, 2.05", "222.385, 81.5014, -7.25205, 0.45", "223.307, 82.1841, -7.3282, 1.82", "224.625, 83.1656, -7.52259, 1.82", "226.471, 84.4642, -7.88784, 0.23", "227.402, 85.0482, -8.11057, 0.68", "229.058, 85.9822, -8.50867, 0.23", "230.678, 86.7342, -8.87545, 1.36", "231.418, 86.9891, -9.04718, 1.82", "232.723, 87.2335, -9.32082, 0.91", "234.051, 87.3295, -9.56442, 0.23", "235.471, 87.3747, -9.79677, 1.36", "236.411, 87.3879, -9.96233, 2.27", "238.945, 87.5541, -10.4317, 0.23", "240.44, 87.7266, -10.7804, 1.14", "241.302, 87.8741, -11.0131, 0.23", "242.348, 88.1125, -11.3116, 0.23", "243.955, 88.5296, -11.7887, 1.14", "245.615, 89.0251, -12.2921, 0.23", "247.763, 89.7679, -12.9182, 0.45", "248.728, 90.1031, -13.2288, 2.05", "250.18, 90.5922, -13.7039, 2.05", "251.404, 90.982, -14.0786, 0.23", "251.982, 91.1626, -14.2512, 0.91", "253.373, 91.585, -14.6908, 0.23", "255.47, 92.2142, -15.4028, 1.36", "256.301, 92.477, -15.7006, 2.27", "258.087, 93.0285, -16.3138, 0.91", "260.032, 93.6618, -16.9317, 0.91", "261.495, 94.163, -17.3831, 2.73", "263.983, 95.0956, -18.1869, 0.23", "265.342, 95.67, -18.6261, 0.68", "267.294, 96.6047, -19.3827, 0.23", "268.844, 97.5124, -20.2111, 0.23", "269.744, 98.1455, -20.8527, 1.14", "270.97, 99.1639, -21.9715, 0.23", "271.614, 99.7623, -22.6735, 1.36", "272.735, 100.811, -24.052, 0.23", "274.157, 102.17, -25.9123, 1.82", "275.178, 102.943, -27.1528, 0.68", "275.967, 103.42, -27.9781, 1.82", "278.059, 104.433, -29.7659, 0.23", "279.383, 104.942, -30.6787, 0.23", "280.411, 105.261, -31.2095, 2.05", "283.579, 105.994, -32.4084, 0.23", "285.18, 106.272, -32.8703, 1.36", "286.988, 106.482, -33.2655, 0.23", "288.675, 106.637, -33.4957, 1.36", "290.254, 106.804, -33.6757, 0.23", "292.56, 107.101, -33.921, 0.91", "295.026, 107.558, -34.1568, 0.23", "296.53, 107.867, -34.3245, 2.5", "299.693, 108.645, -34.7277, 0.23", "302.035, 109.353, -35.1143, 0.23", "303.296, 109.814, -35.3339, 0.23", "304.76, 110.502, -35.5419, 2.05", "306.594, 111.528, -35.709, 2.05", "308.356, 112.675, -35.7122, 0.45", "310.053, 113.923, -35.5376, 0.45", "311.568, 115.138, -35.2358, 1.14", "313.842, 117.101, -34.6468, 0.23", "314.864, 118.034, -34.3798, 1.82", "316.194, 119.358, -34.0422, 0.23", "316.984, 120.147, -33.8828, 0.23", "317.785, 120.942, -33.7935, 1.14", "319.615, 122.76, -33.966, 0.23", "320.995, 124.206, -34.439, 1.59", "321.561, 124.86, -34.7338, 1.59", "322.446, 126.025, -35.3439, 1.59", "323.135, 127.045, -35.8972, 0.45", "323.622, 127.878, -36.2862, 1.82", "324.517, 129.811, -36.9852, 0.23", "324.981, 130.934, -37.2351, 0.91", "325.432, 132.075, -37.4119, 1.14", "326.062, 133.609, -37.5262, 0.23", "327.173, 136.072, -37.6064, 1.36", "328.196, 138.142, -37.5986, 0.23", "329.171, 139.961, -37.5189, 0.68", "329.589, 140.673, -37.4726, 2.27", "331.027, 142.864, -37.306, 0.23", "331.755, 143.865, -37.2283, 1.36", "333.277, 145.751, -37.1626, 0.23", "334.308, 146.88, -37.1175, 0.68", "335.129, 147.737, -37.0801, 0.68", "336.384, 149.046, -37.0356, 0.23", "337.015, 149.704, -37.056, 1.59", "337.85, 150.602, -37.1307, 0.23", "339.053, 151.914, -37.3082, 1.14", "340.442, 153.597, -37.6268, 0.23", "341.73, 155.271, -38.1162, 0.23", "342.726, 156.658, -38.5816, 0.23", "343.627, 157.968, -39.0575, 2.05", "343.866, 158.334, -39.2001, 2.73", "345.407, 160.871, -40.2529, 0.45", "346.706, 163.117, -41.1706, 0.45", "347.7, 165.132, -41.8897, 2.27", "348.587, 167.268, -42.5406, 0.23", "348.891, 168.246, -42.8095, 0.68", "349.254, 169.85, -43.2058, 0.23", "349.474, 171.383, -43.5313, 1.14", "349.705, 174.277, -44.051, 0.23", "349.731, 175.016, -44.2056, 1.14", "349.822, 178.188, -44.8841, 0.23", "349.857, 179.136, -45.1199, 0.91", "349.914, 180.561, -45.5188, 0.23", "349.988, 181.519, -45.817, 2.27", "350.304, 183.59, -46.5317, 0.23", "350.663, 185.215, -47.1088, 1.14", "351.357, 187.444, -47.957, 0.23", "351.699, 188.382, -48.2915, 1.14", "352.192, 189.713, -48.7288, 0.91", "352.43, 190.401, -48.9703, 0.23", "352.802, 191.647, -49.427, 1.36", "353.073, 192.99, -49.924, 0.23", "353.246, 194.985, -50.6444, 0.68", "353.053, 197.165, -51.4867, 0.23", "352.511, 199.364, -52.3738, 0.23", "352.27, 200.087, -52.6669, 0.91", "351.799, 201.282, -53.1452, 0.23", "351.193, 202.573, -53.6737, 0.23", "350.518, 203.81, -54.2366, 0.23", "349.962, 204.831, -54.6503, 0.23", "349.304, 206.2, -55.0488, 0.23", "348.736, 207.761, -55.4944, 2.05", "354.578, 213.035, -58.6589, 2.05", "359.9, 219.216, -61.0811, 2.05", "364.572, 225.894, -63.5854, 2.05", "370.543, 231.795, -64.8424, 2.05", "376.948, 237.323, -64.6379, 2.05", "382.404, 243.699, -63.4123, 2.05", "386.349, 251.208, -62.5796, 2.05", "389.056, 259.091, -60.796, 2.05", "390.501, 267.109, -58.3064, 2.05", "390.984, 275.125, -55.4828, 2.05", "392.666, 282.724, -52.0809, 2.05", "395.026, 289.961, -48.3418, 2.05", "395.722, 296.959, -43.6388, 2.05", "397.891, 304.253, -39.8933, 2.05" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "194.544, 319.004, -76.7121, 0.23", "199.315, 334.393, -81.9495, 0.23", "205.49, 349.491, -86.4705, 0.23", "213.198, 363.49, -91.9341, 0.23", "220.366, 377.77, -97.4381, 0.23", "228.318, 392.506, -99.7161, 0.23", "236.004, 406.78, -104.474, 0.23", "243.179, 421.338, -109.207, 0.23", "252.028, 433.692, -116.454, 0.23" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "194.544, 319.004, -76.7121, 0.68", "197.077, 327.787, -79.2489, 0.23", "200.234, 335.769, -83.2391, 0.23", "202.259, 344.448, -86.4907, 0.23", "205.731, 352.134, -90.7695, 0.23", "208.032, 359.593, -96.105, 0.23", "208.871, 366.569, -102.411, 0.23" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "156.982, -184.603, 128.371, 0.23", "158.292, -186.105, 129.055, 0.23", "159.551, -187.533, 129.763, 2.27", "161.652, -189.824, 130.944, 0.23", "163.315, -191.594, 131.878, 1.82", "165.815, -194.208, 133.271, 0.23", "167.411, -195.824, 134.162, 1.14", "169.123, -197.515, 135.129, 0.23", "170.667, -198.979, 135.994, 2.27", "172.392, -200.451, 136.91, 0.23", "173.67, -201.444, 137.549, 0.91", "176.607, -203.524, 138.99, 0.23", "177.495, -204.113, 139.414, 0.68", "178.22, -204.586, 139.751, 0.23", "179.458, -205.36, 140.325, 1.59", "181.555, -206.608, 141.264, 0.23", "183.101, -207.561, 141.957, 0.23", "184.719, -208.667, 142.698, 1.59", "185.932, -209.609, 143.312, 0.68", "187.023, -210.546, 143.904, 0.23", "188.45, -211.862, 144.71, 0.23", "189.637, -213.044, 145.401, 0.23", "190.833, -214.345, 146.098, 2.5", "192.109, -215.829, 146.899, 0.23", "192.616, -216.45, 147.241, 0.91", "193.37, -217.536, 147.838, 0.23" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "156.982, -184.603, 128.371, 0.23", "157.949, -187.373, 129.863, 0.23", "158.198, -188.087, 130.247, 0.68", "158.578, -189.177, 130.834, 0.23", "159.231, -191.05, 131.842, 0.68" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "138.676, -161.486, 68.3104, 0.23", "139.993, -164.696, 68.7773, 0.23", "141.091, -167.461, 69.3425, 0.23", "141.805, -169.215, 69.7478, 0.23", "142.823, -171.609, 70.358, 1.59", "144.093, -174.476, 71.1178, 0.23", "145.05, -176.596, 71.6726, 0.91", "146.451, -179.389, 72.4905, 0.23", "147.061, -180.553, 72.8415, 0.91", "147.942, -182.053, 73.3102, 0.23", "149.287, -184.062, 73.9383, 1.59", "151.042, -186.341, 74.6059, 0.23", "152.279, -187.821, 75.007, 0.45", "153.518, -189.182, 75.3096, 0.23", "154.509, -190.25, 75.579, 0.91", "155.791, -191.637, 75.953, 0.23", "156.567, -192.461, 76.2072, 0.91", "157.187, -193.15, 76.4277, 0.23", "158.395, -194.596, 76.8707, 1.14", "159.695, -196.182, 77.3542, 0.23", "160.652, -197.451, 77.7025, 1.82", "161.223, -198.2, 77.8953, 1.82", "162.764, -200.249, 78.439, 0.23", "163.838, -201.583, 78.8083, 0.68", "164.222, -202.047, 78.9394, 0.23", "165.946, -203.98, 79.3162, 2.05", "167.898, -206.074, 79.6196, 0.23", "169.697, -207.96, 79.7738, 1.36", "171.877, -210.184, 79.7514, 0.23", "173.909, -212.322, 79.55, 0.23", "176.476, -215.083, 79.0988, 0.91", "177.106, -215.788, 78.9251, 0.23", "177.835, -216.702, 78.6463, 0.23", "179.068, -218.44, 78.0882, 0.91", "180.167, -220.319, 77.6056, 0.23", "180.74, -221.51, 77.3958, 1.14", "181.222, -222.6, 77.3128, 1.14", "182.064, -224.656, 77.2019, 0.23", "182.683, -226.271, 77.1204, 1.36", "183.562, -228.638, 77.008, 0.23", "184.372, -230.763, 76.8658, 2.05", "184.746, -231.732, 76.7955, 2.05", "186.04, -234.935, 76.5683, 0.68", "187.049, -237.291, 76.4221, 1.14", "188.047, -239.465, 76.3377, 0.23", "189.091, -241.681, 76.2827, 1.14", "190.548, -244.7, 76.3736, 0.23", "191.214, -246.085, 76.4688, 1.36", "192.304, -248.199, 76.7131, 2.05", "194.253, -251.758, 77.2074, 0.23", "195.369, -253.679, 77.4593, 0.91", "197.599, -257.357, 77.9208, 0.23", "198.797, -259.229, 78.1314, 0.23", "199.879, -260.86, 78.2775, 2.5", "202.038, -263.939, 78.4241, 0.23", "202.971, -265.162, 78.4308, 0.91", "204.053, -266.486, 78.3898, 0.23", "205.432, -268.111, 78.2211, 0.68", "207.54, -270.635, 77.9574, 0.23", "208.473, -271.825, 77.8379, 1.82", "209.643, -273.395, 77.7263, 0.23", "210.648, -274.787, 77.6657, 0.91", "212.28, -277.154, 77.5813, 0.23", "213.131, -278.491, 77.5532, 1.14", "213.794, -279.604, 77.5618, 0.23", "214.862, -281.429, 77.6303, 0.91", "216.192, -283.868, 77.7439, 0.23", "216.954, -285.229, 77.8579, 1.36", "217.725, -286.668, 77.9431, 0.23", "218.416, -287.935, 77.9902, 0.91", "220.143, -290.934, 78.0538, 0.23", "221.45, -293.133, 78.0112, 1.14", "222.684, -295.204, 77.9177, 1.82", "224.557, -298.323, 77.7692, 0.68", "225.386, -299.623, 77.7139, 1.36", "227.504, -302.808, 77.601, 0.23", "229.84, -306.215, 77.4748, 1.82", "231.185, -308.071, 77.4167, 0.23", "232.852, -310.298, 77.4002, 2.05", "234.399, -312.221, 77.5036, 0.23", "235.391, -313.452, 77.5159, 0.91", "237.007, -315.365, 77.3971, 0.23", "237.772, -316.275, 77.2812, 0.91", "239.307, -318.252, 76.9055, 0.23", "240.239, -319.696, 76.5751, 0.91", "241.921, -323.155, 75.7245, 0.23", "242.779, -325.555, 75.0979, 0.23", "243.219, -327.348, 74.6751, 1.82", "243.667, -330.103, 74.099, 0.23", "243.928, -332.9, 73.6068, 0.68", "244.119, -335.226, 73.348, 0.23", "244.339, -337.402, 73.2783, 0.91", "244.685, -339.506, 73.2839, 0.23", "245.099, -341.053, 73.252, 1.59", "245.467, -342.023, 73.2019, 1.59", "247.289, -345.764, 72.9508, 0.23", "249.011, -348.856, 72.6519, 1.14", "250.549, -351.474, 72.2999, 0.23", "251.747, -353.507, 71.9499, 0.23", "253.04, -355.667, 71.5804, 0.23", "253.98, -357.129, 71.3619, 0.45", "255.527, -359.413, 71.0157, 0.23", "256.538, -360.802, 70.8212, 1.36", "258.269, -363.098, 70.5458, 0.23", "260.14, -365.573, 70.409, 0.23", "262.248, -368.348, 70.3603, 1.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "138.676, -161.486, 68.3104, 0.23", "137.168, -162.202, 69.3985, 0.23", "136.4, -162.623, 70.0334, 0.68", "135.202, -163.411, 71.1895, 0.23", "134.569, -163.828, 71.8001, 0.68", "134.146, -164.106, 72.2084, 0.23", "133.5, -164.532, 72.8321, 0.91", "132.493, -165.382, 73.8229, 0.23", "131.876, -166.115, 74.4755, 0.91" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "171.671, -152.876, 66.3051, 0.23", "172.903, -153.241, 66.5354, 0.23", "174.907, -153.969, 66.91, 2.05", "175.978, -154.432, 67.1096, 2.05", "179.214, -156.038, 67.7125, 0.45", "180.275, -156.619, 67.8781, 0.68", "182.191, -157.735, 68.1404, 0.23", "183.991, -158.915, 68.3465, 1.14", "185.623, -160.204, 68.4939, 0.23", "186.621, -161.188, 68.5233, 0.68", "187.62, -162.409, 68.4762, 0.23", "188.289, -163.335, 68.4114, 0.91", "188.981, -164.457, 68.3056, 0.23", "190.168, -166.575, 68.0139, 0.68", "191.191, -168.672, 67.684, 0.23", "191.693, -170.082, 67.4458, 0.23", "191.999, -171.351, 67.1682, 0.23", "192.238, -172.805, 66.7747, 1.82", "192.603, -175.643, 65.944, 0.23", "192.717, -176.828, 65.5697, 0.91", "192.972, -180.038, 64.5417, 0.23", "193.072, -183.923, 63.179, 0.68", "193.034, -186.318, 62.269, 0.23" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "171.671, -152.876, 66.3051, 0.23", "171.927, -151.729, 66.7596, 0.23", "172.069, -150.869, 67.0727, 1.59", "172.185, -150.163, 67.3299, 1.59", "172.391, -148.915, 67.784, 0.23", "172.691, -147.09, 68.4485, 0.23", "173.009, -145.161, 69.1511, 0.23", "173.17, -143.891, 69.6164, 1.14" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "63.1287, 137.732, -33.436, 0.23", "69.4956, 148.541, -30.9705, 0.23", "74.5789, 160.325, -30.8802, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "63.1287, 137.732, -33.436, 0.68", "70.2459, 144.131, -33.8424, 0.23", "77.1999, 150.533, -35.4213, 0.23", "83.6417, 157.654, -35.4703, 0.23", "89.665, 164.974, -37.0805, 0.23", "94.6915, 173.092, -38.4301, 0.23", "100.791, 180.434, -39.5846, 0.23", "107.093, 187.44, -41.4408, 0.23", "114.057, 193.996, -42.0663, 0.23", "122.248, 198.829, -42.7392, 0.23", "130.391, 203.656, -41.6266, 0.23", "137.729, 209.779, -41.1545, 0.23", "145.5, 215.32, -41.5575, 0.23", "154.21, 218.951, -40.4284, 0.23", "162.572, 223.504, -40.7721, 0.23", "171.036, 227.863, -40.6185, 0.23", "179.316, 232.15, -38.7164, 0.23", "187.761, 235.854, -36.4225, 0.23", "196.7, 237.561, -33.7891, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "46.4038, 129.266, -53.1398, 0.23", "49.1737, 133.716, -54.7168, 0.23", "51.4482, 138.641, -55.5257, 0.23", "52.8531, 143.824, -56.7265, 0.23", "53.7964, 149.095, -58.0267, 0.23", "55.2295, 154.288, -59.1466, 0.23" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "46.4038, 129.266, -53.1398, 0.68", "50.0725, 135.106, -55.5968, 0.23", "52.3522, 141.567, -58.2567, 0.23" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-234.245, -145.276, 35.7122, 2.73", "-236.943, -146.753, 35.4667, 2.73", "-238.916, -147.979, 35.193, 1.59", "-240.874, -149.392, 34.897, 0.68", "-242.648, -150.899, 34.6387, 0.68", "-244.158, -152.349, 34.4344, 0.45", "-245.613, -153.914, 34.2524, 0.45", "-246.853, -155.519, 34.1303, 0.45", "-248.366, -157.676, 34.0787, 1.14", "-249.89, -159.942, 34.209, 0.23", "-250.853, -161.356, 34.3954, 0.23", "-252.166, -163.353, 34.8552, 1.59", "-253.167, -164.833, 35.3324, 1.59", "-254.964, -167.225, 36.2814, 0.23", "-256.768, -169.331, 37.2361, 2.27", "-258.51, -171.111, 38.1008, 0.91", "-260.249, -172.774, 38.934, 0.23", "-261.392, -173.86, 39.4678, 1.14", "-262.659, -175.072, 40.0357, 1.82", "-263.824, -176.204, 40.4812, 1.14", "-265.746, -177.961, 41.0823, 0.23", "-268.105, -180.082, 41.7733, 2.05", "-269.086, -180.908, 41.9842, 2.05" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-234.245, -145.276, 35.7122, 0.45", "-236.456, -145.87, 36.0008, 0.45", "-237.512, -146.144, 36.1594, 0.45", "-238.167, -146.324, 36.2675, 0.45", "-240.133, -146.886, 36.601, 1.82", "-241.874, -147.386, 36.8906, 0.23", "-242.725, -147.634, 37.0268, 1.36", "-243.918, -148.037, 37.2736, 2.05", "-245.088, -148.458, 37.5443, 0.23", "-245.531, -148.605, 37.6576, 1.36", "-246.487, -148.904, 37.9183, 0.23", "-247.357, -149.166, 38.1877, 1.36", "-248.622, -149.512, 38.5866, 0.23", "-249.927, -149.819, 38.966, 0.23", "-251.345, -150.065, 39.3835, 1.36", "-252.123, -150.168, 39.6061, 0.91", "-253.048, -150.268, 39.8768, 0.91", "-254.033, -150.336, 40.1594, 0.23", "-255.426, -150.408, 40.6242, 0.23", "-256.851, -150.499, 41.2381, 1.36", "-257.628, -150.545, 41.641, 1.36", "-259.02, -150.579, 42.4705, 0.23", "-261.084, -150.59, 43.7931, 1.14", "-262.912, -150.574, 45.0369, 0.23", "-264.221, -150.566, 45.9517, 1.14", "-265.176, -150.564, 46.6035, 0.23", "-266.338, -150.563, 47.369, 0.23", "-267.355, -150.561, 47.9662, 2.05", "-267.873, -150.584, 48.2305, 2.5", "-269.921, -150.742, 49.0396, 0.23", "-270.668, -150.825, 49.2859, 0.23", "-271.56, -150.969, 49.5978, 2.05", "-273.136, -151.302, 50.2284, 2.05", "-274.102, -151.541, 50.6814, 0.23", "-274.869, -151.775, 51.082, 0.91", "-275.79, -152.167, 51.6727, 0.23", "-276.668, -152.68, 52.401, 1.59", "-277.769, -153.613, 53.9512, 0.23", "-277.904, -153.751, 54.2626, 0.23", "-278.128, -153.936, 54.9337, 1.36", "-278.607, -154.216, 56.5901, 0.23", "-278.987, -154.303, 58.015, 1.36", "-279.82, -154.146, 60.9496, 0.23", "-280.418, -153.873, 63.1007, 0.23", "-281.019, -153.49, 65.1639, 0.23", "-281.268, -153.276, 65.9561, 0.91", "-281.765, -152.734, 67.2991, 0.23", "-282.055, -152.379, 67.9525, 0.91" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "330.108, 154.396, 13.0499, 0.23", "332.13, 155.234, 13.4026, 0.23", "333.864, 156.058, 13.7431, 1.36", "336.336, 157.198, 14.2281, 0.23", "338.051, 157.962, 14.5499, 0.68", "339.93, 158.729, 14.874, 0.23", "341.986, 159.548, 15.2817, 1.82", "343.433, 160.072, 15.5361, 2.5", "346.479, 160.973, 15.9739, 0.23", "347.703, 161.24, 16.1212, 0.91", "349.845, 161.628, 16.3862, 0.91", "352.44, 162.029, 16.7299, 0.23", "355.122, 162.405, 17.0571, 2.05", "358.298, 162.799, 17.4815, 0.23", "360.208, 163.08, 17.7946, 0.91", "362.853, 163.516, 18.258, 0.23", "364.524, 163.851, 18.5938, 2.05", "366.378, 164.259, 18.9807, 0.23", "367.986, 164.691, 19.3709, 1.14", "370.648, 165.648, 19.9736, 0.91", "373.165, 166.692, 20.4333, 0.23", "374.965, 167.42, 20.7148, 0.23", "376.333, 168.016, 20.9448, 0.23", "378.071, 168.833, 21.2497, 2.5", "380.439, 170.121, 21.6367, 0.23", "382.563, 171.475, 21.8619, 1.14" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "330.108, 154.396, 13.0499, 0.45", "330.151, 153.897, 16.2168, 0.45", "330.392, 153.242, 19.5471, 0.45", "330.814, 152.098, 25.3691, 0.45", "330.925, 151.799, 26.8903, 0.91", "331.008, 151.574, 28.0379, 0.23", "331.219, 151.001, 30.9522, 0.23", "331.279, 150.601, 33.4117, 0.68" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "208.871, 366.569, -102.411, 0.23", "212.222, 375.151, -107.968, 0.23", "215.689, 384.866, -111.103, 0.23" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "208.871, 366.569, -102.411, 0.68", "210.9, 375.892, -106.1, 0.23", "211.671, 385.867, -108.324, 0.23", "211.902, 395.94, -110.201, 0.23", "212.94, 405.958, -112.097, 0.23", "213.28, 416.096, -113.569, 0.23", "214.486, 425.728, -116.83, 0.23", "216.815, 435.588, -118.341, 0.23" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "193.37, -217.536, 147.838, 0.23", "194.878, -219.713, 147.096, 0.23", "195.798, -220.984, 146.734, 1.14", "197.3, -223.061, 146.144, 0.23", "199.526, -226.138, 145.269, 1.14", "201.668, -229.099, 144.427, 0.23", "202.28, -229.946, 144.186, 1.14", "203.415, -231.468, 143.79, 0.23" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "193.37, -217.536, 147.838, 0.68", "195.33, -215.885, 148.325, 0.68", "197.637, -213.982, 149.348, 0.23", "198.475, -213.386, 149.73, 0.23", "199.548, -212.624, 150.221, 0.91", "201.231, -211.428, 150.989, 0.23", "202.831, -210.29, 151.721, 1.14", "206.477, -207.223, 153.369, 0.23", "207.713, -206.189, 153.949, 0.68" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "196.7, 237.561, -33.7891, 0.23", "203.716, 240.416, -38.5768, 0.23", "210.667, 243.366, -43.406, 0.23", "218.013, 246.93, -47.1354, 0.23", "226.134, 249.256, -50.1191, 0.23", "234.556, 250.136, -52.9969, 0.23", "242.567, 250.168, -56.9659, 0.23", "249.681, 250.817, -62.3435, 0.23", "257.612, 249.412, -66.2308, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "196.7, 237.561, -33.7891, 0.68", "202.89, 245.487, -32.0702, 0.23", "208.197, 253.508, -28.7161, 0.23", "213.254, 261.287, -24.5526, 0.23", "217.99, 268.176, -18.8253, 0.23", "222.586, 274.13, -12.0739, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-269.086, -180.908, 41.9842, 0.68", "-271.088, -183.214, 43.349, 0.68", "-272.297, -184.444, 44.1205, 0.68", "-273.887, -186.044, 45.1044, 1.36", "-275.028, -187.244, 45.9198, 1.82", "-275.985, -188.282, 46.6878, 1.82", "-277.02, -189.47, 47.5749, 0.45", "-278.859, -191.676, 49.2402, 1.36", "-279.422, -192.428, 49.7638, 1.36", "-281.266, -195.035, 51.501, 0.23", "-282.348, -196.6, 52.4638, 0.91", "-283.065, -197.634, 53.0573, 0.91", "-284.246, -199.33, 53.9008, 0.23", "-285.446, -201.054, 54.5831, 0.23", "-286.672, -202.64, 55.086, 1.36", "-288.484, -204.739, 55.6527, 0.23", "-289.668, -206.0, 55.9863, 0.91", "-291.539, -207.77, 56.5376, 0.23", "-293.108, -209.166, 57.0204, 0.23", "-295.099, -210.997, 57.6682, 1.36", "-297.605, -213.409, 58.6035, 0.23", "-298.746, -214.59, 59.1025, 0.23", "-300.248, -216.228, 59.814, 1.82", "-301.119, -217.24, 60.2525, 2.27", "-302.71, -219.352, 61.0806, 0.23", "-304.272, -221.757, 61.884, 1.14", "-305.287, -223.489, 62.3333, 0.23", "-306.221, -225.155, 62.712, 1.36", "-306.854, -226.306, 62.9267, 1.36", "-308.426, -229.084, 63.3967, 0.23", "-309.366, -230.629, 63.6199, 0.23", "-310.466, -232.545, 63.8369, 1.82", "-311.119, -233.686, 63.9662, 1.82", "-312.23, -235.75, 64.2681, 0.45", "-312.876, -236.952, 64.5008, 1.14", "-313.724, -238.482, 64.8814, 1.14", "-315.026, -240.834, 65.5885, 0.23", "-316.229, -243.006, 66.379, 1.59", "-317.718, -245.687, 67.5189, 0.23", "-318.878, -247.736, 68.4509, 2.05", "-320.087, -249.818, 69.4224, 0.23", "-320.998, -251.481, 70.2113, 0.68", "-322.257, -253.781, 71.3055, 0.23", "-323.134, -255.524, 72.0916, 1.14", "-324.449, -258.267, 73.211, 0.23", "-324.937, -259.43, 73.642, 1.14", "-326.484, -263.342, 74.9497, 0.23", "-326.888, -264.406, 75.2641, 0.23", "-327.46, -265.999, 75.6738, 1.36", "-327.905, -267.305, 75.9803, 1.36", "-328.901, -270.384, 76.7197, 0.23", "-329.622, -272.605, 77.227, 1.82", "-330.222, -274.285, 77.554, 0.23", "-330.712, -275.6, 77.8137, 0.23", "-331.503, -277.488, 78.1852, 1.14" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-269.086, -180.908, 41.9842, 0.23", "-272.669, -183.106, 42.5146, 0.23", "-275.483, -184.609, 42.9711, 0.68", "-276.679, -185.188, 43.1573, 0.23", "-278.881, -186.232, 43.4952, 1.36", "-281.224, -187.293, 43.8277, 0.45", "-282.623, -187.907, 44.0109, 0.23", "-284.675, -188.685, 44.2608, 1.14", "-287.011, -189.495, 44.4811, 0.23", "-288.165, -189.912, 44.5614, 1.36", "-289.607, -190.438, 44.6353, 1.36", "-290.603, -190.816, 44.7068, 2.05", "-293.654, -192.136, 45.0382, 0.45", "-294.926, -192.773, 45.2095, 0.91", "-296.155, -193.428, 45.426, 0.23", "-297.799, -194.303, 45.8033, 1.59", "-301.042, -195.97, 46.6267, 0.23", "-303.594, -197.215, 47.2904, 1.36", "-305.395, -198.058, 47.753, 0.23", "-307.246, -198.916, 48.2182, 1.59", "-310.668, -200.541, 49.028, 0.23", "-312.556, -201.486, 49.4217, 0.91", "-314.236, -202.342, 49.6848, 0.23", "-316.369, -203.463, 49.8389, 1.36", "-317.564, -204.149, 49.8121, 0.45", "-319.897, -205.697, 49.4999, 1.59", "-322.262, -207.475, 48.9268, 0.23", "-323.466, -208.435, 48.5879, 1.14", "-326.467, -210.826, 47.6399, 0.23", "-328.856, -212.63, 46.8253, 0.23", "-331.957, -214.756, 45.7772, 2.05", "-334.169, -216.161, 45.0485, 0.45", "-336.168, -217.372, 44.4664, 1.36", "-337.285, -218.021, 44.2061, 0.23", "-339.295, -219.09, 43.8617, 1.14", "-342.855, -220.941, 43.4175, 0.23", "-344.319, -221.711, 43.2771, 1.36", "-346.926, -223.161, 43.042, 0.23", "-348.293, -223.991, 42.8979, 0.23", "-349.946, -225.118, 42.7257, 1.14", "-353.323, -227.701, 42.3782, 0.23", "-355.531, -229.521, 42.1046, 0.23", "-357.215, -231.022, 41.8302, 0.23", "-358.184, -231.945, 41.6487, 0.23", "-360.695, -234.538, 41.1587, 1.36", "-361.908, -235.898, 40.9364, 0.23", "-363.565, -237.791, 40.643, 1.36", "-365.916, -240.432, 40.2708, 0.23", "-367.336, -241.899, 40.0729, 1.14", "-369.864, -244.108, 39.7388, 0.23", "-371.404, -245.218, 39.5466, 1.36", "-374.554, -247.101, 39.2034, 0.23", "-376.803, -248.147, 38.9746, 0.91", "-378.96, -248.863, 38.737, 0.23", "-382.429, -249.784, 38.2145, 2.5", "-385.593, -250.503, 37.6175, 0.23", "-386.813, -250.797, 37.3482, 1.14", "-389.923, -251.688, 36.5141, 0.23", "-392.018, -252.417, 35.847, 1.36", "-395.662, -253.946, 34.5475, 0.23", "-397.237, -254.677, 33.9083, 0.23", "-399.303, -255.664, 32.9018, 1.36", "-401.553, -256.72, 31.6779, 0.23", "-403.449, -257.56, 30.5361, 0.68", "-404.508, -257.962, 29.8876, 0.23", "-406.015, -258.404, 29.0016, 1.36", "-407.715, -258.788, 28.1124, 0.23", "-409.625, -259.124, 27.227, 2.27", "-412.595, -259.561, 26.0618, 0.23", "-414.896, -259.848, 25.2088, 0.23", "-417.225, -260.072, 24.4424, 0.91", "-419.919, -260.326, 23.7428, 0.23", "-421.659, -260.449, 23.4002, 0.23", "-423.518, -260.553, 23.0893, 1.14", "-425.763, -260.57, 22.7531, 0.23", "-428.093, -260.469, 22.4217, 0.23", "-430.614, -260.245, 22.1248, 1.36", "-433.405, -260.014, 21.87, 0.23", "-434.832, -259.94, 21.7933, 0.23" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-282.055, -152.379, 67.9525, 0.23", "-284.079, -153.611, 68.4541, 0.23", "-285.707, -154.639, 69.1564, 1.14", "-288.639, -156.637, 70.6791, 0.23", "-290.12, -157.762, 71.5319, 0.23", "-291.621, -159.05, 72.4825, 0.23", "-294.041, -161.361, 74.113, 0.91", "-296.319, -163.951, 76.1807, 0.23", "-297.14, -164.979, 77.0468, 0.68", "-298.234, -166.558, 78.4364, 0.23", "-299.009, -167.836, 79.521, 1.14", "-299.771, -169.237, 80.7812, 0.23", "-300.805, -171.974, 82.7948, 2.05" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-282.055, -152.379, 67.9525, 0.23", "-283.182, -149.168, 68.9818, 0.23", "-284.269, -145.532, 70.1516, 0.23", "-284.853, -143.577, 70.7806, 1.14", "-285.485, -141.465, 71.4601, 0.23", "-286.164, -139.194, 72.1905, 0.23", "-286.96, -136.53, 73.0477, 0.23", "-287.215, -135.538, 73.4729, 0.91" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "382.563, 171.475, 21.8619, 0.23", "385.589, 172.77, 21.4045, 0.23", "389.305, 174.342, 20.8575, 0.68", "391.763, 175.461, 20.5873, 0.23", "393.532, 176.303, 20.4341, 0.91", "396.817, 177.921, 20.0743, 0.23", "399.771, 179.441, 19.6315, 0.91", "401.604, 180.447, 19.3281, 0.23", "404.921, 182.348, 18.6739, 0.23", "407.92, 184.155, 17.9302, 1.14", "411.374, 186.223, 16.9924, 0.23", "414.132, 187.936, 16.1439, 0.23", "415.725, 188.94, 15.593, 0.23", "417.083, 189.844, 15.0359, 0.23", "419.697, 191.55, 13.6433, 1.14" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "382.563, 171.475, 21.8619, 0.23", "385.391, 172.275, 22.4262, 0.23", "387.914, 172.988, 22.9295, 2.27" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "215.689, 384.866, -111.103, 0.23", "217.114, 388.816, -112.944, 0.23" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "215.689, 384.866, -111.103, 0.68", "219.271, 392.52, -115.393, 0.23" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "257.612, 249.412, -66.2308, 0.23", "265.838, 250.559, -69.1027, 0.23", "273.65, 252.266, -72.7622, 0.23", "280.885, 253.69, -77.5512, 0.23", "288.115, 254.176, -82.5159, 0.23", "295.272, 255.444, -87.4602, 0.23", "301.732, 257.372, -93.1174, 0.23", "309.003, 258.41, -97.9439, 0.23", "315.91, 261.186, -102.662, 0.23", "322.419, 264.669, -107.503, 0.23", "328.131, 267.268, -113.689, 0.23", "334.474, 269.965, -119.181, 0.23", "341.01, 272.869, -124.337, 0.23", "346.296, 274.277, -131.223, 0.23", "351.498, 276.841, -137.859, 0.23", "356.128, 278.864, -145.069, 0.23", "359.895, 281.604, -152.555, 0.23", "362.908, 285.279, -160.007, 0.23", "366.555, 289.117, -167.088, 0.23", "370.135, 292.763, -174.297, 0.23", "374.058, 297.397, -180.752, 0.23", "376.89, 303.832, -186.239, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "257.612, 249.412, -66.2308, 0.68", "266.167, 251.248, -71.2076, 0.23", "275.349, 252.627, -75.0919, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-331.503, -277.488, 78.1852, 0.23", "-332.27, -278.579, 78.3608, 0.23", "-333.905, -280.661, 78.6652, 2.5", "-336.639, -283.928, 79.113, 0.23", "-337.707, -285.175, 79.2795, 1.36", "-339.052, -286.716, 79.4809, 0.23", "-340.253, -287.996, 79.6643, 0.68", "-342.452, -290.121, 79.9889, 0.23", "-343.981, -291.467, 80.2115, 0.91", "-344.772, -292.088, 80.3205, 0.23", "-345.778, -292.885, 80.4696, 1.36", "-348.17, -294.867, 80.8578, 0.23", "-348.995, -295.61, 81.0054, 0.23", "-349.886, -296.516, 81.2216, 1.59", "-350.764, -297.469, 81.4635, 1.59", "-353.44, -300.536, 82.3492, 0.23", "-354.671, -302.103, 82.8368, 2.05", "-356.251, -304.425, 83.6159, 0.23", "-357.532, -306.44, 84.3379, 1.59", "-358.273, -307.681, 84.8077, 1.59", "-359.565, -310.04, 85.729, 0.23", "-360.343, -311.563, 86.2983, 1.36", "-361.808, -314.611, 87.2035, 0.23", "-362.664, -316.411, 87.5888, 0.68", "-363.075, -317.209, 87.6643, 0.68", "-364.887, -320.417, 87.6616, 0.23", "-365.882, -322.074, 87.5944, 1.14", "-367.441, -324.554, 87.4642, 0.23", "-368.513, -326.31, 87.3583, 0.23", "-369.83, -328.728, 87.2993, 0.23", "-370.409, -330.097, 87.3626, 1.59", "-370.795, -334.009, 88.2727, 0.23", "-370.603, -335.202, 88.796, 0.23", "-370.158, -336.65, 89.5341, 0.23", "-369.574, -338.366, 90.3808, 1.36", "-368.874, -340.495, 91.4009, 1.36", "-368.141, -343.192, 92.5032, 0.23", "-367.992, -344.496, 92.8458, 1.14", "-368.085, -346.427, 93.2372, 0.23", "-368.525, -349.032, 93.6624, 0.68", "-368.859, -350.426, 93.7961, 0.68", "-369.265, -351.869, 93.8737, 0.23", "-369.923, -354.352, 93.9532, 1.14", "-370.559, -356.671, 94.0198, 0.23", "-371.173, -359.039, 94.16, 1.14", "-371.89, -361.97, 94.3774, 0.23", "-372.372, -364.129, 94.5986, 0.23", "-372.723, -365.599, 94.7807, 1.14", "-373.54, -368.841, 95.2894, 0.23", "-374.248, -371.42, 95.7329, 0.23", "-374.747, -373.266, 96.1045, 1.36", "-375.543, -376.087, 96.7672, 0.23", "-375.943, -377.514, 97.1912, 1.14", "-376.709, -380.052, 98.0722, 0.23", "-377.004, -380.944, 98.4448, 0.91", "-378.019, -383.501, 99.6444, 0.23", "-378.878, -385.402, 100.606, 1.14", "-380.524, -388.551, 102.115, 0.68", "-381.376, -390.107, 102.715, 0.23", "-383.063, -392.915, 103.489, 1.14", "-383.758, -393.967, 103.714, 0.23", "-384.883, -395.489, 103.967, 0.68", "-386.758, -398.019, 104.269, 0.23", "-388.638, -400.437, 104.392, 0.23", "-390.144, -402.345, 104.512, 2.95", "-392.164, -404.796, 104.591, 0.23", "-393.777, -406.695, 104.697, 0.68", "-394.936, -408.08, 104.782, 0.68", "-395.844, -409.166, 104.845, 0.23", "-396.481, -409.945, 104.86, 0.91", "-398.136, -412.112, 104.676, 0.23", "-399.094, -413.424, 104.462, 0.91", "-400.995, -416.025, 103.984, 0.23", "-402.175, -417.599, 103.735, 0.23", "-403.454, -419.303, 103.535, 0.91", "-404.944, -421.163, 103.39, 0.23", "-406.269, -422.733, 103.376, 2.73", "-406.78, -423.307, 103.412, 2.73", "-408.635, -425.401, 103.734, 0.23", "-409.595, -426.508, 103.96, 1.14", "-410.813, -427.912, 104.266, 0.23", "-412.664, -430.084, 104.77, 0.23", "-414.241, -432.119, 105.271, 0.23", "-415.247, -433.582, 105.635, 1.14", "-416.013, -434.818, 105.935, 0.23", "-416.709, -436.117, 106.152, 1.82", "-417.15, -437.028, 106.25, 1.82", "-418.297, -439.504, 106.425, 0.23", "-419.212, -441.531, 106.474, 1.14", "-420.633, -444.665, 106.478, 0.23", "-421.957, -447.852, 106.434, 2.73", "-422.512, -449.275, 106.381, 2.73" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-331.503, -277.488, 78.1852, 0.23", "-329.589, -277.948, 77.9415, 0.23", "-327.015, -278.567, 77.6136, 0.91", "-325.48, -278.935, 77.4182, 0.23", "-322.663, -279.612, 77.0594, 0.68", "-319.714, -280.321, 76.6839, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "387.914, 172.988, 22.9295, 0.23", "390.568, 172.021, 24.3555, 0.23", "392.511, 171.361, 25.3328, 0.45", "394.673, 170.711, 26.3144, 0.23", "397.327, 169.973, 27.4115, 0.91", "398.756, 169.545, 27.9848, 0.23", "400.705, 168.909, 28.7696, 1.14", "402.358, 168.391, 29.4494, 0.23", "404.698, 167.759, 30.4225, 0.23", "407.378, 167.154, 31.4948, 1.14", "410.209, 166.654, 32.5698, 0.23", "412.117, 166.411, 33.2863, 0.68", "415.102, 166.143, 34.396, 0.23", "418.543, 166.021, 35.5991, 0.68", "421.193, 166.108, 36.4822, 0.23", "424.283, 166.452, 37.4124, 0.68", "427.094, 166.974, 38.1269, 0.23", "428.142, 167.203, 38.3595, 0.91", "430.891, 167.846, 38.8499, 0.23", "433.046, 168.401, 39.1592, 0.68", "434.227, 168.716, 39.3404, 0.23", "436.075, 169.264, 39.5937, 0.91" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "387.914, 172.988, 22.9295, 0.23", "389.469, 175.374, 23.3665, 0.23", "390.741, 177.249, 23.6274, 0.23", "391.809, 178.764, 23.7766, 1.14", "393.817, 181.57, 24.0591, 0.23", "395.492, 184.01, 24.3234, 0.23", "396.298, 185.185, 24.4508, 1.14", "397.914, 187.462, 24.7019, 0.23", "398.861, 188.847, 24.8698, 0.23", "400.04, 190.581, 25.0416, 1.59", "401.272, 192.391, 25.125, 2.27" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_0", "dend_65", "dend_48", "dend_24", "dend_1", "dend_85", "dend_66", "dend_60", "dend_49", "dend_42", "dend_25", "dend_21", "dend_2", "dend_107", "dend_86", "dend_76", "dend_67", "dend_64", "dend_61", "dend_55", "dend_50", "dend_44", "dend_43", "dend_39", "dend_26", "dend_23", "dend_22", "dend_18", "dend_3", "dend_109", "dend_108", "dend_96", "dend_87", "dend_84", "dend_77", "dend_75", "dend_68", "dend_63", "dend_62", "dend_57", "dend_56", "dend_54", "dend_51", "dend_46", "dend_45", "dend_41", "dend_40", "dend_38", "dend_27", "dend_20", "dend_19", "dend_7", "dend_4", "dend_106", "dend_97", "dend_95", "dend_88", "dend_79", "dend_78", "dend_72", "dend_69", "dend_59", "dend_58", "dend_53", "dend_52", "dend_31", "dend_28", "dend_17", "dend_8", "dend_6", "dend_5", "dend_99", "dend_98", "dend_94", "dend_89", "dend_81", "dend_80", "dend_74", "dend_73", "dend_71", "dend_70", "dend_37", "dend_32", "dend_30", "dend_29", "dend_12", "dend_9", "dend_101", "dend_100", "dend_91", "dend_90", "dend_83", "dend_82", "dend_34", "dend_33", "dend_14", "dend_13", "dend_11", "dend_10", "dend_105", "dend_102", "dend_93", "dend_92", "dend_36", "dend_35", "dend_16", "dend_15", "dend_104", "dend_103" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_47", "dend_0", "dend_65", "dend_48", "dend_24", "dend_1", "dend_85", "dend_66", "dend_60", "dend_49", "dend_42", "dend_25", "dend_21", "dend_2", "dend_107", "dend_86", "dend_76", "dend_67", "dend_64", "dend_61", "dend_55", "dend_50", "dend_44", "dend_43", "dend_39", "dend_26", "dend_23", "dend_22", "dend_18", "dend_3", "dend_109", "dend_108", "dend_96", "dend_87", "dend_84", "dend_77", "dend_75", "dend_68", "dend_63", "dend_62", "dend_57", "dend_56", "dend_54", "dend_51", "dend_46", "dend_45", "dend_41", "dend_40", "dend_38", "dend_27", "dend_20", "dend_19", "dend_7", "dend_4", "dend_106", "dend_97", "dend_95", "dend_88", "dend_79", "dend_78", "dend_72", "dend_69", "dend_59", "dend_58", "dend_53", "dend_52", "dend_31", "dend_28", "dend_17", "dend_8", "dend_6", "dend_5", "dend_99", "dend_98", "dend_94", "dend_89", "dend_81", "dend_80", "dend_74", "dend_73", "dend_71", "dend_70", "dend_37", "dend_32", "dend_30", "dend_29", "dend_12", "dend_9", "dend_101", "dend_100", "dend_91", "dend_90", "dend_83", "dend_82", "dend_34", "dend_33", "dend_14", "dend_13", "dend_11", "dend_10", "dend_105", "dend_102", "dend_93", "dend_92", "dend_36", "dend_35", "dend_16", "dend_15", "dend_104", "dend_103" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_47", "dend_0", "axon_0", "dend_65", "dend_48", "dend_24", "dend_1", "axon_1", "dend_85", "dend_66", "dend_60", "dend_49", "dend_42", "dend_25", "dend_21", "dend_2", "dend_107", "dend_86", "dend_76", "dend_67", "dend_64", "dend_61", "dend_55", "dend_50", "dend_44", "dend_43", "dend_39", "dend_26", "dend_23", "dend_22", "dend_18", "dend_3", "dend_109", "dend_108", "dend_96", "dend_87", "dend_84", "dend_77", "dend_75", "dend_68", "dend_63", "dend_62", "dend_57", "dend_56", "dend_54", "dend_51", "dend_46", "dend_45", "dend_41", "dend_40", "dend_38", "dend_27", "dend_20", "dend_19", "dend_7", "dend_4", "dend_106", "dend_97", "dend_95", "dend_88", "dend_79", "dend_78", "dend_72", "dend_69", "dend_59", "dend_58", "dend_53", "dend_52", "dend_31", "dend_28", "dend_17", "dend_8", "dend_6", "dend_5", "dend_99", "dend_98", "dend_94", "dend_89", "dend_81", "dend_80", "dend_74", "dend_73", "dend_71", "dend_70", "dend_37", "dend_32", "dend_30", "dend_29", "dend_12", "dend_9", "dend_101", "dend_100", "dend_91", "dend_90", "dend_83", "dend_82", "dend_34", "dend_33", "dend_14", "dend_13", "dend_11", "dend_10", "dend_105", "dend_102", "dend_93", "dend_92", "dend_36", "dend_35", "dend_16", "dend_15", "dend_104", "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_48", "dend_48", "dend_48", "dend_48", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_2", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_109", "dend_108", "dend_108", "dend_108", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_102", "dend_102", "dend_93", "dend_92", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_LBC_e7a596714b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_65, id: dend_65, parent: dend_47
create dend_65
public dend_65
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_24, id: dend_24, parent: dend_0
create dend_24
public dend_24
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_65
create dend_85
public dend_85
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_60, id: dend_60, parent: dend_48
create dend_60
public dend_60
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: dend_24
create dend_42
public dend_42
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_1
create dend_21
public dend_21
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_107, id: dend_107, parent: dend_85
create dend_107
public dend_107
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_76, id: dend_76, parent: dend_66
create dend_76
public dend_76
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_60
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_55, id: dend_55, parent: dend_49
create dend_55
public dend_55
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_25
create dend_39
public dend_39
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_2
create dend_18
public dend_18
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_96, id: dend_96, parent: dend_86
create dend_96
public dend_96
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_84, id: dend_84, parent: dend_76
create dend_84
public dend_84
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_75, id: dend_75, parent: dend_67
create dend_75
public dend_75
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_26
create dend_38
public dend_38
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_106, id: dend_106, parent: dend_96
create dend_106
public dend_106
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_95, id: dend_95, parent: dend_87
create dend_95
public dend_95
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_7
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_99, id: dend_99, parent: dend_97
create dend_99
public dend_99
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_94, id: dend_94, parent: dend_88
create dend_94
public dend_94
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_105, id: dend_105, parent: dend_101
create dend_105
public dend_105
// Section: dend_102, id: dend_102, parent: dend_101
create dend_102
public dend_102
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_0, dend_65, dend_48, dend_24, dend_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_0, dend_65, dend_48, dend_24, dend_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_0, axon_0, dend_65, dend_48, dend_24, dend_1, axon_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_107
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_48, dend_48, dend_48, dend_48, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_26, dend_26, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_109, dend_108, dend_108, dend_108, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_102, dend_102, dend_93, dend_92, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_47(0), soma_0(0.4500004585168592)
    connect dend_0(0), soma_0(0.4500004585168592)
    connect axon_0(0), soma_0(1.0)
    connect dend_65(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_24(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_60(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_42(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_107(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_76(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_64(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_55(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_96(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_84(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_75(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_106(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_95(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_17(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_99(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_94(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_105(0), dend_101(1.0)
    connect dend_102(0), dend_101(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -15.6431, -2.66144, 0.0, 3.30324 ) }
    soma_0 { pt3dadd( -14.0603, -2.4613, 0.0, 5.78525 ) }
    soma_0 { pt3dadd( -12.4774, -2.26116, 0.0, 7.9612 ) }
    soma_0 { pt3dadd( -10.8946, -2.06102, 0.0, 9.78332 ) }
    soma_0 { pt3dadd( -9.31178, -1.86088, 0.0, 11.2789 ) }
    soma_0 { pt3dadd( -7.72896, -1.66074, 0.0, 12.7179 ) }
    soma_0 { pt3dadd( -6.14614, -1.4606, 0.0, 13.968 ) }
    soma_0 { pt3dadd( -4.56331, -1.26046, 0.0, 15.126 ) }
    soma_0 { pt3dadd( -2.98049, -1.06032, 0.0, 16.024 ) }
    soma_0 { pt3dadd( -1.39766, -0.860182, 0.0, 16.3577 ) }
    soma_0 { pt3dadd( 0.185161, -0.660042, 0.0, 16.6168 ) }
    soma_0 { pt3dadd( 1.76798, -0.459902, 0.0, 16.4395 ) }
    soma_0 { pt3dadd( 3.35081, -0.259762, 0.0, 16.1401 ) }
    soma_0 { pt3dadd( 4.93363, -0.0596226, 0.0, 15.4809 ) }
    soma_0 { pt3dadd( 6.51646, 0.140517, 0.0, 14.5881 ) }
    soma_0 { pt3dadd( 8.09928, 0.340657, 0.0, 13.7036 ) }
    soma_0 { pt3dadd( 9.6821, 0.540797, 0.0, 12.5552 ) }
    soma_0 { pt3dadd( 11.2649, 0.740937, 0.0, 10.9185 ) }
    soma_0 { pt3dadd( 12.8478, 0.941077, 0.0, 9.17326 ) }
    soma_0 { pt3dadd( 14.4306, 1.14122, 0.0, 6.97209 ) }
    soma_0 { pt3dadd( 16.0134, 1.34136, 0.0, 4.21565 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 12.1654, 2.55051, 1.3, 6.82 ) }
    dend_47 { pt3dadd( 15.1185, 3.22991, 2.02846, 6.82 ) }
    dend_47 { pt3dadd( 17.7922, 3.84502, 2.68797, 6.14 ) }
    dend_47 { pt3dadd( 18.8365, 4.08527, 2.94558, 6.14 ) }
    dend_47 { pt3dadd( 20.6912, 4.51195, 3.40306, 6.82 ) }
    dend_47 { pt3dadd( 23.0233, 5.04848, 3.97833, 6.82 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -13.7947, -3.58926, -1.22, 6.59 ) }
    dend_0 { pt3dadd( -19.4019, -6.99251, -3.72833, 5.23 ) }
    dend_0 { pt3dadd( -25.6209, -10.767, -6.51034, 5.45 ) }
    dend_0 { pt3dadd( -29.8006, -13.3039, -8.38013, 5.45 ) }
    dend_0 { pt3dadd( -35.1218, -16.5336, -10.7605, 6.14 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 16.0134, 1.34136, 0.0, 1.34158 ) }
    axon_0 { pt3dadd( 30.8949, 3.22305, 0.0, 1.34158 ) }
    axon_0 { pt3dadd( 45.7764, 5.10474, 0.0, 1.34158 ) }
    // Section: dend_65, id: dend_65, parent: dend_47 (entry count 35/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 23.0233, 5.04848, 3.97833, 3.64 ) }
    dend_65 { pt3dadd( 25.1169, 5.26531, 4.53914, 3.64 ) }
    dend_65 { pt3dadd( 29.5092, 5.72025, 5.71575, 3.64 ) }
    dend_65 { pt3dadd( 33.8865, 6.17362, 6.88833, 3.64 ) }
    dend_65 { pt3dadd( 40.2265, 6.83027, 8.58666, 3.64 ) }
    dend_65 { pt3dadd( 44.6846, 7.29202, 9.78089, 3.64 ) }
    dend_65 { pt3dadd( 51.8208, 8.03113, 11.6925, 5.0 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 42/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 23.0233, 5.04848, 3.97833, 0.91 ) }
    dend_48 { pt3dadd( 26.4881, 5.36402, 6.15447, 0.91 ) }
    dend_48 { pt3dadd( 29.0322, 5.59571, 7.75228, 1.36 ) }
    dend_48 { pt3dadd( 31.628, 5.83211, 9.38262, 1.36 ) }
    dend_48 { pt3dadd( 34.056, 6.05324, 10.9076, 1.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_0 (entry count 47/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -35.1218, -16.5336, -10.7605, 2.27 ) }
    dend_24 { pt3dadd( -35.7911, -13.2301, -12.2513, 2.27 ) }
    dend_24 { pt3dadd( -36.6033, -9.2216, -14.0603, 1.59 ) }
    dend_24 { pt3dadd( -37.2318, -6.12004, -15.46, 1.59 ) }
    dend_24 { pt3dadd( -37.6262, -4.17328, -16.3386, 1.59 ) }
    dend_24 { pt3dadd( -38.3245, -0.726886, -17.8939, 1.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 53/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -35.1218, -16.5336, -10.7605, 4.55 ) }
    dend_1 { pt3dadd( -39.2221, -19.287, -10.7254, 4.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 45.7764, 5.10474, 0.0, 0.153092 ) }
    axon_1 { pt3dadd( 60.6579, 6.98643, 0.0, 0.153092 ) }
    axon_1 { pt3dadd( 75.5394, 8.86812, 0.0, 0.153092 ) }
    // Section: dend_85, id: dend_85, parent: dend_65 (entry count 58/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 51.8208, 8.03113, 11.6925, 2.73 ) }
    dend_85 { pt3dadd( 55.2874, 8.71019, 11.144, 2.73 ) }
    dend_85 { pt3dadd( 59.0672, 9.4506, 10.546, 2.73 ) }
    dend_85 { pt3dadd( 62.8118, 10.1841, 9.95361, 2.73 ) }
    dend_85 { pt3dadd( 67.1864, 11.0411, 9.26149, 3.41 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 63/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 51.8208, 8.03113, 11.6925, 1.82 ) }
    dend_66 { pt3dadd( 55.2089, 5.18836, 12.634, 1.82 ) }
    dend_66 { pt3dadd( 58.208, 2.85903, 13.578, 1.36 ) }
    dend_66 { pt3dadd( 61.2446, 0.442836, 14.7802, 1.59 ) }
    dend_66 { pt3dadd( 63.9905, -1.72524, 15.9416, 1.59 ) }
    dend_66 { pt3dadd( 66.4078, -3.62935, 16.9957, 1.59 ) }
    dend_66 { pt3dadd( 68.5643, -5.38116, 17.9696, 1.36 ) }
    dend_66 { pt3dadd( 70.5904, -7.09639, 19.0011, 1.36 ) }
    dend_66 { pt3dadd( 73.0882, -9.5639, 20.4079, 2.27 ) }
    dend_66 { pt3dadd( 75.3424, -11.9138, 21.7424, 2.05 ) }
    dend_66 { pt3dadd( 78.1359, -15.0194, 23.4879, 0.91 ) }
    dend_66 { pt3dadd( 79.7304, -16.9041, 24.4682, 1.14 ) }
    dend_66 { pt3dadd( 81.7916, -19.6446, 25.7301, 1.14 ) }
    dend_66 { pt3dadd( 84.1222, -23.1389, 27.0829, 1.14 ) }
    // Section: dend_60, id: dend_60, parent: dend_48 (entry count 77/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 34.056, 6.05324, 10.9076, 0.68 ) }
    dend_60 { pt3dadd( 37.6022, 5.90478, 10.7728, 0.68 ) }
    dend_60 { pt3dadd( 41.7971, 5.72558, 10.6614, 0.68 ) }
    dend_60 { pt3dadd( 47.2764, 5.47228, 10.5469, 0.45 ) }
    dend_60 { pt3dadd( 50.6988, 5.34816, 10.5291, 0.91 ) }
    dend_60 { pt3dadd( 54.6329, 5.30411, 10.548, 0.91 ) }
    dend_60 { pt3dadd( 57.883, 5.33043, 10.6338, 0.23 ) }
    dend_60 { pt3dadd( 60.8968, 5.5427, 10.7704, 1.14 ) }
    dend_60 { pt3dadd( 63.2319, 5.83774, 10.9287, 1.82 ) }
    dend_60 { pt3dadd( 67.1873, 6.48403, 11.2736, 0.91 ) }
    dend_60 { pt3dadd( 71.1984, 7.19045, 11.7527, 0.68 ) }
    dend_60 { pt3dadd( 76.1495, 8.18132, 12.747, 0.68 ) }
    dend_60 { pt3dadd( 79.0043, 8.85186, 13.7079, 0.45 ) }
    dend_60 { pt3dadd( 80.6379, 9.26569, 14.4473, 1.14 ) }
    dend_60 { pt3dadd( 82.4729, 9.7937, 15.4939, 0.23 ) }
    dend_60 { pt3dadd( 83.9493, 10.2543, 16.6167, 2.27 ) }
    dend_60 { pt3dadd( 87.8891, 11.5209, 20.3408, 1.14 ) }
    dend_60 { pt3dadd( 91.9212, 12.8008, 24.5889, 0.45 ) }
    dend_60 { pt3dadd( 92.7927, 13.0546, 25.5745, 1.36 ) }
    dend_60 { pt3dadd( 94.6309, 13.6063, 27.7701, 1.36 ) }
    dend_60 { pt3dadd( 97.5774, 14.6575, 31.4758, 0.23 ) }
    dend_60 { pt3dadd( 98.8662, 15.1758, 33.0656, 0.23 ) }
    dend_60 { pt3dadd( 100.048, 15.6857, 34.3878, 2.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 0/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 34.056, 6.05324, 10.9076, 1.14 ) }
    dend_49 { pt3dadd( 35.3332, 6.54844, 11.0577, 1.14 ) }
    dend_49 { pt3dadd( 37.7377, 7.48069, 11.3404, 2.27 ) }
    // Section: dend_42, id: dend_42, parent: dend_24 (entry count 3/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -38.3245, -0.726886, -17.8939, 0.45 ) }
    dend_42 { pt3dadd( -39.7753, 1.34369, -17.7856, 0.45 ) }
    dend_42 { pt3dadd( -41.362, 3.61334, -17.7477, 0.45 ) }
    dend_42 { pt3dadd( -41.8833, 4.42797, -17.757, 1.14 ) }
    dend_42 { pt3dadd( -43.2817, 6.85317, -17.8608, 0.23 ) }
    dend_42 { pt3dadd( -44.0521, 8.311, -17.9535, 0.23 ) }
    dend_42 { pt3dadd( -44.8949, 9.97103, -17.9632, 1.14 ) }
    dend_42 { pt3dadd( -45.7958, 11.9992, -17.8896, 1.14 ) }
    dend_42 { pt3dadd( -46.2297, 13.1854, -17.8591, 0.23 ) }
    dend_42 { pt3dadd( -46.7017, 14.6537, -17.87, 0.68 ) }
    dend_42 { pt3dadd( -47.7617, 18.2589, -18.0037, 0.23 ) }
    dend_42 { pt3dadd( -48.6252, 21.731, -18.2754, 0.68 ) }
    dend_42 { pt3dadd( -49.1608, 24.2013, -18.5483, 1.59 ) }
    dend_42 { pt3dadd( -49.7446, 27.1803, -18.9778, 0.45 ) }
    dend_42 { pt3dadd( -50.3544, 30.1426, -19.5165, 1.14 ) }
    dend_42 { pt3dadd( -50.6826, 31.6911, -19.9037, 0.23 ) }
    dend_42 { pt3dadd( -51.2971, 34.5327, -20.7204, 1.59 ) }
    dend_42 { pt3dadd( -52.1524, 37.7769, -21.7599, 0.23 ) }
    dend_42 { pt3dadd( -52.8056, 39.7104, -22.3473, 1.14 ) }
    dend_42 { pt3dadd( -53.6113, 41.5667, -22.8379, 0.23 ) }
    dend_42 { pt3dadd( -54.8865, 43.9043, -23.3704, 1.14 ) }
    dend_42 { pt3dadd( -56.7343, 46.7035, -24.0049, 0.68 ) }
    dend_42 { pt3dadd( -58.2602, 48.7234, -24.3722, 1.14 ) }
    dend_42 { pt3dadd( -59.4139, 50.2237, -24.6007, 2.5 ) }
    dend_42 { pt3dadd( -61.0626, 52.4678, -24.8495, 2.73 ) }
    dend_42 { pt3dadd( -63.5914, 56.0953, -25.1802, 1.14 ) }
    dend_42 { pt3dadd( -65.627, 59.215, -25.3581, 0.23 ) }
    dend_42 { pt3dadd( -67.2576, 61.8693, -25.514, 0.91 ) }
    dend_42 { pt3dadd( -69.2297, 65.5357, -25.607, 0.23 ) }
    dend_42 { pt3dadd( -70.6121, 68.454, -25.5797, 0.23 ) }
    dend_42 { pt3dadd( -71.8923, 71.5568, -25.4859, 0.91 ) }
    dend_42 { pt3dadd( -72.7814, 73.9299, -25.4487, 0.23 ) }
    dend_42 { pt3dadd( -73.2238, 75.1262, -25.4754, 0.91 ) }
    dend_42 { pt3dadd( -74.2425, 77.7682, -25.6716, 0.23 ) }
    dend_42 { pt3dadd( -75.3315, 80.4995, -25.8981, 1.82 ) }
    dend_42 { pt3dadd( -76.4499, 83.1387, -26.1959, 3.86 ) }
    dend_42 { pt3dadd( -78.8734, 88.6388, -26.9088, 1.36 ) }
    dend_42 { pt3dadd( -80.3963, 91.9377, -27.4689, 0.68 ) }
    dend_42 { pt3dadd( -81.6518, 94.4898, -27.9427, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 42/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -38.3245, -0.726886, -17.8939, 1.59 ) }
    dend_25 { pt3dadd( -38.3731, 1.21772, -19.5505, 1.59 ) }
    dend_25 { pt3dadd( -38.3081, 2.72926, -20.8065, 1.59 ) }
    dend_25 { pt3dadd( -38.1268, 4.04452, -21.9068, 1.59 ) }
    dend_25 { pt3dadd( -37.7976, 5.54613, -23.116, 0.91 ) }
    dend_25 { pt3dadd( -37.0581, 8.19153, -25.0861, 0.45 ) }
    dend_25 { pt3dadd( -36.8169, 8.90627, -25.5674, 0.45 ) }
    dend_25 { pt3dadd( -36.2138, 10.341, -26.3553, 0.45 ) }
    dend_25 { pt3dadd( -35.5032, 11.8064, -26.934, 1.14 ) }
    dend_25 { pt3dadd( -34.7518, 13.1016, -27.2814, 1.82 ) }
    dend_25 { pt3dadd( -33.5573, 14.9062, -27.52, 0.68 ) }
    dend_25 { pt3dadd( -32.3044, 16.6975, -27.6525, 1.36 ) }
    dend_25 { pt3dadd( -31.2517, 18.2928, -27.8128, 0.45 ) }
    dend_25 { pt3dadd( -30.3738, 19.682, -27.9795, 1.14 ) }
    dend_25 { pt3dadd( -29.5027, 21.0621, -28.221, 0.23 ) }
    dend_25 { pt3dadd( -28.7227, 22.1626, -28.5281, 1.82 ) }
    dend_25 { pt3dadd( -26.6558, 24.6445, -29.4902, 0.68 ) }
    dend_25 { pt3dadd( -25.4347, 25.9268, -30.1242, 1.59 ) }
    dend_25 { pt3dadd( -24.5417, 26.7699, -30.6093, 1.59 ) }
    dend_25 { pt3dadd( -23.0265, 28.128, -31.4031, 0.45 ) }
    dend_25 { pt3dadd( -21.6713, 29.4213, -32.0875, 0.68 ) }
    dend_25 { pt3dadd( -20.8134, 30.2252, -32.4621, 0.23 ) }
    dend_25 { pt3dadd( -19.6519, 31.2734, -32.7879, 1.14 ) }
    dend_25 { pt3dadd( -18.69, 32.1433, -32.9972, 0.23 ) }
    dend_25 { pt3dadd( -17.5122, 33.2667, -33.2177, 0.23 ) }
    dend_25 { pt3dadd( -16.2891, 34.5867, -33.3597, 0.68 ) }
    dend_25 { pt3dadd( -15.5925, 35.478, -33.409, 0.23 ) }
    dend_25 { pt3dadd( -13.9471, 37.8863, -33.5537, 0.23 ) }
    dend_25 { pt3dadd( -9.38628, 45.6001, -34.9531, 0.23 ) }
    dend_25 { pt3dadd( -4.90173, 53.4723, -34.5364, 0.23 ) }
    dend_25 { pt3dadd( 0.698588, 60.313, -32.7197, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_1 (entry count 73/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -39.2221, -19.287, -10.7254, 0.68 ) }
    dend_21 { pt3dadd( -40.9896, -19.412, -12.1253, 0.68 ) }
    dend_21 { pt3dadd( -42.7665, -19.5306, -13.5505, 0.45 ) }
    dend_21 { pt3dadd( -44.7227, -19.7487, -15.1133, 0.45 ) }
    dend_21 { pt3dadd( -45.9946, -19.9345, -16.1179, 0.45 ) }
    dend_21 { pt3dadd( -47.8934, -20.2581, -17.5817, 1.36 ) }
    dend_21 { pt3dadd( -50.3459, -20.7201, -19.4067, 1.36 ) }
    dend_21 { pt3dadd( -51.3857, -20.9494, -20.1563, 1.14 ) }
    dend_21 { pt3dadd( -52.989, -21.3652, -21.1774, 0.68 ) }
    dend_21 { pt3dadd( -53.4683, -21.5168, -21.4244, 0.68 ) }
    dend_21 { pt3dadd( -54.1284, -21.7223, -21.6787, 0.68 ) }
    dend_21 { pt3dadd( -54.9743, -21.9729, -21.8817, 0.68 ) }
    dend_21 { pt3dadd( -56.6575, -22.3874, -22.1193, 0.68 ) }
    dend_21 { pt3dadd( -58.3056, -22.7529, -22.4107, 2.05 ) }
    dend_21 { pt3dadd( -59.9676, -23.0775, -22.7366, 0.23 ) }
    dend_21 { pt3dadd( -61.1523, -23.3342, -22.997, 1.14 ) }
    dend_21 { pt3dadd( -63.1967, -23.7898, -23.4785, 0.23 ) }
    dend_21 { pt3dadd( -64.2158, -24.0081, -23.727, 2.05 ) }
    dend_21 { pt3dadd( -66.793, -24.4319, -24.26, 0.23 ) }
    dend_21 { pt3dadd( -68.3189, -24.5357, -24.4881, 1.14 ) }
    dend_21 { pt3dadd( -69.4394, -24.5885, -24.6148, 0.23 ) }
    dend_21 { pt3dadd( -70.5669, -24.6458, -24.7332, 0.23 ) }
    dend_21 { pt3dadd( -71.7027, -24.6099, -24.7962, 0.23 ) }
    dend_21 { pt3dadd( -74.06, -24.2112, -24.5992, 0.23 ) }
    dend_21 { pt3dadd( -75.3961, -23.5213, -24.079, 0.23 ) }
    dend_21 { pt3dadd( -82.5682, -23.7011, -26.869, 0.23 ) }
    dend_21 { pt3dadd( -89.9643, -23.457, -28.9889, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 0/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -39.2221, -19.287, -10.7254, 3.18 ) }
    dend_2 { pt3dadd( -42.0827, -21.7385, -10.1644, 3.18 ) }
    // Section: dend_107, id: dend_107, parent: dend_85 (entry count 2/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 67.1864, 11.0411, 9.26149, 0.68 ) }
    dend_107 { pt3dadd( 68.9869, 9.58989, 9.27736, 0.68 ) }
    dend_107 { pt3dadd( 70.4178, 8.18368, 8.98525, 0.68 ) }
    dend_107 { pt3dadd( 71.3431, 7.0849, 8.68528, 0.68 ) }
    dend_107 { pt3dadd( 72.4174, 5.66902, 8.27367, 0.68 ) }
    dend_107 { pt3dadd( 73.0203, 4.85021, 8.01583, 0.68 ) }
    dend_107 { pt3dadd( 74.5117, 2.77596, 7.35651, 0.68 ) }
    dend_107 { pt3dadd( 76.1773, 0.142803, 6.42292, 1.36 ) }
    dend_107 { pt3dadd( 77.2677, -1.98349, 5.68044, 0.45 ) }
    dend_107 { pt3dadd( 77.5848, -2.68792, 5.4247, 1.14 ) }
    dend_107 { pt3dadd( 78.1453, -4.04279, 4.91021, 0.68 ) }
    dend_107 { pt3dadd( 78.4417, -4.77892, 4.6259, 2.27 ) }
    dend_107 { pt3dadd( 79.4186, -7.2435, 3.70337, 0.91 ) }
    dend_107 { pt3dadd( 79.9351, -8.62759, 3.16317, 0.23 ) }
    dend_107 { pt3dadd( 80.544, -10.1602, 2.4836, 0.23 ) }
    dend_107 { pt3dadd( 81.3554, -11.9393, 1.60081, 1.14 ) }
    dend_107 { pt3dadd( 82.034, -13.2721, 0.926091, 2.27 ) }
    dend_107 { pt3dadd( 82.9907, -14.8666, 0.190245, 1.14 ) }
    dend_107 { pt3dadd( 84.5576, -17.0101, -0.601935, 1.14 ) }
    dend_107 { pt3dadd( 85.4254, -18.0404, -0.906729, 1.14 ) }
    dend_107 { pt3dadd( 87.1403, -19.9566, -1.36392, 0.68 ) }
    dend_107 { pt3dadd( 88.5086, -21.251, -1.62532, 1.14 ) }
    dend_107 { pt3dadd( 90.6305, -22.9214, -1.94333, 0.23 ) }
    dend_107 { pt3dadd( 92.5256, -24.2296, -2.09546, 1.59 ) }
    dend_107 { pt3dadd( 94.7559, -25.6993, -2.09912, 0.68 ) }
    dend_107 { pt3dadd( 96.0654, -26.5596, -2.11639, 2.27 ) }
    dend_107 { pt3dadd( 98.2553, -27.9042, -2.15422, 1.14 ) }
    dend_107 { pt3dadd( 99.9789, -28.9229, -2.34692, 0.23 ) }
    dend_107 { pt3dadd( 101.191, -29.6697, -2.61522, 0.68 ) }
    dend_107 { pt3dadd( 102.9, -30.7318, -3.14395, 0.23 ) }
    dend_107 { pt3dadd( 104.588, -31.8294, -3.72402, 1.59 ) }
    dend_107 { pt3dadd( 105.685, -32.5768, -4.15463, 2.05 ) }
    dend_107 { pt3dadd( 107.643, -34.0264, -5.1321, 0.68 ) }
    dend_107 { pt3dadd( 108.58, -34.7264, -5.64463, 1.36 ) }
    dend_107 { pt3dadd( 110.673, -36.2906, -6.77066, 0.23 ) }
    dend_107 { pt3dadd( 111.582, -36.9862, -7.2116, 0.68 ) }
    dend_107 { pt3dadd( 112.81, -37.9771, -7.69038, 0.68 ) }
    dend_107 { pt3dadd( 113.769, -38.7471, -7.99176, 0.68 ) }
    dend_107 { pt3dadd( 114.607, -39.4322, -8.16336, 1.59 ) }
    dend_107 { pt3dadd( 116.283, -40.8606, -8.39261, 0.91 ) }
    dend_107 { pt3dadd( 117.983, -42.4181, -8.56385, 0.91 ) }
    dend_107 { pt3dadd( 119.351, -43.708, -8.70407, 1.59 ) }
    dend_107 { pt3dadd( 120.82, -45.1041, -8.89317, 0.45 ) }
    dend_107 { pt3dadd( 122.151, -46.3509, -9.06498, 0.45 ) }
    dend_107 { pt3dadd( 123.297, -47.3649, -9.2231, 0.68 ) }
    dend_107 { pt3dadd( 124.79, -48.5771, -9.4039, 1.82 ) }
    dend_107 { pt3dadd( 126.231, -49.7322, -9.5505, 0.91 ) }
    dend_107 { pt3dadd( 127.906, -51.0469, -9.68285, 0.23 ) }
    dend_107 { pt3dadd( 129.159, -51.9417, -9.77145, 0.68 ) }
    dend_107 { pt3dadd( 131.095, -53.2337, -9.92644, 0.68 ) }
    dend_107 { pt3dadd( 133.176, -54.5903, -10.0868, 0.23 ) }
    dend_107 { pt3dadd( 134.4, -55.3741, -10.1493, 0.91 ) }
    dend_107 { pt3dadd( 135.99, -56.3525, -10.2101, 0.23 ) }
    dend_107 { pt3dadd( 137.298, -57.1524, -10.1721, 0.23 ) }
    dend_107 { pt3dadd( 143.283, -62.8289, -12.8053, 0.23 ) }
    dend_107 { pt3dadd( 149.313, -68.1922, -15.9137, 0.23 ) }
    dend_107 { pt3dadd( 155.515, -73.0172, -19.4927, 0.23 ) }
    dend_107 { pt3dadd( 162.023, -77.5112, -22.9418, 0.23 ) }
    dend_107 { pt3dadd( 167.98, -82.5967, -26.5891, 0.23 ) }
    dend_107 { pt3dadd( 172.926, -87.969, -31.2118, 0.23 ) }
    dend_107 { pt3dadd( 178.132, -93.3979, -35.4747, 0.23 ) }
    dend_107 { pt3dadd( 183.541, -98.2958, -40.0865, 0.23 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 64/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 67.1864, 11.0411, 9.26149, 0.68 ) }
    dend_86 { pt3dadd( 71.421, 13.4739, 7.78564, 0.68 ) }
    dend_86 { pt3dadd( 74.5062, 14.9811, 6.62644, 0.68 ) }
    dend_86 { pt3dadd( 77.1515, 16.1268, 5.55237, 1.82 ) }
    dend_86 { pt3dadd( 78.7306, 16.7651, 4.87749, 1.36 ) }
    dend_86 { pt3dadd( 79.8847, 17.221, 4.38797, 2.05 ) }
    dend_86 { pt3dadd( 82.4088, 18.2113, 3.35143, 2.05 ) }
    dend_86 { pt3dadd( 85.9589, 19.4053, 1.87497, 0.91 ) }
    dend_86 { pt3dadd( 87.9607, 20.0842, 1.15071, 1.59 ) }
    dend_86 { pt3dadd( 89.8929, 20.7939, 0.499244, 2.05 ) }
    dend_86 { pt3dadd( 92.2721, 21.6763, -0.319159, 2.5 ) }
    dend_86 { pt3dadd( 94.2738, 22.4297, -0.999591, 2.73 ) }
    dend_86 { pt3dadd( 96.2701, 23.2248, -1.63359, 2.05 ) }
    dend_86 { pt3dadd( 97.9029, 23.9831, -2.00231, 2.95 ) }
    dend_86 { pt3dadd( 98.8724, 24.4667, -2.15959, 2.5 ) }
    // Section: dend_76, id: dend_76, parent: dend_66 (entry count 79/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 84.1222, -23.1389, 27.0829, 0.91 ) }
    dend_76 { pt3dadd( 83.3697, -25.9154, 28.6496, 0.91 ) }
    dend_76 { pt3dadd( 82.8568, -28.008, 29.8248, 0.45 ) }
    dend_76 { pt3dadd( 82.3666, -30.2941, 31.1014, 0.91 ) }
    dend_76 { pt3dadd( 82.1662, -31.2593, 31.6742, 0.91 ) }
    dend_76 { pt3dadd( 81.5837, -33.912, 33.2985, 0.23 ) }
    dend_76 { pt3dadd( 81.237, -35.493, 34.2794, 1.59 ) }
    dend_76 { pt3dadd( 80.8378, -37.4773, 35.5357, 0.45 ) }
    dend_76 { pt3dadd( 80.582, -38.8427, 36.4101, 1.82 ) }
    dend_76 { pt3dadd( 80.1177, -41.6918, 38.2316, 0.45 ) }
    dend_76 { pt3dadd( 79.7478, -43.997, 39.7078, 0.68 ) }
    dend_76 { pt3dadd( 79.5456, -45.3563, 40.5317, 2.27 ) }
    dend_76 { pt3dadd( 79.4257, -46.2691, 41.0421, 2.27 ) }
    dend_76 { pt3dadd( 79.1923, -48.3775, 42.1271, 1.14 ) }
    dend_76 { pt3dadd( 78.9166, -51.3238, 43.5284, 0.68 ) }
    dend_76 { pt3dadd( 78.7132, -54.0353, 44.7454, 1.14 ) }
    dend_76 { pt3dadd( 78.5436, -55.9358, 45.6102, 0.23 ) }
    dend_76 { pt3dadd( 78.3158, -57.7071, 46.4641, 1.82 ) }
    dend_76 { pt3dadd( 77.8683, -60.2774, 47.8761, 0.23 ) }
    dend_76 { pt3dadd( 77.4808, -62.0256, 49.0026, 0.23 ) }
    dend_76 { pt3dadd( 77.0493, -63.5777, 50.1418, 2.05 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_76 { pt3dadd( 76.4178, -65.7381, 51.8737, 0.68 ) }
    dend_76 { pt3dadd( 75.8285, -67.6099, 53.4933, 3.41 ) }
    dend_76 { pt3dadd( 74.8923, -70.5921, 56.1349, 0.45 ) }
    dend_76 { pt3dadd( 74.2789, -72.6376, 57.8569, 1.14 ) }
    dend_76 { pt3dadd( 73.7869, -74.5826, 59.3743, 1.59 ) }
    dend_76 { pt3dadd( 73.4039, -76.7491, 60.8939, 0.68 ) }
    dend_76 { pt3dadd( 73.3307, -77.6568, 61.4629, 1.36 ) }
    dend_76 { pt3dadd( 73.3368, -79.8756, 62.6508, 0.23 ) }
    dend_76 { pt3dadd( 73.5389, -82.0034, 63.5951, 2.05 ) }
    dend_76 { pt3dadd( 73.8126, -83.4944, 64.1918, 2.05 ) }
    dend_76 { pt3dadd( 74.3169, -85.323, 64.8959, 0.68 ) }
    dend_76 { pt3dadd( 74.9865, -87.3507, 65.7055, 1.36 ) }
    dend_76 { pt3dadd( 75.5219, -88.7757, 66.3054, 1.82 ) }
    dend_76 { pt3dadd( 75.8898, -89.6709, 66.7051, 1.82 ) }
    dend_76 { pt3dadd( 76.6835, -91.4137, 67.5695, 0.23 ) }
    dend_76 { pt3dadd( 77.6208, -93.4306, 68.5526, 2.73 ) }
    dend_76 { pt3dadd( 78.4665, -95.3097, 69.4424, 0.23 ) }
    dend_76 { pt3dadd( 78.8499, -96.1532, 69.8165, 1.14 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 18/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 84.1222, -23.1389, 27.0829, 3.41 ) }
    dend_67 { pt3dadd( 84.192, -23.2574, 27.1199, 3.41 ) }
    dend_67 { pt3dadd( 86.1363, -27.1545, 28.0331, 0.91 ) }
    dend_67 { pt3dadd( 87.3666, -29.9423, 28.6081, 0.91 ) }
    dend_67 { pt3dadd( 88.0717, -31.7083, 28.958, 1.36 ) }
    dend_67 { pt3dadd( 88.7617, -33.6331, 29.3365, 1.36 ) }
    dend_67 { pt3dadd( 90.0947, -37.6597, 30.1349, 0.91 ) }
    dend_67 { pt3dadd( 90.81, -40.3243, 30.6442, 1.36 ) }
    dend_67 { pt3dadd( 91.4838, -43.5424, 31.2198, 1.14 ) }
    dend_67 { pt3dadd( 91.8595, -45.5887, 31.5894, 1.36 ) }
    dend_67 { pt3dadd( 92.119, -47.0529, 31.8663, 0.68 ) }
    dend_67 { pt3dadd( 92.4226, -48.8142, 32.2343, 1.36 ) }
    dend_67 { pt3dadd( 92.8734, -51.5313, 32.8387, 0.23 ) }
    dend_67 { pt3dadd( 93.198, -53.4182, 33.2876, 0.91 ) }
    dend_67 { pt3dadd( 93.7316, -56.1568, 33.9201, 0.23 ) }
    dend_67 { pt3dadd( 94.2639, -58.5249, 34.5095, 2.05 ) }
    dend_67 { pt3dadd( 94.6867, -60.1858, 34.9628, 2.05 ) }
    dend_67 { pt3dadd( 95.6383, -63.5127, 35.9452, 0.91 ) }
    dend_67 { pt3dadd( 96.1645, -65.0897, 36.4461, 0.91 ) }
    dend_67 { pt3dadd( 96.8761, -67.0381, 37.1065, 0.68 ) }
    dend_67 { pt3dadd( 97.9571, -69.7507, 38.0933, 0.68 ) }
    dend_67 { pt3dadd( 98.6972, -71.4633, 38.7794, 0.68 ) }
    dend_67 { pt3dadd( 99.6726, -73.4973, 39.6208, 0.68 ) }
    dend_67 { pt3dadd( 101.191, -76.2783, 40.8191, 1.36 ) }
    dend_67 { pt3dadd( 101.619, -77.0069, 41.1345, 2.05 ) }
    // Section: dend_64, id: dend_64, parent: dend_60 (entry count 43/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 100.048, 15.6857, 34.3878, 1.36 ) }
    dend_64 { pt3dadd( 101.211, 17.1499, 35.9163, 1.36 ) }
    dend_64 { pt3dadd( 102.085, 18.2663, 37.0943, 0.23 ) }
    dend_64 { pt3dadd( 102.612, 18.9201, 37.7635, 1.36 ) }
    dend_64 { pt3dadd( 103.678, 20.3115, 39.2781, 0.45 ) }
    dend_64 { pt3dadd( 104.285, 21.0622, 40.2042, 0.91 ) }
    dend_64 { pt3dadd( 104.992, 21.852, 41.2113, 0.91 ) }
    dend_64 { pt3dadd( 106.341, 23.1666, 43.2159, 0.23 ) }
    dend_64 { pt3dadd( 107.073, 23.8381, 44.3606, 1.14 ) }
    dend_64 { pt3dadd( 108.251, 24.8003, 46.3837, 1.14 ) }
    dend_64 { pt3dadd( 109.46, 25.7022, 48.6566, 0.68 ) }
    dend_64 { pt3dadd( 110.486, 26.4304, 50.7086, 0.68 ) }
    dend_64 { pt3dadd( 111.507, 27.1154, 52.8103, 0.68 ) }
    dend_64 { pt3dadd( 112.188, 27.5699, 54.3071, 0.68 ) }
    dend_64 { pt3dadd( 113.27, 28.4384, 56.984, 2.05 ) }
    dend_64 { pt3dadd( 114.46, 29.6345, 60.1632, 0.68 ) }
    dend_64 { pt3dadd( 115.548, 31.1823, 63.6514, 1.82 ) }
    dend_64 { pt3dadd( 116.241, 32.4386, 66.2968, 0.45 ) }
    dend_64 { pt3dadd( 116.537, 33.0661, 67.4646, 1.59 ) }
    dend_64 { pt3dadd( 117.254, 34.941, 70.7414, 0.23 ) }
    dend_64 { pt3dadd( 117.561, 36.1513, 72.6158, 1.36 ) }
    dend_64 { pt3dadd( 117.779, 37.7744, 75.0528, 0.45 ) }
    dend_64 { pt3dadd( 117.927, 39.8164, 78.0911, 2.27 ) }
    dend_64 { pt3dadd( 117.995, 40.8629, 79.5934, 0.68 ) }
    dend_64 { pt3dadd( 118.222, 42.9563, 82.6102, 0.23 ) }
    dend_64 { pt3dadd( 118.497, 44.8343, 85.2585, 0.91 ) }
    dend_64 { pt3dadd( 118.746, 46.3107, 87.3022, 0.23 ) }
    dend_64 { pt3dadd( 119.033, 47.7706, 89.2147, 1.36 ) }
    dend_64 { pt3dadd( 119.48, 49.6278, 91.5185, 0.23 ) }
    dend_64 { pt3dadd( 120.242, 51.7901, 94.2572, 0.91 ) }
    dend_64 { pt3dadd( 120.641, 52.6462, 95.3146, 0.23 ) }
    dend_64 { pt3dadd( 121.099, 53.4732, 96.373, 1.36 ) }
    dend_64 { pt3dadd( 121.532, 54.2057, 97.2937, 1.36 ) }
    dend_64 { pt3dadd( 122.872, 56.2489, 99.7814, 0.23 ) }
    dend_64 { pt3dadd( 123.967, 57.7344, 101.54, 1.14 ) }
    dend_64 { pt3dadd( 124.959, 59.0047, 102.977, 0.23 ) }
    dend_64 { pt3dadd( 126.262, 60.5503, 104.668, 1.82 ) }
    dend_64 { pt3dadd( 127.028, 61.4323, 105.637, 2.05 ) }
    dend_64 { pt3dadd( 128.577, 63.2164, 107.531, 0.23 ) }
    dend_64 { pt3dadd( 129.984, 64.811, 109.176, 0.23 ) }
    dend_64 { pt3dadd( 130.5, 65.3722, 109.76, 1.36 ) }
    dend_64 { pt3dadd( 131.501, 66.3707, 110.846, 1.36 ) }
    dend_64 { pt3dadd( 132.623, 67.4671, 112.053, 0.23 ) }
    dend_64 { pt3dadd( 133.285, 68.1044, 112.787, 0.91 ) }
    dend_64 { pt3dadd( 134.52, 69.2392, 114.241, 0.23 ) }
    dend_64 { pt3dadd( 135.125, 69.7091, 114.896, 1.14 ) }
    dend_64 { pt3dadd( 135.821, 70.199, 115.59, 0.23 ) }
    dend_64 { pt3dadd( 136.494, 70.684, 116.159, 0.91 ) }
    dend_64 { pt3dadd( 138.386, 72.0998, 117.446, 0.23 ) }
    dend_64 { pt3dadd( 139.512, 72.9961, 118.144, 1.14 ) }
    dend_64 { pt3dadd( 141.294, 74.5424, 119.199, 0.23 ) }
    dend_64 { pt3dadd( 142.653, 75.8221, 120.035, 0.23 ) }
    dend_64 { pt3dadd( 144.628, 77.8828, 121.315, 0.68 ) }
    dend_64 { pt3dadd( 145.4, 78.8707, 121.883, 0.23 ) }
    dend_64 { pt3dadd( 145.794, 79.522, 122.236, 1.36 ) }
    dend_64 { pt3dadd( 146.728, 81.4703, 123.238, 0.23 ) }
    dend_64 { pt3dadd( 147.402, 83.3141, 124.178, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_64 { pt3dadd( 148.323, 86.2437, 125.747, 0.23 ) }
    dend_64 { pt3dadd( 148.816, 87.9481, 126.784, 2.27 ) }
    dend_64 { pt3dadd( 149.323, 89.7047, 127.973, 0.23 ) }
    dend_64 { pt3dadd( 149.702, 91.0869, 128.967, 1.14 ) }
    dend_64 { pt3dadd( 150.091, 92.6322, 130.193, 0.23 ) }
    dend_64 { pt3dadd( 150.441, 94.1589, 131.57, 0.91 ) }
    dend_64 { pt3dadd( 150.767, 95.4235, 133.016, 0.23 ) }
    dend_64 { pt3dadd( 151.288, 96.9007, 135.018, 2.05 ) }
    dend_64 { pt3dadd( 151.552, 97.507, 135.909, 0.23 ) }
    dend_64 { pt3dadd( 151.983, 98.4303, 137.336, 1.59 ) }
    dend_64 { pt3dadd( 152.436, 99.2811, 138.632, 0.23 ) }
    dend_64 { pt3dadd( 153.363, 100.833, 140.967, 0.23 ) }
    dend_64 { pt3dadd( 153.808, 101.499, 141.905, 1.36 ) }
    dend_64 { pt3dadd( 154.532, 102.414, 143.091, 0.23 ) }
    dend_64 { pt3dadd( 155.056, 102.976, 143.84, 1.59 ) }
    dend_64 { pt3dadd( 156.479, 104.322, 145.703, 0.23 ) }
    dend_64 { pt3dadd( 157.333, 105.014, 146.776, 0.91 ) }
    dend_64 { pt3dadd( 159.013, 106.097, 148.865, 0.23 ) }
    dend_64 { pt3dadd( 159.822, 106.557, 149.897, 2.05 ) }
    dend_64 { pt3dadd( 162.258, 107.738, 153.046, 0.23 ) }
    dend_64 { pt3dadd( 163.111, 108.09, 154.131, 0.91 ) }
    dend_64 { pt3dadd( 164.201, 108.461, 155.546, 0.23 ) }
    dend_64 { pt3dadd( 166.337, 109.162, 158.259, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 23/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 100.048, 15.6857, 34.3878, 1.14 ) }
    dend_61 { pt3dadd( 101.337, 15.229, 35.6254, 1.14 ) }
    dend_61 { pt3dadd( 103.098, 14.6243, 37.2866, 0.45 ) }
    dend_61 { pt3dadd( 104.886, 13.8963, 39.2608, 0.91 ) }
    dend_61 { pt3dadd( 105.768, 13.5185, 40.2002, 0.23 ) }
    dend_61 { pt3dadd( 107.147, 12.9216, 41.6851, 1.14 ) }
    dend_61 { pt3dadd( 107.91, 12.6243, 42.4676, 1.59 ) }
    dend_61 { pt3dadd( 109.504, 12.002, 44.1043, 1.59 ) }
    dend_61 { pt3dadd( 112.982, 10.8562, 47.1608, 0.23 ) }
    dend_61 { pt3dadd( 114.345, 10.4794, 48.1755, 2.05 ) }
    dend_61 { pt3dadd( 116.334, 9.99936, 49.5296, 0.23 ) }
    dend_61 { pt3dadd( 118.07, 9.6533, 50.5718, 0.23 ) }
    dend_61 { pt3dadd( 120.952, 9.15948, 52.1561, 2.05 ) }
    dend_61 { pt3dadd( 124.103, 8.74596, 53.657, 0.68 ) }
    dend_61 { pt3dadd( 127.351, 8.38953, 55.0361, 0.23 ) }
    dend_61 { pt3dadd( 129.739, 8.11264, 56.0434, 1.14 ) }
    dend_61 { pt3dadd( 130.759, 7.96036, 56.4291, 1.14 ) }
    dend_61 { pt3dadd( 133.798, 7.41157, 57.608, 0.23 ) }
    dend_61 { pt3dadd( 134.649, 7.25455, 57.9172, 0.23 ) }
    dend_61 { pt3dadd( 136.897, 6.7475, 58.7153, 0.68 ) }
    dend_61 { pt3dadd( 138.032, 6.4413, 59.0796, 1.82 ) }
    dend_61 { pt3dadd( 139.864, 5.86908, 59.5933, 1.82 ) }
    dend_61 { pt3dadd( 141.784, 5.2373, 60.0835, 0.23 ) }
    dend_61 { pt3dadd( 143.428, 4.6184, 60.3815, 1.14 ) }
    dend_61 { pt3dadd( 145.503, 3.7357, 60.6227, 0.23 ) }
    dend_61 { pt3dadd( 147.19, 2.79092, 60.7736, 1.14 ) }
    dend_61 { pt3dadd( 148.065, 2.22416, 60.8379, 0.23 ) }
    dend_61 { pt3dadd( 148.924, 1.63049, 60.875, 2.27 ) }
    dend_61 { pt3dadd( 150.922, 0.153899, 60.8526, 0.23 ) }
    dend_61 { pt3dadd( 152.445, -1.00135, 60.7806, 1.36 ) }
    dend_61 { pt3dadd( 157.201, -4.63948, 60.5106, 0.23 ) }
    dend_61 { pt3dadd( 159.417, -6.29435, 60.3391, 0.23 ) }
    dend_61 { pt3dadd( 160.989, -7.46526, 60.2424, 1.82 ) }
    dend_61 { pt3dadd( 163.076, -9.0137, 60.1233, 1.82 ) }
    dend_61 { pt3dadd( 166.014, -11.1592, 59.9725, 0.23 ) }
    dend_61 { pt3dadd( 168.455, -12.9647, 59.9098, 2.73 ) }
    dend_61 { pt3dadd( 170.278, -14.293, 59.8707, 2.73 ) }
    dend_61 { pt3dadd( 173.366, -16.6193, 59.9103, 0.23 ) }
    dend_61 { pt3dadd( 174.786, -17.6907, 60.0065, 0.23 ) }
    dend_61 { pt3dadd( 176.249, -18.7585, 60.156, 1.36 ) }
    dend_61 { pt3dadd( 179.19, -20.8542, 60.4508, 0.23 ) }
    dend_61 { pt3dadd( 181.072, -22.1264, 60.6254, 1.59 ) }
    dend_61 { pt3dadd( 183.312, -23.5008, 60.8386, 0.23 ) }
    dend_61 { pt3dadd( 186.178, -25.0298, 61.0387, 1.36 ) }
    dend_61 { pt3dadd( 188.713, -26.1912, 61.1978, 0.23 ) }
    dend_61 { pt3dadd( 191.816, -27.3722, 61.322, 0.23 ) }
    dend_61 { pt3dadd( 193.068, -27.7957, 61.3792, 2.05 ) }
    dend_61 { pt3dadd( 195.187, -28.452, 61.5378, 1.59 ) }
    dend_61 { pt3dadd( 197.929, -29.2172, 61.7763, 0.23 ) }
    dend_61 { pt3dadd( 201.323, -30.1414, 62.0343, 0.68 ) }
    dend_61 { pt3dadd( 203.449, -30.6832, 62.2562, 1.36 ) }
    dend_61 { pt3dadd( 207.027, -31.5371, 62.7089, 0.23 ) }
    dend_61 { pt3dadd( 208.327, -31.8839, 62.8646, 1.59 ) }
    dend_61 { pt3dadd( 209.674, -32.3096, 63.0588, 0.91 ) }
    dend_61 { pt3dadd( 211.436, -32.9218, 63.3816, 1.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_49 (entry count 78/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 37.7377, 7.48069, 11.3404, 0.23 ) }
    dend_55 { pt3dadd( 39.3758, 6.06139, 11.49, 0.23 ) }
    dend_55 { pt3dadd( 41.3693, 4.19058, 11.4508, 0.68 ) }
    dend_55 { pt3dadd( 42.5303, 3.07148, 11.3473, 0.68 ) }
    dend_55 { pt3dadd( 43.8135, 1.79534, 11.1995, 1.59 ) }
    dend_55 { pt3dadd( 44.7566, 0.842957, 11.0859, 1.59 ) }
    dend_55 { pt3dadd( 46.1231, -0.616795, 10.9675, 0.68 ) }
    dend_55 { pt3dadd( 46.8975, -1.59441, 10.9111, 0.23 ) }
    dend_55 { pt3dadd( 47.2892, -2.12361, 10.8683, 0.91 ) }
    dend_55 { pt3dadd( 48.5982, -3.96434, 10.727, 1.59 ) }
    dend_55 { pt3dadd( 49.6774, -5.56974, 10.6496, 1.36 ) }
    dend_55 { pt3dadd( 50.6464, -7.09709, 10.6097, 0.23 ) }
    dend_55 { pt3dadd( 51.3954, -8.35666, 10.5729, 1.82 ) }
    dend_55 { pt3dadd( 52.2046, -9.85574, 10.5128, 2.27 ) }
    dend_55 { pt3dadd( 53.0886, -11.7791, 10.3685, 1.14 ) }
    dend_55 { pt3dadd( 53.819, -13.7416, 10.0985, 0.23 ) }
    dend_55 { pt3dadd( 54.2317, -15.0189, 9.83406, 1.14 ) }
    dend_55 { pt3dadd( 54.574, -16.2057, 9.5081, 1.59 ) }
    dend_55 { pt3dadd( 54.9871, -17.8705, 9.00037, 0.45 ) }
    dend_55 { pt3dadd( 55.2941, -19.2524, 8.61796, 0.45 ) }
    dend_55 { pt3dadd( 55.5898, -20.4551, 8.2875, 0.91 ) }
    dend_55 { pt3dadd( 56.005, -22.0541, 7.84575, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_55 { pt3dadd( 56.4909, -23.6792, 7.41944, 0.91 ) }
    dend_55 { pt3dadd( 56.9758, -25.1097, 7.02374, 1.82 ) }
    dend_55 { pt3dadd( 57.461, -26.3448, 6.61868, 0.91 ) }
    dend_55 { pt3dadd( 58.0946, -27.7551, 6.12185, 0.23 ) }
    dend_55 { pt3dadd( 58.7439, -29.0746, 5.61311, 2.05 ) }
    dend_55 { pt3dadd( 59.3567, -30.1925, 5.1254, 2.05 ) }
    dend_55 { pt3dadd( 60.2968, -31.6663, 4.36857, 0.68 ) }
    dend_55 { pt3dadd( 60.929, -32.5812, 3.82541, 1.82 ) }
    dend_55 { pt3dadd( 61.5001, -33.3677, 3.29827, 1.82 ) }
    dend_55 { pt3dadd( 62.2722, -34.3803, 2.58152, 1.82 ) }
    dend_55 { pt3dadd( 63.0761, -35.3869, 1.91086, 0.23 ) }
    dend_55 { pt3dadd( 63.6714, -36.17, 1.46577, 0.23 ) }
    dend_55 { pt3dadd( 64.3916, -37.2438, 1.03603, 1.14 ) }
    dend_55 { pt3dadd( 64.743, -37.8484, 0.85502, 1.14 ) }
    dend_55 { pt3dadd( 65.3019, -38.9725, 0.615777, 0.23 ) }
    dend_55 { pt3dadd( 66.1162, -40.8498, 0.311784, 1.82 ) }
    dend_55 { pt3dadd( 66.8226, -42.6322, 0.0697138, 0.68 ) }
    dend_55 { pt3dadd( 67.6967, -44.9819, -0.246297, 0.68 ) }
    dend_55 { pt3dadd( 68.1757, -46.3242, -0.412467, 0.68 ) }
    dend_55 { pt3dadd( 68.809, -48.166, -0.669429, 0.68 ) }
    dend_55 { pt3dadd( 69.0566, -48.834, -0.768267, 1.82 ) }
    dend_55 { pt3dadd( 69.3724, -49.6749, -0.922252, 1.82 ) }
    dend_55 { pt3dadd( 70.0099, -51.2184, -1.22557, 0.45 ) }
    dend_55 { pt3dadd( 70.67, -52.6881, -1.61281, 0.45 ) }
    dend_55 { pt3dadd( 71.4033, -54.1776, -2.03559, 1.59 ) }
    dend_55 { pt3dadd( 72.28, -55.9099, -2.61246, 0.23 ) }
    dend_55 { pt3dadd( 72.5524, -56.4595, -2.78682, 0.23 ) }
    dend_55 { pt3dadd( 73.1269, -57.6305, -3.15838, 1.36 ) }
    dend_55 { pt3dadd( 74.0658, -59.4943, -3.78883, 0.45 ) }
    dend_55 { pt3dadd( 74.9966, -61.3395, -4.45611, 0.45 ) }
    dend_55 { pt3dadd( 75.9761, -63.3302, -5.18622, 2.73 ) }
    dend_55 { pt3dadd( 77.0763, -65.7494, -6.10769, 0.23 ) }
    dend_55 { pt3dadd( 77.4889, -66.6746, -6.44528, 0.23 ) }
    dend_55 { pt3dadd( 78.2794, -68.5832, -7.0932, 2.27 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 34/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 37.7377, 7.48069, 11.3404, 1.14 ) }
    dend_50 { pt3dadd( 40.214, 8.83512, 13.9345, 1.14 ) }
    dend_50 { pt3dadd( 42.4272, 9.87523, 16.12, 1.14 ) }
    dend_50 { pt3dadd( 45.0146, 10.872, 18.4304, 0.68 ) }
    dend_50 { pt3dadd( 48.2432, 11.8027, 21.1163, 0.91 ) }
    dend_50 { pt3dadd( 51.3096, 12.2383, 23.4837, 0.45 ) }
    dend_50 { pt3dadd( 53.122, 12.3634, 24.7884, 0.91 ) }
    dend_50 { pt3dadd( 55.4318, 12.177, 26.2366, 0.68 ) }
    dend_50 { pt3dadd( 57.4705, 11.6983, 27.377, 0.68 ) }
    dend_50 { pt3dadd( 59.4818, 10.9134, 28.4123, 0.68 ) }
    dend_50 { pt3dadd( 63.2443, 8.72065, 30.4075, 0.68 ) }
    dend_50 { pt3dadd( 64.3756, 7.90664, 31.0753, 1.59 ) }
    dend_50 { pt3dadd( 65.2881, 7.13019, 31.7251, 1.59 ) }
    dend_50 { pt3dadd( 67.1882, 5.368, 33.3122, 0.91 ) }
    dend_50 { pt3dadd( 69.4293, 3.19444, 35.3648, 1.36 ) }
    dend_50 { pt3dadd( 72.7836, -0.169994, 38.6543, 1.82 ) }
    dend_50 { pt3dadd( 75.4959, -3.12394, 41.5745, 0.91 ) }
    dend_50 { pt3dadd( 76.8978, -4.78305, 43.1896, 0.91 ) }
    dend_50 { pt3dadd( 78.5865, -6.89752, 45.2539, 1.59 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 53/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -81.6518, 94.4898, -27.9427, 0.23 ) }
    dend_44 { pt3dadd( -83.2908, 96.323, -27.9915, 0.23 ) }
    dend_44 { pt3dadd( -84.5496, 97.72, -27.9963, 0.23 ) }
    dend_44 { pt3dadd( -85.1867, 98.4178, -28.0005, 1.59 ) }
    dend_44 { pt3dadd( -85.8108, 99.1279, -28.0163, 2.5 ) }
    dend_44 { pt3dadd( -87.053, 100.605, -28.051, 2.5 ) }
    dend_44 { pt3dadd( -88.4543, 102.365, -28.0702, 0.23 ) }
    dend_44 { pt3dadd( -88.9709, 103.09, -28.0881, 0.23 ) }
    dend_44 { pt3dadd( -89.572, 103.983, -28.1025, 0.23 ) }
    dend_44 { pt3dadd( -90.3383, 105.156, -28.0993, 1.59 ) }
    dend_44 { pt3dadd( -91.4458, 106.867, -28.0929, 1.14 ) }
    dend_44 { pt3dadd( -92.468, 108.47, -28.1338, 0.23 ) }
    dend_44 { pt3dadd( -93.2286, 109.724, -28.2273, 1.59 ) }
    dend_44 { pt3dadd( -93.8982, 110.887, -28.3379, 2.27 ) }
    dend_44 { pt3dadd( -94.7499, 112.361, -28.5227, 0.23 ) }
    dend_44 { pt3dadd( -95.4143, 113.521, -28.6874, 1.14 ) }
    dend_44 { pt3dadd( -95.9743, 114.526, -28.8308, 0.23 ) }
    dend_44 { pt3dadd( -96.4875, 115.493, -28.9407, 0.91 ) }
    dend_44 { pt3dadd( -97.4646, 117.36, -29.0752, 0.23 ) }
    dend_44 { pt3dadd( -98.3496, 119.035, -29.1585, 2.95 ) }
    dend_44 { pt3dadd( -99.8721, 121.928, -29.2201, 0.23 ) }
    dend_44 { pt3dadd( -100.706, 123.484, -29.1955, 1.82 ) }
    dend_44 { pt3dadd( -101.801, 125.479, -29.0882, 0.23 ) }
    dend_44 { pt3dadd( -102.483, 126.648, -29.0078, 0.23 ) }
    dend_44 { pt3dadd( -103.202, 127.818, -28.9154, 0.91 ) }
    dend_44 { pt3dadd( -103.936, 128.971, -28.8525, 1.14 ) }
    dend_44 { pt3dadd( -104.7, 130.083, -28.8635, 0.23 ) }
    dend_44 { pt3dadd( -105.555, 131.282, -28.9416, 1.36 ) }
    dend_44 { pt3dadd( -106.59, 132.714, -29.0995, 0.68 ) }
    dend_44 { pt3dadd( -108.124, 134.894, -29.3946, 0.68 ) }
    dend_44 { pt3dadd( -109.241, 136.548, -29.6486, 2.05 ) }
    dend_44 { pt3dadd( -110.58, 138.56, -30.0097, 0.23 ) }
    dend_44 { pt3dadd( -111.758, 140.407, -30.3445, 1.82 ) }
    dend_44 { pt3dadd( -112.7, 141.954, -30.6388, 0.23 ) }
    dend_44 { pt3dadd( -113.051, 142.587, -30.7589, 1.14 ) }
    dend_44 { pt3dadd( -113.843, 144.192, -31.0667, 0.23 ) }
    dend_44 { pt3dadd( -114.285, 145.199, -31.2191, 1.14 ) }
    dend_44 { pt3dadd( -114.647, 146.205, -31.3314, 1.14 ) }
    dend_44 { pt3dadd( -114.897, 147.06, -31.4102, 0.23 ) }
    dend_44 { pt3dadd( -115.154, 148.038, -31.4738, 1.14 ) }
    dend_44 { pt3dadd( -115.555, 149.682, -31.6465, 0.23 ) }
    dend_44 { pt3dadd( -115.937, 151.361, -31.8923, 2.05 ) }
    dend_44 { pt3dadd( -116.155, 152.439, -32.0955, 0.23 ) }
    dend_44 { pt3dadd( -116.593, 154.588, -32.5826, 0.23 ) }
    dend_44 { pt3dadd( -116.789, 155.528, -32.8214, 1.14 ) }
    dend_44 { pt3dadd( -117.231, 157.533, -33.4765, 0.23 ) }
    dend_44 { pt3dadd( -117.602, 159.202, -34.1085, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_44 { pt3dadd( -118.053, 161.238, -34.94, 0.23 ) }
    dend_44 { pt3dadd( -118.248, 162.092, -35.2926, 3.18 ) }
    dend_44 { pt3dadd( -118.53, 163.322, -35.7954, 3.18 ) }
    dend_44 { pt3dadd( -119.57, 167.839, -37.6672, 1.14 ) }
    dend_44 { pt3dadd( -119.846, 169.025, -38.1381, 1.82 ) }
    dend_44 { pt3dadd( -120.23, 170.741, -38.8044, 0.23 ) }
    dend_44 { pt3dadd( -120.406, 171.603, -39.1218, 0.68 ) }
    dend_44 { pt3dadd( -120.515, 172.218, -39.3256, 0.23 ) }
    dend_44 { pt3dadd( -120.829, 174.19, -39.8904, 0.68 ) }
    dend_44 { pt3dadd( -120.985, 175.301, -40.1285, 0.23 ) }
    dend_44 { pt3dadd( -121.184, 176.946, -40.4556, 2.27 ) }
    dend_44 { pt3dadd( -121.338, 178.453, -40.7241, 2.5 ) }
    dend_44 { pt3dadd( -121.532, 180.248, -41.019, 0.23 ) }
    dend_44 { pt3dadd( -121.645, 181.124, -41.1039, 0.45 ) }
    dend_44 { pt3dadd( -121.784, 182.325, -41.1506, 0.23 ) }
    dend_44 { pt3dadd( -121.927, 183.526, -41.1874, 0.23 ) }
    dend_44 { pt3dadd( -122.077, 184.604, -41.2281, 0.23 ) }
    dend_44 { pt3dadd( -122.353, 186.532, -41.2491, 1.59 ) }
    dend_44 { pt3dadd( -122.798, 189.431, -41.1905, 0.23 ) }
    dend_44 { pt3dadd( -122.989, 190.527, -41.1533, 0.23 ) }
    dend_44 { pt3dadd( -123.176, 191.454, -41.1238, 0.45 ) }
    dend_44 { pt3dadd( -123.53, 192.884, -41.0961, 0.23 ) }
    dend_44 { pt3dadd( -123.614, 193.209, -41.0962, 0.91 ) }
    dend_44 { pt3dadd( -124.015, 194.775, -41.1486, 0.23 ) }
    dend_44 { pt3dadd( -124.225, 195.581, -41.2233, 0.23 ) }
    dend_44 { pt3dadd( -124.659, 197.196, -41.3443, 2.73 ) }
    dend_44 { pt3dadd( -125.118, 199.133, -41.4681, 0.23 ) }
    dend_44 { pt3dadd( -125.248, 199.775, -41.5194, 0.23 ) }
    dend_44 { pt3dadd( -125.464, 201.057, -41.6534, 0.23 ) }
    dend_44 { pt3dadd( -125.582, 201.913, -41.7612, 0.91 ) }
    dend_44 { pt3dadd( -125.754, 203.537, -41.9841, 0.23 ) }
    dend_44 { pt3dadd( -125.86, 204.613, -42.1506, 1.14 ) }
    dend_44 { pt3dadd( -126.041, 206.35, -42.4633, 0.23 ) }
    dend_44 { pt3dadd( -126.199, 207.629, -42.6791, 1.82 ) }
    dend_44 { pt3dadd( -126.291, 208.298, -42.7887, 1.82 ) }
    dend_44 { pt3dadd( -126.618, 210.651, -43.1744, 0.23 ) }
    dend_44 { pt3dadd( -126.778, 211.911, -43.4322, 1.14 ) }
    dend_44 { pt3dadd( -127.045, 213.878, -43.8678, 0.23 ) }
    dend_44 { pt3dadd( -127.239, 215.21, -44.1767, 2.05 ) }
    dend_44 { pt3dadd( -127.373, 216.056, -44.4143, 2.73 ) }
    dend_44 { pt3dadd( -127.613, 217.512, -44.8456, 0.23 ) }
    dend_44 { pt3dadd( -128.021, 219.722, -45.5454, 1.14 ) }
    dend_44 { pt3dadd( -128.416, 221.905, -46.3245, 0.23 ) }
    dend_44 { pt3dadd( -128.57, 222.839, -46.6881, 0.68 ) }
    dend_44 { pt3dadd( -128.784, 224.172, -47.2325, 0.23 ) }
    dend_44 { pt3dadd( -128.993, 225.59, -47.816, 2.27 ) }
    dend_44 { pt3dadd( -129.139, 226.636, -48.2579, 2.27 ) }
    dend_44 { pt3dadd( -129.421, 229.109, -49.2779, 0.23 ) }
    dend_44 { pt3dadd( -129.482, 230.223, -49.745, 0.91 ) }
    dend_44 { pt3dadd( -129.477, 231.782, -50.3709, 0.23 ) }
    dend_44 { pt3dadd( -129.399, 232.968, -50.8142, 1.36 ) }
    dend_44 { pt3dadd( -129.114, 235.26, -51.7274, 0.45 ) }
    dend_44 { pt3dadd( -129.031, 235.774, -51.9328, 0.45 ) }
    dend_44 { pt3dadd( -128.705, 237.241, -52.5251, 1.59 ) }
    dend_44 { pt3dadd( -128.28, 238.823, -53.2338, 0.91 ) }
    dend_44 { pt3dadd( -127.945, 239.935, -53.7962, 0.23 ) }
    dend_44 { pt3dadd( -127.517, 241.408, -54.561, 0.23 ) }
    dend_44 { pt3dadd( -126.979, 243.583, -55.7949, 2.05 ) }
    dend_44 { pt3dadd( -126.751, 244.768, -56.54, 0.23 ) }
    dend_44 { pt3dadd( -126.584, 245.815, -57.2453, 1.14 ) }
    dend_44 { pt3dadd( -126.396, 247.505, -58.4125, 1.14 ) }
    dend_44 { pt3dadd( -126.302, 249.801, -60.0589, 0.23 ) }
    dend_44 { pt3dadd( -126.343, 252.05, -61.6581, 1.82 ) }
    dend_44 { pt3dadd( -126.506, 253.973, -63.0196, 0.45 ) }
    dend_44 { pt3dadd( -126.605, 254.572, -63.4408, 1.36 ) }
    dend_44 { pt3dadd( -126.89, 255.692, -64.2075, 1.36 ) }
    dend_44 { pt3dadd( -127.465, 257.355, -65.3033, 0.23 ) }
    dend_44 { pt3dadd( -127.893, 258.23, -65.8959, 1.14 ) }
    dend_44 { pt3dadd( -128.286, 258.933, -66.3138, 1.14 ) }
    dend_44 { pt3dadd( -128.846, 259.867, -66.8734, 0.68 ) }
    dend_44 { pt3dadd( -129.85, 261.648, -67.9923, 0.23 ) }
    dend_44 { pt3dadd( -130.66, 263.141, -68.9164, 1.82 ) }
    dend_44 { pt3dadd( -131.706, 265.176, -70.1054, 0.23 ) }
    dend_44 { pt3dadd( -132.254, 266.246, -70.7449, 0.91 ) }
    dend_44 { pt3dadd( -133.023, 267.84, -71.6891, 0.23 ) }
    dend_44 { pt3dadd( -133.5, 268.956, -72.3595, 1.82 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 76/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -81.6518, 94.4898, -27.9427, 0.23 ) }
    dend_43 { pt3dadd( -81.8129, 96.1675, -28.6092, 0.23 ) }
    dend_43 { pt3dadd( -82.0204, 97.3262, -29.0899, 0.68 ) }
    dend_43 { pt3dadd( -82.3898, 99.0472, -29.7588, 0.23 ) }
    dend_43 { pt3dadd( -82.7487, 100.363, -30.2579, 0.23 ) }
    dend_43 { pt3dadd( -83.4384, 102.69, -31.1243, 0.68 ) }
    dend_43 { pt3dadd( -84.2325, 105.205, -32.0244, 0.23 ) }
    dend_43 { pt3dadd( -84.6239, 106.246, -32.3687, 0.68 ) }
    dend_43 { pt3dadd( -86.3555, 110.553, -33.7609, 0.23 ) }
    dend_43 { pt3dadd( -87.092, 112.298, -34.2973, 2.05 ) }
    dend_43 { pt3dadd( -87.4599, 113.164, -34.5376, 2.73 ) }
    dend_43 { pt3dadd( -89.3214, 117.479, -35.4927, 0.23 ) }
    dend_43 { pt3dadd( -90.3262, 119.805, -35.9698, 0.23 ) }
    // Section: dend_39, id: dend_39, parent: dend_25 (entry count 89/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 0.698588, 60.313, -32.7197, 0.23 ) }
    dend_39 { pt3dadd( 5.28319, 68.0468, -34.146, 0.23 ) }
    dend_39 { pt3dadd( 11.2785, 74.8405, -34.2541, 0.23 ) }
    dend_39 { pt3dadd( 17.6236, 81.1927, -33.1833, 0.23 ) }
    dend_39 { pt3dadd( 23.3671, 87.8892, -31.1645, 0.23 ) }
    dend_39 { pt3dadd( 29.2262, 94.403, -28.9238, 0.23 ) }
    dend_39 { pt3dadd( 35.2299, 100.686, -26.4513, 0.23 ) }
    dend_39 { pt3dadd( 39.7164, 108.122, -23.82, 0.23 ) }
    dend_39 { pt3dadd( 43.2722, 115.503, -19.9355, 0.23 ) }
    dend_39 { pt3dadd( 47.6469, 121.826, -15.203, 0.23 ) }
    dend_39 { pt3dadd( 50.965, 129.681, -12.0581, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_39 { pt3dadd( 54.7804, 137.528, -9.50978, 0.23 ) }
    dend_39 { pt3dadd( 58.6949, 145.679, -8.40402, 0.23 ) }
    dend_39 { pt3dadd( 62.9336, 153.735, -8.80744, 0.23 ) }
    dend_39 { pt3dadd( 66.926, 161.873, -7.90625, 0.23 ) }
    dend_39 { pt3dadd( 70.9503, 169.787, -5.92799, 0.23 ) }
    dend_39 { pt3dadd( 76.3528, 176.478, -3.11985, 0.23 ) }
    dend_39 { pt3dadd( 82.07, 183.288, -1.4075, 0.23 ) }
    dend_39 { pt3dadd( 89.2573, 188.659, -0.55041, 0.23 ) }
    dend_39 { pt3dadd( 96.4724, 193.855, 0.883023, 0.23 ) }
    dend_39 { pt3dadd( 102.792, 200.125, 2.44247, 0.23 ) }
    dend_39 { pt3dadd( 109.24, 206.378, 3.45373, 0.23 ) }
    dend_39 { pt3dadd( 115.831, 212.365, 4.95217, 0.23 ) }
    dend_39 { pt3dadd( 122.676, 217.502, 7.74094, 0.23 ) }
    dend_39 { pt3dadd( 129.738, 222.657, 9.8868, 0.23 ) }
    dend_39 { pt3dadd( 136.506, 228.44, 11.3553, 0.23 ) }
    dend_39 { pt3dadd( 143.639, 233.757, 12.7794, 0.23 ) }
    dend_39 { pt3dadd( 151.802, 237.361, 13.711, 0.23 ) }
    dend_39 { pt3dadd( 160.01, 239.875, 16.2485, 0.23 ) }
    dend_39 { pt3dadd( 168.005, 242.667, 19.1596, 0.23 ) }
    dend_39 { pt3dadd( 174.776, 247.266, 22.8692, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 20/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.698588, 60.313, -32.7197, 0.68 ) }
    dend_26 { pt3dadd( 6.46083, 69.2339, -34.8758, 0.23 ) }
    dend_26 { pt3dadd( 13.5352, 77.2615, -36.3416, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -89.9643, -23.457, -28.9889, 0.23 ) }
    dend_23 { pt3dadd( -96.7815, -19.6649, -33.1782, 0.23 ) }
    dend_23 { pt3dadd( -104.371, -16.0185, -35.8924, 0.23 ) }
    dend_23 { pt3dadd( -112.387, -12.7648, -37.6956, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 27/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -89.9643, -23.457, -28.9889, 0.68 ) }
    dend_22 { pt3dadd( -95.5984, -27.639, -30.3486, 0.23 ) }
    dend_22 { pt3dadd( -101.722, -30.9893, -31.7793, 0.23 ) }
    dend_22 { pt3dadd( -107.315, -35.04, -33.6065, 0.23 ) }
    dend_22 { pt3dadd( -112.496, -39.0636, -36.4327, 0.23 ) }
    dend_22 { pt3dadd( -118.054, -42.9773, -38.6156, 0.23 ) }
    dend_22 { pt3dadd( -123.366, -47.1928, -40.876, 0.23 ) }
    dend_22 { pt3dadd( -129.306, -50.6296, -42.7996, 0.23 ) }
    dend_22 { pt3dadd( -134.889, -54.6535, -44.7125, 0.23 ) }
    dend_22 { pt3dadd( -140.588, -57.5689, -47.8213, 0.23 ) }
    dend_22 { pt3dadd( -146.614, -59.3177, -51.1381, 0.23 ) }
    dend_22 { pt3dadd( -152.955, -61.021, -53.8345, 0.23 ) }
    dend_22 { pt3dadd( -158.131, -63.8041, -57.8428, 0.23 ) }
    dend_22 { pt3dadd( -162.387, -65.6489, -63.2167, 0.23 ) }
    dend_22 { pt3dadd( -167.369, -68.2778, -67.5556, 0.23 ) }
    dend_22 { pt3dadd( -172.737, -70.6598, -71.557, 0.23 ) }
    dend_22 { pt3dadd( -178.256, -72.2238, -75.7341, 0.23 ) }
    dend_22 { pt3dadd( -182.896, -73.3331, -80.9804, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_2 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -42.0827, -21.7385, -10.1644, 1.36 ) }
    dend_18 { pt3dadd( -45.1739, -22.474, -12.7722, 1.36 ) }
    dend_18 { pt3dadd( -47.6867, -23.1465, -14.9413, 0.23 ) }
    dend_18 { pt3dadd( -48.9893, -23.59, -16.0948, 1.14 ) }
    dend_18 { pt3dadd( -51.8055, -24.6557, -18.5606, 0.23 ) }
    dend_18 { pt3dadd( -53.8081, -25.4694, -20.2354, 1.14 ) }
    dend_18 { pt3dadd( -54.8938, -25.9429, -21.1131, 1.14 ) }
    dend_18 { pt3dadd( -55.6208, -26.3555, -21.6541, 1.14 ) }
    dend_18 { pt3dadd( -57.1748, -27.464, -22.804, 0.23 ) }
    dend_18 { pt3dadd( -57.831, -27.9813, -23.2324, 1.14 ) }
    dend_18 { pt3dadd( -59.0953, -29.016, -23.842, 1.14 ) }
    dend_18 { pt3dadd( -59.9923, -29.7635, -24.1888, 0.23 ) }
    dend_18 { pt3dadd( -61.4453, -30.9606, -24.6735, 0.91 ) }
    dend_18 { pt3dadd( -63.7394, -32.8037, -25.4628, 1.59 ) }
    dend_18 { pt3dadd( -65.2852, -34.0732, -26.0244, 1.59 ) }
    dend_18 { pt3dadd( -66.1425, -34.8081, -26.3577, 0.23 ) }
    dend_18 { pt3dadd( -67.4, -35.9035, -26.872, 1.36 ) }
    dend_18 { pt3dadd( -68.8751, -37.1624, -27.468, 0.45 ) }
    dend_18 { pt3dadd( -70.147, -38.2235, -27.9968, 0.45 ) }
    dend_18 { pt3dadd( -71.3821, -39.3957, -28.4098, 1.59 ) }
    dend_18 { pt3dadd( -71.9943, -40.0585, -28.6817, 2.05 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 66/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -42.0827, -21.7385, -10.1644, 3.18 ) }
    dend_3 { pt3dadd( -44.8552, -24.7539, -10.8911, 3.18 ) }
    dend_3 { pt3dadd( -49.0317, -29.4994, -11.8464, 2.73 ) }
    dend_3 { pt3dadd( -51.9147, -32.7753, -12.5058, 2.5 ) }
    dend_3 { pt3dadd( -54.7151, -35.9573, -13.1464, 2.5 ) }
    dend_3 { pt3dadd( -56.605, -38.1046, -13.5787, 2.5 ) }
    dend_3 { pt3dadd( -58.7123, -40.4991, -14.0607, 3.41 ) }
    dend_3 { pt3dadd( -61.2135, -43.4042, -14.7232, 3.86 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 74/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 183.541, -98.2958, -40.0865, 0.23 ) }
    dend_109 { pt3dadd( 193.507, -108.729, -42.088, 0.23 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 76/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 183.541, -98.2958, -40.0865, 0.68 ) }
    dend_108 { pt3dadd( 189.193, -103.329, -42.8393, 0.23 ) }
    dend_108 { pt3dadd( 194.807, -108.268, -45.82, 0.23 ) }
    dend_108 { pt3dadd( 200.194, -113.95, -47.794, 0.23 ) }
    // Section: dend_96, id: dend_96, parent: dend_86 (entry count 80/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 98.8724, 24.4667, -2.15959, 1.14 ) }
    dend_96 { pt3dadd( 100.801, 25.0357, -1.76695, 1.14 ) }
    dend_96 { pt3dadd( 103.293, 25.7882, -1.50602, 0.68 ) }
    dend_96 { pt3dadd( 106.249, 26.7103, -1.39053, 0.68 ) }
    dend_96 { pt3dadd( 108.604, 27.4379, -1.37976, 0.68 ) }
    dend_96 { pt3dadd( 110.667, 28.075, -1.41767, 0.68 ) }
    dend_96 { pt3dadd( 112.451, 28.6941, -1.49063, 1.36 ) }
    dend_96 { pt3dadd( 115.006, 29.6983, -1.69793, 2.27 ) }
    dend_96 { pt3dadd( 116.844, 30.4447, -1.88346, 1.36 ) }
    dend_96 { pt3dadd( 117.687, 30.7469, -1.98809, 2.27 ) }
    dend_96 { pt3dadd( 119.048, 31.2481, -2.20143, 2.05 ) }
    dend_96 { pt3dadd( 121.311, 32.0716, -2.55638, 1.59 ) }
    dend_96 { pt3dadd( 123.641, 32.9313, -2.79765, 0.91 ) }
    dend_96 { pt3dadd( 125.679, 33.6754, -2.80427, 0.91 ) }
    dend_96 { pt3dadd( 127.996, 34.4931, -2.78933, 1.36 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 95/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 98.8724, 24.4667, -2.15959, 0.45 ) }
    dend_87 { pt3dadd( 100.098, 25.3482, -0.759605, 0.45 ) }
    dend_87 { pt3dadd( 102.162, 26.8141, 1.38134, 0.45 ) }
    dend_87 { pt3dadd( 103.828, 27.998, 3.11023, 1.36 ) }
    dend_87 { pt3dadd( 105.696, 29.325, 5.04822, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_87 { pt3dadd( 107.494, 30.6026, 6.91402, 0.91 ) }
    dend_87 { pt3dadd( 108.665, 31.4346, 8.12918, 0.23 ) }
    dend_87 { pt3dadd( 109.351, 31.9669, 8.81582, 2.05 ) }
    // Section: dend_84, id: dend_84, parent: dend_76 (entry count 3/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 78.8499, -96.1532, 69.8165, 0.23 ) }
    dend_84 { pt3dadd( 76.4867, -97.7754, 71.2821, 0.23 ) }
    dend_84 { pt3dadd( 75.6386, -98.2675, 71.9173, 0.23 ) }
    dend_84 { pt3dadd( 75.0225, -98.5553, 72.3952, 1.36 ) }
    dend_84 { pt3dadd( 74.3924, -98.8176, 72.8733, 1.36 ) }
    dend_84 { pt3dadd( 72.4399, -99.5035, 74.1691, 0.23 ) }
    dend_84 { pt3dadd( 71.3387, -99.8584, 74.8493, 0.91 ) }
    dend_84 { pt3dadd( 68.8455, -100.54, 76.2979, 0.23 ) }
    dend_84 { pt3dadd( 66.6374, -101.06, 77.4829, 1.14 ) }
    dend_84 { pt3dadd( 65.8575, -101.223, 77.8802, 1.14 ) }
    dend_84 { pt3dadd( 63.0144, -101.769, 79.2939, 0.23 ) }
    dend_84 { pt3dadd( 61.755, -102.012, 79.8941, 1.36 ) }
    dend_84 { pt3dadd( 59.5658, -102.513, 80.9527, 0.23 ) }
    dend_84 { pt3dadd( 56.8176, -103.231, 82.2931, 1.14 ) }
    dend_84 { pt3dadd( 53.5698, -104.181, 83.9731, 0.23 ) }
    dend_84 { pt3dadd( 51.6959, -104.785, 85.0105, 1.36 ) }
    dend_84 { pt3dadd( 51.0125, -105.026, 85.4139, 1.36 ) }
    dend_84 { pt3dadd( 48.2853, -106.01, 87.1221, 0.23 ) }
    dend_84 { pt3dadd( 47.6129, -106.271, 87.5733, 1.14 ) }
    dend_84 { pt3dadd( 46.887, -106.61, 88.078, 1.14 ) }
    dend_84 { pt3dadd( 45.9887, -107.062, 88.6824, 0.23 ) }
    dend_84 { pt3dadd( 45.3245, -107.367, 89.1204, 0.68 ) }
    dend_84 { pt3dadd( 43.5684, -107.988, 90.192, 0.23 ) }
    dend_84 { pt3dadd( 42.6304, -108.289, 90.7981, 0.91 ) }
    dend_84 { pt3dadd( 42.0917, -108.507, 91.1887, 0.23 ) }
    dend_84 { pt3dadd( 41.0015, -109.069, 92.0665, 0.91 ) }
    dend_84 { pt3dadd( 39.6062, -110.072, 93.3523, 0.23 ) }
    dend_84 { pt3dadd( 38.476, -111.149, 94.4909, 1.14 ) }
    dend_84 { pt3dadd( 37.2837, -112.605, 95.715, 0.23 ) }
    dend_84 { pt3dadd( 36.5106, -113.758, 96.596, 2.27 ) }
    dend_84 { pt3dadd( 36.1779, -114.364, 97.0094, 2.27 ) }
    dend_84 { pt3dadd( 34.9793, -116.842, 98.7243, 0.23 ) }
    dend_84 { pt3dadd( 34.4782, -117.938, 99.4676, 1.36 ) }
    dend_84 { pt3dadd( 33.2506, -120.728, 101.363, 0.23 ) }
    dend_84 { pt3dadd( 32.6739, -121.978, 102.264, 2.27 ) }
    dend_84 { pt3dadd( 31.5172, -124.397, 104.203, 0.23 ) }
    dend_84 { pt3dadd( 30.6931, -126.075, 105.654, 0.91 ) }
    dend_84 { pt3dadd( 30.132, -127.261, 106.774, 0.23 ) }
    dend_84 { pt3dadd( 29.6432, -128.371, 107.885, 1.59 ) }
    dend_84 { pt3dadd( 28.8755, -130.514, 110.09, 0.23 ) }
    dend_84 { pt3dadd( 28.4723, -131.867, 111.446, 1.82 ) }
    dend_84 { pt3dadd( 28.1749, -133.178, 112.699, 1.82 ) }
    dend_84 { pt3dadd( 27.8586, -134.977, 114.228, 0.23 ) }
    dend_84 { pt3dadd( 27.67, -136.25, 115.241, 1.14 ) }
    dend_84 { pt3dadd( 27.377, -138.003, 116.517, 0.23 ) }
    dend_84 { pt3dadd( 27.2352, -138.915, 117.085, 1.14 ) }
    dend_84 { pt3dadd( 27.0395, -140.42, 117.987, 0.23 ) }
    dend_84 { pt3dadd( 26.8118, -141.642, 118.691, 1.14 ) }
    dend_84 { pt3dadd( 26.3109, -143.786, 119.932, 0.23 ) }
    dend_84 { pt3dadd( 26.0758, -144.637, 120.445, 1.14 ) }
    dend_84 { pt3dadd( 25.6012, -146.255, 121.424, 0.23 ) }
    dend_84 { pt3dadd( 25.2558, -147.472, 122.147, 0.23 ) }
    dend_84 { pt3dadd( 24.6309, -149.701, 123.426, 1.14 ) }
    dend_84 { pt3dadd( 24.121, -151.578, 124.487, 0.23 ) }
    dend_84 { pt3dadd( 23.7361, -152.973, 125.256, 0.23 ) }
    dend_84 { pt3dadd( 23.0367, -155.537, 126.615, 0.91 ) }
    dend_84 { pt3dadd( 22.5945, -157.059, 127.383, 0.23 ) }
    dend_84 { pt3dadd( 22.0449, -158.841, 128.128, 0.91 ) }
    dend_84 { pt3dadd( 21.448, -160.835, 128.867, 0.23 ) }
    dend_84 { pt3dadd( 20.8486, -162.659, 129.449, 1.59 ) }
    dend_84 { pt3dadd( 20.1289, -164.894, 130.115, 0.45 ) }
    dend_84 { pt3dadd( 19.129, -167.833, 130.972, 2.27 ) }
    dend_84 { pt3dadd( 17.9515, -171.174, 131.987, 0.23 ) }
    dend_84 { pt3dadd( 17.3139, -172.92, 132.43, 0.23 ) }
    dend_84 { pt3dadd( 16.8664, -173.967, 132.661, 0.23 ) }
    dend_84 { pt3dadd( 15.8053, -176.123, 133.105, 1.14 ) }
    dend_84 { pt3dadd( 14.8628, -177.851, 133.453, 0.23 ) }
    dend_84 { pt3dadd( 13.7084, -179.861, 133.877, 0.23 ) }
    dend_84 { pt3dadd( 11.3544, -183.789, 134.809, 1.36 ) }
    dend_84 { pt3dadd( 9.43048, -186.878, 135.519, 0.23 ) }
    dend_84 { pt3dadd( 8.05015, -188.932, 135.978, 2.05 ) }
    dend_84 { pt3dadd( 5.76823, -192.143, 136.658, 0.23 ) }
    dend_84 { pt3dadd( 5.13491, -193.019, 136.843, 0.45 ) }
    dend_84 { pt3dadd( 4.32, -194.1, 137.095, 0.45 ) }
    dend_84 { pt3dadd( 3.25267, -195.413, 137.541, 0.23 ) }
    dend_84 { pt3dadd( 1.70701, -197.379, 138.186, 0.91 ) }
    dend_84 { pt3dadd( 1.12728, -198.028, 138.394, 0.23 ) }
    dend_84 { pt3dadd( 0.222108, -198.737, 138.641, 1.14 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 81/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 78.8499, -96.1532, 69.8165, 0.45 ) }
    dend_77 { pt3dadd( 79.4464, -97.8338, 71.6038, 0.45 ) }
    dend_77 { pt3dadd( 80.0343, -99.2947, 73.1785, 0.45 ) }
    dend_77 { pt3dadd( 80.4481, -100.383, 74.3439, 0.45 ) }
    dend_77 { pt3dadd( 81.1763, -102.316, 76.3634, 0.45 ) }
    dend_77 { pt3dadd( 81.7195, -103.655, 77.7081, 0.68 ) }
    dend_77 { pt3dadd( 82.3005, -104.994, 78.9541, 0.23 ) }
    dend_77 { pt3dadd( 82.7081, -105.748, 79.6538, 0.91 ) }
    dend_77 { pt3dadd( 83.2137, -106.551, 80.3681, 0.23 ) }
    dend_77 { pt3dadd( 83.6911, -107.302, 80.9498, 1.36 ) }
    dend_77 { pt3dadd( 84.3867, -108.459, 81.7296, 1.82 ) }
    dend_77 { pt3dadd( 85.6814, -110.686, 83.1252, 0.45 ) }
    dend_77 { pt3dadd( 87.3295, -113.598, 84.8425, 1.82 ) }
    dend_77 { pt3dadd( 88.2964, -115.236, 85.8023, 0.23 ) }
    dend_77 { pt3dadd( 89.4269, -117.102, 86.8855, 0.68 ) }
    dend_77 { pt3dadd( 90.2321, -118.468, 87.6753, 0.91 ) }
    dend_77 { pt3dadd( 90.9136, -119.693, 88.3684, 1.59 ) }
    dend_77 { pt3dadd( 91.8866, -121.507, 89.2998, 2.73 ) }
    // Section: dend_75, id: dend_75, parent: dend_67 (entry count 99/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 101.619, -77.0069, 41.1345, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_75 { pt3dadd( 104.723, -78.6264, 40.7786, 0.23 ) }
    dend_75 { pt3dadd( 106.526, -79.3668, 40.5932, 0.91 ) }
    dend_75 { pt3dadd( 108.403, -80.0033, 40.432, 0.23 ) }
    dend_75 { pt3dadd( 109.615, -80.3519, 40.3561, 0.68 ) }
    dend_75 { pt3dadd( 111.809, -80.9237, 40.3559, 0.23 ) }
    dend_75 { pt3dadd( 114.555, -81.5757, 40.466, 0.45 ) }
    dend_75 { pt3dadd( 115.912, -81.7429, 40.6229, 0.23 ) }
    dend_75 { pt3dadd( 117.25, -81.7765, 40.8321, 1.14 ) }
    dend_75 { pt3dadd( 119.243, -81.7009, 41.2548, 0.23 ) }
    dend_75 { pt3dadd( 121.622, -81.5099, 41.8641, 0.23 ) }
    dend_75 { pt3dadd( 122.901, -81.3385, 42.2459, 1.82 ) }
    dend_75 { pt3dadd( 125.495, -80.8377, 43.0466, 0.68 ) }
    dend_75 { pt3dadd( 127.917, -80.27, 43.5676, 1.14 ) }
    dend_75 { pt3dadd( 128.925, -79.9863, 43.6985, 0.23 ) }
    dend_75 { pt3dadd( 130.021, -79.6267, 43.7381, 1.14 ) }
    dend_75 { pt3dadd( 132.58, -78.687, 43.5741, 0.23 ) }
    dend_75 { pt3dadd( 135.033, -77.7457, 43.2883, 0.23 ) }
    dend_75 { pt3dadd( 138.23, -76.512, 42.7746, 0.23 ) }
    dend_75 { pt3dadd( 140.447, -75.6757, 42.3632, 1.14 ) }
    dend_75 { pt3dadd( 143.063, -74.6519, 41.9172, 0.23 ) }
    dend_75 { pt3dadd( 144.888, -73.9169, 41.6617, 1.14 ) }
    dend_75 { pt3dadd( 146.635, -73.231, 41.5049, 0.23 ) }
    dend_75 { pt3dadd( 147.943, -72.7653, 41.5418, 0.91 ) }
    dend_75 { pt3dadd( 149.729, -72.2394, 41.8674, 0.23 ) }
    dend_75 { pt3dadd( 151.456, -71.9778, 42.356, 0.91 ) }
    dend_75 { pt3dadd( 152.319, -72.0186, 42.7316, 0.23 ) }
    dend_75 { pt3dadd( 153.788, -72.2898, 43.4844, 2.27 ) }
    dend_75 { pt3dadd( 156.088, -72.9612, 44.6578, 0.23 ) }
    dend_75 { pt3dadd( 156.853, -73.2374, 44.9669, 0.91 ) }
    dend_75 { pt3dadd( 158.999, -74.1117, 45.6167, 0.23 ) }
    dend_75 { pt3dadd( 161.187, -75.0944, 46.0738, 0.91 ) }
    dend_75 { pt3dadd( 162.828, -75.8637, 46.3323, 0.23 ) }
    dend_75 { pt3dadd( 165.4, -77.035, 46.5431, 0.91 ) }
    dend_75 { pt3dadd( 168.254, -78.2433, 46.5816, 0.23 ) }
    dend_75 { pt3dadd( 169.836, -78.7943, 46.5468, 1.36 ) }
    dend_75 { pt3dadd( 172.225, -79.4289, 46.4508, 0.23 ) }
    dend_75 { pt3dadd( 174.578, -79.9185, 46.2827, 0.23 ) }
    dend_75 { pt3dadd( 176.469, -80.2647, 46.1708, 0.45 ) }
    dend_75 { pt3dadd( 177.829, -80.4553, 46.1228, 1.14 ) }
    dend_75 { pt3dadd( 180.795, -80.7688, 46.1406, 0.23 ) }
    dend_75 { pt3dadd( 183.034, -80.9436, 46.1547, 0.45 ) }
    dend_75 { pt3dadd( 186.013, -81.1048, 46.1906, 0.23 ) }
    dend_75 { pt3dadd( 187.985, -81.1949, 46.3178, 0.23 ) }
    dend_75 { pt3dadd( 189.102, -81.2624, 46.4562, 1.14 ) }
    dend_75 { pt3dadd( 190.675, -81.391, 46.7168, 2.5 ) }
    dend_75 { pt3dadd( 192.229, -81.5578, 47.0456, 2.73 ) }
    dend_75 { pt3dadd( 193.573, -81.724, 47.3392, 1.82 ) }
    dend_75 { pt3dadd( 196.314, -82.147, 47.9648, 0.23 ) }
    dend_75 { pt3dadd( 197.225, -82.3308, 48.1255, 0.68 ) }
    dend_75 { pt3dadd( 199.848, -82.9024, 48.5576, 0.68 ) }
    dend_75 { pt3dadd( 202.51, -83.5329, 48.9383, 0.23 ) }
    dend_75 { pt3dadd( 204.132, -83.9656, 49.107, 0.91 ) }
    dend_75 { pt3dadd( 205.981, -84.5485, 49.1712, 0.23 ) }
    dend_75 { pt3dadd( 208.052, -85.3844, 48.9775, 0.23 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 54/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 101.619, -77.0069, 41.1345, 0.68 ) }
    dend_68 { pt3dadd( 102.736, -80.5516, 41.968, 0.68 ) }
    dend_68 { pt3dadd( 103.821, -83.2575, 42.7078, 1.14 ) }
    dend_68 { pt3dadd( 104.908, -85.7414, 43.5585, 0.45 ) }
    dend_68 { pt3dadd( 106.081, -88.1479, 44.4799, 0.45 ) }
    dend_68 { pt3dadd( 107.144, -90.1257, 45.3492, 1.14 ) }
    dend_68 { pt3dadd( 107.967, -91.5829, 46.0247, 1.14 ) }
    dend_68 { pt3dadd( 108.858, -92.8564, 46.7881, 0.23 ) }
    dend_68 { pt3dadd( 110.123, -94.4341, 47.8052, 0.68 ) }
    dend_68 { pt3dadd( 111.032, -95.5032, 48.4744, 0.68 ) }
    dend_68 { pt3dadd( 112.392, -97.2382, 49.3586, 0.23 ) }
    dend_68 { pt3dadd( 113.465, -98.7159, 49.9813, 1.36 ) }
    dend_68 { pt3dadd( 114.202, -99.7436, 50.3189, 2.05 ) }
    dend_68 { pt3dadd( 115.33, -101.298, 50.6965, 2.05 ) }
    dend_68 { pt3dadd( 116.343, -102.715, 50.9908, 0.91 ) }
    dend_68 { pt3dadd( 117.334, -104.148, 51.2831, 1.36 ) }
    dend_68 { pt3dadd( 118.739, -106.064, 51.6627, 0.23 ) }
    dend_68 { pt3dadd( 120.487, -108.396, 52.2178, 1.36 ) }
    dend_68 { pt3dadd( 121.196, -109.305, 52.4785, 1.36 ) }
    dend_68 { pt3dadd( 123.415, -111.928, 53.4675, 0.68 ) }
    dend_68 { pt3dadd( 124.096, -112.683, 53.8281, 0.68 ) }
    dend_68 { pt3dadd( 125.514, -114.304, 54.6863, 0.45 ) }
    dend_68 { pt3dadd( 126.782, -115.935, 55.5949, 0.45 ) }
    dend_68 { pt3dadd( 127.91, -117.67, 56.5476, 0.23 ) }
    dend_68 { pt3dadd( 128.905, -119.383, 57.3716, 0.23 ) }
    dend_68 { pt3dadd( 129.937, -121.486, 58.314, 1.59 ) }
    dend_68 { pt3dadd( 130.755, -123.626, 59.3708, 0.23 ) }
    dend_68 { pt3dadd( 131.099, -124.79, 59.9599, 2.5 ) }
    dend_68 { pt3dadd( 131.546, -126.658, 60.8295, 2.5 ) }
    dend_68 { pt3dadd( 132.038, -129.363, 61.9368, 2.5 ) }
    dend_68 { pt3dadd( 132.796, -133.604, 63.502, 0.23 ) }
    dend_68 { pt3dadd( 133.451, -137.341, 64.9075, 0.23 ) }
    dend_68 { pt3dadd( 133.689, -138.622, 65.4173, 0.23 ) }
    dend_68 { pt3dadd( 134.21, -141.17, 66.4525, 1.36 ) }
    dend_68 { pt3dadd( 134.851, -144.411, 67.7623, 2.27 ) }
    dend_68 { pt3dadd( 135.129, -146.25, 68.4098, 2.27 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 90/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 211.436, -32.9218, 63.3816, 0.23 ) }
    dend_63 { pt3dadd( 214.568, -34.3703, 64.7778, 0.23 ) }
    dend_63 { pt3dadd( 218.578, -36.0046, 66.372, 1.36 ) }
    dend_63 { pt3dadd( 222.195, -37.1942, 67.5925, 0.23 ) }
    dend_63 { pt3dadd( 223.917, -37.6916, 68.0917, 0.91 ) }
    dend_63 { pt3dadd( 227.156, -38.5499, 68.8917, 0.23 ) }
    dend_63 { pt3dadd( 228.304, -38.8269, 69.1303, 0.68 ) }
    dend_63 { pt3dadd( 229.148, -38.951, 69.2269, 0.23 ) }
    dend_63 { pt3dadd( 231.999, -39.1994, 69.1088, 0.68 ) }
    dend_63 { pt3dadd( 233.106, -39.286, 68.9625, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_63 { pt3dadd( 234.436, -39.4505, 68.7515, 1.36 ) }
    dend_63 { pt3dadd( 236.155, -39.7344, 68.4502, 1.36 ) }
    dend_63 { pt3dadd( 237.72, -40.011, 68.2245, 0.23 ) }
    dend_63 { pt3dadd( 240.615, -40.544, 67.8655, 1.14 ) }
    dend_63 { pt3dadd( 243.35, -41.0352, 67.5788, 0.23 ) }
    dend_63 { pt3dadd( 245.363, -41.3424, 67.4154, 0.91 ) }
    dend_63 { pt3dadd( 247.669, -41.6502, 67.2676, 0.23 ) }
    dend_63 { pt3dadd( 251.077, -42.0559, 67.087, 1.59 ) }
    dend_63 { pt3dadd( 252.554, -42.1933, 67.031, 1.59 ) }
    dend_63 { pt3dadd( 255.781, -42.4001, 66.9518, 0.23 ) }
    dend_63 { pt3dadd( 257.495, -42.4659, 66.912, 1.59 ) }
    dend_63 { pt3dadd( 258.699, -42.4727, 66.8741, 1.59 ) }
    dend_63 { pt3dadd( 260.825, -42.4301, 66.7735, 0.23 ) }
    dend_63 { pt3dadd( 262.26, -42.4085, 66.6898, 0.91 ) }
    dend_63 { pt3dadd( 264.01, -42.4322, 66.6208, 0.23 ) }
    dend_63 { pt3dadd( 266.618, -42.5278, 66.5427, 1.36 ) }
    dend_63 { pt3dadd( 271.217, -42.7474, 66.4329, 0.23 ) }
    dend_63 { pt3dadd( 273.497, -42.8568, 66.3954, 1.59 ) }
    dend_63 { pt3dadd( 278.494, -43.0715, 66.3626, 0.23 ) }
    dend_63 { pt3dadd( 281.536, -43.1605, 66.3845, 1.14 ) }
    dend_63 { pt3dadd( 284.201, -43.1672, 66.5478, 0.23 ) }
    dend_63 { pt3dadd( 286.188, -43.0773, 66.7947, 1.36 ) }
    dend_63 { pt3dadd( 288.137, -42.8663, 67.2093, 1.36 ) }
    dend_63 { pt3dadd( 289.8, -42.5409, 67.704, 0.23 ) }
    dend_63 { pt3dadd( 291.195, -42.0967, 68.2411, 1.59 ) }
    dend_63 { pt3dadd( 295.287, -40.4617, 70.0107, 0.23 ) }
    dend_63 { pt3dadd( 297.66, -39.4445, 71.0942, 1.36 ) }
    dend_63 { pt3dadd( 300.221, -38.4297, 72.178, 0.23 ) }
    dend_63 { pt3dadd( 301.313, -38.0468, 72.5815, 1.59 ) }
    dend_63 { pt3dadd( 303.814, -37.4142, 73.3217, 0.23 ) }
    dend_63 { pt3dadd( 305.626, -37.1856, 73.6613, 1.36 ) }
    dend_63 { pt3dadd( 307.363, -37.2581, 73.8853, 1.36 ) }
    dend_63 { pt3dadd( 310.192, -37.8463, 74.3113, 0.23 ) }
    dend_63 { pt3dadd( 311.604, -38.2291, 74.5472, 1.14 ) }
    dend_63 { pt3dadd( 314.327, -39.0231, 75.1387, 0.23 ) }
    dend_63 { pt3dadd( 316.611, -39.7192, 75.8051, 1.36 ) }
    dend_63 { pt3dadd( 320.88, -40.9283, 77.2924, 0.23 ) }
    dend_63 { pt3dadd( 324.258, -41.7439, 78.6241, 0.23 ) }
    dend_63 { pt3dadd( 327.177, -42.3077, 79.9008, 1.14 ) }
    dend_63 { pt3dadd( 329.62, -42.7335, 80.975, 0.23 ) }
    dend_63 { pt3dadd( 332.252, -43.0724, 82.1023, 1.36 ) }
    dend_63 { pt3dadd( 333.865, -43.2167, 82.764, 0.23 ) }
    dend_63 { pt3dadd( 335.519, -43.3042, 83.367, 1.59 ) }
    dend_63 { pt3dadd( 338.07, -43.4428, 84.2539, 0.23 ) }
    dend_63 { pt3dadd( 342.2, -43.9079, 85.5924, 0.23 ) }
    dend_63 { pt3dadd( 343.892, -44.1603, 86.0286, 0.23 ) }
    dend_63 { pt3dadd( 345.055, -44.3594, 86.2714, 1.36 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 211.436, -32.9218, 63.3816, 0.23 ) }
    dend_62 { pt3dadd( 212.365, -33.7364, 60.8004, 0.23 ) }
    dend_62 { pt3dadd( 212.98, -34.3322, 59.1977, 0.23 ) }
    dend_62 { pt3dadd( 213.553, -34.9417, 57.7476, 1.14 ) }
    dend_62 { pt3dadd( 214.086, -35.5668, 56.4156, 0.23 ) }
    dend_62 { pt3dadd( 214.853, -36.5442, 54.618, 1.14 ) }
    dend_62 { pt3dadd( 215.583, -37.5545, 52.9912, 0.23 ) }
    dend_62 { pt3dadd( 215.842, -37.9527, 52.4996, 0.68 ) }
    dend_62 { pt3dadd( 216.168, -38.5334, 51.8845, 0.23 ) }
    dend_62 { pt3dadd( 216.602, -39.2772, 51.1422, 1.14 ) }
    dend_62 { pt3dadd( 217.787, -41.1936, 49.4582, 0.23 ) }
    dend_62 { pt3dadd( 218.387, -42.0934, 48.7472, 1.36 ) }
    dend_62 { pt3dadd( 219.183, -43.1906, 47.9007, 0.23 ) }
    dend_62 { pt3dadd( 220.17, -44.4318, 46.9424, 1.59 ) }
    dend_62 { pt3dadd( 221.596, -45.9805, 45.4996, 0.23 ) }
    dend_62 { pt3dadd( 223.576, -47.8287, 43.4593, 0.23 ) }
    dend_62 { pt3dadd( 224.294, -48.3801, 42.7, 0.23 ) }
    dend_62 { pt3dadd( 224.993, -48.8162, 41.904, 2.05 ) }
    dend_62 { pt3dadd( 226.462, -49.5339, 40.1649, 0.23 ) }
    dend_62 { pt3dadd( 228.856, -50.455, 37.1351, 0.23 ) }
    dend_62 { pt3dadd( 229.503, -50.6447, 36.2045, 1.59 ) }
    dend_62 { pt3dadd( 230.295, -50.7567, 34.9697, 0.23 ) }
    dend_62 { pt3dadd( 231.247, -50.7757, 33.5249, 2.27 ) }
    dend_62 { pt3dadd( 231.637, -50.7637, 32.9267, 0.91 ) }
    dend_62 { pt3dadd( 232.535, -50.7357, 31.5924, 0.23 ) }
    dend_62 { pt3dadd( 233.556, -50.8108, 30.2154, 1.36 ) }
    dend_62 { pt3dadd( 234.807, -50.959, 28.4733, 0.23 ) }
    dend_62 { pt3dadd( 235.974, -51.2233, 26.9226, 1.82 ) }
    dend_62 { pt3dadd( 236.703, -51.4378, 26.0525, 0.23 ) }
    dend_62 { pt3dadd( 237.595, -51.7762, 25.0287, 0.23 ) }
    dend_62 { pt3dadd( 238.032, -51.9794, 24.5505, 1.14 ) }
    dend_62 { pt3dadd( 239.715, -53.0516, 22.7297, 0.23 ) }
    dend_62 { pt3dadd( 241.262, -54.1622, 21.1224, 1.36 ) }
    dend_62 { pt3dadd( 242.322, -54.9681, 20.0584, 0.91 ) }
    dend_62 { pt3dadd( 243.518, -55.8433, 18.8974, 0.23 ) }
    dend_62 { pt3dadd( 244.536, -56.6229, 17.8843, 1.59 ) }
    dend_62 { pt3dadd( 246.407, -58.0853, 16.0616, 0.23 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 84/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 78.2794, -68.5832, -7.0932, 0.23 ) }
    dend_57 { pt3dadd( 79.4865, -69.9114, -7.11214, 0.23 ) }
    dend_57 { pt3dadd( 80.1905, -70.7664, -7.16725, 2.05 ) }
    dend_57 { pt3dadd( 81.6737, -72.5285, -7.29706, 0.45 ) }
    dend_57 { pt3dadd( 82.4684, -73.4471, -7.38901, 0.45 ) }
    dend_57 { pt3dadd( 83.4805, -74.6148, -7.50312, 0.45 ) }
    dend_57 { pt3dadd( 84.4749, -75.751, -7.62592, 1.82 ) }
    dend_57 { pt3dadd( 85.6443, -77.108, -7.84729, 0.45 ) }
    dend_57 { pt3dadd( 86.5786, -78.1829, -8.05121, 0.45 ) }
    dend_57 { pt3dadd( 87.3092, -78.9899, -8.25282, 1.59 ) }
    dend_57 { pt3dadd( 88.3411, -80.2084, -8.53009, 0.23 ) }
    dend_57 { pt3dadd( 88.8977, -80.8861, -8.68991, 0.91 ) }
    dend_57 { pt3dadd( 89.7762, -81.8726, -8.96682, 0.23 ) }
    dend_57 { pt3dadd( 90.3607, -82.5168, -9.16127, 1.36 ) }
    dend_57 { pt3dadd( 90.9778, -83.2345, -9.40103, 1.36 ) }
    dend_57 { pt3dadd( 91.9947, -84.4234, -9.80431, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_57 { pt3dadd( 92.9131, -85.4799, -10.1955, 2.27 ) }
    dend_57 { pt3dadd( 94.0523, -86.7945, -10.6576, 0.23 ) }
    dend_57 { pt3dadd( 94.8663, -87.7121, -10.9689, 0.23 ) }
    dend_57 { pt3dadd( 95.5761, -88.504, -11.2337, 2.05 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 4/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 78.2794, -68.5832, -7.0932, 0.91 ) }
    dend_56 { pt3dadd( 78.6702, -70.207, -10.5905, 0.91 ) }
    dend_56 { pt3dadd( 78.9955, -71.6969, -13.5397, 0.23 ) }
    dend_56 { pt3dadd( 79.1331, -72.6509, -15.5027, 1.36 ) }
    dend_56 { pt3dadd( 79.2125, -73.6862, -17.7001, 0.23 ) }
    dend_56 { pt3dadd( 79.2545, -74.6911, -19.8127, 0.91 ) }
    dend_56 { pt3dadd( 79.2674, -75.4886, -21.5486, 0.23 ) }
    dend_56 { pt3dadd( 79.1545, -76.5758, -24.0596, 1.36 ) }
    dend_56 { pt3dadd( 78.8157, -77.7423, -27.5357, 0.23 ) }
    dend_56 { pt3dadd( 78.3985, -78.4228, -30.4461, 0.23 ) }
    dend_56 { pt3dadd( 78.1341, -78.5867, -31.6844, 1.14 ) }
    dend_56 { pt3dadd( 77.2458, -78.6944, -34.9617, 0.23 ) }
    dend_56 { pt3dadd( 75.8877, -78.6108, -39.1697, 1.82 ) }
    dend_56 { pt3dadd( 74.2406, -78.3266, -43.477, 0.23 ) }
    dend_56 { pt3dadd( 73.154, -78.0904, -45.8667, 0.23 ) }
    dend_56 { pt3dadd( 71.1477, -77.613, -49.6267, 0.68 ) }
    dend_56 { pt3dadd( 69.653, -77.2352, -52.1717, 0.23 ) }
    dend_56 { pt3dadd( 68.6505, -76.9903, -53.7011, 1.36 ) }
    dend_56 { pt3dadd( 66.8027, -76.5975, -56.3101, 0.23 ) }
    dend_56 { pt3dadd( 64.6955, -76.3397, -59.1964, 1.59 ) }
    dend_56 { pt3dadd( 62.3505, -76.2419, -62.3826, 0.23 ) }
    dend_56 { pt3dadd( 60.7801, -76.3089, -64.4663, 0.23 ) }
    dend_56 { pt3dadd( 58.9679, -76.5655, -66.7896, 1.36 ) }
    dend_56 { pt3dadd( 56.999, -77.0394, -69.2654, 0.23 ) }
    dend_56 { pt3dadd( 55.6218, -77.5404, -71.0145, 0.23 ) }
    dend_56 { pt3dadd( 53.3549, -78.6996, -73.9196, 1.82 ) }
    dend_56 { pt3dadd( 51.9183, -79.5778, -75.8481, 0.45 ) }
    dend_56 { pt3dadd( 50.0511, -80.7916, -78.5573, 0.23 ) }
    dend_56 { pt3dadd( 49.2389, -81.3021, -79.8291, 0.91 ) }
    dend_56 { pt3dadd( 47.771, -82.1037, -82.1837, 0.23 ) }
    dend_56 { pt3dadd( 46.728, -82.4872, -83.8405, 1.14 ) }
    dend_56 { pt3dadd( 44.3983, -82.9619, -87.5047, 0.23 ) }
    dend_56 { pt3dadd( 42.7455, -83.1533, -90.1183, 1.36 ) }
    dend_56 { pt3dadd( 41.3661, -83.249, -92.3252, 0.23 ) }
    dend_56 { pt3dadd( 40.4835, -83.3399, -93.6408, 0.91 ) }
    dend_56 { pt3dadd( 39.2047, -83.5188, -95.4733, 0.23 ) }
    dend_56 { pt3dadd( 38.3071, -83.6714, -96.7298, 0.23 ) }
    dend_56 { pt3dadd( 37.5827, -83.8447, -97.656, 1.14 ) }
    dend_56 { pt3dadd( 35.1511, -84.4122, -100.631, 0.23 ) }
    dend_56 { pt3dadd( 33.3837, -84.8285, -102.803, 0.91 ) }
    dend_56 { pt3dadd( 31.8757, -85.1753, -104.754, 0.23 ) }
    dend_56 { pt3dadd( 31.2365, -85.329, -105.592, 1.14 ) }
    dend_56 { pt3dadd( 30.3327, -85.5721, -106.789, 1.14 ) }
    dend_56 { pt3dadd( 29.098, -86.0353, -108.406, 0.23 ) }
    dend_56 { pt3dadd( 27.8415, -86.6163, -110.107, 0.91 ) }
    dend_56 { pt3dadd( 26.2984, -87.4157, -112.295, 0.23 ) }
    dend_56 { pt3dadd( 25.5415, -87.8653, -113.392, 0.23 ) }
    dend_56 { pt3dadd( 24.0146, -88.8321, -115.682, 1.14 ) }
    dend_56 { pt3dadd( 22.3995, -90.0267, -118.385, 0.23 ) }
    dend_56 { pt3dadd( 21.1728, -91.0475, -120.542, 1.36 ) }
    dend_56 { pt3dadd( 19.7022, -92.1844, -123.226, 0.23 ) }
    dend_56 { pt3dadd( 18.9493, -92.7136, -124.547, 1.36 ) }
    dend_56 { pt3dadd( 18.4424, -93.0242, -125.406, 1.36 ) }
    dend_56 { pt3dadd( 17.0134, -93.7343, -127.899, 0.23 ) }
    dend_56 { pt3dadd( 16.2518, -94.0624, -129.217, 1.14 ) }
    dend_56 { pt3dadd( 14.8732, -94.6398, -131.324, 0.23 ) }
    dend_56 { pt3dadd( 13.7979, -95.0013, -132.918, 0.91 ) }
    dend_56 { pt3dadd( 12.7416, -95.3157, -134.399, 0.23 ) }
    dend_56 { pt3dadd( 11.277, -95.7955, -136.316, 0.23 ) }
    dend_56 { pt3dadd( 10.3207, -96.178, -137.434, 0.45 ) }
    dend_56 { pt3dadd( 8.74694, -96.8774, -139.248, 1.14 ) }
    dend_56 { pt3dadd( 7.40158, -97.6551, -140.668, 0.23 ) }
    dend_56 { pt3dadd( 6.60817, -98.0869, -141.501, 0.23 ) }
    dend_56 { pt3dadd( 5.20885, -98.8617, -142.963, 1.14 ) }
    dend_56 { pt3dadd( 3.68748, -99.7196, -144.596, 0.23 ) }
    dend_56 { pt3dadd( 1.45935, -101.022, -147.206, 1.14 ) }
    dend_56 { pt3dadd( -0.085102, -102.018, -149.135, 0.23 ) }
    dend_56 { pt3dadd( -1.77777, -103.208, -151.291, 0.23 ) }
    dend_56 { pt3dadd( -2.75199, -103.928, -152.591, 0.23 ) }
    dend_56 { pt3dadd( -4.81082, -105.543, -155.544, 0.23 ) }
    dend_56 { pt3dadd( -5.50627, -106.122, -156.58, 0.68 ) }
    dend_56 { pt3dadd( -7.22083, -107.768, -159.304, 0.23 ) }
    dend_56 { pt3dadd( -8.18596, -108.733, -160.941, 1.14 ) }
    dend_56 { pt3dadd( -8.87894, -109.569, -162.125, 0.23 ) }
    dend_56 { pt3dadd( -10.2342, -111.29, -164.479, 1.36 ) }
    dend_56 { pt3dadd( -13.3936, -114.017, -174.651, 1.36 ) }
    dend_56 { pt3dadd( -16.4264, -117.257, -184.724, 1.36 ) }
    dend_56 { pt3dadd( -20.7671, -120.738, -194.202, 1.36 ) }
    dend_56 { pt3dadd( -23.7882, -125.381, -203.744, 1.36 ) }
    dend_56 { pt3dadd( -27.5404, -129.03, -213.424, 1.36 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 84/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 78.5865, -6.89752, 45.2539, 1.14 ) }
    dend_54 { pt3dadd( 79.6681, -9.21443, 46.0081, 1.14 ) }
    dend_54 { pt3dadd( 81.2383, -12.696, 46.8051, 0.45 ) }
    dend_54 { pt3dadd( 82.5845, -15.8909, 47.5117, 0.91 ) }
    dend_54 { pt3dadd( 83.2455, -17.6809, 47.8584, 0.23 ) }
    dend_54 { pt3dadd( 83.5093, -18.4979, 48.0393, 1.14 ) }
    dend_54 { pt3dadd( 84.1541, -21.2489, 48.8098, 0.23 ) }
    dend_54 { pt3dadd( 84.3989, -24.5077, 49.9911, 0.91 ) }
    dend_54 { pt3dadd( 84.2244, -27.2796, 51.1382, 0.91 ) }
    dend_54 { pt3dadd( 83.908, -29.0958, 52.0069, 2.05 ) }
    dend_54 { pt3dadd( 83.1911, -31.7995, 53.5027, 0.68 ) }
    dend_54 { pt3dadd( 81.9589, -35.5421, 55.7141, 1.59 ) }
    dend_54 { pt3dadd( 80.4924, -39.1419, 57.937, 0.23 ) }
    dend_54 { pt3dadd( 80.0208, -40.1037, 58.5243, 1.36 ) }
    dend_54 { pt3dadd( 78.7793, -42.36, 59.8013, 0.45 ) }
    dend_54 { pt3dadd( 78.2295, -43.2745, 60.2586, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_54 { pt3dadd( 76.4509, -46.0673, 61.2914, 0.23 ) }
    dend_54 { pt3dadd( 75.246, -47.9384, 61.7824, 1.14 ) }
    dend_54 { pt3dadd( 74.4658, -49.0148, 61.9896, 0.45 ) }
    dend_54 { pt3dadd( 73.3406, -50.5068, 62.2491, 2.27 ) }
    dend_54 { pt3dadd( 70.6107, -54.0198, 62.752, 0.23 ) }
    dend_54 { pt3dadd( 68.9424, -56.1462, 63.1004, 1.14 ) }
    dend_54 { pt3dadd( 68.3873, -56.8101, 63.2404, 0.23 ) }
    dend_54 { pt3dadd( 66.7302, -58.7253, 63.8651, 1.14 ) }
    dend_54 { pt3dadd( 64.5869, -61.2958, 65.0708, 0.23 ) }
    dend_54 { pt3dadd( 63.2711, -62.9202, 66.0122, 0.23 ) }
    dend_54 { pt3dadd( 62.4565, -64.0237, 66.7597, 0.23 ) }
    dend_54 { pt3dadd( 61.1719, -65.9535, 68.1537, 1.14 ) }
    dend_54 { pt3dadd( 59.516, -68.9606, 70.3665, 2.05 ) }
    dend_54 { pt3dadd( 58.3524, -71.6431, 72.3446, 0.68 ) }
    dend_54 { pt3dadd( 57.9715, -72.5855, 72.9978, 0.68 ) }
    dend_54 { pt3dadd( 56.7862, -75.3611, 74.7613, 0.68 ) }
    dend_54 { pt3dadd( 56.3465, -76.3327, 75.3319, 1.36 ) }
    dend_54 { pt3dadd( 55.2723, -78.5941, 76.5349, 0.23 ) }
    dend_54 { pt3dadd( 53.7298, -81.8477, 78.0446, 1.14 ) }
    dend_54 { pt3dadd( 52.598, -84.233, 79.1104, 0.23 ) }
    dend_54 { pt3dadd( 50.9613, -87.8599, 80.8035, 0.91 ) }
    dend_54 { pt3dadd( 49.6889, -90.7338, 82.1009, 0.23 ) }
    dend_54 { pt3dadd( 49.2657, -91.8192, 82.5403, 1.14 ) }
    dend_54 { pt3dadd( 48.4918, -94.4614, 83.3412, 0.45 ) }
    dend_54 { pt3dadd( 48.0814, -97.094, 83.8541, 1.14 ) }
    dend_54 { pt3dadd( 47.9407, -99.5401, 84.1303, 0.23 ) }
    dend_54 { pt3dadd( 47.903, -101.378, 84.207, 1.14 ) }
    dend_54 { pt3dadd( 47.8775, -103.716, 84.2004, 0.23 ) }
    dend_54 { pt3dadd( 47.8148, -106.297, 84.1621, 1.36 ) }
    dend_54 { pt3dadd( 47.4734, -110.923, 83.9702, 0.23 ) }
    dend_54 { pt3dadd( 47.2288, -112.955, 83.8118, 0.91 ) }
    dend_54 { pt3dadd( 46.8273, -115.713, 83.5343, 0.91 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 32/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 78.5865, -6.89752, 45.2539, 0.91 ) }
    dend_51 { pt3dadd( 79.8599, -5.82204, 47.16, 0.91 ) }
    dend_51 { pt3dadd( 80.6374, -5.16545, 48.3237, 0.91 ) }
    dend_51 { pt3dadd( 81.9488, -4.05789, 50.2866, 1.59 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 36/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -133.5, 268.956, -72.3595, 0.23 ) }
    dend_46 { pt3dadd( -131.498, 270.605, -73.4747, 0.23 ) }
    dend_46 { pt3dadd( -130.522, 271.67, -74.0436, 1.14 ) }
    dend_46 { pt3dadd( -129.006, 273.72, -74.9787, 0.23 ) }
    dend_46 { pt3dadd( -128.018, 275.332, -75.6156, 0.91 ) }
    dend_46 { pt3dadd( -127.306, 276.757, -76.0859, 0.23 ) }
    dend_46 { pt3dadd( -126.724, 278.147, -76.4271, 0.91 ) }
    dend_46 { pt3dadd( -125.692, 281.666, -76.875, 0.23 ) }
    dend_46 { pt3dadd( -125.357, 283.456, -76.9762, 0.23 ) }
    dend_46 { pt3dadd( -125.176, 285.612, -76.8792, 0.23 ) }
    dend_46 { pt3dadd( -125.117, 289.171, -76.3575, 0.91 ) }
    dend_46 { pt3dadd( -125.177, 292.035, -75.7333, 0.23 ) }
    dend_46 { pt3dadd( -125.314, 293.965, -75.1793, 1.59 ) }
    dend_46 { pt3dadd( -125.638, 297.185, -74.0445, 0.23 ) }
    dend_46 { pt3dadd( -125.921, 300.098, -72.8908, 0.91 ) }
    dend_46 { pt3dadd( -126.169, 302.901, -71.6508, 0.23 ) }
    dend_46 { pt3dadd( -126.295, 304.879, -70.6683, 1.36 ) }
    dend_46 { pt3dadd( -126.456, 308.299, -69.0132, 0.23 ) }
    dend_46 { pt3dadd( -126.469, 309.123, -68.6124, 0.23 ) }
    dend_46 { pt3dadd( -126.404, 310.109, -68.0499, 0.23 ) }
    dend_46 { pt3dadd( -126.218, 311.15, -67.5204, 0.23 ) }
    dend_46 { pt3dadd( -125.63, 313.293, -66.471, 0.23 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 58/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -133.5, 268.956, -72.3595, 0.23 ) }
    dend_45 { pt3dadd( -130.001, 267.417, -73.9069, 0.23 ) }
    dend_45 { pt3dadd( -127.755, 266.43, -74.9003, 0.23 ) }
    dend_45 { pt3dadd( -125.819, 265.578, -75.7568, 0.23 ) }
    dend_45 { pt3dadd( -123.554, 264.582, -76.7585, 1.14 ) }
    dend_45 { pt3dadd( -122.158, 263.969, -77.3759, 1.82 ) }
    dend_45 { pt3dadd( -111.609, 259.37, -79.7565, 1.82 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 65/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 174.776, 247.266, 22.8692, 0.23 ) }
    dend_41 { pt3dadd( 180.599, 253.885, 25.0827, 0.23 ) }
    dend_41 { pt3dadd( 187.405, 259.595, 26.9285, 0.23 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 174.776, 247.266, 22.8692, 0.68 ) }
    dend_40 { pt3dadd( 182.729, 256.337, 25.8225, 0.23 ) }
    dend_40 { pt3dadd( 190.442, 265.736, 28.4132, 0.23 ) }
    // Section: dend_38, id: dend_38, parent: dend_26 (entry count 71/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 13.5352, 77.2615, -36.3416, 0.23 ) }
    dend_38 { pt3dadd( 22.6415, 86.0602, -41.4381, 0.23 ) }
    dend_38 { pt3dadd( 29.8078, 97.0868, -45.3706, 0.23 ) }
    dend_38 { pt3dadd( 37.7249, 107.542, -49.3484, 0.23 ) }
    dend_38 { pt3dadd( 45.6964, 118.193, -52.6608, 0.23 ) }
    dend_38 { pt3dadd( 54.7227, 126.927, -58.0013, 0.23 ) }
    dend_38 { pt3dadd( 61.7713, 136.04, -65.3525, 0.23 ) }
    dend_38 { pt3dadd( 69.6714, 144.106, -72.9942, 0.23 ) }
    dend_38 { pt3dadd( 78.6722, 152.395, -79.0124, 0.23 ) }
    dend_38 { pt3dadd( 87.3355, 159.869, -86.3924, 0.23 ) }
    dend_38 { pt3dadd( 94.5509, 166.92, -95.5231, 0.23 ) }
    dend_38 { pt3dadd( 102.521, 172.135, -105.179, 0.23 ) }
    dend_38 { pt3dadd( 111.478, 175.744, -114.659, 0.23 ) }
    dend_38 { pt3dadd( 121.151, 181.834, -121.988, 0.23 ) }
    dend_38 { pt3dadd( 128.738, 188.11, -131.351, 0.23 ) }
    dend_38 { pt3dadd( 134.904, 194.63, -141.564, 0.23 ) }
    dend_38 { pt3dadd( 141.711, 200.879, -151.526, 0.23 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 13.5352, 77.2615, -36.3416, 0.68 ) }
    dend_27 { pt3dadd( 17.9011, 84.6136, -36.6297, 0.23 ) }
    dend_27 { pt3dadd( 22.8288, 91.5784, -37.0114, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 91/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -71.9943, -40.0585, -28.6817, 0.23 ) }
    dend_20 { pt3dadd( -68.2981, -42.6218, -30.7698, 0.23 ) }
    dend_20 { pt3dadd( -64.8773, -45.0609, -32.782, 0.23 ) }
    dend_20 { pt3dadd( -62.5735, -46.6894, -34.1651, 0.23 ) }
    dend_20 { pt3dadd( -59.0527, -49.349, -36.4454, 0.23 ) }
    dend_20 { pt3dadd( -55.3413, -52.1527, -38.8494, 0.23 ) }
    dend_20 { pt3dadd( -51.3653, -55.1562, -41.4246, 0.23 ) }
    dend_20 { pt3dadd( -48.5667, -57.2584, -43.2974, 0.23 ) }
    dend_20 { pt3dadd( -44.2139, -60.6911, -46.3185, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_20 { pt3dadd( -41.0704, -63.2934, -48.6381, 0.23 ) }
    dend_20 { pt3dadd( -32.5467, -70.8486, -55.1827, 0.23 ) }
    dend_20 { pt3dadd( -21.6045, -76.5861, -59.3844, 0.23 ) }
    dend_20 { pt3dadd( -10.3792, -80.9251, -64.375, 0.23 ) }
    dend_20 { pt3dadd( 2.1408, -83.4193, -66.6581, 0.23 ) }
    dend_20 { pt3dadd( 14.5065, -84.8127, -70.2947, 0.23 ) }
    dend_20 { pt3dadd( 27.1339, -84.93, -73.151, 0.23 ) }
    dend_20 { pt3dadd( 39.8345, -83.4625, -75.1235, 0.23 ) }
    dend_20 { pt3dadd( 52.6715, -81.9094, -75.4821, 0.23 ) }
    dend_20 { pt3dadd( 65.4738, -80.0754, -75.1727, 0.23 ) }
    dend_20 { pt3dadd( 77.8161, -76.2815, -76.0558, 0.23 ) }
    dend_20 { pt3dadd( 89.9151, -73.3176, -79.5426, 0.23 ) }
    dend_20 { pt3dadd( 102.631, -72.1882, -81.6452, 0.23 ) }
    dend_20 { pt3dadd( 115.421, -70.2494, -81.5149, 0.23 ) }
    dend_20 { pt3dadd( 128.251, -68.7964, -82.2848, 0.23 ) }
    dend_20 { pt3dadd( 140.762, -67.5345, -85.3357, 0.23 ) }
    dend_20 { pt3dadd( 153.112, -65.5375, -88.6291, 0.23 ) }
    dend_20 { pt3dadd( 165.209, -65.2882, -93.252, 0.23 ) }
    dend_20 { pt3dadd( 177.361, -66.3909, -97.6374, 0.23 ) }
    dend_20 { pt3dadd( 188.982, -66.3673, -103.378, 0.23 ) }
    dend_20 { pt3dadd( 200.023, -65.4484, -110.095, 0.23 ) }
    dend_20 { pt3dadd( 210.899, -62.7903, -116.586, 0.23 ) }
    dend_20 { pt3dadd( 222.01, -59.3503, -122.249, 0.23 ) }
    dend_20 { pt3dadd( 231.814, -53.4686, -128.307, 0.23 ) }
    dend_20 { pt3dadd( 241.35, -46.1585, -133.148, 0.23 ) }
    dend_20 { pt3dadd( 250.264, -37.218, -136.211, 0.23 ) }
    dend_20 { pt3dadd( 259.483, -28.0969, -137.328, 0.23 ) }
    dend_20 { pt3dadd( 268.915, -19.1213, -136.68, 0.23 ) }
    dend_20 { pt3dadd( 278.288, -10.0807, -136.95, 0.23 ) }
    dend_20 { pt3dadd( 286.415, 0.0483222, -138.135, 0.23 ) }
    dend_20 { pt3dadd( 294.148, 10.2613, -140.505, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -71.9943, -40.0585, -28.6817, 0.23 ) }
    dend_19 { pt3dadd( -75.9815, -40.7537, -29.3234, 0.23 ) }
    dend_19 { pt3dadd( -79.2427, -40.9598, -29.6492, 0.23 ) }
    dend_19 { pt3dadd( -82.0138, -41.135, -29.926, 0.23 ) }
    dend_19 { pt3dadd( -84.0741, -41.2652, -30.1318, 0.23 ) }
    dend_19 { pt3dadd( -86.3606, -41.4097, -30.3602, 0.23 ) }
    dend_19 { pt3dadd( -87.4775, -41.4803, -30.4717, 0.23 ) }
    dend_19 { pt3dadd( -90.5478, -41.3634, -30.7233, 0.23 ) }
    dend_19 { pt3dadd( -102.934, -40.3927, -33.2245, 0.23 ) }
    dend_19 { pt3dadd( -115.506, -40.5892, -34.8167, 0.23 ) }
    dend_19 { pt3dadd( -127.723, -43.0153, -37.2347, 0.23 ) }
    dend_19 { pt3dadd( -139.845, -44.7788, -40.5171, 0.23 ) }
    dend_19 { pt3dadd( -152.238, -46.1677, -42.805, 0.23 ) }
    dend_19 { pt3dadd( -164.461, -49.5373, -43.467, 0.23 ) }
    dend_19 { pt3dadd( -176.253, -54.239, -44.2073, 0.23 ) }
    dend_19 { pt3dadd( -188.65, -56.8608, -43.6242, 0.23 ) }
    dend_19 { pt3dadd( -200.942, -59.8828, -42.7447, 0.23 ) }
    dend_19 { pt3dadd( -212.693, -64.2441, -40.6711, 0.23 ) }
    dend_19 { pt3dadd( -223.429, -69.8095, -36.7295, 0.23 ) }
    dend_19 { pt3dadd( -233.813, -76.738, -34.118, 0.23 ) }
    dend_19 { pt3dadd( -243.735, -83.2073, -29.4385, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -61.2135, -43.4042, -14.7232, 0.91 ) }
    dend_7 { pt3dadd( -65.6665, -46.8341, -13.7786, 0.91 ) }
    dend_7 { pt3dadd( -68.3705, -48.9214, -13.2274, 0.91 ) }
    dend_7 { pt3dadd( -70.3405, -50.4412, -12.7539, 1.36 ) }
    dend_7 { pt3dadd( -73.5026, -52.859, -11.9609, 2.05 ) }
    dend_7 { pt3dadd( -76.2378, -54.9736, -11.2957, 1.36 ) }
    dend_7 { pt3dadd( -77.0172, -55.5696, -11.0882, 1.36 ) }
    dend_7 { pt3dadd( -79.3672, -57.3508, -10.2351, 0.68 ) }
    dend_7 { pt3dadd( -82.0511, -59.2816, -9.18882, 1.36 ) }
    dend_7 { pt3dadd( -83.8129, -60.4725, -8.55489, 2.5 ) }
    dend_7 { pt3dadd( -87.9517, -63.1437, -6.99119, 1.59 ) }
    dend_7 { pt3dadd( -91.8243, -65.4716, -5.50174, 2.05 ) }
    dend_7 { pt3dadd( -95.5738, -67.665, -4.06709, 2.05 ) }
    dend_7 { pt3dadd( -99.4882, -69.856, -2.5983, 3.86 ) }
    dend_7 { pt3dadd( -103.846, -72.1747, -1.05904, 2.73 ) }
    dend_7 { pt3dadd( -108.786, -74.6909, 0.600646, 1.59 ) }
    dend_7 { pt3dadd( -112.6, -76.579, 1.79776, 0.68 ) }
    dend_7 { pt3dadd( -114.115, -77.3386, 2.19535, 0.68 ) }
    dend_7 { pt3dadd( -118.288, -79.4433, 3.08106, 1.82 ) }
    dend_7 { pt3dadd( -119.854, -80.1819, 3.35137, 1.82 ) }
    dend_7 { pt3dadd( -122.796, -81.4683, 3.61344, 0.23 ) }
    dend_7 { pt3dadd( -123.886, -81.9216, 3.59046, 0.23 ) }
    dend_7 { pt3dadd( -126.845, -83.143, 3.38908, 1.59 ) }
    dend_7 { pt3dadd( -129.536, -84.2246, 3.0186, 1.59 ) }
    dend_7 { pt3dadd( -132.493, -85.3247, 2.50197, 2.73 ) }
    dend_7 { pt3dadd( -135.155, -86.206, 2.15802, 2.73 ) }
    dend_7 { pt3dadd( -137.522, -86.91, 2.06237, 2.73 ) }
    dend_7 { pt3dadd( -140.628, -87.7483, 2.21699, 1.59 ) }
    dend_7 { pt3dadd( -143.754, -88.531, 2.65996, 2.5 ) }
    dend_7 { pt3dadd( -149.003, -89.7995, 3.7652, 0.68 ) }
    dend_7 { pt3dadd( -153.531, -90.897, 4.95883, 0.68 ) }
    dend_7 { pt3dadd( -157.718, -91.8727, 6.21998, 1.14 ) }
    dend_7 { pt3dadd( -161.269, -92.6241, 7.4494, 2.27 ) }
    dend_7 { pt3dadd( -165.232, -93.3776, 9.0713, 2.27 ) }
    dend_7 { pt3dadd( -167.186, -93.7342, 10.0426, 2.27 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 87/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -61.2135, -43.4042, -14.7232, 0.91 ) }
    dend_4 { pt3dadd( -62.4032, -47.99, -14.6233, 0.91 ) }
    dend_4 { pt3dadd( -63.1066, -50.6474, -14.5785, 0.45 ) }
    dend_4 { pt3dadd( -63.7221, -53.0601, -14.5582, 1.14 ) }
    dend_4 { pt3dadd( -64.2091, -54.955, -14.5706, 0.23 ) }
    dend_4 { pt3dadd( -64.6259, -56.4941, -14.5886, 0.23 ) }
    dend_4 { pt3dadd( -64.9703, -57.7129, -14.6263, 1.14 ) }
    dend_4 { pt3dadd( -65.6972, -60.179, -14.7635, 0.45 ) }
    dend_4 { pt3dadd( -66.1611, -61.8356, -14.9288, 0.68 ) }
    dend_4 { pt3dadd( -66.7872, -64.1872, -15.3044, 0.23 ) }
    dend_4 { pt3dadd( -67.1034, -65.5171, -15.5508, 0.91 ) }
    dend_4 { pt3dadd( -67.4562, -67.3619, -15.8977, 0.23 ) }
    dend_4 { pt3dadd( -67.8444, -69.9411, -16.4111, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_4 { pt3dadd( -68.1763, -72.6993, -16.9801, 0.23 ) }
    dend_4 { pt3dadd( -68.4348, -75.38, -17.4763, 0.23 ) }
    dend_4 { pt3dadd( -68.5386, -76.7371, -17.6988, 1.14 ) }
    dend_4 { pt3dadd( -68.6604, -78.5859, -17.9112, 0.23 ) }
    dend_4 { pt3dadd( -68.7893, -80.7898, -18.107, 0.23 ) }
    dend_4 { pt3dadd( -68.8797, -82.2702, -18.2049, 1.14 ) }
    dend_4 { pt3dadd( -69.1615, -85.5646, -18.308, 0.45 ) }
    dend_4 { pt3dadd( -69.3701, -87.6779, -18.3048, 0.45 ) }
    dend_4 { pt3dadd( -69.8437, -91.7441, -18.2999, 1.82 ) }
    dend_4 { pt3dadd( -72.353, -100.825, -19.6284, 1.82 ) }
    dend_4 { pt3dadd( -75.0064, -109.583, -22.1473, 1.82 ) }
    dend_4 { pt3dadd( -78.9065, -117.771, -24.8692, 1.82 ) }
    dend_4 { pt3dadd( -81.9784, -126.569, -26.7109, 1.82 ) }
    dend_4 { pt3dadd( -83.8355, -135.865, -27.6589, 1.82 ) }
    dend_4 { pt3dadd( -85.0027, -145.332, -27.8086, 1.82 ) }
    dend_4 { pt3dadd( -86.1918, -154.799, -27.8595, 1.82 ) }
    dend_4 { pt3dadd( -87.2242, -164.269, -28.3167, 1.82 ) }
    dend_4 { pt3dadd( -86.975, -173.632, -30.0079, 1.82 ) }
    // Section: dend_106, id: dend_106, parent: dend_96 (entry count 18/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 127.996, 34.4931, -2.78933, 0.23 ) }
    dend_106 { pt3dadd( 130.188, 33.9319, -4.36105, 0.23 ) }
    dend_106 { pt3dadd( 131.092, 33.7292, -4.95713, 0.68 ) }
    dend_106 { pt3dadd( 132.563, 33.3993, -5.92721, 0.23 ) }
    dend_106 { pt3dadd( 133.241, 33.2474, -6.37389, 0.68 ) }
    dend_106 { pt3dadd( 134.611, 32.9403, -7.27707, 0.23 ) }
    dend_106 { pt3dadd( 134.996, 32.8538, -7.53138, 0.91 ) }
    dend_106 { pt3dadd( 135.854, 32.801, -8.01174, 0.23 ) }
    dend_106 { pt3dadd( 143.236, 30.7091, -12.0022, 0.23 ) }
    dend_106 { pt3dadd( 150.852, 30.0262, -16.0212, 0.23 ) }
    dend_106 { pt3dadd( 158.844, 28.7656, -19.0515, 0.23 ) }
    dend_106 { pt3dadd( 167.267, 27.9543, -20.7902, 0.23 ) }
    dend_106 { pt3dadd( 175.805, 26.7431, -21.2932, 0.23 ) }
    dend_106 { pt3dadd( 184.25, 25.669, -22.7646, 0.23 ) }
    dend_106 { pt3dadd( 192.54, 26.2597, -25.1202, 0.23 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 33/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 127.996, 34.4931, -2.78933, 0.68 ) }
    dend_97 { pt3dadd( 129.087, 35.0878, -2.78935, 0.68 ) }
    dend_97 { pt3dadd( 130.976, 35.9321, -2.8182, 2.05 ) }
    dend_97 { pt3dadd( 132.16, 36.4752, -2.76608, 2.05 ) }
    dend_97 { pt3dadd( 134.195, 37.5009, -2.5969, 0.68 ) }
    dend_97 { pt3dadd( 135.472, 38.1761, -2.4663, 1.36 ) }
    dend_97 { pt3dadd( 137.742, 39.3798, -2.21975, 2.27 ) }
    dend_97 { pt3dadd( 139.594, 40.3585, -1.99418, 0.68 ) }
    dend_97 { pt3dadd( 141.569, 41.3052, -1.7376, 0.68 ) }
    dend_97 { pt3dadd( 142.844, 41.8831, -1.57511, 1.59 ) }
    dend_97 { pt3dadd( 143.867, 42.3454, -1.43592, 2.73 ) }
    dend_97 { pt3dadd( 145.573, 43.1629, -1.21436, 2.5 ) }
    dend_97 { pt3dadd( 147.434, 44.1056, -0.999057, 1.14 ) }
    dend_97 { pt3dadd( 150.041, 45.3379, -0.704335, 0.68 ) }
    dend_97 { pt3dadd( 152.276, 46.2497, -0.562418, 1.14 ) }
    dend_97 { pt3dadd( 154.236, 46.9707, -0.438882, 0.45 ) }
    // Section: dend_95, id: dend_95, parent: dend_87 (entry count 49/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 109.351, 31.9669, 8.81582, 0.23 ) }
    dend_95 { pt3dadd( 111.466, 32.9457, 10.6948, 0.23 ) }
    dend_95 { pt3dadd( 113.471, 34.0877, 12.2728, 0.68 ) }
    dend_95 { pt3dadd( 114.809, 35.0617, 13.2747, 0.68 ) }
    dend_95 { pt3dadd( 116.223, 36.2686, 14.2998, 1.59 ) }
    dend_95 { pt3dadd( 117.372, 37.3742, 15.0563, 0.45 ) }
    dend_95 { pt3dadd( 118.635, 38.6019, 15.8733, 0.45 ) }
    dend_95 { pt3dadd( 119.52, 39.5133, 16.3633, 0.45 ) }
    dend_95 { pt3dadd( 121.187, 41.1065, 17.1348, 1.14 ) }
    dend_95 { pt3dadd( 123.021, 42.6608, 17.9349, 0.23 ) }
    dend_95 { pt3dadd( 124.612, 43.8858, 18.6252, 1.36 ) }
    dend_95 { pt3dadd( 126.034, 44.8266, 19.2562, 0.23 ) }
    dend_95 { pt3dadd( 127.244, 45.4462, 19.8372, 0.68 ) }
    dend_95 { pt3dadd( 128.671, 46.1145, 20.6059, 0.23 ) }
    dend_95 { pt3dadd( 130.048, 46.678, 21.3704, 1.36 ) }
    dend_95 { pt3dadd( 132.604, 47.6506, 22.8113, 0.23 ) }
    dend_95 { pt3dadd( 133.861, 48.1005, 23.5342, 1.14 ) }
    dend_95 { pt3dadd( 137.16, 49.3729, 25.4509, 0.23 ) }
    dend_95 { pt3dadd( 138.478, 49.9567, 26.3258, 0.23 ) }
    dend_95 { pt3dadd( 139.226, 50.34, 26.8447, 0.23 ) }
    dend_95 { pt3dadd( 140.644, 51.2251, 27.8768, 2.27 ) }
    dend_95 { pt3dadd( 142.125, 52.3144, 28.9529, 1.36 ) }
    dend_95 { pt3dadd( 144.454, 54.1915, 30.7078, 0.23 ) }
    dend_95 { pt3dadd( 146.465, 55.9255, 32.1897, 0.23 ) }
    dend_95 { pt3dadd( 147.959, 57.2364, 33.2121, 0.68 ) }
    dend_95 { pt3dadd( 150.452, 59.5196, 34.8438, 0.23 ) }
    dend_95 { pt3dadd( 151.731, 60.7866, 35.654, 0.23 ) }
    dend_95 { pt3dadd( 152.826, 61.9293, 36.2555, 1.14 ) }
    dend_95 { pt3dadd( 154.565, 63.7326, 37.0292, 0.23 ) }
    dend_95 { pt3dadd( 155.948, 65.0504, 37.5088, 2.27 ) }
    dend_95 { pt3dadd( 157.12, 66.0834, 37.9076, 2.27 ) }
    dend_95 { pt3dadd( 159.546, 68.0965, 38.6105, 0.23 ) }
    dend_95 { pt3dadd( 160.736, 69.0403, 38.9653, 0.91 ) }
    dend_95 { pt3dadd( 162.676, 70.5238, 39.4967, 0.23 ) }
    dend_95 { pt3dadd( 164.429, 71.7973, 40.0114, 1.36 ) }
    dend_95 { pt3dadd( 166.814, 73.4091, 40.7499, 0.23 ) }
    dend_95 { pt3dadd( 168.39, 74.3961, 41.2797, 1.14 ) }
    dend_95 { pt3dadd( 170.914, 75.9629, 42.2535, 0.23 ) }
    dend_95 { pt3dadd( 172.794, 77.2845, 43.3416, 1.36 ) }
    dend_95 { pt3dadd( 174.502, 78.6003, 44.6223, 0.23 ) }
    dend_95 { pt3dadd( 175.692, 79.6169, 45.8716, 1.36 ) }
    dend_95 { pt3dadd( 177.464, 81.3655, 48.4596, 0.23 ) }
    dend_95 { pt3dadd( 178.866, 83.0695, 51.2593, 1.82 ) }
    dend_95 { pt3dadd( 180.77, 86.1449, 56.3187, 0.23 ) }
    dend_95 { pt3dadd( 181.424, 87.4163, 58.4122, 2.05 ) }
    dend_95 { pt3dadd( 182.385, 89.5103, 61.8421, 0.68 ) }
    dend_95 { pt3dadd( 183.647, 92.4474, 66.5366, 1.14 ) }
    dend_95 { pt3dadd( 184.716, 94.7189, 69.9996, 1.36 ) }
    dend_95 { pt3dadd( 185.444, 96.0759, 71.9673, 0.23 ) }
    dend_95 { pt3dadd( 186.115, 97.4001, 73.6573, 0.23 ) }
    dend_95 { pt3dadd( 186.663, 98.7184, 75.2062, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_95 { pt3dadd( 187.302, 100.619, 77.0983, 0.91 ) }
    dend_95 { pt3dadd( 187.703, 102.526, 78.892, 0.91 ) }
    dend_95 { pt3dadd( 187.995, 105.38, 81.5376, 0.23 ) }
    dend_95 { pt3dadd( 188.0, 107.588, 83.6077, 0.23 ) }
    dend_95 { pt3dadd( 187.795, 109.487, 85.292, 1.82 ) }
    dend_95 { pt3dadd( 187.492, 111.243, 86.8061, 0.45 ) }
    dend_95 { pt3dadd( 187.077, 113.387, 88.6952, 1.36 ) }
    dend_95 { pt3dadd( 186.73, 115.405, 90.6668, 0.23 ) }
    dend_95 { pt3dadd( 186.653, 116.454, 91.6652, 1.36 ) }
    dend_95 { pt3dadd( 186.635, 117.981, 93.1649, 0.23 ) }
    dend_95 { pt3dadd( 186.668, 119.958, 95.0976, 1.36 ) }
    dend_95 { pt3dadd( 186.725, 122.709, 97.9482, 0.23 ) }
    dend_95 { pt3dadd( 186.644, 125.122, 100.537, 2.05 ) }
    dend_95 { pt3dadd( 186.445, 127.345, 103.132, 0.68 ) }
    dend_95 { pt3dadd( 186.091, 130.454, 106.816, 1.59 ) }
    dend_95 { pt3dadd( 185.939, 131.458, 108.024, 1.59 ) }
    dend_95 { pt3dadd( 185.4, 134.168, 111.275, 0.23 ) }
    dend_95 { pt3dadd( 184.978, 135.707, 113.14, 0.23 ) }
    dend_95 { pt3dadd( 184.002, 138.545, 116.597, 0.23 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 19/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 109.351, 31.9669, 8.81582, 0.23 ) }
    dend_88 { pt3dadd( 108.685, 35.4172, 8.32724, 0.23 ) }
    dend_88 { pt3dadd( 108.375, 37.1344, 8.06216, 1.14 ) }
    dend_88 { pt3dadd( 108.086, 38.868, 7.79522, 0.23 ) }
    dend_88 { pt3dadd( 107.583, 41.7106, 7.3609, 1.14 ) }
    dend_88 { pt3dadd( 107.14, 44.0795, 7.00063, 0.23 ) }
    dend_88 { pt3dadd( 106.597, 46.8682, 6.57837, 0.68 ) }
    dend_88 { pt3dadd( 105.965, 50.3374, 6.019, 0.23 ) }
    dend_88 { pt3dadd( 105.735, 51.7012, 5.80447, 2.27 ) }
    dend_88 { pt3dadd( 105.135, 55.801, 5.2358, 0.91 ) }
    dend_88 { pt3dadd( 104.981, 56.9608, 5.09632, 0.91 ) }
    dend_88 { pt3dadd( 104.771, 58.7664, 4.90531, 1.59 ) }
    dend_88 { pt3dadd( 104.486, 62.2329, 4.6493, 0.23 ) }
    dend_88 { pt3dadd( 104.424, 63.7226, 4.54081, 0.23 ) }
    dend_88 { pt3dadd( 104.421, 66.3751, 4.35759, 2.05 ) }
    dend_88 { pt3dadd( 104.506, 67.7528, 4.18551, 2.05 ) }
    dend_88 { pt3dadd( 104.799, 70.4877, 3.69525, 0.23 ) }
    dend_88 { pt3dadd( 105.12, 72.4597, 3.1732, 0.91 ) }
    dend_88 { pt3dadd( 105.487, 73.9546, 2.60401, 0.68 ) }
    dend_88 { pt3dadd( 106.293, 76.4177, 1.44253, 0.23 ) }
    dend_88 { pt3dadd( 107.71, 79.5614, -0.331565, 1.14 ) }
    dend_88 { pt3dadd( 108.869, 81.4389, -1.62317, 0.23 ) }
    dend_88 { pt3dadd( 110.359, 83.1446, -3.06027, 0.23 ) }
    dend_88 { pt3dadd( 112.416, 84.925, -4.76709, 1.36 ) }
    dend_88 { pt3dadd( 113.247, 85.4807, -5.32029, 1.82 ) }
    dend_88 { pt3dadd( 114.594, 86.137, -6.04649, 0.45 ) }
    dend_88 { pt3dadd( 117.187, 87.2093, -7.08905, 0.91 ) }
    dend_88 { pt3dadd( 118.884, 87.8381, -7.6706, 0.23 ) }
    dend_88 { pt3dadd( 120.865, 88.5697, -8.20165, 0.91 ) }
    dend_88 { pt3dadd( 122.421, 89.1559, -8.53992, 0.23 ) }
    dend_88 { pt3dadd( 124.757, 90.1424, -8.98675, 1.36 ) }
    dend_88 { pt3dadd( 126.678, 91.1019, -9.4177, 0.23 ) }
    dend_88 { pt3dadd( 127.975, 91.8331, -9.7138, 1.36 ) }
    dend_88 { pt3dadd( 129.466, 92.7103, -10.1348, 1.82 ) }
    dend_88 { pt3dadd( 131.294, 93.818, -10.6455, 1.82 ) }
    dend_88 { pt3dadd( 133.724, 95.4406, -11.336, 0.45 ) }
    dend_88 { pt3dadd( 136.606, 97.7095, -12.1931, 1.14 ) }
    dend_88 { pt3dadd( 139.472, 100.507, -13.1582, 0.23 ) }
    dend_88 { pt3dadd( 141.5, 103.145, -13.8987, 1.14 ) }
    dend_88 { pt3dadd( 142.478, 105.075, -14.3177, 2.05 ) }
    dend_88 { pt3dadd( 142.948, 106.823, -14.5896, 2.05 ) }
    dend_88 { pt3dadd( 143.183, 109.473, -14.9271, 2.05 ) }
    dend_88 { pt3dadd( 143.106, 112.361, -15.2058, 0.91 ) }
    dend_88 { pt3dadd( 142.866, 114.681, -15.5374, 1.59 ) }
    dend_88 { pt3dadd( 142.56, 117.3, -16.0079, 0.23 ) }
    dend_88 { pt3dadd( 142.325, 119.714, -16.5635, 1.36 ) }
    dend_88 { pt3dadd( 142.099, 122.493, -17.2384, 0.23 ) }
    dend_88 { pt3dadd( 142.014, 123.54, -17.4999, 0.91 ) }
    dend_88 { pt3dadd( 141.716, 126.735, -18.3104, 0.23 ) }
    dend_88 { pt3dadd( 141.559, 128.097, -18.6736, 1.36 ) }
    dend_88 { pt3dadd( 141.0, 132.147, -19.7559, 0.23 ) }
    dend_88 { pt3dadd( 140.357, 135.651, -20.5783, 2.27 ) }
    dend_88 { pt3dadd( 139.863, 137.923, -20.9971, 0.23 ) }
    dend_88 { pt3dadd( 139.44, 139.677, -21.2707, 1.14 ) }
    dend_88 { pt3dadd( 139.106, 141.034, -21.4327, 0.23 ) }
    dend_88 { pt3dadd( 138.772, 142.513, -21.6073, 1.14 ) }
    dend_88 { pt3dadd( 138.385, 145.157, -21.9104, 0.23 ) }
    dend_88 { pt3dadd( 138.273, 147.622, -22.2216, 0.91 ) }
    dend_88 { pt3dadd( 138.375, 149.369, -22.4638, 0.23 ) }
    dend_88 { pt3dadd( 138.603, 151.138, -22.8291, 2.05 ) }
    dend_88 { pt3dadd( 138.981, 153.5, -23.3856, 0.68 ) }
    dend_88 { pt3dadd( 139.386, 155.569, -23.9395, 0.68 ) }
    dend_88 { pt3dadd( 139.927, 158.126, -24.7241, 1.59 ) }
    dend_88 { pt3dadd( 140.515, 160.814, -25.6376, 0.23 ) }
    dend_88 { pt3dadd( 141.353, 164.203, -26.9507, 1.36 ) }
    dend_88 { pt3dadd( 141.88, 166.058, -27.7262, 0.23 ) }
    dend_88 { pt3dadd( 142.725, 168.617, -28.813, 1.36 ) }
    dend_88 { pt3dadd( 143.591, 171.057, -29.8092, 0.23 ) }
    dend_88 { pt3dadd( 144.537, 173.745, -30.7835, 1.36 ) }
    dend_88 { pt3dadd( 145.752, 177.251, -31.9362, 0.23 ) }
    dend_88 { pt3dadd( 146.364, 179.045, -32.4494, 0.91 ) }
    dend_88 { pt3dadd( 147.488, 182.485, -33.4107, 0.23 ) }
    dend_88 { pt3dadd( 148.296, 185.185, -34.1045, 0.91 ) }
    dend_88 { pt3dadd( 149.506, 189.919, -35.1629, 0.23 ) }
    dend_88 { pt3dadd( 149.851, 191.848, -35.5331, 0.23 ) }
    dend_88 { pt3dadd( 150.059, 193.559, -35.8063, 1.14 ) }
    dend_88 { pt3dadd( 150.199, 195.613, -36.1442, 0.23 ) }
    dend_88 { pt3dadd( 150.22, 196.785, -36.3482, 1.36 ) }
    dend_88 { pt3dadd( 150.205, 198.376, -36.6489, 1.36 ) }
    dend_88 { pt3dadd( 150.265, 201.41, -37.3261, 0.23 ) }
    dend_88 { pt3dadd( 153.747, 212.802, -39.8828, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_88 { pt3dadd( 156.367, 224.054, -43.7474, 0.23 ) }
    dend_88 { pt3dadd( 157.915, 235.372, -47.9893, 0.23 ) }
    dend_88 { pt3dadd( 161.62, 245.26, -53.9764, 0.23 ) }
    dend_88 { pt3dadd( 165.986, 256.125, -57.2788, 0.23 ) }
    dend_88 { pt3dadd( 169.548, 267.126, -61.0836, 0.23 ) }
    dend_88 { pt3dadd( 171.792, 278.03, -66.0077, 0.23 ) }
    dend_88 { pt3dadd( 175.603, 288.851, -70.06, 0.23 ) }
    dend_88 { pt3dadd( 181.306, 299.343, -72.2799, 0.23 ) }
    dend_88 { pt3dadd( 187.667, 309.077, -75.71, 0.23 ) }
    dend_88 { pt3dadd( 194.544, 319.004, -76.7121, 0.23 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 10/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 91.8866, -121.507, 89.2998, 0.91 ) }
    dend_79 { pt3dadd( 92.1097, -122.985, 90.9028, 0.91 ) }
    dend_79 { pt3dadd( 92.286, -124.042, 92.0537, 1.36 ) }
    dend_79 { pt3dadd( 92.4086, -124.745, 92.8012, 0.23 ) }
    dend_79 { pt3dadd( 92.5734, -125.559, 93.6493, 1.14 ) }
    dend_79 { pt3dadd( 92.9107, -126.901, 95.0132, 0.23 ) }
    dend_79 { pt3dadd( 93.4041, -128.672, 96.7637, 1.82 ) }
    dend_79 { pt3dadd( 94.0491, -130.721, 98.6405, 0.23 ) }
    dend_79 { pt3dadd( 94.3581, -131.461, 99.2896, 0.91 ) }
    dend_79 { pt3dadd( 94.5889, -131.894, 99.675, 0.91 ) }
    dend_79 { pt3dadd( 95.1, -132.665, 100.37, 0.23 ) }
    dend_79 { pt3dadd( 95.5212, -133.15, 100.834, 0.23 ) }
    dend_79 { pt3dadd( 95.9522, -133.491, 101.207, 0.23 ) }
    dend_79 { pt3dadd( 97.2234, -134.233, 102.025, 0.91 ) }
    dend_79 { pt3dadd( 97.9454, -134.597, 102.44, 0.23 ) }
    dend_79 { pt3dadd( 98.7888, -134.995, 102.885, 1.14 ) }
    dend_79 { pt3dadd( 100.552, -135.71, 103.65, 0.23 ) }
    dend_79 { pt3dadd( 101.127, -135.922, 103.849, 0.91 ) }
    dend_79 { pt3dadd( 102.847, -136.528, 104.291, 0.23 ) }
    dend_79 { pt3dadd( 103.725, -136.852, 104.409, 0.23 ) }
    dend_79 { pt3dadd( 104.698, -137.23, 104.435, 0.91 ) }
    dend_79 { pt3dadd( 106.011, -137.806, 104.393, 0.23 ) }
    dend_79 { pt3dadd( 106.528, -138.066, 104.362, 1.14 ) }
    dend_79 { pt3dadd( 107.607, -138.684, 104.34, 0.23 ) }
    dend_79 { pt3dadd( 108.783, -139.428, 104.359, 1.14 ) }
    dend_79 { pt3dadd( 110.058, -140.301, 104.436, 0.23 ) }
    dend_79 { pt3dadd( 111.812, -141.558, 104.615, 1.82 ) }
    dend_79 { pt3dadd( 113.087, -142.476, 104.849, 0.23 ) }
    dend_79 { pt3dadd( 114.351, -143.351, 105.149, 0.23 ) }
    dend_79 { pt3dadd( 115.23, -143.94, 105.413, 1.14 ) }
    dend_79 { pt3dadd( 116.29, -144.638, 105.794, 0.23 ) }
    dend_79 { pt3dadd( 117.706, -145.58, 106.358, 1.59 ) }
    dend_79 { pt3dadd( 119.31, -146.676, 106.972, 0.23 ) }
    dend_79 { pt3dadd( 120.755, -147.725, 107.503, 1.36 ) }
    dend_79 { pt3dadd( 121.881, -148.59, 107.899, 0.23 ) }
    dend_79 { pt3dadd( 122.791, -149.371, 108.202, 0.91 ) }
    dend_79 { pt3dadd( 123.477, -150.049, 108.428, 0.23 ) }
    dend_79 { pt3dadd( 124.866, -151.626, 108.88, 1.82 ) }
    dend_79 { pt3dadd( 126.118, -153.223, 109.27, 0.23 ) }
    dend_79 { pt3dadd( 126.619, -153.89, 109.425, 0.91 ) }
    dend_79 { pt3dadd( 127.681, -155.343, 109.765, 0.23 ) }
    dend_79 { pt3dadd( 128.58, -156.583, 110.095, 0.91 ) }
    dend_79 { pt3dadd( 129.471, -157.827, 110.481, 0.23 ) }
    dend_79 { pt3dadd( 130.343, -159.081, 110.937, 1.36 ) }
    dend_79 { pt3dadd( 131.289, -160.479, 111.51, 0.23 ) }
    dend_79 { pt3dadd( 132.163, -161.742, 112.131, 1.14 ) }
    dend_79 { pt3dadd( 133.364, -163.454, 113.117, 0.23 ) }
    dend_79 { pt3dadd( 134.248, -164.762, 113.866, 1.36 ) }
    dend_79 { pt3dadd( 134.45, -165.082, 114.049, 1.36 ) }
    dend_79 { pt3dadd( 135.482, -166.666, 114.989, 0.23 ) }
    dend_79 { pt3dadd( 136.492, -168.227, 115.932, 2.95 ) }
    dend_79 { pt3dadd( 137.644, -169.94, 116.988, 0.23 ) }
    dend_79 { pt3dadd( 138.7, -171.368, 117.923, 0.68 ) }
    dend_79 { pt3dadd( 139.572, -172.455, 118.649, 0.23 ) }
    dend_79 { pt3dadd( 140.767, -173.781, 119.548, 0.23 ) }
    dend_79 { pt3dadd( 141.863, -174.85, 120.26, 2.27 ) }
    dend_79 { pt3dadd( 143.294, -176.06, 121.072, 0.23 ) }
    dend_79 { pt3dadd( 144.816, -177.158, 121.866, 0.91 ) }
    dend_79 { pt3dadd( 145.768, -177.755, 122.354, 0.91 ) }
    dend_79 { pt3dadd( 147.648, -178.853, 123.239, 0.23 ) }
    dend_79 { pt3dadd( 149.043, -179.659, 123.889, 1.59 ) }
    dend_79 { pt3dadd( 150.211, -180.311, 124.425, 0.23 ) }
    dend_79 { pt3dadd( 151.383, -180.974, 124.967, 0.91 ) }
    dend_79 { pt3dadd( 152.894, -181.868, 125.678, 0.23 ) }
    dend_79 { pt3dadd( 153.558, -182.27, 126.021, 1.14 ) }
    dend_79 { pt3dadd( 155.229, -183.349, 127.005, 0.23 ) }
    dend_79 { pt3dadd( 155.87, -183.792, 127.459, 0.23 ) }
    dend_79 { pt3dadd( 156.982, -184.603, 128.371, 1.82 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 78/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 91.8866, -121.507, 89.2998, 0.23 ) }
    dend_78 { pt3dadd( 92.6529, -123.807, 90.3469, 0.23 ) }
    dend_78 { pt3dadd( 92.9242, -124.623, 90.7184, 0.68 ) }
    dend_78 { pt3dadd( 93.3424, -125.906, 91.3018, 0.23 ) }
    dend_78 { pt3dadd( 93.5577, -126.585, 91.6099, 0.91 ) }
    dend_78 { pt3dadd( 93.8194, -127.392, 91.9409, 0.23 ) }
    dend_78 { pt3dadd( 93.9476, -127.841, 92.093, 1.14 ) }
    dend_78 { pt3dadd( 94.0707, -128.389, 92.2375, 0.23 ) }
    dend_78 { pt3dadd( 94.2979, -129.541, 92.493, 0.91 ) }
    dend_78 { pt3dadd( 94.4185, -130.228, 92.6322, 0.23 ) }
    dend_78 { pt3dadd( 94.7409, -132.162, 92.9752, 1.36 ) }
    dend_78 { pt3dadd( 95.0201, -134.205, 93.2615, 1.36 ) }
    dend_78 { pt3dadd( 95.0709, -134.897, 93.3203, 0.23 ) }
    dend_78 { pt3dadd( 95.1085, -135.582, 93.368, 0.91 ) }
    dend_78 { pt3dadd( 95.1689, -137.268, 93.4545, 0.23 ) }
    dend_78 { pt3dadd( 95.2003, -139.367, 93.541, 0.91 ) }
    dend_78 { pt3dadd( 95.1578, -141.493, 93.6231, 0.23 ) }
    dend_78 { pt3dadd( 95.1203, -143.832, 93.6928, 0.68 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 96/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 135.129, -146.25, 68.4098, 0.23 ) }
    dend_72 { pt3dadd( 136.169, -150.716, 68.3807, 0.23 ) }
    dend_72 { pt3dadd( 136.96, -154.116, 68.3585, 1.36 ) }
    dend_72 { pt3dadd( 137.608, -156.898, 68.3404, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_72 { pt3dadd( 138.676, -161.486, 68.3104, 2.73 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 1/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 135.129, -146.25, 68.4098, 0.23 ) }
    dend_69 { pt3dadd( 138.08, -146.473, 68.1454, 0.23 ) }
    dend_69 { pt3dadd( 139.735, -146.645, 67.9636, 0.23 ) }
    dend_69 { pt3dadd( 141.491, -146.805, 67.5948, 0.91 ) }
    dend_69 { pt3dadd( 142.82, -146.91, 67.2194, 0.23 ) }
    dend_69 { pt3dadd( 143.893, -146.977, 66.8985, 1.36 ) }
    dend_69 { pt3dadd( 146.113, -147.107, 66.2466, 0.23 ) }
    dend_69 { pt3dadd( 147.677, -147.216, 65.7923, 0.91 ) }
    dend_69 { pt3dadd( 150.46, -147.542, 64.9719, 0.23 ) }
    dend_69 { pt3dadd( 153.177, -147.977, 64.2076, 0.68 ) }
    dend_69 { pt3dadd( 154.492, -148.216, 63.8802, 0.23 ) }
    dend_69 { pt3dadd( 155.815, -148.511, 63.5879, 0.91 ) }
    dend_69 { pt3dadd( 157.158, -148.852, 63.3826, 0.91 ) }
    dend_69 { pt3dadd( 159.02, -149.447, 63.323, 0.23 ) }
    dend_69 { pt3dadd( 160.337, -149.939, 63.4379, 0.91 ) }
    dend_69 { pt3dadd( 161.205, -150.29, 63.566, 0.91 ) }
    dend_69 { pt3dadd( 162.891, -150.95, 63.8349, 0.23 ) }
    dend_69 { pt3dadd( 164.972, -151.615, 64.2639, 0.23 ) }
    dend_69 { pt3dadd( 166.755, -152.098, 64.6634, 0.91 ) }
    dend_69 { pt3dadd( 167.253, -152.206, 64.7896, 1.14 ) }
    dend_69 { pt3dadd( 168.147, -152.371, 65.0414, 1.14 ) }
    dend_69 { pt3dadd( 169.859, -152.673, 65.595, 1.14 ) }
    dend_69 { pt3dadd( 171.671, -152.876, 66.3051, 0.45 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 95.5761, -88.504, -11.2337, 0.45 ) }
    dend_59 { pt3dadd( 92.5611, -92.307, -8.87665, 0.45 ) }
    dend_59 { pt3dadd( 88.7518, -96.0231, -6.54776, 0.45 ) }
    dend_59 { pt3dadd( 87.6205, -96.8954, -5.9666, 0.45 ) }
    dend_59 { pt3dadd( 86.1495, -97.8404, -5.21961, 0.45 ) }
    dend_59 { pt3dadd( 83.4217, -99.2474, -3.79927, 0.45 ) }
    dend_59 { pt3dadd( 81.445, -100.297, -2.4596, 1.14 ) }
    dend_59 { pt3dadd( 79.1061, -101.482, -0.614795, 0.23 ) }
    dend_59 { pt3dadd( 77.8114, -102.369, 0.827781, 0.68 ) }
    dend_59 { pt3dadd( 75.769, -103.862, 3.50928, 0.23 ) }
    dend_59 { pt3dadd( 73.7967, -105.574, 6.84155, 2.05 ) }
    dend_59 { pt3dadd( 71.4937, -108.308, 12.3403, 0.45 ) }
    dend_59 { pt3dadd( 70.4675, -110.238, 16.0232, 0.91 ) }
    dend_59 { pt3dadd( 69.9608, -112.554, 19.7821, 0.23 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 38/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 95.5761, -88.504, -11.2337, 0.23 ) }
    dend_58 { pt3dadd( 97.8671, -89.8998, -11.7996, 0.23 ) }
    dend_58 { pt3dadd( 100.518, -91.4839, -12.1787, 0.23 ) }
    dend_58 { pt3dadd( 103.241, -93.0884, -12.4617, 1.36 ) }
    dend_58 { pt3dadd( 105.476, -94.5278, -12.6218, 0.23 ) }
    dend_58 { pt3dadd( 106.24, -95.0448, -12.6672, 0.91 ) }
    dend_58 { pt3dadd( 109.191, -97.3233, -12.7709, 0.23 ) }
    dend_58 { pt3dadd( 109.964, -97.9857, -12.763, 1.14 ) }
    dend_58 { pt3dadd( 111.453, -99.4256, -12.7431, 0.23 ) }
    dend_58 { pt3dadd( 112.745, -100.792, -12.7967, 2.5 ) }
    dend_58 { pt3dadd( 113.604, -101.788, -12.8814, 2.5 ) }
    dend_58 { pt3dadd( 117.032, -105.852, -13.4306, 0.23 ) }
    dend_58 { pt3dadd( 119.169, -108.51, -13.8977, 0.23 ) }
    dend_58 { pt3dadd( 120.153, -109.75, -14.1576, 2.5 ) }
    dend_58 { pt3dadd( 122.288, -112.462, -14.8796, 0.68 ) }
    dend_58 { pt3dadd( 124.001, -114.538, -15.5527, 0.68 ) }
    dend_58 { pt3dadd( 124.82, -115.513, -15.9166, 1.82 ) }
    dend_58 { pt3dadd( 127.124, -118.141, -17.1393, 0.45 ) }
    dend_58 { pt3dadd( 128.662, -119.851, -18.017, 1.59 ) }
    dend_58 { pt3dadd( 130.442, -121.827, -19.1329, 0.23 ) }
    dend_58 { pt3dadd( 131.148, -122.649, -19.6691, 0.23 ) }
    dend_58 { pt3dadd( 131.951, -123.703, -20.4044, 0.91 ) }
    dend_58 { pt3dadd( 132.573, -124.662, -21.0279, 0.91 ) }
    dend_58 { pt3dadd( 133.329, -125.944, -21.8123, 0.91 ) }
    dend_58 { pt3dadd( 134.501, -128.341, -23.0622, 1.82 ) }
    dend_58 { pt3dadd( 135.325, -130.294, -24.0425, 0.45 ) }
    dend_58 { pt3dadd( 135.825, -131.589, -24.7094, 0.91 ) }
    dend_58 { pt3dadd( 136.411, -133.104, -25.4613, 0.23 ) }
    dend_58 { pt3dadd( 137.217, -134.958, -26.3068, 1.14 ) }
    dend_58 { pt3dadd( 137.957, -136.451, -26.9126, 0.23 ) }
    dend_58 { pt3dadd( 138.649, -137.695, -27.4112, 0.91 ) }
    dend_58 { pt3dadd( 139.745, -139.447, -28.0789, 0.23 ) }
    dend_58 { pt3dadd( 141.073, -141.415, -28.7435, 2.5 ) }
    dend_58 { pt3dadd( 142.878, -143.802, -29.514, 0.23 ) }
    dend_58 { pt3dadd( 144.032, -145.208, -29.9393, 1.14 ) }
    dend_58 { pt3dadd( 145.986, -147.412, -30.6083, 0.23 ) }
    dend_58 { pt3dadd( 146.873, -148.348, -30.8966, 0.23 ) }
    dend_58 { pt3dadd( 149.095, -150.488, -31.5731, 0.91 ) }
    dend_58 { pt3dadd( 151.324, -152.373, -32.2421, 0.23 ) }
    dend_58 { pt3dadd( 152.831, -153.497, -32.6543, 0.23 ) }
    dend_58 { pt3dadd( 154.298, -154.466, -33.0071, 2.5 ) }
    dend_58 { pt3dadd( 157.68, -156.478, -33.7128, 0.23 ) }
    dend_58 { pt3dadd( 158.478, -156.94, -33.8969, 0.91 ) }
    dend_58 { pt3dadd( 161.054, -158.371, -34.5799, 0.23 ) }
    dend_58 { pt3dadd( 162.755, -159.332, -35.0534, 1.36 ) }
    dend_58 { pt3dadd( 164.252, -160.185, -35.4976, 1.36 ) }
    dend_58 { pt3dadd( 166.142, -161.336, -36.1162, 0.23 ) }
    dend_58 { pt3dadd( 167.664, -162.274, -36.8691, 0.91 ) }
    dend_58 { pt3dadd( 169.196, -163.228, -37.9263, 0.23 ) }
    dend_58 { pt3dadd( 170.318, -163.951, -38.9377, 0.68 ) }
    dend_58 { pt3dadd( 171.147, -164.473, -39.7863, 0.23 ) }
    dend_58 { pt3dadd( 172.7, -165.41, -41.4258, 2.27 ) }
    dend_58 { pt3dadd( 176.633, -167.449, -45.3192, 0.23 ) }
    dend_58 { pt3dadd( 179.192, -168.61, -47.6817, 1.36 ) }
    dend_58 { pt3dadd( 180.589, -169.227, -48.8656, 0.23 ) }
    dend_58 { pt3dadd( 181.303, -169.543, -49.4236, 0.91 ) }
    dend_58 { pt3dadd( 183.73, -170.69, -51.1606, 0.23 ) }
    dend_58 { pt3dadd( 186.337, -172.032, -52.8557, 2.5 ) }
    dend_58 { pt3dadd( 187.058, -172.503, -53.2197, 2.5 ) }
    dend_58 { pt3dadd( 191.101, -175.369, -54.9051, 0.23 ) }
    dend_58 { pt3dadd( 192.335, -176.259, -55.3402, 1.59 ) }
    dend_58 { pt3dadd( 195.308, -178.473, -56.2487, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_58 { pt3dadd( 196.903, -179.7, -56.5702, 2.5 ) }
    dend_58 { pt3dadd( 200.533, -182.657, -57.1487, 0.23 ) }
    dend_58 { pt3dadd( 201.854, -183.716, -57.2628, 1.36 ) }
    dend_58 { pt3dadd( 203.446, -184.918, -57.151, 0.23 ) }
    dend_58 { pt3dadd( 205.334, -186.243, -56.8185, 0.23 ) }
    dend_58 { pt3dadd( 208.022, -187.914, -55.9174, 0.91 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 6/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 81.9488, -4.05789, 50.2866, 0.68 ) }
    dend_53 { pt3dadd( 81.5712, -3.47715, 53.3596, 0.68 ) }
    dend_53 { pt3dadd( 81.3868, -3.02565, 55.6562, 0.68 ) }
    dend_53 { pt3dadd( 81.3053, -2.83961, 56.6383, 1.59 ) }
    dend_53 { pt3dadd( 81.111, -2.5881, 58.4605, 0.23 ) }
    dend_53 { pt3dadd( 80.3447, -2.12007, 63.3871, 0.23 ) }
    dend_53 { pt3dadd( 79.5784, -2.18432, 67.6739, 1.36 ) }
    dend_53 { pt3dadd( 79.285, -2.4507, 69.4639, 0.23 ) }
    dend_53 { pt3dadd( 79.0156, -2.8514, 71.2949, 1.14 ) }
    dend_53 { pt3dadd( 78.6672, -3.56113, 74.2307, 0.23 ) }
    dend_53 { pt3dadd( 78.4212, -4.1296, 76.5388, 1.36 ) }
    dend_53 { pt3dadd( 77.9464, -5.482, 82.6723, 0.23 ) }
    dend_53 { pt3dadd( 77.686, -6.56747, 88.4285, 1.14 ) }
    dend_53 { pt3dadd( 77.6966, -6.70587, 89.4375, 0.23 ) }
    dend_53 { pt3dadd( 77.8393, -6.84588, 91.7601, 1.14 ) }
    dend_53 { pt3dadd( 78.1662, -6.68292, 95.6054, 0.23 ) }
    dend_53 { pt3dadd( 78.3105, -6.49042, 97.0408, 0.23 ) }
    dend_53 { pt3dadd( 78.472, -5.74782, 99.6341, 0.91 ) }
    dend_53 { pt3dadd( 78.418, -4.81316, 102.296, 0.23 ) }
    dend_53 { pt3dadd( 78.3383, -4.46611, 103.271, 0.91 ) }
    dend_53 { pt3dadd( 77.977, -3.73235, 105.233, 0.23 ) }
    dend_53 { pt3dadd( 77.464, -2.83574, 107.291, 1.14 ) }
    dend_53 { pt3dadd( 76.9707, -2.14837, 108.739, 1.82 ) }
    dend_53 { pt3dadd( 75.6223, -0.563313, 111.681, 0.68 ) }
    dend_53 { pt3dadd( 75.0864, 0.0154195, 112.776, 1.14 ) }
    dend_53 { pt3dadd( 74.2762, 0.868912, 114.558, 0.23 ) }
    dend_53 { pt3dadd( 73.8835, 1.21119, 115.462, 1.36 ) }
    dend_53 { pt3dadd( 73.2834, 1.58757, 116.713, 0.23 ) }
    dend_53 { pt3dadd( 72.4882, 1.96561, 118.386, 1.14 ) }
    dend_53 { pt3dadd( 71.3024, 2.43901, 120.84, 0.23 ) }
    dend_53 { pt3dadd( 70.2961, 2.7599, 122.911, 1.36 ) }
    dend_53 { pt3dadd( 69.2632, 3.06683, 124.93, 0.23 ) }
    dend_53 { pt3dadd( 68.548, 3.24027, 126.298, 2.05 ) }
    dend_53 { pt3dadd( 67.6043, 3.45552, 128.04, 2.05 ) }
    dend_53 { pt3dadd( 66.5699, 3.64994, 129.824, 0.68 ) }
    dend_53 { pt3dadd( 64.3592, 4.0334, 133.359, 0.23 ) }
    dend_53 { pt3dadd( 63.1631, 4.16187, 135.115, 0.23 ) }
    dend_53 { pt3dadd( 61.3491, 4.28236, 137.74, 1.59 ) }
    dend_53 { pt3dadd( 60.7661, 4.30478, 138.591, 0.23 ) }
    dend_53 { pt3dadd( 59.4346, 4.37577, 140.514, 1.14 ) }
    dend_53 { pt3dadd( 57.357, 4.63461, 143.444, 0.23 ) }
    dend_53 { pt3dadd( 56.2967, 4.87315, 144.945, 0.23 ) }
    dend_53 { pt3dadd( 54.2489, 5.34593, 148.061, 1.36 ) }
    dend_53 { pt3dadd( 52.6646, 5.56697, 150.646, 0.23 ) }
    dend_53 { pt3dadd( 51.4525, 5.75252, 152.695, 0.23 ) }
    dend_53 { pt3dadd( 50.1248, 5.99218, 155.012, 1.14 ) }
    dend_53 { pt3dadd( 47.9342, 6.33262, 158.964, 0.23 ) }
    dend_53 { pt3dadd( 45.9188, 6.59095, 162.963, 0.91 ) }
    dend_53 { pt3dadd( 43.8181, 6.51776, 167.343, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 55/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 81.9488, -4.05789, 50.2866, 0.23 ) }
    dend_52 { pt3dadd( 84.4465, -3.02297, 52.0825, 0.23 ) }
    dend_52 { pt3dadd( 85.631, -2.66406, 53.1216, 1.36 ) }
    dend_52 { pt3dadd( 88.087, -1.97566, 55.4465, 0.23 ) }
    dend_52 { pt3dadd( 88.7837, -1.87965, 56.2171, 0.68 ) }
    dend_52 { pt3dadd( 91.0869, -1.68193, 58.8412, 0.23 ) }
    dend_52 { pt3dadd( 93.1226, -1.5148, 61.0672, 1.59 ) }
    dend_52 { pt3dadd( 95.6393, -1.49112, 63.914, 0.23 ) }
    dend_52 { pt3dadd( 96.1788, -1.51072, 64.5065, 1.14 ) }
    dend_52 { pt3dadd( 99.8795, -1.8377, 68.4588, 0.23 ) }
    dend_52 { pt3dadd( 101.037, -1.97121, 69.786, 1.36 ) }
    dend_52 { pt3dadd( 102.805, -2.13191, 71.8922, 0.23 ) }
    dend_52 { pt3dadd( 103.896, -2.1795, 73.1036, 0.91 ) }
    dend_52 { pt3dadd( 106.475, -2.10446, 75.846, 0.23 ) }
    dend_52 { pt3dadd( 109.733, -1.87377, 79.4519, 1.14 ) }
    dend_52 { pt3dadd( 110.838, -1.70859, 80.6822, 0.23 ) }
    dend_52 { pt3dadd( 112.405, -1.57524, 82.7161, 2.27 ) }
    dend_52 { pt3dadd( 113.701, -1.47336, 84.6252, 0.23 ) }
    dend_52 { pt3dadd( 114.912, -1.32189, 86.7014, 1.14 ) }
    dend_52 { pt3dadd( 116.293, -1.15474, 89.4284, 0.23 ) }
    dend_52 { pt3dadd( 116.87, -1.06408, 90.8067, 1.36 ) }
    dend_52 { pt3dadd( 119.172, -1.0886, 97.1341, 0.23 ) }
    dend_52 { pt3dadd( 119.713, -1.23946, 98.7855, 1.59 ) }
    dend_52 { pt3dadd( 120.737, -1.84785, 102.097, 0.23 ) }
    dend_52 { pt3dadd( 121.743, -2.89528, 105.588, 1.36 ) }
    dend_52 { pt3dadd( 122.254, -3.67378, 107.636, 1.36 ) }
    dend_52 { pt3dadd( 123.155, -5.729, 111.934, 0.23 ) }
    dend_52 { pt3dadd( 123.749, -7.28389, 114.645, 0.23 ) }
    dend_52 { pt3dadd( 124.331, -8.87208, 117.144, 0.23 ) }
    dend_52 { pt3dadd( 124.803, -10.387, 119.347, 0.23 ) }
    dend_52 { pt3dadd( 124.979, -11.2683, 120.61, 0.23 ) }
    dend_52 { pt3dadd( 125.141, -12.8684, 122.751, 0.23 ) }
    dend_52 { pt3dadd( 125.091, -14.4567, 125.073, 0.23 ) }
    dend_52 { pt3dadd( 124.907, -15.6196, 127.001, 0.23 ) }
    dend_52 { pt3dadd( 124.519, -17.5212, 130.629, 0.23 ) }
    dend_52 { pt3dadd( 124.409, -18.2088, 131.957, 0.23 ) }
    dend_52 { pt3dadd( 124.041, -20.3055, 135.523, 0.45 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 92/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 22.8288, 91.5784, -37.0114, 0.23 ) }
    dend_31 { pt3dadd( 28.9393, 99.9317, -37.766, 0.23 ) }
    dend_31 { pt3dadd( 35.5378, 107.921, -37.5592, 0.23 ) }
    dend_31 { pt3dadd( 41.4799, 116.396, -38.3617, 0.23 ) }
    dend_31 { pt3dadd( 48.7248, 123.759, -37.8495, 0.23 ) }
    dend_31 { pt3dadd( 55.2883, 131.545, -35.9668, 0.23 ) }
    dend_31 { pt3dadd( 63.1287, 137.732, -33.436, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 22.8288, 91.5784, -37.0114, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_28 { pt3dadd( 28.7005, 98.992, -38.2619, 0.23 ) }
    dend_28 { pt3dadd( 33.6271, 106.536, -41.4384, 0.23 ) }
    dend_28 { pt3dadd( 38.0888, 114.479, -44.3668, 0.23 ) }
    dend_28 { pt3dadd( 42.5151, 121.763, -48.6715, 0.23 ) }
    dend_28 { pt3dadd( 46.4038, 129.266, -53.1398, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_7 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -167.186, -93.7342, 10.0426, 0.23 ) }
    dend_17 { pt3dadd( -168.589, -95.9369, 10.335, 0.23 ) }
    dend_17 { pt3dadd( -168.89, -96.4079, 10.4305, 0.91 ) }
    dend_17 { pt3dadd( -170.494, -99.0133, 11.0601, 0.23 ) }
    dend_17 { pt3dadd( -171.188, -100.139, 11.3541, 0.23 ) }
    dend_17 { pt3dadd( -172.057, -101.522, 11.7305, 1.59 ) }
    dend_17 { pt3dadd( -173.368, -103.647, 12.3627, 0.23 ) }
    dend_17 { pt3dadd( -174.089, -104.784, 12.7926, 0.45 ) }
    dend_17 { pt3dadd( -174.492, -105.448, 13.0586, 1.14 ) }
    dend_17 { pt3dadd( -174.79, -106.014, 13.2997, 1.14 ) }
    dend_17 { pt3dadd( -175.259, -106.987, 13.7039, 1.14 ) }
    dend_17 { pt3dadd( -175.924, -108.426, 14.2628, 0.91 ) }
    dend_17 { pt3dadd( -176.516, -109.683, 14.7046, 0.23 ) }
    dend_17 { pt3dadd( -176.862, -110.397, 14.9285, 0.23 ) }
    dend_17 { pt3dadd( -177.745, -112.27, 15.4264, 0.45 ) }
    dend_17 { pt3dadd( -178.613, -114.059, 15.8238, 0.23 ) }
    dend_17 { pt3dadd( -179.602, -115.881, 16.2884, 0.91 ) }
    dend_17 { pt3dadd( -180.285, -117.001, 16.5954, 1.14 ) }
    dend_17 { pt3dadd( -180.845, -117.888, 16.8674, 0.23 ) }
    dend_17 { pt3dadd( -181.927, -119.554, 17.4567, 2.5 ) }
    dend_17 { pt3dadd( -183.708, -122.152, 18.4733, 0.23 ) }
    dend_17 { pt3dadd( -185.314, -124.46, 19.4214, 1.82 ) }
    dend_17 { pt3dadd( -186.183, -125.651, 19.9432, 1.82 ) }
    dend_17 { pt3dadd( -187.556, -127.448, 20.7648, 0.23 ) }
    dend_17 { pt3dadd( -188.77, -128.99, 21.4896, 0.23 ) }
    dend_17 { pt3dadd( -189.625, -130.084, 22.0127, 1.82 ) }
    dend_17 { pt3dadd( -191.965, -133.203, 23.3646, 0.45 ) }
    dend_17 { pt3dadd( -193.307, -134.96, 24.0024, 1.59 ) }
    dend_17 { pt3dadd( -194.951, -137.021, 24.7162, 0.23 ) }
    dend_17 { pt3dadd( -195.474, -137.623, 24.9076, 1.14 ) }
    dend_17 { pt3dadd( -196.714, -138.99, 25.2916, 0.23 ) }
    dend_17 { pt3dadd( -198.359, -140.796, 25.764, 1.82 ) }
    dend_17 { pt3dadd( -200.234, -142.826, 26.1922, 0.23 ) }
    dend_17 { pt3dadd( -201.426, -144.12, 26.4704, 0.23 ) }
    dend_17 { pt3dadd( -202.909, -145.746, 26.8463, 2.05 ) }
    dend_17 { pt3dadd( -204.548, -147.56, 27.3042, 0.68 ) }
    dend_17 { pt3dadd( -206.073, -149.28, 27.7722, 0.68 ) }
    dend_17 { pt3dadd( -207.906, -151.466, 28.4145, 0.68 ) }
    dend_17 { pt3dadd( -209.565, -153.565, 29.1057, 2.05 ) }
    dend_17 { pt3dadd( -210.345, -154.587, 29.4681, 2.5 ) }
    dend_17 { pt3dadd( -211.893, -156.653, 30.227, 0.23 ) }
    dend_17 { pt3dadd( -212.438, -157.321, 30.4664, 0.91 ) }
    dend_17 { pt3dadd( -213.501, -158.58, 30.8111, 0.23 ) }
    dend_17 { pt3dadd( -214.82, -160.096, 31.1053, 0.45 ) }
    dend_17 { pt3dadd( -215.577, -160.932, 31.1821, 0.23 ) }
    dend_17 { pt3dadd( -217.927, -163.426, 31.2981, 2.05 ) }
    dend_17 { pt3dadd( -220.18, -165.809, 31.3181, 0.23 ) }
    dend_17 { pt3dadd( -222.045, -167.825, 31.2431, 0.23 ) }
    dend_17 { pt3dadd( -222.689, -168.57, 31.195, 0.23 ) }
    dend_17 { pt3dadd( -223.212, -169.271, 31.1597, 0.23 ) }
    dend_17 { pt3dadd( -223.906, -170.287, 31.2116, 0.23 ) }
    dend_17 { pt3dadd( -224.462, -171.259, 31.3776, 0.23 ) }
    dend_17 { pt3dadd( -226.09, -174.46, 32.2105, 3.41 ) }
    dend_17 { pt3dadd( -226.725, -175.836, 32.6687, 2.73 ) }
    dend_17 { pt3dadd( -227.924, -178.872, 33.8337, 0.23 ) }
    dend_17 { pt3dadd( -228.87, -181.338, 34.9633, 1.14 ) }
    dend_17 { pt3dadd( -229.428, -182.904, 35.7859, 1.14 ) }
    dend_17 { pt3dadd( -230.079, -185.029, 37.0869, 0.23 ) }
    dend_17 { pt3dadd( -230.43, -186.578, 38.2354, 1.82 ) }
    dend_17 { pt3dadd( -230.753, -188.41, 39.66, 1.82 ) }
    dend_17 { pt3dadd( -231.024, -190.527, 41.2509, 0.68 ) }
    dend_17 { pt3dadd( -231.13, -191.931, 42.2164, 0.23 ) }
    dend_17 { pt3dadd( -231.234, -193.759, 43.4536, 0.91 ) }
    dend_17 { pt3dadd( -231.296, -195.786, 44.7871, 0.23 ) }
    dend_17 { pt3dadd( -231.374, -198.078, 46.1419, 2.5 ) }
    dend_17 { pt3dadd( -231.449, -201.463, 47.8858, 0.23 ) }
    dend_17 { pt3dadd( -231.464, -202.968, 48.544, 0.91 ) }
    dend_17 { pt3dadd( -231.502, -204.704, 49.2071, 0.23 ) }
    dend_17 { pt3dadd( -231.525, -205.723, 49.5673, 1.82 ) }
    dend_17 { pt3dadd( -231.524, -207.742, 50.2707, 0.23 ) }
    dend_17 { pt3dadd( -231.486, -208.489, 50.5258, 0.23 ) }
    dend_17 { pt3dadd( -231.277, -210.696, 51.2657, 0.91 ) }
    dend_17 { pt3dadd( -231.121, -212.529, 51.8612, 0.23 ) }
    dend_17 { pt3dadd( -230.954, -214.587, 52.5525, 1.14 ) }
    dend_17 { pt3dadd( -230.785, -216.247, 53.1322, 0.23 ) }
    dend_17 { pt3dadd( -230.438, -218.613, 53.7668, 1.82 ) }
    dend_17 { pt3dadd( -230.239, -219.892, 54.011, 2.5 ) }
    dend_17 { pt3dadd( -229.765, -223.3, 54.3479, 0.23 ) }
    dend_17 { pt3dadd( -229.538, -225.739, 54.3384, 2.05 ) }
    dend_17 { pt3dadd( -229.427, -227.554, 54.1722, 2.05 ) }
    dend_17 { pt3dadd( -229.424, -231.976, 53.5612, 0.23 ) }
    dend_17 { pt3dadd( -229.559, -233.822, 53.2508, 1.14 ) }
    dend_17 { pt3dadd( -229.922, -236.113, 52.7625, 0.23 ) }
    dend_17 { pt3dadd( -230.204, -237.404, 52.3888, 0.91 ) }
    dend_17 { pt3dadd( -230.502, -238.38, 52.0672, 0.23 ) }
    dend_17 { pt3dadd( -231.408, -240.46, 51.4564, 1.14 ) }
    dend_17 { pt3dadd( -232.435, -242.162, 51.2465, 0.23 ) }
    dend_17 { pt3dadd( -233.168, -243.285, 51.1697, 1.14 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 93/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -167.186, -93.7342, 10.0426, 0.68 ) }
    dend_8 { pt3dadd( -169.94, -93.9176, 10.7066, 0.68 ) }
    dend_8 { pt3dadd( -171.861, -93.9324, 11.1539, 0.68 ) }
    dend_8 { pt3dadd( -172.584, -93.9067, 11.291, 0.68 ) }
    dend_8 { pt3dadd( -173.309, -93.88, 11.4182, 0.68 ) }
    dend_8 { pt3dadd( -173.911, -93.8586, 11.5125, 0.68 ) }
    dend_8 { pt3dadd( -176.194, -93.8374, 11.8749, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_8 { pt3dadd( -177.497, -93.8414, 12.0786, 1.59 ) }
    dend_8 { pt3dadd( -179.38, -93.8621, 12.3138, 0.91 ) }
    dend_8 { pt3dadd( -181.786, -93.9406, 12.5745, 1.59 ) }
    dend_8 { pt3dadd( -183.089, -94.0062, 12.7704, 0.23 ) }
    dend_8 { pt3dadd( -184.771, -94.1636, 13.0905, 2.05 ) }
    dend_8 { pt3dadd( -185.713, -94.3265, 13.292, 2.05 ) }
    dend_8 { pt3dadd( -186.96, -94.6317, 13.608, 2.05 ) }
    dend_8 { pt3dadd( -188.915, -95.2803, 14.1685, 0.45 ) }
    dend_8 { pt3dadd( -191.438, -96.3974, 14.8425, 0.23 ) }
    dend_8 { pt3dadd( -193.111, -97.3056, 15.2487, 0.23 ) }
    dend_8 { pt3dadd( -195.297, -98.7788, 15.7212, 0.23 ) }
    dend_8 { pt3dadd( -196.706, -99.9192, 16.001, 1.36 ) }
    dend_8 { pt3dadd( -197.652, -100.839, 16.1713, 1.36 ) }
    dend_8 { pt3dadd( -199.53, -102.967, 16.4923, 2.73 ) }
    dend_8 { pt3dadd( -200.731, -104.482, 16.6878, 1.59 ) }
    dend_8 { pt3dadd( -202.284, -106.527, 17.0117, 0.45 ) }
    dend_8 { pt3dadd( -203.209, -107.736, 17.2575, 0.45 ) }
    dend_8 { pt3dadd( -203.968, -108.662, 17.4866, 0.45 ) }
    dend_8 { pt3dadd( -205.161, -110.018, 17.8925, 1.59 ) }
    dend_8 { pt3dadd( -206.518, -111.519, 18.3834, 1.59 ) }
    dend_8 { pt3dadd( -207.166, -112.237, 18.5962, 2.95 ) }
    dend_8 { pt3dadd( -207.964, -113.1, 18.818, 2.95 ) }
    dend_8 { pt3dadd( -209.155, -114.436, 19.0982, 2.95 ) }
    dend_8 { pt3dadd( -211.404, -117.131, 19.5412, 0.45 ) }
    dend_8 { pt3dadd( -212.33, -118.36, 19.6906, 1.59 ) }
    dend_8 { pt3dadd( -213.272, -119.689, 19.8937, 2.27 ) }
    dend_8 { pt3dadd( -214.128, -120.944, 20.1711, 2.27 ) }
    dend_8 { pt3dadd( -215.321, -122.772, 20.6827, 0.45 ) }
    dend_8 { pt3dadd( -216.37, -124.401, 21.2556, 2.5 ) }
    dend_8 { pt3dadd( -217.336, -125.859, 21.8661, 3.41 ) }
    dend_8 { pt3dadd( -218.773, -127.964, 22.8264, 0.23 ) }
    dend_8 { pt3dadd( -219.636, -129.192, 23.4426, 1.36 ) }
    dend_8 { pt3dadd( -220.423, -130.31, 24.0643, 0.45 ) }
    dend_8 { pt3dadd( -221.758, -132.17, 25.1986, 3.41 ) }
    dend_8 { pt3dadd( -222.416, -133.042, 25.7765, 3.41 ) }
    dend_8 { pt3dadd( -223.866, -134.924, 27.1592, 2.05 ) }
    dend_8 { pt3dadd( -225.088, -136.467, 28.3108, 0.45 ) }
    dend_8 { pt3dadd( -226.078, -137.641, 29.2269, 1.59 ) }
    dend_8 { pt3dadd( -227.363, -139.058, 30.3938, 1.14 ) }
    dend_8 { pt3dadd( -228.845, -140.591, 31.6832, 0.91 ) }
    dend_8 { pt3dadd( -230.168, -141.898, 32.8468, 1.36 ) }
    dend_8 { pt3dadd( -231.473, -143.085, 33.9679, 0.23 ) }
    dend_8 { pt3dadd( -232.177, -143.69, 34.4986, 1.82 ) }
    dend_8 { pt3dadd( -233.254, -144.536, 35.188, 2.95 ) }
    dend_8 { pt3dadd( -234.245, -145.276, 35.7122, 2.95 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -86.975, -173.632, -30.0079, 0.23 ) }
    dend_6 { pt3dadd( -89.8652, -182.97, -33.9858, 0.23 ) }
    dend_6 { pt3dadd( -93.4107, -192.69, -36.1059, 0.23 ) }
    dend_6 { pt3dadd( -95.4217, -202.592, -39.2395, 0.23 ) }
    dend_6 { pt3dadd( -95.6694, -212.702, -42.4013, 0.23 ) }
    dend_6 { pt3dadd( -97.218, -222.791, -45.2172, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 51/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -86.975, -173.632, -30.0079, 0.23 ) }
    dend_5 { pt3dadd( -89.3788, -185.842, -32.0927, 0.23 ) }
    dend_5 { pt3dadd( -91.3695, -198.114, -34.2688, 0.23 ) }
    dend_5 { pt3dadd( -95.3528, -209.79, -36.7777, 0.23 ) }
    dend_5 { pt3dadd( -97.4841, -221.786, -40.0107, 0.23 ) }
    dend_5 { pt3dadd( -98.0061, -233.461, -44.69, 0.23 ) }
    // Section: dend_99, id: dend_99, parent: dend_97 (entry count 57/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 154.236, 46.9707, -0.438882, 0.45 ) }
    dend_99 { pt3dadd( 156.523, 48.1911, -0.557157, 0.45 ) }
    dend_99 { pt3dadd( 159.395, 49.6487, -0.68672, 0.68 ) }
    dend_99 { pt3dadd( 161.526, 50.8024, -0.58861, 0.68 ) }
    dend_99 { pt3dadd( 165.263, 52.7634, -0.266241, 0.68 ) }
    dend_99 { pt3dadd( 169.797, 55.1903, 0.159286, 0.68 ) }
    dend_99 { pt3dadd( 173.557, 57.2026, 0.504102, 0.68 ) }
    dend_99 { pt3dadd( 177.536, 59.3371, 0.936063, 0.45 ) }
    dend_99 { pt3dadd( 182.117, 61.7762, 1.45043, 0.45 ) }
    dend_99 { pt3dadd( 185.187, 63.3091, 1.77989, 0.68 ) }
    dend_99 { pt3dadd( 188.591, 65.0429, 2.17889, 0.23 ) }
    dend_99 { pt3dadd( 191.594, 66.7138, 2.56495, 1.14 ) }
    dend_99 { pt3dadd( 193.935, 68.0507, 2.71648, 0.23 ) }
    dend_99 { pt3dadd( 195.541, 68.9889, 2.66948, 1.14 ) }
    dend_99 { pt3dadd( 198.864, 70.9363, 2.23167, 0.45 ) }
    dend_99 { pt3dadd( 200.998, 72.2583, 1.86712, 0.23 ) }
    dend_99 { pt3dadd( 202.881, 73.4062, 1.5031, 0.23 ) }
    dend_99 { pt3dadd( 205.493, 75.052, 0.929124, 1.36 ) }
    dend_99 { pt3dadd( 210.073, 78.0434, -0.185216, 0.23 ) }
    dend_99 { pt3dadd( 212.802, 79.9238, -0.874791, 1.82 ) }
    dend_99 { pt3dadd( 214.048, 80.839, -1.20259, 2.5 ) }
    dend_99 { pt3dadd( 217.323, 83.2326, -2.02275, 0.23 ) }
    dend_99 { pt3dadd( 219.142, 84.5896, -2.45192, 0.68 ) }
    dend_99 { pt3dadd( 220.803, 85.8773, -2.79543, 1.36 ) }
    dend_99 { pt3dadd( 222.68, 87.438, -3.09274, 0.23 ) }
    dend_99 { pt3dadd( 224.099, 88.6746, -3.32015, 1.36 ) }
    dend_99 { pt3dadd( 225.491, 89.9136, -3.54187, 1.36 ) }
    dend_99 { pt3dadd( 227.486, 91.6747, -3.84809, 0.23 ) }
    dend_99 { pt3dadd( 228.401, 92.4284, -3.97534, 0.23 ) }
    dend_99 { pt3dadd( 231.176, 94.5656, -4.32817, 2.05 ) }
    dend_99 { pt3dadd( 232.271, 95.3844, -4.52844, 2.73 ) }
    dend_99 { pt3dadd( 235.113, 97.5081, -5.18226, 1.14 ) }
    dend_99 { pt3dadd( 237.421, 99.2878, -5.74732, 1.14 ) }
    dend_99 { pt3dadd( 239.691, 101.011, -6.31211, 0.23 ) }
    dend_99 { pt3dadd( 240.97, 101.945, -6.6288, 0.91 ) }
    dend_99 { pt3dadd( 244.638, 104.596, -7.53914, 1.59 ) }
    dend_99 { pt3dadd( 247.654, 106.826, -8.25932, 0.45 ) }
    dend_99 { pt3dadd( 249.829, 108.544, -8.71306, 1.14 ) }
    dend_99 { pt3dadd( 251.139, 109.636, -8.93035, 0.23 ) }
    dend_99 { pt3dadd( 251.838, 110.226, -9.00448, 0.23 ) }
    dend_99 { pt3dadd( 253.219, 111.388, -8.98758, 0.23 ) }
    dend_99 { pt3dadd( 254.959, 112.895, -8.77957, 0.91 ) }
    dend_99 { pt3dadd( 257.033, 114.883, -8.54255, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_99 { pt3dadd( 258.555, 116.381, -8.41192, 2.05 ) }
    dend_99 { pt3dadd( 260.184, 117.98, -8.22837, 2.73 ) }
    dend_99 { pt3dadd( 263.376, 120.973, -7.82736, 0.23 ) }
    dend_99 { pt3dadd( 265.033, 122.448, -7.58055, 0.23 ) }
    dend_99 { pt3dadd( 267.209, 124.372, -7.1613, 0.23 ) }
    dend_99 { pt3dadd( 268.726, 125.689, -6.82815, 1.36 ) }
    dend_99 { pt3dadd( 271.095, 127.607, -6.17316, 0.23 ) }
    dend_99 { pt3dadd( 272.51, 128.63, -5.75317, 1.59 ) }
    dend_99 { pt3dadd( 274.757, 130.077, -5.06163, 0.23 ) }
    dend_99 { pt3dadd( 277.795, 131.886, -4.09363, 0.23 ) }
    dend_99 { pt3dadd( 278.937, 132.512, -3.74651, 2.05 ) }
    dend_99 { pt3dadd( 282.578, 134.541, -2.68208, 0.45 ) }
    dend_99 { pt3dadd( 285.043, 135.96, -1.95926, 0.45 ) }
    dend_99 { pt3dadd( 287.506, 137.415, -1.11725, 1.36 ) }
    dend_99 { pt3dadd( 289.002, 138.308, -0.579082, 2.27 ) }
    dend_99 { pt3dadd( 291.621, 139.924, 0.374352, 0.91 ) }
    dend_99 { pt3dadd( 293.803, 141.437, 1.22135, 0.23 ) }
    dend_99 { pt3dadd( 295.712, 142.953, 1.98703, 0.23 ) }
    dend_99 { pt3dadd( 297.654, 144.509, 2.8278, 1.14 ) }
    dend_99 { pt3dadd( 299.052, 145.592, 3.42679, 1.14 ) }
    dend_99 { pt3dadd( 300.74, 146.854, 4.15484, 1.14 ) }
    dend_99 { pt3dadd( 303.211, 148.614, 5.15197, 0.23 ) }
    dend_99 { pt3dadd( 303.993, 149.054, 5.39421, 0.91 ) }
    dend_99 { pt3dadd( 306.87, 150.338, 6.19916, 0.23 ) }
    dend_99 { pt3dadd( 307.644, 150.634, 6.39805, 1.14 ) }
    dend_99 { pt3dadd( 310.242, 151.437, 7.17964, 0.45 ) }
    dend_99 { pt3dadd( 312.189, 151.86, 7.76225, 2.5 ) }
    dend_99 { pt3dadd( 315.942, 152.515, 8.89278, 1.14 ) }
    dend_99 { pt3dadd( 319.869, 153.133, 10.0752, 0.23 ) }
    dend_99 { pt3dadd( 322.754, 153.538, 10.9185, 0.23 ) }
    dend_99 { pt3dadd( 326.867, 154.071, 12.1226, 1.14 ) }
    dend_99 { pt3dadd( 330.108, 154.396, 13.0499, 1.14 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 32/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 154.236, 46.9707, -0.438882, 0.91 ) }
    dend_98 { pt3dadd( 157.152, 48.3739, -1.74506, 0.91 ) }
    dend_98 { pt3dadd( 158.722, 49.1445, -2.29253, 1.36 ) }
    dend_98 { pt3dadd( 160.365, 49.9218, -2.64007, 0.23 ) }
    dend_98 { pt3dadd( 162.233, 50.8711, -2.83102, 0.45 ) }
    dend_98 { pt3dadd( 163.927, 51.7912, -2.88987, 0.91 ) }
    dend_98 { pt3dadd( 164.997, 52.3824, -2.88282, 0.45 ) }
    dend_98 { pt3dadd( 166.229, 53.0903, -2.75783, 1.14 ) }
    dend_98 { pt3dadd( 168.438, 54.2839, -2.50087, 1.14 ) }
    dend_98 { pt3dadd( 170.05, 55.0982, -2.34023, 0.23 ) }
    dend_98 { pt3dadd( 171.308, 55.6484, -2.34213, 0.45 ) }
    dend_98 { pt3dadd( 173.194, 56.4091, -2.52805, 0.23 ) }
    dend_98 { pt3dadd( 174.878, 56.981, -2.87796, 1.14 ) }
    dend_98 { pt3dadd( 176.308, 57.3707, -3.32735, 2.05 ) }
    dend_98 { pt3dadd( 177.824, 57.7016, -3.89038, 1.14 ) }
    dend_98 { pt3dadd( 181.229, 58.3505, -5.22383, 0.23 ) }
    dend_98 { pt3dadd( 182.456, 58.5901, -5.73402, 0.23 ) }
    dend_98 { pt3dadd( 184.158, 58.9525, -6.365, 1.36 ) }
    dend_98 { pt3dadd( 185.378, 59.2481, -6.71676, 2.5 ) }
    dend_98 { pt3dadd( 188.165, 60.0596, -7.26705, 0.23 ) }
    dend_98 { pt3dadd( 189.131, 60.407, -7.34388, 0.23 ) }
    dend_98 { pt3dadd( 190.537, 61.1146, -7.26079, 0.23 ) }
    dend_98 { pt3dadd( 192.776, 62.4542, -6.99412, 1.14 ) }
    dend_98 { pt3dadd( 193.986, 63.2679, -6.77836, 1.36 ) }
    dend_98 { pt3dadd( 195.973, 64.6705, -6.32087, 0.23 ) }
    dend_98 { pt3dadd( 197.862, 66.07, -5.82932, 0.68 ) }
    dend_98 { pt3dadd( 199.409, 67.2274, -5.43467, 0.23 ) }
    dend_98 { pt3dadd( 200.532, 68.0809, -5.19421, 1.82 ) }
    dend_98 { pt3dadd( 201.294, 68.6617, -5.10071, 1.82 ) }
    dend_98 { pt3dadd( 203.14, 70.0462, -4.94646, 0.23 ) }
    dend_98 { pt3dadd( 204.64, 71.1108, -4.88304, 0.23 ) }
    dend_98 { pt3dadd( 205.747, 71.8466, -4.87871, 0.91 ) }
    dend_98 { pt3dadd( 208.316, 73.4109, -5.06654, 0.23 ) }
    dend_98 { pt3dadd( 209.544, 74.1234, -5.22462, 1.36 ) }
    dend_98 { pt3dadd( 211.085, 75.0063, -5.51034, 0.23 ) }
    dend_98 { pt3dadd( 212.773, 75.9651, -5.87615, 1.36 ) }
    dend_98 { pt3dadd( 214.209, 76.7288, -6.17391, 0.23 ) }
    dend_98 { pt3dadd( 215.918, 77.6342, -6.50184, 1.14 ) }
    dend_98 { pt3dadd( 217.55, 78.5025, -6.78758, 0.23 ) }
    dend_98 { pt3dadd( 218.343, 78.9341, -6.90484, 0.23 ) }
    dend_98 { pt3dadd( 219.985, 79.8704, -7.09295, 2.05 ) }
    dend_98 { pt3dadd( 220.798, 80.3793, -7.16102, 2.05 ) }
    dend_98 { pt3dadd( 222.385, 81.5014, -7.25205, 0.45 ) }
    dend_98 { pt3dadd( 223.307, 82.1841, -7.3282, 1.82 ) }
    dend_98 { pt3dadd( 224.625, 83.1656, -7.52259, 1.82 ) }
    dend_98 { pt3dadd( 226.471, 84.4642, -7.88784, 0.23 ) }
    dend_98 { pt3dadd( 227.402, 85.0482, -8.11057, 0.68 ) }
    dend_98 { pt3dadd( 229.058, 85.9822, -8.50867, 0.23 ) }
    dend_98 { pt3dadd( 230.678, 86.7342, -8.87545, 1.36 ) }
    dend_98 { pt3dadd( 231.418, 86.9891, -9.04718, 1.82 ) }
    dend_98 { pt3dadd( 232.723, 87.2335, -9.32082, 0.91 ) }
    dend_98 { pt3dadd( 234.051, 87.3295, -9.56442, 0.23 ) }
    dend_98 { pt3dadd( 235.471, 87.3747, -9.79677, 1.36 ) }
    dend_98 { pt3dadd( 236.411, 87.3879, -9.96233, 2.27 ) }
    dend_98 { pt3dadd( 238.945, 87.5541, -10.4317, 0.23 ) }
    dend_98 { pt3dadd( 240.44, 87.7266, -10.7804, 1.14 ) }
    dend_98 { pt3dadd( 241.302, 87.8741, -11.0131, 0.23 ) }
    dend_98 { pt3dadd( 242.348, 88.1125, -11.3116, 0.23 ) }
    dend_98 { pt3dadd( 243.955, 88.5296, -11.7887, 1.14 ) }
    dend_98 { pt3dadd( 245.615, 89.0251, -12.2921, 0.23 ) }
    dend_98 { pt3dadd( 247.763, 89.7679, -12.9182, 0.45 ) }
    dend_98 { pt3dadd( 248.728, 90.1031, -13.2288, 2.05 ) }
    dend_98 { pt3dadd( 250.18, 90.5922, -13.7039, 2.05 ) }
    dend_98 { pt3dadd( 251.404, 90.982, -14.0786, 0.23 ) }
    dend_98 { pt3dadd( 251.982, 91.1626, -14.2512, 0.91 ) }
    dend_98 { pt3dadd( 253.373, 91.585, -14.6908, 0.23 ) }
    dend_98 { pt3dadd( 255.47, 92.2142, -15.4028, 1.36 ) }
    dend_98 { pt3dadd( 256.301, 92.477, -15.7006, 2.27 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_98 { pt3dadd( 258.087, 93.0285, -16.3138, 0.91 ) }
    dend_98 { pt3dadd( 260.032, 93.6618, -16.9317, 0.91 ) }
    dend_98 { pt3dadd( 261.495, 94.163, -17.3831, 2.73 ) }
    dend_98 { pt3dadd( 263.983, 95.0956, -18.1869, 0.23 ) }
    dend_98 { pt3dadd( 265.342, 95.67, -18.6261, 0.68 ) }
    dend_98 { pt3dadd( 267.294, 96.6047, -19.3827, 0.23 ) }
    dend_98 { pt3dadd( 268.844, 97.5124, -20.2111, 0.23 ) }
    dend_98 { pt3dadd( 269.744, 98.1455, -20.8527, 1.14 ) }
    dend_98 { pt3dadd( 270.97, 99.1639, -21.9715, 0.23 ) }
    dend_98 { pt3dadd( 271.614, 99.7623, -22.6735, 1.36 ) }
    dend_98 { pt3dadd( 272.735, 100.811, -24.052, 0.23 ) }
    dend_98 { pt3dadd( 274.157, 102.17, -25.9123, 1.82 ) }
    dend_98 { pt3dadd( 275.178, 102.943, -27.1528, 0.68 ) }
    dend_98 { pt3dadd( 275.967, 103.42, -27.9781, 1.82 ) }
    dend_98 { pt3dadd( 278.059, 104.433, -29.7659, 0.23 ) }
    dend_98 { pt3dadd( 279.383, 104.942, -30.6787, 0.23 ) }
    dend_98 { pt3dadd( 280.411, 105.261, -31.2095, 2.05 ) }
    dend_98 { pt3dadd( 283.579, 105.994, -32.4084, 0.23 ) }
    dend_98 { pt3dadd( 285.18, 106.272, -32.8703, 1.36 ) }
    dend_98 { pt3dadd( 286.988, 106.482, -33.2655, 0.23 ) }
    dend_98 { pt3dadd( 288.675, 106.637, -33.4957, 1.36 ) }
    dend_98 { pt3dadd( 290.254, 106.804, -33.6757, 0.23 ) }
    dend_98 { pt3dadd( 292.56, 107.101, -33.921, 0.91 ) }
    dend_98 { pt3dadd( 295.026, 107.558, -34.1568, 0.23 ) }
    dend_98 { pt3dadd( 296.53, 107.867, -34.3245, 2.5 ) }
    dend_98 { pt3dadd( 299.693, 108.645, -34.7277, 0.23 ) }
    dend_98 { pt3dadd( 302.035, 109.353, -35.1143, 0.23 ) }
    dend_98 { pt3dadd( 303.296, 109.814, -35.3339, 0.23 ) }
    dend_98 { pt3dadd( 304.76, 110.502, -35.5419, 2.05 ) }
    dend_98 { pt3dadd( 306.594, 111.528, -35.709, 2.05 ) }
    dend_98 { pt3dadd( 308.356, 112.675, -35.7122, 0.45 ) }
    dend_98 { pt3dadd( 310.053, 113.923, -35.5376, 0.45 ) }
    dend_98 { pt3dadd( 311.568, 115.138, -35.2358, 1.14 ) }
    dend_98 { pt3dadd( 313.842, 117.101, -34.6468, 0.23 ) }
    dend_98 { pt3dadd( 314.864, 118.034, -34.3798, 1.82 ) }
    dend_98 { pt3dadd( 316.194, 119.358, -34.0422, 0.23 ) }
    dend_98 { pt3dadd( 316.984, 120.147, -33.8828, 0.23 ) }
    dend_98 { pt3dadd( 317.785, 120.942, -33.7935, 1.14 ) }
    dend_98 { pt3dadd( 319.615, 122.76, -33.966, 0.23 ) }
    dend_98 { pt3dadd( 320.995, 124.206, -34.439, 1.59 ) }
    dend_98 { pt3dadd( 321.561, 124.86, -34.7338, 1.59 ) }
    dend_98 { pt3dadd( 322.446, 126.025, -35.3439, 1.59 ) }
    dend_98 { pt3dadd( 323.135, 127.045, -35.8972, 0.45 ) }
    dend_98 { pt3dadd( 323.622, 127.878, -36.2862, 1.82 ) }
    dend_98 { pt3dadd( 324.517, 129.811, -36.9852, 0.23 ) }
    dend_98 { pt3dadd( 324.981, 130.934, -37.2351, 0.91 ) }
    dend_98 { pt3dadd( 325.432, 132.075, -37.4119, 1.14 ) }
    dend_98 { pt3dadd( 326.062, 133.609, -37.5262, 0.23 ) }
    dend_98 { pt3dadd( 327.173, 136.072, -37.6064, 1.36 ) }
    dend_98 { pt3dadd( 328.196, 138.142, -37.5986, 0.23 ) }
    dend_98 { pt3dadd( 329.171, 139.961, -37.5189, 0.68 ) }
    dend_98 { pt3dadd( 329.589, 140.673, -37.4726, 2.27 ) }
    dend_98 { pt3dadd( 331.027, 142.864, -37.306, 0.23 ) }
    dend_98 { pt3dadd( 331.755, 143.865, -37.2283, 1.36 ) }
    dend_98 { pt3dadd( 333.277, 145.751, -37.1626, 0.23 ) }
    dend_98 { pt3dadd( 334.308, 146.88, -37.1175, 0.68 ) }
    dend_98 { pt3dadd( 335.129, 147.737, -37.0801, 0.68 ) }
    dend_98 { pt3dadd( 336.384, 149.046, -37.0356, 0.23 ) }
    dend_98 { pt3dadd( 337.015, 149.704, -37.056, 1.59 ) }
    dend_98 { pt3dadd( 337.85, 150.602, -37.1307, 0.23 ) }
    dend_98 { pt3dadd( 339.053, 151.914, -37.3082, 1.14 ) }
    dend_98 { pt3dadd( 340.442, 153.597, -37.6268, 0.23 ) }
    dend_98 { pt3dadd( 341.73, 155.271, -38.1162, 0.23 ) }
    dend_98 { pt3dadd( 342.726, 156.658, -38.5816, 0.23 ) }
    dend_98 { pt3dadd( 343.627, 157.968, -39.0575, 2.05 ) }
    dend_98 { pt3dadd( 343.866, 158.334, -39.2001, 2.73 ) }
    dend_98 { pt3dadd( 345.407, 160.871, -40.2529, 0.45 ) }
    dend_98 { pt3dadd( 346.706, 163.117, -41.1706, 0.45 ) }
    dend_98 { pt3dadd( 347.7, 165.132, -41.8897, 2.27 ) }
    dend_98 { pt3dadd( 348.587, 167.268, -42.5406, 0.23 ) }
    dend_98 { pt3dadd( 348.891, 168.246, -42.8095, 0.68 ) }
    dend_98 { pt3dadd( 349.254, 169.85, -43.2058, 0.23 ) }
    dend_98 { pt3dadd( 349.474, 171.383, -43.5313, 1.14 ) }
    dend_98 { pt3dadd( 349.705, 174.277, -44.051, 0.23 ) }
    dend_98 { pt3dadd( 349.731, 175.016, -44.2056, 1.14 ) }
    dend_98 { pt3dadd( 349.822, 178.188, -44.8841, 0.23 ) }
    dend_98 { pt3dadd( 349.857, 179.136, -45.1199, 0.91 ) }
    dend_98 { pt3dadd( 349.914, 180.561, -45.5188, 0.23 ) }
    dend_98 { pt3dadd( 349.988, 181.519, -45.817, 2.27 ) }
    dend_98 { pt3dadd( 350.304, 183.59, -46.5317, 0.23 ) }
    dend_98 { pt3dadd( 350.663, 185.215, -47.1088, 1.14 ) }
    dend_98 { pt3dadd( 351.357, 187.444, -47.957, 0.23 ) }
    dend_98 { pt3dadd( 351.699, 188.382, -48.2915, 1.14 ) }
    dend_98 { pt3dadd( 352.192, 189.713, -48.7288, 0.91 ) }
    dend_98 { pt3dadd( 352.43, 190.401, -48.9703, 0.23 ) }
    dend_98 { pt3dadd( 352.802, 191.647, -49.427, 1.36 ) }
    dend_98 { pt3dadd( 353.073, 192.99, -49.924, 0.23 ) }
    dend_98 { pt3dadd( 353.246, 194.985, -50.6444, 0.68 ) }
    dend_98 { pt3dadd( 353.053, 197.165, -51.4867, 0.23 ) }
    dend_98 { pt3dadd( 352.511, 199.364, -52.3738, 0.23 ) }
    dend_98 { pt3dadd( 352.27, 200.087, -52.6669, 0.91 ) }
    dend_98 { pt3dadd( 351.799, 201.282, -53.1452, 0.23 ) }
    dend_98 { pt3dadd( 351.193, 202.573, -53.6737, 0.23 ) }
    dend_98 { pt3dadd( 350.518, 203.81, -54.2366, 0.23 ) }
    dend_98 { pt3dadd( 349.962, 204.831, -54.6503, 0.23 ) }
    dend_98 { pt3dadd( 349.304, 206.2, -55.0488, 0.23 ) }
    dend_98 { pt3dadd( 348.736, 207.761, -55.4944, 2.05 ) }
    dend_98 { pt3dadd( 354.578, 213.035, -58.6589, 2.05 ) }
    dend_98 { pt3dadd( 359.9, 219.216, -61.0811, 2.05 ) }
    dend_98 { pt3dadd( 364.572, 225.894, -63.5854, 2.05 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_98 { pt3dadd( 370.543, 231.795, -64.8424, 2.05 ) }
    dend_98 { pt3dadd( 376.948, 237.323, -64.6379, 2.05 ) }
    dend_98 { pt3dadd( 382.404, 243.699, -63.4123, 2.05 ) }
    dend_98 { pt3dadd( 386.349, 251.208, -62.5796, 2.05 ) }
    dend_98 { pt3dadd( 389.056, 259.091, -60.796, 2.05 ) }
    dend_98 { pt3dadd( 390.501, 267.109, -58.3064, 2.05 ) }
    dend_98 { pt3dadd( 390.984, 275.125, -55.4828, 2.05 ) }
    dend_98 { pt3dadd( 392.666, 282.724, -52.0809, 2.05 ) }
    dend_98 { pt3dadd( 395.026, 289.961, -48.3418, 2.05 ) }
    dend_98 { pt3dadd( 395.722, 296.959, -43.6388, 2.05 ) }
    dend_98 { pt3dadd( 397.891, 304.253, -39.8933, 2.05 ) }
    // Section: dend_94, id: dend_94, parent: dend_88 (entry count 11/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 194.544, 319.004, -76.7121, 0.23 ) }
    dend_94 { pt3dadd( 199.315, 334.393, -81.9495, 0.23 ) }
    dend_94 { pt3dadd( 205.49, 349.491, -86.4705, 0.23 ) }
    dend_94 { pt3dadd( 213.198, 363.49, -91.9341, 0.23 ) }
    dend_94 { pt3dadd( 220.366, 377.77, -97.4381, 0.23 ) }
    dend_94 { pt3dadd( 228.318, 392.506, -99.7161, 0.23 ) }
    dend_94 { pt3dadd( 236.004, 406.78, -104.474, 0.23 ) }
    dend_94 { pt3dadd( 243.179, 421.338, -109.207, 0.23 ) }
    dend_94 { pt3dadd( 252.028, 433.692, -116.454, 0.23 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 20/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 194.544, 319.004, -76.7121, 0.68 ) }
    dend_89 { pt3dadd( 197.077, 327.787, -79.2489, 0.23 ) }
    dend_89 { pt3dadd( 200.234, 335.769, -83.2391, 0.23 ) }
    dend_89 { pt3dadd( 202.259, 344.448, -86.4907, 0.23 ) }
    dend_89 { pt3dadd( 205.731, 352.134, -90.7695, 0.23 ) }
    dend_89 { pt3dadd( 208.032, 359.593, -96.105, 0.23 ) }
    dend_89 { pt3dadd( 208.871, 366.569, -102.411, 0.23 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 27/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 156.982, -184.603, 128.371, 0.23 ) }
    dend_81 { pt3dadd( 158.292, -186.105, 129.055, 0.23 ) }
    dend_81 { pt3dadd( 159.551, -187.533, 129.763, 2.27 ) }
    dend_81 { pt3dadd( 161.652, -189.824, 130.944, 0.23 ) }
    dend_81 { pt3dadd( 163.315, -191.594, 131.878, 1.82 ) }
    dend_81 { pt3dadd( 165.815, -194.208, 133.271, 0.23 ) }
    dend_81 { pt3dadd( 167.411, -195.824, 134.162, 1.14 ) }
    dend_81 { pt3dadd( 169.123, -197.515, 135.129, 0.23 ) }
    dend_81 { pt3dadd( 170.667, -198.979, 135.994, 2.27 ) }
    dend_81 { pt3dadd( 172.392, -200.451, 136.91, 0.23 ) }
    dend_81 { pt3dadd( 173.67, -201.444, 137.549, 0.91 ) }
    dend_81 { pt3dadd( 176.607, -203.524, 138.99, 0.23 ) }
    dend_81 { pt3dadd( 177.495, -204.113, 139.414, 0.68 ) }
    dend_81 { pt3dadd( 178.22, -204.586, 139.751, 0.23 ) }
    dend_81 { pt3dadd( 179.458, -205.36, 140.325, 1.59 ) }
    dend_81 { pt3dadd( 181.555, -206.608, 141.264, 0.23 ) }
    dend_81 { pt3dadd( 183.101, -207.561, 141.957, 0.23 ) }
    dend_81 { pt3dadd( 184.719, -208.667, 142.698, 1.59 ) }
    dend_81 { pt3dadd( 185.932, -209.609, 143.312, 0.68 ) }
    dend_81 { pt3dadd( 187.023, -210.546, 143.904, 0.23 ) }
    dend_81 { pt3dadd( 188.45, -211.862, 144.71, 0.23 ) }
    dend_81 { pt3dadd( 189.637, -213.044, 145.401, 0.23 ) }
    dend_81 { pt3dadd( 190.833, -214.345, 146.098, 2.5 ) }
    dend_81 { pt3dadd( 192.109, -215.829, 146.899, 0.23 ) }
    dend_81 { pt3dadd( 192.616, -216.45, 147.241, 0.91 ) }
    dend_81 { pt3dadd( 193.37, -217.536, 147.838, 0.23 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 156.982, -184.603, 128.371, 0.23 ) }
    dend_80 { pt3dadd( 157.949, -187.373, 129.863, 0.23 ) }
    dend_80 { pt3dadd( 158.198, -188.087, 130.247, 0.68 ) }
    dend_80 { pt3dadd( 158.578, -189.177, 130.834, 0.23 ) }
    dend_80 { pt3dadd( 159.231, -191.05, 131.842, 0.68 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 58/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 138.676, -161.486, 68.3104, 0.23 ) }
    dend_74 { pt3dadd( 139.993, -164.696, 68.7773, 0.23 ) }
    dend_74 { pt3dadd( 141.091, -167.461, 69.3425, 0.23 ) }
    dend_74 { pt3dadd( 141.805, -169.215, 69.7478, 0.23 ) }
    dend_74 { pt3dadd( 142.823, -171.609, 70.358, 1.59 ) }
    dend_74 { pt3dadd( 144.093, -174.476, 71.1178, 0.23 ) }
    dend_74 { pt3dadd( 145.05, -176.596, 71.6726, 0.91 ) }
    dend_74 { pt3dadd( 146.451, -179.389, 72.4905, 0.23 ) }
    dend_74 { pt3dadd( 147.061, -180.553, 72.8415, 0.91 ) }
    dend_74 { pt3dadd( 147.942, -182.053, 73.3102, 0.23 ) }
    dend_74 { pt3dadd( 149.287, -184.062, 73.9383, 1.59 ) }
    dend_74 { pt3dadd( 151.042, -186.341, 74.6059, 0.23 ) }
    dend_74 { pt3dadd( 152.279, -187.821, 75.007, 0.45 ) }
    dend_74 { pt3dadd( 153.518, -189.182, 75.3096, 0.23 ) }
    dend_74 { pt3dadd( 154.509, -190.25, 75.579, 0.91 ) }
    dend_74 { pt3dadd( 155.791, -191.637, 75.953, 0.23 ) }
    dend_74 { pt3dadd( 156.567, -192.461, 76.2072, 0.91 ) }
    dend_74 { pt3dadd( 157.187, -193.15, 76.4277, 0.23 ) }
    dend_74 { pt3dadd( 158.395, -194.596, 76.8707, 1.14 ) }
    dend_74 { pt3dadd( 159.695, -196.182, 77.3542, 0.23 ) }
    dend_74 { pt3dadd( 160.652, -197.451, 77.7025, 1.82 ) }
    dend_74 { pt3dadd( 161.223, -198.2, 77.8953, 1.82 ) }
    dend_74 { pt3dadd( 162.764, -200.249, 78.439, 0.23 ) }
    dend_74 { pt3dadd( 163.838, -201.583, 78.8083, 0.68 ) }
    dend_74 { pt3dadd( 164.222, -202.047, 78.9394, 0.23 ) }
    dend_74 { pt3dadd( 165.946, -203.98, 79.3162, 2.05 ) }
    dend_74 { pt3dadd( 167.898, -206.074, 79.6196, 0.23 ) }
    dend_74 { pt3dadd( 169.697, -207.96, 79.7738, 1.36 ) }
    dend_74 { pt3dadd( 171.877, -210.184, 79.7514, 0.23 ) }
    dend_74 { pt3dadd( 173.909, -212.322, 79.55, 0.23 ) }
    dend_74 { pt3dadd( 176.476, -215.083, 79.0988, 0.91 ) }
    dend_74 { pt3dadd( 177.106, -215.788, 78.9251, 0.23 ) }
    dend_74 { pt3dadd( 177.835, -216.702, 78.6463, 0.23 ) }
    dend_74 { pt3dadd( 179.068, -218.44, 78.0882, 0.91 ) }
    dend_74 { pt3dadd( 180.167, -220.319, 77.6056, 0.23 ) }
    dend_74 { pt3dadd( 180.74, -221.51, 77.3958, 1.14 ) }
    dend_74 { pt3dadd( 181.222, -222.6, 77.3128, 1.14 ) }
    dend_74 { pt3dadd( 182.064, -224.656, 77.2019, 0.23 ) }
    dend_74 { pt3dadd( 182.683, -226.271, 77.1204, 1.36 ) }
    dend_74 { pt3dadd( 183.562, -228.638, 77.008, 0.23 ) }
    dend_74 { pt3dadd( 184.372, -230.763, 76.8658, 2.05 ) }
    dend_74 { pt3dadd( 184.746, -231.732, 76.7955, 2.05 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_74 { pt3dadd( 186.04, -234.935, 76.5683, 0.68 ) }
    dend_74 { pt3dadd( 187.049, -237.291, 76.4221, 1.14 ) }
    dend_74 { pt3dadd( 188.047, -239.465, 76.3377, 0.23 ) }
    dend_74 { pt3dadd( 189.091, -241.681, 76.2827, 1.14 ) }
    dend_74 { pt3dadd( 190.548, -244.7, 76.3736, 0.23 ) }
    dend_74 { pt3dadd( 191.214, -246.085, 76.4688, 1.36 ) }
    dend_74 { pt3dadd( 192.304, -248.199, 76.7131, 2.05 ) }
    dend_74 { pt3dadd( 194.253, -251.758, 77.2074, 0.23 ) }
    dend_74 { pt3dadd( 195.369, -253.679, 77.4593, 0.91 ) }
    dend_74 { pt3dadd( 197.599, -257.357, 77.9208, 0.23 ) }
    dend_74 { pt3dadd( 198.797, -259.229, 78.1314, 0.23 ) }
    dend_74 { pt3dadd( 199.879, -260.86, 78.2775, 2.5 ) }
    dend_74 { pt3dadd( 202.038, -263.939, 78.4241, 0.23 ) }
    dend_74 { pt3dadd( 202.971, -265.162, 78.4308, 0.91 ) }
    dend_74 { pt3dadd( 204.053, -266.486, 78.3898, 0.23 ) }
    dend_74 { pt3dadd( 205.432, -268.111, 78.2211, 0.68 ) }
    dend_74 { pt3dadd( 207.54, -270.635, 77.9574, 0.23 ) }
    dend_74 { pt3dadd( 208.473, -271.825, 77.8379, 1.82 ) }
    dend_74 { pt3dadd( 209.643, -273.395, 77.7263, 0.23 ) }
    dend_74 { pt3dadd( 210.648, -274.787, 77.6657, 0.91 ) }
    dend_74 { pt3dadd( 212.28, -277.154, 77.5813, 0.23 ) }
    dend_74 { pt3dadd( 213.131, -278.491, 77.5532, 1.14 ) }
    dend_74 { pt3dadd( 213.794, -279.604, 77.5618, 0.23 ) }
    dend_74 { pt3dadd( 214.862, -281.429, 77.6303, 0.91 ) }
    dend_74 { pt3dadd( 216.192, -283.868, 77.7439, 0.23 ) }
    dend_74 { pt3dadd( 216.954, -285.229, 77.8579, 1.36 ) }
    dend_74 { pt3dadd( 217.725, -286.668, 77.9431, 0.23 ) }
    dend_74 { pt3dadd( 218.416, -287.935, 77.9902, 0.91 ) }
    dend_74 { pt3dadd( 220.143, -290.934, 78.0538, 0.23 ) }
    dend_74 { pt3dadd( 221.45, -293.133, 78.0112, 1.14 ) }
    dend_74 { pt3dadd( 222.684, -295.204, 77.9177, 1.82 ) }
    dend_74 { pt3dadd( 224.557, -298.323, 77.7692, 0.68 ) }
    dend_74 { pt3dadd( 225.386, -299.623, 77.7139, 1.36 ) }
    dend_74 { pt3dadd( 227.504, -302.808, 77.601, 0.23 ) }
    dend_74 { pt3dadd( 229.84, -306.215, 77.4748, 1.82 ) }
    dend_74 { pt3dadd( 231.185, -308.071, 77.4167, 0.23 ) }
    dend_74 { pt3dadd( 232.852, -310.298, 77.4002, 2.05 ) }
    dend_74 { pt3dadd( 234.399, -312.221, 77.5036, 0.23 ) }
    dend_74 { pt3dadd( 235.391, -313.452, 77.5159, 0.91 ) }
    dend_74 { pt3dadd( 237.007, -315.365, 77.3971, 0.23 ) }
    dend_74 { pt3dadd( 237.772, -316.275, 77.2812, 0.91 ) }
    dend_74 { pt3dadd( 239.307, -318.252, 76.9055, 0.23 ) }
    dend_74 { pt3dadd( 240.239, -319.696, 76.5751, 0.91 ) }
    dend_74 { pt3dadd( 241.921, -323.155, 75.7245, 0.23 ) }
    dend_74 { pt3dadd( 242.779, -325.555, 75.0979, 0.23 ) }
    dend_74 { pt3dadd( 243.219, -327.348, 74.6751, 1.82 ) }
    dend_74 { pt3dadd( 243.667, -330.103, 74.099, 0.23 ) }
    dend_74 { pt3dadd( 243.928, -332.9, 73.6068, 0.68 ) }
    dend_74 { pt3dadd( 244.119, -335.226, 73.348, 0.23 ) }
    dend_74 { pt3dadd( 244.339, -337.402, 73.2783, 0.91 ) }
    dend_74 { pt3dadd( 244.685, -339.506, 73.2839, 0.23 ) }
    dend_74 { pt3dadd( 245.099, -341.053, 73.252, 1.59 ) }
    dend_74 { pt3dadd( 245.467, -342.023, 73.2019, 1.59 ) }
    dend_74 { pt3dadd( 247.289, -345.764, 72.9508, 0.23 ) }
    dend_74 { pt3dadd( 249.011, -348.856, 72.6519, 1.14 ) }
    dend_74 { pt3dadd( 250.549, -351.474, 72.2999, 0.23 ) }
    dend_74 { pt3dadd( 251.747, -353.507, 71.9499, 0.23 ) }
    dend_74 { pt3dadd( 253.04, -355.667, 71.5804, 0.23 ) }
    dend_74 { pt3dadd( 253.98, -357.129, 71.3619, 0.45 ) }
    dend_74 { pt3dadd( 255.527, -359.413, 71.0157, 0.23 ) }
    dend_74 { pt3dadd( 256.538, -360.802, 70.8212, 1.36 ) }
    dend_74 { pt3dadd( 258.269, -363.098, 70.5458, 0.23 ) }
    dend_74 { pt3dadd( 260.14, -365.573, 70.409, 0.23 ) }
    dend_74 { pt3dadd( 262.248, -368.348, 70.3603, 1.14 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 64/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 138.676, -161.486, 68.3104, 0.23 ) }
    dend_73 { pt3dadd( 137.168, -162.202, 69.3985, 0.23 ) }
    dend_73 { pt3dadd( 136.4, -162.623, 70.0334, 0.68 ) }
    dend_73 { pt3dadd( 135.202, -163.411, 71.1895, 0.23 ) }
    dend_73 { pt3dadd( 134.569, -163.828, 71.8001, 0.68 ) }
    dend_73 { pt3dadd( 134.146, -164.106, 72.2084, 0.23 ) }
    dend_73 { pt3dadd( 133.5, -164.532, 72.8321, 0.91 ) }
    dend_73 { pt3dadd( 132.493, -165.382, 73.8229, 0.23 ) }
    dend_73 { pt3dadd( 131.876, -166.115, 74.4755, 0.91 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 73/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 171.671, -152.876, 66.3051, 0.23 ) }
    dend_71 { pt3dadd( 172.903, -153.241, 66.5354, 0.23 ) }
    dend_71 { pt3dadd( 174.907, -153.969, 66.91, 2.05 ) }
    dend_71 { pt3dadd( 175.978, -154.432, 67.1096, 2.05 ) }
    dend_71 { pt3dadd( 179.214, -156.038, 67.7125, 0.45 ) }
    dend_71 { pt3dadd( 180.275, -156.619, 67.8781, 0.68 ) }
    dend_71 { pt3dadd( 182.191, -157.735, 68.1404, 0.23 ) }
    dend_71 { pt3dadd( 183.991, -158.915, 68.3465, 1.14 ) }
    dend_71 { pt3dadd( 185.623, -160.204, 68.4939, 0.23 ) }
    dend_71 { pt3dadd( 186.621, -161.188, 68.5233, 0.68 ) }
    dend_71 { pt3dadd( 187.62, -162.409, 68.4762, 0.23 ) }
    dend_71 { pt3dadd( 188.289, -163.335, 68.4114, 0.91 ) }
    dend_71 { pt3dadd( 188.981, -164.457, 68.3056, 0.23 ) }
    dend_71 { pt3dadd( 190.168, -166.575, 68.0139, 0.68 ) }
    dend_71 { pt3dadd( 191.191, -168.672, 67.684, 0.23 ) }
    dend_71 { pt3dadd( 191.693, -170.082, 67.4458, 0.23 ) }
    dend_71 { pt3dadd( 191.999, -171.351, 67.1682, 0.23 ) }
    dend_71 { pt3dadd( 192.238, -172.805, 66.7747, 1.82 ) }
    dend_71 { pt3dadd( 192.603, -175.643, 65.944, 0.23 ) }
    dend_71 { pt3dadd( 192.717, -176.828, 65.5697, 0.91 ) }
    dend_71 { pt3dadd( 192.972, -180.038, 64.5417, 0.23 ) }
    dend_71 { pt3dadd( 193.072, -183.923, 63.179, 0.68 ) }
    dend_71 { pt3dadd( 193.034, -186.318, 62.269, 0.23 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 96/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 171.671, -152.876, 66.3051, 0.23 ) }
    dend_70 { pt3dadd( 171.927, -151.729, 66.7596, 0.23 ) }
    dend_70 { pt3dadd( 172.069, -150.869, 67.0727, 1.59 ) }
    dend_70 { pt3dadd( 172.185, -150.163, 67.3299, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_70 { pt3dadd( 172.391, -148.915, 67.784, 0.23 ) }
    dend_70 { pt3dadd( 172.691, -147.09, 68.4485, 0.23 ) }
    dend_70 { pt3dadd( 173.009, -145.161, 69.1511, 0.23 ) }
    dend_70 { pt3dadd( 173.17, -143.891, 69.6164, 1.14 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 4/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 63.1287, 137.732, -33.436, 0.23 ) }
    dend_37 { pt3dadd( 69.4956, 148.541, -30.9705, 0.23 ) }
    dend_37 { pt3dadd( 74.5789, 160.325, -30.8802, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 7/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 63.1287, 137.732, -33.436, 0.68 ) }
    dend_32 { pt3dadd( 70.2459, 144.131, -33.8424, 0.23 ) }
    dend_32 { pt3dadd( 77.1999, 150.533, -35.4213, 0.23 ) }
    dend_32 { pt3dadd( 83.6417, 157.654, -35.4703, 0.23 ) }
    dend_32 { pt3dadd( 89.665, 164.974, -37.0805, 0.23 ) }
    dend_32 { pt3dadd( 94.6915, 173.092, -38.4301, 0.23 ) }
    dend_32 { pt3dadd( 100.791, 180.434, -39.5846, 0.23 ) }
    dend_32 { pt3dadd( 107.093, 187.44, -41.4408, 0.23 ) }
    dend_32 { pt3dadd( 114.057, 193.996, -42.0663, 0.23 ) }
    dend_32 { pt3dadd( 122.248, 198.829, -42.7392, 0.23 ) }
    dend_32 { pt3dadd( 130.391, 203.656, -41.6266, 0.23 ) }
    dend_32 { pt3dadd( 137.729, 209.779, -41.1545, 0.23 ) }
    dend_32 { pt3dadd( 145.5, 215.32, -41.5575, 0.23 ) }
    dend_32 { pt3dadd( 154.21, 218.951, -40.4284, 0.23 ) }
    dend_32 { pt3dadd( 162.572, 223.504, -40.7721, 0.23 ) }
    dend_32 { pt3dadd( 171.036, 227.863, -40.6185, 0.23 ) }
    dend_32 { pt3dadd( 179.316, 232.15, -38.7164, 0.23 ) }
    dend_32 { pt3dadd( 187.761, 235.854, -36.4225, 0.23 ) }
    dend_32 { pt3dadd( 196.7, 237.561, -33.7891, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 26/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 46.4038, 129.266, -53.1398, 0.23 ) }
    dend_30 { pt3dadd( 49.1737, 133.716, -54.7168, 0.23 ) }
    dend_30 { pt3dadd( 51.4482, 138.641, -55.5257, 0.23 ) }
    dend_30 { pt3dadd( 52.8531, 143.824, -56.7265, 0.23 ) }
    dend_30 { pt3dadd( 53.7964, 149.095, -58.0267, 0.23 ) }
    dend_30 { pt3dadd( 55.2295, 154.288, -59.1466, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 32/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 46.4038, 129.266, -53.1398, 0.68 ) }
    dend_29 { pt3dadd( 50.0725, 135.106, -55.5968, 0.23 ) }
    dend_29 { pt3dadd( 52.3522, 141.567, -58.2567, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 35/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -234.245, -145.276, 35.7122, 2.73 ) }
    dend_12 { pt3dadd( -236.943, -146.753, 35.4667, 2.73 ) }
    dend_12 { pt3dadd( -238.916, -147.979, 35.193, 1.59 ) }
    dend_12 { pt3dadd( -240.874, -149.392, 34.897, 0.68 ) }
    dend_12 { pt3dadd( -242.648, -150.899, 34.6387, 0.68 ) }
    dend_12 { pt3dadd( -244.158, -152.349, 34.4344, 0.45 ) }
    dend_12 { pt3dadd( -245.613, -153.914, 34.2524, 0.45 ) }
    dend_12 { pt3dadd( -246.853, -155.519, 34.1303, 0.45 ) }
    dend_12 { pt3dadd( -248.366, -157.676, 34.0787, 1.14 ) }
    dend_12 { pt3dadd( -249.89, -159.942, 34.209, 0.23 ) }
    dend_12 { pt3dadd( -250.853, -161.356, 34.3954, 0.23 ) }
    dend_12 { pt3dadd( -252.166, -163.353, 34.8552, 1.59 ) }
    dend_12 { pt3dadd( -253.167, -164.833, 35.3324, 1.59 ) }
    dend_12 { pt3dadd( -254.964, -167.225, 36.2814, 0.23 ) }
    dend_12 { pt3dadd( -256.768, -169.331, 37.2361, 2.27 ) }
    dend_12 { pt3dadd( -258.51, -171.111, 38.1008, 0.91 ) }
    dend_12 { pt3dadd( -260.249, -172.774, 38.934, 0.23 ) }
    dend_12 { pt3dadd( -261.392, -173.86, 39.4678, 1.14 ) }
    dend_12 { pt3dadd( -262.659, -175.072, 40.0357, 1.82 ) }
    dend_12 { pt3dadd( -263.824, -176.204, 40.4812, 1.14 ) }
    dend_12 { pt3dadd( -265.746, -177.961, 41.0823, 0.23 ) }
    dend_12 { pt3dadd( -268.105, -180.082, 41.7733, 2.05 ) }
    dend_12 { pt3dadd( -269.086, -180.908, 41.9842, 2.05 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 58/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -234.245, -145.276, 35.7122, 0.45 ) }
    dend_9 { pt3dadd( -236.456, -145.87, 36.0008, 0.45 ) }
    dend_9 { pt3dadd( -237.512, -146.144, 36.1594, 0.45 ) }
    dend_9 { pt3dadd( -238.167, -146.324, 36.2675, 0.45 ) }
    dend_9 { pt3dadd( -240.133, -146.886, 36.601, 1.82 ) }
    dend_9 { pt3dadd( -241.874, -147.386, 36.8906, 0.23 ) }
    dend_9 { pt3dadd( -242.725, -147.634, 37.0268, 1.36 ) }
    dend_9 { pt3dadd( -243.918, -148.037, 37.2736, 2.05 ) }
    dend_9 { pt3dadd( -245.088, -148.458, 37.5443, 0.23 ) }
    dend_9 { pt3dadd( -245.531, -148.605, 37.6576, 1.36 ) }
    dend_9 { pt3dadd( -246.487, -148.904, 37.9183, 0.23 ) }
    dend_9 { pt3dadd( -247.357, -149.166, 38.1877, 1.36 ) }
    dend_9 { pt3dadd( -248.622, -149.512, 38.5866, 0.23 ) }
    dend_9 { pt3dadd( -249.927, -149.819, 38.966, 0.23 ) }
    dend_9 { pt3dadd( -251.345, -150.065, 39.3835, 1.36 ) }
    dend_9 { pt3dadd( -252.123, -150.168, 39.6061, 0.91 ) }
    dend_9 { pt3dadd( -253.048, -150.268, 39.8768, 0.91 ) }
    dend_9 { pt3dadd( -254.033, -150.336, 40.1594, 0.23 ) }
    dend_9 { pt3dadd( -255.426, -150.408, 40.6242, 0.23 ) }
    dend_9 { pt3dadd( -256.851, -150.499, 41.2381, 1.36 ) }
    dend_9 { pt3dadd( -257.628, -150.545, 41.641, 1.36 ) }
    dend_9 { pt3dadd( -259.02, -150.579, 42.4705, 0.23 ) }
    dend_9 { pt3dadd( -261.084, -150.59, 43.7931, 1.14 ) }
    dend_9 { pt3dadd( -262.912, -150.574, 45.0369, 0.23 ) }
    dend_9 { pt3dadd( -264.221, -150.566, 45.9517, 1.14 ) }
    dend_9 { pt3dadd( -265.176, -150.564, 46.6035, 0.23 ) }
    dend_9 { pt3dadd( -266.338, -150.563, 47.369, 0.23 ) }
    dend_9 { pt3dadd( -267.355, -150.561, 47.9662, 2.05 ) }
    dend_9 { pt3dadd( -267.873, -150.584, 48.2305, 2.5 ) }
    dend_9 { pt3dadd( -269.921, -150.742, 49.0396, 0.23 ) }
    dend_9 { pt3dadd( -270.668, -150.825, 49.2859, 0.23 ) }
    dend_9 { pt3dadd( -271.56, -150.969, 49.5978, 2.05 ) }
    dend_9 { pt3dadd( -273.136, -151.302, 50.2284, 2.05 ) }
    dend_9 { pt3dadd( -274.102, -151.541, 50.6814, 0.23 ) }
    dend_9 { pt3dadd( -274.869, -151.775, 51.082, 0.91 ) }
    dend_9 { pt3dadd( -275.79, -152.167, 51.6727, 0.23 ) }
    dend_9 { pt3dadd( -276.668, -152.68, 52.401, 1.59 ) }
    dend_9 { pt3dadd( -277.769, -153.613, 53.9512, 0.23 ) }
    dend_9 { pt3dadd( -277.904, -153.751, 54.2626, 0.23 ) }
    dend_9 { pt3dadd( -278.128, -153.936, 54.9337, 1.36 ) }
    dend_9 { pt3dadd( -278.607, -154.216, 56.5901, 0.23 ) }
    dend_9 { pt3dadd( -278.987, -154.303, 58.015, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_9 { pt3dadd( -279.82, -154.146, 60.9496, 0.23 ) }
    dend_9 { pt3dadd( -280.418, -153.873, 63.1007, 0.23 ) }
    dend_9 { pt3dadd( -281.019, -153.49, 65.1639, 0.23 ) }
    dend_9 { pt3dadd( -281.268, -153.276, 65.9561, 0.91 ) }
    dend_9 { pt3dadd( -281.765, -152.734, 67.2991, 0.23 ) }
    dend_9 { pt3dadd( -282.055, -152.379, 67.9525, 0.91 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 6/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 330.108, 154.396, 13.0499, 0.23 ) }
    dend_101 { pt3dadd( 332.13, 155.234, 13.4026, 0.23 ) }
    dend_101 { pt3dadd( 333.864, 156.058, 13.7431, 1.36 ) }
    dend_101 { pt3dadd( 336.336, 157.198, 14.2281, 0.23 ) }
    dend_101 { pt3dadd( 338.051, 157.962, 14.5499, 0.68 ) }
    dend_101 { pt3dadd( 339.93, 158.729, 14.874, 0.23 ) }
    dend_101 { pt3dadd( 341.986, 159.548, 15.2817, 1.82 ) }
    dend_101 { pt3dadd( 343.433, 160.072, 15.5361, 2.5 ) }
    dend_101 { pt3dadd( 346.479, 160.973, 15.9739, 0.23 ) }
    dend_101 { pt3dadd( 347.703, 161.24, 16.1212, 0.91 ) }
    dend_101 { pt3dadd( 349.845, 161.628, 16.3862, 0.91 ) }
    dend_101 { pt3dadd( 352.44, 162.029, 16.7299, 0.23 ) }
    dend_101 { pt3dadd( 355.122, 162.405, 17.0571, 2.05 ) }
    dend_101 { pt3dadd( 358.298, 162.799, 17.4815, 0.23 ) }
    dend_101 { pt3dadd( 360.208, 163.08, 17.7946, 0.91 ) }
    dend_101 { pt3dadd( 362.853, 163.516, 18.258, 0.23 ) }
    dend_101 { pt3dadd( 364.524, 163.851, 18.5938, 2.05 ) }
    dend_101 { pt3dadd( 366.378, 164.259, 18.9807, 0.23 ) }
    dend_101 { pt3dadd( 367.986, 164.691, 19.3709, 1.14 ) }
    dend_101 { pt3dadd( 370.648, 165.648, 19.9736, 0.91 ) }
    dend_101 { pt3dadd( 373.165, 166.692, 20.4333, 0.23 ) }
    dend_101 { pt3dadd( 374.965, 167.42, 20.7148, 0.23 ) }
    dend_101 { pt3dadd( 376.333, 168.016, 20.9448, 0.23 ) }
    dend_101 { pt3dadd( 378.071, 168.833, 21.2497, 2.5 ) }
    dend_101 { pt3dadd( 380.439, 170.121, 21.6367, 0.23 ) }
    dend_101 { pt3dadd( 382.563, 171.475, 21.8619, 1.14 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 32/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 330.108, 154.396, 13.0499, 0.45 ) }
    dend_100 { pt3dadd( 330.151, 153.897, 16.2168, 0.45 ) }
    dend_100 { pt3dadd( 330.392, 153.242, 19.5471, 0.45 ) }
    dend_100 { pt3dadd( 330.814, 152.098, 25.3691, 0.45 ) }
    dend_100 { pt3dadd( 330.925, 151.799, 26.8903, 0.91 ) }
    dend_100 { pt3dadd( 331.008, 151.574, 28.0379, 0.23 ) }
    dend_100 { pt3dadd( 331.219, 151.001, 30.9522, 0.23 ) }
    dend_100 { pt3dadd( 331.279, 150.601, 33.4117, 0.68 ) }
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 40/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 208.871, 366.569, -102.411, 0.23 ) }
    dend_91 { pt3dadd( 212.222, 375.151, -107.968, 0.23 ) }
    dend_91 { pt3dadd( 215.689, 384.866, -111.103, 0.23 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 43/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 208.871, 366.569, -102.411, 0.68 ) }
    dend_90 { pt3dadd( 210.9, 375.892, -106.1, 0.23 ) }
    dend_90 { pt3dadd( 211.671, 385.867, -108.324, 0.23 ) }
    dend_90 { pt3dadd( 211.902, 395.94, -110.201, 0.23 ) }
    dend_90 { pt3dadd( 212.94, 405.958, -112.097, 0.23 ) }
    dend_90 { pt3dadd( 213.28, 416.096, -113.569, 0.23 ) }
    dend_90 { pt3dadd( 214.486, 425.728, -116.83, 0.23 ) }
    dend_90 { pt3dadd( 216.815, 435.588, -118.341, 0.23 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 51/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 193.37, -217.536, 147.838, 0.23 ) }
    dend_83 { pt3dadd( 194.878, -219.713, 147.096, 0.23 ) }
    dend_83 { pt3dadd( 195.798, -220.984, 146.734, 1.14 ) }
    dend_83 { pt3dadd( 197.3, -223.061, 146.144, 0.23 ) }
    dend_83 { pt3dadd( 199.526, -226.138, 145.269, 1.14 ) }
    dend_83 { pt3dadd( 201.668, -229.099, 144.427, 0.23 ) }
    dend_83 { pt3dadd( 202.28, -229.946, 144.186, 1.14 ) }
    dend_83 { pt3dadd( 203.415, -231.468, 143.79, 0.23 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 59/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 193.37, -217.536, 147.838, 0.68 ) }
    dend_82 { pt3dadd( 195.33, -215.885, 148.325, 0.68 ) }
    dend_82 { pt3dadd( 197.637, -213.982, 149.348, 0.23 ) }
    dend_82 { pt3dadd( 198.475, -213.386, 149.73, 0.23 ) }
    dend_82 { pt3dadd( 199.548, -212.624, 150.221, 0.91 ) }
    dend_82 { pt3dadd( 201.231, -211.428, 150.989, 0.23 ) }
    dend_82 { pt3dadd( 202.831, -210.29, 151.721, 1.14 ) }
    dend_82 { pt3dadd( 206.477, -207.223, 153.369, 0.23 ) }
    dend_82 { pt3dadd( 207.713, -206.189, 153.949, 0.68 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 68/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 196.7, 237.561, -33.7891, 0.23 ) }
    dend_34 { pt3dadd( 203.716, 240.416, -38.5768, 0.23 ) }
    dend_34 { pt3dadd( 210.667, 243.366, -43.406, 0.23 ) }
    dend_34 { pt3dadd( 218.013, 246.93, -47.1354, 0.23 ) }
    dend_34 { pt3dadd( 226.134, 249.256, -50.1191, 0.23 ) }
    dend_34 { pt3dadd( 234.556, 250.136, -52.9969, 0.23 ) }
    dend_34 { pt3dadd( 242.567, 250.168, -56.9659, 0.23 ) }
    dend_34 { pt3dadd( 249.681, 250.817, -62.3435, 0.23 ) }
    dend_34 { pt3dadd( 257.612, 249.412, -66.2308, 0.23 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 77/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 196.7, 237.561, -33.7891, 0.68 ) }
    dend_33 { pt3dadd( 202.89, 245.487, -32.0702, 0.23 ) }
    dend_33 { pt3dadd( 208.197, 253.508, -28.7161, 0.23 ) }
    dend_33 { pt3dadd( 213.254, 261.287, -24.5526, 0.23 ) }
    dend_33 { pt3dadd( 217.99, 268.176, -18.8253, 0.23 ) }
    dend_33 { pt3dadd( 222.586, 274.13, -12.0739, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 83/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -269.086, -180.908, 41.9842, 0.68 ) }
    dend_14 { pt3dadd( -271.088, -183.214, 43.349, 0.68 ) }
    dend_14 { pt3dadd( -272.297, -184.444, 44.1205, 0.68 ) }
    dend_14 { pt3dadd( -273.887, -186.044, 45.1044, 1.36 ) }
    dend_14 { pt3dadd( -275.028, -187.244, 45.9198, 1.82 ) }
    dend_14 { pt3dadd( -275.985, -188.282, 46.6878, 1.82 ) }
    dend_14 { pt3dadd( -277.02, -189.47, 47.5749, 0.45 ) }
    dend_14 { pt3dadd( -278.859, -191.676, 49.2402, 1.36 ) }
    dend_14 { pt3dadd( -279.422, -192.428, 49.7638, 1.36 ) }
    dend_14 { pt3dadd( -281.266, -195.035, 51.501, 0.23 ) }
    dend_14 { pt3dadd( -282.348, -196.6, 52.4638, 0.91 ) }
    dend_14 { pt3dadd( -283.065, -197.634, 53.0573, 0.91 ) }
    dend_14 { pt3dadd( -284.246, -199.33, 53.9008, 0.23 ) }
    dend_14 { pt3dadd( -285.446, -201.054, 54.5831, 0.23 ) }
    dend_14 { pt3dadd( -286.672, -202.64, 55.086, 1.36 ) }
    dend_14 { pt3dadd( -288.484, -204.739, 55.6527, 0.23 ) }
    dend_14 { pt3dadd( -289.668, -206.0, 55.9863, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_14 { pt3dadd( -291.539, -207.77, 56.5376, 0.23 ) }
    dend_14 { pt3dadd( -293.108, -209.166, 57.0204, 0.23 ) }
    dend_14 { pt3dadd( -295.099, -210.997, 57.6682, 1.36 ) }
    dend_14 { pt3dadd( -297.605, -213.409, 58.6035, 0.23 ) }
    dend_14 { pt3dadd( -298.746, -214.59, 59.1025, 0.23 ) }
    dend_14 { pt3dadd( -300.248, -216.228, 59.814, 1.82 ) }
    dend_14 { pt3dadd( -301.119, -217.24, 60.2525, 2.27 ) }
    dend_14 { pt3dadd( -302.71, -219.352, 61.0806, 0.23 ) }
    dend_14 { pt3dadd( -304.272, -221.757, 61.884, 1.14 ) }
    dend_14 { pt3dadd( -305.287, -223.489, 62.3333, 0.23 ) }
    dend_14 { pt3dadd( -306.221, -225.155, 62.712, 1.36 ) }
    dend_14 { pt3dadd( -306.854, -226.306, 62.9267, 1.36 ) }
    dend_14 { pt3dadd( -308.426, -229.084, 63.3967, 0.23 ) }
    dend_14 { pt3dadd( -309.366, -230.629, 63.6199, 0.23 ) }
    dend_14 { pt3dadd( -310.466, -232.545, 63.8369, 1.82 ) }
    dend_14 { pt3dadd( -311.119, -233.686, 63.9662, 1.82 ) }
    dend_14 { pt3dadd( -312.23, -235.75, 64.2681, 0.45 ) }
    dend_14 { pt3dadd( -312.876, -236.952, 64.5008, 1.14 ) }
    dend_14 { pt3dadd( -313.724, -238.482, 64.8814, 1.14 ) }
    dend_14 { pt3dadd( -315.026, -240.834, 65.5885, 0.23 ) }
    dend_14 { pt3dadd( -316.229, -243.006, 66.379, 1.59 ) }
    dend_14 { pt3dadd( -317.718, -245.687, 67.5189, 0.23 ) }
    dend_14 { pt3dadd( -318.878, -247.736, 68.4509, 2.05 ) }
    dend_14 { pt3dadd( -320.087, -249.818, 69.4224, 0.23 ) }
    dend_14 { pt3dadd( -320.998, -251.481, 70.2113, 0.68 ) }
    dend_14 { pt3dadd( -322.257, -253.781, 71.3055, 0.23 ) }
    dend_14 { pt3dadd( -323.134, -255.524, 72.0916, 1.14 ) }
    dend_14 { pt3dadd( -324.449, -258.267, 73.211, 0.23 ) }
    dend_14 { pt3dadd( -324.937, -259.43, 73.642, 1.14 ) }
    dend_14 { pt3dadd( -326.484, -263.342, 74.9497, 0.23 ) }
    dend_14 { pt3dadd( -326.888, -264.406, 75.2641, 0.23 ) }
    dend_14 { pt3dadd( -327.46, -265.999, 75.6738, 1.36 ) }
    dend_14 { pt3dadd( -327.905, -267.305, 75.9803, 1.36 ) }
    dend_14 { pt3dadd( -328.901, -270.384, 76.7197, 0.23 ) }
    dend_14 { pt3dadd( -329.622, -272.605, 77.227, 1.82 ) }
    dend_14 { pt3dadd( -330.222, -274.285, 77.554, 0.23 ) }
    dend_14 { pt3dadd( -330.712, -275.6, 77.8137, 0.23 ) }
    dend_14 { pt3dadd( -331.503, -277.488, 78.1852, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 38/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -269.086, -180.908, 41.9842, 0.23 ) }
    dend_13 { pt3dadd( -272.669, -183.106, 42.5146, 0.23 ) }
    dend_13 { pt3dadd( -275.483, -184.609, 42.9711, 0.68 ) }
    dend_13 { pt3dadd( -276.679, -185.188, 43.1573, 0.23 ) }
    dend_13 { pt3dadd( -278.881, -186.232, 43.4952, 1.36 ) }
    dend_13 { pt3dadd( -281.224, -187.293, 43.8277, 0.45 ) }
    dend_13 { pt3dadd( -282.623, -187.907, 44.0109, 0.23 ) }
    dend_13 { pt3dadd( -284.675, -188.685, 44.2608, 1.14 ) }
    dend_13 { pt3dadd( -287.011, -189.495, 44.4811, 0.23 ) }
    dend_13 { pt3dadd( -288.165, -189.912, 44.5614, 1.36 ) }
    dend_13 { pt3dadd( -289.607, -190.438, 44.6353, 1.36 ) }
    dend_13 { pt3dadd( -290.603, -190.816, 44.7068, 2.05 ) }
    dend_13 { pt3dadd( -293.654, -192.136, 45.0382, 0.45 ) }
    dend_13 { pt3dadd( -294.926, -192.773, 45.2095, 0.91 ) }
    dend_13 { pt3dadd( -296.155, -193.428, 45.426, 0.23 ) }
    dend_13 { pt3dadd( -297.799, -194.303, 45.8033, 1.59 ) }
    dend_13 { pt3dadd( -301.042, -195.97, 46.6267, 0.23 ) }
    dend_13 { pt3dadd( -303.594, -197.215, 47.2904, 1.36 ) }
    dend_13 { pt3dadd( -305.395, -198.058, 47.753, 0.23 ) }
    dend_13 { pt3dadd( -307.246, -198.916, 48.2182, 1.59 ) }
    dend_13 { pt3dadd( -310.668, -200.541, 49.028, 0.23 ) }
    dend_13 { pt3dadd( -312.556, -201.486, 49.4217, 0.91 ) }
    dend_13 { pt3dadd( -314.236, -202.342, 49.6848, 0.23 ) }
    dend_13 { pt3dadd( -316.369, -203.463, 49.8389, 1.36 ) }
    dend_13 { pt3dadd( -317.564, -204.149, 49.8121, 0.45 ) }
    dend_13 { pt3dadd( -319.897, -205.697, 49.4999, 1.59 ) }
    dend_13 { pt3dadd( -322.262, -207.475, 48.9268, 0.23 ) }
    dend_13 { pt3dadd( -323.466, -208.435, 48.5879, 1.14 ) }
    dend_13 { pt3dadd( -326.467, -210.826, 47.6399, 0.23 ) }
    dend_13 { pt3dadd( -328.856, -212.63, 46.8253, 0.23 ) }
    dend_13 { pt3dadd( -331.957, -214.756, 45.7772, 2.05 ) }
    dend_13 { pt3dadd( -334.169, -216.161, 45.0485, 0.45 ) }
    dend_13 { pt3dadd( -336.168, -217.372, 44.4664, 1.36 ) }
    dend_13 { pt3dadd( -337.285, -218.021, 44.2061, 0.23 ) }
    dend_13 { pt3dadd( -339.295, -219.09, 43.8617, 1.14 ) }
    dend_13 { pt3dadd( -342.855, -220.941, 43.4175, 0.23 ) }
    dend_13 { pt3dadd( -344.319, -221.711, 43.2771, 1.36 ) }
    dend_13 { pt3dadd( -346.926, -223.161, 43.042, 0.23 ) }
    dend_13 { pt3dadd( -348.293, -223.991, 42.8979, 0.23 ) }
    dend_13 { pt3dadd( -349.946, -225.118, 42.7257, 1.14 ) }
    dend_13 { pt3dadd( -353.323, -227.701, 42.3782, 0.23 ) }
    dend_13 { pt3dadd( -355.531, -229.521, 42.1046, 0.23 ) }
    dend_13 { pt3dadd( -357.215, -231.022, 41.8302, 0.23 ) }
    dend_13 { pt3dadd( -358.184, -231.945, 41.6487, 0.23 ) }
    dend_13 { pt3dadd( -360.695, -234.538, 41.1587, 1.36 ) }
    dend_13 { pt3dadd( -361.908, -235.898, 40.9364, 0.23 ) }
    dend_13 { pt3dadd( -363.565, -237.791, 40.643, 1.36 ) }
    dend_13 { pt3dadd( -365.916, -240.432, 40.2708, 0.23 ) }
    dend_13 { pt3dadd( -367.336, -241.899, 40.0729, 1.14 ) }
    dend_13 { pt3dadd( -369.864, -244.108, 39.7388, 0.23 ) }
    dend_13 { pt3dadd( -371.404, -245.218, 39.5466, 1.36 ) }
    dend_13 { pt3dadd( -374.554, -247.101, 39.2034, 0.23 ) }
    dend_13 { pt3dadd( -376.803, -248.147, 38.9746, 0.91 ) }
    dend_13 { pt3dadd( -378.96, -248.863, 38.737, 0.23 ) }
    dend_13 { pt3dadd( -382.429, -249.784, 38.2145, 2.5 ) }
    dend_13 { pt3dadd( -385.593, -250.503, 37.6175, 0.23 ) }
    dend_13 { pt3dadd( -386.813, -250.797, 37.3482, 1.14 ) }
    dend_13 { pt3dadd( -389.923, -251.688, 36.5141, 0.23 ) }
    dend_13 { pt3dadd( -392.018, -252.417, 35.847, 1.36 ) }
    dend_13 { pt3dadd( -395.662, -253.946, 34.5475, 0.23 ) }
    dend_13 { pt3dadd( -397.237, -254.677, 33.9083, 0.23 ) }
    dend_13 { pt3dadd( -399.303, -255.664, 32.9018, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_13 { pt3dadd( -401.553, -256.72, 31.6779, 0.23 ) }
    dend_13 { pt3dadd( -403.449, -257.56, 30.5361, 0.68 ) }
    dend_13 { pt3dadd( -404.508, -257.962, 29.8876, 0.23 ) }
    dend_13 { pt3dadd( -406.015, -258.404, 29.0016, 1.36 ) }
    dend_13 { pt3dadd( -407.715, -258.788, 28.1124, 0.23 ) }
    dend_13 { pt3dadd( -409.625, -259.124, 27.227, 2.27 ) }
    dend_13 { pt3dadd( -412.595, -259.561, 26.0618, 0.23 ) }
    dend_13 { pt3dadd( -414.896, -259.848, 25.2088, 0.23 ) }
    dend_13 { pt3dadd( -417.225, -260.072, 24.4424, 0.91 ) }
    dend_13 { pt3dadd( -419.919, -260.326, 23.7428, 0.23 ) }
    dend_13 { pt3dadd( -421.659, -260.449, 23.4002, 0.23 ) }
    dend_13 { pt3dadd( -423.518, -260.553, 23.0893, 1.14 ) }
    dend_13 { pt3dadd( -425.763, -260.57, 22.7531, 0.23 ) }
    dend_13 { pt3dadd( -428.093, -260.469, 22.4217, 0.23 ) }
    dend_13 { pt3dadd( -430.614, -260.245, 22.1248, 1.36 ) }
    dend_13 { pt3dadd( -433.405, -260.014, 21.87, 0.23 ) }
    dend_13 { pt3dadd( -434.832, -259.94, 21.7933, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 17/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -282.055, -152.379, 67.9525, 0.23 ) }
    dend_11 { pt3dadd( -284.079, -153.611, 68.4541, 0.23 ) }
    dend_11 { pt3dadd( -285.707, -154.639, 69.1564, 1.14 ) }
    dend_11 { pt3dadd( -288.639, -156.637, 70.6791, 0.23 ) }
    dend_11 { pt3dadd( -290.12, -157.762, 71.5319, 0.23 ) }
    dend_11 { pt3dadd( -291.621, -159.05, 72.4825, 0.23 ) }
    dend_11 { pt3dadd( -294.041, -161.361, 74.113, 0.91 ) }
    dend_11 { pt3dadd( -296.319, -163.951, 76.1807, 0.23 ) }
    dend_11 { pt3dadd( -297.14, -164.979, 77.0468, 0.68 ) }
    dend_11 { pt3dadd( -298.234, -166.558, 78.4364, 0.23 ) }
    dend_11 { pt3dadd( -299.009, -167.836, 79.521, 1.14 ) }
    dend_11 { pt3dadd( -299.771, -169.237, 80.7812, 0.23 ) }
    dend_11 { pt3dadd( -300.805, -171.974, 82.7948, 2.05 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -282.055, -152.379, 67.9525, 0.23 ) }
    dend_10 { pt3dadd( -283.182, -149.168, 68.9818, 0.23 ) }
    dend_10 { pt3dadd( -284.269, -145.532, 70.1516, 0.23 ) }
    dend_10 { pt3dadd( -284.853, -143.577, 70.7806, 1.14 ) }
    dend_10 { pt3dadd( -285.485, -141.465, 71.4601, 0.23 ) }
    dend_10 { pt3dadd( -286.164, -139.194, 72.1905, 0.23 ) }
    dend_10 { pt3dadd( -286.96, -136.53, 73.0477, 0.23 ) }
    dend_10 { pt3dadd( -287.215, -135.538, 73.4729, 0.91 ) }
    // Section: dend_105, id: dend_105, parent: dend_101 (entry count 38/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 382.563, 171.475, 21.8619, 0.23 ) }
    dend_105 { pt3dadd( 385.589, 172.77, 21.4045, 0.23 ) }
    dend_105 { pt3dadd( 389.305, 174.342, 20.8575, 0.68 ) }
    dend_105 { pt3dadd( 391.763, 175.461, 20.5873, 0.23 ) }
    dend_105 { pt3dadd( 393.532, 176.303, 20.4341, 0.91 ) }
    dend_105 { pt3dadd( 396.817, 177.921, 20.0743, 0.23 ) }
    dend_105 { pt3dadd( 399.771, 179.441, 19.6315, 0.91 ) }
    dend_105 { pt3dadd( 401.604, 180.447, 19.3281, 0.23 ) }
    dend_105 { pt3dadd( 404.921, 182.348, 18.6739, 0.23 ) }
    dend_105 { pt3dadd( 407.92, 184.155, 17.9302, 1.14 ) }
    dend_105 { pt3dadd( 411.374, 186.223, 16.9924, 0.23 ) }
    dend_105 { pt3dadd( 414.132, 187.936, 16.1439, 0.23 ) }
    dend_105 { pt3dadd( 415.725, 188.94, 15.593, 0.23 ) }
    dend_105 { pt3dadd( 417.083, 189.844, 15.0359, 0.23 ) }
    dend_105 { pt3dadd( 419.697, 191.55, 13.6433, 1.14 ) }
    // Section: dend_102, id: dend_102, parent: dend_101 (entry count 53/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 382.563, 171.475, 21.8619, 0.23 ) }
    dend_102 { pt3dadd( 385.391, 172.275, 22.4262, 0.23 ) }
    dend_102 { pt3dadd( 387.914, 172.988, 22.9295, 2.27 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 56/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 215.689, 384.866, -111.103, 0.23 ) }
    dend_93 { pt3dadd( 217.114, 388.816, -112.944, 0.23 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 58/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 215.689, 384.866, -111.103, 0.68 ) }
    dend_92 { pt3dadd( 219.271, 392.52, -115.393, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 60/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 257.612, 249.412, -66.2308, 0.23 ) }
    dend_36 { pt3dadd( 265.838, 250.559, -69.1027, 0.23 ) }
    dend_36 { pt3dadd( 273.65, 252.266, -72.7622, 0.23 ) }
    dend_36 { pt3dadd( 280.885, 253.69, -77.5512, 0.23 ) }
    dend_36 { pt3dadd( 288.115, 254.176, -82.5159, 0.23 ) }
    dend_36 { pt3dadd( 295.272, 255.444, -87.4602, 0.23 ) }
    dend_36 { pt3dadd( 301.732, 257.372, -93.1174, 0.23 ) }
    dend_36 { pt3dadd( 309.003, 258.41, -97.9439, 0.23 ) }
    dend_36 { pt3dadd( 315.91, 261.186, -102.662, 0.23 ) }
    dend_36 { pt3dadd( 322.419, 264.669, -107.503, 0.23 ) }
    dend_36 { pt3dadd( 328.131, 267.268, -113.689, 0.23 ) }
    dend_36 { pt3dadd( 334.474, 269.965, -119.181, 0.23 ) }
    dend_36 { pt3dadd( 341.01, 272.869, -124.337, 0.23 ) }
    dend_36 { pt3dadd( 346.296, 274.277, -131.223, 0.23 ) }
    dend_36 { pt3dadd( 351.498, 276.841, -137.859, 0.23 ) }
    dend_36 { pt3dadd( 356.128, 278.864, -145.069, 0.23 ) }
    dend_36 { pt3dadd( 359.895, 281.604, -152.555, 0.23 ) }
    dend_36 { pt3dadd( 362.908, 285.279, -160.007, 0.23 ) }
    dend_36 { pt3dadd( 366.555, 289.117, -167.088, 0.23 ) }
    dend_36 { pt3dadd( 370.135, 292.763, -174.297, 0.23 ) }
    dend_36 { pt3dadd( 374.058, 297.397, -180.752, 0.23 ) }
    dend_36 { pt3dadd( 376.89, 303.832, -186.239, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 82/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 257.612, 249.412, -66.2308, 0.68 ) }
    dend_35 { pt3dadd( 266.167, 251.248, -71.2076, 0.23 ) }
    dend_35 { pt3dadd( 275.349, 252.627, -75.0919, 0.23 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 85/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -331.503, -277.488, 78.1852, 0.23 ) }
    dend_16 { pt3dadd( -332.27, -278.579, 78.3608, 0.23 ) }
    dend_16 { pt3dadd( -333.905, -280.661, 78.6652, 2.5 ) }
    dend_16 { pt3dadd( -336.639, -283.928, 79.113, 0.23 ) }
    dend_16 { pt3dadd( -337.707, -285.175, 79.2795, 1.36 ) }
    dend_16 { pt3dadd( -339.052, -286.716, 79.4809, 0.23 ) }
    dend_16 { pt3dadd( -340.253, -287.996, 79.6643, 0.68 ) }
    dend_16 { pt3dadd( -342.452, -290.121, 79.9889, 0.23 ) }
    dend_16 { pt3dadd( -343.981, -291.467, 80.2115, 0.91 ) }
    dend_16 { pt3dadd( -344.772, -292.088, 80.3205, 0.23 ) }
    dend_16 { pt3dadd( -345.778, -292.885, 80.4696, 1.36 ) }
    dend_16 { pt3dadd( -348.17, -294.867, 80.8578, 0.23 ) }
    dend_16 { pt3dadd( -348.995, -295.61, 81.0054, 0.23 ) }
    dend_16 { pt3dadd( -349.886, -296.516, 81.2216, 1.59 ) }
    dend_16 { pt3dadd( -350.764, -297.469, 81.4635, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_16 { pt3dadd( -353.44, -300.536, 82.3492, 0.23 ) }
    dend_16 { pt3dadd( -354.671, -302.103, 82.8368, 2.05 ) }
    dend_16 { pt3dadd( -356.251, -304.425, 83.6159, 0.23 ) }
    dend_16 { pt3dadd( -357.532, -306.44, 84.3379, 1.59 ) }
    dend_16 { pt3dadd( -358.273, -307.681, 84.8077, 1.59 ) }
    dend_16 { pt3dadd( -359.565, -310.04, 85.729, 0.23 ) }
    dend_16 { pt3dadd( -360.343, -311.563, 86.2983, 1.36 ) }
    dend_16 { pt3dadd( -361.808, -314.611, 87.2035, 0.23 ) }
    dend_16 { pt3dadd( -362.664, -316.411, 87.5888, 0.68 ) }
    dend_16 { pt3dadd( -363.075, -317.209, 87.6643, 0.68 ) }
    dend_16 { pt3dadd( -364.887, -320.417, 87.6616, 0.23 ) }
    dend_16 { pt3dadd( -365.882, -322.074, 87.5944, 1.14 ) }
    dend_16 { pt3dadd( -367.441, -324.554, 87.4642, 0.23 ) }
    dend_16 { pt3dadd( -368.513, -326.31, 87.3583, 0.23 ) }
    dend_16 { pt3dadd( -369.83, -328.728, 87.2993, 0.23 ) }
    dend_16 { pt3dadd( -370.409, -330.097, 87.3626, 1.59 ) }
    dend_16 { pt3dadd( -370.795, -334.009, 88.2727, 0.23 ) }
    dend_16 { pt3dadd( -370.603, -335.202, 88.796, 0.23 ) }
    dend_16 { pt3dadd( -370.158, -336.65, 89.5341, 0.23 ) }
    dend_16 { pt3dadd( -369.574, -338.366, 90.3808, 1.36 ) }
    dend_16 { pt3dadd( -368.874, -340.495, 91.4009, 1.36 ) }
    dend_16 { pt3dadd( -368.141, -343.192, 92.5032, 0.23 ) }
    dend_16 { pt3dadd( -367.992, -344.496, 92.8458, 1.14 ) }
    dend_16 { pt3dadd( -368.085, -346.427, 93.2372, 0.23 ) }
    dend_16 { pt3dadd( -368.525, -349.032, 93.6624, 0.68 ) }
    dend_16 { pt3dadd( -368.859, -350.426, 93.7961, 0.68 ) }
    dend_16 { pt3dadd( -369.265, -351.869, 93.8737, 0.23 ) }
    dend_16 { pt3dadd( -369.923, -354.352, 93.9532, 1.14 ) }
    dend_16 { pt3dadd( -370.559, -356.671, 94.0198, 0.23 ) }
    dend_16 { pt3dadd( -371.173, -359.039, 94.16, 1.14 ) }
    dend_16 { pt3dadd( -371.89, -361.97, 94.3774, 0.23 ) }
    dend_16 { pt3dadd( -372.372, -364.129, 94.5986, 0.23 ) }
    dend_16 { pt3dadd( -372.723, -365.599, 94.7807, 1.14 ) }
    dend_16 { pt3dadd( -373.54, -368.841, 95.2894, 0.23 ) }
    dend_16 { pt3dadd( -374.248, -371.42, 95.7329, 0.23 ) }
    dend_16 { pt3dadd( -374.747, -373.266, 96.1045, 1.36 ) }
    dend_16 { pt3dadd( -375.543, -376.087, 96.7672, 0.23 ) }
    dend_16 { pt3dadd( -375.943, -377.514, 97.1912, 1.14 ) }
    dend_16 { pt3dadd( -376.709, -380.052, 98.0722, 0.23 ) }
    dend_16 { pt3dadd( -377.004, -380.944, 98.4448, 0.91 ) }
    dend_16 { pt3dadd( -378.019, -383.501, 99.6444, 0.23 ) }
    dend_16 { pt3dadd( -378.878, -385.402, 100.606, 1.14 ) }
    dend_16 { pt3dadd( -380.524, -388.551, 102.115, 0.68 ) }
    dend_16 { pt3dadd( -381.376, -390.107, 102.715, 0.23 ) }
    dend_16 { pt3dadd( -383.063, -392.915, 103.489, 1.14 ) }
    dend_16 { pt3dadd( -383.758, -393.967, 103.714, 0.23 ) }
    dend_16 { pt3dadd( -384.883, -395.489, 103.967, 0.68 ) }
    dend_16 { pt3dadd( -386.758, -398.019, 104.269, 0.23 ) }
    dend_16 { pt3dadd( -388.638, -400.437, 104.392, 0.23 ) }
    dend_16 { pt3dadd( -390.144, -402.345, 104.512, 2.95 ) }
    dend_16 { pt3dadd( -392.164, -404.796, 104.591, 0.23 ) }
    dend_16 { pt3dadd( -393.777, -406.695, 104.697, 0.68 ) }
    dend_16 { pt3dadd( -394.936, -408.08, 104.782, 0.68 ) }
    dend_16 { pt3dadd( -395.844, -409.166, 104.845, 0.23 ) }
    dend_16 { pt3dadd( -396.481, -409.945, 104.86, 0.91 ) }
    dend_16 { pt3dadd( -398.136, -412.112, 104.676, 0.23 ) }
    dend_16 { pt3dadd( -399.094, -413.424, 104.462, 0.91 ) }
    dend_16 { pt3dadd( -400.995, -416.025, 103.984, 0.23 ) }
    dend_16 { pt3dadd( -402.175, -417.599, 103.735, 0.23 ) }
    dend_16 { pt3dadd( -403.454, -419.303, 103.535, 0.91 ) }
    dend_16 { pt3dadd( -404.944, -421.163, 103.39, 0.23 ) }
    dend_16 { pt3dadd( -406.269, -422.733, 103.376, 2.73 ) }
    dend_16 { pt3dadd( -406.78, -423.307, 103.412, 2.73 ) }
    dend_16 { pt3dadd( -408.635, -425.401, 103.734, 0.23 ) }
    dend_16 { pt3dadd( -409.595, -426.508, 103.96, 1.14 ) }
    dend_16 { pt3dadd( -410.813, -427.912, 104.266, 0.23 ) }
    dend_16 { pt3dadd( -412.664, -430.084, 104.77, 0.23 ) }
    dend_16 { pt3dadd( -414.241, -432.119, 105.271, 0.23 ) }
    dend_16 { pt3dadd( -415.247, -433.582, 105.635, 1.14 ) }
    dend_16 { pt3dadd( -416.013, -434.818, 105.935, 0.23 ) }
    dend_16 { pt3dadd( -416.709, -436.117, 106.152, 1.82 ) }
    dend_16 { pt3dadd( -417.15, -437.028, 106.25, 1.82 ) }
    dend_16 { pt3dadd( -418.297, -439.504, 106.425, 0.23 ) }
    dend_16 { pt3dadd( -419.212, -441.531, 106.474, 1.14 ) }
    dend_16 { pt3dadd( -420.633, -444.665, 106.478, 0.23 ) }
    dend_16 { pt3dadd( -421.957, -447.852, 106.434, 2.73 ) }
    dend_16 { pt3dadd( -422.512, -449.275, 106.381, 2.73 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -331.503, -277.488, 78.1852, 0.23 ) }
    dend_15 { pt3dadd( -329.589, -277.948, 77.9415, 0.23 ) }
    dend_15 { pt3dadd( -327.015, -278.567, 77.6136, 0.91 ) }
    dend_15 { pt3dadd( -325.48, -278.935, 77.4182, 0.23 ) }
    dend_15 { pt3dadd( -322.663, -279.612, 77.0594, 0.68 ) }
    dend_15 { pt3dadd( -319.714, -280.321, 76.6839, 0.23 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 83/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 387.914, 172.988, 22.9295, 0.23 ) }
    dend_104 { pt3dadd( 390.568, 172.021, 24.3555, 0.23 ) }
    dend_104 { pt3dadd( 392.511, 171.361, 25.3328, 0.45 ) }
    dend_104 { pt3dadd( 394.673, 170.711, 26.3144, 0.23 ) }
    dend_104 { pt3dadd( 397.327, 169.973, 27.4115, 0.91 ) }
    dend_104 { pt3dadd( 398.756, 169.545, 27.9848, 0.23 ) }
    dend_104 { pt3dadd( 400.705, 168.909, 28.7696, 1.14 ) }
    dend_104 { pt3dadd( 402.358, 168.391, 29.4494, 0.23 ) }
    dend_104 { pt3dadd( 404.698, 167.759, 30.4225, 0.23 ) }
    dend_104 { pt3dadd( 407.378, 167.154, 31.4948, 1.14 ) }
    dend_104 { pt3dadd( 410.209, 166.654, 32.5698, 0.23 ) }
    dend_104 { pt3dadd( 412.117, 166.411, 33.2863, 0.68 ) }
    dend_104 { pt3dadd( 415.102, 166.143, 34.396, 0.23 ) }
    dend_104 { pt3dadd( 418.543, 166.021, 35.5991, 0.68 ) }
    dend_104 { pt3dadd( 421.193, 166.108, 36.4822, 0.23 ) }
    dend_104 { pt3dadd( 424.283, 166.452, 37.4124, 0.68 ) }
    dend_104 { pt3dadd( 427.094, 166.974, 38.1269, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_104 { pt3dadd( 428.142, 167.203, 38.3595, 0.91 ) }
    dend_104 { pt3dadd( 430.891, 167.846, 38.8499, 0.23 ) }
    dend_104 { pt3dadd( 433.046, 168.401, 39.1592, 0.68 ) }
    dend_104 { pt3dadd( 434.227, 168.716, 39.3404, 0.23 ) }
    dend_104 { pt3dadd( 436.075, 169.264, 39.5937, 0.91 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 5/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 387.914, 172.988, 22.9295, 0.23 ) }
    dend_103 { pt3dadd( 389.469, 175.374, 23.3665, 0.23 ) }
    dend_103 { pt3dadd( 390.741, 177.249, 23.6274, 0.23 ) }
    dend_103 { pt3dadd( 391.809, 178.764, 23.7766, 1.14 ) }
    dend_103 { pt3dadd( 393.817, 181.57, 24.0591, 0.23 ) }
    dend_103 { pt3dadd( 395.492, 184.01, 24.3234, 0.23 ) }
    dend_103 { pt3dadd( 396.298, 185.185, 24.4508, 1.14 ) }
    dend_103 { pt3dadd( 397.914, 187.462, 24.7019, 0.23 ) }
    dend_103 { pt3dadd( 398.861, 188.847, 24.8698, 0.23 ) }
    dend_103 { pt3dadd( 400.04, 190.581, 25.0416, 1.59 ) }
    dend_103 { pt3dadd( 401.272, 192.391, 25.125, 2.27 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_47, dend_0, dend_65, dend_48, dend_24, dend_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
    ModelViewParmSubset_2 = new SectionList()
    dend_47 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_47, dend_0, dend_65, dend_48, dend_24, dend_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_47, dend_0, axon_0, dend_65, dend_48, dend_24, dend_1, axon_1, dend_85, dend_66, dend_60, dend_49, dend_42, dend_25, dend_21, dend_2, dend_107, dend_86, dend_76, dend_67, dend_64, dend_61, dend_55, dend_50, dend_44, dend_43, dend_39, dend_26, dend_23, dend_22, dend_18, dend_3, dend_109, dend_108, dend_96, dend_87, dend_84, dend_77, dend_75, dend_68, dend_63, dend_62, dend_57, dend_56, dend_54, dend_51, dend_46, dend_45, dend_41, dend_40, dend_38, dend_27, dend_20, dend_19, dend_7, dend_4, dend_106, dend_97, dend_95, dend_88, dend_79, dend_78, dend_72, dend_69, dend_59, dend_58, dend_53, dend_52, dend_31, dend_28, dend_17, dend_8, dend_6, dend_5, dend_99, dend_98, dend_94, dend_89, dend_81, dend_80, dend_74, dend_73, dend_71, dend_70, dend_37, dend_32, dend_30, dend_29, dend_12, dend_9, dend_101, dend_100, dend_91, dend_90, dend_83, dend_82, dend_34, dend_33, dend_14, dend_13, dend_11, dend_10, dend_105, dend_102, dend_93, dend_92, dend_36, dend_35, dend_16, dend_15, dend_104, dend_103]}
    ModelViewParmSubset_5 = new SectionList()
    dend_47 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_107 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_109 ModelViewParmSubset_5.append()
    dend_108 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_106 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_99 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_66 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_60 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_42 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_25 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_107 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_76 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_67 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_64 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_61 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_55 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_50 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_44 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_39 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_22 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_18 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_84 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_75 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_68 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_63 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_62 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_54 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_46 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_38 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_20 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_4 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_106 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_95 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_88 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_79 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_59 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_58 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_52 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_31 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_28 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_17 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_8 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_6 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_5 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_99 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_98 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_94 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_89 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_81 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_74 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_71 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_32 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_12 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_9 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_101 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_90 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_34 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_33 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_14 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_13 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_105 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_36 OneSecGrp_SectionRef_108.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_16 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_104 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_47 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_49 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_65 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_24 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_85 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_86 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_51 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_87 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_23 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_96 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_57 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_97 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_27 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_77 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_29 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_78 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_30 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_109 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_72 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_37 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_108 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_73 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_69 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_70 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_80 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_10 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_11 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_83 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_100 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_41 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_102 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_103 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_15 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_35 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_91 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_93 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_92 OneSecGrp_SectionRef_107.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_48, dend_48, dend_48, dend_48, dend_24, dend_24, dend_24, dend_24, dend_24, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_2, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_26, dend_26, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_109, dend_108, dend_108, dend_108, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_102, dend_102, dend_93, dend_92, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_2 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_66 nseg = 3
    dend_60 nseg = 3
    dend_42 nseg = 5
    dend_25 nseg = 3
    dend_21 nseg = 3
    dend_107 nseg = 9
    dend_76 nseg = 5
    dend_67 nseg = 3
    dend_64 nseg = 9
    dend_61 nseg = 7
    dend_55 nseg = 5
    dend_50 nseg = 3
    dend_44 nseg = 9
    dend_39 nseg = 13
    dend_22 nseg = 7
    dend_18 nseg = 3
    dend_84 nseg = 7
    dend_75 nseg = 5
    dend_68 nseg = 5
    dend_63 nseg = 7
    dend_62 nseg = 3
    dend_56 nseg = 13
    dend_54 nseg = 7
    dend_46 nseg = 3
    dend_38 nseg = 11
    dend_20 nseg = 21
    dend_19 nseg = 9
    dend_7 nseg = 7
    dend_4 nseg = 7
    dend_106 nseg = 3
    dend_95 nseg = 9
    dend_88 nseg = 17
    dend_79 nseg = 5
    dend_59 nseg = 3
    dend_58 nseg = 9
    dend_53 nseg = 7
    dend_52 nseg = 5
    dend_31 nseg = 3
    dend_28 nseg = 3
    dend_17 nseg = 9
    dend_8 nseg = 5
    dend_6 nseg = 3
    dend_5 nseg = 3
    dend_99 nseg = 11
    dend_98 nseg = 21
    dend_94 nseg = 7
    dend_89 nseg = 3
    dend_81 nseg = 3
    dend_74 nseg = 13
    dend_71 nseg = 3
    dend_32 nseg = 9
    dend_12 nseg = 3
    dend_9 nseg = 3
    dend_101 nseg = 3
    dend_90 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_14 nseg = 7
    dend_13 nseg = 9
    dend_105 nseg = 3
    dend_36 nseg = 9
    dend_16 nseg = 11
    dend_104 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_LBC_e7a596714b_0_0


