// Cell: cACint209_L5_NBC_e9641cafc3_0_0
/*
{
  "id" : "cACint209_L5_NBC_e9641cafc3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.9016, -1.97873, -2.50057, 3.38117", "-9.79478, -1.80994, -2.24302, 5.67833", "-8.68798, -1.64115, -1.98548, 7.15072", "-7.58118, -1.47235, -1.72793, 8.64399", "-6.47438, -1.30356, -1.47039, 10.0299", "-5.36758, -1.13477, -1.21284, 11.2674", "-4.26078, -0.965972, -0.955299, 11.9107", "-3.15398, -0.797179, -0.697754, 12.2563", "-2.04718, -0.628385, -0.440209, 12.5208", "-0.940378, -0.459592, -0.182664, 12.7145", "0.166423, -0.290798, 0.0748807, 12.541", "1.27322, -0.122005, 0.332426, 12.2075", "2.38002, 0.0467885, 0.589971, 11.6554", "3.48682, 0.215582, 0.847516, 11.0225", "4.59362, 0.384375, 1.10506, 10.3416", "5.70042, 0.553169, 1.36261, 9.80603", "6.80722, 0.721962, 1.62015, 9.2712", "7.91403, 0.890756, 1.8777, 8.04801", "9.02083, 1.05955, 2.13524, 5.78101", "10.1276, 1.22834, 2.39279, 3.52734", "11.2344, 1.39714, 2.65033, 2.23302" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "6.34928, -3.40695, -7.98898, 1.25", "7.1592, -3.93357, -8.29607, 1.25", "7.80397, -4.4589, -8.99948, 1.25", "8.32254, -4.97201, -9.77288, 0.88", "8.75354, -5.47822, -10.5188, 0.88", "9.14028, -6.01692, -11.2517, 0.88", "10.0893, -7.67389, -13.3139, 1.18", "10.6325, -9.16889, -15.1065, 1.18", "10.7181, -9.52425, -15.4839, 1.69", "10.8133, -10.0067, -15.9149, 1.84", "10.9712, -10.69, -16.4064, 1.62", "11.3065, -11.7358, -16.9094, 1.11", "11.8015, -12.8114, -17.1349, 1.11", "12.5231, -14.1123, -17.2544, 1.11", "13.1624, -15.2061, -17.2879, 1.11", "13.8144, -16.3319, -17.2675, 1.11", "14.4123, -17.4827, -17.192, 1.11", "14.9188, -18.6324, -17.0666, 1.18", "15.1657, -19.46, -16.9623, 1.33", "15.2989, -20.7877, -16.8099, 1.25", "15.2164, -21.8872, -16.7184, 0.88", "14.91, -23.2977, -16.6803, 1.25", "14.7055, -23.9375, -16.7101, 1.55", "14.4812, -24.6257, -16.7461, 1.55", "14.2222, -25.5759, -16.7954, 1.33", "14.0448, -26.5792, -16.8324, 1.11", "13.9915, -27.9049, -16.8197, 0.81", "14.1878, -29.4196, -16.7325, 0.59", "14.7716, -31.2792, -16.5197, 0.59", "15.2557, -32.1338, -16.3662, 0.74", "16.1325, -33.1078, -16.1225, 0.96", "16.838, -33.6727, -15.9547, 1.18", "17.3884, -34.0218, -15.858, 1.18", "18.1295, -34.4402, -15.7776, 1.18", "18.966, -34.94, -15.7704, 0.88", "19.8268, -35.6532, -15.8594, 0.88", "20.2194, -36.1491, -15.9705, 1.11", "20.725, -37.0286, -16.1828, 1.11", "21.0251, -37.6681, -16.3411, 0.96", "21.2979, -38.3065, -16.5008, 1.25", "21.8725, -39.5526, -16.8407, 0.66", "22.2558, -40.2359, -17.037, 0.66", "22.7217, -40.823, -17.2046, 0.66", "23.2527, -41.238, -17.3398, 0.74", "23.9976, -41.6112, -17.5311, 0.59", "24.9732, -41.9902, -17.7801, 0.88", "25.5169, -42.1879, -17.9256, 0.88", "26.042, -42.4126, -18.0738, 1.11", "27.0247, -42.9548, -18.3816, 0.66", "27.8759, -43.6013, -18.6807, 0.59", "28.5795, -44.4136, -18.9647, 0.66", "29.1152, -45.3383, -19.1818, 0.81", "29.5397, -46.3149, -19.3811, 1.4", "29.6829, -46.7398, -19.4531, 1.55", "29.8961, -47.5622, -19.5545, 0.96", "30.1408, -48.6339, -19.6581, 0.52", "30.3533, -49.4264, -19.764, 0.52", "30.66, -50.3294, -19.9057, 0.96", "30.8896, -50.9241, -20.0231, 1.03", "31.054, -51.3234, -20.0968, 1.11", "31.233, -51.7492, -20.1577, 1.11", "31.7164, -52.9253, -20.3075, 0.52", "32.0882, -53.9841, -20.3764, 0.59", "32.4036, -55.0017, -20.3716, 0.59", "32.706, -56.0024, -20.3453, 1.18", "32.9664, -56.8091, -20.3445, 1.55", "33.1315, -57.2698, -20.3601, 1.55", "33.6302, -58.4849, -20.579, 0.81", "33.9949, -59.2249, -20.8746, 0.52", "34.3971, -59.9279, -21.2905, 0.44", "34.948, -60.833, -21.9555, 0.81", "35.28, -61.3632, -22.3804, 0.96", "36.1823, -62.7925, -23.5402, 0.52", "36.5545, -63.3824, -24.0228, 0.96", "36.8434, -63.8871, -24.3629, 1.25", "37.142, -64.4846, -24.6544, 1.03", "37.4494, -65.1702, -24.8695, 0.74", "37.6387, -65.6124, -24.962, 0.74", "38.0041, -66.411, -25.0523, 0.74", "38.4267, -67.2761, -25.189, 0.44", "38.9153, -68.2434, -25.3526, 0.96", "39.2176, -68.837, -25.4528, 1.55", "39.4566, -69.3346, -25.4698, 1.69", "39.721, -69.9173, -25.4134, 1.25", "40.2245, -71.0153, -25.2707, 0.59", "40.7291, -72.072, -25.1152, 0.59", "41.303, -73.2169, -24.99, 1.25", "42.449, -75.4834, -24.8797, 0.52", "43.0325, -76.6404, -24.8659, 0.44", "43.7306, -78.0348, -24.8941, 0.96", "44.022, -78.6205, -24.9261, 0.96", "44.6764, -79.8876, -25.1089, 0.52", "45.3006, -81.0126, -25.376, 0.52", "45.9625, -82.119, -25.7521, 1.11", "46.2403, -82.5812, -25.8796, 1.55", "46.5237, -83.0823, -25.9616, 1.77", "46.7134, -83.4176, -26.0322, 1.84", "46.984, -83.8818, -26.1678, 1.47", "47.4015, -84.5386, -26.477, 1.11", "47.7998, -85.1424, -26.848, 0.81", "48.3847, -86.0991, -27.5082, 0.44", "49.0348, -87.2838, -28.3765, 0.96", "49.3595, -87.9538, -28.8698, 1.11", "49.6003, -88.4927, -29.2801, 0.81", "49.8689, -89.1378, -29.725, 0.29", "50.1729, -89.8635, -30.0996, 0.29", "50.4381, -90.4539, -30.2424, 0.59", "50.7967, -91.2086, -30.2617, 0.88", "51.0837, -91.778, -30.2155, 1.03", "51.7195, -92.979, -30.0573, 1.03", "52.2689, -93.9156, -29.9042, 0.59", "52.8675, -94.8403, -29.7476, 0.59", "53.4077, -95.6474, -29.6193, 0.88", "53.8851, -96.4235, -29.4977, 1.25", "54.1525, -96.9135, -29.4413, 1.47", "54.3072, -97.2637, -29.4249, 1.47", "54.6073, -98.1931, -29.3978, 0.37", "54.8004, -99.153, -29.3755, 0.37", "54.9033, -100.419, -29.3639, 0.74", "54.8774, -101.209, -29.3768, 0.66", "54.8035, -102.19, -29.398, 0.52", "54.7581, -102.661, -29.3929, 0.88", "54.6976, -103.212, -29.3586, 0.88", "54.6992, -103.828, -29.1341, 0.37", "54.9416, -104.393, -28.372, 0.37", "55.1905, -104.84, -27.5873, 0.37", "55.518, -105.318, -26.708, 0.37", "55.7899, -105.683, -26.0486, 0.44", "56.7965, -106.904, -23.892, 1.18", "57.2749, -107.472, -22.971, 1.18", "57.8239, -108.123, -21.9613, 0.37", "58.228, -108.662, -21.2415, 0.81", "58.431, -108.95, -20.9247, 0.81", "58.7207, -109.379, -20.5448, 0.81", "59.2738, -110.166, -20.0133, 0.37", "60.1421, -111.28, -19.2446, 1.33", "60.4734, -111.648, -18.9481, 1.69", "61.1162, -112.311, -18.3542, 1.25", "61.6316, -112.782, -17.9096, 0.66", "62.3019, -113.31, -17.4084, 0.52", "62.9689, -113.746, -17.0371, 0.81", "63.2927, -113.964, -16.9072, 0.81", "63.6563, -114.227, -16.773, 0.81", "64.134, -114.625, -16.614, 0.44", "64.6233, -115.126, -16.4299, 0.37", "64.8918, -115.602, -16.3083, 0.37", "65.2014, -116.836, -16.1139, 0.37", "65.3101, -117.468, -16.0426, 0.74", "65.4018, -118.049, -15.9937, 0.81", "65.4751, -118.497, -15.9667, 0.81", "65.6478, -119.285, -15.9463, 0.37", "65.9104, -120.093, -15.8937, 0.37", "66.4388, -121.186, -15.7935, 0.37", "66.8727, -121.919, -15.6893, 0.66", "67.1591, -122.349, -15.6113, 0.81", "67.6231, -122.984, -15.4765, 0.81", "68.5441, -124.146, -15.2003, 0.52", "68.8483, -124.535, -15.1061, 0.52", "69.4394, -125.425, -14.9173, 0.88", "69.644, -125.825, -14.8602, 1.18", "69.797, -126.214, -14.8454, 1.18", "69.9437, -126.747, -14.8799, 1.18", "70.0424, -127.374, -14.9975, 0.96", "70.1128, -128.222, -15.2398, 0.52", "70.1989, -129.25, -15.6377, 0.52", "70.2893, -129.916, -15.9293, 0.74", "70.3654, -130.307, -16.1118, 0.74", "70.6067, -131.15, -16.4623, 0.52", "71.1049, -132.292, -16.873, 0.52", "71.5797, -133.019, -17.1023, 0.59", "72.2254, -133.79, -17.2998, 0.81", "72.8828, -134.479, -17.4231, 0.59", "73.8733, -135.398, -17.5963, 0.37", "74.5642, -135.987, -17.7109, 0.37", "75.2943, -136.632, -17.7729, 1.11", "75.4676, -136.793, -17.7868, 1.4", "76.0432, -137.32, -17.8415, 1.03", "76.8635, -138.099, -17.9352, 0.52", "77.6446, -138.917, -18.0767, 0.52", "78.4279, -139.822, -18.2115, 1.18", "78.7191, -140.18, -18.2769, 1.47", "79.0117, -140.535, -18.3678, 1.47", "79.7854, -141.536, -18.6809, 0.52", "80.3592, -142.359, -19.046, 0.88", "80.6559, -142.852, -19.3393, 0.88", "81.2014, -143.806, -20.1227, 0.59", "81.5979, -144.535, -20.8063, 1.03", "81.884, -145.066, -21.3483, 1.03", "82.4564, -146.105, -22.5181, 0.44", "82.6839, -146.559, -23.0413, 0.44", "83.1343, -147.652, -24.2683, 1.03", "83.2628, -148.097, -24.7128, 1.18", "83.3823, -148.686, -25.2308, 0.74", "83.5424, -149.755, -26.0507, 0.44", "83.5782, -150.533, -26.4591, 0.44", "83.5781, -151.393, -26.7929, 0.44", "83.5489, -152.589, -27.0809, 1.11", "83.5655, -153.045, -27.1582, 1.47", "83.6574, -153.769, -27.2202, 1.47", "84.015, -155.218, -27.2079, 0.44", "84.3503, -156.108, -27.1684, 0.44", "84.8386, -157.142, -27.1115, 0.44", "85.3305, -158.077, -27.0682, 0.44", "85.6644, -158.738, -27.0786, 0.29", "86.1004, -159.687, -27.1884, 0.29", "86.2871, -160.2, -27.3173, 1.4", "86.4125, -160.782, -27.4965, 1.99", "86.4975, -161.549, -27.7631, 1.47", "86.5557, -162.786, -28.2345, 0.44", "86.5946, -163.791, -28.5727, 0.37", "86.6584, -164.736, -28.8477, 0.37", "86.7308, -165.557, -29.0395, 0.74", "86.8157, -166.133, -29.1581, 0.88", "86.9343, -166.667, -29.2418, 0.37", "87.4127, -168.226, -29.3823, 0.29", "87.6788, -168.881, -29.3984, 0.29", "87.9759, -169.474, -29.4012, 0.96", "88.6952, -170.744, -29.5315, 0.37", "89.1965, -171.587, -29.7004, 0.66", "89.4063, -171.934, -29.8039, 0.66", "90.0745, -173.066, -30.3065, 0.37", "90.2572, -173.374, -30.4571, 0.81", "91.2009, -174.852, -31.2121, 0.37", "91.432, -175.17, -31.393, 0.88", "91.6644, -175.446, -31.5802, 0.88", "92.2862, -176.064, -32.0773, 0.44", "92.7103, -176.451, -32.4267, 0.44", "93.3254, -176.966, -32.8634, 0.81", "94.3472, -177.715, -33.4973, 1.55", "94.7291, -177.977, -33.7284, 1.69", "95.7705, -178.684, -34.3778, 0.37", "96.5024, -179.188, -34.8469, 0.37", "97.226, -179.74, -35.3579, 0.37", "97.9952, -180.392, -35.9164, 0.44", "98.5255, -180.876, -36.2819, 1.03", "98.9288, -181.232, -36.5409, 1.4", "99.2617, -181.512, -36.7295, 1.4", "100.254, -182.26, -37.2113, 0.29", "100.982, -182.83, -37.507, 0.29", "101.56, -183.285, -37.69, 0.29", "102.002, -183.616, -37.8049, 0.29", "102.568, -184.023, -37.9266, 0.74", "103.043, -184.352, -38.017, 1.11", "104.029, -184.984, -38.1679, 0.52", "104.575, -185.338, -38.2542, 0.81", "105.194, -185.783, -38.3559, 0.66", "105.865, -186.292, -38.4909, 0.29", "106.453, -186.725, -38.6231, 0.29", "107.245, -187.276, -38.8104, 0.29", "108.261, -187.917, -39.0488, 0.44", "108.757, -188.223, -39.1507, 0.44", "109.505, -188.681, -39.306, 0.29", "109.886, -188.925, -39.3797, 0.59", "110.155, -189.107, -39.4348, 0.59", "110.619, -189.454, -39.5484, 0.29", "111.252, -189.949, -39.7279, 0.29", "111.837, -190.434, -39.9112, 0.59", "112.141, -190.705, -40.0074, 0.74", "112.337, -190.896, -40.0775, 0.74", "113.208, -191.806, -40.4283, 0.29", "113.831, -192.513, -40.7189, 0.44", "114.225, -192.982, -40.926, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.86928, -3.63695, 4.08102, 1.25", "7.86928, -3.63695, 4.08102, 1.25", "7.62963, -4.50511, 4.36531, 1.25", "7.23429, -6.0022, 4.79526, 1.4", "6.84703, -7.64927, 5.20699, 1.4", "6.56191, -9.20183, 5.54835, 1.18", "6.349, -10.7849, 5.86337, 1.18", "6.26677, -12.1057, 6.08699, 1.4", "6.36092, -13.9808, 6.35144, 1.4", "6.56299, -16.0049, 6.57124, 1.4", "6.84385, -17.6977, 6.69949, 1.62", "7.1249, -18.8194, 6.77735, 1.47", "7.75359, -20.6134, 6.86813, 1.03", "8.66956, -22.5681, 6.96597, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.81072, -2.89695, -6.35898, 1.18", "-9.81072, -2.89695, -6.35898, 1.18", "-10.5421, -3.72879, -6.43019, 1.18", "-11.5086, -5.01737, -6.63254, 1.11", "-12.0395, -5.82052, -6.78645, 1.18", "-12.5328, -6.67208, -6.98748, 1.03", "-13.1136, -7.67441, -7.22411, 0.96", "-13.598, -8.58823, -7.45858, 1.4", "-14.0638, -9.67596, -7.78401, 1.62", "-14.2312, -10.241, -7.98365, 1.84", "-14.4433, -11.23, -8.38713, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.60072, -7.02695, -1.54898, 1.4", "-3.60072, -7.02695, -1.54898, 1.4", "-4.56191, -8.14123, -2.21552, 1.11", "-5.9926, -9.56117, -2.93647, 0.96", "-6.46593, -9.96496, -3.10919, 0.96", "-7.61609, -10.7845, -3.407, 0.66", "-8.60804, -11.407, -3.5528, 0.66", "-9.26089, -11.7322, -3.5624, 1.03", "-10.4846, -12.2187, -3.43875, 1.33", "-11.3188, -12.5428, -3.30251, 1.47", "-12.4375, -13.0415, -3.15039, 1.11", "-13.5421, -13.6782, -3.08771, 0.96", "-14.7864, -14.7058, -3.19937, 0.66", "-15.6656, -15.7387, -3.44919, 0.52", "-16.2479, -16.7642, -3.86448, 0.44", "-16.6598, -17.9877, -4.52545, 0.44", "-17.0046, -19.5409, -5.49257, 1.4", "-17.1185, -20.2682, -5.96794, 1.84", "-17.1938, -20.9345, -6.39549, 2.14", "-17.3618, -22.5663, -7.35583, 1.99", "-17.6419, -25.103, -8.59378, 1.03", "-17.8702, -26.9439, -9.29611, 0.88", "-18.0853, -28.3262, -9.49768, 0.81", "-18.2871, -29.3161, -9.33214, 0.66", "-18.6684, -30.8212, -8.63858, 0.66", "-19.0442, -32.0503, -7.7466, 0.96", "-19.2557, -32.6502, -7.1778, 1.11", "-20.6037, -36.2483, -3.59267, 0.44", "-21.0423, -37.3537, -2.5396, 1.03", "-21.155, -37.6277, -2.31325, 1.4", "-21.4711, -38.3134, -1.87639, 1.69", "-21.7572, -38.8675, -1.69884, 1.69", "-22.8288, -40.6995, -1.66795, 0.81", "-23.4864, -41.5863, -1.94503, 1.18", "-24.3448, -42.488, -2.27726, 1.47", "-24.943, -43.0292, -2.45905, 1.47", "-25.7822, -43.7398, -2.61192, 1.4", "-26.8627, -44.6121, -2.68499, 1.11", "-28.6228, -45.9757, -2.59331, 0.52", "-29.7237, -46.8842, -2.4401, 0.52", "-30.9063, -48.0632, -2.1339, 0.52", "-32.024, -49.6464, -1.66918, 1.18", "-32.3455, -50.3338, -1.50673, 1.55", "-32.4864, -50.8277, -1.44757, 1.69", "-32.643, -51.6113, -1.46109, 1.92", "-32.8789, -52.9001, -1.69713, 0.74", "-33.1695, -54.576, -2.02861, 0.44", "-33.5827, -56.7927, -2.47267, 0.44", "-33.9621, -58.6738, -2.79246, 0.44", "-34.4618, -60.8681, -3.08276, 0.74", "-34.8837, -62.3123, -3.20801, 0.52", "-36.0123, -65.3818, -3.30636, 1.03", "-36.3308, -66.1558, -3.26852, 1.25", "-36.7363, -67.1545, -3.12955, 0.66", "-37.1819, -68.3848, -2.86075, 0.29", "-37.6184, -69.8645, -2.48514, 0.29", "-37.839, -70.7635, -2.26933, 0.59", "-38.1437, -72.5443, -1.92676, 0.59", "-38.2067, -73.7515, -1.64621, 1.03", "-38.1109, -75.8446, -1.1605, 1.4", "-38.0118, -76.7893, -0.953097, 1.77", "-37.917, -77.5671, -0.830241, 2.14", "-37.8283, -78.7576, -0.718621, 2.36", "-37.9389, -80.4284, -0.768036, 0.74", "-38.2531, -81.7125, -0.942062, 0.44", "-38.6747, -82.7189, -1.22401, 0.44", "-39.4423, -84.2089, -1.62744, 0.74", "-39.8726, -84.9649, -1.78926, 0.74", "-40.6502, -86.2869, -1.98426, 0.66", "-41.1872, -87.257, -2.00663, 0.44", "-41.6624, -88.3717, -1.87631, 0.44", "-42.1505, -90.0268, -1.53124, 0.59", "-42.4177, -91.1562, -1.21531, 0.81", "-42.676, -92.084, -0.944816, 0.96", "-42.9978, -92.953, -0.681818, 0.74", "-43.4615, -93.8188, -0.465409, 0.44", "-44.1021, -94.6434, -0.306632, 0.44", "-44.9209, -95.4571, -0.272085, 0.74", "-46.439, -96.8416, -0.279528, 0.88", "-47.224, -97.5497, -0.245524, 1.4", "-47.6224, -97.9482, -0.172267, 1.4", "-48.2751, -98.7925, 0.0686775, 1.18", "-48.7095, -99.6455, 0.366166, 0.81", "-49.0652, -100.957, 0.8542, 0.52", "-49.2083, -102.23, 1.33084, 0.52", "-49.2861, -104.019, 1.99243, 0.74", "-49.3116, -105.279, 2.4238, 0.52", "-49.3264, -105.959, 2.63977, 1.11", "-49.3673, -106.778, 2.89062, 1.4", "-49.4283, -107.461, 3.06148, 1.55", "-49.5539, -108.455, 3.25265, 0.74", "-49.8703, -110.304, 3.53831, 0.44", "-50.164, -111.633, 3.80745, 0.81", "-50.5731, -113.17, 4.17536, 1.11", "-50.9344, -114.266, 4.46846, 1.33", "-51.2799, -115.124, 4.71996, 1.55", "-51.704, -115.933, 5.00471, 1.18", "-52.8079, -117.401, 5.74328, 0.59", "-53.317, -117.904, 6.0893, 0.96", "-53.9135, -118.401, 6.47983, 1.11", "-54.5302, -118.886, 6.89185, 1.11", "-55.6624, -119.773, 7.65504, 0.59", "-56.8866, -120.761, 8.46131, 0.81", "-57.9811, -121.706, 9.14588, 0.59", "-59.1304, -122.832, 9.8675, 0.59", "-60.2436, -124.112, 10.5602, 0.44", "-61.0526, -125.271, 10.9841, 0.81", "-61.5063, -126.127, 11.1489, 0.96", "-61.7788, -126.871, 11.1816, 0.96", "-62.0, -127.904, 11.1169, 0.96", "-62.1224, -128.977, 10.997, 0.66", "-62.1879, -131.147, 10.674, 0.52", "-62.1667, -132.27, 10.4984, 0.66", "-62.1127, -133.607, 10.3132, 1.33", "-62.0862, -134.558, 10.2042, 1.99", "-62.1365, -136.843, 10.0162, 0.44", "-62.2805, -138.069, 9.97256, 0.44", "-62.4863, -138.922, 9.99145, 0.74", "-62.727, -139.592, 10.0071, 0.74", "-63.1812, -140.544, 10.057, 0.74", "-63.7696, -141.564, 10.1234, 0.37", "-64.6913, -142.913, 10.2234, 0.29", "-65.4495, -143.818, 10.3154, 0.29", "-66.3712, -144.783, 10.4339, 0.29", "-67.1945, -145.572, 10.5871, 0.22", "-67.6552, -145.984, 10.6942, 0.22", "-68.401, -146.668, 10.8962, 0.81", "-68.8362, -147.099, 11.0273, 0.96", "-69.8704, -148.14, 11.3542, 0.22", "-70.7487, -149.094, 11.6382, 1.33", "-71.3238, -149.819, 11.8159, 1.55", "-72.1529, -150.999, 12.1037, 1.11", "-72.6065, -151.723, 12.2908, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.23072, 4.50305, 5.70102, 1.33", "-2.23072, 4.50305, 5.70102, 1.33", "-3.11106, 5.14046, 5.70102, 1.55", "-4.01003, 5.73727, 5.70102, 1.4", "-5.01749, 6.34259, 5.70102, 1.18", "-5.74691, 6.75509, 5.70367, 1.47", "-6.72107, 7.30483, 5.73909, 1.77", "-7.4248, 7.69468, 5.79785, 1.99", "-8.19601, 8.13196, 5.92548, 1.99", "-9.11274, 8.7196, 6.17502, 1.62", "-10.1485, 9.56228, 6.61252, 1.11", "-10.7955, 10.273, 7.02506, 1.11", "-11.2734, 11.0413, 7.49071, 1.25", "-11.6538, 12.0506, 8.1009, 1.47", "-11.8161, 13.0286, 8.69718, 1.69", "-11.7927, 13.837, 9.18351, 1.92", "-11.6334, 14.7667, 9.71741, 1.77", "-11.4405, 15.4619, 10.0761, 1.4", "-11.1141, 16.3664, 10.4914, 1.18", "-10.754, 17.2596, 10.8694, 1.11", "-10.2273, 18.4317, 11.3489, 1.62", "-9.97768, 18.9447, 11.5525, 1.99", "-9.60092, 19.6623, 11.8301, 2.21", "-9.27992, 20.2328, 12.0454, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-10.9007, 0.873047, -3.98898, 1.77", "-10.9724, 0.886941, -3.98898, 1.77", "-12.1361, 1.13214, -3.98898, 1.77", "-13.2035, 1.39204, -3.98898, 1.62", "-14.4722, 1.74256, -3.98898, 1.62", "-15.8044, 2.15877, -3.98898, 1.84", "-16.7465, 2.49833, -3.98898, 1.92", "-17.6434, 2.86619, -4.01255, 2.14", "-18.6962, 3.37328, -4.06779, 2.14", "-19.6145, 3.89812, -4.15014, 2.14", "-20.3794, 4.41391, -4.27611, 2.14", "-21.5173, 5.29216, -4.54056, 2.14", "-22.4326, 6.07526, -4.86485, 2.14", "-22.9726, 6.56511, -5.08921, 2.21", "-23.5813, 7.14604, -5.39042, 1.99", "-24.3297, 7.89659, -5.83039, 1.99", "-24.9714, 8.56467, -6.2769, 2.14", "-25.965, 9.66791, -7.11937, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.2344, 1.39714, 2.65033, 3.17", "26.063, 3.65858, 2.65033, 3.17", "40.8915, 5.92002, 2.65033, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "8.66956, -22.5681, 6.96597, 1.25", "9.2817, -24.125, 6.81021, 1.25", "9.37656, -26.22, 6.58914, 1.03", "8.93419, -27.9541, 6.41283, 0.66", "8.50584, -29.2158, 6.29854, 0.96", "8.10473, -30.5289, 6.19496, 1.18", "7.65864, -32.4169, 6.06378, 1.18", "7.3803, -33.6138, 5.95788, 1.47", "6.94834, -35.5235, 5.82655, 0.81", "6.80811, -36.8025, 5.78252, 0.81", "7.11391, -38.3652, 5.74774, 0.96", "7.7582, -39.6407, 5.76608, 0.88", "8.62951, -41.0018, 5.86091, 1.33", "9.15571, -41.8079, 5.95008, 1.55", "9.73659, -42.7323, 6.0822, 1.33", "10.2352, -43.7249, 6.24599, 0.81", "10.8225, -45.5344, 6.54953, 0.66", "11.1825, -47.3772, 6.82573, 0.96", "11.3127, -48.5932, 6.96572, 1.4", "11.3724, -49.5882, 7.04527, 1.4", "11.4077, -50.5954, 7.14203, 1.4", "11.4021, -52.326, 7.38382, 0.96", "11.3855, -53.1441, 7.5548, 0.81", "11.3513, -54.6551, 8.05566, 0.81", "11.3185, -55.7598, 8.51493, 0.74", "11.2486, -58.0114, 9.61878, 0.74", "11.2143, -59.7206, 10.4702, 0.88", "11.2236, -61.1233, 11.1413, 0.88", "11.3267, -62.6981, 11.7673, 1.47", "11.5734, -64.1758, 12.1074, 0.81", "12.0717, -65.904, 12.1182, 0.59", "12.786, -67.8325, 11.8398, 0.88", "13.3294, -69.2087, 11.6076, 0.88", "13.9226, -70.8543, 11.3595, 0.66", "14.4773, -72.6684, 11.17, 0.59", "14.8075, -74.1955, 11.1605, 0.59", "15.0099, -75.8613, 11.326, 0.59", "15.1131, -77.4838, 11.6842, 0.88", "15.1211, -79.3141, 12.2625, 0.66", "15.0701, -80.7724, 12.8178, 1.03", "14.9469, -82.6419, 13.6021, 1.25", "14.7937, -84.4969, 14.3854, 1.25", "14.7059, -85.712, 14.8583, 1.84", "14.6689, -86.8902, 15.2933, 2.28", "14.6725, -87.9156, 15.7476, 1.69" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "8.66956, -22.5681, 6.96597, 0.74", "7.94997, -25.1352, 9.74764, 0.74", "7.90567, -25.6714, 10.5793, 0.74", "7.88886, -26.1326, 11.3856, 0.74", "7.85199, -26.8738, 12.6459, 1.11", "7.84004, -27.2538, 13.2302, 1.11", "7.84534, -28.2173, 14.5085, 0.66", "8.03291, -30.1679, 16.6969, 1.4", "8.08687, -31.0078, 17.6134, 0.96", "8.07731, -31.7091, 18.3208, 1.18", "7.98628, -32.674, 19.1343, 0.88", "7.74832, -33.9932, 20.0114, 0.66", "7.36276, -35.4895, 20.6961, 0.66", "7.10558, -36.382, 20.9926, 0.59", "6.71096, -37.7015, 21.4104, 0.74", "6.42026, -38.5431, 21.7004, 1.03", "6.05454, -39.3438, 22.0015, 1.18", "5.46671, -40.3599, 22.373, 1.4" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-14.4433, -11.23, -8.38713, 0.81", "-15.6182, -11.7572, -8.39186, 0.81", "-16.36, -12.0773, -8.28686, 0.88", "-17.0834, -12.4104, -8.1152, 1.03", "-17.6762, -12.7196, -7.92827, 1.03", "-18.2573, -13.08, -7.69328, 0.52", "-18.7974, -13.4904, -7.37632, 0.52", "-19.3485, -14.0497, -6.80639, 0.74", "-19.5302, -14.2979, -6.54202, 0.96", "-19.7116, -14.6026, -6.20974, 0.59", "-19.9291, -15.0059, -5.7905, 0.44", "-20.3318, -15.8087, -5.09403, 0.44", "-20.521, -16.1386, -4.81914, 0.81", "-20.8015, -16.5042, -4.51262, 0.96", "-21.2535, -16.9674, -4.09119, 1.03", "-21.571, -17.2635, -3.8205, 0.96", "-22.0023, -17.6777, -3.46737, 0.37", "-22.7233, -18.4751, -2.83423, 0.37", "-23.0548, -18.909, -2.49104, 0.29", "-23.3077, -19.3293, -2.18222, 0.37", "-23.6202, -19.9393, -1.7798, 0.37", "-23.908, -20.5772, -1.38406, 0.81", "-24.1708, -21.2015, -1.03187, 1.25", "-24.2492, -21.3942, -0.944949, 1.55", "-24.5976, -22.1348, -0.630253, 0.37", "-24.8815, -22.5372, -0.481172, 0.37", "-25.0816, -22.7106, -0.429205, 0.44", "-25.5912, -23.0451, -0.360883, 0.59", "-25.92, -23.2457, -0.339684, 0.66", "-26.3261, -23.4849, -0.320199, 0.37", "-26.7918, -23.7588, -0.303723, 0.59", "-27.2771, -24.0933, -0.298091, 0.88", "-27.5536, -24.3116, -0.301929, 1.03", "-28.0628, -24.7659, -0.252065, 0.37", "-28.2316, -24.9193, -0.216305, 0.37", "-28.5507, -25.194, -0.124643, 0.37", "-28.978, -25.5372, 0.0199113, 0.66", "-29.3036, -25.771, 0.132435, 0.88", "-30.4078, -26.4824, 0.478568, 0.29", "-30.8764, -26.7764, 0.613075, 0.29", "-31.3359, -27.0946, 0.742322, 0.96", "-31.5802, -27.2819, 0.814389, 1.33", "-32.0277, -27.6824, 0.954604, 1.11", "-32.5631, -28.2118, 1.16975, 0.59", "-33.0283, -28.7342, 1.31974, 0.37", "-33.4385, -29.1657, 1.60829, 0.66", "-33.7068, -29.3929, 1.86238, 0.52", "-34.0545, -29.6198, 2.24474, 0.29", "-34.8929, -30.0617, 3.2441, 0.29", "-35.5564, -30.3176, 4.06036, 0.81", "-37.201, -30.6329, 6.08102, 0.88", "-37.5936, -30.6455, 6.54009, 0.29", "-37.8057, -30.6286, 6.77394, 0.29", "-38.2701, -30.5301, 7.27946, 0.66", "-38.4824, -30.4601, 7.52181, 0.66", "-43.1347, -34.9415, 11.322, 0.66", "-48.1122, -39.3595, 14.7677, 0.66", "-53.2429, -43.6917, 18.0958, 0.66", "-57.8635, -48.451, 21.5839, 0.66", "-61.6621, -52.4375, 26.6678, 0.66", "-64.6777, -56.7983, 31.9647, 0.66", "-67.9989, -60.3783, 37.6497, 0.66", "-69.9652, -64.775, 43.3917, 0.66", "-71.039, -68.9929, 49.4929, 0.66", "-70.8006, -73.6544, 55.3564, 0.66", "-70.1147, -78.7008, 60.8548, 0.66", "-69.6791, -83.6465, 66.4689, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-14.4433, -11.23, -8.38713, 1.03", "-13.9404, -11.7961, -8.95516, 1.03", "-13.0353, -12.6415, -9.73866, 0.81", "-12.4017, -13.2547, -10.2565, 1.03", "-11.7086, -13.9996, -10.8146, 0.88", "-11.2038, -14.6055, -11.2344, 1.11", "-10.8104, -15.1551, -11.5913, 0.74", "-10.4242, -15.8072, -11.942, 0.52", "-10.0771, -16.7523, -12.3691, 0.88", "-9.99948, -17.4497, -12.6892, 1.47", "-10.0306, -17.9366, -12.8903, 1.25", "-10.1399, -18.73, -13.1818, 1.25", "-10.251, -19.377, -13.3945, 0.81", "-10.4311, -20.4391, -13.6747, 0.66", "-10.5314, -21.4373, -13.8606, 0.66", "-10.5656, -22.644, -14.019, 0.96", "-10.5394, -23.2714, -14.0631, 1.11", "-10.4795, -23.8622, -14.0771, 1.11", "-10.3672, -24.692, -14.0679, 0.74", "-10.2369, -25.5592, -14.0346, 0.52", "-10.1572, -26.2325, -14.0124, 0.74", "-10.1443, -26.7202, -14.0238, 1.11", "-10.2299, -27.4334, -14.0698, 0.96", "-10.4699, -28.1581, -14.135, 0.74", "-10.7006, -28.5969, -14.1748, 0.74", "-10.9318, -28.9795, -14.1905, 0.74", "-11.2475, -29.5216, -14.1906, 0.59", "-11.6124, -30.2122, -14.1726, 0.52", "-11.9349, -30.968, -14.1342, 0.52", "-12.1794, -31.7465, -14.095, 0.74", "-12.3783, -32.8102, -14.0579, 0.88", "-12.4197, -33.4488, -14.0473, 1.18", "-12.3954, -33.9342, -14.0614, 1.4", "-12.3169, -34.5732, -14.1063, 1.62", "-12.2607, -34.9696, -14.1508, 1.77", "-12.2017, -35.5076, -14.2382, 1.4", "-12.1713, -36.1636, -14.3641, 0.66", "-12.2023, -36.8997, -14.5137, 0.44", "-12.2986, -37.4994, -14.6359, 0.81", "-12.4147, -37.9095, -14.7381, 1.25", "-12.493, -38.1417, -14.8185, 1.4", "-12.576, -38.3538, -14.9196, 1.4", "-12.7703, -38.803, -15.1621, 0.88", "-13.0872, -39.5153, -15.5738, 0.59", "-13.3899, -40.2186, -16.0042, 0.59", "-13.7634, -41.1033, -16.5496, 0.88", "-14.099, -41.9314, -17.0621, 0.52", "-14.3322, -42.5529, -17.4607, 0.52", "-14.4331, -42.885, -17.6858, 1.11", "-14.513, -43.2708, -17.9546, 1.55", "-14.5429, -43.6482, -18.1921, 1.77", "-14.5211, -44.0453, -18.4161, 1.4", "-14.3653, -44.8309, -18.8325, 0.66", "-14.1506, -45.559, -19.2129, 0.44", "-13.9288, -46.1785, -19.5152, 0.44", "-13.6407, -46.8872, -19.832, 0.44", "-13.5101, -47.201, -19.954, 0.88", "-13.3984, -47.4793, -20.0319, 1.25", "-13.2785, -47.812, -20.0907, 1.55", "-13.2152, -48.062, -20.1203, 1.55", "-13.1375, -48.5955, -20.173, 1.25", "-13.1215, -49.5092, -20.2354, 0.59", "-13.2067, -50.2785, -20.2951, 0.59", "-13.2946, -50.6745, -20.3075, 0.96", "-13.47, -51.2204, -20.3013, 0.96", "-13.6884, -51.7465, -20.2712, 0.81", "-14.1546, -52.6662, -20.1712, 0.37", "-14.6484, -53.4753, -20.0478, 0.37", "-15.1526, -54.2339, -19.9118, 1.18", "-15.3363, -54.505, -19.8449, 1.62", "-15.5355, -54.7839, -19.7544, 1.62", "-15.8654, -55.2349, -19.5604, 1.33", "-16.3853, -55.9289, -19.1836, 0.44", "-16.85, -56.5318, -18.8039, 0.44", "-17.2172, -57.0018, -18.5132, 0.66", "-17.6514, -57.5648, -18.1683, 0.66", "-18.0762, -58.1329, -17.836, 0.44", "-18.3356, -58.4976, -17.6393, 0.81", "-18.5336, -58.7894, -17.5058, 1.25", "-18.7703, -59.1438, -17.3703, 1.55", "-19.0229, -59.5315, -17.2546, 1.25", "-19.3152, -60.0014, -17.1403, 0.52", "-19.6074, -60.4706, -17.0501, 0.37", "-19.8951, -60.9753, -16.9205, 0.29", "-20.2606, -61.6655, -16.6726, 0.81", "-20.4381, -62.0312, -16.4938, 1.25", "-20.596, -62.4244, -16.2406, 0.81", "-20.7787, -62.9869, -15.8238, 0.37", "-21.0012, -63.8666, -15.1255, 0.37", "-21.0824, -64.2477, -14.8168, 0.74", "-21.1886, -64.7623, -14.4147, 0.81", "-21.3442, -65.4429, -13.902, 0.29", "-21.4412, -65.8559, -13.6186, 0.88", "-21.4899, -66.0807, -13.4997, 1.18", "-21.5824, -66.519, -13.3812, 1.18", "-21.6811, -66.9856, -13.3309, 0.81", "-21.8407, -67.7049, -13.3411, 0.29", "-21.9811, -68.3059, -13.3913, 0.29", "-22.0828, -68.8092, -13.4348, 0.29", "-22.1375, -69.1516, -13.4772, 0.66", "-22.1866, -69.5793, -13.5406, 0.96", "-22.2338, -70.0505, -13.6354, 0.96", "-22.2907, -70.5692, -13.7605, 0.52", "-22.3989, -71.3079, -13.9542, 0.37", "-22.48, -71.8063, -14.1127, 0.74", "-22.5749, -72.3415, -14.3072, 0.44", "-22.6844, -72.8664, -14.5171, 1.11", "-22.7693, -73.1853, -14.6521, 1.11", "-22.9085, -73.5536, -14.8065, 0.81", "-23.2784, -74.3773, -15.1176, 0.37", "-23.5165, -74.8428, -15.2439, 0.66", "-23.6397, -75.0602, -15.2872, 0.96", "-23.8397, -75.4172, -15.2991, 0.96", "-24.1586, -76.0805, -15.0966, 0.29", "-24.271, -76.5033, -14.6377, 0.29", "-24.2982, -76.826, -14.1525, 0.96", "-24.2856, -76.9836, -13.8765, 1.25", "-24.2223, -77.4487, -13.0054, 0.44", "-24.0465, -78.2998, -11.2779, 0.81", "-23.6903, -79.5394, -8.5121, 0.22", "-23.562, -79.9142, -7.59559, 1.18", "-23.4024, -80.2804, -6.64457, 1.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-72.6065, -151.723, 12.2908, 0.29", "-71.2035, -152.228, 12.7712, 0.29", "-70.1435, -152.609, 13.1342, 0.29", "-68.8613, -153.07, 13.5732, 0.29", "-67.8605, -153.43, 13.9159, 0.15", "-67.0768, -153.712, 14.1843, 0.29", "-66.6446, -153.868, 14.3323, 0.29", "-58.4932, -157.743, 16.2322, 0.29", "-51.2828, -162.819, 18.9388, 0.29", "-43.8722, -168.034, 20.6597, 0.29", "-37.2793, -173.593, 23.9301, 0.29", "-30.9349, -179.924, 26.1086, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-72.6065, -151.723, 12.2908, 0.29", "-73.4033, -152.468, 12.3165, 0.29", "-74.2157, -153.208, 12.3386, 0.29", "-75.0378, -153.958, 12.3609, 0.29", "-76.0228, -154.856, 12.3877, 0.29", "-76.5771, -155.361, 12.4028, 0.29", "-77.1586, -155.891, 12.4186, 0.81", "-77.5479, -156.196, 12.413, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-9.27992, 20.2328, 12.0454, 0.66", "-10.8824, 21.243, 12.0857, 0.66", "-11.7045, 21.7445, 12.0788, 0.66", "-12.4697, 22.2022, 12.0181, 0.59", "-13.0861, 22.5713, 11.973, 1.11", "-13.5149, 22.8231, 11.9881, 1.4", "-13.8172, 23.0085, 12.025, 1.4", "-14.3718, 23.3725, 12.1289, 0.66", "-14.8286, 23.7578, 12.4221, 0.44", "-15.1851, 24.1438, 12.8295, 0.44", "-15.8412, 25.0325, 13.8277, 0.74", "-16.2183, 25.6044, 14.4356, 0.52", "-16.4521, 25.9528, 14.7589, 0.44", "-16.736, 26.3687, 15.0939, 0.74", "-17.0889, 26.8148, 15.402, 0.74", "-17.3871, 27.1269, 15.5422, 0.74", "-17.7845, 27.4557, 15.6637, 0.29", "-18.5876, 27.9211, 16.023, 0.29", "-18.7407, 27.996, 16.1136, 0.81", "-19.224, 28.2225, 16.4479, 0.81", "-19.6915, 28.4675, 16.8053, 0.74", "-20.3831, 28.8708, 17.3617, 0.81", "-21.7388, 29.7621, 18.4967, 1.69", "-22.5912, 30.3971, 19.2062, 0.52", "-22.9072, 30.658, 19.4716, 0.59", "-23.5132, 31.199, 19.9539, 0.59", "-23.9244, 31.5741, 20.2591, 0.66", "-24.2357, 31.8743, 20.4512, 1.03", "-24.5241, 32.1497, 20.5819, 1.03", "-25.3608, 32.8202, 20.9353, 0.81", "-25.826, 33.1595, 21.1363, 0.59", "-26.5035, 33.6357, 21.4249, 0.52", "-26.9329, 33.974, 21.608, 0.52", "-27.4324, 34.4431, 21.8171, 0.59", "-27.7947, 34.8182, 21.9648, 0.88", "-28.0921, 35.2137, 22.0613, 1.03", "-28.4126, 35.7638, 22.1757, 0.59", "-28.6291, 36.2599, 22.244, 0.52", "-28.7864, 36.7026, 22.3012, 0.81", "-33.1296, 41.8402, 24.9957, 0.81", "-37.911, 46.3383, 28.0658, 0.81", "-42.4051, 50.7276, 31.6792, 0.81", "-46.004, 55.1222, 36.1797, 0.81", "-49.6176, 60.0052, 40.1317, 0.81", "-53.0421, 64.389, 44.7765, 0.81", "-55.5803, 68.8007, 49.9355, 0.81", "-57.0698, 72.3895, 56.0528, 0.81", "-58.0991, 76.0593, 62.2166, 0.81", "-59.7163, 80.0232, 68.0639, 0.81", "-61.9192, 83.9946, 73.7116, 0.81" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-9.27992, 20.2328, 12.0454, 1.11", "-9.06509, 21.4634, 11.4453, 1.11", "-9.0111, 22.8278, 10.799, 0.81", "-9.17891, 24.259, 10.0743, 0.74", "-9.35231, 24.9871, 9.70092, 1.11", "-9.56054, 25.6489, 9.38271, 1.18", "-9.91667, 26.6507, 8.94401, 1.47", "-10.2529, 27.375, 8.6424, 1.47", "-10.885, 28.6322, 8.16997, 1.18", "-11.473, 29.8907, 7.77913, 0.96", "-11.9022, 30.9894, 7.48256, 1.03", "-12.2413, 32.1371, 7.19876, 1.4", "-12.4895, 33.4325, 6.91316, 1.4", "-12.5902, 34.9398, 6.60206, 1.03", "-12.5101, 36.1914, 6.35456, 1.03", "-12.3356, 37.2705, 6.13231, 1.25", "-11.9679, 38.8134, 5.73417, 1.11", "-11.6455, 39.9504, 5.39762, 1.11", "-11.2245, 41.4255, 4.85655, 1.11", "-10.7848, 43.0891, 4.10816, 1.11", "-10.5505, 44.2198, 3.50455, 1.11", "-10.3677, 45.7747, 2.54102, 1.33", "-10.4301, 46.6973, 1.8755, 1.03", "-10.9039, 48.2098, 0.618067, 1.18", "-11.2365, 48.7605, 0.119951, 1.47", "-11.7246, 49.3058, -0.365323, 1.47", "-12.2556, 49.7731, -0.723783, 1.69", "-13.8569, 50.988, -1.35285, 0.88", "-14.8586, 51.7273, -1.56573, 1.11", "-15.7692, 52.4865, -1.56344, 1.11", "-16.7008, 53.4152, -1.4249, 0.96", "-17.4908, 54.4354, -1.1839, 0.88", "-18.1741, 55.6702, -0.850464, 1.18", "-18.6418, 56.9032, -0.482977, 1.47", "-19.1263, 58.7815, 0.0635223, 1.4", "-19.3427, 60.0809, 0.406414, 0.88", "-19.5282, 61.8363, 0.799114, 0.81", "-19.6135, 63.5249, 1.13549, 1.69", "-19.6109, 64.2551, 1.27541, 1.99", "-19.5864, 65.0406, 1.41364, 1.99", "-19.5811, 65.6674, 1.49164, 2.21", "-19.6035, 66.8355, 1.68604, 1.99" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.965, 9.66791, -7.11937, 1.4", "-26.0625, 11.0064, -8.57252, 1.4", "-26.0362, 11.2905, -9.80598, 1.4", "-26.0138, 11.4609, -10.6528, 1.33", "-26.017, 11.8584, -12.3461, 1.62", "-26.0537, 12.2643, -13.7015, 1.25", "-26.2085, 13.2729, -16.4296, 1.03", "-26.5737, 14.5428, -19.9328, 1.4", "-26.7177, 14.9492, -20.878, 1.4", "-26.9416, 15.4761, -21.8506, 1.11", "-27.2861, 16.2405, -22.8467, 1.33", "-27.6668, 16.9457, -23.552, 1.69", "-28.1973, 17.7419, -24.1635, 1.69", "-28.6563, 18.3202, -24.5815, 1.69", "-29.6427, 19.4236, -25.6567, 0.74", "-30.0313, 19.856, -26.1862, 0.74", "-30.5162, 20.4037, -27.04, 0.59", "-31.182, 21.2699, -28.5523, 1.18", "-31.6263, 21.9687, -29.9753, 1.18", "-31.9452, 22.6139, -31.3436, 1.18", "-32.0976, 23.0857, -32.365, 1.18", "-32.2169, 23.7996, -34.038, 0.81", "-32.2607, 24.2281, -35.0077, 0.66", "-32.3931, 25.3957, -37.4703, 0.66", "-32.4527, 25.644, -37.9584, 1.25", "-32.8094, 26.4909, -39.4656, 1.47", "-33.462, 27.4848, -40.9805, 0.59", "-34.2675, 28.5163, -42.154, 1.03", "-34.7565, 29.1025, -42.6587, 1.4", "-35.213, 29.6549, -42.9981, 1.47", "-36.0324, 30.7152, -43.5584, 1.11", "-36.9059, 32.0347, -44.0976, 0.81", "-37.4883, 33.2332, -44.6048, 0.96", "-37.6511, 34.0792, -45.0641, 1.25", "-37.6572, 34.7499, -45.4741, 1.55", "-37.5889, 35.6165, -46.0316, 1.55", "-37.4656, 36.566, -46.6584, 0.96", "-37.2933, 37.9706, -47.5903, 0.66", "-37.2984, 38.9614, -48.2262, 0.66", "-37.4742, 39.6296, -48.5947, 0.74", "-38.0713, 40.5991, -49.0731, 1.03", "-38.6294, 41.1712, -49.3497, 1.47", "-39.0587, 41.5216, -49.5358, 1.77", "-39.6055, 41.9137, -49.7715, 1.62", "-40.8831, 42.8102, -50.4219, 0.88", "-41.7969, 43.5063, -50.981, 0.66", "-42.7516, 44.3521, -51.6966, 0.59", "-43.5578, 45.2361, -52.4403, 0.81", "-43.9865, 45.8708, -52.9414, 0.59", "-44.4149, 46.7963, -53.611, 0.81", "-44.5784, 47.3825, -53.9823, 1.03", "-44.6977, 48.0045, -54.3097, 1.03", "-44.8072, 48.7626, -54.6123, 0.74", "-44.9501, 49.7437, -54.8905, 0.52", "-45.0722, 50.446, -55.0417, 0.52", "-45.3037, 51.4343, -55.2229, 1.11", "-45.545, 52.2181, -55.3597, 1.4", "-45.9597, 53.374, -55.5672, 1.4", "-46.2034, 54.063, -55.7021, 1.03", "-46.3725, 54.6316, -55.8432, 0.74", "-46.5699, 55.5904, -56.1657, 0.59", "-46.6176, 56.201, -56.4544, 0.52", "-46.5924, 56.9457, -56.9108, 0.52", "-46.4943, 57.965, -57.6851, 0.52", "-46.4017, 58.7314, -58.3109, 0.52", "-46.3305, 59.3428, -58.8958, 0.52", "-46.307, 59.8951, -59.547, 0.52", "-46.3834, 60.2223, -59.9817, 0.52", "-46.6174, 60.5392, -60.4528, 0.81", "-47.0296, 60.8392, -60.9169, 0.96", "-47.8901, 61.2696, -61.5758, 0.96", "-48.7218, 61.6246, -62.0728, 0.52", "-49.6631, 62.011, -62.5785, 0.81", "-50.1322, 62.216, -62.8385, 1.18", "-50.6335, 62.4727, -63.1368, 1.18", "-51.4542, 63.0419, -63.6829, 0.44", "-51.928, 63.5319, -64.0756, 0.44", "-52.2549, 64.1115, -64.5214, 0.74", "-52.3848, 64.6552, -64.9872, 0.74", "-52.4079, 65.1443, -65.4057, 0.44", "-52.3578, 65.957, -66.0673, 0.66", "-52.2486, 66.8129, -66.7254, 0.96", "-52.1598, 67.4769, -67.2219, 0.74", "-52.0624, 68.5263, -67.9572, 0.37", "-52.0302, 69.3925, -68.5062, 0.37", "-52.0705, 70.2416, -68.9935, 0.88", "-52.1381, 70.6202, -69.1654, 1.18", "-52.3544, 71.1249, -69.3154, 1.18", "-52.7147, 71.6165, -69.4338, 1.18", "-53.0842, 72.041, -69.5197, 1.11", "-53.5283, 72.5338, -69.6277, 0.44", "-54.2221, 73.3399, -69.8202, 0.44", "-55.3364, 74.7513, -70.1832, 0.44", "-56.0778, 75.7683, -70.4864, 0.44", "-56.7958, 76.8539, -70.8459, 0.44", "-57.2353, 77.6225, -71.1606, 0.44", "-57.5817, 78.3791, -71.5206, 1.47", "-57.7883, 78.9982, -71.8717, 1.47", "-57.9799, 79.8037, -72.3956, 1.18", "-58.1724, 80.5597, -73.0143, 0.66", "-58.4024, 81.4214, -74.1024, 0.44", "-58.4854, 81.8796, -74.8303, 0.59", "-58.5302, 82.3923, -75.8729, 0.59", "-58.5324, 82.789, -76.8434, 0.74", "-58.4968, 83.4071, -78.7857, 1.25", "-58.4575, 84.1386, -81.6176, 0.66", "-58.4693, 84.4211, -82.9051, 0.66", "-58.5122, 84.7932, -84.7999, 1.25", "-58.5485, 84.9915, -85.7615, 1.62", "-58.7072, 85.7513, -88.837, 1.4", "-58.7728, 86.1119, -90.0739, 1.11", "-58.8826, 86.6201, -91.623, 1.25", "-58.9558, 87.1006, -92.9823, 0.96", "-58.9569, 87.547, -93.989, 1.18", "-58.9126, 88.1066, -95.0365, 1.4", "-58.8405, 88.8545, -96.182, 0.37", "-58.8084, 89.4659, -97.1804, 0.37", "-58.7938, 89.9989, -98.112, 0.88", "-58.8141, 90.4084, -98.9043, 0.88", "-58.8513, 90.7866, -99.7403, 0.88", "-58.9778, 91.4212, -101.334, 0.37", "-59.2367, 92.174, -103.182, 1.03", "-59.4136, 92.5111, -104.115, 1.03", "-59.5588, 92.6861, -104.728, 1.03", "-60.0334, 93.0602, -106.342, 0.29", "-60.4984, 93.3736, -107.894, 0.29", "-60.9219, 93.6154, -109.28, 0.29", "-61.5042, 93.9044, -111.081, 1.25", "-62.2643, 94.2185, -113.19, 1.25", "-62.8926, 94.44, -114.838, 0.96", "-63.7099, 94.751, -116.898, 0.37", "-63.9472, 94.8813, -117.559, 0.66", "-64.2356, 95.0699, -118.466, 1.03", "-64.5031, 95.3647, -119.509, 1.03", "-64.9023, 96.1057, -121.627, 0.52", "-65.0458, 96.4888, -122.571, 1.03", "-65.3466, 96.9893, -123.653, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-25.965, 9.66791, -7.11937, 0.74", "-26.9038, 8.9897, -7.18412, 0.74", "-27.8007, 8.24994, -7.26506, 0.74", "-28.7137, 7.49683, -7.34746, 1.03", "-29.3097, 7.00525, -7.40125, 1.4", "-30.1874, 6.28133, -7.48045, 1.84", "-30.7549, 5.81326, -7.53167, 2.14", "-31.1364, 5.37724, -7.57619, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.8915, 5.92002, 2.65033, 0.29", "55.72, 8.18146, 2.65033, 0.29", "70.5486, 10.4429, 2.65033, 0.29" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "14.6725, -87.9156, 15.7476, 0.52", "13.4568, -86.5347, 16.7352, 0.52", "12.9829, -85.9964, 17.1202, 0.52", "12.3823, -85.3143, 17.608, 1.25", "12.0931, -84.9856, 17.843, 1.4", "11.5531, -84.3724, 18.2816, 0.37", "11.2182, -83.9919, 18.5537, 0.29", "7.053, -78.0526, 21.3941, 0.29", "2.09117, -72.2715, 23.0228, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "14.6725, -87.9156, 15.7476, 0.66", "15.7079, -89.0579, 15.6604, 0.66", "16.6723, -90.0543, 15.6252, 0.59", "17.8895, -91.3363, 15.6083, 0.59", "18.4518, -91.9613, 15.6197, 0.88", "19.092, -92.7253, 15.6437, 0.88", "19.8676, -93.7579, 15.6395, 0.52", "20.4547, -94.653, 15.6086, 0.52", "20.7482, -95.3036, 15.5967, 1.11", "20.8634, -96.066, 15.559, 1.47", "20.8021, -96.6536, 15.5144, 1.18", "20.3052, -97.9571, 15.389, 0.59", "19.8619, -98.6605, 15.3668, 0.59", "19.2635, -99.4062, 15.4256, 0.37", "18.9404, -99.792, 15.5053, 0.59", "18.5571, -100.282, 15.6571, 0.59", "17.9484, -101.264, 16.0639, 0.44", "17.514, -102.638, 16.748, 0.37", "17.5554, -103.483, 17.1492, 0.66", "17.8311, -104.364, 17.5465, 0.96", "18.2042, -105.13, 17.8874, 0.74", "18.7997, -106.054, 18.271, 0.52", "19.6469, -107.133, 18.6702, 0.81", "20.3312, -107.894, 18.9029, 0.96", "20.8169, -108.413, 19.05, 1.03", "21.569, -109.239, 19.2448, 0.81", "22.2385, -110.004, 19.3844, 0.74", "22.7504, -110.578, 19.4488, 1.11", "23.2672, -111.134, 19.4466, 1.11", "23.9838, -111.89, 19.3646, 0.81", "24.6118, -112.555, 19.2396, 0.52", "25.0741, -113.112, 19.1144, 0.74", "25.5129, -113.758, 19.003, 0.74", "25.9962, -114.646, 18.8965, 0.52", "26.2673, -115.297, 18.8528, 0.81", "26.4707, -115.843, 18.8373, 0.81", "26.9113, -117.048, 18.8997, 0.59", "27.2533, -117.91, 18.9984, 0.81", "27.5636, -118.614, 19.1698, 0.81", "27.9848, -119.462, 19.4757, 0.44", "28.4624, -120.29, 19.8553, 0.81", "29.0742, -121.166, 20.318, 0.66", "29.7735, -121.98, 20.7739, 0.29", "31.0358, -123.319, 21.4602, 0.74", "31.5135, -123.81, 21.6883, 1.25", "31.9334, -124.238, 21.8866, 1.25", "32.8549, -125.253, 22.3108, 0.37", "33.6391, -126.182, 22.5981, 0.37", "34.4891, -127.187, 22.8241, 0.37", "34.962, -127.715, 22.8362, 0.37" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "5.46671, -40.3599, 22.373, 0.44", "7.02831, -40.373, 23.2042, 0.44", "7.78992, -40.3793, 23.6095, 0.29", "8.79055, -40.3877, 24.1421, 0.52", "9.30883, -40.392, 24.4179, 0.74", "9.56503, -40.3941, 24.5543, 0.74", "17.5575, -40.4474, 28.1568, 0.74", "26.0731, -39.9477, 30.1805, 0.74", "34.1803, -40.6068, 33.4516, 0.74", "42.3156, -40.6071, 36.7192, 0.74", "50.3125, -40.9954, 40.2913, 0.74", "58.5412, -42.6326, 42.8346, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "5.46671, -40.3599, 22.373, 0.44", "5.1152, -41.2448, 23.1169, 0.44", "4.90718, -41.7684, 23.5571, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-69.6791, -83.6465, 66.4689, 0.29", "-68.5241, -93.1667, 70.1594, 0.29", "-66.7622, -103.116, 72.0293, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-69.6791, -83.6465, 66.4689, 0.22", "-78.7875, -83.8893, 72.3599, 0.29", "-88.7974, -84.1558, 76.5384, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-30.9349, -179.924, 26.1086, 0.37", "-20.8721, -186.849, 27.8878, 0.37", "-9.68416, -191.786, 29.5696, 0.37", "1.62676, -196.203, 31.7891, 0.37", "12.2248, -202.529, 32.0008, 0.37", "22.683, -209.045, 31.2672, 0.37", "31.9432, -217.147, 30.28, 0.37", "40.8466, -225.698, 30.2626, 0.37", "48.7946, -234.932, 32.243, 0.37", "56.0931, -244.644, 34.4335, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-30.9349, -179.924, 26.1086, 0.22", "-25.121, -183.827, 28.1845, 0.37", "-18.6536, -187.1, 29.084, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-77.5479, -156.196, 12.413, 0.22", "-77.3259, -157.268, 12.4543, 0.22", "-77.1555, -158.09, 12.4859, 0.22", "-77.0246, -158.722, 12.5103, 0.37", "-76.8269, -159.676, 12.547, 0.37", "-74.7563, -166.979, 14.0785, 0.37", "-71.8191, -174.002, 15.4961, 0.37", "-69.3742, -181.265, 16.6098, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-77.5479, -156.196, 12.413, 0.22", "-78.6994, -157.894, 13.1925, 0.22", "-78.7554, -157.959, 13.2257, 0.44", "-79.4075, -158.562, 13.5156, 0.15", "-79.6378, -158.746, 13.5909, 0.37", "-80.3937, -159.324, 13.796, 0.15", "-81.347, -160.057, 13.9769, 0.22", "-82.1689, -160.64, 14.1289, 0.22", "-82.8603, -161.176, 14.4105, 0.66", "-83.7232, -161.82, 14.7994, 0.22", "-84.0532, -162.069, 14.965, 0.88", "-84.769, -162.643, 15.4019, 0.74", "-86.1103, -164.023, 16.5093, 1.4", "-86.9671, -165.315, 17.8461, 1.18", "-93.5595, -172.727, 23.5077, 1.18", "-99.1196, -180.547, 29.7033, 1.18", "-106.158, -187.484, 35.4289, 1.18", "-113.614, -195.109, 39.5165, 1.18", "-120.238, -202.832, 44.7072, 1.18", "-127.516, -209.584, 50.3544, 1.18", "-133.844, -216.761, 56.5899, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-61.9192, 83.9946, 73.7116, 0.37", "-65.5668, 88.3812, 77.8567, 0.37", "-70.0252, 91.5189, 82.3299, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-61.9192, 83.9946, 73.7116, 0.29", "-68.4234, 92.0232, 81.7111, 0.37", "-74.2598, 100.542, 89.7192, 0.37", "-80.1831, 107.107, 99.3404, 0.37", "-84.9811, 114.982, 108.599, 0.37", "-89.8698, 120.52, 119.378, 0.37", "-94.579, 126.696, 129.887, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-19.6035, 66.8355, 1.68604, 0.96", "-20.1838, 68.646, 1.03556, 0.96", "-20.6713, 69.7954, 0.609481, 0.81", "-21.1279, 70.6989, 0.298689, 0.81", "-21.692, 71.6163, -0.0889992, 1.18", "-23.0129, 73.6516, -1.00703, 1.18", "-23.3451, 74.1693, -1.24066, 1.18", "-23.9125, 74.9506, -1.6273, 0.81", "-24.3398, 75.5942, -1.90112, 0.81", "-25.1557, 77.2719, -2.34379, 0.66", "-25.3816, 78.2309, -2.38559, 0.96", "-25.3984, 79.2069, -2.24621, 1.11", "-25.2872, 80.2298, -1.99611, 0.81", "-24.9614, 81.9624, -1.4776, 0.59", "-24.559, 83.7852, -0.923952, 0.81", "-24.2022, 85.3177, -0.451773, 1.11", "-23.9867, 86.4323, -0.196123, 1.25", "-23.7626, 88.1283, 0.0502803, 0.59", "-23.7511, 88.9586, 0.0511059, 0.59", "-24.1034, 90.4769, -0.326079, 0.59", "-24.5801, 91.2932, -0.763384, 0.44", "-25.7157, 92.6263, -1.76056, 1.11", "-26.1015, 93.0009, -2.09357, 1.4", "-27.148, 93.9282, -3.01743, 0.88", "-27.963, 94.6557, -3.72069, 0.52", "-28.5573, 95.2463, -4.22306, 0.52", "-29.1209, 96.0522, -4.82366, 0.74", "-29.2757, 96.7178, -5.22308, 1.11", "-29.182, 97.5526, -5.67278, 1.33", "-29.0032, 98.0465, -5.92023, 1.62", "-28.6437, 98.6996, -6.26988, 1.47", "-27.8839, 99.7767, -6.88476, 0.96", "-27.343, 100.458, -7.30018, 0.81", "-26.8044, 101.137, -7.70591, 0.81", "-26.1993, 101.947, -8.16059, 0.66", "-25.6317, 102.826, -8.63449, 0.59", "-25.3441, 103.412, -8.93929, 0.59", "-25.0547, 104.271, -9.35816, 0.44", "-24.8521, 105.228, -9.78952, 0.81", "-24.7445, 106.231, -10.2405, 0.81", "-24.6917, 107.383, -10.7607, 1.03", "-24.704, 108.538, -11.3762, 1.25", "-24.7413, 109.045, -11.7246, 1.25", "-24.8353, 109.618, -12.3246, 1.18", "-25.001, 110.43, -13.3894, 0.66", "-25.0755, 110.856, -13.9474, 0.59", "-25.246, 112.08, -15.475, 1.25", "-25.3381, 113.126, -16.6542, 1.99", "-25.4501, 115.688, -19.0849, 0.59", "-25.4449, 116.445, -19.6444, 0.66", "-25.3207, 118.675, -20.7408, 0.52", "-25.224, 119.62, -21.012, 1.03", "-25.0578, 120.782, -21.1488, 1.25", "-24.8441, 122.15, -21.1884, 0.74", "-24.6965, 123.173, -21.1648, 0.59", "-24.628, 124.012, -21.2275, 0.59", "-24.5729, 125.156, -21.4711, 0.88", "-24.4883, 126.099, -21.7514, 1.11", "-24.3679, 126.888, -22.0581, 1.11", "-24.152, 127.806, -22.4752, 1.03", "-23.7245, 129.043, -23.0992, 0.66", "-23.2683, 129.942, -23.6134, 0.66", "-22.3957, 131.152, -24.3997, 0.96", "-21.7026, 131.912, -25.0047, 1.4", "-21.2894, 132.312, -25.3716, 1.4", "-20.8261, 132.735, -25.8151, 1.4", "-20.1776, 133.356, -26.5591, 0.74", "-19.6988, 134.02, -27.4398, 0.37", "-19.3478, 134.975, -28.8695, 0.37", "-19.2723, 135.41, -29.5895, 0.96", "-19.2371, 135.784, -30.2471, 0.96", "-19.2205, 136.335, -31.3074, 0.66", "-19.2146, 137.129, -32.8936, 0.52", "-19.2004, 137.594, -33.7722, 0.37", "-19.1223, 138.138, -34.6345, 0.81", "-19.048, 138.65, -35.3352, 0.52", "-18.9939, 139.528, -36.3264, 0.52", "-19.0417, 140.131, -36.923, 0.66", "-19.2932, 141.124, -37.7399, 0.66", "-19.7053, 141.971, -38.3849, 0.66", "-20.328, 142.952, -39.1195, 0.66", "-21.0423, 143.967, -39.8915, 0.81", "-21.7967, 145.01, -40.7415, 1.03", "-22.1743, 145.532, -41.2434, 1.25", "-22.7634, 146.416, -42.2362, 0.52", "-23.0753, 146.982, -42.9631, 0.37", "-23.2328, 147.584, -43.8593, 0.37", "-23.2125, 148.422, -45.2829, 1.11", "-23.104, 148.932, -46.2854, 1.62", "-23.0338, 149.138, -46.7429, 1.69", "-22.9074, 149.51, -47.6024, 1.69", "-22.7451, 150.48, -49.7253, 0.44", "-22.7647, 151.082, -50.9183, 0.96", "-22.8726, 151.758, -52.0833, 1.03", "-22.9953, 152.254, -52.7657, 0.88", "-23.2975, 153.186, -53.8349, 0.44", "-23.6431, 154.2, -54.8109, 0.74", "-23.867, 154.836, -55.3039, 1.03", "-24.0086, 155.434, -55.8076, 1.03", "-24.0552, 156.258, -56.6858, 0.59", "-23.9099, 156.954, -57.6959, 0.59", "-23.6079, 157.51, -58.73, 0.59", "-23.3639, 157.862, -59.4676, 0.74", "-22.8267, 158.782, -61.3208, 0.74", "-22.7065, 159.165, -62.0068, 0.96", "-22.6673, 159.687, -62.6454, 1.11", "-22.6997, 160.195, -63.014, 1.11", "-22.823, 161.231, -63.5162, 0.66", "-22.9511, 162.545, -63.9462, 0.52", "-22.9864, 163.957, -64.2431, 0.52", "-22.9068, 166.241, -64.6426, 1.11", "-22.8558, 167.08, -64.768, 1.33", "-22.7951, 167.895, -64.8649, 1.33", "-22.6963, 169.324, -64.9833, 0.44", "-22.6265, 170.467, -65.0883, 0.44", "-22.606, 171.443, -65.23, 0.74", "-22.653, 172.169, -65.3827, 0.74", "-22.7865, 173.335, -65.6191, 0.52", "-23.0072, 174.769, -65.8962, 0.44", "-23.2999, 176.103, -66.1388, 0.44", "-23.6649, 177.456, -66.3859, 1.18", "-23.9119, 178.258, -66.5519, 1.18", "-24.2627, 179.312, -66.8146, 0.96", "-24.6338, 180.346, -67.1271, 0.44", "-25.1741, 181.849, -67.7066, 0.37", "-25.3789, 182.424, -67.9871, 0.37", "-25.7464, 183.626, -68.7044, 0.88", "-25.9129, 184.543, -69.2725, 1.18", "-25.9158, 185.232, -69.6744, 1.18", "-25.6632, 186.631, -70.3405, 0.59", "-25.2348, 187.978, -70.8072, 0.52", "-24.8798, 188.923, -71.0301, 0.44", "-23.9708, 190.984, -71.2537, 0.74", "-23.3949, 192.212, -71.2869, 1.25", "-22.8738, 193.315, -71.2618, 1.55", "-22.4354, 194.288, -71.1834, 1.62", "-21.8952, 195.528, -71.0399, 0.81", "-21.2926, 196.973, -70.8855, 0.37", "-20.8354, 198.133, -70.8127, 0.37", "-20.5332, 199.005, -70.7525, 0.37", "-20.269, 200.03, -70.6617, 0.37", "-20.1889, 200.66, -70.5982, 0.37", "-20.1885, 201.515, -70.5548, 0.66", "-20.1997, 202.407, -70.509, 0.96", "-20.1432, 203.122, -70.4242, 1.18", "-19.9333, 204.276, -70.2762, 0.52", "-19.5648, 205.666, -70.1419, 0.66", "-19.2011, 206.891, -70.0564, 0.59", "-18.4208, 209.328, -69.9135, 0.52", "-17.8673, 210.817, -69.8582, 0.96", "-17.4663, 211.747, -69.8438, 0.96", "-16.9024, 212.832, -69.8889, 0.66", "-16.086, 214.22, -70.0108, 0.44", "-15.4481, 215.285, -70.1736, 0.44", "-14.8678, 216.299, -70.4541, 0.52", "-14.3529, 217.207, -70.731, 0.52", "-13.3972, 218.823, -71.1831, 0.81", "-12.7315, 219.99, -71.4629, 0.52", "-12.13, 221.231, -71.6524, 0.52", "-11.7062, 222.377, -71.7413, 1.47", "-11.5023, 223.071, -71.7629, 1.77", "-11.357, 223.638, -71.7769, 1.77", "-11.0779, 224.811, -71.8153, 0.66", "-10.6723, 226.297, -71.9686, 0.52", "-10.2314, 227.579, -72.179, 0.52", "-9.73913, 228.832, -72.4618, 0.52", "-9.41922, 229.655, -72.6865, 0.52", "-9.20127, 230.265, -72.8695, 0.81", "-8.87729, 231.26, -73.186, 1.03", "-8.64007, 232.329, -73.511, 1.55", "-8.55769, 232.834, -73.6472, 1.33", "-8.38292, 233.857, -73.9166, 0.88", "-8.16592, 234.698, -74.1628, 0.81", "-7.85017, 235.436, -74.4398, 0.59", "-7.02534, 236.634, -75.0535, 0.44", "-6.25991, 237.378, -75.5148, 0.66", "-5.4898, 237.996, -75.9305, 0.81", "-4.65373, 238.595, -76.3506, 0.44", "-3.88516, 239.132, -76.68, 0.81", "-3.28932, 239.575, -76.9045, 0.81", "-2.38828, 240.28, -77.2133, 0.52", "-1.71872, 240.897, -77.4538, 0.52", "-1.00926, 241.618, -77.7223, 0.52", "-0.284016, 242.381, -78.0205, 0.37", "0.621635, 243.341, -78.487, 0.37", "1.30604, 244.06, -78.9442, 0.59", "1.98996, 244.76, -79.4353, 1.18", "2.23974, 245.011, -79.5903, 1.47", "2.76943, 245.574, -79.8841, 1.47", "3.60947, 246.537, -80.319, 0.52", "4.24139, 247.306, -80.6147, 0.52", "5.36112, 248.733, -81.1393, 0.96", "6.3151, 249.909, -81.5986, 0.52", "7.18156, 250.927, -82.071, 0.96", "7.6494, 251.455, -82.3649, 0.96", "8.53888, 252.331, -82.9971, 0.52", "8.99719, 252.732, -83.423, 0.37", "9.67838, 253.19, -84.219, 0.37", "10.1815, 253.419, -84.8263, 0.81", "10.6437, 253.559, -85.3385, 0.81", "11.3765, 253.754, -86.1108, 0.52", "11.9196, 253.908, -86.6486, 0.74", "12.7569, 254.193, -87.4352, 0.74", "13.4693, 254.48, -88.0891, 0.52", "14.2621, 254.942, -88.8798, 0.52", "14.9816, 255.588, -89.6896, 0.96", "15.2997, 256.027, -90.1148, 1.55", "15.5435, 256.467, -90.4675, 1.69", "15.6813, 256.766, -90.6779, 1.69", "16.3906, 258.259, -91.6813, 0.52", "16.9424, 259.253, -92.3578, 0.66", "17.3347, 259.791, -92.7456, 0.74", "18.0896, 260.604, -93.443, 0.44", "18.9135, 261.388, -94.1735, 0.37", "19.696, 262.06, -94.8307, 1.11", "20.3135, 262.552, -95.3106, 1.55", "20.9834, 263.147, -95.9024, 0.81", "21.7289, 264.107, -96.7539, 0.52", "22.0086, 264.806, -97.2602, 0.66", "22.0874, 265.226, -97.5463, 0.66", "22.1629, 266.27, -98.2174, 0.44", "22.2054, 267.215, -98.8191, 0.44", "22.3176, 268.1, -99.4981, 0.52", "22.6464, 268.961, -100.429, 0.74", "23.0276, 269.467, -101.326, 1.11", "23.0893, 269.52, -101.459, 1.33", "23.3564, 269.675, -101.987, 1.33", "24.1417, 270.077, -103.609, 0.37", "24.4796, 270.257, -104.361, 0.37", "25.0089, 270.624, -105.63, 0.66", "25.3819, 271.0, -106.612, 0.44", "25.5812, 271.262, -107.176, 0.44", "26.0286, 271.931, -108.421, 1.18", "26.2834, 272.29, -108.965, 1.47", "26.6739, 272.778, -109.573, 1.47", "27.5307, 273.79, -110.552, 0.52", "27.9881, 274.356, -110.957, 0.52", "28.7728, 275.419, -111.509, 0.52", "29.7051, 276.799, -111.996, 0.88", "30.3138, 277.83, -112.262, 0.66", "31.0301, 279.202, -112.511, 0.96", "31.6267, 280.463, -112.671, 0.96", "32.1581, 281.638, -112.833, 0.96", "32.5585, 282.521, -112.985, 0.96", "32.988, 283.355, -113.22, 0.96", "33.5053, 284.063, -113.514, 0.96", "34.3359, 284.851, -113.994, 0.37", "35.2772, 285.576, -114.564, 0.37", "36.1427, 286.175, -115.079, 0.66", "36.8971, 286.712, -115.533, 1.33", "37.4301, 287.144, -115.864, 1.33", "38.091, 287.867, -116.311, 0.52", "38.7754, 288.804, -116.808, 0.52", "39.0794, 289.275, -117.04, 0.88", "39.457, 289.848, -117.362, 0.88", "39.9849, 290.536, -117.841, 0.88", "40.748, 291.284, -118.495, 0.44", "41.5453, 291.907, -119.167, 0.44", "42.4701, 292.432, -119.925, 0.81", "43.553, 292.881, -120.791, 1.47", "44.0525, 293.012, -121.181, 1.77", "44.9408, 293.111, -121.868, 1.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-19.6035, 66.8355, 1.68604, 0.52", "-20.89, 67.2311, 1.39222, 0.52", "-21.8642, 67.6108, 1.18727, 0.52", "-22.9962, 68.177, 0.953072, 0.52", "-23.7946, 68.6798, 0.780348, 0.74", "-24.3437, 69.1208, 0.623826, 0.74", "-24.8837, 69.6612, 0.379155, 0.59", "-25.1131, 70.0751, 0.172057, 0.37", "-25.3252, 70.7118, -0.156742, 0.37", "-25.4701, 71.3808, -0.480111, 0.37", "-25.6482, 72.3119, -0.893449, 0.37", "-25.9401, 73.4114, -1.32858, 0.37", "-26.1649, 73.8242, -1.43655, 0.44", "-26.5752, 74.2104, -1.43635, 0.59", "-26.9739, 74.4586, -1.37643, 0.59", "-28.2844, 75.118, -1.09726, 0.88", "-28.8946, 75.3784, -0.936632, 1.03", "-30.0755, 75.8299, -0.629587, 0.37", "-30.9263, 76.1306, -0.463479, 0.44", "-31.549, 76.3515, -0.403474, 0.74", "-32.1331, 76.5753, -0.406314, 0.74", "-33.0219, 76.9782, -0.524578, 0.44", "-33.7481, 77.4014, -0.706314, 0.29", "-34.1576, 77.7694, -0.934761, 0.29", "-34.6635, 78.4825, -1.46864, 1.03", "-34.8537, 78.9136, -1.83466, 1.4", "-34.9637, 79.2783, -2.15839, 1.4", "-35.1359, 80.0025, -2.81128, 0.96", "-35.4273, 81.2505, -3.87579, 0.52", "-35.582, 81.8113, -4.32778, 0.52", "-35.8704, 82.6462, -4.93343, 0.52", "-36.1014, 83.0607, -5.1586, 0.52", "-36.648, 83.6338, -5.21618, 0.52", "-37.3662, 84.1828, -5.0775, 0.88", "-37.7931, 84.4764, -4.9567, 1.25", "-38.3177, 84.8422, -4.79797, 1.47", "-39.2074, 85.517, -4.52989, 0.59", "-39.9597, 86.1847, -4.36781, 0.37", "-40.7512, 87.0287, -4.27588, 0.29", "-41.1455, 87.5179, -4.28228, 0.59", "-41.5933, 88.1404, -4.35124, 0.88", "-42.0519, 88.8001, -4.47006, 1.11", "-42.5768, 89.5448, -4.62625, 1.33", "-42.951, 90.0553, -4.72645, 1.03", "-43.468, 90.7269, -4.83729, 0.81", "-44.0175, 91.3853, -4.92439, 0.52", "-44.9787, 92.522, -5.03651, 0.52", "-45.6341, 93.3195, -5.11221, 0.52", "-45.9499, 93.7223, -5.14614, 0.66", "-46.2992, 94.2215, -5.20183, 0.66", "-46.7807, 95.0576, -5.31318, 0.37", "-47.1797, 95.9646, -5.44596, 0.37", "-47.4647, 96.8125, -5.59194, 0.88", "-47.6113, 97.2848, -5.6655, 0.88", "-47.9282, 98.2225, -5.80274, 0.37", "-48.2105, 98.9092, -5.88754, 0.29", "-48.6842, 99.8858, -5.97319, 0.81", "-48.8962, 100.302, -5.96978, 1.18", "-49.2678, 101.041, -5.90236, 1.18", "-49.5933, 101.747, -5.81026, 0.59", "-49.996, 102.78, -5.67881, 0.44", "-50.3076, 103.92, -5.57854, 0.44", "-50.5026, 105.148, -5.54345, 1.11", "-50.5384, 105.584, -5.56297, 1.11", "-50.5637, 106.261, -5.63772, 0.81", "-50.5939, 107.293, -5.79369, 0.52", "-50.6629, 108.083, -5.97622, 0.52", "-50.8308, 108.803, -6.19434, 0.44", "-51.0679, 109.393, -6.39383, 0.44", "-51.3685, 109.955, -6.5678, 0.52", "-51.6905, 110.467, -6.70881, 0.81", "-52.283, 111.359, -6.90262, 1.11", "-52.6228, 111.857, -6.99849, 1.11", "-53.0725, 112.556, -7.08023, 0.81", "-53.5224, 113.3, -7.12321, 0.37", "-54.0324, 114.206, -7.11988, 0.37", "-54.5104, 115.119, -7.05424, 0.29", "-54.8375, 115.799, -6.93927, 0.88", "-55.2423, 116.73, -6.73727, 1.55", "-55.4242, 117.195, -6.62162, 1.55", "-55.692, 117.928, -6.44166, 1.18", "-55.9971, 118.742, -6.29083, 0.81", "-56.4718, 119.946, -6.08724, 0.44", "-57.0053, 121.19, -5.87809, 0.29", "-57.3895, 121.951, -5.74726, 0.29", "-57.8758, 122.814, -5.58186, 1.25", "-58.5979, 123.908, -5.28788, 0.29", "-59.3583, 124.896, -4.91626, 0.29", "-59.928, 125.532, -4.60314, 0.29", "-60.4954, 126.102, -4.23442, 0.59", "-60.7874, 126.385, -4.0203, 0.88", "-61.657, 127.306, -3.27649, 0.44", "-61.9285, 127.656, -3.02799, 0.29", "-62.2108, 128.132, -2.80409, 0.44", "-62.415, 128.61, -2.6432, 0.29", "-62.6572, 129.552, -2.37188, 0.29", "-62.7436, 130.215, -2.1951, 0.29", "-62.7963, 130.931, -2.04262, 0.66", "-62.8349, 131.361, -1.94432, 0.81", "-62.9032, 131.929, -1.80478, 0.81", "-63.0695, 132.981, -1.54545, 0.29", "-63.2489, 133.862, -1.33692, 0.37", "-63.5984, 135.055, -1.04335, 0.37", "-63.8827, 135.767, -0.918015, 0.37", "-64.3149, 136.715, -0.834825, 1.33", "-64.5412, 137.179, -0.833519, 1.55", "-64.6969, 137.498, -0.872487, 1.55", "-64.9199, 137.961, -0.979246, 1.18", "-65.6479, 139.427, -1.46343, 0.37", "-65.9706, 139.953, -1.7201, 0.59", "-66.3584, 140.448, -2.06006, 0.59", "-66.8226, 140.931, -2.47935, 0.29", "-67.2581, 141.305, -2.95683, 0.29", "-67.7166, 141.661, -3.51137, 0.29", "-68.4117, 142.163, -4.38096, 0.59", "-68.7429, 142.401, -4.80214, 0.59", "-69.6985, 143.142, -6.08496, 0.88", "-70.769, 144.154, -7.67339, 0.44", "-71.2682, 144.791, -8.55496, 0.29", "-71.4086, 145.016, -8.84247, 0.81", "-71.5351, 145.251, -9.11632, 1.11", "-71.8512, 145.841, -9.78387, 0.81", "-72.3511, 146.599, -10.6703, 0.15", "-72.6847, 146.935, -11.1308, 0.15", "-73.0037, 147.155, -11.5929, 0.15", "-73.2637, 147.308, -12.0284, 0.66", "-73.4601, 147.42, -12.4039, 0.81", "-74.1057, 147.827, -13.6892, 0.15", "-74.966, 148.403, -15.3841, 0.66", "-75.1904, 148.57, -15.8228, 0.96", "-75.6205, 148.953, -16.6979, 0.81", "-76.3575, 149.667, -18.1866, 0.29", "-76.7253, 150.043, -18.8837, 0.29", "-77.205, 150.535, -19.6734, 0.29", "-77.8975, 151.085, -20.5097, 1.18", "-78.3401, 151.363, -20.9251, 1.18", "-79.3645, 151.919, -21.6867, 0.37", "-79.9228, 152.2, -22.0376, 0.37", "-80.5368, 152.515, -22.411, 0.88", "-81.3149, 152.993, -22.8931, 0.96", "-82.4547, 153.823, -23.637, 0.44", "-82.9911, 154.243, -24.0032, 0.66", "-83.4419, 154.606, -24.3118, 0.37", "-83.9482, 154.976, -24.6566, 0.37", "-84.7301, 155.541, -25.2031, 0.44", "-85.463, 156.093, -25.7247, 0.37", "-86.5466, 156.899, -26.4815, 0.66", "-87.0878, 157.239, -26.8329, 0.66", "-87.8753, 157.622, -27.3098, 0.29", "-88.6181, 157.883, -27.7023, 0.52", "-89.2525, 158.054, -27.9934, 0.59", "-90.2674, 158.305, -28.4382, 0.29", "-91.0231, 158.504, -28.7929, 0.29", "-92.027, 158.805, -29.2548, 0.29", "-92.7812, 159.041, -29.6235, 0.44", "-93.2924, 159.175, -29.8709, 0.74", "-94.0782, 159.384, -30.234, 0.74", "-95.1177, 159.664, -30.6789, 1.11", "-95.8384, 159.886, -30.9772, 1.62", "-97.2879, 160.368, -31.5363, 0.88", "-98.4216, 160.739, -31.9638, 0.37", "-99.3961, 161.029, -32.3229, 0.29", "-100.111, 161.215, -32.5707, 0.29", "-100.653, 161.352, -32.7341, 0.81", "-101.08, 161.462, -32.8497, 1.18", "-101.599, 161.624, -32.9517, 0.88", "-102.643, 162.07, -33.158, 0.29", "-103.189, 162.391, -33.3325, 0.29", "-103.698, 162.792, -33.5449, 0.59", "-103.935, 163.008, -33.6923, 0.88", "-104.186, 163.275, -33.9186, 0.59", "-104.464, 163.588, -34.3249, 0.37", "-104.921, 164.09, -35.1982, 0.37", "-105.18, 164.352, -35.7401, 0.74", "-105.704, 164.817, -36.8684, 0.52", "-106.135, 165.159, -37.7888, 1.11", "-107.31, 165.933, -40.231, 1.25", "-108.168, 166.396, -41.9854, 0.66", "-108.789, 166.665, -43.2042, 0.44", "-109.511, 166.92, -44.5647, 1.03", "-110.167, 167.097, -45.6841, 1.03", "-111.467, 167.299, -47.6366, 0.29", "-112.205, 167.337, -48.581, 0.29", "-112.77, 167.337, -49.2331, 1.25", "-112.965, 167.34, -49.4405, 1.69", "-113.435, 167.361, -49.9087, 1.69", "-114.725, 167.478, -51.0888, 0.29", "-115.708, 167.664, -51.9275, 0.29", "-116.238, 167.822, -52.3818, 0.29", "-116.958, 168.097, -53.0341, 0.29", "-117.718, 168.394, -53.7374, 0.81", "-118.157, 168.567, -54.1298, 0.88", "-119.042, 168.916, -54.8487, 0.29", "-119.916, 169.214, -55.5207, 0.81", "-120.352, 169.327, -55.8338, 0.81", "-121.02, 169.467, -56.2982, 0.22", "-121.442, 169.573, -56.5721, 0.52", "-121.627, 169.624, -56.6932, 0.59", "-122.568, 169.857, -57.2109, 0.22", "-122.92, 169.907, -57.3758, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-65.3466, 96.9893, -123.653, 0.52", "-64.8149, 97.9392, -124.647, 0.52", "-64.4654, 98.6128, -125.36, 0.81", "-64.2314, 99.0663, -125.904, 0.59", "-63.683, 100.003, -127.101, 0.96", "-63.319, 100.566, -127.885, 0.96", "-62.8938, 101.229, -128.826, 0.52", "-62.6463, 101.633, -129.47, 0.52", "-62.2309, 102.3, -130.652, 0.52", "-61.9784, 102.704, -131.363, 0.52", "-61.6538, 103.247, -132.201, 0.66", "-61.4735, 103.615, -132.743, 0.96", "-61.2657, 104.122, -133.448, 0.96", "-61.0847, 104.737, -134.3, 0.37", "-60.9866, 105.305, -135.028, 0.37", "-60.9452, 105.873, -135.725, 0.37", "-60.9382, 106.953, -137.064, 0.44", "-60.9454, 107.176, -137.36, 0.74", "-60.9676, 107.681, -138.036, 0.74", "-61.0092, 108.156, -138.679, 0.37", "-61.0232, 108.579, -139.268, 0.37", "-60.9604, 109.088, -139.925, 0.37", "-60.8202, 109.484, -140.358, 0.37", "-60.5494, 110.105, -141.033, 0.37", "-60.457, 110.28, -141.212, 0.81", "-60.1436, 110.778, -141.716, 0.37", "-59.8529, 111.162, -142.102, 0.37", "-59.4301, 111.675, -142.54, 0.66", "-59.126, 112.05, -142.85, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-65.3466, 96.9893, -123.653, 0.44", "-65.4768, 98.3127, -123.959, 0.44", "-65.7581, 99.3364, -124.22, 0.37", "-66.1464, 100.282, -124.493, 0.88", "-66.395, 100.787, -124.678, 0.88", "-66.829, 101.589, -125.011, 0.52", "-67.2812, 102.352, -125.547, 0.29", "-67.8679, 103.17, -126.366, 0.22", "-68.2256, 103.6, -126.872, 0.22", "-68.791, 104.21, -127.671, 0.88", "-69.18, 104.61, -128.254, 1.25", "-70.8032, 106.247, -130.975, 0.44", "-71.3639, 106.841, -132.08, 0.96", "-71.5678, 107.082, -132.581, 1.18" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-31.1364, 5.37724, -7.57619, 0.81", "-32.3044, 4.12757, -9.08907, 0.81", "-32.8786, 3.61183, -9.7644, 0.81", "-36.4192, 1.10842, -13.5216, 1.62", "-38.9033, -0.226468, -15.9494, 0.66", "-40.4047, -0.885234, -17.3145, 0.66", "-41.398, -1.2906, -18.1466, 0.88", "-42.5337, -1.6511, -18.9967, 0.96", "-44.3849, -2.14611, -20.1625, 0.81", "-46.2073, -2.54201, -20.8608, 0.52", "-47.8295, -3.0506, -21.2453, 0.52", "-49.6187, -3.89522, -21.4466, 0.74", "-51.2355, -4.90746, -21.4218, 1.11", "-51.7658, -5.31164, -21.3299, 1.25", "-52.9183, -6.33783, -20.9889, 0.96", "-54.3016, -7.65028, -20.4788, 0.66", "-55.5969, -8.85332, -19.9893, 0.88", "-56.938, -10.0236, -19.5417, 0.81", "-58.3522, -11.1923, -19.1877, 0.96", "-59.4719, -12.1208, -19.0039, 1.18", "-60.7153, -13.2064, -18.881, 1.11", "-61.7839, -14.2332, -18.865, 1.18", "-62.873, -15.3944, -18.9713, 1.33", "-64.631, -17.3098, -19.2881, 0.66", "-65.9242, -18.6549, -19.575, 0.88", "-66.9806, -19.6752, -19.8077, 0.88", "-68.6836, -21.1911, -20.1745, 0.59", "-69.6916, -21.9527, -20.356, 0.59", "-70.5588, -22.4142, -20.47, 0.81", "-71.8854, -22.6964, -20.4654, 1.33", "-73.0016, -22.7095, -20.311, 1.4", "-73.7183, -22.6782, -20.1155, 1.25", "-75.1165, -22.6533, -19.497, 0.52", "-75.9254, -22.7591, -19.0363, 0.52", "-76.9846, -23.1886, -18.3679, 0.66", "-77.9499, -23.7918, -17.7269, 0.81", "-78.999, -24.5396, -17.0457, 0.81", "-79.6964, -25.1116, -16.6439, 1.11", "-80.2786, -25.6752, -16.3486, 1.33", "-81.1346, -26.6233, -16.0294, 1.33", "-81.5955, -27.2001, -15.9483, 1.33", "-82.5342, -28.4882, -15.9942, 0.81", "-83.5919, -29.9871, -16.173, 0.52", "-84.4001, -31.1235, -16.3484, 0.74", "-85.5663, -32.7378, -16.6069, 0.96", "-86.4847, -33.9487, -16.7727, 0.81", "-87.7616, -35.5261, -16.9869, 0.66", "-88.8336, -36.7404, -17.1063, 0.59", "-89.5805, -37.4961, -17.1256, 1.03", "-90.1939, -38.0994, -17.0917, 1.25", "-91.0664, -38.9752, -16.9355, 1.25", "-92.3313, -40.4324, -16.6652, 0.81", "-93.021, -41.3931, -16.5288, 0.52", "-94.0199, -42.8926, -16.5335, 0.52", "-94.7633, -43.9444, -16.6042, 0.44", "-95.2047, -44.542, -16.6818, 0.44", "-96.531, -46.3199, -16.9654, 0.96", "-97.0911, -47.054, -17.0858, 1.4", "-98.5218, -48.8219, -17.5373, 0.88", "-99.7711, -50.303, -17.9375, 0.66", "-101.533, -52.4024, -18.4505, 0.66", "-102.763, -54.0505, -18.8372, 0.59", "-104.014, -55.9809, -19.2418, 1.77", "-105.795, -59.1571, -19.8165, 0.59", "-106.348, -60.2491, -19.9787, 0.74", "-106.974, -61.4958, -20.147, 0.74", "-108.444, -64.1561, -20.4067, 0.59", "-109.163, -65.2821, -20.4532, 0.59", "-109.927, -66.3388, -20.392, 0.74", "-111.04, -67.7075, -20.1286, 0.74", "-112.101, -68.8182, -19.8611, 0.74", "-113.317, -70.0342, -19.6593, 0.52", "-114.417, -71.0117, -19.5032, 0.37", "-115.048, -71.5649, -19.4711, 1.11", "-115.474, -71.9233, -19.5009, 1.11", "-116.245, -72.5462, -19.6245, 0.96", "-119.534, -74.9, -20.3306, 0.59", "-120.342, -75.3536, -20.5004, 0.52", "-121.156, -75.7346, -20.7402, 0.81", "-122.472, -76.3051, -21.1586, 0.81", "-123.633, -76.7729, -21.532, 1.11", "-124.88, -77.2539, -21.8919, 1.25", "-126.085, -77.6926, -22.1433, 0.96", "-128.795, -78.9478, -22.747, 0.52", "-129.965, -79.6007, -22.9935, 0.52", "-130.91, -80.2572, -23.1506, 0.81", "-131.872, -81.1364, -23.2603, 0.88", "-132.377, -81.7434, -23.2872, 1.03", "-133.074, -82.7597, -23.2601, 0.88", "-133.721, -83.8277, -23.1412, 0.44", "-134.394, -85.0402, -22.9776, 0.44", "-135.569, -87.5375, -22.6074, 1.33", "-136.701, -90.1391, -22.2054, 0.59", "-137.103, -91.0938, -22.0853, 1.03", "-137.393, -91.7902, -22.0033, 1.18", "-137.837, -92.8286, -21.9008, 0.81", "-138.75, -94.7375, -21.7139, 0.59", "-139.438, -95.96, -21.6006, 0.37", "-140.671, -97.8296, -21.5604, 0.37", "-141.035, -98.2907, -21.5906, 0.96", "-141.345, -98.6297, -21.6332, 1.25", "-141.78, -99.0287, -21.704, 1.25", "-143.454, -100.284, -21.9355, 0.52", "-144.605, -101.056, -22.0326, 0.52", "-145.866, -101.81, -22.0246, 0.52", "-146.22, -102.011, -22.0184, 1.18", "-146.83, -102.382, -22.051, 1.18", "-147.382, -102.732, -22.0859, 1.18", "-148.283, -103.281, -22.048, 0.88", "-150.076, -104.444, -22.1664, 0.44", "-150.337, -104.632, -22.2196, 0.81", "-153.016, -106.673, -22.9481, 0.52", "-153.954, -107.438, -23.2486, 0.81", "-155.584, -108.824, -23.7946, 0.44", "-158.312, -111.295, -24.7714, 0.74", "-159.505, -112.415, -25.1778, 0.44", "-160.066, -112.962, -25.3266, 1.33", "-160.451, -113.371, -25.4041, 1.33", "-161.263, -114.296, -25.5976, 0.74", "-162.749, -115.967, -25.9837, 0.44", "-163.171, -116.394, -26.033, 0.74", "-163.875, -117.04, -26.1703, 0.74", "-165.528, -118.33, -26.8574, 0.37", "-166.232, -118.736, -27.3232, 0.37", "-166.993, -119.029, -28.0227, 0.66", "-167.545, -119.166, -28.5725, 0.88", "-168.034, -119.265, -29.0606, 0.88", "-169.504, -119.562, -30.4609, 0.59", "-170.33, -119.714, -31.1482, 0.29", "-171.097, -119.904, -31.686, 0.29", "-172.557, -120.379, -32.4659, 0.96", "-172.924, -120.519, -32.5946, 1.18", "-174.808, -121.462, -32.9826, 0.59", "-175.636, -122.042, -33.1545, 0.81", "-176.303, -122.575, -33.3155, 0.81", "-177.197, -123.309, -33.5582, 0.37", "-178.233, -124.174, -33.8613, 0.37", "-179.789, -125.515, -34.3637, 1.11", "-182.821, -128.164, -35.3345, 0.52", "-183.363, -128.645, -35.516, 0.52", "-184.518, -129.655, -35.9223, 0.44", "-185.124, -130.176, -36.1768, 1.47", "-187.769, -132.349, -37.4416, 0.59", "-188.509, -132.911, -37.8107, 0.88", "-189.393, -133.599, -38.2998, 0.88", "-191.034, -134.984, -39.4267, 0.52", "-192.487, -136.249, -40.5695, 0.74", "-193.089, -136.753, -41.0862, 0.96", "-193.476, -137.061, -41.4181, 0.96", "-195.382, -138.609, -42.9927, 0.29", "-197.054, -140.059, -44.4434, 0.96", "-197.61, -140.542, -44.9121, 1.18", "-199.421, -142.156, -46.4052, 0.37", "-200.223, -142.919, -47.0642, 0.37", "-200.819, -143.5, -47.5525, 0.74", "-203.844, -146.408, -50.1172, 0.88", "-204.384, -146.901, -50.6083, 0.88", "-205.946, -148.277, -52.0949, 0.37", "-206.527, -148.76, -52.637, 0.37", "-207.269, -149.33, -53.2968, 0.37", "-208.267, -150.02, -54.0607, 0.37", "-209.799, -150.99, -54.8806, 0.74", "-212.188, -152.559, -56.043, 0.44", "-212.801, -152.934, -56.2931, 1.03", "-213.393, -153.324, -56.513, 1.03", "-213.85, -153.681, -56.6482, 1.03", "-215.113, -154.825, -56.8298, 0.44", "-215.981, -155.684, -56.8467, 0.59", "-216.937, -156.578, -56.8089, 0.37", "-217.989, -157.532, -56.8274, 0.29", "-218.562, -158.064, -56.9027, 0.44", "-218.997, -158.502, -56.9812, 0.44", "-220.351, -159.936, -57.2545, 0.29", "-220.912, -160.543, -57.3806, 0.52", "-221.225, -160.875, -57.4858, 0.74", "-222.691, -162.149, -58.1607, 0.29", "-223.3, -162.631, -58.4805, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-31.1364, 5.37724, -7.57619, 0.88", "-32.0316, 8.61756, -8.40503, 0.88", "-32.4814, 10.1347, -8.66208, 0.52", "-32.7816, 11.0252, -8.77453, 0.88", "-33.4072, 12.6637, -8.94394, 0.88", "-34.5493, 15.3091, -9.18428, 0.52", "-35.2984, 16.7384, -9.3029, 0.52", "-36.3018, 18.4229, -9.28835, 0.44", "-37.1644, 19.5569, -9.2601, 0.59", "-38.0922, 20.6032, -9.18137, 0.74", "-38.8863, 21.3762, -9.08171, 0.74", "-40.7509, 22.9233, -8.89138, 1.25", "-41.377, 23.3753, -8.85092, 1.25", "-42.6861, 24.154, -8.84457, 0.66", "-44.3396, 25.0109, -8.92537, 0.81", "-45.0252, 25.3294, -8.96991, 0.66", "-46.5842, 26.0025, -9.10557, 0.88", "-49.2438, 27.0591, -9.3948, 0.88", "-50.3549, 27.451, -9.53733, 0.66", "-51.0686, 27.6645, -9.65185, 0.52", "-52.5825, 28.0386, -9.88966, 1.03", "-53.1806, 28.2273, -9.88799, 1.33", "-53.5958, 28.4066, -9.82249, 1.55", "-54.0063, 28.6165, -9.73171, 1.55", "-54.6577, 28.9807, -9.60221, 1.33", "-55.7411, 29.6326, -9.44174, 0.74", "-57.0249, 30.47, -9.30545, 0.59", "-58.3061, 31.4681, -9.20288, 0.59", "-59.1186, 32.2378, -9.17191, 0.59", "-59.5439, 32.7398, -9.17406, 1.11", "-60.2507, 33.8269, -9.26716, 1.55", "-60.4938, 34.3589, -9.3548, 1.77", "-60.9527, 36.0407, -9.59949, 0.74", "-61.1174, 37.1121, -9.71942, 0.96", "-61.1905, 37.938, -9.79072, 0.74", "-61.2667, 39.1154, -9.84697, 0.52", "-61.328, 40.0166, -9.85251, 0.44", "-61.6608, 42.5723, -9.72394, 0.88", "-61.7974, 43.3024, -9.68231, 1.11", "-61.951, 43.9691, -9.66077, 1.11", "-62.2514, 45.1464, -9.67068, 0.74", "-62.5595, 46.1961, -9.72558, 0.44", "-62.9446, 47.3246, -9.9165, 0.29", "-63.431, 48.6367, -10.3209, 0.59", "-63.7297, 49.4908, -10.5912, 0.44", "-64.0223, 50.3773, -10.8812, 1.25", "-64.1514, 50.8085, -11.0243, 1.25", "-64.302, 51.3824, -11.1861, 0.81", "-64.5208, 52.2218, -11.3641, 0.29", "-64.8228, 53.1773, -11.4962, 0.59", "-65.0227, 53.7307, -11.5778, 0.74", "-65.2241, 54.2063, -11.6566, 0.88", "-65.5081, 54.7881, -11.7638, 0.88", "-65.9125, 55.5141, -11.9171, 0.44", "-66.3232, 56.1945, -12.0817, 0.81", "-66.7179, 56.821, -12.233, 0.81", "-67.3327, 57.7717, -12.462, 0.37", "-67.7026, 58.3404, -12.5865, 0.37", "-68.4484, 59.4986, -12.792, 0.29", "-69.2325, 60.7244, -12.9457, 0.29", "-69.5432, 61.2202, -12.9877, 0.29", "-70.0257, 62.0147, -13.0316, 0.88", "-70.3372, 62.5652, -13.0493, 1.18", "-70.7938, 63.4079, -13.0528, 1.18", "-71.2306, 64.1921, -13.0116, 0.59", "-71.678, 64.9743, -12.9244, 0.59", "-72.1182, 65.7486, -12.8206, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "34.962, -127.715, 22.8362, 0.29", "34.3614, -128.413, 22.9873, 0.29", "33.7272, -129.15, 23.1469, 0.15", "33.4292, -129.497, 23.2218, 0.15", "32.7874, -130.243, 23.3833, 0.44", "32.4062, -130.686, 23.4792, 0.44", "31.9057, -131.268, 23.6051, 0.74", "26.6527, -139.07, 24.0076, 0.74", "22.1806, -147.104, 26.0247, 0.74", "19.2401, -155.947, 27.3586, 0.74", "16.9283, -165.06, 27.8363, 0.74", "15.5574, -174.261, 26.391, 0.74", "15.8069, -183.189, 23.4189, 0.74", "16.7509, -191.684, 19.4729, 0.74", "17.2646, -200.552, 16.3551, 0.74", "16.2076, -209.57, 13.8714, 0.74", "15.5992, -218.182, 10.1192, 0.74", "15.3447, -226.772, 6.2745, 0.74", "14.8852, -235.923, 4.11715, 0.74", "13.1712, -244.981, 2.20946, 0.74" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "34.962, -127.715, 22.8362, 0.22", "35.4721, -127.424, 22.7722, 0.22", "36.0439, -127.098, 22.7005, 0.59", "36.2801, -126.963, 22.6708, 0.59", "36.7802, -126.678, 22.6081, 0.37", "37.1134, -126.488, 22.5663, 0.37", "42.8321, -124.096, 22.6759, 0.37", "47.8674, -120.528, 22.0794, 0.37", "53.2463, -117.45, 22.2555, 0.37", "58.5651, -114.481, 23.4106, 0.37", "63.3812, -110.891, 24.945, 0.37", "67.72, -107.297, 27.5317, 0.37" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "4.90718, -41.7684, 23.5571, 0.52", "4.50242, -42.4828, 23.2106, 0.52", "4.13414, -43.1327, 22.8953, 0.52", "3.76341, -43.787, 22.578, 0.44", "3.503, -44.2466, 22.3551, 0.29", "3.27142, -44.6553, 22.1569, 0.74", "-0.434809, -50.8696, 19.5422, 0.74", "-4.01704, -57.1222, 16.8472, 0.74", "-7.5334, -62.9201, 13.2128, 0.74", "-11.6265, -68.2588, 9.47982, 0.74", "-16.0928, -72.7021, 5.06414, 0.74", "-21.2841, -76.3625, 0.723417, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.90718, -41.7684, 23.5571, 0.29", "5.91269, -41.8686, 22.8553, 0.29", "7.54347, -41.9341, 21.8244, 0.29", "8.26276, -41.92, 21.4052, 0.44", "9.36184, -41.8109, 20.7834, 0.44", "10.2775, -41.6262, 20.2738, 0.37", "10.863, -41.4486, 19.9403, 0.22", "11.275, -41.1004, 19.7157, 0.59", "11.4038, -40.6041, 19.6453, 0.74", "11.3249, -39.4842, 19.6237, 0.22", "11.0447, -38.445, 19.6745, 0.22", "10.5307, -37.1797, 19.7703, 0.22", "9.89106, -35.9795, 19.8566, 0.81", "17.9984, -28.6181, 15.2554, 0.81", "25.6298, -20.2636, 11.6423, 0.81" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-18.6536, -187.1, 29.084, 0.37", "-10.568, -191.531, 29.4097, 0.37", "-3.09031, -196.933, 29.5544, 0.37", "4.82406, -201.66, 29.2007, 0.37", "12.5557, -206.691, 29.0239, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-18.6536, -187.1, 29.084, 0.22", "-11.1182, -191.642, 33.1674, 0.37", "-4.58471, -196.519, 38.423, 0.37", "2.226, -202.466, 41.9346, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-69.3742, -181.265, 16.6098, 0.37", "-65.9496, -192.448, 20.0512, 0.37", "-61.1091, -203.062, 23.591, 0.37", "-58.5832, -214.284, 27.6302, 0.37", "-54.4624, -225.099, 31.4623, 0.37", "-51.8925, -235.871, 36.5622, 0.37", "-48.0342, -246.035, 42.0783, 0.37", "-44.4974, -255.966, 48.201, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-69.3742, -181.265, 16.6098, 0.22", "-66.169, -190.938, 18.3706, 0.37", "-61.62, -199.729, 21.3645, 0.37", "-57.6353, -209.232, 22.2262, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "44.9408, 293.111, -121.868, 0.37", "46.0603, 294.486, -122.182, 0.37", "46.4824, 294.921, -122.342, 0.37", "47.1952, 295.509, -122.665, 0.29", "47.7138, 295.859, -122.904, 0.29", "48.3983, 296.28, -123.199, 0.74", "49.04, 296.697, -123.461, 0.96", "49.5301, 297.012, -123.691, 0.52", "50.3241, 297.56, -124.063, 0.44", "51.0998, 298.145, -124.396, 0.37", "51.5355, 298.585, -124.561, 0.29", "52.0151, 299.248, -124.718, 0.29", "52.2965, 299.742, -124.814, 0.29", "52.7482, 300.536, -124.989, 0.74", "53.2428, 301.348, -125.209, 1.11", "53.7106, 302.05, -125.452, 1.11", "54.1584, 302.636, -125.704, 0.81", "55.0828, 303.698, -126.236, 0.37", "55.8713, 304.546, -126.696, 0.37", "56.3993, 305.099, -126.98, 0.37", "56.8501, 305.596, -127.232, 0.37", "57.1301, 305.927, -127.386, 1.03", "57.5895, 306.522, -127.613, 1.33", "57.8133, 306.839, -127.695, 1.33", "58.7402, 308.273, -127.844, 0.29", "59.3417, 309.254, -127.847, 0.29", "59.9767, 310.32, -127.789, 0.88", "60.3511, 310.984, -127.731, 0.88", "60.895, 311.987, -127.635, 0.74", "61.7151, 313.51, -127.543, 0.66", "62.0782, 314.256, -127.559, 0.74", "62.5085, 315.314, -127.661, 0.44", "62.7286, 316.103, -127.825, 0.44", "62.8768, 317.071, -128.15, 0.37", "62.9462, 318.646, -128.849, 0.37", "62.9364, 319.948, -129.547, 0.37", "62.8856, 321.023, -130.173, 0.37", "62.7296, 322.292, -130.951, 1.77", "62.5732, 323.005, -131.395, 1.77", "62.3505, 323.598, -131.749, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "44.9408, 293.111, -121.868, 1.11", "44.1269, 294.305, -125.056, 1.11", "43.4229, 295.328, -128.33, 0.74", "43.131, 295.64, -129.926, 0.29", "42.7603, 295.925, -131.699, 0.44", "42.2855, 296.281, -133.594, 0.37", "41.6533, 296.835, -135.977, 0.74", "41.3905, 297.16, -136.932, 0.88", "40.8275, 297.95, -139.268, 0.29", "40.4391, 298.555, -141.189, 0.44", "40.1902, 299.189, -143.138, 0.29", "40.0641, 299.606, -144.32, 0.96", "40.0062, 300.046, -145.267, 1.25", "40.0022, 300.355, -145.873, 1.25", "40.2031, 301.649, -148.214, 0.37", "40.424, 302.283, -149.429, 0.74", "41.0285, 303.475, -151.921, 0.88", "41.2548, 303.865, -152.766, 1.11", "41.6161, 304.444, -153.957, 0.52", "41.8991, 304.869, -154.744, 0.52", "42.2677, 305.379, -155.565, 0.29", "42.6071, 305.8, -156.252, 0.29", "43.243, 306.413, -157.303, 1.25", "43.3928, 306.551, -157.564, 1.55", "43.6588, 306.788, -158.042, 1.55", "44.3318, 307.351, -159.269, 0.37", "45.1298, 307.925, -160.65, 0.44", "45.8243, 308.343, -161.747, 0.81", "45.9945, 308.416, -161.981, 1.11", "46.5582, 308.63, -162.726, 1.11", "47.5983, 308.944, -163.989, 0.29", "48.5983, 309.147, -165.015, 0.37", "49.295, 309.188, -165.653, 0.37", "50.0498, 309.146, -166.34, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-71.5678, 107.082, -132.581, 0.44", "-70.5924, 107.89, -133.047, 0.44", "-69.7507, 108.625, -133.627, 0.29", "-69.2897, 109.074, -134.036, 0.44", "-68.7851, 109.643, -134.563, 0.44", "-68.461, 110.069, -134.943, 0.81", "-68.0487, 110.679, -135.486, 0.81", "-67.6536, 111.392, -136.228, 0.52", "-67.5117, 111.839, -136.741, 0.37", "-67.4366, 112.311, -137.294, 0.37", "-67.4037, 112.778, -137.859, 0.81", "-67.372, 113.209, -138.375, 0.88", "-67.2639, 113.888, -139.164, 0.88", "-66.9907, 114.57, -140.061, 0.52", "-66.7883, 114.826, -140.495, 0.81", "-66.137, 115.29, -141.52, 0.52", "-65.6774, 115.509, -142.088, 0.52", "-65.0178, 115.75, -142.73, 0.52", "-63.6108, 116.178, -143.876, 0.52", "-62.9067, 116.365, -144.463, 0.52", "-62.2555, 116.513, -145.035, 0.81", "-61.7665, 116.626, -145.473, 1.03", "-61.2822, 116.745, -145.924, 0.59", "-60.3021, 117.04, -146.862, 0.66", "-58.6768, 117.706, -148.397, 0.52", "-58.0666, 118.011, -148.984, 0.52", "-57.371, 118.427, -149.719, 1.11", "-57.0477, 118.681, -150.095, 1.11", "-56.7853, 118.915, -150.409, 1.25", "-56.299, 119.507, -150.973, 0.66", "-55.9433, 120.265, -151.382, 0.44", "-55.7822, 120.917, -151.684, 0.44", "-55.7222, 122.009, -152.178, 0.81" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-71.5678, 107.082, -132.581, 0.44", "-72.4923, 107.739, -134.154, 0.44", "-72.9249, 108.009, -134.868, 0.37", "-73.4057, 108.3, -135.65, 0.37", "-73.8107, 108.551, -136.242, 0.88", "-74.2739, 108.849, -136.856, 0.88", "-75.0942, 109.364, -137.818, 0.59", "-75.8754, 109.877, -138.656, 0.22", "-76.3484, 110.143, -139.17, 0.66", "-77.0386, 110.482, -139.912, 0.37", "-77.4296, 110.669, -140.327, 0.29", "-78.1384, 111.018, -141.185, 0.29", "-78.8361, 111.399, -142.243, 0.66", "-79.5634, 111.821, -143.695, 1.03", "-79.7511, 111.939, -144.134, 1.33", "-79.8732, 112.021, -144.455, 1.33", "-80.3944, 112.4, -145.918, 0.44", "-80.9151, 112.786, -147.441, 0.29", "-81.2237, 113.032, -148.362, 0.59", "-81.4757, 113.235, -149.141, 0.59", "-81.6043, 113.345, -149.57, 0.88", "-81.8284, 113.541, -150.321, 0.88", "-82.444, 114.029, -152.128, 0.29", "-82.636, 114.206, -152.758, 0.29", "-82.7761, 114.36, -153.289, 0.29", "-82.9736, 114.595, -154.129, 0.96", "-83.1205, 114.782, -154.735, 0.96", "-83.6079, 115.442, -156.454, 0.29", "-83.9218, 115.86, -157.283, 0.29", "-84.0786, 116.036, -157.594, 0.29", "-84.4077, 116.408, -158.153, 0.29", "-84.6972, 116.743, -158.606, 0.29", "-85.0085, 117.14, -159.093, 0.81", "-85.2631, 117.49, -159.508, 0.88", "-85.9016, 118.328, -160.613, 0.29", "-86.2301, 118.763, -161.208, 0.59", "-86.4712, 119.1, -161.663, 0.59", "-86.7187, 119.46, -162.138, 0.29", "-87.0972, 120.042, -162.901, 0.29", "-87.3422, 120.477, -163.471, 0.29", "-87.5935, 120.979, -164.103, 0.29", "-87.8021, 121.377, -164.632, 0.29", "-88.0562, 121.894, -165.293, 0.29", "-88.1738, 122.152, -165.592, 0.29", "-88.4874, 122.859, -166.332, 0.88", "-88.6099, 123.179, -166.65, 1.11", "-88.9498, 124.35, -167.804, 0.29", "-89.0663, 124.785, -168.273, 0.59", "-89.2234, 125.344, -168.93, 0.29", "-89.3186, 125.624, -169.264, 0.29", "-89.4647, 126.068, -169.76, 0.29", "-89.5669, 126.443, -170.154, 0.29", "-89.8201, 127.272, -171.028, 0.66", "-90.0054, 127.66, -171.478, 0.66", "-90.4311, 128.373, -172.47, 0.37", "-90.7033, 128.775, -173.085, 0.37", "-91.1567, 129.299, -173.926, 0.37", "-91.7167, 129.862, -174.823, 0.37", "-92.2915, 130.444, -175.653, 0.37", "-93.1514, 131.295, -176.825, 0.29", "-93.4078, 131.525, -177.167, 0.29", "-94.0724, 132.054, -178.025, 0.29", "-94.3818, 132.292, -178.424, 0.29", "-95.0107, 132.906, -179.29, 1.4", "-95.14, 133.071, -179.471, 1.4" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "12.5557, -206.691, 29.0239, 0.37", "19.3658, -212.132, 26.3276, 0.37", "25.4181, -218.233, 23.2603, 0.37", "31.9049, -223.789, 20.0504, 0.37", "37.5462, -229.794, 16.1306, 0.37", "43.247, -236.22, 13.0539, 0.37", "49.2354, -241.542, 8.68739, 0.37", "54.0019, -247.147, 3.29042, 0.37", "59.1328, -253.57, -0.667776, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "12.5557, -206.691, 29.0239, 0.22", "19.7442, -211.356, 28.3706, 0.37", "27.5742, -214.898, 28.3745, 0.37", "35.1528, -218.683, 26.9248, 0.37", "42.9072, -221.416, 24.4226, 0.37", "50.2307, -225.007, 21.7152, 0.37", "57.6576, -229.068, 20.2282, 0.37", "64.5715, -234.169, 20.4366, 0.37", "71.5383, -239.149, 19.7132, 0.37", "79.5613, -242.22, 19.9559, 0.37", "87.1666, -246.093, 20.9695, 0.37", "95.1999, -248.074, 23.2938, 0.37", "103.282, -249.329, 25.9351, 0.37", "110.926, -249.199, 29.8613, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "2.226, -202.466, 41.9346, 0.37", "8.48438, -207.123, 46.5158, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.226, -202.466, 41.9346, 0.22", "9.11498, -207.386, 44.9584, 0.37", "15.432, -212.417, 48.9052, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-57.6353, -209.232, 22.2262, 0.37", "-53.2516, -220.035, 21.3737, 0.37", "-45.9738, -229.181, 21.2709, 0.37", "-38.6593, -238.244, 22.2624, 0.37", "-30.8927, -246.905, 23.4061, 0.37", "-22.1967, -254.081, 26.4901, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-57.6353, -209.232, 22.2262, 0.22", "-53.3495, -220.781, 20.7825, 0.37", "-50.3501, -232.447, 17.8265, 0.37", "-48.3684, -244.631, 16.6235, 0.37", "-47.2989, -256.944, 15.5798, 0.37", "-44.0434, -268.911, 15.7076, 0.37", "-39.5258, -280.313, 17.556, 0.37", "-35.0256, -291.141, 21.5957, 0.37", "-32.0408, -301.902, 26.992, 0.37", "-30.2901, -311.739, 34.3404, 0.37", "-30.6528, -322.276, 40.8722, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "62.3505, 323.598, -131.749, 0.29", "62.4179, 325.707, -134.863, 0.29", "62.466, 326.477, -135.882, 0.29", "62.5144, 327.201, -136.669, 0.29", "62.5433, 327.744, -137.156, 0.29", "62.5778, 328.787, -137.969, 0.74", "62.5886, 329.125, -138.202, 0.74", "62.6688, 330.649, -138.93, 0.22", "62.7257, 332.042, -139.588, 0.22", "62.7166, 333.235, -140.101, 0.22", "62.699, 333.937, -140.37, 0.52", "62.695, 335.097, -140.732, 0.22", "62.6924, 335.564, -140.861, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "62.3505, 323.598, -131.749, 0.44", "62.348, 324.927, -131.217, 0.44", "62.4055, 325.933, -130.869, 0.44", "62.474, 327.014, -130.526, 0.44", "62.521, 327.741, -130.312, 0.44", "62.5618, 328.614, -130.077, 0.37", "62.5769, 329.126, -129.95, 0.37", "62.6796, 330.049, -129.704, 0.88", "62.7257, 330.393, -129.636, 1.47", "62.757, 330.762, -129.593, 1.47", "62.7644, 331.729, -129.517, 0.37", "62.7065, 332.272, -129.471, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "50.0498, 309.146, -166.34, 0.29", "50.2827, 309.445, -166.638, 0.29", "50.6271, 309.854, -167.12, 0.81", "50.8731, 310.111, -167.476, 0.81", "51.2052, 310.405, -167.989, 0.22", "51.3883, 310.547, -168.295, 0.59", "51.9904, 310.945, -169.325, 0.22", "52.3854, 311.159, -170.062, 0.81", "52.5751, 311.253, -170.458, 0.81", "52.9148, 311.442, -171.279, 0.29", "53.2476, 311.679, -172.182, 0.29", "53.5888, 312.012, -173.213, 0.22", "53.7821, 312.258, -173.83, 0.22", "53.9861, 312.66, -174.645, 0.81", "54.2039, 313.261, -175.626, 0.22", "54.3344, 313.777, -176.297, 0.22", "54.4276, 314.299, -176.891, 0.44", "54.4701, 314.703, -177.289, 0.15", "54.507, 315.081, -177.62, 0.22", "54.5656, 315.687, -178.077, 0.15", "54.6264, 316.112, -178.365, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "50.0498, 309.146, -166.34, 0.22", "51.1202, 309.683, -167.728, 0.22", "51.5168, 309.882, -168.242, 0.81", "51.9449, 310.097, -168.797, 0.52", "52.8316, 310.542, -169.947, 1.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-55.7222, 122.009, -152.178, 0.37", "-54.9651, 123.099, -153.287, 0.37", "-54.4437, 123.979, -154.286, 0.37", "-54.0474, 124.647, -155.045, 0.37", "-53.626, 125.358, -155.852, 0.81", "-53.4302, 125.688, -156.227, 0.81", "-52.9238, 126.543, -157.197, 0.52", "-52.6962, 127.248, -158.004, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-55.7222, 122.009, -152.178, 0.29", "-55.4699, 123.164, -152.701, 0.29", "-55.2894, 123.99, -153.075, 0.88", "-55.0952, 124.879, -153.478, 0.29", "-54.954, 125.525, -153.771, 0.88", "-54.7914, 126.27, -154.108, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "15.432, -212.417, 48.9052, 0.37", "22.7747, -217.745, 51.1363, 0.37", "30.2059, -223.169, 52.7585, 0.37", "36.4106, -229.862, 54.7542, 0.37", "42.2612, -236.856, 56.7869, 0.37", "47.4767, -244.089, 59.5723, 0.37", "52.2772, -250.853, 63.8721, 0.37", "57.2257, -257.342, 68.4192, 0.37", "61.4419, -263.49, 74.0504, 0.37", "66.1236, -269.448, 79.5143, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "15.432, -212.417, 48.9052, 0.22", "24.8261, -219.747, 55.4023, 0.37", "33.0041, -229.028, 60.9841, 0.37", "41.5858, -237.848, 66.7063, 0.37", "49.8177, -246.433, 73.2434, 0.37", "59.1711, -254.21, 79.2612, 0.37", "68.816, -260.062, 86.8051, 0.37", "76.7498, -265.696, 96.2657, 0.37", "84.3586, -268.636, 107.112, 0.37", "91.0954, -268.994, 118.888, 0.37", "96.6664, -270.896, 131.116, 0.37", "102.773, -274.471, 142.697, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "62.7065, 332.272, -129.471, 0.29", "62.2046, 333.623, -129.162, 0.29", "61.8431, 334.512, -128.933, 0.29", "61.6094, 335.073, -128.783, 0.66", "61.5304, 335.27, -128.732, 0.66", "61.2783, 335.996, -128.573, 0.22", "61.0298, 336.82, -128.423, 0.22", "60.8762, 337.457, -128.336, 0.22", "60.8137, 337.814, -128.308, 0.59", "60.7751, 338.259, -128.306, 0.59", "60.7418, 339.229, -128.345, 0.29", "60.7642, 339.884, -128.379, 0.88", "60.8025, 340.458, -128.409, 0.88", "60.9333, 342.224, -128.501, 0.29", "61.0039, 343.136, -128.544, 0.29", "61.0439, 343.662, -128.563, 0.59", "61.1723, 345.302, -128.588, 0.29", "61.2485, 346.117, -128.589, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "62.7065, 332.272, -129.471, 0.29", "62.8016, 333.815, -129.61, 0.29", "63.0735, 335.28, -129.736, 0.29", "63.3224, 336.314, -129.833, 0.29", "63.7716, 337.991, -130.023, 0.29", "64.0219, 338.879, -130.134, 0.29", "64.4317, 340.29, -130.325, 0.29", "64.9017, 341.828, -130.538, 1.03", "65.3196, 342.986, -130.695, 1.69", "65.9492, 344.521, -130.916, 0.22", "66.2672, 345.244, -131.028, 0.52", "66.4333, 345.626, -131.086, 0.59", "66.9162, 346.756, -131.187, 0.22", "67.4191, 347.855, -131.208, 0.52", "67.7678, 348.502, -131.142, 0.66", "68.3039, 349.325, -130.935, 0.22", "68.6774, 349.81, -130.784, 0.22", "69.9216, 351.235, -130.318, 0.66", "70.6584, 351.958, -130.058, 1.03", "71.511, 352.675, -129.804, 1.03", "72.7328, 353.682, -129.491, 0.29", "73.5047, 354.348, -129.319, 0.37", "74.1177, 354.942, -129.207, 0.37", "74.9831, 355.867, -129.136, 0.29", "75.6569, 356.595, -129.135, 0.29", "76.2712, 357.291, -129.163, 0.29", "76.7695, 357.983, -129.21, 0.66", "77.1643, 358.669, -129.231, 0.66", "77.6759, 359.819, -129.215, 0.29", "77.9438, 360.741, -129.184, 0.29", "78.0676, 361.354, -129.152, 0.29", "78.2313, 362.46, -129.103, 0.66", "78.3132, 363.204, -129.064, 0.74", "78.4232, 365.096, -129.057, 0.29", "78.451, 366.632, -129.114, 0.29", "78.4411, 367.85, -129.23, 0.88", "78.4335, 368.402, -129.32, 1.03", "78.4293, 369.411, -129.571, 0.74", "78.4313, 371.058, -130.126, 0.29", "78.395, 371.869, -130.517, 0.59", "78.3072, 372.874, -131.09, 0.29", "78.1687, 373.736, -131.622, 0.59", "78.0317, 374.3, -131.994, 0.29", "77.7909, 375.052, -132.482, 0.81", "77.2429, 376.662, -133.394, 0.29", "76.8739, 377.675, -133.922, 0.29", "76.5752, 378.486, -134.322, 0.29", "76.1866, 379.524, -134.835, 0.22", "75.5247, 381.344, -135.681, 0.22", "74.6926, 383.726, -136.66, 0.22", "74.0326, 385.712, -137.405, 0.22", "73.4495, 387.538, -138.053, 0.74", "73.1784, 388.434, -138.354, 0.96", "72.6658, 390.231, -138.914, 0.22", "72.1363, 392.046, -139.472, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "52.8316, 310.542, -169.947, 0.22", "52.7611, 311.8, -170.092, 0.22", "52.7349, 312.268, -170.146, 0.37", "52.6831, 313.191, -170.252, 0.22", "52.6443, 313.884, -170.331, 0.22", "52.5937, 314.787, -170.435, 0.22", "52.5399, 315.746, -170.546, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "52.8316, 310.542, -169.947, 0.22", "53.3222, 309.733, -172.176, 0.22", "53.4982, 309.443, -172.976, 0.22", "53.7029, 309.105, -173.907, 0.52", "53.9383, 308.717, -174.976, 1.11", "54.1684, 308.337, -176.022, 0.81", "54.4193, 307.923, -177.162, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-52.6962, 127.248, -158.004, 0.59", "-52.5312, 128.454, -158.732, 0.59", "-52.4846, 128.796, -158.981, 0.88", "-52.408, 129.461, -159.486, 0.29", "-52.353, 129.979, -159.884, 0.29", "-52.3046, 130.52, -160.288, 0.37", "-52.2665, 131.027, -160.655, 0.37", "-52.2131, 131.966, -161.276, 0.29", "-52.2111, 132.374, -161.556, 0.29", "-52.2191, 133.063, -162.044, 0.29", "-52.2105, 133.532, -162.382, 0.96", "-52.1995, 133.857, -162.607, 0.96", "-52.1773, 134.193, -162.825, 0.74", "-52.0876, 135.005, -163.293, 0.29", "-51.9993, 135.703, -163.708, 0.29", "-51.9337, 136.167, -163.985, 0.29", "-51.839, 136.709, -164.303, 0.74", "-51.7959, 136.929, -164.427, 0.74", "-51.7327, 137.221, -164.584, 0.44", "-51.5923, 137.928, -164.938, 0.29", "-51.5059, 138.491, -165.196, 0.29", "-51.3102, 139.67, -165.69, 0.29", "-51.2027, 140.197, -165.897, 0.96", "-51.1011, 140.577, -166.031, 0.59", "-50.9246, 141.083, -166.188, 0.29", "-50.6267, 141.798, -166.373, 0.22", "-50.311, 142.487, -166.523, 0.22", "-50.1142, 142.884, -166.593, 0.22", "-49.8245, 143.502, -166.712, 0.22", "-49.579, 144.052, -166.841, 0.22", "-49.3443, 144.556, -166.998, 0.81", "-49.2837, 144.689, -167.055, 1.18", "-49.1683, 144.998, -167.239, 1.18", "-48.9627, 145.684, -167.736, 0.29", "-48.8661, 146.044, -168.043, 0.29", "-48.7364, 146.46, -168.44, 0.66", "-48.6813, 146.599, -168.582, 0.66", "-48.4371, 147.162, -169.229, 0.37", "-48.3034, 147.488, -169.623, 0.37", "-48.1994, 147.831, -170.019, 0.37", "-48.1612, 148.111, -170.33, 0.74", "-48.156, 148.41, -170.658, 0.74", "-48.1672, 149.046, -171.366, 0.29", "-48.1648, 149.434, -171.819, 0.29", "-48.1599, 149.917, -172.448, 0.29", "-48.1535, 150.395, -173.092, 0.88", "-48.1434, 150.665, -173.45, 0.88", "-48.1185, 151.043, -173.944, 0.29", "-48.0616, 151.524, -174.524, 0.29", "-48.0253, 151.768, -174.822, 0.29", "-47.9767, 152.192, -175.299, 0.74", "-47.9584, 152.476, -175.577, 0.74", "-47.9403, 153.057, -176.095, 0.37", "-47.9345, 153.543, -176.5, 0.59", "-47.9308, 153.891, -176.774, 0.59", "-47.9034, 154.38, -177.163, 0.29", "-47.8351, 154.936, -177.628, 0.29", "-47.7814, 155.227, -177.865, 0.29", "-47.6957, 155.578, -178.131, 0.52", "-47.6136, 155.868, -178.345, 1.03", "-47.4669, 156.267, -178.635, 1.03", "-47.1551, 156.98, -179.148, 0.22", "-46.7257, 157.865, -179.768, 0.22", "-46.4035, 158.492, -180.199, 0.96", "-46.2051, 158.869, -180.45, 0.96", "-45.6832, 159.796, -181.058, 0.29", "-45.2512, 160.511, -181.519, 0.29", "-44.9562, 160.983, -181.82, 0.88", "-44.7337, 161.344, -182.048, 1.18", "-44.2437, 162.207, -182.602, 0.37", "-43.82, 162.989, -183.021, 0.37", "-43.2369, 164.093, -183.521, 0.37", "-42.841, 164.778, -183.776, 0.37", "-42.5249, 165.262, -183.925, 0.96", "-42.1017, 165.815, -184.061, 0.96", "-40.7004, 167.272, -184.319, 0.29", "-40.3955, 167.529, -184.363, 0.29", "-39.7838, 167.95, -184.46, 0.88", "-39.33, 168.223, -184.552, 0.88", "-38.9743, 168.427, -184.646, 0.59", "-37.7111, 169.166, -185.093, 0.29", "-36.807, 169.758, -185.573, 0.29", "-36.2965, 170.143, -185.89, 0.81", "-36.0783, 170.33, -186.05, 0.81", "-35.7637, 170.659, -186.32, 0.52", "-35.3581, 171.18, -186.732, 0.22", "-34.7896, 172.178, -187.478, 0.22", "-34.5227, 172.789, -187.903, 0.74", "-34.408, 173.115, -188.117, 0.74", "-34.1412, 174.045, -188.69, 0.22", "-34.0486, 174.445, -188.918, 0.22", "-33.9549, 174.977, -189.195, 0.52", "-33.9361, 175.117, -189.262, 0.59", "-33.864, 175.819, -189.603, 0.22", "-33.8383, 176.367, -189.907, 0.44", "-33.8892, 177.386, -190.541, 0.22", "-33.9695, 177.816, -190.839, 0.66", "-34.1668, 178.438, -191.291, 0.22", "-34.4809, 179.161, -191.851, 0.74", "-34.8497, 179.833, -192.403, 0.59", "-35.1854, 180.406, -192.89, 0.29", "-35.4638, 180.878, -193.294, 0.52", "-35.9319, 181.651, -193.955, 0.22", "-36.2262, 182.164, -194.369, 0.59", "-36.3132, 182.372, -194.514, 0.59", "-36.4795, 183.097, -194.968, 0.22", "-36.4998, 183.57, -195.283, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-52.6962, 127.248, -158.004, 0.52", "-51.8583, 127.954, -159.753, 0.52", "-51.3567, 128.396, -160.793, 0.29", "-50.8569, 128.886, -161.809, 0.29", "-50.1449, 129.607, -163.21, 0.29", "-49.6286, 130.111, -164.191, 0.59", "-49.4332, 130.281, -164.553, 0.66", "-48.7819, 130.776, -165.623, 0.29", "-48.3351, 131.03, -166.313, 0.81", "-48.2066, 131.104, -166.506, 0.81", "-47.5668, 131.441, -167.369, 0.29", "-46.9389, 131.692, -168.312, 0.44", "-46.7438, 131.736, -168.593, 0.66", "-46.3651, 131.72, -169.055, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "54.4193, 307.923, -177.162, 0.37", "54.4732, 307.51, -178.887, 0.37", "54.5035, 307.381, -179.615, 0.22", "54.5423, 307.215, -180.548, 0.22", "54.5506, 307.179, -180.748, 0.66", "54.5934, 306.997, -181.774, 0.22", "54.6316, 306.833, -182.692, 0.22", "54.6636, 306.81, -182.91, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "54.4193, 307.923, -177.162, 0.22", "55.661, 308.007, -179.513, 0.22", "55.9388, 308.029, -180.0, 0.88", "56.593, 308.08, -181.147, 0.22", "56.8724, 308.102, -181.637, 0.74", "57.8652, 308.18, -183.378, 0.22", "58.2849, 308.214, -184.114, 0.44", "58.954, 308.248, -184.926, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "axon_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "axon_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_55", "dend_55", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_NBC_e9641cafc3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_13
create dend_29
public dend_29
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_40
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, axon_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, axon_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.45000090983035473)
    connect dend_56(0), soma_0(0.45000090983035473)
    connect dend_51(0), soma_0(0.45000090983035473)
    connect dend_32(0), soma_0(0.45000090983035473)
    connect dend_13(0), soma_0(0.45000090983035473)
    connect dend_0(0), soma_0(0.45000090983035473)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.9016, -1.97873, -2.50057, 3.38117 ) }
    soma_0 { pt3dadd( -9.79478, -1.80994, -2.24302, 5.67833 ) }
    soma_0 { pt3dadd( -8.68798, -1.64115, -1.98548, 7.15072 ) }
    soma_0 { pt3dadd( -7.58118, -1.47235, -1.72793, 8.64399 ) }
    soma_0 { pt3dadd( -6.47438, -1.30356, -1.47039, 10.0299 ) }
    soma_0 { pt3dadd( -5.36758, -1.13477, -1.21284, 11.2674 ) }
    soma_0 { pt3dadd( -4.26078, -0.965972, -0.955299, 11.9107 ) }
    soma_0 { pt3dadd( -3.15398, -0.797179, -0.697754, 12.2563 ) }
    soma_0 { pt3dadd( -2.04718, -0.628385, -0.440209, 12.5208 ) }
    soma_0 { pt3dadd( -0.940378, -0.459592, -0.182664, 12.7145 ) }
    soma_0 { pt3dadd( 0.166423, -0.290798, 0.0748807, 12.541 ) }
    soma_0 { pt3dadd( 1.27322, -0.122005, 0.332426, 12.2075 ) }
    soma_0 { pt3dadd( 2.38002, 0.0467885, 0.589971, 11.6554 ) }
    soma_0 { pt3dadd( 3.48682, 0.215582, 0.847516, 11.0225 ) }
    soma_0 { pt3dadd( 4.59362, 0.384375, 1.10506, 10.3416 ) }
    soma_0 { pt3dadd( 5.70042, 0.553169, 1.36261, 9.80603 ) }
    soma_0 { pt3dadd( 6.80722, 0.721962, 1.62015, 9.2712 ) }
    soma_0 { pt3dadd( 7.91403, 0.890756, 1.8777, 8.04801 ) }
    soma_0 { pt3dadd( 9.02083, 1.05955, 2.13524, 5.78101 ) }
    soma_0 { pt3dadd( 10.1276, 1.22834, 2.39279, 3.52734 ) }
    soma_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 2.23302 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 6.34928, -3.40695, -7.98898, 1.25 ) }
    dend_67 { pt3dadd( 7.1592, -3.93357, -8.29607, 1.25 ) }
    dend_67 { pt3dadd( 7.80397, -4.4589, -8.99948, 1.25 ) }
    dend_67 { pt3dadd( 8.32254, -4.97201, -9.77288, 0.88 ) }
    dend_67 { pt3dadd( 8.75354, -5.47822, -10.5188, 0.88 ) }
    dend_67 { pt3dadd( 9.14028, -6.01692, -11.2517, 0.88 ) }
    dend_67 { pt3dadd( 10.0893, -7.67389, -13.3139, 1.18 ) }
    dend_67 { pt3dadd( 10.6325, -9.16889, -15.1065, 1.18 ) }
    dend_67 { pt3dadd( 10.7181, -9.52425, -15.4839, 1.69 ) }
    dend_67 { pt3dadd( 10.8133, -10.0067, -15.9149, 1.84 ) }
    dend_67 { pt3dadd( 10.9712, -10.69, -16.4064, 1.62 ) }
    dend_67 { pt3dadd( 11.3065, -11.7358, -16.9094, 1.11 ) }
    dend_67 { pt3dadd( 11.8015, -12.8114, -17.1349, 1.11 ) }
    dend_67 { pt3dadd( 12.5231, -14.1123, -17.2544, 1.11 ) }
    dend_67 { pt3dadd( 13.1624, -15.2061, -17.2879, 1.11 ) }
    dend_67 { pt3dadd( 13.8144, -16.3319, -17.2675, 1.11 ) }
    dend_67 { pt3dadd( 14.4123, -17.4827, -17.192, 1.11 ) }
    dend_67 { pt3dadd( 14.9188, -18.6324, -17.0666, 1.18 ) }
    dend_67 { pt3dadd( 15.1657, -19.46, -16.9623, 1.33 ) }
    dend_67 { pt3dadd( 15.2989, -20.7877, -16.8099, 1.25 ) }
    dend_67 { pt3dadd( 15.2164, -21.8872, -16.7184, 0.88 ) }
    dend_67 { pt3dadd( 14.91, -23.2977, -16.6803, 1.25 ) }
    dend_67 { pt3dadd( 14.7055, -23.9375, -16.7101, 1.55 ) }
    dend_67 { pt3dadd( 14.4812, -24.6257, -16.7461, 1.55 ) }
    dend_67 { pt3dadd( 14.2222, -25.5759, -16.7954, 1.33 ) }
    dend_67 { pt3dadd( 14.0448, -26.5792, -16.8324, 1.11 ) }
    dend_67 { pt3dadd( 13.9915, -27.9049, -16.8197, 0.81 ) }
    dend_67 { pt3dadd( 14.1878, -29.4196, -16.7325, 0.59 ) }
    dend_67 { pt3dadd( 14.7716, -31.2792, -16.5197, 0.59 ) }
    dend_67 { pt3dadd( 15.2557, -32.1338, -16.3662, 0.74 ) }
    dend_67 { pt3dadd( 16.1325, -33.1078, -16.1225, 0.96 ) }
    dend_67 { pt3dadd( 16.838, -33.6727, -15.9547, 1.18 ) }
    dend_67 { pt3dadd( 17.3884, -34.0218, -15.858, 1.18 ) }
    dend_67 { pt3dadd( 18.1295, -34.4402, -15.7776, 1.18 ) }
    dend_67 { pt3dadd( 18.966, -34.94, -15.7704, 0.88 ) }
    dend_67 { pt3dadd( 19.8268, -35.6532, -15.8594, 0.88 ) }
    dend_67 { pt3dadd( 20.2194, -36.1491, -15.9705, 1.11 ) }
    dend_67 { pt3dadd( 20.725, -37.0286, -16.1828, 1.11 ) }
    dend_67 { pt3dadd( 21.0251, -37.6681, -16.3411, 0.96 ) }
    dend_67 { pt3dadd( 21.2979, -38.3065, -16.5008, 1.25 ) }
    dend_67 { pt3dadd( 21.8725, -39.5526, -16.8407, 0.66 ) }
    dend_67 { pt3dadd( 22.2558, -40.2359, -17.037, 0.66 ) }
    dend_67 { pt3dadd( 22.7217, -40.823, -17.2046, 0.66 ) }
    dend_67 { pt3dadd( 23.2527, -41.238, -17.3398, 0.74 ) }
    dend_67 { pt3dadd( 23.9976, -41.6112, -17.5311, 0.59 ) }
    dend_67 { pt3dadd( 24.9732, -41.9902, -17.7801, 0.88 ) }
    dend_67 { pt3dadd( 25.5169, -42.1879, -17.9256, 0.88 ) }
    dend_67 { pt3dadd( 26.042, -42.4126, -18.0738, 1.11 ) }
    dend_67 { pt3dadd( 27.0247, -42.9548, -18.3816, 0.66 ) }
    dend_67 { pt3dadd( 27.8759, -43.6013, -18.6807, 0.59 ) }
    dend_67 { pt3dadd( 28.5795, -44.4136, -18.9647, 0.66 ) }
    dend_67 { pt3dadd( 29.1152, -45.3383, -19.1818, 0.81 ) }
    dend_67 { pt3dadd( 29.5397, -46.3149, -19.3811, 1.4 ) }
    dend_67 { pt3dadd( 29.6829, -46.7398, -19.4531, 1.55 ) }
    dend_67 { pt3dadd( 29.8961, -47.5622, -19.5545, 0.96 ) }
    dend_67 { pt3dadd( 30.1408, -48.6339, -19.6581, 0.52 ) }
    dend_67 { pt3dadd( 30.3533, -49.4264, -19.764, 0.52 ) }
    dend_67 { pt3dadd( 30.66, -50.3294, -19.9057, 0.96 ) }
    dend_67 { pt3dadd( 30.8896, -50.9241, -20.0231, 1.03 ) }
    dend_67 { pt3dadd( 31.054, -51.3234, -20.0968, 1.11 ) }
    dend_67 { pt3dadd( 31.233, -51.7492, -20.1577, 1.11 ) }
    dend_67 { pt3dadd( 31.7164, -52.9253, -20.3075, 0.52 ) }
    dend_67 { pt3dadd( 32.0882, -53.9841, -20.3764, 0.59 ) }
    dend_67 { pt3dadd( 32.4036, -55.0017, -20.3716, 0.59 ) }
    dend_67 { pt3dadd( 32.706, -56.0024, -20.3453, 1.18 ) }
    dend_67 { pt3dadd( 32.9664, -56.8091, -20.3445, 1.55 ) }
    dend_67 { pt3dadd( 33.1315, -57.2698, -20.3601, 1.55 ) }
    dend_67 { pt3dadd( 33.6302, -58.4849, -20.579, 0.81 ) }
    dend_67 { pt3dadd( 33.9949, -59.2249, -20.8746, 0.52 ) }
    dend_67 { pt3dadd( 34.3971, -59.9279, -21.2905, 0.44 ) }
    dend_67 { pt3dadd( 34.948, -60.833, -21.9555, 0.81 ) }
    dend_67 { pt3dadd( 35.28, -61.3632, -22.3804, 0.96 ) }
    dend_67 { pt3dadd( 36.1823, -62.7925, -23.5402, 0.52 ) }
    dend_67 { pt3dadd( 36.5545, -63.3824, -24.0228, 0.96 ) }
    dend_67 { pt3dadd( 36.8434, -63.8871, -24.3629, 1.25 ) }
    dend_67 { pt3dadd( 37.142, -64.4846, -24.6544, 1.03 ) }
    dend_67 { pt3dadd( 37.4494, -65.1702, -24.8695, 0.74 ) }
    dend_67 { pt3dadd( 37.6387, -65.6124, -24.962, 0.74 ) }
    dend_67 { pt3dadd( 38.0041, -66.411, -25.0523, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_67 { pt3dadd( 38.4267, -67.2761, -25.189, 0.44 ) }
    dend_67 { pt3dadd( 38.9153, -68.2434, -25.3526, 0.96 ) }
    dend_67 { pt3dadd( 39.2176, -68.837, -25.4528, 1.55 ) }
    dend_67 { pt3dadd( 39.4566, -69.3346, -25.4698, 1.69 ) }
    dend_67 { pt3dadd( 39.721, -69.9173, -25.4134, 1.25 ) }
    dend_67 { pt3dadd( 40.2245, -71.0153, -25.2707, 0.59 ) }
    dend_67 { pt3dadd( 40.7291, -72.072, -25.1152, 0.59 ) }
    dend_67 { pt3dadd( 41.303, -73.2169, -24.99, 1.25 ) }
    dend_67 { pt3dadd( 42.449, -75.4834, -24.8797, 0.52 ) }
    dend_67 { pt3dadd( 43.0325, -76.6404, -24.8659, 0.44 ) }
    dend_67 { pt3dadd( 43.7306, -78.0348, -24.8941, 0.96 ) }
    dend_67 { pt3dadd( 44.022, -78.6205, -24.9261, 0.96 ) }
    dend_67 { pt3dadd( 44.6764, -79.8876, -25.1089, 0.52 ) }
    dend_67 { pt3dadd( 45.3006, -81.0126, -25.376, 0.52 ) }
    dend_67 { pt3dadd( 45.9625, -82.119, -25.7521, 1.11 ) }
    dend_67 { pt3dadd( 46.2403, -82.5812, -25.8796, 1.55 ) }
    dend_67 { pt3dadd( 46.5237, -83.0823, -25.9616, 1.77 ) }
    dend_67 { pt3dadd( 46.7134, -83.4176, -26.0322, 1.84 ) }
    dend_67 { pt3dadd( 46.984, -83.8818, -26.1678, 1.47 ) }
    dend_67 { pt3dadd( 47.4015, -84.5386, -26.477, 1.11 ) }
    dend_67 { pt3dadd( 47.7998, -85.1424, -26.848, 0.81 ) }
    dend_67 { pt3dadd( 48.3847, -86.0991, -27.5082, 0.44 ) }
    dend_67 { pt3dadd( 49.0348, -87.2838, -28.3765, 0.96 ) }
    dend_67 { pt3dadd( 49.3595, -87.9538, -28.8698, 1.11 ) }
    dend_67 { pt3dadd( 49.6003, -88.4927, -29.2801, 0.81 ) }
    dend_67 { pt3dadd( 49.8689, -89.1378, -29.725, 0.29 ) }
    dend_67 { pt3dadd( 50.1729, -89.8635, -30.0996, 0.29 ) }
    dend_67 { pt3dadd( 50.4381, -90.4539, -30.2424, 0.59 ) }
    dend_67 { pt3dadd( 50.7967, -91.2086, -30.2617, 0.88 ) }
    dend_67 { pt3dadd( 51.0837, -91.778, -30.2155, 1.03 ) }
    dend_67 { pt3dadd( 51.7195, -92.979, -30.0573, 1.03 ) }
    dend_67 { pt3dadd( 52.2689, -93.9156, -29.9042, 0.59 ) }
    dend_67 { pt3dadd( 52.8675, -94.8403, -29.7476, 0.59 ) }
    dend_67 { pt3dadd( 53.4077, -95.6474, -29.6193, 0.88 ) }
    dend_67 { pt3dadd( 53.8851, -96.4235, -29.4977, 1.25 ) }
    dend_67 { pt3dadd( 54.1525, -96.9135, -29.4413, 1.47 ) }
    dend_67 { pt3dadd( 54.3072, -97.2637, -29.4249, 1.47 ) }
    dend_67 { pt3dadd( 54.6073, -98.1931, -29.3978, 0.37 ) }
    dend_67 { pt3dadd( 54.8004, -99.153, -29.3755, 0.37 ) }
    dend_67 { pt3dadd( 54.9033, -100.419, -29.3639, 0.74 ) }
    dend_67 { pt3dadd( 54.8774, -101.209, -29.3768, 0.66 ) }
    dend_67 { pt3dadd( 54.8035, -102.19, -29.398, 0.52 ) }
    dend_67 { pt3dadd( 54.7581, -102.661, -29.3929, 0.88 ) }
    dend_67 { pt3dadd( 54.6976, -103.212, -29.3586, 0.88 ) }
    dend_67 { pt3dadd( 54.6992, -103.828, -29.1341, 0.37 ) }
    dend_67 { pt3dadd( 54.9416, -104.393, -28.372, 0.37 ) }
    dend_67 { pt3dadd( 55.1905, -104.84, -27.5873, 0.37 ) }
    dend_67 { pt3dadd( 55.518, -105.318, -26.708, 0.37 ) }
    dend_67 { pt3dadd( 55.7899, -105.683, -26.0486, 0.44 ) }
    dend_67 { pt3dadd( 56.7965, -106.904, -23.892, 1.18 ) }
    dend_67 { pt3dadd( 57.2749, -107.472, -22.971, 1.18 ) }
    dend_67 { pt3dadd( 57.8239, -108.123, -21.9613, 0.37 ) }
    dend_67 { pt3dadd( 58.228, -108.662, -21.2415, 0.81 ) }
    dend_67 { pt3dadd( 58.431, -108.95, -20.9247, 0.81 ) }
    dend_67 { pt3dadd( 58.7207, -109.379, -20.5448, 0.81 ) }
    dend_67 { pt3dadd( 59.2738, -110.166, -20.0133, 0.37 ) }
    dend_67 { pt3dadd( 60.1421, -111.28, -19.2446, 1.33 ) }
    dend_67 { pt3dadd( 60.4734, -111.648, -18.9481, 1.69 ) }
    dend_67 { pt3dadd( 61.1162, -112.311, -18.3542, 1.25 ) }
    dend_67 { pt3dadd( 61.6316, -112.782, -17.9096, 0.66 ) }
    dend_67 { pt3dadd( 62.3019, -113.31, -17.4084, 0.52 ) }
    dend_67 { pt3dadd( 62.9689, -113.746, -17.0371, 0.81 ) }
    dend_67 { pt3dadd( 63.2927, -113.964, -16.9072, 0.81 ) }
    dend_67 { pt3dadd( 63.6563, -114.227, -16.773, 0.81 ) }
    dend_67 { pt3dadd( 64.134, -114.625, -16.614, 0.44 ) }
    dend_67 { pt3dadd( 64.6233, -115.126, -16.4299, 0.37 ) }
    dend_67 { pt3dadd( 64.8918, -115.602, -16.3083, 0.37 ) }
    dend_67 { pt3dadd( 65.2014, -116.836, -16.1139, 0.37 ) }
    dend_67 { pt3dadd( 65.3101, -117.468, -16.0426, 0.74 ) }
    dend_67 { pt3dadd( 65.4018, -118.049, -15.9937, 0.81 ) }
    dend_67 { pt3dadd( 65.4751, -118.497, -15.9667, 0.81 ) }
    dend_67 { pt3dadd( 65.6478, -119.285, -15.9463, 0.37 ) }
    dend_67 { pt3dadd( 65.9104, -120.093, -15.8937, 0.37 ) }
    dend_67 { pt3dadd( 66.4388, -121.186, -15.7935, 0.37 ) }
    dend_67 { pt3dadd( 66.8727, -121.919, -15.6893, 0.66 ) }
    dend_67 { pt3dadd( 67.1591, -122.349, -15.6113, 0.81 ) }
    dend_67 { pt3dadd( 67.6231, -122.984, -15.4765, 0.81 ) }
    dend_67 { pt3dadd( 68.5441, -124.146, -15.2003, 0.52 ) }
    dend_67 { pt3dadd( 68.8483, -124.535, -15.1061, 0.52 ) }
    dend_67 { pt3dadd( 69.4394, -125.425, -14.9173, 0.88 ) }
    dend_67 { pt3dadd( 69.644, -125.825, -14.8602, 1.18 ) }
    dend_67 { pt3dadd( 69.797, -126.214, -14.8454, 1.18 ) }
    dend_67 { pt3dadd( 69.9437, -126.747, -14.8799, 1.18 ) }
    dend_67 { pt3dadd( 70.0424, -127.374, -14.9975, 0.96 ) }
    dend_67 { pt3dadd( 70.1128, -128.222, -15.2398, 0.52 ) }
    dend_67 { pt3dadd( 70.1989, -129.25, -15.6377, 0.52 ) }
    dend_67 { pt3dadd( 70.2893, -129.916, -15.9293, 0.74 ) }
    dend_67 { pt3dadd( 70.3654, -130.307, -16.1118, 0.74 ) }
    dend_67 { pt3dadd( 70.6067, -131.15, -16.4623, 0.52 ) }
    dend_67 { pt3dadd( 71.1049, -132.292, -16.873, 0.52 ) }
    dend_67 { pt3dadd( 71.5797, -133.019, -17.1023, 0.59 ) }
    dend_67 { pt3dadd( 72.2254, -133.79, -17.2998, 0.81 ) }
    dend_67 { pt3dadd( 72.8828, -134.479, -17.4231, 0.59 ) }
    dend_67 { pt3dadd( 73.8733, -135.398, -17.5963, 0.37 ) }
    dend_67 { pt3dadd( 74.5642, -135.987, -17.7109, 0.37 ) }
    dend_67 { pt3dadd( 75.2943, -136.632, -17.7729, 1.11 ) }
    dend_67 { pt3dadd( 75.4676, -136.793, -17.7868, 1.4 ) }
    dend_67 { pt3dadd( 76.0432, -137.32, -17.8415, 1.03 ) }
    dend_67 { pt3dadd( 76.8635, -138.099, -17.9352, 0.52 ) }
    dend_67 { pt3dadd( 77.6446, -138.917, -18.0767, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_67 { pt3dadd( 78.4279, -139.822, -18.2115, 1.18 ) }
    dend_67 { pt3dadd( 78.7191, -140.18, -18.2769, 1.47 ) }
    dend_67 { pt3dadd( 79.0117, -140.535, -18.3678, 1.47 ) }
    dend_67 { pt3dadd( 79.7854, -141.536, -18.6809, 0.52 ) }
    dend_67 { pt3dadd( 80.3592, -142.359, -19.046, 0.88 ) }
    dend_67 { pt3dadd( 80.6559, -142.852, -19.3393, 0.88 ) }
    dend_67 { pt3dadd( 81.2014, -143.806, -20.1227, 0.59 ) }
    dend_67 { pt3dadd( 81.5979, -144.535, -20.8063, 1.03 ) }
    dend_67 { pt3dadd( 81.884, -145.066, -21.3483, 1.03 ) }
    dend_67 { pt3dadd( 82.4564, -146.105, -22.5181, 0.44 ) }
    dend_67 { pt3dadd( 82.6839, -146.559, -23.0413, 0.44 ) }
    dend_67 { pt3dadd( 83.1343, -147.652, -24.2683, 1.03 ) }
    dend_67 { pt3dadd( 83.2628, -148.097, -24.7128, 1.18 ) }
    dend_67 { pt3dadd( 83.3823, -148.686, -25.2308, 0.74 ) }
    dend_67 { pt3dadd( 83.5424, -149.755, -26.0507, 0.44 ) }
    dend_67 { pt3dadd( 83.5782, -150.533, -26.4591, 0.44 ) }
    dend_67 { pt3dadd( 83.5781, -151.393, -26.7929, 0.44 ) }
    dend_67 { pt3dadd( 83.5489, -152.589, -27.0809, 1.11 ) }
    dend_67 { pt3dadd( 83.5655, -153.045, -27.1582, 1.47 ) }
    dend_67 { pt3dadd( 83.6574, -153.769, -27.2202, 1.47 ) }
    dend_67 { pt3dadd( 84.015, -155.218, -27.2079, 0.44 ) }
    dend_67 { pt3dadd( 84.3503, -156.108, -27.1684, 0.44 ) }
    dend_67 { pt3dadd( 84.8386, -157.142, -27.1115, 0.44 ) }
    dend_67 { pt3dadd( 85.3305, -158.077, -27.0682, 0.44 ) }
    dend_67 { pt3dadd( 85.6644, -158.738, -27.0786, 0.29 ) }
    dend_67 { pt3dadd( 86.1004, -159.687, -27.1884, 0.29 ) }
    dend_67 { pt3dadd( 86.2871, -160.2, -27.3173, 1.4 ) }
    dend_67 { pt3dadd( 86.4125, -160.782, -27.4965, 1.99 ) }
    dend_67 { pt3dadd( 86.4975, -161.549, -27.7631, 1.47 ) }
    dend_67 { pt3dadd( 86.5557, -162.786, -28.2345, 0.44 ) }
    dend_67 { pt3dadd( 86.5946, -163.791, -28.5727, 0.37 ) }
    dend_67 { pt3dadd( 86.6584, -164.736, -28.8477, 0.37 ) }
    dend_67 { pt3dadd( 86.7308, -165.557, -29.0395, 0.74 ) }
    dend_67 { pt3dadd( 86.8157, -166.133, -29.1581, 0.88 ) }
    dend_67 { pt3dadd( 86.9343, -166.667, -29.2418, 0.37 ) }
    dend_67 { pt3dadd( 87.4127, -168.226, -29.3823, 0.29 ) }
    dend_67 { pt3dadd( 87.6788, -168.881, -29.3984, 0.29 ) }
    dend_67 { pt3dadd( 87.9759, -169.474, -29.4012, 0.96 ) }
    dend_67 { pt3dadd( 88.6952, -170.744, -29.5315, 0.37 ) }
    dend_67 { pt3dadd( 89.1965, -171.587, -29.7004, 0.66 ) }
    dend_67 { pt3dadd( 89.4063, -171.934, -29.8039, 0.66 ) }
    dend_67 { pt3dadd( 90.0745, -173.066, -30.3065, 0.37 ) }
    dend_67 { pt3dadd( 90.2572, -173.374, -30.4571, 0.81 ) }
    dend_67 { pt3dadd( 91.2009, -174.852, -31.2121, 0.37 ) }
    dend_67 { pt3dadd( 91.432, -175.17, -31.393, 0.88 ) }
    dend_67 { pt3dadd( 91.6644, -175.446, -31.5802, 0.88 ) }
    dend_67 { pt3dadd( 92.2862, -176.064, -32.0773, 0.44 ) }
    dend_67 { pt3dadd( 92.7103, -176.451, -32.4267, 0.44 ) }
    dend_67 { pt3dadd( 93.3254, -176.966, -32.8634, 0.81 ) }
    dend_67 { pt3dadd( 94.3472, -177.715, -33.4973, 1.55 ) }
    dend_67 { pt3dadd( 94.7291, -177.977, -33.7284, 1.69 ) }
    dend_67 { pt3dadd( 95.7705, -178.684, -34.3778, 0.37 ) }
    dend_67 { pt3dadd( 96.5024, -179.188, -34.8469, 0.37 ) }
    dend_67 { pt3dadd( 97.226, -179.74, -35.3579, 0.37 ) }
    dend_67 { pt3dadd( 97.9952, -180.392, -35.9164, 0.44 ) }
    dend_67 { pt3dadd( 98.5255, -180.876, -36.2819, 1.03 ) }
    dend_67 { pt3dadd( 98.9288, -181.232, -36.5409, 1.4 ) }
    dend_67 { pt3dadd( 99.2617, -181.512, -36.7295, 1.4 ) }
    dend_67 { pt3dadd( 100.254, -182.26, -37.2113, 0.29 ) }
    dend_67 { pt3dadd( 100.982, -182.83, -37.507, 0.29 ) }
    dend_67 { pt3dadd( 101.56, -183.285, -37.69, 0.29 ) }
    dend_67 { pt3dadd( 102.002, -183.616, -37.8049, 0.29 ) }
    dend_67 { pt3dadd( 102.568, -184.023, -37.9266, 0.74 ) }
    dend_67 { pt3dadd( 103.043, -184.352, -38.017, 1.11 ) }
    dend_67 { pt3dadd( 104.029, -184.984, -38.1679, 0.52 ) }
    dend_67 { pt3dadd( 104.575, -185.338, -38.2542, 0.81 ) }
    dend_67 { pt3dadd( 105.194, -185.783, -38.3559, 0.66 ) }
    dend_67 { pt3dadd( 105.865, -186.292, -38.4909, 0.29 ) }
    dend_67 { pt3dadd( 106.453, -186.725, -38.6231, 0.29 ) }
    dend_67 { pt3dadd( 107.245, -187.276, -38.8104, 0.29 ) }
    dend_67 { pt3dadd( 108.261, -187.917, -39.0488, 0.44 ) }
    dend_67 { pt3dadd( 108.757, -188.223, -39.1507, 0.44 ) }
    dend_67 { pt3dadd( 109.505, -188.681, -39.306, 0.29 ) }
    dend_67 { pt3dadd( 109.886, -188.925, -39.3797, 0.59 ) }
    dend_67 { pt3dadd( 110.155, -189.107, -39.4348, 0.59 ) }
    dend_67 { pt3dadd( 110.619, -189.454, -39.5484, 0.29 ) }
    dend_67 { pt3dadd( 111.252, -189.949, -39.7279, 0.29 ) }
    dend_67 { pt3dadd( 111.837, -190.434, -39.9112, 0.59 ) }
    dend_67 { pt3dadd( 112.141, -190.705, -40.0074, 0.74 ) }
    dend_67 { pt3dadd( 112.337, -190.896, -40.0775, 0.74 ) }
    dend_67 { pt3dadd( 113.208, -191.806, -40.4283, 0.29 ) }
    dend_67 { pt3dadd( 113.831, -192.513, -40.7189, 0.44 ) }
    dend_67 { pt3dadd( 114.225, -192.982, -40.926, 1.11 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.86928, -3.63695, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.86928, -3.63695, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.62963, -4.50511, 4.36531, 1.25 ) }
    dend_56 { pt3dadd( 7.23429, -6.0022, 4.79526, 1.4 ) }
    dend_56 { pt3dadd( 6.84703, -7.64927, 5.20699, 1.4 ) }
    dend_56 { pt3dadd( 6.56191, -9.20183, 5.54835, 1.18 ) }
    dend_56 { pt3dadd( 6.349, -10.7849, 5.86337, 1.18 ) }
    dend_56 { pt3dadd( 6.26677, -12.1057, 6.08699, 1.4 ) }
    dend_56 { pt3dadd( 6.36092, -13.9808, 6.35144, 1.4 ) }
    dend_56 { pt3dadd( 6.56299, -16.0049, 6.57124, 1.4 ) }
    dend_56 { pt3dadd( 6.84385, -17.6977, 6.69949, 1.62 ) }
    dend_56 { pt3dadd( 7.1249, -18.8194, 6.77735, 1.47 ) }
    dend_56 { pt3dadd( 7.75359, -20.6134, 6.86813, 1.03 ) }
    dend_56 { pt3dadd( 8.66956, -22.5681, 6.96597, 1.03 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 97/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.81072, -2.89695, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -9.81072, -2.89695, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -10.5421, -3.72879, -6.43019, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -11.5086, -5.01737, -6.63254, 1.11 ) }
    dend_51 { pt3dadd( -12.0395, -5.82052, -6.78645, 1.18 ) }
    dend_51 { pt3dadd( -12.5328, -6.67208, -6.98748, 1.03 ) }
    dend_51 { pt3dadd( -13.1136, -7.67441, -7.22411, 0.96 ) }
    dend_51 { pt3dadd( -13.598, -8.58823, -7.45858, 1.4 ) }
    dend_51 { pt3dadd( -14.0638, -9.67596, -7.78401, 1.62 ) }
    dend_51 { pt3dadd( -14.2312, -10.241, -7.98365, 1.84 ) }
    dend_51 { pt3dadd( -14.4433, -11.23, -8.38713, 1.84 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 8/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.60072, -7.02695, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -3.60072, -7.02695, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -4.56191, -8.14123, -2.21552, 1.11 ) }
    dend_32 { pt3dadd( -5.9926, -9.56117, -2.93647, 0.96 ) }
    dend_32 { pt3dadd( -6.46593, -9.96496, -3.10919, 0.96 ) }
    dend_32 { pt3dadd( -7.61609, -10.7845, -3.407, 0.66 ) }
    dend_32 { pt3dadd( -8.60804, -11.407, -3.5528, 0.66 ) }
    dend_32 { pt3dadd( -9.26089, -11.7322, -3.5624, 1.03 ) }
    dend_32 { pt3dadd( -10.4846, -12.2187, -3.43875, 1.33 ) }
    dend_32 { pt3dadd( -11.3188, -12.5428, -3.30251, 1.47 ) }
    dend_32 { pt3dadd( -12.4375, -13.0415, -3.15039, 1.11 ) }
    dend_32 { pt3dadd( -13.5421, -13.6782, -3.08771, 0.96 ) }
    dend_32 { pt3dadd( -14.7864, -14.7058, -3.19937, 0.66 ) }
    dend_32 { pt3dadd( -15.6656, -15.7387, -3.44919, 0.52 ) }
    dend_32 { pt3dadd( -16.2479, -16.7642, -3.86448, 0.44 ) }
    dend_32 { pt3dadd( -16.6598, -17.9877, -4.52545, 0.44 ) }
    dend_32 { pt3dadd( -17.0046, -19.5409, -5.49257, 1.4 ) }
    dend_32 { pt3dadd( -17.1185, -20.2682, -5.96794, 1.84 ) }
    dend_32 { pt3dadd( -17.1938, -20.9345, -6.39549, 2.14 ) }
    dend_32 { pt3dadd( -17.3618, -22.5663, -7.35583, 1.99 ) }
    dend_32 { pt3dadd( -17.6419, -25.103, -8.59378, 1.03 ) }
    dend_32 { pt3dadd( -17.8702, -26.9439, -9.29611, 0.88 ) }
    dend_32 { pt3dadd( -18.0853, -28.3262, -9.49768, 0.81 ) }
    dend_32 { pt3dadd( -18.2871, -29.3161, -9.33214, 0.66 ) }
    dend_32 { pt3dadd( -18.6684, -30.8212, -8.63858, 0.66 ) }
    dend_32 { pt3dadd( -19.0442, -32.0503, -7.7466, 0.96 ) }
    dend_32 { pt3dadd( -19.2557, -32.6502, -7.1778, 1.11 ) }
    dend_32 { pt3dadd( -20.6037, -36.2483, -3.59267, 0.44 ) }
    dend_32 { pt3dadd( -21.0423, -37.3537, -2.5396, 1.03 ) }
    dend_32 { pt3dadd( -21.155, -37.6277, -2.31325, 1.4 ) }
    dend_32 { pt3dadd( -21.4711, -38.3134, -1.87639, 1.69 ) }
    dend_32 { pt3dadd( -21.7572, -38.8675, -1.69884, 1.69 ) }
    dend_32 { pt3dadd( -22.8288, -40.6995, -1.66795, 0.81 ) }
    dend_32 { pt3dadd( -23.4864, -41.5863, -1.94503, 1.18 ) }
    dend_32 { pt3dadd( -24.3448, -42.488, -2.27726, 1.47 ) }
    dend_32 { pt3dadd( -24.943, -43.0292, -2.45905, 1.47 ) }
    dend_32 { pt3dadd( -25.7822, -43.7398, -2.61192, 1.4 ) }
    dend_32 { pt3dadd( -26.8627, -44.6121, -2.68499, 1.11 ) }
    dend_32 { pt3dadd( -28.6228, -45.9757, -2.59331, 0.52 ) }
    dend_32 { pt3dadd( -29.7237, -46.8842, -2.4401, 0.52 ) }
    dend_32 { pt3dadd( -30.9063, -48.0632, -2.1339, 0.52 ) }
    dend_32 { pt3dadd( -32.024, -49.6464, -1.66918, 1.18 ) }
    dend_32 { pt3dadd( -32.3455, -50.3338, -1.50673, 1.55 ) }
    dend_32 { pt3dadd( -32.4864, -50.8277, -1.44757, 1.69 ) }
    dend_32 { pt3dadd( -32.643, -51.6113, -1.46109, 1.92 ) }
    dend_32 { pt3dadd( -32.8789, -52.9001, -1.69713, 0.74 ) }
    dend_32 { pt3dadd( -33.1695, -54.576, -2.02861, 0.44 ) }
    dend_32 { pt3dadd( -33.5827, -56.7927, -2.47267, 0.44 ) }
    dend_32 { pt3dadd( -33.9621, -58.6738, -2.79246, 0.44 ) }
    dend_32 { pt3dadd( -34.4618, -60.8681, -3.08276, 0.74 ) }
    dend_32 { pt3dadd( -34.8837, -62.3123, -3.20801, 0.52 ) }
    dend_32 { pt3dadd( -36.0123, -65.3818, -3.30636, 1.03 ) }
    dend_32 { pt3dadd( -36.3308, -66.1558, -3.26852, 1.25 ) }
    dend_32 { pt3dadd( -36.7363, -67.1545, -3.12955, 0.66 ) }
    dend_32 { pt3dadd( -37.1819, -68.3848, -2.86075, 0.29 ) }
    dend_32 { pt3dadd( -37.6184, -69.8645, -2.48514, 0.29 ) }
    dend_32 { pt3dadd( -37.839, -70.7635, -2.26933, 0.59 ) }
    dend_32 { pt3dadd( -38.1437, -72.5443, -1.92676, 0.59 ) }
    dend_32 { pt3dadd( -38.2067, -73.7515, -1.64621, 1.03 ) }
    dend_32 { pt3dadd( -38.1109, -75.8446, -1.1605, 1.4 ) }
    dend_32 { pt3dadd( -38.0118, -76.7893, -0.953097, 1.77 ) }
    dend_32 { pt3dadd( -37.917, -77.5671, -0.830241, 2.14 ) }
    dend_32 { pt3dadd( -37.8283, -78.7576, -0.718621, 2.36 ) }
    dend_32 { pt3dadd( -37.9389, -80.4284, -0.768036, 0.74 ) }
    dend_32 { pt3dadd( -38.2531, -81.7125, -0.942062, 0.44 ) }
    dend_32 { pt3dadd( -38.6747, -82.7189, -1.22401, 0.44 ) }
    dend_32 { pt3dadd( -39.4423, -84.2089, -1.62744, 0.74 ) }
    dend_32 { pt3dadd( -39.8726, -84.9649, -1.78926, 0.74 ) }
    dend_32 { pt3dadd( -40.6502, -86.2869, -1.98426, 0.66 ) }
    dend_32 { pt3dadd( -41.1872, -87.257, -2.00663, 0.44 ) }
    dend_32 { pt3dadd( -41.6624, -88.3717, -1.87631, 0.44 ) }
    dend_32 { pt3dadd( -42.1505, -90.0268, -1.53124, 0.59 ) }
    dend_32 { pt3dadd( -42.4177, -91.1562, -1.21531, 0.81 ) }
    dend_32 { pt3dadd( -42.676, -92.084, -0.944816, 0.96 ) }
    dend_32 { pt3dadd( -42.9978, -92.953, -0.681818, 0.74 ) }
    dend_32 { pt3dadd( -43.4615, -93.8188, -0.465409, 0.44 ) }
    dend_32 { pt3dadd( -44.1021, -94.6434, -0.306632, 0.44 ) }
    dend_32 { pt3dadd( -44.9209, -95.4571, -0.272085, 0.74 ) }
    dend_32 { pt3dadd( -46.439, -96.8416, -0.279528, 0.88 ) }
    dend_32 { pt3dadd( -47.224, -97.5497, -0.245524, 1.4 ) }
    dend_32 { pt3dadd( -47.6224, -97.9482, -0.172267, 1.4 ) }
    dend_32 { pt3dadd( -48.2751, -98.7925, 0.0686775, 1.18 ) }
    dend_32 { pt3dadd( -48.7095, -99.6455, 0.366166, 0.81 ) }
    dend_32 { pt3dadd( -49.0652, -100.957, 0.8542, 0.52 ) }
    dend_32 { pt3dadd( -49.2083, -102.23, 1.33084, 0.52 ) }
    dend_32 { pt3dadd( -49.2861, -104.019, 1.99243, 0.74 ) }
    dend_32 { pt3dadd( -49.3116, -105.279, 2.4238, 0.52 ) }
    dend_32 { pt3dadd( -49.3264, -105.959, 2.63977, 1.11 ) }
    dend_32 { pt3dadd( -49.3673, -106.778, 2.89062, 1.4 ) }
    dend_32 { pt3dadd( -49.4283, -107.461, 3.06148, 1.55 ) }
    dend_32 { pt3dadd( -49.5539, -108.455, 3.25265, 0.74 ) }
    dend_32 { pt3dadd( -49.8703, -110.304, 3.53831, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -50.164, -111.633, 3.80745, 0.81 ) }
    dend_32 { pt3dadd( -50.5731, -113.17, 4.17536, 1.11 ) }
    dend_32 { pt3dadd( -50.9344, -114.266, 4.46846, 1.33 ) }
    dend_32 { pt3dadd( -51.2799, -115.124, 4.71996, 1.55 ) }
    dend_32 { pt3dadd( -51.704, -115.933, 5.00471, 1.18 ) }
    dend_32 { pt3dadd( -52.8079, -117.401, 5.74328, 0.59 ) }
    dend_32 { pt3dadd( -53.317, -117.904, 6.0893, 0.96 ) }
    dend_32 { pt3dadd( -53.9135, -118.401, 6.47983, 1.11 ) }
    dend_32 { pt3dadd( -54.5302, -118.886, 6.89185, 1.11 ) }
    dend_32 { pt3dadd( -55.6624, -119.773, 7.65504, 0.59 ) }
    dend_32 { pt3dadd( -56.8866, -120.761, 8.46131, 0.81 ) }
    dend_32 { pt3dadd( -57.9811, -121.706, 9.14588, 0.59 ) }
    dend_32 { pt3dadd( -59.1304, -122.832, 9.8675, 0.59 ) }
    dend_32 { pt3dadd( -60.2436, -124.112, 10.5602, 0.44 ) }
    dend_32 { pt3dadd( -61.0526, -125.271, 10.9841, 0.81 ) }
    dend_32 { pt3dadd( -61.5063, -126.127, 11.1489, 0.96 ) }
    dend_32 { pt3dadd( -61.7788, -126.871, 11.1816, 0.96 ) }
    dend_32 { pt3dadd( -62.0, -127.904, 11.1169, 0.96 ) }
    dend_32 { pt3dadd( -62.1224, -128.977, 10.997, 0.66 ) }
    dend_32 { pt3dadd( -62.1879, -131.147, 10.674, 0.52 ) }
    dend_32 { pt3dadd( -62.1667, -132.27, 10.4984, 0.66 ) }
    dend_32 { pt3dadd( -62.1127, -133.607, 10.3132, 1.33 ) }
    dend_32 { pt3dadd( -62.0862, -134.558, 10.2042, 1.99 ) }
    dend_32 { pt3dadd( -62.1365, -136.843, 10.0162, 0.44 ) }
    dend_32 { pt3dadd( -62.2805, -138.069, 9.97256, 0.44 ) }
    dend_32 { pt3dadd( -62.4863, -138.922, 9.99145, 0.74 ) }
    dend_32 { pt3dadd( -62.727, -139.592, 10.0071, 0.74 ) }
    dend_32 { pt3dadd( -63.1812, -140.544, 10.057, 0.74 ) }
    dend_32 { pt3dadd( -63.7696, -141.564, 10.1234, 0.37 ) }
    dend_32 { pt3dadd( -64.6913, -142.913, 10.2234, 0.29 ) }
    dend_32 { pt3dadd( -65.4495, -143.818, 10.3154, 0.29 ) }
    dend_32 { pt3dadd( -66.3712, -144.783, 10.4339, 0.29 ) }
    dend_32 { pt3dadd( -67.1945, -145.572, 10.5871, 0.22 ) }
    dend_32 { pt3dadd( -67.6552, -145.984, 10.6942, 0.22 ) }
    dend_32 { pt3dadd( -68.401, -146.668, 10.8962, 0.81 ) }
    dend_32 { pt3dadd( -68.8362, -147.099, 11.0273, 0.96 ) }
    dend_32 { pt3dadd( -69.8704, -148.14, 11.3542, 0.22 ) }
    dend_32 { pt3dadd( -70.7487, -149.094, 11.6382, 1.33 ) }
    dend_32 { pt3dadd( -71.3238, -149.819, 11.8159, 1.55 ) }
    dend_32 { pt3dadd( -72.1529, -150.999, 12.1037, 1.11 ) }
    dend_32 { pt3dadd( -72.6065, -151.723, 12.2908, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.23072, 4.50305, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -2.23072, 4.50305, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -3.11106, 5.14046, 5.70102, 1.55 ) }
    dend_13 { pt3dadd( -4.01003, 5.73727, 5.70102, 1.4 ) }
    dend_13 { pt3dadd( -5.01749, 6.34259, 5.70102, 1.18 ) }
    dend_13 { pt3dadd( -5.74691, 6.75509, 5.70367, 1.47 ) }
    dend_13 { pt3dadd( -6.72107, 7.30483, 5.73909, 1.77 ) }
    dend_13 { pt3dadd( -7.4248, 7.69468, 5.79785, 1.99 ) }
    dend_13 { pt3dadd( -8.19601, 8.13196, 5.92548, 1.99 ) }
    dend_13 { pt3dadd( -9.11274, 8.7196, 6.17502, 1.62 ) }
    dend_13 { pt3dadd( -10.1485, 9.56228, 6.61252, 1.11 ) }
    dend_13 { pt3dadd( -10.7955, 10.273, 7.02506, 1.11 ) }
    dend_13 { pt3dadd( -11.2734, 11.0413, 7.49071, 1.25 ) }
    dend_13 { pt3dadd( -11.6538, 12.0506, 8.1009, 1.47 ) }
    dend_13 { pt3dadd( -11.8161, 13.0286, 8.69718, 1.69 ) }
    dend_13 { pt3dadd( -11.7927, 13.837, 9.18351, 1.92 ) }
    dend_13 { pt3dadd( -11.6334, 14.7667, 9.71741, 1.77 ) }
    dend_13 { pt3dadd( -11.4405, 15.4619, 10.0761, 1.4 ) }
    dend_13 { pt3dadd( -11.1141, 16.3664, 10.4914, 1.18 ) }
    dend_13 { pt3dadd( -10.754, 17.2596, 10.8694, 1.11 ) }
    dend_13 { pt3dadd( -10.2273, 18.4317, 11.3489, 1.62 ) }
    dend_13 { pt3dadd( -9.97768, 18.9447, 11.5525, 1.99 ) }
    dend_13 { pt3dadd( -9.60092, 19.6623, 11.8301, 2.21 ) }
    dend_13 { pt3dadd( -9.27992, 20.2328, 12.0454, 2.43 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -10.9007, 0.873047, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -10.9724, 0.886941, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -12.1361, 1.13214, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -13.2035, 1.39204, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -14.4722, 1.74256, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -15.8044, 2.15877, -3.98898, 1.84 ) }
    dend_0 { pt3dadd( -16.7465, 2.49833, -3.98898, 1.92 ) }
    dend_0 { pt3dadd( -17.6434, 2.86619, -4.01255, 2.14 ) }
    dend_0 { pt3dadd( -18.6962, 3.37328, -4.06779, 2.14 ) }
    dend_0 { pt3dadd( -19.6145, 3.89812, -4.15014, 2.14 ) }
    dend_0 { pt3dadd( -20.3794, 4.41391, -4.27611, 2.14 ) }
    dend_0 { pt3dadd( -21.5173, 5.29216, -4.54056, 2.14 ) }
    dend_0 { pt3dadd( -22.4326, 6.07526, -4.86485, 2.14 ) }
    dend_0 { pt3dadd( -22.9726, 6.56511, -5.08921, 2.21 ) }
    dend_0 { pt3dadd( -23.5813, 7.14604, -5.39042, 1.99 ) }
    dend_0 { pt3dadd( -24.3297, 7.89659, -5.83039, 1.99 ) }
    dend_0 { pt3dadd( -24.9714, 8.56467, -6.2769, 2.14 ) }
    dend_0 { pt3dadd( -25.965, 9.66791, -7.11937, 2.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 26.063, 3.65858, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 40.8915, 5.92002, 2.65033, 3.17 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 86/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 8.66956, -22.5681, 6.96597, 1.25 ) }
    dend_62 { pt3dadd( 9.2817, -24.125, 6.81021, 1.25 ) }
    dend_62 { pt3dadd( 9.37656, -26.22, 6.58914, 1.03 ) }
    dend_62 { pt3dadd( 8.93419, -27.9541, 6.41283, 0.66 ) }
    dend_62 { pt3dadd( 8.50584, -29.2158, 6.29854, 0.96 ) }
    dend_62 { pt3dadd( 8.10473, -30.5289, 6.19496, 1.18 ) }
    dend_62 { pt3dadd( 7.65864, -32.4169, 6.06378, 1.18 ) }
    dend_62 { pt3dadd( 7.3803, -33.6138, 5.95788, 1.47 ) }
    dend_62 { pt3dadd( 6.94834, -35.5235, 5.82655, 0.81 ) }
    dend_62 { pt3dadd( 6.80811, -36.8025, 5.78252, 0.81 ) }
    dend_62 { pt3dadd( 7.11391, -38.3652, 5.74774, 0.96 ) }
    dend_62 { pt3dadd( 7.7582, -39.6407, 5.76608, 0.88 ) }
    dend_62 { pt3dadd( 8.62951, -41.0018, 5.86091, 1.33 ) }
    dend_62 { pt3dadd( 9.15571, -41.8079, 5.95008, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_62 { pt3dadd( 9.73659, -42.7323, 6.0822, 1.33 ) }
    dend_62 { pt3dadd( 10.2352, -43.7249, 6.24599, 0.81 ) }
    dend_62 { pt3dadd( 10.8225, -45.5344, 6.54953, 0.66 ) }
    dend_62 { pt3dadd( 11.1825, -47.3772, 6.82573, 0.96 ) }
    dend_62 { pt3dadd( 11.3127, -48.5932, 6.96572, 1.4 ) }
    dend_62 { pt3dadd( 11.3724, -49.5882, 7.04527, 1.4 ) }
    dend_62 { pt3dadd( 11.4077, -50.5954, 7.14203, 1.4 ) }
    dend_62 { pt3dadd( 11.4021, -52.326, 7.38382, 0.96 ) }
    dend_62 { pt3dadd( 11.3855, -53.1441, 7.5548, 0.81 ) }
    dend_62 { pt3dadd( 11.3513, -54.6551, 8.05566, 0.81 ) }
    dend_62 { pt3dadd( 11.3185, -55.7598, 8.51493, 0.74 ) }
    dend_62 { pt3dadd( 11.2486, -58.0114, 9.61878, 0.74 ) }
    dend_62 { pt3dadd( 11.2143, -59.7206, 10.4702, 0.88 ) }
    dend_62 { pt3dadd( 11.2236, -61.1233, 11.1413, 0.88 ) }
    dend_62 { pt3dadd( 11.3267, -62.6981, 11.7673, 1.47 ) }
    dend_62 { pt3dadd( 11.5734, -64.1758, 12.1074, 0.81 ) }
    dend_62 { pt3dadd( 12.0717, -65.904, 12.1182, 0.59 ) }
    dend_62 { pt3dadd( 12.786, -67.8325, 11.8398, 0.88 ) }
    dend_62 { pt3dadd( 13.3294, -69.2087, 11.6076, 0.88 ) }
    dend_62 { pt3dadd( 13.9226, -70.8543, 11.3595, 0.66 ) }
    dend_62 { pt3dadd( 14.4773, -72.6684, 11.17, 0.59 ) }
    dend_62 { pt3dadd( 14.8075, -74.1955, 11.1605, 0.59 ) }
    dend_62 { pt3dadd( 15.0099, -75.8613, 11.326, 0.59 ) }
    dend_62 { pt3dadd( 15.1131, -77.4838, 11.6842, 0.88 ) }
    dend_62 { pt3dadd( 15.1211, -79.3141, 12.2625, 0.66 ) }
    dend_62 { pt3dadd( 15.0701, -80.7724, 12.8178, 1.03 ) }
    dend_62 { pt3dadd( 14.9469, -82.6419, 13.6021, 1.25 ) }
    dend_62 { pt3dadd( 14.7937, -84.4969, 14.3854, 1.25 ) }
    dend_62 { pt3dadd( 14.7059, -85.712, 14.8583, 1.84 ) }
    dend_62 { pt3dadd( 14.6689, -86.8902, 15.2933, 2.28 ) }
    dend_62 { pt3dadd( 14.6725, -87.9156, 15.7476, 1.69 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 31/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 8.66956, -22.5681, 6.96597, 0.74 ) }
    dend_57 { pt3dadd( 7.94997, -25.1352, 9.74764, 0.74 ) }
    dend_57 { pt3dadd( 7.90567, -25.6714, 10.5793, 0.74 ) }
    dend_57 { pt3dadd( 7.88886, -26.1326, 11.3856, 0.74 ) }
    dend_57 { pt3dadd( 7.85199, -26.8738, 12.6459, 1.11 ) }
    dend_57 { pt3dadd( 7.84004, -27.2538, 13.2302, 1.11 ) }
    dend_57 { pt3dadd( 7.84534, -28.2173, 14.5085, 0.66 ) }
    dend_57 { pt3dadd( 8.03291, -30.1679, 16.6969, 1.4 ) }
    dend_57 { pt3dadd( 8.08687, -31.0078, 17.6134, 0.96 ) }
    dend_57 { pt3dadd( 8.07731, -31.7091, 18.3208, 1.18 ) }
    dend_57 { pt3dadd( 7.98628, -32.674, 19.1343, 0.88 ) }
    dend_57 { pt3dadd( 7.74832, -33.9932, 20.0114, 0.66 ) }
    dend_57 { pt3dadd( 7.36276, -35.4895, 20.6961, 0.66 ) }
    dend_57 { pt3dadd( 7.10558, -36.382, 20.9926, 0.59 ) }
    dend_57 { pt3dadd( 6.71096, -37.7015, 21.4104, 0.74 ) }
    dend_57 { pt3dadd( 6.42026, -38.5431, 21.7004, 1.03 ) }
    dend_57 { pt3dadd( 6.05454, -39.3438, 22.0015, 1.18 ) }
    dend_57 { pt3dadd( 5.46671, -40.3599, 22.373, 1.4 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 49/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -14.4433, -11.23, -8.38713, 0.81 ) }
    dend_53 { pt3dadd( -15.6182, -11.7572, -8.39186, 0.81 ) }
    dend_53 { pt3dadd( -16.36, -12.0773, -8.28686, 0.88 ) }
    dend_53 { pt3dadd( -17.0834, -12.4104, -8.1152, 1.03 ) }
    dend_53 { pt3dadd( -17.6762, -12.7196, -7.92827, 1.03 ) }
    dend_53 { pt3dadd( -18.2573, -13.08, -7.69328, 0.52 ) }
    dend_53 { pt3dadd( -18.7974, -13.4904, -7.37632, 0.52 ) }
    dend_53 { pt3dadd( -19.3485, -14.0497, -6.80639, 0.74 ) }
    dend_53 { pt3dadd( -19.5302, -14.2979, -6.54202, 0.96 ) }
    dend_53 { pt3dadd( -19.7116, -14.6026, -6.20974, 0.59 ) }
    dend_53 { pt3dadd( -19.9291, -15.0059, -5.7905, 0.44 ) }
    dend_53 { pt3dadd( -20.3318, -15.8087, -5.09403, 0.44 ) }
    dend_53 { pt3dadd( -20.521, -16.1386, -4.81914, 0.81 ) }
    dend_53 { pt3dadd( -20.8015, -16.5042, -4.51262, 0.96 ) }
    dend_53 { pt3dadd( -21.2535, -16.9674, -4.09119, 1.03 ) }
    dend_53 { pt3dadd( -21.571, -17.2635, -3.8205, 0.96 ) }
    dend_53 { pt3dadd( -22.0023, -17.6777, -3.46737, 0.37 ) }
    dend_53 { pt3dadd( -22.7233, -18.4751, -2.83423, 0.37 ) }
    dend_53 { pt3dadd( -23.0548, -18.909, -2.49104, 0.29 ) }
    dend_53 { pt3dadd( -23.3077, -19.3293, -2.18222, 0.37 ) }
    dend_53 { pt3dadd( -23.6202, -19.9393, -1.7798, 0.37 ) }
    dend_53 { pt3dadd( -23.908, -20.5772, -1.38406, 0.81 ) }
    dend_53 { pt3dadd( -24.1708, -21.2015, -1.03187, 1.25 ) }
    dend_53 { pt3dadd( -24.2492, -21.3942, -0.944949, 1.55 ) }
    dend_53 { pt3dadd( -24.5976, -22.1348, -0.630253, 0.37 ) }
    dend_53 { pt3dadd( -24.8815, -22.5372, -0.481172, 0.37 ) }
    dend_53 { pt3dadd( -25.0816, -22.7106, -0.429205, 0.44 ) }
    dend_53 { pt3dadd( -25.5912, -23.0451, -0.360883, 0.59 ) }
    dend_53 { pt3dadd( -25.92, -23.2457, -0.339684, 0.66 ) }
    dend_53 { pt3dadd( -26.3261, -23.4849, -0.320199, 0.37 ) }
    dend_53 { pt3dadd( -26.7918, -23.7588, -0.303723, 0.59 ) }
    dend_53 { pt3dadd( -27.2771, -24.0933, -0.298091, 0.88 ) }
    dend_53 { pt3dadd( -27.5536, -24.3116, -0.301929, 1.03 ) }
    dend_53 { pt3dadd( -28.0628, -24.7659, -0.252065, 0.37 ) }
    dend_53 { pt3dadd( -28.2316, -24.9193, -0.216305, 0.37 ) }
    dend_53 { pt3dadd( -28.5507, -25.194, -0.124643, 0.37 ) }
    dend_53 { pt3dadd( -28.978, -25.5372, 0.0199113, 0.66 ) }
    dend_53 { pt3dadd( -29.3036, -25.771, 0.132435, 0.88 ) }
    dend_53 { pt3dadd( -30.4078, -26.4824, 0.478568, 0.29 ) }
    dend_53 { pt3dadd( -30.8764, -26.7764, 0.613075, 0.29 ) }
    dend_53 { pt3dadd( -31.3359, -27.0946, 0.742322, 0.96 ) }
    dend_53 { pt3dadd( -31.5802, -27.2819, 0.814389, 1.33 ) }
    dend_53 { pt3dadd( -32.0277, -27.6824, 0.954604, 1.11 ) }
    dend_53 { pt3dadd( -32.5631, -28.2118, 1.16975, 0.59 ) }
    dend_53 { pt3dadd( -33.0283, -28.7342, 1.31974, 0.37 ) }
    dend_53 { pt3dadd( -33.4385, -29.1657, 1.60829, 0.66 ) }
    dend_53 { pt3dadd( -33.7068, -29.3929, 1.86238, 0.52 ) }
    dend_53 { pt3dadd( -34.0545, -29.6198, 2.24474, 0.29 ) }
    dend_53 { pt3dadd( -34.8929, -30.0617, 3.2441, 0.29 ) }
    dend_53 { pt3dadd( -35.5564, -30.3176, 4.06036, 0.81 ) }
    dend_53 { pt3dadd( -37.201, -30.6329, 6.08102, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -37.5936, -30.6455, 6.54009, 0.29 ) }
    dend_53 { pt3dadd( -37.8057, -30.6286, 6.77394, 0.29 ) }
    dend_53 { pt3dadd( -38.2701, -30.5301, 7.27946, 0.66 ) }
    dend_53 { pt3dadd( -38.4824, -30.4601, 7.52181, 0.66 ) }
    dend_53 { pt3dadd( -43.1347, -34.9415, 11.322, 0.66 ) }
    dend_53 { pt3dadd( -48.1122, -39.3595, 14.7677, 0.66 ) }
    dend_53 { pt3dadd( -53.2429, -43.6917, 18.0958, 0.66 ) }
    dend_53 { pt3dadd( -57.8635, -48.451, 21.5839, 0.66 ) }
    dend_53 { pt3dadd( -61.6621, -52.4375, 26.6678, 0.66 ) }
    dend_53 { pt3dadd( -64.6777, -56.7983, 31.9647, 0.66 ) }
    dend_53 { pt3dadd( -67.9989, -60.3783, 37.6497, 0.66 ) }
    dend_53 { pt3dadd( -69.9652, -64.775, 43.3917, 0.66 ) }
    dend_53 { pt3dadd( -71.039, -68.9929, 49.4929, 0.66 ) }
    dend_53 { pt3dadd( -70.8006, -73.6544, 55.3564, 0.66 ) }
    dend_53 { pt3dadd( -70.1147, -78.7008, 60.8548, 0.66 ) }
    dend_53 { pt3dadd( -69.6791, -83.6465, 66.4689, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 16/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -14.4433, -11.23, -8.38713, 1.03 ) }
    dend_52 { pt3dadd( -13.9404, -11.7961, -8.95516, 1.03 ) }
    dend_52 { pt3dadd( -13.0353, -12.6415, -9.73866, 0.81 ) }
    dend_52 { pt3dadd( -12.4017, -13.2547, -10.2565, 1.03 ) }
    dend_52 { pt3dadd( -11.7086, -13.9996, -10.8146, 0.88 ) }
    dend_52 { pt3dadd( -11.2038, -14.6055, -11.2344, 1.11 ) }
    dend_52 { pt3dadd( -10.8104, -15.1551, -11.5913, 0.74 ) }
    dend_52 { pt3dadd( -10.4242, -15.8072, -11.942, 0.52 ) }
    dend_52 { pt3dadd( -10.0771, -16.7523, -12.3691, 0.88 ) }
    dend_52 { pt3dadd( -9.99948, -17.4497, -12.6892, 1.47 ) }
    dend_52 { pt3dadd( -10.0306, -17.9366, -12.8903, 1.25 ) }
    dend_52 { pt3dadd( -10.1399, -18.73, -13.1818, 1.25 ) }
    dend_52 { pt3dadd( -10.251, -19.377, -13.3945, 0.81 ) }
    dend_52 { pt3dadd( -10.4311, -20.4391, -13.6747, 0.66 ) }
    dend_52 { pt3dadd( -10.5314, -21.4373, -13.8606, 0.66 ) }
    dend_52 { pt3dadd( -10.5656, -22.644, -14.019, 0.96 ) }
    dend_52 { pt3dadd( -10.5394, -23.2714, -14.0631, 1.11 ) }
    dend_52 { pt3dadd( -10.4795, -23.8622, -14.0771, 1.11 ) }
    dend_52 { pt3dadd( -10.3672, -24.692, -14.0679, 0.74 ) }
    dend_52 { pt3dadd( -10.2369, -25.5592, -14.0346, 0.52 ) }
    dend_52 { pt3dadd( -10.1572, -26.2325, -14.0124, 0.74 ) }
    dend_52 { pt3dadd( -10.1443, -26.7202, -14.0238, 1.11 ) }
    dend_52 { pt3dadd( -10.2299, -27.4334, -14.0698, 0.96 ) }
    dend_52 { pt3dadd( -10.4699, -28.1581, -14.135, 0.74 ) }
    dend_52 { pt3dadd( -10.7006, -28.5969, -14.1748, 0.74 ) }
    dend_52 { pt3dadd( -10.9318, -28.9795, -14.1905, 0.74 ) }
    dend_52 { pt3dadd( -11.2475, -29.5216, -14.1906, 0.59 ) }
    dend_52 { pt3dadd( -11.6124, -30.2122, -14.1726, 0.52 ) }
    dend_52 { pt3dadd( -11.9349, -30.968, -14.1342, 0.52 ) }
    dend_52 { pt3dadd( -12.1794, -31.7465, -14.095, 0.74 ) }
    dend_52 { pt3dadd( -12.3783, -32.8102, -14.0579, 0.88 ) }
    dend_52 { pt3dadd( -12.4197, -33.4488, -14.0473, 1.18 ) }
    dend_52 { pt3dadd( -12.3954, -33.9342, -14.0614, 1.4 ) }
    dend_52 { pt3dadd( -12.3169, -34.5732, -14.1063, 1.62 ) }
    dend_52 { pt3dadd( -12.2607, -34.9696, -14.1508, 1.77 ) }
    dend_52 { pt3dadd( -12.2017, -35.5076, -14.2382, 1.4 ) }
    dend_52 { pt3dadd( -12.1713, -36.1636, -14.3641, 0.66 ) }
    dend_52 { pt3dadd( -12.2023, -36.8997, -14.5137, 0.44 ) }
    dend_52 { pt3dadd( -12.2986, -37.4994, -14.6359, 0.81 ) }
    dend_52 { pt3dadd( -12.4147, -37.9095, -14.7381, 1.25 ) }
    dend_52 { pt3dadd( -12.493, -38.1417, -14.8185, 1.4 ) }
    dend_52 { pt3dadd( -12.576, -38.3538, -14.9196, 1.4 ) }
    dend_52 { pt3dadd( -12.7703, -38.803, -15.1621, 0.88 ) }
    dend_52 { pt3dadd( -13.0872, -39.5153, -15.5738, 0.59 ) }
    dend_52 { pt3dadd( -13.3899, -40.2186, -16.0042, 0.59 ) }
    dend_52 { pt3dadd( -13.7634, -41.1033, -16.5496, 0.88 ) }
    dend_52 { pt3dadd( -14.099, -41.9314, -17.0621, 0.52 ) }
    dend_52 { pt3dadd( -14.3322, -42.5529, -17.4607, 0.52 ) }
    dend_52 { pt3dadd( -14.4331, -42.885, -17.6858, 1.11 ) }
    dend_52 { pt3dadd( -14.513, -43.2708, -17.9546, 1.55 ) }
    dend_52 { pt3dadd( -14.5429, -43.6482, -18.1921, 1.77 ) }
    dend_52 { pt3dadd( -14.5211, -44.0453, -18.4161, 1.4 ) }
    dend_52 { pt3dadd( -14.3653, -44.8309, -18.8325, 0.66 ) }
    dend_52 { pt3dadd( -14.1506, -45.559, -19.2129, 0.44 ) }
    dend_52 { pt3dadd( -13.9288, -46.1785, -19.5152, 0.44 ) }
    dend_52 { pt3dadd( -13.6407, -46.8872, -19.832, 0.44 ) }
    dend_52 { pt3dadd( -13.5101, -47.201, -19.954, 0.88 ) }
    dend_52 { pt3dadd( -13.3984, -47.4793, -20.0319, 1.25 ) }
    dend_52 { pt3dadd( -13.2785, -47.812, -20.0907, 1.55 ) }
    dend_52 { pt3dadd( -13.2152, -48.062, -20.1203, 1.55 ) }
    dend_52 { pt3dadd( -13.1375, -48.5955, -20.173, 1.25 ) }
    dend_52 { pt3dadd( -13.1215, -49.5092, -20.2354, 0.59 ) }
    dend_52 { pt3dadd( -13.2067, -50.2785, -20.2951, 0.59 ) }
    dend_52 { pt3dadd( -13.2946, -50.6745, -20.3075, 0.96 ) }
    dend_52 { pt3dadd( -13.47, -51.2204, -20.3013, 0.96 ) }
    dend_52 { pt3dadd( -13.6884, -51.7465, -20.2712, 0.81 ) }
    dend_52 { pt3dadd( -14.1546, -52.6662, -20.1712, 0.37 ) }
    dend_52 { pt3dadd( -14.6484, -53.4753, -20.0478, 0.37 ) }
    dend_52 { pt3dadd( -15.1526, -54.2339, -19.9118, 1.18 ) }
    dend_52 { pt3dadd( -15.3363, -54.505, -19.8449, 1.62 ) }
    dend_52 { pt3dadd( -15.5355, -54.7839, -19.7544, 1.62 ) }
    dend_52 { pt3dadd( -15.8654, -55.2349, -19.5604, 1.33 ) }
    dend_52 { pt3dadd( -16.3853, -55.9289, -19.1836, 0.44 ) }
    dend_52 { pt3dadd( -16.85, -56.5318, -18.8039, 0.44 ) }
    dend_52 { pt3dadd( -17.2172, -57.0018, -18.5132, 0.66 ) }
    dend_52 { pt3dadd( -17.6514, -57.5648, -18.1683, 0.66 ) }
    dend_52 { pt3dadd( -18.0762, -58.1329, -17.836, 0.44 ) }
    dend_52 { pt3dadd( -18.3356, -58.4976, -17.6393, 0.81 ) }
    dend_52 { pt3dadd( -18.5336, -58.7894, -17.5058, 1.25 ) }
    dend_52 { pt3dadd( -18.7703, -59.1438, -17.3703, 1.55 ) }
    dend_52 { pt3dadd( -19.0229, -59.5315, -17.2546, 1.25 ) }
    dend_52 { pt3dadd( -19.3152, -60.0014, -17.1403, 0.52 ) }
    dend_52 { pt3dadd( -19.6074, -60.4706, -17.0501, 0.37 ) }
    dend_52 { pt3dadd( -19.8951, -60.9753, -16.9205, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_52 { pt3dadd( -20.2606, -61.6655, -16.6726, 0.81 ) }
    dend_52 { pt3dadd( -20.4381, -62.0312, -16.4938, 1.25 ) }
    dend_52 { pt3dadd( -20.596, -62.4244, -16.2406, 0.81 ) }
    dend_52 { pt3dadd( -20.7787, -62.9869, -15.8238, 0.37 ) }
    dend_52 { pt3dadd( -21.0012, -63.8666, -15.1255, 0.37 ) }
    dend_52 { pt3dadd( -21.0824, -64.2477, -14.8168, 0.74 ) }
    dend_52 { pt3dadd( -21.1886, -64.7623, -14.4147, 0.81 ) }
    dend_52 { pt3dadd( -21.3442, -65.4429, -13.902, 0.29 ) }
    dend_52 { pt3dadd( -21.4412, -65.8559, -13.6186, 0.88 ) }
    dend_52 { pt3dadd( -21.4899, -66.0807, -13.4997, 1.18 ) }
    dend_52 { pt3dadd( -21.5824, -66.519, -13.3812, 1.18 ) }
    dend_52 { pt3dadd( -21.6811, -66.9856, -13.3309, 0.81 ) }
    dend_52 { pt3dadd( -21.8407, -67.7049, -13.3411, 0.29 ) }
    dend_52 { pt3dadd( -21.9811, -68.3059, -13.3913, 0.29 ) }
    dend_52 { pt3dadd( -22.0828, -68.8092, -13.4348, 0.29 ) }
    dend_52 { pt3dadd( -22.1375, -69.1516, -13.4772, 0.66 ) }
    dend_52 { pt3dadd( -22.1866, -69.5793, -13.5406, 0.96 ) }
    dend_52 { pt3dadd( -22.2338, -70.0505, -13.6354, 0.96 ) }
    dend_52 { pt3dadd( -22.2907, -70.5692, -13.7605, 0.52 ) }
    dend_52 { pt3dadd( -22.3989, -71.3079, -13.9542, 0.37 ) }
    dend_52 { pt3dadd( -22.48, -71.8063, -14.1127, 0.74 ) }
    dend_52 { pt3dadd( -22.5749, -72.3415, -14.3072, 0.44 ) }
    dend_52 { pt3dadd( -22.6844, -72.8664, -14.5171, 1.11 ) }
    dend_52 { pt3dadd( -22.7693, -73.1853, -14.6521, 1.11 ) }
    dend_52 { pt3dadd( -22.9085, -73.5536, -14.8065, 0.81 ) }
    dend_52 { pt3dadd( -23.2784, -74.3773, -15.1176, 0.37 ) }
    dend_52 { pt3dadd( -23.5165, -74.8428, -15.2439, 0.66 ) }
    dend_52 { pt3dadd( -23.6397, -75.0602, -15.2872, 0.96 ) }
    dend_52 { pt3dadd( -23.8397, -75.4172, -15.2991, 0.96 ) }
    dend_52 { pt3dadd( -24.1586, -76.0805, -15.0966, 0.29 ) }
    dend_52 { pt3dadd( -24.271, -76.5033, -14.6377, 0.29 ) }
    dend_52 { pt3dadd( -24.2982, -76.826, -14.1525, 0.96 ) }
    dend_52 { pt3dadd( -24.2856, -76.9836, -13.8765, 1.25 ) }
    dend_52 { pt3dadd( -24.2223, -77.4487, -13.0054, 0.44 ) }
    dend_52 { pt3dadd( -24.0465, -78.2998, -11.2779, 0.81 ) }
    dend_52 { pt3dadd( -23.6903, -79.5394, -8.5121, 0.22 ) }
    dend_52 { pt3dadd( -23.562, -79.9142, -7.59559, 1.18 ) }
    dend_52 { pt3dadd( -23.4024, -80.2804, -6.64457, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -72.6065, -151.723, 12.2908, 0.29 ) }
    dend_40 { pt3dadd( -71.2035, -152.228, 12.7712, 0.29 ) }
    dend_40 { pt3dadd( -70.1435, -152.609, 13.1342, 0.29 ) }
    dend_40 { pt3dadd( -68.8613, -153.07, 13.5732, 0.29 ) }
    dend_40 { pt3dadd( -67.8605, -153.43, 13.9159, 0.15 ) }
    dend_40 { pt3dadd( -67.0768, -153.712, 14.1843, 0.29 ) }
    dend_40 { pt3dadd( -66.6446, -153.868, 14.3323, 0.29 ) }
    dend_40 { pt3dadd( -58.4932, -157.743, 16.2322, 0.29 ) }
    dend_40 { pt3dadd( -51.2828, -162.819, 18.9388, 0.29 ) }
    dend_40 { pt3dadd( -43.8722, -168.034, 20.6597, 0.29 ) }
    dend_40 { pt3dadd( -37.2793, -173.593, 23.9301, 0.29 ) }
    dend_40 { pt3dadd( -30.9349, -179.924, 26.1086, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 50/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -72.6065, -151.723, 12.2908, 0.29 ) }
    dend_33 { pt3dadd( -73.4033, -152.468, 12.3165, 0.29 ) }
    dend_33 { pt3dadd( -74.2157, -153.208, 12.3386, 0.29 ) }
    dend_33 { pt3dadd( -75.0378, -153.958, 12.3609, 0.29 ) }
    dend_33 { pt3dadd( -76.0228, -154.856, 12.3877, 0.29 ) }
    dend_33 { pt3dadd( -76.5771, -155.361, 12.4028, 0.29 ) }
    dend_33 { pt3dadd( -77.1586, -155.891, 12.4186, 0.81 ) }
    dend_33 { pt3dadd( -77.5479, -156.196, 12.413, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_13 (entry count 58/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -9.27992, 20.2328, 12.0454, 0.66 ) }
    dend_29 { pt3dadd( -10.8824, 21.243, 12.0857, 0.66 ) }
    dend_29 { pt3dadd( -11.7045, 21.7445, 12.0788, 0.66 ) }
    dend_29 { pt3dadd( -12.4697, 22.2022, 12.0181, 0.59 ) }
    dend_29 { pt3dadd( -13.0861, 22.5713, 11.973, 1.11 ) }
    dend_29 { pt3dadd( -13.5149, 22.8231, 11.9881, 1.4 ) }
    dend_29 { pt3dadd( -13.8172, 23.0085, 12.025, 1.4 ) }
    dend_29 { pt3dadd( -14.3718, 23.3725, 12.1289, 0.66 ) }
    dend_29 { pt3dadd( -14.8286, 23.7578, 12.4221, 0.44 ) }
    dend_29 { pt3dadd( -15.1851, 24.1438, 12.8295, 0.44 ) }
    dend_29 { pt3dadd( -15.8412, 25.0325, 13.8277, 0.74 ) }
    dend_29 { pt3dadd( -16.2183, 25.6044, 14.4356, 0.52 ) }
    dend_29 { pt3dadd( -16.4521, 25.9528, 14.7589, 0.44 ) }
    dend_29 { pt3dadd( -16.736, 26.3687, 15.0939, 0.74 ) }
    dend_29 { pt3dadd( -17.0889, 26.8148, 15.402, 0.74 ) }
    dend_29 { pt3dadd( -17.3871, 27.1269, 15.5422, 0.74 ) }
    dend_29 { pt3dadd( -17.7845, 27.4557, 15.6637, 0.29 ) }
    dend_29 { pt3dadd( -18.5876, 27.9211, 16.023, 0.29 ) }
    dend_29 { pt3dadd( -18.7407, 27.996, 16.1136, 0.81 ) }
    dend_29 { pt3dadd( -19.224, 28.2225, 16.4479, 0.81 ) }
    dend_29 { pt3dadd( -19.6915, 28.4675, 16.8053, 0.74 ) }
    dend_29 { pt3dadd( -20.3831, 28.8708, 17.3617, 0.81 ) }
    dend_29 { pt3dadd( -21.7388, 29.7621, 18.4967, 1.69 ) }
    dend_29 { pt3dadd( -22.5912, 30.3971, 19.2062, 0.52 ) }
    dend_29 { pt3dadd( -22.9072, 30.658, 19.4716, 0.59 ) }
    dend_29 { pt3dadd( -23.5132, 31.199, 19.9539, 0.59 ) }
    dend_29 { pt3dadd( -23.9244, 31.5741, 20.2591, 0.66 ) }
    dend_29 { pt3dadd( -24.2357, 31.8743, 20.4512, 1.03 ) }
    dend_29 { pt3dadd( -24.5241, 32.1497, 20.5819, 1.03 ) }
    dend_29 { pt3dadd( -25.3608, 32.8202, 20.9353, 0.81 ) }
    dend_29 { pt3dadd( -25.826, 33.1595, 21.1363, 0.59 ) }
    dend_29 { pt3dadd( -26.5035, 33.6357, 21.4249, 0.52 ) }
    dend_29 { pt3dadd( -26.9329, 33.974, 21.608, 0.52 ) }
    dend_29 { pt3dadd( -27.4324, 34.4431, 21.8171, 0.59 ) }
    dend_29 { pt3dadd( -27.7947, 34.8182, 21.9648, 0.88 ) }
    dend_29 { pt3dadd( -28.0921, 35.2137, 22.0613, 1.03 ) }
    dend_29 { pt3dadd( -28.4126, 35.7638, 22.1757, 0.59 ) }
    dend_29 { pt3dadd( -28.6291, 36.2599, 22.244, 0.52 ) }
    dend_29 { pt3dadd( -28.7864, 36.7026, 22.3012, 0.81 ) }
    dend_29 { pt3dadd( -33.1296, 41.8402, 24.9957, 0.81 ) }
    dend_29 { pt3dadd( -37.911, 46.3383, 28.0658, 0.81 ) }
    dend_29 { pt3dadd( -42.4051, 50.7276, 31.6792, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( -46.004, 55.1222, 36.1797, 0.81 ) }
    dend_29 { pt3dadd( -49.6176, 60.0052, 40.1317, 0.81 ) }
    dend_29 { pt3dadd( -53.0421, 64.389, 44.7765, 0.81 ) }
    dend_29 { pt3dadd( -55.5803, 68.8007, 49.9355, 0.81 ) }
    dend_29 { pt3dadd( -57.0698, 72.3895, 56.0528, 0.81 ) }
    dend_29 { pt3dadd( -58.0991, 76.0593, 62.2166, 0.81 ) }
    dend_29 { pt3dadd( -59.7163, 80.0232, 68.0639, 0.81 ) }
    dend_29 { pt3dadd( -61.9192, 83.9946, 73.7116, 0.81 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 8/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -9.27992, 20.2328, 12.0454, 1.11 ) }
    dend_14 { pt3dadd( -9.06509, 21.4634, 11.4453, 1.11 ) }
    dend_14 { pt3dadd( -9.0111, 22.8278, 10.799, 0.81 ) }
    dend_14 { pt3dadd( -9.17891, 24.259, 10.0743, 0.74 ) }
    dend_14 { pt3dadd( -9.35231, 24.9871, 9.70092, 1.11 ) }
    dend_14 { pt3dadd( -9.56054, 25.6489, 9.38271, 1.18 ) }
    dend_14 { pt3dadd( -9.91667, 26.6507, 8.94401, 1.47 ) }
    dend_14 { pt3dadd( -10.2529, 27.375, 8.6424, 1.47 ) }
    dend_14 { pt3dadd( -10.885, 28.6322, 8.16997, 1.18 ) }
    dend_14 { pt3dadd( -11.473, 29.8907, 7.77913, 0.96 ) }
    dend_14 { pt3dadd( -11.9022, 30.9894, 7.48256, 1.03 ) }
    dend_14 { pt3dadd( -12.2413, 32.1371, 7.19876, 1.4 ) }
    dend_14 { pt3dadd( -12.4895, 33.4325, 6.91316, 1.4 ) }
    dend_14 { pt3dadd( -12.5902, 34.9398, 6.60206, 1.03 ) }
    dend_14 { pt3dadd( -12.5101, 36.1914, 6.35456, 1.03 ) }
    dend_14 { pt3dadd( -12.3356, 37.2705, 6.13231, 1.25 ) }
    dend_14 { pt3dadd( -11.9679, 38.8134, 5.73417, 1.11 ) }
    dend_14 { pt3dadd( -11.6455, 39.9504, 5.39762, 1.11 ) }
    dend_14 { pt3dadd( -11.2245, 41.4255, 4.85655, 1.11 ) }
    dend_14 { pt3dadd( -10.7848, 43.0891, 4.10816, 1.11 ) }
    dend_14 { pt3dadd( -10.5505, 44.2198, 3.50455, 1.11 ) }
    dend_14 { pt3dadd( -10.3677, 45.7747, 2.54102, 1.33 ) }
    dend_14 { pt3dadd( -10.4301, 46.6973, 1.8755, 1.03 ) }
    dend_14 { pt3dadd( -10.9039, 48.2098, 0.618067, 1.18 ) }
    dend_14 { pt3dadd( -11.2365, 48.7605, 0.119951, 1.47 ) }
    dend_14 { pt3dadd( -11.7246, 49.3058, -0.365323, 1.47 ) }
    dend_14 { pt3dadd( -12.2556, 49.7731, -0.723783, 1.69 ) }
    dend_14 { pt3dadd( -13.8569, 50.988, -1.35285, 0.88 ) }
    dend_14 { pt3dadd( -14.8586, 51.7273, -1.56573, 1.11 ) }
    dend_14 { pt3dadd( -15.7692, 52.4865, -1.56344, 1.11 ) }
    dend_14 { pt3dadd( -16.7008, 53.4152, -1.4249, 0.96 ) }
    dend_14 { pt3dadd( -17.4908, 54.4354, -1.1839, 0.88 ) }
    dend_14 { pt3dadd( -18.1741, 55.6702, -0.850464, 1.18 ) }
    dend_14 { pt3dadd( -18.6418, 56.9032, -0.482977, 1.47 ) }
    dend_14 { pt3dadd( -19.1263, 58.7815, 0.0635223, 1.4 ) }
    dend_14 { pt3dadd( -19.3427, 60.0809, 0.406414, 0.88 ) }
    dend_14 { pt3dadd( -19.5282, 61.8363, 0.799114, 0.81 ) }
    dend_14 { pt3dadd( -19.6135, 63.5249, 1.13549, 1.69 ) }
    dend_14 { pt3dadd( -19.6109, 64.2551, 1.27541, 1.99 ) }
    dend_14 { pt3dadd( -19.5864, 65.0406, 1.41364, 1.99 ) }
    dend_14 { pt3dadd( -19.5811, 65.6674, 1.49164, 2.21 ) }
    dend_14 { pt3dadd( -19.6035, 66.8355, 1.68604, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 50/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.965, 9.66791, -7.11937, 1.4 ) }
    dend_4 { pt3dadd( -26.0625, 11.0064, -8.57252, 1.4 ) }
    dend_4 { pt3dadd( -26.0362, 11.2905, -9.80598, 1.4 ) }
    dend_4 { pt3dadd( -26.0138, 11.4609, -10.6528, 1.33 ) }
    dend_4 { pt3dadd( -26.017, 11.8584, -12.3461, 1.62 ) }
    dend_4 { pt3dadd( -26.0537, 12.2643, -13.7015, 1.25 ) }
    dend_4 { pt3dadd( -26.2085, 13.2729, -16.4296, 1.03 ) }
    dend_4 { pt3dadd( -26.5737, 14.5428, -19.9328, 1.4 ) }
    dend_4 { pt3dadd( -26.7177, 14.9492, -20.878, 1.4 ) }
    dend_4 { pt3dadd( -26.9416, 15.4761, -21.8506, 1.11 ) }
    dend_4 { pt3dadd( -27.2861, 16.2405, -22.8467, 1.33 ) }
    dend_4 { pt3dadd( -27.6668, 16.9457, -23.552, 1.69 ) }
    dend_4 { pt3dadd( -28.1973, 17.7419, -24.1635, 1.69 ) }
    dend_4 { pt3dadd( -28.6563, 18.3202, -24.5815, 1.69 ) }
    dend_4 { pt3dadd( -29.6427, 19.4236, -25.6567, 0.74 ) }
    dend_4 { pt3dadd( -30.0313, 19.856, -26.1862, 0.74 ) }
    dend_4 { pt3dadd( -30.5162, 20.4037, -27.04, 0.59 ) }
    dend_4 { pt3dadd( -31.182, 21.2699, -28.5523, 1.18 ) }
    dend_4 { pt3dadd( -31.6263, 21.9687, -29.9753, 1.18 ) }
    dend_4 { pt3dadd( -31.9452, 22.6139, -31.3436, 1.18 ) }
    dend_4 { pt3dadd( -32.0976, 23.0857, -32.365, 1.18 ) }
    dend_4 { pt3dadd( -32.2169, 23.7996, -34.038, 0.81 ) }
    dend_4 { pt3dadd( -32.2607, 24.2281, -35.0077, 0.66 ) }
    dend_4 { pt3dadd( -32.3931, 25.3957, -37.4703, 0.66 ) }
    dend_4 { pt3dadd( -32.4527, 25.644, -37.9584, 1.25 ) }
    dend_4 { pt3dadd( -32.8094, 26.4909, -39.4656, 1.47 ) }
    dend_4 { pt3dadd( -33.462, 27.4848, -40.9805, 0.59 ) }
    dend_4 { pt3dadd( -34.2675, 28.5163, -42.154, 1.03 ) }
    dend_4 { pt3dadd( -34.7565, 29.1025, -42.6587, 1.4 ) }
    dend_4 { pt3dadd( -35.213, 29.6549, -42.9981, 1.47 ) }
    dend_4 { pt3dadd( -36.0324, 30.7152, -43.5584, 1.11 ) }
    dend_4 { pt3dadd( -36.9059, 32.0347, -44.0976, 0.81 ) }
    dend_4 { pt3dadd( -37.4883, 33.2332, -44.6048, 0.96 ) }
    dend_4 { pt3dadd( -37.6511, 34.0792, -45.0641, 1.25 ) }
    dend_4 { pt3dadd( -37.6572, 34.7499, -45.4741, 1.55 ) }
    dend_4 { pt3dadd( -37.5889, 35.6165, -46.0316, 1.55 ) }
    dend_4 { pt3dadd( -37.4656, 36.566, -46.6584, 0.96 ) }
    dend_4 { pt3dadd( -37.2933, 37.9706, -47.5903, 0.66 ) }
    dend_4 { pt3dadd( -37.2984, 38.9614, -48.2262, 0.66 ) }
    dend_4 { pt3dadd( -37.4742, 39.6296, -48.5947, 0.74 ) }
    dend_4 { pt3dadd( -38.0713, 40.5991, -49.0731, 1.03 ) }
    dend_4 { pt3dadd( -38.6294, 41.1712, -49.3497, 1.47 ) }
    dend_4 { pt3dadd( -39.0587, 41.5216, -49.5358, 1.77 ) }
    dend_4 { pt3dadd( -39.6055, 41.9137, -49.7715, 1.62 ) }
    dend_4 { pt3dadd( -40.8831, 42.8102, -50.4219, 0.88 ) }
    dend_4 { pt3dadd( -41.7969, 43.5063, -50.981, 0.66 ) }
    dend_4 { pt3dadd( -42.7516, 44.3521, -51.6966, 0.59 ) }
    dend_4 { pt3dadd( -43.5578, 45.2361, -52.4403, 0.81 ) }
    dend_4 { pt3dadd( -43.9865, 45.8708, -52.9414, 0.59 ) }
    dend_4 { pt3dadd( -44.4149, 46.7963, -53.611, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -44.5784, 47.3825, -53.9823, 1.03 ) }
    dend_4 { pt3dadd( -44.6977, 48.0045, -54.3097, 1.03 ) }
    dend_4 { pt3dadd( -44.8072, 48.7626, -54.6123, 0.74 ) }
    dend_4 { pt3dadd( -44.9501, 49.7437, -54.8905, 0.52 ) }
    dend_4 { pt3dadd( -45.0722, 50.446, -55.0417, 0.52 ) }
    dend_4 { pt3dadd( -45.3037, 51.4343, -55.2229, 1.11 ) }
    dend_4 { pt3dadd( -45.545, 52.2181, -55.3597, 1.4 ) }
    dend_4 { pt3dadd( -45.9597, 53.374, -55.5672, 1.4 ) }
    dend_4 { pt3dadd( -46.2034, 54.063, -55.7021, 1.03 ) }
    dend_4 { pt3dadd( -46.3725, 54.6316, -55.8432, 0.74 ) }
    dend_4 { pt3dadd( -46.5699, 55.5904, -56.1657, 0.59 ) }
    dend_4 { pt3dadd( -46.6176, 56.201, -56.4544, 0.52 ) }
    dend_4 { pt3dadd( -46.5924, 56.9457, -56.9108, 0.52 ) }
    dend_4 { pt3dadd( -46.4943, 57.965, -57.6851, 0.52 ) }
    dend_4 { pt3dadd( -46.4017, 58.7314, -58.3109, 0.52 ) }
    dend_4 { pt3dadd( -46.3305, 59.3428, -58.8958, 0.52 ) }
    dend_4 { pt3dadd( -46.307, 59.8951, -59.547, 0.52 ) }
    dend_4 { pt3dadd( -46.3834, 60.2223, -59.9817, 0.52 ) }
    dend_4 { pt3dadd( -46.6174, 60.5392, -60.4528, 0.81 ) }
    dend_4 { pt3dadd( -47.0296, 60.8392, -60.9169, 0.96 ) }
    dend_4 { pt3dadd( -47.8901, 61.2696, -61.5758, 0.96 ) }
    dend_4 { pt3dadd( -48.7218, 61.6246, -62.0728, 0.52 ) }
    dend_4 { pt3dadd( -49.6631, 62.011, -62.5785, 0.81 ) }
    dend_4 { pt3dadd( -50.1322, 62.216, -62.8385, 1.18 ) }
    dend_4 { pt3dadd( -50.6335, 62.4727, -63.1368, 1.18 ) }
    dend_4 { pt3dadd( -51.4542, 63.0419, -63.6829, 0.44 ) }
    dend_4 { pt3dadd( -51.928, 63.5319, -64.0756, 0.44 ) }
    dend_4 { pt3dadd( -52.2549, 64.1115, -64.5214, 0.74 ) }
    dend_4 { pt3dadd( -52.3848, 64.6552, -64.9872, 0.74 ) }
    dend_4 { pt3dadd( -52.4079, 65.1443, -65.4057, 0.44 ) }
    dend_4 { pt3dadd( -52.3578, 65.957, -66.0673, 0.66 ) }
    dend_4 { pt3dadd( -52.2486, 66.8129, -66.7254, 0.96 ) }
    dend_4 { pt3dadd( -52.1598, 67.4769, -67.2219, 0.74 ) }
    dend_4 { pt3dadd( -52.0624, 68.5263, -67.9572, 0.37 ) }
    dend_4 { pt3dadd( -52.0302, 69.3925, -68.5062, 0.37 ) }
    dend_4 { pt3dadd( -52.0705, 70.2416, -68.9935, 0.88 ) }
    dend_4 { pt3dadd( -52.1381, 70.6202, -69.1654, 1.18 ) }
    dend_4 { pt3dadd( -52.3544, 71.1249, -69.3154, 1.18 ) }
    dend_4 { pt3dadd( -52.7147, 71.6165, -69.4338, 1.18 ) }
    dend_4 { pt3dadd( -53.0842, 72.041, -69.5197, 1.11 ) }
    dend_4 { pt3dadd( -53.5283, 72.5338, -69.6277, 0.44 ) }
    dend_4 { pt3dadd( -54.2221, 73.3399, -69.8202, 0.44 ) }
    dend_4 { pt3dadd( -55.3364, 74.7513, -70.1832, 0.44 ) }
    dend_4 { pt3dadd( -56.0778, 75.7683, -70.4864, 0.44 ) }
    dend_4 { pt3dadd( -56.7958, 76.8539, -70.8459, 0.44 ) }
    dend_4 { pt3dadd( -57.2353, 77.6225, -71.1606, 0.44 ) }
    dend_4 { pt3dadd( -57.5817, 78.3791, -71.5206, 1.47 ) }
    dend_4 { pt3dadd( -57.7883, 78.9982, -71.8717, 1.47 ) }
    dend_4 { pt3dadd( -57.9799, 79.8037, -72.3956, 1.18 ) }
    dend_4 { pt3dadd( -58.1724, 80.5597, -73.0143, 0.66 ) }
    dend_4 { pt3dadd( -58.4024, 81.4214, -74.1024, 0.44 ) }
    dend_4 { pt3dadd( -58.4854, 81.8796, -74.8303, 0.59 ) }
    dend_4 { pt3dadd( -58.5302, 82.3923, -75.8729, 0.59 ) }
    dend_4 { pt3dadd( -58.5324, 82.789, -76.8434, 0.74 ) }
    dend_4 { pt3dadd( -58.4968, 83.4071, -78.7857, 1.25 ) }
    dend_4 { pt3dadd( -58.4575, 84.1386, -81.6176, 0.66 ) }
    dend_4 { pt3dadd( -58.4693, 84.4211, -82.9051, 0.66 ) }
    dend_4 { pt3dadd( -58.5122, 84.7932, -84.7999, 1.25 ) }
    dend_4 { pt3dadd( -58.5485, 84.9915, -85.7615, 1.62 ) }
    dend_4 { pt3dadd( -58.7072, 85.7513, -88.837, 1.4 ) }
    dend_4 { pt3dadd( -58.7728, 86.1119, -90.0739, 1.11 ) }
    dend_4 { pt3dadd( -58.8826, 86.6201, -91.623, 1.25 ) }
    dend_4 { pt3dadd( -58.9558, 87.1006, -92.9823, 0.96 ) }
    dend_4 { pt3dadd( -58.9569, 87.547, -93.989, 1.18 ) }
    dend_4 { pt3dadd( -58.9126, 88.1066, -95.0365, 1.4 ) }
    dend_4 { pt3dadd( -58.8405, 88.8545, -96.182, 0.37 ) }
    dend_4 { pt3dadd( -58.8084, 89.4659, -97.1804, 0.37 ) }
    dend_4 { pt3dadd( -58.7938, 89.9989, -98.112, 0.88 ) }
    dend_4 { pt3dadd( -58.8141, 90.4084, -98.9043, 0.88 ) }
    dend_4 { pt3dadd( -58.8513, 90.7866, -99.7403, 0.88 ) }
    dend_4 { pt3dadd( -58.9778, 91.4212, -101.334, 0.37 ) }
    dend_4 { pt3dadd( -59.2367, 92.174, -103.182, 1.03 ) }
    dend_4 { pt3dadd( -59.4136, 92.5111, -104.115, 1.03 ) }
    dend_4 { pt3dadd( -59.5588, 92.6861, -104.728, 1.03 ) }
    dend_4 { pt3dadd( -60.0334, 93.0602, -106.342, 0.29 ) }
    dend_4 { pt3dadd( -60.4984, 93.3736, -107.894, 0.29 ) }
    dend_4 { pt3dadd( -60.9219, 93.6154, -109.28, 0.29 ) }
    dend_4 { pt3dadd( -61.5042, 93.9044, -111.081, 1.25 ) }
    dend_4 { pt3dadd( -62.2643, 94.2185, -113.19, 1.25 ) }
    dend_4 { pt3dadd( -62.8926, 94.44, -114.838, 0.96 ) }
    dend_4 { pt3dadd( -63.7099, 94.751, -116.898, 0.37 ) }
    dend_4 { pt3dadd( -63.9472, 94.8813, -117.559, 0.66 ) }
    dend_4 { pt3dadd( -64.2356, 95.0699, -118.466, 1.03 ) }
    dend_4 { pt3dadd( -64.5031, 95.3647, -119.509, 1.03 ) }
    dend_4 { pt3dadd( -64.9023, 96.1057, -121.627, 0.52 ) }
    dend_4 { pt3dadd( -65.0458, 96.4888, -122.571, 1.03 ) }
    dend_4 { pt3dadd( -65.3466, 96.9893, -123.653, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 87/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -25.965, 9.66791, -7.11937, 0.74 ) }
    dend_1 { pt3dadd( -26.9038, 8.9897, -7.18412, 0.74 ) }
    dend_1 { pt3dadd( -27.8007, 8.24994, -7.26506, 0.74 ) }
    dend_1 { pt3dadd( -28.7137, 7.49683, -7.34746, 1.03 ) }
    dend_1 { pt3dadd( -29.3097, 7.00525, -7.40125, 1.4 ) }
    dend_1 { pt3dadd( -30.1874, 6.28133, -7.48045, 1.84 ) }
    dend_1 { pt3dadd( -30.7549, 5.81326, -7.53167, 2.14 ) }
    dend_1 { pt3dadd( -31.1364, 5.37724, -7.57619, 2.36 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 95/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.8915, 5.92002, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 55.72, 8.18146, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 70.5486, 10.4429, 2.65033, 0.29 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 98/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 14.6725, -87.9156, 15.7476, 0.52 ) }
    dend_66 { pt3dadd( 13.4568, -86.5347, 16.7352, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_66 { pt3dadd( 12.9829, -85.9964, 17.1202, 0.52 ) }
    dend_66 { pt3dadd( 12.3823, -85.3143, 17.608, 1.25 ) }
    dend_66 { pt3dadd( 12.0931, -84.9856, 17.843, 1.4 ) }
    dend_66 { pt3dadd( 11.5531, -84.3724, 18.2816, 0.37 ) }
    dend_66 { pt3dadd( 11.2182, -83.9919, 18.5537, 0.29 ) }
    dend_66 { pt3dadd( 7.053, -78.0526, 21.3941, 0.29 ) }
    dend_66 { pt3dadd( 2.09117, -72.2715, 23.0228, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 7/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 14.6725, -87.9156, 15.7476, 0.66 ) }
    dend_63 { pt3dadd( 15.7079, -89.0579, 15.6604, 0.66 ) }
    dend_63 { pt3dadd( 16.6723, -90.0543, 15.6252, 0.59 ) }
    dend_63 { pt3dadd( 17.8895, -91.3363, 15.6083, 0.59 ) }
    dend_63 { pt3dadd( 18.4518, -91.9613, 15.6197, 0.88 ) }
    dend_63 { pt3dadd( 19.092, -92.7253, 15.6437, 0.88 ) }
    dend_63 { pt3dadd( 19.8676, -93.7579, 15.6395, 0.52 ) }
    dend_63 { pt3dadd( 20.4547, -94.653, 15.6086, 0.52 ) }
    dend_63 { pt3dadd( 20.7482, -95.3036, 15.5967, 1.11 ) }
    dend_63 { pt3dadd( 20.8634, -96.066, 15.559, 1.47 ) }
    dend_63 { pt3dadd( 20.8021, -96.6536, 15.5144, 1.18 ) }
    dend_63 { pt3dadd( 20.3052, -97.9571, 15.389, 0.59 ) }
    dend_63 { pt3dadd( 19.8619, -98.6605, 15.3668, 0.59 ) }
    dend_63 { pt3dadd( 19.2635, -99.4062, 15.4256, 0.37 ) }
    dend_63 { pt3dadd( 18.9404, -99.792, 15.5053, 0.59 ) }
    dend_63 { pt3dadd( 18.5571, -100.282, 15.6571, 0.59 ) }
    dend_63 { pt3dadd( 17.9484, -101.264, 16.0639, 0.44 ) }
    dend_63 { pt3dadd( 17.514, -102.638, 16.748, 0.37 ) }
    dend_63 { pt3dadd( 17.5554, -103.483, 17.1492, 0.66 ) }
    dend_63 { pt3dadd( 17.8311, -104.364, 17.5465, 0.96 ) }
    dend_63 { pt3dadd( 18.2042, -105.13, 17.8874, 0.74 ) }
    dend_63 { pt3dadd( 18.7997, -106.054, 18.271, 0.52 ) }
    dend_63 { pt3dadd( 19.6469, -107.133, 18.6702, 0.81 ) }
    dend_63 { pt3dadd( 20.3312, -107.894, 18.9029, 0.96 ) }
    dend_63 { pt3dadd( 20.8169, -108.413, 19.05, 1.03 ) }
    dend_63 { pt3dadd( 21.569, -109.239, 19.2448, 0.81 ) }
    dend_63 { pt3dadd( 22.2385, -110.004, 19.3844, 0.74 ) }
    dend_63 { pt3dadd( 22.7504, -110.578, 19.4488, 1.11 ) }
    dend_63 { pt3dadd( 23.2672, -111.134, 19.4466, 1.11 ) }
    dend_63 { pt3dadd( 23.9838, -111.89, 19.3646, 0.81 ) }
    dend_63 { pt3dadd( 24.6118, -112.555, 19.2396, 0.52 ) }
    dend_63 { pt3dadd( 25.0741, -113.112, 19.1144, 0.74 ) }
    dend_63 { pt3dadd( 25.5129, -113.758, 19.003, 0.74 ) }
    dend_63 { pt3dadd( 25.9962, -114.646, 18.8965, 0.52 ) }
    dend_63 { pt3dadd( 26.2673, -115.297, 18.8528, 0.81 ) }
    dend_63 { pt3dadd( 26.4707, -115.843, 18.8373, 0.81 ) }
    dend_63 { pt3dadd( 26.9113, -117.048, 18.8997, 0.59 ) }
    dend_63 { pt3dadd( 27.2533, -117.91, 18.9984, 0.81 ) }
    dend_63 { pt3dadd( 27.5636, -118.614, 19.1698, 0.81 ) }
    dend_63 { pt3dadd( 27.9848, -119.462, 19.4757, 0.44 ) }
    dend_63 { pt3dadd( 28.4624, -120.29, 19.8553, 0.81 ) }
    dend_63 { pt3dadd( 29.0742, -121.166, 20.318, 0.66 ) }
    dend_63 { pt3dadd( 29.7735, -121.98, 20.7739, 0.29 ) }
    dend_63 { pt3dadd( 31.0358, -123.319, 21.4602, 0.74 ) }
    dend_63 { pt3dadd( 31.5135, -123.81, 21.6883, 1.25 ) }
    dend_63 { pt3dadd( 31.9334, -124.238, 21.8866, 1.25 ) }
    dend_63 { pt3dadd( 32.8549, -125.253, 22.3108, 0.37 ) }
    dend_63 { pt3dadd( 33.6391, -126.182, 22.5981, 0.37 ) }
    dend_63 { pt3dadd( 34.4891, -127.187, 22.8241, 0.37 ) }
    dend_63 { pt3dadd( 34.962, -127.715, 22.8362, 0.37 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 5.46671, -40.3599, 22.373, 0.44 ) }
    dend_61 { pt3dadd( 7.02831, -40.373, 23.2042, 0.44 ) }
    dend_61 { pt3dadd( 7.78992, -40.3793, 23.6095, 0.29 ) }
    dend_61 { pt3dadd( 8.79055, -40.3877, 24.1421, 0.52 ) }
    dend_61 { pt3dadd( 9.30883, -40.392, 24.4179, 0.74 ) }
    dend_61 { pt3dadd( 9.56503, -40.3941, 24.5543, 0.74 ) }
    dend_61 { pt3dadd( 17.5575, -40.4474, 28.1568, 0.74 ) }
    dend_61 { pt3dadd( 26.0731, -39.9477, 30.1805, 0.74 ) }
    dend_61 { pt3dadd( 34.1803, -40.6068, 33.4516, 0.74 ) }
    dend_61 { pt3dadd( 42.3156, -40.6071, 36.7192, 0.74 ) }
    dend_61 { pt3dadd( 50.3125, -40.9954, 40.2913, 0.74 ) }
    dend_61 { pt3dadd( 58.5412, -42.6326, 42.8346, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 69/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 5.46671, -40.3599, 22.373, 0.44 ) }
    dend_58 { pt3dadd( 5.1152, -41.2448, 23.1169, 0.44 ) }
    dend_58 { pt3dadd( 4.90718, -41.7684, 23.5571, 0.74 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 72/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -69.6791, -83.6465, 66.4689, 0.29 ) }
    dend_55 { pt3dadd( -68.5241, -93.1667, 70.1594, 0.29 ) }
    dend_55 { pt3dadd( -66.7622, -103.116, 72.0293, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 75/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -69.6791, -83.6465, 66.4689, 0.22 ) }
    dend_54 { pt3dadd( -78.7875, -83.8893, 72.3599, 0.29 ) }
    dend_54 { pt3dadd( -88.7974, -84.1558, 76.5384, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_40 (entry count 78/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -30.9349, -179.924, 26.1086, 0.37 ) }
    dend_50 { pt3dadd( -20.8721, -186.849, 27.8878, 0.37 ) }
    dend_50 { pt3dadd( -9.68416, -191.786, 29.5696, 0.37 ) }
    dend_50 { pt3dadd( 1.62676, -196.203, 31.7891, 0.37 ) }
    dend_50 { pt3dadd( 12.2248, -202.529, 32.0008, 0.37 ) }
    dend_50 { pt3dadd( 22.683, -209.045, 31.2672, 0.37 ) }
    dend_50 { pt3dadd( 31.9432, -217.147, 30.28, 0.37 ) }
    dend_50 { pt3dadd( 40.8466, -225.698, 30.2626, 0.37 ) }
    dend_50 { pt3dadd( 48.7946, -234.932, 32.243, 0.37 ) }
    dend_50 { pt3dadd( 56.0931, -244.644, 34.4335, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 88/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -30.9349, -179.924, 26.1086, 0.22 ) }
    dend_41 { pt3dadd( -25.121, -183.827, 28.1845, 0.37 ) }
    dend_41 { pt3dadd( -18.6536, -187.1, 29.084, 0.37 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 91/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -77.5479, -156.196, 12.413, 0.22 ) }
    dend_35 { pt3dadd( -77.3259, -157.268, 12.4543, 0.22 ) }
    dend_35 { pt3dadd( -77.1555, -158.09, 12.4859, 0.22 ) }
    dend_35 { pt3dadd( -77.0246, -158.722, 12.5103, 0.37 ) }
    dend_35 { pt3dadd( -76.8269, -159.676, 12.547, 0.37 ) }
    dend_35 { pt3dadd( -74.7563, -166.979, 14.0785, 0.37 ) }
    dend_35 { pt3dadd( -71.8191, -174.002, 15.4961, 0.37 ) }
    dend_35 { pt3dadd( -69.3742, -181.265, 16.6098, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 99/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -77.5479, -156.196, 12.413, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -78.6994, -157.894, 13.1925, 0.22 ) }
    dend_34 { pt3dadd( -78.7554, -157.959, 13.2257, 0.44 ) }
    dend_34 { pt3dadd( -79.4075, -158.562, 13.5156, 0.15 ) }
    dend_34 { pt3dadd( -79.6378, -158.746, 13.5909, 0.37 ) }
    dend_34 { pt3dadd( -80.3937, -159.324, 13.796, 0.15 ) }
    dend_34 { pt3dadd( -81.347, -160.057, 13.9769, 0.22 ) }
    dend_34 { pt3dadd( -82.1689, -160.64, 14.1289, 0.22 ) }
    dend_34 { pt3dadd( -82.8603, -161.176, 14.4105, 0.66 ) }
    dend_34 { pt3dadd( -83.7232, -161.82, 14.7994, 0.22 ) }
    dend_34 { pt3dadd( -84.0532, -162.069, 14.965, 0.88 ) }
    dend_34 { pt3dadd( -84.769, -162.643, 15.4019, 0.74 ) }
    dend_34 { pt3dadd( -86.1103, -164.023, 16.5093, 1.4 ) }
    dend_34 { pt3dadd( -86.9671, -165.315, 17.8461, 1.18 ) }
    dend_34 { pt3dadd( -93.5595, -172.727, 23.5077, 1.18 ) }
    dend_34 { pt3dadd( -99.1196, -180.547, 29.7033, 1.18 ) }
    dend_34 { pt3dadd( -106.158, -187.484, 35.4289, 1.18 ) }
    dend_34 { pt3dadd( -113.614, -195.109, 39.5165, 1.18 ) }
    dend_34 { pt3dadd( -120.238, -202.832, 44.7072, 1.18 ) }
    dend_34 { pt3dadd( -127.516, -209.584, 50.3544, 1.18 ) }
    dend_34 { pt3dadd( -133.844, -216.761, 56.5899, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -61.9192, 83.9946, 73.7116, 0.37 ) }
    dend_31 { pt3dadd( -65.5668, 88.3812, 77.8567, 0.37 ) }
    dend_31 { pt3dadd( -70.0252, 91.5189, 82.3299, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 23/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -61.9192, 83.9946, 73.7116, 0.29 ) }
    dend_30 { pt3dadd( -68.4234, 92.0232, 81.7111, 0.37 ) }
    dend_30 { pt3dadd( -74.2598, 100.542, 89.7192, 0.37 ) }
    dend_30 { pt3dadd( -80.1831, 107.107, 99.3404, 0.37 ) }
    dend_30 { pt3dadd( -84.9811, 114.982, 108.599, 0.37 ) }
    dend_30 { pt3dadd( -89.8698, 120.52, 119.378, 0.37 ) }
    dend_30 { pt3dadd( -94.579, 126.696, 129.887, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -19.6035, 66.8355, 1.68604, 0.96 ) }
    dend_16 { pt3dadd( -20.1838, 68.646, 1.03556, 0.96 ) }
    dend_16 { pt3dadd( -20.6713, 69.7954, 0.609481, 0.81 ) }
    dend_16 { pt3dadd( -21.1279, 70.6989, 0.298689, 0.81 ) }
    dend_16 { pt3dadd( -21.692, 71.6163, -0.0889992, 1.18 ) }
    dend_16 { pt3dadd( -23.0129, 73.6516, -1.00703, 1.18 ) }
    dend_16 { pt3dadd( -23.3451, 74.1693, -1.24066, 1.18 ) }
    dend_16 { pt3dadd( -23.9125, 74.9506, -1.6273, 0.81 ) }
    dend_16 { pt3dadd( -24.3398, 75.5942, -1.90112, 0.81 ) }
    dend_16 { pt3dadd( -25.1557, 77.2719, -2.34379, 0.66 ) }
    dend_16 { pt3dadd( -25.3816, 78.2309, -2.38559, 0.96 ) }
    dend_16 { pt3dadd( -25.3984, 79.2069, -2.24621, 1.11 ) }
    dend_16 { pt3dadd( -25.2872, 80.2298, -1.99611, 0.81 ) }
    dend_16 { pt3dadd( -24.9614, 81.9624, -1.4776, 0.59 ) }
    dend_16 { pt3dadd( -24.559, 83.7852, -0.923952, 0.81 ) }
    dend_16 { pt3dadd( -24.2022, 85.3177, -0.451773, 1.11 ) }
    dend_16 { pt3dadd( -23.9867, 86.4323, -0.196123, 1.25 ) }
    dend_16 { pt3dadd( -23.7626, 88.1283, 0.0502803, 0.59 ) }
    dend_16 { pt3dadd( -23.7511, 88.9586, 0.0511059, 0.59 ) }
    dend_16 { pt3dadd( -24.1034, 90.4769, -0.326079, 0.59 ) }
    dend_16 { pt3dadd( -24.5801, 91.2932, -0.763384, 0.44 ) }
    dend_16 { pt3dadd( -25.7157, 92.6263, -1.76056, 1.11 ) }
    dend_16 { pt3dadd( -26.1015, 93.0009, -2.09357, 1.4 ) }
    dend_16 { pt3dadd( -27.148, 93.9282, -3.01743, 0.88 ) }
    dend_16 { pt3dadd( -27.963, 94.6557, -3.72069, 0.52 ) }
    dend_16 { pt3dadd( -28.5573, 95.2463, -4.22306, 0.52 ) }
    dend_16 { pt3dadd( -29.1209, 96.0522, -4.82366, 0.74 ) }
    dend_16 { pt3dadd( -29.2757, 96.7178, -5.22308, 1.11 ) }
    dend_16 { pt3dadd( -29.182, 97.5526, -5.67278, 1.33 ) }
    dend_16 { pt3dadd( -29.0032, 98.0465, -5.92023, 1.62 ) }
    dend_16 { pt3dadd( -28.6437, 98.6996, -6.26988, 1.47 ) }
    dend_16 { pt3dadd( -27.8839, 99.7767, -6.88476, 0.96 ) }
    dend_16 { pt3dadd( -27.343, 100.458, -7.30018, 0.81 ) }
    dend_16 { pt3dadd( -26.8044, 101.137, -7.70591, 0.81 ) }
    dend_16 { pt3dadd( -26.1993, 101.947, -8.16059, 0.66 ) }
    dend_16 { pt3dadd( -25.6317, 102.826, -8.63449, 0.59 ) }
    dend_16 { pt3dadd( -25.3441, 103.412, -8.93929, 0.59 ) }
    dend_16 { pt3dadd( -25.0547, 104.271, -9.35816, 0.44 ) }
    dend_16 { pt3dadd( -24.8521, 105.228, -9.78952, 0.81 ) }
    dend_16 { pt3dadd( -24.7445, 106.231, -10.2405, 0.81 ) }
    dend_16 { pt3dadd( -24.6917, 107.383, -10.7607, 1.03 ) }
    dend_16 { pt3dadd( -24.704, 108.538, -11.3762, 1.25 ) }
    dend_16 { pt3dadd( -24.7413, 109.045, -11.7246, 1.25 ) }
    dend_16 { pt3dadd( -24.8353, 109.618, -12.3246, 1.18 ) }
    dend_16 { pt3dadd( -25.001, 110.43, -13.3894, 0.66 ) }
    dend_16 { pt3dadd( -25.0755, 110.856, -13.9474, 0.59 ) }
    dend_16 { pt3dadd( -25.246, 112.08, -15.475, 1.25 ) }
    dend_16 { pt3dadd( -25.3381, 113.126, -16.6542, 1.99 ) }
    dend_16 { pt3dadd( -25.4501, 115.688, -19.0849, 0.59 ) }
    dend_16 { pt3dadd( -25.4449, 116.445, -19.6444, 0.66 ) }
    dend_16 { pt3dadd( -25.3207, 118.675, -20.7408, 0.52 ) }
    dend_16 { pt3dadd( -25.224, 119.62, -21.012, 1.03 ) }
    dend_16 { pt3dadd( -25.0578, 120.782, -21.1488, 1.25 ) }
    dend_16 { pt3dadd( -24.8441, 122.15, -21.1884, 0.74 ) }
    dend_16 { pt3dadd( -24.6965, 123.173, -21.1648, 0.59 ) }
    dend_16 { pt3dadd( -24.628, 124.012, -21.2275, 0.59 ) }
    dend_16 { pt3dadd( -24.5729, 125.156, -21.4711, 0.88 ) }
    dend_16 { pt3dadd( -24.4883, 126.099, -21.7514, 1.11 ) }
    dend_16 { pt3dadd( -24.3679, 126.888, -22.0581, 1.11 ) }
    dend_16 { pt3dadd( -24.152, 127.806, -22.4752, 1.03 ) }
    dend_16 { pt3dadd( -23.7245, 129.043, -23.0992, 0.66 ) }
    dend_16 { pt3dadd( -23.2683, 129.942, -23.6134, 0.66 ) }
    dend_16 { pt3dadd( -22.3957, 131.152, -24.3997, 0.96 ) }
    dend_16 { pt3dadd( -21.7026, 131.912, -25.0047, 1.4 ) }
    dend_16 { pt3dadd( -21.2894, 132.312, -25.3716, 1.4 ) }
    dend_16 { pt3dadd( -20.8261, 132.735, -25.8151, 1.4 ) }
    dend_16 { pt3dadd( -20.1776, 133.356, -26.5591, 0.74 ) }
    dend_16 { pt3dadd( -19.6988, 134.02, -27.4398, 0.37 ) }
    dend_16 { pt3dadd( -19.3478, 134.975, -28.8695, 0.37 ) }
    dend_16 { pt3dadd( -19.2723, 135.41, -29.5895, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( -19.2371, 135.784, -30.2471, 0.96 ) }
    dend_16 { pt3dadd( -19.2205, 136.335, -31.3074, 0.66 ) }
    dend_16 { pt3dadd( -19.2146, 137.129, -32.8936, 0.52 ) }
    dend_16 { pt3dadd( -19.2004, 137.594, -33.7722, 0.37 ) }
    dend_16 { pt3dadd( -19.1223, 138.138, -34.6345, 0.81 ) }
    dend_16 { pt3dadd( -19.048, 138.65, -35.3352, 0.52 ) }
    dend_16 { pt3dadd( -18.9939, 139.528, -36.3264, 0.52 ) }
    dend_16 { pt3dadd( -19.0417, 140.131, -36.923, 0.66 ) }
    dend_16 { pt3dadd( -19.2932, 141.124, -37.7399, 0.66 ) }
    dend_16 { pt3dadd( -19.7053, 141.971, -38.3849, 0.66 ) }
    dend_16 { pt3dadd( -20.328, 142.952, -39.1195, 0.66 ) }
    dend_16 { pt3dadd( -21.0423, 143.967, -39.8915, 0.81 ) }
    dend_16 { pt3dadd( -21.7967, 145.01, -40.7415, 1.03 ) }
    dend_16 { pt3dadd( -22.1743, 145.532, -41.2434, 1.25 ) }
    dend_16 { pt3dadd( -22.7634, 146.416, -42.2362, 0.52 ) }
    dend_16 { pt3dadd( -23.0753, 146.982, -42.9631, 0.37 ) }
    dend_16 { pt3dadd( -23.2328, 147.584, -43.8593, 0.37 ) }
    dend_16 { pt3dadd( -23.2125, 148.422, -45.2829, 1.11 ) }
    dend_16 { pt3dadd( -23.104, 148.932, -46.2854, 1.62 ) }
    dend_16 { pt3dadd( -23.0338, 149.138, -46.7429, 1.69 ) }
    dend_16 { pt3dadd( -22.9074, 149.51, -47.6024, 1.69 ) }
    dend_16 { pt3dadd( -22.7451, 150.48, -49.7253, 0.44 ) }
    dend_16 { pt3dadd( -22.7647, 151.082, -50.9183, 0.96 ) }
    dend_16 { pt3dadd( -22.8726, 151.758, -52.0833, 1.03 ) }
    dend_16 { pt3dadd( -22.9953, 152.254, -52.7657, 0.88 ) }
    dend_16 { pt3dadd( -23.2975, 153.186, -53.8349, 0.44 ) }
    dend_16 { pt3dadd( -23.6431, 154.2, -54.8109, 0.74 ) }
    dend_16 { pt3dadd( -23.867, 154.836, -55.3039, 1.03 ) }
    dend_16 { pt3dadd( -24.0086, 155.434, -55.8076, 1.03 ) }
    dend_16 { pt3dadd( -24.0552, 156.258, -56.6858, 0.59 ) }
    dend_16 { pt3dadd( -23.9099, 156.954, -57.6959, 0.59 ) }
    dend_16 { pt3dadd( -23.6079, 157.51, -58.73, 0.59 ) }
    dend_16 { pt3dadd( -23.3639, 157.862, -59.4676, 0.74 ) }
    dend_16 { pt3dadd( -22.8267, 158.782, -61.3208, 0.74 ) }
    dend_16 { pt3dadd( -22.7065, 159.165, -62.0068, 0.96 ) }
    dend_16 { pt3dadd( -22.6673, 159.687, -62.6454, 1.11 ) }
    dend_16 { pt3dadd( -22.6997, 160.195, -63.014, 1.11 ) }
    dend_16 { pt3dadd( -22.823, 161.231, -63.5162, 0.66 ) }
    dend_16 { pt3dadd( -22.9511, 162.545, -63.9462, 0.52 ) }
    dend_16 { pt3dadd( -22.9864, 163.957, -64.2431, 0.52 ) }
    dend_16 { pt3dadd( -22.9068, 166.241, -64.6426, 1.11 ) }
    dend_16 { pt3dadd( -22.8558, 167.08, -64.768, 1.33 ) }
    dend_16 { pt3dadd( -22.7951, 167.895, -64.8649, 1.33 ) }
    dend_16 { pt3dadd( -22.6963, 169.324, -64.9833, 0.44 ) }
    dend_16 { pt3dadd( -22.6265, 170.467, -65.0883, 0.44 ) }
    dend_16 { pt3dadd( -22.606, 171.443, -65.23, 0.74 ) }
    dend_16 { pt3dadd( -22.653, 172.169, -65.3827, 0.74 ) }
    dend_16 { pt3dadd( -22.7865, 173.335, -65.6191, 0.52 ) }
    dend_16 { pt3dadd( -23.0072, 174.769, -65.8962, 0.44 ) }
    dend_16 { pt3dadd( -23.2999, 176.103, -66.1388, 0.44 ) }
    dend_16 { pt3dadd( -23.6649, 177.456, -66.3859, 1.18 ) }
    dend_16 { pt3dadd( -23.9119, 178.258, -66.5519, 1.18 ) }
    dend_16 { pt3dadd( -24.2627, 179.312, -66.8146, 0.96 ) }
    dend_16 { pt3dadd( -24.6338, 180.346, -67.1271, 0.44 ) }
    dend_16 { pt3dadd( -25.1741, 181.849, -67.7066, 0.37 ) }
    dend_16 { pt3dadd( -25.3789, 182.424, -67.9871, 0.37 ) }
    dend_16 { pt3dadd( -25.7464, 183.626, -68.7044, 0.88 ) }
    dend_16 { pt3dadd( -25.9129, 184.543, -69.2725, 1.18 ) }
    dend_16 { pt3dadd( -25.9158, 185.232, -69.6744, 1.18 ) }
    dend_16 { pt3dadd( -25.6632, 186.631, -70.3405, 0.59 ) }
    dend_16 { pt3dadd( -25.2348, 187.978, -70.8072, 0.52 ) }
    dend_16 { pt3dadd( -24.8798, 188.923, -71.0301, 0.44 ) }
    dend_16 { pt3dadd( -23.9708, 190.984, -71.2537, 0.74 ) }
    dend_16 { pt3dadd( -23.3949, 192.212, -71.2869, 1.25 ) }
    dend_16 { pt3dadd( -22.8738, 193.315, -71.2618, 1.55 ) }
    dend_16 { pt3dadd( -22.4354, 194.288, -71.1834, 1.62 ) }
    dend_16 { pt3dadd( -21.8952, 195.528, -71.0399, 0.81 ) }
    dend_16 { pt3dadd( -21.2926, 196.973, -70.8855, 0.37 ) }
    dend_16 { pt3dadd( -20.8354, 198.133, -70.8127, 0.37 ) }
    dend_16 { pt3dadd( -20.5332, 199.005, -70.7525, 0.37 ) }
    dend_16 { pt3dadd( -20.269, 200.03, -70.6617, 0.37 ) }
    dend_16 { pt3dadd( -20.1889, 200.66, -70.5982, 0.37 ) }
    dend_16 { pt3dadd( -20.1885, 201.515, -70.5548, 0.66 ) }
    dend_16 { pt3dadd( -20.1997, 202.407, -70.509, 0.96 ) }
    dend_16 { pt3dadd( -20.1432, 203.122, -70.4242, 1.18 ) }
    dend_16 { pt3dadd( -19.9333, 204.276, -70.2762, 0.52 ) }
    dend_16 { pt3dadd( -19.5648, 205.666, -70.1419, 0.66 ) }
    dend_16 { pt3dadd( -19.2011, 206.891, -70.0564, 0.59 ) }
    dend_16 { pt3dadd( -18.4208, 209.328, -69.9135, 0.52 ) }
    dend_16 { pt3dadd( -17.8673, 210.817, -69.8582, 0.96 ) }
    dend_16 { pt3dadd( -17.4663, 211.747, -69.8438, 0.96 ) }
    dend_16 { pt3dadd( -16.9024, 212.832, -69.8889, 0.66 ) }
    dend_16 { pt3dadd( -16.086, 214.22, -70.0108, 0.44 ) }
    dend_16 { pt3dadd( -15.4481, 215.285, -70.1736, 0.44 ) }
    dend_16 { pt3dadd( -14.8678, 216.299, -70.4541, 0.52 ) }
    dend_16 { pt3dadd( -14.3529, 217.207, -70.731, 0.52 ) }
    dend_16 { pt3dadd( -13.3972, 218.823, -71.1831, 0.81 ) }
    dend_16 { pt3dadd( -12.7315, 219.99, -71.4629, 0.52 ) }
    dend_16 { pt3dadd( -12.13, 221.231, -71.6524, 0.52 ) }
    dend_16 { pt3dadd( -11.7062, 222.377, -71.7413, 1.47 ) }
    dend_16 { pt3dadd( -11.5023, 223.071, -71.7629, 1.77 ) }
    dend_16 { pt3dadd( -11.357, 223.638, -71.7769, 1.77 ) }
    dend_16 { pt3dadd( -11.0779, 224.811, -71.8153, 0.66 ) }
    dend_16 { pt3dadd( -10.6723, 226.297, -71.9686, 0.52 ) }
    dend_16 { pt3dadd( -10.2314, 227.579, -72.179, 0.52 ) }
    dend_16 { pt3dadd( -9.73913, 228.832, -72.4618, 0.52 ) }
    dend_16 { pt3dadd( -9.41922, 229.655, -72.6865, 0.52 ) }
    dend_16 { pt3dadd( -9.20127, 230.265, -72.8695, 0.81 ) }
    dend_16 { pt3dadd( -8.87729, 231.26, -73.186, 1.03 ) }
    dend_16 { pt3dadd( -8.64007, 232.329, -73.511, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( -8.55769, 232.834, -73.6472, 1.33 ) }
    dend_16 { pt3dadd( -8.38292, 233.857, -73.9166, 0.88 ) }
    dend_16 { pt3dadd( -8.16592, 234.698, -74.1628, 0.81 ) }
    dend_16 { pt3dadd( -7.85017, 235.436, -74.4398, 0.59 ) }
    dend_16 { pt3dadd( -7.02534, 236.634, -75.0535, 0.44 ) }
    dend_16 { pt3dadd( -6.25991, 237.378, -75.5148, 0.66 ) }
    dend_16 { pt3dadd( -5.4898, 237.996, -75.9305, 0.81 ) }
    dend_16 { pt3dadd( -4.65373, 238.595, -76.3506, 0.44 ) }
    dend_16 { pt3dadd( -3.88516, 239.132, -76.68, 0.81 ) }
    dend_16 { pt3dadd( -3.28932, 239.575, -76.9045, 0.81 ) }
    dend_16 { pt3dadd( -2.38828, 240.28, -77.2133, 0.52 ) }
    dend_16 { pt3dadd( -1.71872, 240.897, -77.4538, 0.52 ) }
    dend_16 { pt3dadd( -1.00926, 241.618, -77.7223, 0.52 ) }
    dend_16 { pt3dadd( -0.284016, 242.381, -78.0205, 0.37 ) }
    dend_16 { pt3dadd( 0.621635, 243.341, -78.487, 0.37 ) }
    dend_16 { pt3dadd( 1.30604, 244.06, -78.9442, 0.59 ) }
    dend_16 { pt3dadd( 1.98996, 244.76, -79.4353, 1.18 ) }
    dend_16 { pt3dadd( 2.23974, 245.011, -79.5903, 1.47 ) }
    dend_16 { pt3dadd( 2.76943, 245.574, -79.8841, 1.47 ) }
    dend_16 { pt3dadd( 3.60947, 246.537, -80.319, 0.52 ) }
    dend_16 { pt3dadd( 4.24139, 247.306, -80.6147, 0.52 ) }
    dend_16 { pt3dadd( 5.36112, 248.733, -81.1393, 0.96 ) }
    dend_16 { pt3dadd( 6.3151, 249.909, -81.5986, 0.52 ) }
    dend_16 { pt3dadd( 7.18156, 250.927, -82.071, 0.96 ) }
    dend_16 { pt3dadd( 7.6494, 251.455, -82.3649, 0.96 ) }
    dend_16 { pt3dadd( 8.53888, 252.331, -82.9971, 0.52 ) }
    dend_16 { pt3dadd( 8.99719, 252.732, -83.423, 0.37 ) }
    dend_16 { pt3dadd( 9.67838, 253.19, -84.219, 0.37 ) }
    dend_16 { pt3dadd( 10.1815, 253.419, -84.8263, 0.81 ) }
    dend_16 { pt3dadd( 10.6437, 253.559, -85.3385, 0.81 ) }
    dend_16 { pt3dadd( 11.3765, 253.754, -86.1108, 0.52 ) }
    dend_16 { pt3dadd( 11.9196, 253.908, -86.6486, 0.74 ) }
    dend_16 { pt3dadd( 12.7569, 254.193, -87.4352, 0.74 ) }
    dend_16 { pt3dadd( 13.4693, 254.48, -88.0891, 0.52 ) }
    dend_16 { pt3dadd( 14.2621, 254.942, -88.8798, 0.52 ) }
    dend_16 { pt3dadd( 14.9816, 255.588, -89.6896, 0.96 ) }
    dend_16 { pt3dadd( 15.2997, 256.027, -90.1148, 1.55 ) }
    dend_16 { pt3dadd( 15.5435, 256.467, -90.4675, 1.69 ) }
    dend_16 { pt3dadd( 15.6813, 256.766, -90.6779, 1.69 ) }
    dend_16 { pt3dadd( 16.3906, 258.259, -91.6813, 0.52 ) }
    dend_16 { pt3dadd( 16.9424, 259.253, -92.3578, 0.66 ) }
    dend_16 { pt3dadd( 17.3347, 259.791, -92.7456, 0.74 ) }
    dend_16 { pt3dadd( 18.0896, 260.604, -93.443, 0.44 ) }
    dend_16 { pt3dadd( 18.9135, 261.388, -94.1735, 0.37 ) }
    dend_16 { pt3dadd( 19.696, 262.06, -94.8307, 1.11 ) }
    dend_16 { pt3dadd( 20.3135, 262.552, -95.3106, 1.55 ) }
    dend_16 { pt3dadd( 20.9834, 263.147, -95.9024, 0.81 ) }
    dend_16 { pt3dadd( 21.7289, 264.107, -96.7539, 0.52 ) }
    dend_16 { pt3dadd( 22.0086, 264.806, -97.2602, 0.66 ) }
    dend_16 { pt3dadd( 22.0874, 265.226, -97.5463, 0.66 ) }
    dend_16 { pt3dadd( 22.1629, 266.27, -98.2174, 0.44 ) }
    dend_16 { pt3dadd( 22.2054, 267.215, -98.8191, 0.44 ) }
    dend_16 { pt3dadd( 22.3176, 268.1, -99.4981, 0.52 ) }
    dend_16 { pt3dadd( 22.6464, 268.961, -100.429, 0.74 ) }
    dend_16 { pt3dadd( 23.0276, 269.467, -101.326, 1.11 ) }
    dend_16 { pt3dadd( 23.0893, 269.52, -101.459, 1.33 ) }
    dend_16 { pt3dadd( 23.3564, 269.675, -101.987, 1.33 ) }
    dend_16 { pt3dadd( 24.1417, 270.077, -103.609, 0.37 ) }
    dend_16 { pt3dadd( 24.4796, 270.257, -104.361, 0.37 ) }
    dend_16 { pt3dadd( 25.0089, 270.624, -105.63, 0.66 ) }
    dend_16 { pt3dadd( 25.3819, 271.0, -106.612, 0.44 ) }
    dend_16 { pt3dadd( 25.5812, 271.262, -107.176, 0.44 ) }
    dend_16 { pt3dadd( 26.0286, 271.931, -108.421, 1.18 ) }
    dend_16 { pt3dadd( 26.2834, 272.29, -108.965, 1.47 ) }
    dend_16 { pt3dadd( 26.6739, 272.778, -109.573, 1.47 ) }
    dend_16 { pt3dadd( 27.5307, 273.79, -110.552, 0.52 ) }
    dend_16 { pt3dadd( 27.9881, 274.356, -110.957, 0.52 ) }
    dend_16 { pt3dadd( 28.7728, 275.419, -111.509, 0.52 ) }
    dend_16 { pt3dadd( 29.7051, 276.799, -111.996, 0.88 ) }
    dend_16 { pt3dadd( 30.3138, 277.83, -112.262, 0.66 ) }
    dend_16 { pt3dadd( 31.0301, 279.202, -112.511, 0.96 ) }
    dend_16 { pt3dadd( 31.6267, 280.463, -112.671, 0.96 ) }
    dend_16 { pt3dadd( 32.1581, 281.638, -112.833, 0.96 ) }
    dend_16 { pt3dadd( 32.5585, 282.521, -112.985, 0.96 ) }
    dend_16 { pt3dadd( 32.988, 283.355, -113.22, 0.96 ) }
    dend_16 { pt3dadd( 33.5053, 284.063, -113.514, 0.96 ) }
    dend_16 { pt3dadd( 34.3359, 284.851, -113.994, 0.37 ) }
    dend_16 { pt3dadd( 35.2772, 285.576, -114.564, 0.37 ) }
    dend_16 { pt3dadd( 36.1427, 286.175, -115.079, 0.66 ) }
    dend_16 { pt3dadd( 36.8971, 286.712, -115.533, 1.33 ) }
    dend_16 { pt3dadd( 37.4301, 287.144, -115.864, 1.33 ) }
    dend_16 { pt3dadd( 38.091, 287.867, -116.311, 0.52 ) }
    dend_16 { pt3dadd( 38.7754, 288.804, -116.808, 0.52 ) }
    dend_16 { pt3dadd( 39.0794, 289.275, -117.04, 0.88 ) }
    dend_16 { pt3dadd( 39.457, 289.848, -117.362, 0.88 ) }
    dend_16 { pt3dadd( 39.9849, 290.536, -117.841, 0.88 ) }
    dend_16 { pt3dadd( 40.748, 291.284, -118.495, 0.44 ) }
    dend_16 { pt3dadd( 41.5453, 291.907, -119.167, 0.44 ) }
    dend_16 { pt3dadd( 42.4701, 292.432, -119.925, 0.81 ) }
    dend_16 { pt3dadd( 43.553, 292.881, -120.791, 1.47 ) }
    dend_16 { pt3dadd( 44.0525, 293.012, -121.181, 1.77 ) }
    dend_16 { pt3dadd( 44.9408, 293.111, -121.868, 1.77 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 92/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -19.6035, 66.8355, 1.68604, 0.52 ) }
    dend_15 { pt3dadd( -20.89, 67.2311, 1.39222, 0.52 ) }
    dend_15 { pt3dadd( -21.8642, 67.6108, 1.18727, 0.52 ) }
    dend_15 { pt3dadd( -22.9962, 68.177, 0.953072, 0.52 ) }
    dend_15 { pt3dadd( -23.7946, 68.6798, 0.780348, 0.74 ) }
    dend_15 { pt3dadd( -24.3437, 69.1208, 0.623826, 0.74 ) }
    dend_15 { pt3dadd( -24.8837, 69.6612, 0.379155, 0.59 ) }
    dend_15 { pt3dadd( -25.1131, 70.0751, 0.172057, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( -25.3252, 70.7118, -0.156742, 0.37 ) }
    dend_15 { pt3dadd( -25.4701, 71.3808, -0.480111, 0.37 ) }
    dend_15 { pt3dadd( -25.6482, 72.3119, -0.893449, 0.37 ) }
    dend_15 { pt3dadd( -25.9401, 73.4114, -1.32858, 0.37 ) }
    dend_15 { pt3dadd( -26.1649, 73.8242, -1.43655, 0.44 ) }
    dend_15 { pt3dadd( -26.5752, 74.2104, -1.43635, 0.59 ) }
    dend_15 { pt3dadd( -26.9739, 74.4586, -1.37643, 0.59 ) }
    dend_15 { pt3dadd( -28.2844, 75.118, -1.09726, 0.88 ) }
    dend_15 { pt3dadd( -28.8946, 75.3784, -0.936632, 1.03 ) }
    dend_15 { pt3dadd( -30.0755, 75.8299, -0.629587, 0.37 ) }
    dend_15 { pt3dadd( -30.9263, 76.1306, -0.463479, 0.44 ) }
    dend_15 { pt3dadd( -31.549, 76.3515, -0.403474, 0.74 ) }
    dend_15 { pt3dadd( -32.1331, 76.5753, -0.406314, 0.74 ) }
    dend_15 { pt3dadd( -33.0219, 76.9782, -0.524578, 0.44 ) }
    dend_15 { pt3dadd( -33.7481, 77.4014, -0.706314, 0.29 ) }
    dend_15 { pt3dadd( -34.1576, 77.7694, -0.934761, 0.29 ) }
    dend_15 { pt3dadd( -34.6635, 78.4825, -1.46864, 1.03 ) }
    dend_15 { pt3dadd( -34.8537, 78.9136, -1.83466, 1.4 ) }
    dend_15 { pt3dadd( -34.9637, 79.2783, -2.15839, 1.4 ) }
    dend_15 { pt3dadd( -35.1359, 80.0025, -2.81128, 0.96 ) }
    dend_15 { pt3dadd( -35.4273, 81.2505, -3.87579, 0.52 ) }
    dend_15 { pt3dadd( -35.582, 81.8113, -4.32778, 0.52 ) }
    dend_15 { pt3dadd( -35.8704, 82.6462, -4.93343, 0.52 ) }
    dend_15 { pt3dadd( -36.1014, 83.0607, -5.1586, 0.52 ) }
    dend_15 { pt3dadd( -36.648, 83.6338, -5.21618, 0.52 ) }
    dend_15 { pt3dadd( -37.3662, 84.1828, -5.0775, 0.88 ) }
    dend_15 { pt3dadd( -37.7931, 84.4764, -4.9567, 1.25 ) }
    dend_15 { pt3dadd( -38.3177, 84.8422, -4.79797, 1.47 ) }
    dend_15 { pt3dadd( -39.2074, 85.517, -4.52989, 0.59 ) }
    dend_15 { pt3dadd( -39.9597, 86.1847, -4.36781, 0.37 ) }
    dend_15 { pt3dadd( -40.7512, 87.0287, -4.27588, 0.29 ) }
    dend_15 { pt3dadd( -41.1455, 87.5179, -4.28228, 0.59 ) }
    dend_15 { pt3dadd( -41.5933, 88.1404, -4.35124, 0.88 ) }
    dend_15 { pt3dadd( -42.0519, 88.8001, -4.47006, 1.11 ) }
    dend_15 { pt3dadd( -42.5768, 89.5448, -4.62625, 1.33 ) }
    dend_15 { pt3dadd( -42.951, 90.0553, -4.72645, 1.03 ) }
    dend_15 { pt3dadd( -43.468, 90.7269, -4.83729, 0.81 ) }
    dend_15 { pt3dadd( -44.0175, 91.3853, -4.92439, 0.52 ) }
    dend_15 { pt3dadd( -44.9787, 92.522, -5.03651, 0.52 ) }
    dend_15 { pt3dadd( -45.6341, 93.3195, -5.11221, 0.52 ) }
    dend_15 { pt3dadd( -45.9499, 93.7223, -5.14614, 0.66 ) }
    dend_15 { pt3dadd( -46.2992, 94.2215, -5.20183, 0.66 ) }
    dend_15 { pt3dadd( -46.7807, 95.0576, -5.31318, 0.37 ) }
    dend_15 { pt3dadd( -47.1797, 95.9646, -5.44596, 0.37 ) }
    dend_15 { pt3dadd( -47.4647, 96.8125, -5.59194, 0.88 ) }
    dend_15 { pt3dadd( -47.6113, 97.2848, -5.6655, 0.88 ) }
    dend_15 { pt3dadd( -47.9282, 98.2225, -5.80274, 0.37 ) }
    dend_15 { pt3dadd( -48.2105, 98.9092, -5.88754, 0.29 ) }
    dend_15 { pt3dadd( -48.6842, 99.8858, -5.97319, 0.81 ) }
    dend_15 { pt3dadd( -48.8962, 100.302, -5.96978, 1.18 ) }
    dend_15 { pt3dadd( -49.2678, 101.041, -5.90236, 1.18 ) }
    dend_15 { pt3dadd( -49.5933, 101.747, -5.81026, 0.59 ) }
    dend_15 { pt3dadd( -49.996, 102.78, -5.67881, 0.44 ) }
    dend_15 { pt3dadd( -50.3076, 103.92, -5.57854, 0.44 ) }
    dend_15 { pt3dadd( -50.5026, 105.148, -5.54345, 1.11 ) }
    dend_15 { pt3dadd( -50.5384, 105.584, -5.56297, 1.11 ) }
    dend_15 { pt3dadd( -50.5637, 106.261, -5.63772, 0.81 ) }
    dend_15 { pt3dadd( -50.5939, 107.293, -5.79369, 0.52 ) }
    dend_15 { pt3dadd( -50.6629, 108.083, -5.97622, 0.52 ) }
    dend_15 { pt3dadd( -50.8308, 108.803, -6.19434, 0.44 ) }
    dend_15 { pt3dadd( -51.0679, 109.393, -6.39383, 0.44 ) }
    dend_15 { pt3dadd( -51.3685, 109.955, -6.5678, 0.52 ) }
    dend_15 { pt3dadd( -51.6905, 110.467, -6.70881, 0.81 ) }
    dend_15 { pt3dadd( -52.283, 111.359, -6.90262, 1.11 ) }
    dend_15 { pt3dadd( -52.6228, 111.857, -6.99849, 1.11 ) }
    dend_15 { pt3dadd( -53.0725, 112.556, -7.08023, 0.81 ) }
    dend_15 { pt3dadd( -53.5224, 113.3, -7.12321, 0.37 ) }
    dend_15 { pt3dadd( -54.0324, 114.206, -7.11988, 0.37 ) }
    dend_15 { pt3dadd( -54.5104, 115.119, -7.05424, 0.29 ) }
    dend_15 { pt3dadd( -54.8375, 115.799, -6.93927, 0.88 ) }
    dend_15 { pt3dadd( -55.2423, 116.73, -6.73727, 1.55 ) }
    dend_15 { pt3dadd( -55.4242, 117.195, -6.62162, 1.55 ) }
    dend_15 { pt3dadd( -55.692, 117.928, -6.44166, 1.18 ) }
    dend_15 { pt3dadd( -55.9971, 118.742, -6.29083, 0.81 ) }
    dend_15 { pt3dadd( -56.4718, 119.946, -6.08724, 0.44 ) }
    dend_15 { pt3dadd( -57.0053, 121.19, -5.87809, 0.29 ) }
    dend_15 { pt3dadd( -57.3895, 121.951, -5.74726, 0.29 ) }
    dend_15 { pt3dadd( -57.8758, 122.814, -5.58186, 1.25 ) }
    dend_15 { pt3dadd( -58.5979, 123.908, -5.28788, 0.29 ) }
    dend_15 { pt3dadd( -59.3583, 124.896, -4.91626, 0.29 ) }
    dend_15 { pt3dadd( -59.928, 125.532, -4.60314, 0.29 ) }
    dend_15 { pt3dadd( -60.4954, 126.102, -4.23442, 0.59 ) }
    dend_15 { pt3dadd( -60.7874, 126.385, -4.0203, 0.88 ) }
    dend_15 { pt3dadd( -61.657, 127.306, -3.27649, 0.44 ) }
    dend_15 { pt3dadd( -61.9285, 127.656, -3.02799, 0.29 ) }
    dend_15 { pt3dadd( -62.2108, 128.132, -2.80409, 0.44 ) }
    dend_15 { pt3dadd( -62.415, 128.61, -2.6432, 0.29 ) }
    dend_15 { pt3dadd( -62.6572, 129.552, -2.37188, 0.29 ) }
    dend_15 { pt3dadd( -62.7436, 130.215, -2.1951, 0.29 ) }
    dend_15 { pt3dadd( -62.7963, 130.931, -2.04262, 0.66 ) }
    dend_15 { pt3dadd( -62.8349, 131.361, -1.94432, 0.81 ) }
    dend_15 { pt3dadd( -62.9032, 131.929, -1.80478, 0.81 ) }
    dend_15 { pt3dadd( -63.0695, 132.981, -1.54545, 0.29 ) }
    dend_15 { pt3dadd( -63.2489, 133.862, -1.33692, 0.37 ) }
    dend_15 { pt3dadd( -63.5984, 135.055, -1.04335, 0.37 ) }
    dend_15 { pt3dadd( -63.8827, 135.767, -0.918015, 0.37 ) }
    dend_15 { pt3dadd( -64.3149, 136.715, -0.834825, 1.33 ) }
    dend_15 { pt3dadd( -64.5412, 137.179, -0.833519, 1.55 ) }
    dend_15 { pt3dadd( -64.6969, 137.498, -0.872487, 1.55 ) }
    dend_15 { pt3dadd( -64.9199, 137.961, -0.979246, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -65.6479, 139.427, -1.46343, 0.37 ) }
    dend_15 { pt3dadd( -65.9706, 139.953, -1.7201, 0.59 ) }
    dend_15 { pt3dadd( -66.3584, 140.448, -2.06006, 0.59 ) }
    dend_15 { pt3dadd( -66.8226, 140.931, -2.47935, 0.29 ) }
    dend_15 { pt3dadd( -67.2581, 141.305, -2.95683, 0.29 ) }
    dend_15 { pt3dadd( -67.7166, 141.661, -3.51137, 0.29 ) }
    dend_15 { pt3dadd( -68.4117, 142.163, -4.38096, 0.59 ) }
    dend_15 { pt3dadd( -68.7429, 142.401, -4.80214, 0.59 ) }
    dend_15 { pt3dadd( -69.6985, 143.142, -6.08496, 0.88 ) }
    dend_15 { pt3dadd( -70.769, 144.154, -7.67339, 0.44 ) }
    dend_15 { pt3dadd( -71.2682, 144.791, -8.55496, 0.29 ) }
    dend_15 { pt3dadd( -71.4086, 145.016, -8.84247, 0.81 ) }
    dend_15 { pt3dadd( -71.5351, 145.251, -9.11632, 1.11 ) }
    dend_15 { pt3dadd( -71.8512, 145.841, -9.78387, 0.81 ) }
    dend_15 { pt3dadd( -72.3511, 146.599, -10.6703, 0.15 ) }
    dend_15 { pt3dadd( -72.6847, 146.935, -11.1308, 0.15 ) }
    dend_15 { pt3dadd( -73.0037, 147.155, -11.5929, 0.15 ) }
    dend_15 { pt3dadd( -73.2637, 147.308, -12.0284, 0.66 ) }
    dend_15 { pt3dadd( -73.4601, 147.42, -12.4039, 0.81 ) }
    dend_15 { pt3dadd( -74.1057, 147.827, -13.6892, 0.15 ) }
    dend_15 { pt3dadd( -74.966, 148.403, -15.3841, 0.66 ) }
    dend_15 { pt3dadd( -75.1904, 148.57, -15.8228, 0.96 ) }
    dend_15 { pt3dadd( -75.6205, 148.953, -16.6979, 0.81 ) }
    dend_15 { pt3dadd( -76.3575, 149.667, -18.1866, 0.29 ) }
    dend_15 { pt3dadd( -76.7253, 150.043, -18.8837, 0.29 ) }
    dend_15 { pt3dadd( -77.205, 150.535, -19.6734, 0.29 ) }
    dend_15 { pt3dadd( -77.8975, 151.085, -20.5097, 1.18 ) }
    dend_15 { pt3dadd( -78.3401, 151.363, -20.9251, 1.18 ) }
    dend_15 { pt3dadd( -79.3645, 151.919, -21.6867, 0.37 ) }
    dend_15 { pt3dadd( -79.9228, 152.2, -22.0376, 0.37 ) }
    dend_15 { pt3dadd( -80.5368, 152.515, -22.411, 0.88 ) }
    dend_15 { pt3dadd( -81.3149, 152.993, -22.8931, 0.96 ) }
    dend_15 { pt3dadd( -82.4547, 153.823, -23.637, 0.44 ) }
    dend_15 { pt3dadd( -82.9911, 154.243, -24.0032, 0.66 ) }
    dend_15 { pt3dadd( -83.4419, 154.606, -24.3118, 0.37 ) }
    dend_15 { pt3dadd( -83.9482, 154.976, -24.6566, 0.37 ) }
    dend_15 { pt3dadd( -84.7301, 155.541, -25.2031, 0.44 ) }
    dend_15 { pt3dadd( -85.463, 156.093, -25.7247, 0.37 ) }
    dend_15 { pt3dadd( -86.5466, 156.899, -26.4815, 0.66 ) }
    dend_15 { pt3dadd( -87.0878, 157.239, -26.8329, 0.66 ) }
    dend_15 { pt3dadd( -87.8753, 157.622, -27.3098, 0.29 ) }
    dend_15 { pt3dadd( -88.6181, 157.883, -27.7023, 0.52 ) }
    dend_15 { pt3dadd( -89.2525, 158.054, -27.9934, 0.59 ) }
    dend_15 { pt3dadd( -90.2674, 158.305, -28.4382, 0.29 ) }
    dend_15 { pt3dadd( -91.0231, 158.504, -28.7929, 0.29 ) }
    dend_15 { pt3dadd( -92.027, 158.805, -29.2548, 0.29 ) }
    dend_15 { pt3dadd( -92.7812, 159.041, -29.6235, 0.44 ) }
    dend_15 { pt3dadd( -93.2924, 159.175, -29.8709, 0.74 ) }
    dend_15 { pt3dadd( -94.0782, 159.384, -30.234, 0.74 ) }
    dend_15 { pt3dadd( -95.1177, 159.664, -30.6789, 1.11 ) }
    dend_15 { pt3dadd( -95.8384, 159.886, -30.9772, 1.62 ) }
    dend_15 { pt3dadd( -97.2879, 160.368, -31.5363, 0.88 ) }
    dend_15 { pt3dadd( -98.4216, 160.739, -31.9638, 0.37 ) }
    dend_15 { pt3dadd( -99.3961, 161.029, -32.3229, 0.29 ) }
    dend_15 { pt3dadd( -100.111, 161.215, -32.5707, 0.29 ) }
    dend_15 { pt3dadd( -100.653, 161.352, -32.7341, 0.81 ) }
    dend_15 { pt3dadd( -101.08, 161.462, -32.8497, 1.18 ) }
    dend_15 { pt3dadd( -101.599, 161.624, -32.9517, 0.88 ) }
    dend_15 { pt3dadd( -102.643, 162.07, -33.158, 0.29 ) }
    dend_15 { pt3dadd( -103.189, 162.391, -33.3325, 0.29 ) }
    dend_15 { pt3dadd( -103.698, 162.792, -33.5449, 0.59 ) }
    dend_15 { pt3dadd( -103.935, 163.008, -33.6923, 0.88 ) }
    dend_15 { pt3dadd( -104.186, 163.275, -33.9186, 0.59 ) }
    dend_15 { pt3dadd( -104.464, 163.588, -34.3249, 0.37 ) }
    dend_15 { pt3dadd( -104.921, 164.09, -35.1982, 0.37 ) }
    dend_15 { pt3dadd( -105.18, 164.352, -35.7401, 0.74 ) }
    dend_15 { pt3dadd( -105.704, 164.817, -36.8684, 0.52 ) }
    dend_15 { pt3dadd( -106.135, 165.159, -37.7888, 1.11 ) }
    dend_15 { pt3dadd( -107.31, 165.933, -40.231, 1.25 ) }
    dend_15 { pt3dadd( -108.168, 166.396, -41.9854, 0.66 ) }
    dend_15 { pt3dadd( -108.789, 166.665, -43.2042, 0.44 ) }
    dend_15 { pt3dadd( -109.511, 166.92, -44.5647, 1.03 ) }
    dend_15 { pt3dadd( -110.167, 167.097, -45.6841, 1.03 ) }
    dend_15 { pt3dadd( -111.467, 167.299, -47.6366, 0.29 ) }
    dend_15 { pt3dadd( -112.205, 167.337, -48.581, 0.29 ) }
    dend_15 { pt3dadd( -112.77, 167.337, -49.2331, 1.25 ) }
    dend_15 { pt3dadd( -112.965, 167.34, -49.4405, 1.69 ) }
    dend_15 { pt3dadd( -113.435, 167.361, -49.9087, 1.69 ) }
    dend_15 { pt3dadd( -114.725, 167.478, -51.0888, 0.29 ) }
    dend_15 { pt3dadd( -115.708, 167.664, -51.9275, 0.29 ) }
    dend_15 { pt3dadd( -116.238, 167.822, -52.3818, 0.29 ) }
    dend_15 { pt3dadd( -116.958, 168.097, -53.0341, 0.29 ) }
    dend_15 { pt3dadd( -117.718, 168.394, -53.7374, 0.81 ) }
    dend_15 { pt3dadd( -118.157, 168.567, -54.1298, 0.88 ) }
    dend_15 { pt3dadd( -119.042, 168.916, -54.8487, 0.29 ) }
    dend_15 { pt3dadd( -119.916, 169.214, -55.5207, 0.81 ) }
    dend_15 { pt3dadd( -120.352, 169.327, -55.8338, 0.81 ) }
    dend_15 { pt3dadd( -121.02, 169.467, -56.2982, 0.22 ) }
    dend_15 { pt3dadd( -121.442, 169.573, -56.5721, 0.52 ) }
    dend_15 { pt3dadd( -121.627, 169.624, -56.6932, 0.59 ) }
    dend_15 { pt3dadd( -122.568, 169.857, -57.2109, 0.22 ) }
    dend_15 { pt3dadd( -122.92, 169.907, -57.3758, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -65.3466, 96.9893, -123.653, 0.52 ) }
    dend_12 { pt3dadd( -64.8149, 97.9392, -124.647, 0.52 ) }
    dend_12 { pt3dadd( -64.4654, 98.6128, -125.36, 0.81 ) }
    dend_12 { pt3dadd( -64.2314, 99.0663, -125.904, 0.59 ) }
    dend_12 { pt3dadd( -63.683, 100.003, -127.101, 0.96 ) }
    dend_12 { pt3dadd( -63.319, 100.566, -127.885, 0.96 ) }
    dend_12 { pt3dadd( -62.8938, 101.229, -128.826, 0.52 ) }
    dend_12 { pt3dadd( -62.6463, 101.633, -129.47, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( -62.2309, 102.3, -130.652, 0.52 ) }
    dend_12 { pt3dadd( -61.9784, 102.704, -131.363, 0.52 ) }
    dend_12 { pt3dadd( -61.6538, 103.247, -132.201, 0.66 ) }
    dend_12 { pt3dadd( -61.4735, 103.615, -132.743, 0.96 ) }
    dend_12 { pt3dadd( -61.2657, 104.122, -133.448, 0.96 ) }
    dend_12 { pt3dadd( -61.0847, 104.737, -134.3, 0.37 ) }
    dend_12 { pt3dadd( -60.9866, 105.305, -135.028, 0.37 ) }
    dend_12 { pt3dadd( -60.9452, 105.873, -135.725, 0.37 ) }
    dend_12 { pt3dadd( -60.9382, 106.953, -137.064, 0.44 ) }
    dend_12 { pt3dadd( -60.9454, 107.176, -137.36, 0.74 ) }
    dend_12 { pt3dadd( -60.9676, 107.681, -138.036, 0.74 ) }
    dend_12 { pt3dadd( -61.0092, 108.156, -138.679, 0.37 ) }
    dend_12 { pt3dadd( -61.0232, 108.579, -139.268, 0.37 ) }
    dend_12 { pt3dadd( -60.9604, 109.088, -139.925, 0.37 ) }
    dend_12 { pt3dadd( -60.8202, 109.484, -140.358, 0.37 ) }
    dend_12 { pt3dadd( -60.5494, 110.105, -141.033, 0.37 ) }
    dend_12 { pt3dadd( -60.457, 110.28, -141.212, 0.81 ) }
    dend_12 { pt3dadd( -60.1436, 110.778, -141.716, 0.37 ) }
    dend_12 { pt3dadd( -59.8529, 111.162, -142.102, 0.37 ) }
    dend_12 { pt3dadd( -59.4301, 111.675, -142.54, 0.66 ) }
    dend_12 { pt3dadd( -59.126, 112.05, -142.85, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -65.3466, 96.9893, -123.653, 0.44 ) }
    dend_5 { pt3dadd( -65.4768, 98.3127, -123.959, 0.44 ) }
    dend_5 { pt3dadd( -65.7581, 99.3364, -124.22, 0.37 ) }
    dend_5 { pt3dadd( -66.1464, 100.282, -124.493, 0.88 ) }
    dend_5 { pt3dadd( -66.395, 100.787, -124.678, 0.88 ) }
    dend_5 { pt3dadd( -66.829, 101.589, -125.011, 0.52 ) }
    dend_5 { pt3dadd( -67.2812, 102.352, -125.547, 0.29 ) }
    dend_5 { pt3dadd( -67.8679, 103.17, -126.366, 0.22 ) }
    dend_5 { pt3dadd( -68.2256, 103.6, -126.872, 0.22 ) }
    dend_5 { pt3dadd( -68.791, 104.21, -127.671, 0.88 ) }
    dend_5 { pt3dadd( -69.18, 104.61, -128.254, 1.25 ) }
    dend_5 { pt3dadd( -70.8032, 106.247, -130.975, 0.44 ) }
    dend_5 { pt3dadd( -71.3639, 106.841, -132.08, 0.96 ) }
    dend_5 { pt3dadd( -71.5678, 107.082, -132.581, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -31.1364, 5.37724, -7.57619, 0.81 ) }
    dend_3 { pt3dadd( -32.3044, 4.12757, -9.08907, 0.81 ) }
    dend_3 { pt3dadd( -32.8786, 3.61183, -9.7644, 0.81 ) }
    dend_3 { pt3dadd( -36.4192, 1.10842, -13.5216, 1.62 ) }
    dend_3 { pt3dadd( -38.9033, -0.226468, -15.9494, 0.66 ) }
    dend_3 { pt3dadd( -40.4047, -0.885234, -17.3145, 0.66 ) }
    dend_3 { pt3dadd( -41.398, -1.2906, -18.1466, 0.88 ) }
    dend_3 { pt3dadd( -42.5337, -1.6511, -18.9967, 0.96 ) }
    dend_3 { pt3dadd( -44.3849, -2.14611, -20.1625, 0.81 ) }
    dend_3 { pt3dadd( -46.2073, -2.54201, -20.8608, 0.52 ) }
    dend_3 { pt3dadd( -47.8295, -3.0506, -21.2453, 0.52 ) }
    dend_3 { pt3dadd( -49.6187, -3.89522, -21.4466, 0.74 ) }
    dend_3 { pt3dadd( -51.2355, -4.90746, -21.4218, 1.11 ) }
    dend_3 { pt3dadd( -51.7658, -5.31164, -21.3299, 1.25 ) }
    dend_3 { pt3dadd( -52.9183, -6.33783, -20.9889, 0.96 ) }
    dend_3 { pt3dadd( -54.3016, -7.65028, -20.4788, 0.66 ) }
    dend_3 { pt3dadd( -55.5969, -8.85332, -19.9893, 0.88 ) }
    dend_3 { pt3dadd( -56.938, -10.0236, -19.5417, 0.81 ) }
    dend_3 { pt3dadd( -58.3522, -11.1923, -19.1877, 0.96 ) }
    dend_3 { pt3dadd( -59.4719, -12.1208, -19.0039, 1.18 ) }
    dend_3 { pt3dadd( -60.7153, -13.2064, -18.881, 1.11 ) }
    dend_3 { pt3dadd( -61.7839, -14.2332, -18.865, 1.18 ) }
    dend_3 { pt3dadd( -62.873, -15.3944, -18.9713, 1.33 ) }
    dend_3 { pt3dadd( -64.631, -17.3098, -19.2881, 0.66 ) }
    dend_3 { pt3dadd( -65.9242, -18.6549, -19.575, 0.88 ) }
    dend_3 { pt3dadd( -66.9806, -19.6752, -19.8077, 0.88 ) }
    dend_3 { pt3dadd( -68.6836, -21.1911, -20.1745, 0.59 ) }
    dend_3 { pt3dadd( -69.6916, -21.9527, -20.356, 0.59 ) }
    dend_3 { pt3dadd( -70.5588, -22.4142, -20.47, 0.81 ) }
    dend_3 { pt3dadd( -71.8854, -22.6964, -20.4654, 1.33 ) }
    dend_3 { pt3dadd( -73.0016, -22.7095, -20.311, 1.4 ) }
    dend_3 { pt3dadd( -73.7183, -22.6782, -20.1155, 1.25 ) }
    dend_3 { pt3dadd( -75.1165, -22.6533, -19.497, 0.52 ) }
    dend_3 { pt3dadd( -75.9254, -22.7591, -19.0363, 0.52 ) }
    dend_3 { pt3dadd( -76.9846, -23.1886, -18.3679, 0.66 ) }
    dend_3 { pt3dadd( -77.9499, -23.7918, -17.7269, 0.81 ) }
    dend_3 { pt3dadd( -78.999, -24.5396, -17.0457, 0.81 ) }
    dend_3 { pt3dadd( -79.6964, -25.1116, -16.6439, 1.11 ) }
    dend_3 { pt3dadd( -80.2786, -25.6752, -16.3486, 1.33 ) }
    dend_3 { pt3dadd( -81.1346, -26.6233, -16.0294, 1.33 ) }
    dend_3 { pt3dadd( -81.5955, -27.2001, -15.9483, 1.33 ) }
    dend_3 { pt3dadd( -82.5342, -28.4882, -15.9942, 0.81 ) }
    dend_3 { pt3dadd( -83.5919, -29.9871, -16.173, 0.52 ) }
    dend_3 { pt3dadd( -84.4001, -31.1235, -16.3484, 0.74 ) }
    dend_3 { pt3dadd( -85.5663, -32.7378, -16.6069, 0.96 ) }
    dend_3 { pt3dadd( -86.4847, -33.9487, -16.7727, 0.81 ) }
    dend_3 { pt3dadd( -87.7616, -35.5261, -16.9869, 0.66 ) }
    dend_3 { pt3dadd( -88.8336, -36.7404, -17.1063, 0.59 ) }
    dend_3 { pt3dadd( -89.5805, -37.4961, -17.1256, 1.03 ) }
    dend_3 { pt3dadd( -90.1939, -38.0994, -17.0917, 1.25 ) }
    dend_3 { pt3dadd( -91.0664, -38.9752, -16.9355, 1.25 ) }
    dend_3 { pt3dadd( -92.3313, -40.4324, -16.6652, 0.81 ) }
    dend_3 { pt3dadd( -93.021, -41.3931, -16.5288, 0.52 ) }
    dend_3 { pt3dadd( -94.0199, -42.8926, -16.5335, 0.52 ) }
    dend_3 { pt3dadd( -94.7633, -43.9444, -16.6042, 0.44 ) }
    dend_3 { pt3dadd( -95.2047, -44.542, -16.6818, 0.44 ) }
    dend_3 { pt3dadd( -96.531, -46.3199, -16.9654, 0.96 ) }
    dend_3 { pt3dadd( -97.0911, -47.054, -17.0858, 1.4 ) }
    dend_3 { pt3dadd( -98.5218, -48.8219, -17.5373, 0.88 ) }
    dend_3 { pt3dadd( -99.7711, -50.303, -17.9375, 0.66 ) }
    dend_3 { pt3dadd( -101.533, -52.4024, -18.4505, 0.66 ) }
    dend_3 { pt3dadd( -102.763, -54.0505, -18.8372, 0.59 ) }
    dend_3 { pt3dadd( -104.014, -55.9809, -19.2418, 1.77 ) }
    dend_3 { pt3dadd( -105.795, -59.1571, -19.8165, 0.59 ) }
    dend_3 { pt3dadd( -106.348, -60.2491, -19.9787, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_3 { pt3dadd( -106.974, -61.4958, -20.147, 0.74 ) }
    dend_3 { pt3dadd( -108.444, -64.1561, -20.4067, 0.59 ) }
    dend_3 { pt3dadd( -109.163, -65.2821, -20.4532, 0.59 ) }
    dend_3 { pt3dadd( -109.927, -66.3388, -20.392, 0.74 ) }
    dend_3 { pt3dadd( -111.04, -67.7075, -20.1286, 0.74 ) }
    dend_3 { pt3dadd( -112.101, -68.8182, -19.8611, 0.74 ) }
    dend_3 { pt3dadd( -113.317, -70.0342, -19.6593, 0.52 ) }
    dend_3 { pt3dadd( -114.417, -71.0117, -19.5032, 0.37 ) }
    dend_3 { pt3dadd( -115.048, -71.5649, -19.4711, 1.11 ) }
    dend_3 { pt3dadd( -115.474, -71.9233, -19.5009, 1.11 ) }
    dend_3 { pt3dadd( -116.245, -72.5462, -19.6245, 0.96 ) }
    dend_3 { pt3dadd( -119.534, -74.9, -20.3306, 0.59 ) }
    dend_3 { pt3dadd( -120.342, -75.3536, -20.5004, 0.52 ) }
    dend_3 { pt3dadd( -121.156, -75.7346, -20.7402, 0.81 ) }
    dend_3 { pt3dadd( -122.472, -76.3051, -21.1586, 0.81 ) }
    dend_3 { pt3dadd( -123.633, -76.7729, -21.532, 1.11 ) }
    dend_3 { pt3dadd( -124.88, -77.2539, -21.8919, 1.25 ) }
    dend_3 { pt3dadd( -126.085, -77.6926, -22.1433, 0.96 ) }
    dend_3 { pt3dadd( -128.795, -78.9478, -22.747, 0.52 ) }
    dend_3 { pt3dadd( -129.965, -79.6007, -22.9935, 0.52 ) }
    dend_3 { pt3dadd( -130.91, -80.2572, -23.1506, 0.81 ) }
    dend_3 { pt3dadd( -131.872, -81.1364, -23.2603, 0.88 ) }
    dend_3 { pt3dadd( -132.377, -81.7434, -23.2872, 1.03 ) }
    dend_3 { pt3dadd( -133.074, -82.7597, -23.2601, 0.88 ) }
    dend_3 { pt3dadd( -133.721, -83.8277, -23.1412, 0.44 ) }
    dend_3 { pt3dadd( -134.394, -85.0402, -22.9776, 0.44 ) }
    dend_3 { pt3dadd( -135.569, -87.5375, -22.6074, 1.33 ) }
    dend_3 { pt3dadd( -136.701, -90.1391, -22.2054, 0.59 ) }
    dend_3 { pt3dadd( -137.103, -91.0938, -22.0853, 1.03 ) }
    dend_3 { pt3dadd( -137.393, -91.7902, -22.0033, 1.18 ) }
    dend_3 { pt3dadd( -137.837, -92.8286, -21.9008, 0.81 ) }
    dend_3 { pt3dadd( -138.75, -94.7375, -21.7139, 0.59 ) }
    dend_3 { pt3dadd( -139.438, -95.96, -21.6006, 0.37 ) }
    dend_3 { pt3dadd( -140.671, -97.8296, -21.5604, 0.37 ) }
    dend_3 { pt3dadd( -141.035, -98.2907, -21.5906, 0.96 ) }
    dend_3 { pt3dadd( -141.345, -98.6297, -21.6332, 1.25 ) }
    dend_3 { pt3dadd( -141.78, -99.0287, -21.704, 1.25 ) }
    dend_3 { pt3dadd( -143.454, -100.284, -21.9355, 0.52 ) }
    dend_3 { pt3dadd( -144.605, -101.056, -22.0326, 0.52 ) }
    dend_3 { pt3dadd( -145.866, -101.81, -22.0246, 0.52 ) }
    dend_3 { pt3dadd( -146.22, -102.011, -22.0184, 1.18 ) }
    dend_3 { pt3dadd( -146.83, -102.382, -22.051, 1.18 ) }
    dend_3 { pt3dadd( -147.382, -102.732, -22.0859, 1.18 ) }
    dend_3 { pt3dadd( -148.283, -103.281, -22.048, 0.88 ) }
    dend_3 { pt3dadd( -150.076, -104.444, -22.1664, 0.44 ) }
    dend_3 { pt3dadd( -150.337, -104.632, -22.2196, 0.81 ) }
    dend_3 { pt3dadd( -153.016, -106.673, -22.9481, 0.52 ) }
    dend_3 { pt3dadd( -153.954, -107.438, -23.2486, 0.81 ) }
    dend_3 { pt3dadd( -155.584, -108.824, -23.7946, 0.44 ) }
    dend_3 { pt3dadd( -158.312, -111.295, -24.7714, 0.74 ) }
    dend_3 { pt3dadd( -159.505, -112.415, -25.1778, 0.44 ) }
    dend_3 { pt3dadd( -160.066, -112.962, -25.3266, 1.33 ) }
    dend_3 { pt3dadd( -160.451, -113.371, -25.4041, 1.33 ) }
    dend_3 { pt3dadd( -161.263, -114.296, -25.5976, 0.74 ) }
    dend_3 { pt3dadd( -162.749, -115.967, -25.9837, 0.44 ) }
    dend_3 { pt3dadd( -163.171, -116.394, -26.033, 0.74 ) }
    dend_3 { pt3dadd( -163.875, -117.04, -26.1703, 0.74 ) }
    dend_3 { pt3dadd( -165.528, -118.33, -26.8574, 0.37 ) }
    dend_3 { pt3dadd( -166.232, -118.736, -27.3232, 0.37 ) }
    dend_3 { pt3dadd( -166.993, -119.029, -28.0227, 0.66 ) }
    dend_3 { pt3dadd( -167.545, -119.166, -28.5725, 0.88 ) }
    dend_3 { pt3dadd( -168.034, -119.265, -29.0606, 0.88 ) }
    dend_3 { pt3dadd( -169.504, -119.562, -30.4609, 0.59 ) }
    dend_3 { pt3dadd( -170.33, -119.714, -31.1482, 0.29 ) }
    dend_3 { pt3dadd( -171.097, -119.904, -31.686, 0.29 ) }
    dend_3 { pt3dadd( -172.557, -120.379, -32.4659, 0.96 ) }
    dend_3 { pt3dadd( -172.924, -120.519, -32.5946, 1.18 ) }
    dend_3 { pt3dadd( -174.808, -121.462, -32.9826, 0.59 ) }
    dend_3 { pt3dadd( -175.636, -122.042, -33.1545, 0.81 ) }
    dend_3 { pt3dadd( -176.303, -122.575, -33.3155, 0.81 ) }
    dend_3 { pt3dadd( -177.197, -123.309, -33.5582, 0.37 ) }
    dend_3 { pt3dadd( -178.233, -124.174, -33.8613, 0.37 ) }
    dend_3 { pt3dadd( -179.789, -125.515, -34.3637, 1.11 ) }
    dend_3 { pt3dadd( -182.821, -128.164, -35.3345, 0.52 ) }
    dend_3 { pt3dadd( -183.363, -128.645, -35.516, 0.52 ) }
    dend_3 { pt3dadd( -184.518, -129.655, -35.9223, 0.44 ) }
    dend_3 { pt3dadd( -185.124, -130.176, -36.1768, 1.47 ) }
    dend_3 { pt3dadd( -187.769, -132.349, -37.4416, 0.59 ) }
    dend_3 { pt3dadd( -188.509, -132.911, -37.8107, 0.88 ) }
    dend_3 { pt3dadd( -189.393, -133.599, -38.2998, 0.88 ) }
    dend_3 { pt3dadd( -191.034, -134.984, -39.4267, 0.52 ) }
    dend_3 { pt3dadd( -192.487, -136.249, -40.5695, 0.74 ) }
    dend_3 { pt3dadd( -193.089, -136.753, -41.0862, 0.96 ) }
    dend_3 { pt3dadd( -193.476, -137.061, -41.4181, 0.96 ) }
    dend_3 { pt3dadd( -195.382, -138.609, -42.9927, 0.29 ) }
    dend_3 { pt3dadd( -197.054, -140.059, -44.4434, 0.96 ) }
    dend_3 { pt3dadd( -197.61, -140.542, -44.9121, 1.18 ) }
    dend_3 { pt3dadd( -199.421, -142.156, -46.4052, 0.37 ) }
    dend_3 { pt3dadd( -200.223, -142.919, -47.0642, 0.37 ) }
    dend_3 { pt3dadd( -200.819, -143.5, -47.5525, 0.74 ) }
    dend_3 { pt3dadd( -203.844, -146.408, -50.1172, 0.88 ) }
    dend_3 { pt3dadd( -204.384, -146.901, -50.6083, 0.88 ) }
    dend_3 { pt3dadd( -205.946, -148.277, -52.0949, 0.37 ) }
    dend_3 { pt3dadd( -206.527, -148.76, -52.637, 0.37 ) }
    dend_3 { pt3dadd( -207.269, -149.33, -53.2968, 0.37 ) }
    dend_3 { pt3dadd( -208.267, -150.02, -54.0607, 0.37 ) }
    dend_3 { pt3dadd( -209.799, -150.99, -54.8806, 0.74 ) }
    dend_3 { pt3dadd( -212.188, -152.559, -56.043, 0.44 ) }
    dend_3 { pt3dadd( -212.801, -152.934, -56.2931, 1.03 ) }
    dend_3 { pt3dadd( -213.393, -153.324, -56.513, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_3 { pt3dadd( -213.85, -153.681, -56.6482, 1.03 ) }
    dend_3 { pt3dadd( -215.113, -154.825, -56.8298, 0.44 ) }
    dend_3 { pt3dadd( -215.981, -155.684, -56.8467, 0.59 ) }
    dend_3 { pt3dadd( -216.937, -156.578, -56.8089, 0.37 ) }
    dend_3 { pt3dadd( -217.989, -157.532, -56.8274, 0.29 ) }
    dend_3 { pt3dadd( -218.562, -158.064, -56.9027, 0.44 ) }
    dend_3 { pt3dadd( -218.997, -158.502, -56.9812, 0.44 ) }
    dend_3 { pt3dadd( -220.351, -159.936, -57.2545, 0.29 ) }
    dend_3 { pt3dadd( -220.912, -160.543, -57.3806, 0.52 ) }
    dend_3 { pt3dadd( -221.225, -160.875, -57.4858, 0.74 ) }
    dend_3 { pt3dadd( -222.691, -162.149, -58.1607, 0.29 ) }
    dend_3 { pt3dadd( -223.3, -162.631, -58.4805, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -31.1364, 5.37724, -7.57619, 0.88 ) }
    dend_2 { pt3dadd( -32.0316, 8.61756, -8.40503, 0.88 ) }
    dend_2 { pt3dadd( -32.4814, 10.1347, -8.66208, 0.52 ) }
    dend_2 { pt3dadd( -32.7816, 11.0252, -8.77453, 0.88 ) }
    dend_2 { pt3dadd( -33.4072, 12.6637, -8.94394, 0.88 ) }
    dend_2 { pt3dadd( -34.5493, 15.3091, -9.18428, 0.52 ) }
    dend_2 { pt3dadd( -35.2984, 16.7384, -9.3029, 0.52 ) }
    dend_2 { pt3dadd( -36.3018, 18.4229, -9.28835, 0.44 ) }
    dend_2 { pt3dadd( -37.1644, 19.5569, -9.2601, 0.59 ) }
    dend_2 { pt3dadd( -38.0922, 20.6032, -9.18137, 0.74 ) }
    dend_2 { pt3dadd( -38.8863, 21.3762, -9.08171, 0.74 ) }
    dend_2 { pt3dadd( -40.7509, 22.9233, -8.89138, 1.25 ) }
    dend_2 { pt3dadd( -41.377, 23.3753, -8.85092, 1.25 ) }
    dend_2 { pt3dadd( -42.6861, 24.154, -8.84457, 0.66 ) }
    dend_2 { pt3dadd( -44.3396, 25.0109, -8.92537, 0.81 ) }
    dend_2 { pt3dadd( -45.0252, 25.3294, -8.96991, 0.66 ) }
    dend_2 { pt3dadd( -46.5842, 26.0025, -9.10557, 0.88 ) }
    dend_2 { pt3dadd( -49.2438, 27.0591, -9.3948, 0.88 ) }
    dend_2 { pt3dadd( -50.3549, 27.451, -9.53733, 0.66 ) }
    dend_2 { pt3dadd( -51.0686, 27.6645, -9.65185, 0.52 ) }
    dend_2 { pt3dadd( -52.5825, 28.0386, -9.88966, 1.03 ) }
    dend_2 { pt3dadd( -53.1806, 28.2273, -9.88799, 1.33 ) }
    dend_2 { pt3dadd( -53.5958, 28.4066, -9.82249, 1.55 ) }
    dend_2 { pt3dadd( -54.0063, 28.6165, -9.73171, 1.55 ) }
    dend_2 { pt3dadd( -54.6577, 28.9807, -9.60221, 1.33 ) }
    dend_2 { pt3dadd( -55.7411, 29.6326, -9.44174, 0.74 ) }
    dend_2 { pt3dadd( -57.0249, 30.47, -9.30545, 0.59 ) }
    dend_2 { pt3dadd( -58.3061, 31.4681, -9.20288, 0.59 ) }
    dend_2 { pt3dadd( -59.1186, 32.2378, -9.17191, 0.59 ) }
    dend_2 { pt3dadd( -59.5439, 32.7398, -9.17406, 1.11 ) }
    dend_2 { pt3dadd( -60.2507, 33.8269, -9.26716, 1.55 ) }
    dend_2 { pt3dadd( -60.4938, 34.3589, -9.3548, 1.77 ) }
    dend_2 { pt3dadd( -60.9527, 36.0407, -9.59949, 0.74 ) }
    dend_2 { pt3dadd( -61.1174, 37.1121, -9.71942, 0.96 ) }
    dend_2 { pt3dadd( -61.1905, 37.938, -9.79072, 0.74 ) }
    dend_2 { pt3dadd( -61.2667, 39.1154, -9.84697, 0.52 ) }
    dend_2 { pt3dadd( -61.328, 40.0166, -9.85251, 0.44 ) }
    dend_2 { pt3dadd( -61.6608, 42.5723, -9.72394, 0.88 ) }
    dend_2 { pt3dadd( -61.7974, 43.3024, -9.68231, 1.11 ) }
    dend_2 { pt3dadd( -61.951, 43.9691, -9.66077, 1.11 ) }
    dend_2 { pt3dadd( -62.2514, 45.1464, -9.67068, 0.74 ) }
    dend_2 { pt3dadd( -62.5595, 46.1961, -9.72558, 0.44 ) }
    dend_2 { pt3dadd( -62.9446, 47.3246, -9.9165, 0.29 ) }
    dend_2 { pt3dadd( -63.431, 48.6367, -10.3209, 0.59 ) }
    dend_2 { pt3dadd( -63.7297, 49.4908, -10.5912, 0.44 ) }
    dend_2 { pt3dadd( -64.0223, 50.3773, -10.8812, 1.25 ) }
    dend_2 { pt3dadd( -64.1514, 50.8085, -11.0243, 1.25 ) }
    dend_2 { pt3dadd( -64.302, 51.3824, -11.1861, 0.81 ) }
    dend_2 { pt3dadd( -64.5208, 52.2218, -11.3641, 0.29 ) }
    dend_2 { pt3dadd( -64.8228, 53.1773, -11.4962, 0.59 ) }
    dend_2 { pt3dadd( -65.0227, 53.7307, -11.5778, 0.74 ) }
    dend_2 { pt3dadd( -65.2241, 54.2063, -11.6566, 0.88 ) }
    dend_2 { pt3dadd( -65.5081, 54.7881, -11.7638, 0.88 ) }
    dend_2 { pt3dadd( -65.9125, 55.5141, -11.9171, 0.44 ) }
    dend_2 { pt3dadd( -66.3232, 56.1945, -12.0817, 0.81 ) }
    dend_2 { pt3dadd( -66.7179, 56.821, -12.233, 0.81 ) }
    dend_2 { pt3dadd( -67.3327, 57.7717, -12.462, 0.37 ) }
    dend_2 { pt3dadd( -67.7026, 58.3404, -12.5865, 0.37 ) }
    dend_2 { pt3dadd( -68.4484, 59.4986, -12.792, 0.29 ) }
    dend_2 { pt3dadd( -69.2325, 60.7244, -12.9457, 0.29 ) }
    dend_2 { pt3dadd( -69.5432, 61.2202, -12.9877, 0.29 ) }
    dend_2 { pt3dadd( -70.0257, 62.0147, -13.0316, 0.88 ) }
    dend_2 { pt3dadd( -70.3372, 62.5652, -13.0493, 1.18 ) }
    dend_2 { pt3dadd( -70.7938, 63.4079, -13.0528, 1.18 ) }
    dend_2 { pt3dadd( -71.2306, 64.1921, -13.0116, 0.59 ) }
    dend_2 { pt3dadd( -71.678, 64.9743, -12.9244, 0.59 ) }
    dend_2 { pt3dadd( -72.1182, 65.7486, -12.8206, 0.52 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 79/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 34.962, -127.715, 22.8362, 0.29 ) }
    dend_65 { pt3dadd( 34.3614, -128.413, 22.9873, 0.29 ) }
    dend_65 { pt3dadd( 33.7272, -129.15, 23.1469, 0.15 ) }
    dend_65 { pt3dadd( 33.4292, -129.497, 23.2218, 0.15 ) }
    dend_65 { pt3dadd( 32.7874, -130.243, 23.3833, 0.44 ) }
    dend_65 { pt3dadd( 32.4062, -130.686, 23.4792, 0.44 ) }
    dend_65 { pt3dadd( 31.9057, -131.268, 23.6051, 0.74 ) }
    dend_65 { pt3dadd( 26.6527, -139.07, 24.0076, 0.74 ) }
    dend_65 { pt3dadd( 22.1806, -147.104, 26.0247, 0.74 ) }
    dend_65 { pt3dadd( 19.2401, -155.947, 27.3586, 0.74 ) }
    dend_65 { pt3dadd( 16.9283, -165.06, 27.8363, 0.74 ) }
    dend_65 { pt3dadd( 15.5574, -174.261, 26.391, 0.74 ) }
    dend_65 { pt3dadd( 15.8069, -183.189, 23.4189, 0.74 ) }
    dend_65 { pt3dadd( 16.7509, -191.684, 19.4729, 0.74 ) }
    dend_65 { pt3dadd( 17.2646, -200.552, 16.3551, 0.74 ) }
    dend_65 { pt3dadd( 16.2076, -209.57, 13.8714, 0.74 ) }
    dend_65 { pt3dadd( 15.5992, -218.182, 10.1192, 0.74 ) }
    dend_65 { pt3dadd( 15.3447, -226.772, 6.2745, 0.74 ) }
    dend_65 { pt3dadd( 14.8852, -235.923, 4.11715, 0.74 ) }
    dend_65 { pt3dadd( 13.1712, -244.981, 2.20946, 0.74 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 99/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 34.962, -127.715, 22.8362, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_64 { pt3dadd( 35.4721, -127.424, 22.7722, 0.22 ) }
    dend_64 { pt3dadd( 36.0439, -127.098, 22.7005, 0.59 ) }
    dend_64 { pt3dadd( 36.2801, -126.963, 22.6708, 0.59 ) }
    dend_64 { pt3dadd( 36.7802, -126.678, 22.6081, 0.37 ) }
    dend_64 { pt3dadd( 37.1134, -126.488, 22.5663, 0.37 ) }
    dend_64 { pt3dadd( 42.8321, -124.096, 22.6759, 0.37 ) }
    dend_64 { pt3dadd( 47.8674, -120.528, 22.0794, 0.37 ) }
    dend_64 { pt3dadd( 53.2463, -117.45, 22.2555, 0.37 ) }
    dend_64 { pt3dadd( 58.5651, -114.481, 23.4106, 0.37 ) }
    dend_64 { pt3dadd( 63.3812, -110.891, 24.945, 0.37 ) }
    dend_64 { pt3dadd( 67.72, -107.297, 27.5317, 0.37 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 11/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 4.90718, -41.7684, 23.5571, 0.52 ) }
    dend_60 { pt3dadd( 4.50242, -42.4828, 23.2106, 0.52 ) }
    dend_60 { pt3dadd( 4.13414, -43.1327, 22.8953, 0.52 ) }
    dend_60 { pt3dadd( 3.76341, -43.787, 22.578, 0.44 ) }
    dend_60 { pt3dadd( 3.503, -44.2466, 22.3551, 0.29 ) }
    dend_60 { pt3dadd( 3.27142, -44.6553, 22.1569, 0.74 ) }
    dend_60 { pt3dadd( -0.434809, -50.8696, 19.5422, 0.74 ) }
    dend_60 { pt3dadd( -4.01704, -57.1222, 16.8472, 0.74 ) }
    dend_60 { pt3dadd( -7.5334, -62.9201, 13.2128, 0.74 ) }
    dend_60 { pt3dadd( -11.6265, -68.2588, 9.47982, 0.74 ) }
    dend_60 { pt3dadd( -16.0928, -72.7021, 5.06414, 0.74 ) }
    dend_60 { pt3dadd( -21.2841, -76.3625, 0.723417, 0.74 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 23/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.90718, -41.7684, 23.5571, 0.29 ) }
    dend_59 { pt3dadd( 5.91269, -41.8686, 22.8553, 0.29 ) }
    dend_59 { pt3dadd( 7.54347, -41.9341, 21.8244, 0.29 ) }
    dend_59 { pt3dadd( 8.26276, -41.92, 21.4052, 0.44 ) }
    dend_59 { pt3dadd( 9.36184, -41.8109, 20.7834, 0.44 ) }
    dend_59 { pt3dadd( 10.2775, -41.6262, 20.2738, 0.37 ) }
    dend_59 { pt3dadd( 10.863, -41.4486, 19.9403, 0.22 ) }
    dend_59 { pt3dadd( 11.275, -41.1004, 19.7157, 0.59 ) }
    dend_59 { pt3dadd( 11.4038, -40.6041, 19.6453, 0.74 ) }
    dend_59 { pt3dadd( 11.3249, -39.4842, 19.6237, 0.22 ) }
    dend_59 { pt3dadd( 11.0447, -38.445, 19.6745, 0.22 ) }
    dend_59 { pt3dadd( 10.5307, -37.1797, 19.7703, 0.22 ) }
    dend_59 { pt3dadd( 9.89106, -35.9795, 19.8566, 0.81 ) }
    dend_59 { pt3dadd( 17.9984, -28.6181, 15.2554, 0.81 ) }
    dend_59 { pt3dadd( 25.6298, -20.2636, 11.6423, 0.81 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 38/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -18.6536, -187.1, 29.084, 0.37 ) }
    dend_47 { pt3dadd( -10.568, -191.531, 29.4097, 0.37 ) }
    dend_47 { pt3dadd( -3.09031, -196.933, 29.5544, 0.37 ) }
    dend_47 { pt3dadd( 4.82406, -201.66, 29.2007, 0.37 ) }
    dend_47 { pt3dadd( 12.5557, -206.691, 29.0239, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 43/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -18.6536, -187.1, 29.084, 0.22 ) }
    dend_42 { pt3dadd( -11.1182, -191.642, 33.1674, 0.37 ) }
    dend_42 { pt3dadd( -4.58471, -196.519, 38.423, 0.37 ) }
    dend_42 { pt3dadd( 2.226, -202.466, 41.9346, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -69.3742, -181.265, 16.6098, 0.37 ) }
    dend_39 { pt3dadd( -65.9496, -192.448, 20.0512, 0.37 ) }
    dend_39 { pt3dadd( -61.1091, -203.062, 23.591, 0.37 ) }
    dend_39 { pt3dadd( -58.5832, -214.284, 27.6302, 0.37 ) }
    dend_39 { pt3dadd( -54.4624, -225.099, 31.4623, 0.37 ) }
    dend_39 { pt3dadd( -51.8925, -235.871, 36.5622, 0.37 ) }
    dend_39 { pt3dadd( -48.0342, -246.035, 42.0783, 0.37 ) }
    dend_39 { pt3dadd( -44.4974, -255.966, 48.201, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -69.3742, -181.265, 16.6098, 0.22 ) }
    dend_36 { pt3dadd( -66.169, -190.938, 18.3706, 0.37 ) }
    dend_36 { pt3dadd( -61.62, -199.729, 21.3645, 0.37 ) }
    dend_36 { pt3dadd( -57.6353, -209.232, 22.2262, 0.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 44.9408, 293.111, -121.868, 0.37 ) }
    dend_24 { pt3dadd( 46.0603, 294.486, -122.182, 0.37 ) }
    dend_24 { pt3dadd( 46.4824, 294.921, -122.342, 0.37 ) }
    dend_24 { pt3dadd( 47.1952, 295.509, -122.665, 0.29 ) }
    dend_24 { pt3dadd( 47.7138, 295.859, -122.904, 0.29 ) }
    dend_24 { pt3dadd( 48.3983, 296.28, -123.199, 0.74 ) }
    dend_24 { pt3dadd( 49.04, 296.697, -123.461, 0.96 ) }
    dend_24 { pt3dadd( 49.5301, 297.012, -123.691, 0.52 ) }
    dend_24 { pt3dadd( 50.3241, 297.56, -124.063, 0.44 ) }
    dend_24 { pt3dadd( 51.0998, 298.145, -124.396, 0.37 ) }
    dend_24 { pt3dadd( 51.5355, 298.585, -124.561, 0.29 ) }
    dend_24 { pt3dadd( 52.0151, 299.248, -124.718, 0.29 ) }
    dend_24 { pt3dadd( 52.2965, 299.742, -124.814, 0.29 ) }
    dend_24 { pt3dadd( 52.7482, 300.536, -124.989, 0.74 ) }
    dend_24 { pt3dadd( 53.2428, 301.348, -125.209, 1.11 ) }
    dend_24 { pt3dadd( 53.7106, 302.05, -125.452, 1.11 ) }
    dend_24 { pt3dadd( 54.1584, 302.636, -125.704, 0.81 ) }
    dend_24 { pt3dadd( 55.0828, 303.698, -126.236, 0.37 ) }
    dend_24 { pt3dadd( 55.8713, 304.546, -126.696, 0.37 ) }
    dend_24 { pt3dadd( 56.3993, 305.099, -126.98, 0.37 ) }
    dend_24 { pt3dadd( 56.8501, 305.596, -127.232, 0.37 ) }
    dend_24 { pt3dadd( 57.1301, 305.927, -127.386, 1.03 ) }
    dend_24 { pt3dadd( 57.5895, 306.522, -127.613, 1.33 ) }
    dend_24 { pt3dadd( 57.8133, 306.839, -127.695, 1.33 ) }
    dend_24 { pt3dadd( 58.7402, 308.273, -127.844, 0.29 ) }
    dend_24 { pt3dadd( 59.3417, 309.254, -127.847, 0.29 ) }
    dend_24 { pt3dadd( 59.9767, 310.32, -127.789, 0.88 ) }
    dend_24 { pt3dadd( 60.3511, 310.984, -127.731, 0.88 ) }
    dend_24 { pt3dadd( 60.895, 311.987, -127.635, 0.74 ) }
    dend_24 { pt3dadd( 61.7151, 313.51, -127.543, 0.66 ) }
    dend_24 { pt3dadd( 62.0782, 314.256, -127.559, 0.74 ) }
    dend_24 { pt3dadd( 62.5085, 315.314, -127.661, 0.44 ) }
    dend_24 { pt3dadd( 62.7286, 316.103, -127.825, 0.44 ) }
    dend_24 { pt3dadd( 62.8768, 317.071, -128.15, 0.37 ) }
    dend_24 { pt3dadd( 62.9462, 318.646, -128.849, 0.37 ) }
    dend_24 { pt3dadd( 62.9364, 319.948, -129.547, 0.37 ) }
    dend_24 { pt3dadd( 62.8856, 321.023, -130.173, 0.37 ) }
    dend_24 { pt3dadd( 62.7296, 322.292, -130.951, 1.77 ) }
    dend_24 { pt3dadd( 62.5732, 323.005, -131.395, 1.77 ) }
    dend_24 { pt3dadd( 62.3505, 323.598, -131.749, 1.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 44.9408, 293.111, -121.868, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_17 { pt3dadd( 44.1269, 294.305, -125.056, 1.11 ) }
    dend_17 { pt3dadd( 43.4229, 295.328, -128.33, 0.74 ) }
    dend_17 { pt3dadd( 43.131, 295.64, -129.926, 0.29 ) }
    dend_17 { pt3dadd( 42.7603, 295.925, -131.699, 0.44 ) }
    dend_17 { pt3dadd( 42.2855, 296.281, -133.594, 0.37 ) }
    dend_17 { pt3dadd( 41.6533, 296.835, -135.977, 0.74 ) }
    dend_17 { pt3dadd( 41.3905, 297.16, -136.932, 0.88 ) }
    dend_17 { pt3dadd( 40.8275, 297.95, -139.268, 0.29 ) }
    dend_17 { pt3dadd( 40.4391, 298.555, -141.189, 0.44 ) }
    dend_17 { pt3dadd( 40.1902, 299.189, -143.138, 0.29 ) }
    dend_17 { pt3dadd( 40.0641, 299.606, -144.32, 0.96 ) }
    dend_17 { pt3dadd( 40.0062, 300.046, -145.267, 1.25 ) }
    dend_17 { pt3dadd( 40.0022, 300.355, -145.873, 1.25 ) }
    dend_17 { pt3dadd( 40.2031, 301.649, -148.214, 0.37 ) }
    dend_17 { pt3dadd( 40.424, 302.283, -149.429, 0.74 ) }
    dend_17 { pt3dadd( 41.0285, 303.475, -151.921, 0.88 ) }
    dend_17 { pt3dadd( 41.2548, 303.865, -152.766, 1.11 ) }
    dend_17 { pt3dadd( 41.6161, 304.444, -153.957, 0.52 ) }
    dend_17 { pt3dadd( 41.8991, 304.869, -154.744, 0.52 ) }
    dend_17 { pt3dadd( 42.2677, 305.379, -155.565, 0.29 ) }
    dend_17 { pt3dadd( 42.6071, 305.8, -156.252, 0.29 ) }
    dend_17 { pt3dadd( 43.243, 306.413, -157.303, 1.25 ) }
    dend_17 { pt3dadd( 43.3928, 306.551, -157.564, 1.55 ) }
    dend_17 { pt3dadd( 43.6588, 306.788, -158.042, 1.55 ) }
    dend_17 { pt3dadd( 44.3318, 307.351, -159.269, 0.37 ) }
    dend_17 { pt3dadd( 45.1298, 307.925, -160.65, 0.44 ) }
    dend_17 { pt3dadd( 45.8243, 308.343, -161.747, 0.81 ) }
    dend_17 { pt3dadd( 45.9945, 308.416, -161.981, 1.11 ) }
    dend_17 { pt3dadd( 46.5582, 308.63, -162.726, 1.11 ) }
    dend_17 { pt3dadd( 47.5983, 308.944, -163.989, 0.29 ) }
    dend_17 { pt3dadd( 48.5983, 309.147, -165.015, 0.37 ) }
    dend_17 { pt3dadd( 49.295, 309.188, -165.653, 0.37 ) }
    dend_17 { pt3dadd( 50.0498, 309.146, -166.34, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -71.5678, 107.082, -132.581, 0.44 ) }
    dend_7 { pt3dadd( -70.5924, 107.89, -133.047, 0.44 ) }
    dend_7 { pt3dadd( -69.7507, 108.625, -133.627, 0.29 ) }
    dend_7 { pt3dadd( -69.2897, 109.074, -134.036, 0.44 ) }
    dend_7 { pt3dadd( -68.7851, 109.643, -134.563, 0.44 ) }
    dend_7 { pt3dadd( -68.461, 110.069, -134.943, 0.81 ) }
    dend_7 { pt3dadd( -68.0487, 110.679, -135.486, 0.81 ) }
    dend_7 { pt3dadd( -67.6536, 111.392, -136.228, 0.52 ) }
    dend_7 { pt3dadd( -67.5117, 111.839, -136.741, 0.37 ) }
    dend_7 { pt3dadd( -67.4366, 112.311, -137.294, 0.37 ) }
    dend_7 { pt3dadd( -67.4037, 112.778, -137.859, 0.81 ) }
    dend_7 { pt3dadd( -67.372, 113.209, -138.375, 0.88 ) }
    dend_7 { pt3dadd( -67.2639, 113.888, -139.164, 0.88 ) }
    dend_7 { pt3dadd( -66.9907, 114.57, -140.061, 0.52 ) }
    dend_7 { pt3dadd( -66.7883, 114.826, -140.495, 0.81 ) }
    dend_7 { pt3dadd( -66.137, 115.29, -141.52, 0.52 ) }
    dend_7 { pt3dadd( -65.6774, 115.509, -142.088, 0.52 ) }
    dend_7 { pt3dadd( -65.0178, 115.75, -142.73, 0.52 ) }
    dend_7 { pt3dadd( -63.6108, 116.178, -143.876, 0.52 ) }
    dend_7 { pt3dadd( -62.9067, 116.365, -144.463, 0.52 ) }
    dend_7 { pt3dadd( -62.2555, 116.513, -145.035, 0.81 ) }
    dend_7 { pt3dadd( -61.7665, 116.626, -145.473, 1.03 ) }
    dend_7 { pt3dadd( -61.2822, 116.745, -145.924, 0.59 ) }
    dend_7 { pt3dadd( -60.3021, 117.04, -146.862, 0.66 ) }
    dend_7 { pt3dadd( -58.6768, 117.706, -148.397, 0.52 ) }
    dend_7 { pt3dadd( -58.0666, 118.011, -148.984, 0.52 ) }
    dend_7 { pt3dadd( -57.371, 118.427, -149.719, 1.11 ) }
    dend_7 { pt3dadd( -57.0477, 118.681, -150.095, 1.11 ) }
    dend_7 { pt3dadd( -56.7853, 118.915, -150.409, 1.25 ) }
    dend_7 { pt3dadd( -56.299, 119.507, -150.973, 0.66 ) }
    dend_7 { pt3dadd( -55.9433, 120.265, -151.382, 0.44 ) }
    dend_7 { pt3dadd( -55.7822, 120.917, -151.684, 0.44 ) }
    dend_7 { pt3dadd( -55.7222, 122.009, -152.178, 0.81 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -71.5678, 107.082, -132.581, 0.44 ) }
    dend_6 { pt3dadd( -72.4923, 107.739, -134.154, 0.44 ) }
    dend_6 { pt3dadd( -72.9249, 108.009, -134.868, 0.37 ) }
    dend_6 { pt3dadd( -73.4057, 108.3, -135.65, 0.37 ) }
    dend_6 { pt3dadd( -73.8107, 108.551, -136.242, 0.88 ) }
    dend_6 { pt3dadd( -74.2739, 108.849, -136.856, 0.88 ) }
    dend_6 { pt3dadd( -75.0942, 109.364, -137.818, 0.59 ) }
    dend_6 { pt3dadd( -75.8754, 109.877, -138.656, 0.22 ) }
    dend_6 { pt3dadd( -76.3484, 110.143, -139.17, 0.66 ) }
    dend_6 { pt3dadd( -77.0386, 110.482, -139.912, 0.37 ) }
    dend_6 { pt3dadd( -77.4296, 110.669, -140.327, 0.29 ) }
    dend_6 { pt3dadd( -78.1384, 111.018, -141.185, 0.29 ) }
    dend_6 { pt3dadd( -78.8361, 111.399, -142.243, 0.66 ) }
    dend_6 { pt3dadd( -79.5634, 111.821, -143.695, 1.03 ) }
    dend_6 { pt3dadd( -79.7511, 111.939, -144.134, 1.33 ) }
    dend_6 { pt3dadd( -79.8732, 112.021, -144.455, 1.33 ) }
    dend_6 { pt3dadd( -80.3944, 112.4, -145.918, 0.44 ) }
    dend_6 { pt3dadd( -80.9151, 112.786, -147.441, 0.29 ) }
    dend_6 { pt3dadd( -81.2237, 113.032, -148.362, 0.59 ) }
    dend_6 { pt3dadd( -81.4757, 113.235, -149.141, 0.59 ) }
    dend_6 { pt3dadd( -81.6043, 113.345, -149.57, 0.88 ) }
    dend_6 { pt3dadd( -81.8284, 113.541, -150.321, 0.88 ) }
    dend_6 { pt3dadd( -82.444, 114.029, -152.128, 0.29 ) }
    dend_6 { pt3dadd( -82.636, 114.206, -152.758, 0.29 ) }
    dend_6 { pt3dadd( -82.7761, 114.36, -153.289, 0.29 ) }
    dend_6 { pt3dadd( -82.9736, 114.595, -154.129, 0.96 ) }
    dend_6 { pt3dadd( -83.1205, 114.782, -154.735, 0.96 ) }
    dend_6 { pt3dadd( -83.6079, 115.442, -156.454, 0.29 ) }
    dend_6 { pt3dadd( -83.9218, 115.86, -157.283, 0.29 ) }
    dend_6 { pt3dadd( -84.0786, 116.036, -157.594, 0.29 ) }
    dend_6 { pt3dadd( -84.4077, 116.408, -158.153, 0.29 ) }
    dend_6 { pt3dadd( -84.6972, 116.743, -158.606, 0.29 ) }
    dend_6 { pt3dadd( -85.0085, 117.14, -159.093, 0.81 ) }
    dend_6 { pt3dadd( -85.2631, 117.49, -159.508, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -85.9016, 118.328, -160.613, 0.29 ) }
    dend_6 { pt3dadd( -86.2301, 118.763, -161.208, 0.59 ) }
    dend_6 { pt3dadd( -86.4712, 119.1, -161.663, 0.59 ) }
    dend_6 { pt3dadd( -86.7187, 119.46, -162.138, 0.29 ) }
    dend_6 { pt3dadd( -87.0972, 120.042, -162.901, 0.29 ) }
    dend_6 { pt3dadd( -87.3422, 120.477, -163.471, 0.29 ) }
    dend_6 { pt3dadd( -87.5935, 120.979, -164.103, 0.29 ) }
    dend_6 { pt3dadd( -87.8021, 121.377, -164.632, 0.29 ) }
    dend_6 { pt3dadd( -88.0562, 121.894, -165.293, 0.29 ) }
    dend_6 { pt3dadd( -88.1738, 122.152, -165.592, 0.29 ) }
    dend_6 { pt3dadd( -88.4874, 122.859, -166.332, 0.88 ) }
    dend_6 { pt3dadd( -88.6099, 123.179, -166.65, 1.11 ) }
    dend_6 { pt3dadd( -88.9498, 124.35, -167.804, 0.29 ) }
    dend_6 { pt3dadd( -89.0663, 124.785, -168.273, 0.59 ) }
    dend_6 { pt3dadd( -89.2234, 125.344, -168.93, 0.29 ) }
    dend_6 { pt3dadd( -89.3186, 125.624, -169.264, 0.29 ) }
    dend_6 { pt3dadd( -89.4647, 126.068, -169.76, 0.29 ) }
    dend_6 { pt3dadd( -89.5669, 126.443, -170.154, 0.29 ) }
    dend_6 { pt3dadd( -89.8201, 127.272, -171.028, 0.66 ) }
    dend_6 { pt3dadd( -90.0054, 127.66, -171.478, 0.66 ) }
    dend_6 { pt3dadd( -90.4311, 128.373, -172.47, 0.37 ) }
    dend_6 { pt3dadd( -90.7033, 128.775, -173.085, 0.37 ) }
    dend_6 { pt3dadd( -91.1567, 129.299, -173.926, 0.37 ) }
    dend_6 { pt3dadd( -91.7167, 129.862, -174.823, 0.37 ) }
    dend_6 { pt3dadd( -92.2915, 130.444, -175.653, 0.37 ) }
    dend_6 { pt3dadd( -93.1514, 131.295, -176.825, 0.29 ) }
    dend_6 { pt3dadd( -93.4078, 131.525, -177.167, 0.29 ) }
    dend_6 { pt3dadd( -94.0724, 132.054, -178.025, 0.29 ) }
    dend_6 { pt3dadd( -94.3818, 132.292, -178.424, 0.29 ) }
    dend_6 { pt3dadd( -95.0107, 132.906, -179.29, 1.4 ) }
    dend_6 { pt3dadd( -95.14, 133.071, -179.471, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 12.5557, -206.691, 29.0239, 0.37 ) }
    dend_49 { pt3dadd( 19.3658, -212.132, 26.3276, 0.37 ) }
    dend_49 { pt3dadd( 25.4181, -218.233, 23.2603, 0.37 ) }
    dend_49 { pt3dadd( 31.9049, -223.789, 20.0504, 0.37 ) }
    dend_49 { pt3dadd( 37.5462, -229.794, 16.1306, 0.37 ) }
    dend_49 { pt3dadd( 43.247, -236.22, 13.0539, 0.37 ) }
    dend_49 { pt3dadd( 49.2354, -241.542, 8.68739, 0.37 ) }
    dend_49 { pt3dadd( 54.0019, -247.147, 3.29042, 0.37 ) }
    dend_49 { pt3dadd( 59.1328, -253.57, -0.667776, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 12.5557, -206.691, 29.0239, 0.22 ) }
    dend_48 { pt3dadd( 19.7442, -211.356, 28.3706, 0.37 ) }
    dend_48 { pt3dadd( 27.5742, -214.898, 28.3745, 0.37 ) }
    dend_48 { pt3dadd( 35.1528, -218.683, 26.9248, 0.37 ) }
    dend_48 { pt3dadd( 42.9072, -221.416, 24.4226, 0.37 ) }
    dend_48 { pt3dadd( 50.2307, -225.007, 21.7152, 0.37 ) }
    dend_48 { pt3dadd( 57.6576, -229.068, 20.2282, 0.37 ) }
    dend_48 { pt3dadd( 64.5715, -234.169, 20.4366, 0.37 ) }
    dend_48 { pt3dadd( 71.5383, -239.149, 19.7132, 0.37 ) }
    dend_48 { pt3dadd( 79.5613, -242.22, 19.9559, 0.37 ) }
    dend_48 { pt3dadd( 87.1666, -246.093, 20.9695, 0.37 ) }
    dend_48 { pt3dadd( 95.1999, -248.074, 23.2938, 0.37 ) }
    dend_48 { pt3dadd( 103.282, -249.329, 25.9351, 0.37 ) }
    dend_48 { pt3dadd( 110.926, -249.199, 29.8613, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 54/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 2.226, -202.466, 41.9346, 0.37 ) }
    dend_46 { pt3dadd( 8.48438, -207.123, 46.5158, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.226, -202.466, 41.9346, 0.22 ) }
    dend_43 { pt3dadd( 9.11498, -207.386, 44.9584, 0.37 ) }
    dend_43 { pt3dadd( 15.432, -212.417, 48.9052, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 59/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -57.6353, -209.232, 22.2262, 0.37 ) }
    dend_38 { pt3dadd( -53.2516, -220.035, 21.3737, 0.37 ) }
    dend_38 { pt3dadd( -45.9738, -229.181, 21.2709, 0.37 ) }
    dend_38 { pt3dadd( -38.6593, -238.244, 22.2624, 0.37 ) }
    dend_38 { pt3dadd( -30.8927, -246.905, 23.4061, 0.37 ) }
    dend_38 { pt3dadd( -22.1967, -254.081, 26.4901, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -57.6353, -209.232, 22.2262, 0.22 ) }
    dend_37 { pt3dadd( -53.3495, -220.781, 20.7825, 0.37 ) }
    dend_37 { pt3dadd( -50.3501, -232.447, 17.8265, 0.37 ) }
    dend_37 { pt3dadd( -48.3684, -244.631, 16.6235, 0.37 ) }
    dend_37 { pt3dadd( -47.2989, -256.944, 15.5798, 0.37 ) }
    dend_37 { pt3dadd( -44.0434, -268.911, 15.7076, 0.37 ) }
    dend_37 { pt3dadd( -39.5258, -280.313, 17.556, 0.37 ) }
    dend_37 { pt3dadd( -35.0256, -291.141, 21.5957, 0.37 ) }
    dend_37 { pt3dadd( -32.0408, -301.902, 26.992, 0.37 ) }
    dend_37 { pt3dadd( -30.2901, -311.739, 34.3404, 0.37 ) }
    dend_37 { pt3dadd( -30.6528, -322.276, 40.8722, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 62.3505, 323.598, -131.749, 0.29 ) }
    dend_28 { pt3dadd( 62.4179, 325.707, -134.863, 0.29 ) }
    dend_28 { pt3dadd( 62.466, 326.477, -135.882, 0.29 ) }
    dend_28 { pt3dadd( 62.5144, 327.201, -136.669, 0.29 ) }
    dend_28 { pt3dadd( 62.5433, 327.744, -137.156, 0.29 ) }
    dend_28 { pt3dadd( 62.5778, 328.787, -137.969, 0.74 ) }
    dend_28 { pt3dadd( 62.5886, 329.125, -138.202, 0.74 ) }
    dend_28 { pt3dadd( 62.6688, 330.649, -138.93, 0.22 ) }
    dend_28 { pt3dadd( 62.7257, 332.042, -139.588, 0.22 ) }
    dend_28 { pt3dadd( 62.7166, 333.235, -140.101, 0.22 ) }
    dend_28 { pt3dadd( 62.699, 333.937, -140.37, 0.52 ) }
    dend_28 { pt3dadd( 62.695, 335.097, -140.732, 0.22 ) }
    dend_28 { pt3dadd( 62.6924, 335.564, -140.861, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 89/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 62.3505, 323.598, -131.749, 0.44 ) }
    dend_25 { pt3dadd( 62.348, 324.927, -131.217, 0.44 ) }
    dend_25 { pt3dadd( 62.4055, 325.933, -130.869, 0.44 ) }
    dend_25 { pt3dadd( 62.474, 327.014, -130.526, 0.44 ) }
    dend_25 { pt3dadd( 62.521, 327.741, -130.312, 0.44 ) }
    dend_25 { pt3dadd( 62.5618, 328.614, -130.077, 0.37 ) }
    dend_25 { pt3dadd( 62.5769, 329.126, -129.95, 0.37 ) }
    dend_25 { pt3dadd( 62.6796, 330.049, -129.704, 0.88 ) }
    dend_25 { pt3dadd( 62.7257, 330.393, -129.636, 1.47 ) }
    dend_25 { pt3dadd( 62.757, 330.762, -129.593, 1.47 ) }
    dend_25 { pt3dadd( 62.7644, 331.729, -129.517, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( 62.7065, 332.272, -129.471, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 50.0498, 309.146, -166.34, 0.29 ) }
    dend_23 { pt3dadd( 50.2827, 309.445, -166.638, 0.29 ) }
    dend_23 { pt3dadd( 50.6271, 309.854, -167.12, 0.81 ) }
    dend_23 { pt3dadd( 50.8731, 310.111, -167.476, 0.81 ) }
    dend_23 { pt3dadd( 51.2052, 310.405, -167.989, 0.22 ) }
    dend_23 { pt3dadd( 51.3883, 310.547, -168.295, 0.59 ) }
    dend_23 { pt3dadd( 51.9904, 310.945, -169.325, 0.22 ) }
    dend_23 { pt3dadd( 52.3854, 311.159, -170.062, 0.81 ) }
    dend_23 { pt3dadd( 52.5751, 311.253, -170.458, 0.81 ) }
    dend_23 { pt3dadd( 52.9148, 311.442, -171.279, 0.29 ) }
    dend_23 { pt3dadd( 53.2476, 311.679, -172.182, 0.29 ) }
    dend_23 { pt3dadd( 53.5888, 312.012, -173.213, 0.22 ) }
    dend_23 { pt3dadd( 53.7821, 312.258, -173.83, 0.22 ) }
    dend_23 { pt3dadd( 53.9861, 312.66, -174.645, 0.81 ) }
    dend_23 { pt3dadd( 54.2039, 313.261, -175.626, 0.22 ) }
    dend_23 { pt3dadd( 54.3344, 313.777, -176.297, 0.22 ) }
    dend_23 { pt3dadd( 54.4276, 314.299, -176.891, 0.44 ) }
    dend_23 { pt3dadd( 54.4701, 314.703, -177.289, 0.15 ) }
    dend_23 { pt3dadd( 54.507, 315.081, -177.62, 0.22 ) }
    dend_23 { pt3dadd( 54.5656, 315.687, -178.077, 0.15 ) }
    dend_23 { pt3dadd( 54.6264, 316.112, -178.365, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 50.0498, 309.146, -166.34, 0.22 ) }
    dend_18 { pt3dadd( 51.1202, 309.683, -167.728, 0.22 ) }
    dend_18 { pt3dadd( 51.5168, 309.882, -168.242, 0.81 ) }
    dend_18 { pt3dadd( 51.9449, 310.097, -168.797, 0.52 ) }
    dend_18 { pt3dadd( 52.8316, 310.542, -169.947, 1.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -55.7222, 122.009, -152.178, 0.37 ) }
    dend_9 { pt3dadd( -54.9651, 123.099, -153.287, 0.37 ) }
    dend_9 { pt3dadd( -54.4437, 123.979, -154.286, 0.37 ) }
    dend_9 { pt3dadd( -54.0474, 124.647, -155.045, 0.37 ) }
    dend_9 { pt3dadd( -53.626, 125.358, -155.852, 0.81 ) }
    dend_9 { pt3dadd( -53.4302, 125.688, -156.227, 0.81 ) }
    dend_9 { pt3dadd( -52.9238, 126.543, -157.197, 0.52 ) }
    dend_9 { pt3dadd( -52.6962, 127.248, -158.004, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -55.7222, 122.009, -152.178, 0.29 ) }
    dend_8 { pt3dadd( -55.4699, 123.164, -152.701, 0.29 ) }
    dend_8 { pt3dadd( -55.2894, 123.99, -153.075, 0.88 ) }
    dend_8 { pt3dadd( -55.0952, 124.879, -153.478, 0.29 ) }
    dend_8 { pt3dadd( -54.954, 125.525, -153.771, 0.88 ) }
    dend_8 { pt3dadd( -54.7914, 126.27, -154.108, 0.88 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 15.432, -212.417, 48.9052, 0.37 ) }
    dend_45 { pt3dadd( 22.7747, -217.745, 51.1363, 0.37 ) }
    dend_45 { pt3dadd( 30.2059, -223.169, 52.7585, 0.37 ) }
    dend_45 { pt3dadd( 36.4106, -229.862, 54.7542, 0.37 ) }
    dend_45 { pt3dadd( 42.2612, -236.856, 56.7869, 0.37 ) }
    dend_45 { pt3dadd( 47.4767, -244.089, 59.5723, 0.37 ) }
    dend_45 { pt3dadd( 52.2772, -250.853, 63.8721, 0.37 ) }
    dend_45 { pt3dadd( 57.2257, -257.342, 68.4192, 0.37 ) }
    dend_45 { pt3dadd( 61.4419, -263.49, 74.0504, 0.37 ) }
    dend_45 { pt3dadd( 66.1236, -269.448, 79.5143, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 51/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 15.432, -212.417, 48.9052, 0.22 ) }
    dend_44 { pt3dadd( 24.8261, -219.747, 55.4023, 0.37 ) }
    dend_44 { pt3dadd( 33.0041, -229.028, 60.9841, 0.37 ) }
    dend_44 { pt3dadd( 41.5858, -237.848, 66.7063, 0.37 ) }
    dend_44 { pt3dadd( 49.8177, -246.433, 73.2434, 0.37 ) }
    dend_44 { pt3dadd( 59.1711, -254.21, 79.2612, 0.37 ) }
    dend_44 { pt3dadd( 68.816, -260.062, 86.8051, 0.37 ) }
    dend_44 { pt3dadd( 76.7498, -265.696, 96.2657, 0.37 ) }
    dend_44 { pt3dadd( 84.3586, -268.636, 107.112, 0.37 ) }
    dend_44 { pt3dadd( 91.0954, -268.994, 118.888, 0.37 ) }
    dend_44 { pt3dadd( 96.6664, -270.896, 131.116, 0.37 ) }
    dend_44 { pt3dadd( 102.773, -274.471, 142.697, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 62.7065, 332.272, -129.471, 0.29 ) }
    dend_27 { pt3dadd( 62.2046, 333.623, -129.162, 0.29 ) }
    dend_27 { pt3dadd( 61.8431, 334.512, -128.933, 0.29 ) }
    dend_27 { pt3dadd( 61.6094, 335.073, -128.783, 0.66 ) }
    dend_27 { pt3dadd( 61.5304, 335.27, -128.732, 0.66 ) }
    dend_27 { pt3dadd( 61.2783, 335.996, -128.573, 0.22 ) }
    dend_27 { pt3dadd( 61.0298, 336.82, -128.423, 0.22 ) }
    dend_27 { pt3dadd( 60.8762, 337.457, -128.336, 0.22 ) }
    dend_27 { pt3dadd( 60.8137, 337.814, -128.308, 0.59 ) }
    dend_27 { pt3dadd( 60.7751, 338.259, -128.306, 0.59 ) }
    dend_27 { pt3dadd( 60.7418, 339.229, -128.345, 0.29 ) }
    dend_27 { pt3dadd( 60.7642, 339.884, -128.379, 0.88 ) }
    dend_27 { pt3dadd( 60.8025, 340.458, -128.409, 0.88 ) }
    dend_27 { pt3dadd( 60.9333, 342.224, -128.501, 0.29 ) }
    dend_27 { pt3dadd( 61.0039, 343.136, -128.544, 0.29 ) }
    dend_27 { pt3dadd( 61.0439, 343.662, -128.563, 0.59 ) }
    dend_27 { pt3dadd( 61.1723, 345.302, -128.588, 0.29 ) }
    dend_27 { pt3dadd( 61.2485, 346.117, -128.589, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 81/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 62.7065, 332.272, -129.471, 0.29 ) }
    dend_26 { pt3dadd( 62.8016, 333.815, -129.61, 0.29 ) }
    dend_26 { pt3dadd( 63.0735, 335.28, -129.736, 0.29 ) }
    dend_26 { pt3dadd( 63.3224, 336.314, -129.833, 0.29 ) }
    dend_26 { pt3dadd( 63.7716, 337.991, -130.023, 0.29 ) }
    dend_26 { pt3dadd( 64.0219, 338.879, -130.134, 0.29 ) }
    dend_26 { pt3dadd( 64.4317, 340.29, -130.325, 0.29 ) }
    dend_26 { pt3dadd( 64.9017, 341.828, -130.538, 1.03 ) }
    dend_26 { pt3dadd( 65.3196, 342.986, -130.695, 1.69 ) }
    dend_26 { pt3dadd( 65.9492, 344.521, -130.916, 0.22 ) }
    dend_26 { pt3dadd( 66.2672, 345.244, -131.028, 0.52 ) }
    dend_26 { pt3dadd( 66.4333, 345.626, -131.086, 0.59 ) }
    dend_26 { pt3dadd( 66.9162, 346.756, -131.187, 0.22 ) }
    dend_26 { pt3dadd( 67.4191, 347.855, -131.208, 0.52 ) }
    dend_26 { pt3dadd( 67.7678, 348.502, -131.142, 0.66 ) }
    dend_26 { pt3dadd( 68.3039, 349.325, -130.935, 0.22 ) }
    dend_26 { pt3dadd( 68.6774, 349.81, -130.784, 0.22 ) }
    dend_26 { pt3dadd( 69.9216, 351.235, -130.318, 0.66 ) }
    dend_26 { pt3dadd( 70.6584, 351.958, -130.058, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_26 { pt3dadd( 71.511, 352.675, -129.804, 1.03 ) }
    dend_26 { pt3dadd( 72.7328, 353.682, -129.491, 0.29 ) }
    dend_26 { pt3dadd( 73.5047, 354.348, -129.319, 0.37 ) }
    dend_26 { pt3dadd( 74.1177, 354.942, -129.207, 0.37 ) }
    dend_26 { pt3dadd( 74.9831, 355.867, -129.136, 0.29 ) }
    dend_26 { pt3dadd( 75.6569, 356.595, -129.135, 0.29 ) }
    dend_26 { pt3dadd( 76.2712, 357.291, -129.163, 0.29 ) }
    dend_26 { pt3dadd( 76.7695, 357.983, -129.21, 0.66 ) }
    dend_26 { pt3dadd( 77.1643, 358.669, -129.231, 0.66 ) }
    dend_26 { pt3dadd( 77.6759, 359.819, -129.215, 0.29 ) }
    dend_26 { pt3dadd( 77.9438, 360.741, -129.184, 0.29 ) }
    dend_26 { pt3dadd( 78.0676, 361.354, -129.152, 0.29 ) }
    dend_26 { pt3dadd( 78.2313, 362.46, -129.103, 0.66 ) }
    dend_26 { pt3dadd( 78.3132, 363.204, -129.064, 0.74 ) }
    dend_26 { pt3dadd( 78.4232, 365.096, -129.057, 0.29 ) }
    dend_26 { pt3dadd( 78.451, 366.632, -129.114, 0.29 ) }
    dend_26 { pt3dadd( 78.4411, 367.85, -129.23, 0.88 ) }
    dend_26 { pt3dadd( 78.4335, 368.402, -129.32, 1.03 ) }
    dend_26 { pt3dadd( 78.4293, 369.411, -129.571, 0.74 ) }
    dend_26 { pt3dadd( 78.4313, 371.058, -130.126, 0.29 ) }
    dend_26 { pt3dadd( 78.395, 371.869, -130.517, 0.59 ) }
    dend_26 { pt3dadd( 78.3072, 372.874, -131.09, 0.29 ) }
    dend_26 { pt3dadd( 78.1687, 373.736, -131.622, 0.59 ) }
    dend_26 { pt3dadd( 78.0317, 374.3, -131.994, 0.29 ) }
    dend_26 { pt3dadd( 77.7909, 375.052, -132.482, 0.81 ) }
    dend_26 { pt3dadd( 77.2429, 376.662, -133.394, 0.29 ) }
    dend_26 { pt3dadd( 76.8739, 377.675, -133.922, 0.29 ) }
    dend_26 { pt3dadd( 76.5752, 378.486, -134.322, 0.29 ) }
    dend_26 { pt3dadd( 76.1866, 379.524, -134.835, 0.22 ) }
    dend_26 { pt3dadd( 75.5247, 381.344, -135.681, 0.22 ) }
    dend_26 { pt3dadd( 74.6926, 383.726, -136.66, 0.22 ) }
    dend_26 { pt3dadd( 74.0326, 385.712, -137.405, 0.22 ) }
    dend_26 { pt3dadd( 73.4495, 387.538, -138.053, 0.74 ) }
    dend_26 { pt3dadd( 73.1784, 388.434, -138.354, 0.96 ) }
    dend_26 { pt3dadd( 72.6658, 390.231, -138.914, 0.22 ) }
    dend_26 { pt3dadd( 72.1363, 392.046, -139.472, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 52.8316, 310.542, -169.947, 0.22 ) }
    dend_22 { pt3dadd( 52.7611, 311.8, -170.092, 0.22 ) }
    dend_22 { pt3dadd( 52.7349, 312.268, -170.146, 0.37 ) }
    dend_22 { pt3dadd( 52.6831, 313.191, -170.252, 0.22 ) }
    dend_22 { pt3dadd( 52.6443, 313.884, -170.331, 0.22 ) }
    dend_22 { pt3dadd( 52.5937, 314.787, -170.435, 0.22 ) }
    dend_22 { pt3dadd( 52.5399, 315.746, -170.546, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 43/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 52.8316, 310.542, -169.947, 0.22 ) }
    dend_19 { pt3dadd( 53.3222, 309.733, -172.176, 0.22 ) }
    dend_19 { pt3dadd( 53.4982, 309.443, -172.976, 0.22 ) }
    dend_19 { pt3dadd( 53.7029, 309.105, -173.907, 0.52 ) }
    dend_19 { pt3dadd( 53.9383, 308.717, -174.976, 1.11 ) }
    dend_19 { pt3dadd( 54.1684, 308.337, -176.022, 0.81 ) }
    dend_19 { pt3dadd( 54.4193, 307.923, -177.162, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -52.6962, 127.248, -158.004, 0.59 ) }
    dend_11 { pt3dadd( -52.5312, 128.454, -158.732, 0.59 ) }
    dend_11 { pt3dadd( -52.4846, 128.796, -158.981, 0.88 ) }
    dend_11 { pt3dadd( -52.408, 129.461, -159.486, 0.29 ) }
    dend_11 { pt3dadd( -52.353, 129.979, -159.884, 0.29 ) }
    dend_11 { pt3dadd( -52.3046, 130.52, -160.288, 0.37 ) }
    dend_11 { pt3dadd( -52.2665, 131.027, -160.655, 0.37 ) }
    dend_11 { pt3dadd( -52.2131, 131.966, -161.276, 0.29 ) }
    dend_11 { pt3dadd( -52.2111, 132.374, -161.556, 0.29 ) }
    dend_11 { pt3dadd( -52.2191, 133.063, -162.044, 0.29 ) }
    dend_11 { pt3dadd( -52.2105, 133.532, -162.382, 0.96 ) }
    dend_11 { pt3dadd( -52.1995, 133.857, -162.607, 0.96 ) }
    dend_11 { pt3dadd( -52.1773, 134.193, -162.825, 0.74 ) }
    dend_11 { pt3dadd( -52.0876, 135.005, -163.293, 0.29 ) }
    dend_11 { pt3dadd( -51.9993, 135.703, -163.708, 0.29 ) }
    dend_11 { pt3dadd( -51.9337, 136.167, -163.985, 0.29 ) }
    dend_11 { pt3dadd( -51.839, 136.709, -164.303, 0.74 ) }
    dend_11 { pt3dadd( -51.7959, 136.929, -164.427, 0.74 ) }
    dend_11 { pt3dadd( -51.7327, 137.221, -164.584, 0.44 ) }
    dend_11 { pt3dadd( -51.5923, 137.928, -164.938, 0.29 ) }
    dend_11 { pt3dadd( -51.5059, 138.491, -165.196, 0.29 ) }
    dend_11 { pt3dadd( -51.3102, 139.67, -165.69, 0.29 ) }
    dend_11 { pt3dadd( -51.2027, 140.197, -165.897, 0.96 ) }
    dend_11 { pt3dadd( -51.1011, 140.577, -166.031, 0.59 ) }
    dend_11 { pt3dadd( -50.9246, 141.083, -166.188, 0.29 ) }
    dend_11 { pt3dadd( -50.6267, 141.798, -166.373, 0.22 ) }
    dend_11 { pt3dadd( -50.311, 142.487, -166.523, 0.22 ) }
    dend_11 { pt3dadd( -50.1142, 142.884, -166.593, 0.22 ) }
    dend_11 { pt3dadd( -49.8245, 143.502, -166.712, 0.22 ) }
    dend_11 { pt3dadd( -49.579, 144.052, -166.841, 0.22 ) }
    dend_11 { pt3dadd( -49.3443, 144.556, -166.998, 0.81 ) }
    dend_11 { pt3dadd( -49.2837, 144.689, -167.055, 1.18 ) }
    dend_11 { pt3dadd( -49.1683, 144.998, -167.239, 1.18 ) }
    dend_11 { pt3dadd( -48.9627, 145.684, -167.736, 0.29 ) }
    dend_11 { pt3dadd( -48.8661, 146.044, -168.043, 0.29 ) }
    dend_11 { pt3dadd( -48.7364, 146.46, -168.44, 0.66 ) }
    dend_11 { pt3dadd( -48.6813, 146.599, -168.582, 0.66 ) }
    dend_11 { pt3dadd( -48.4371, 147.162, -169.229, 0.37 ) }
    dend_11 { pt3dadd( -48.3034, 147.488, -169.623, 0.37 ) }
    dend_11 { pt3dadd( -48.1994, 147.831, -170.019, 0.37 ) }
    dend_11 { pt3dadd( -48.1612, 148.111, -170.33, 0.74 ) }
    dend_11 { pt3dadd( -48.156, 148.41, -170.658, 0.74 ) }
    dend_11 { pt3dadd( -48.1672, 149.046, -171.366, 0.29 ) }
    dend_11 { pt3dadd( -48.1648, 149.434, -171.819, 0.29 ) }
    dend_11 { pt3dadd( -48.1599, 149.917, -172.448, 0.29 ) }
    dend_11 { pt3dadd( -48.1535, 150.395, -173.092, 0.88 ) }
    dend_11 { pt3dadd( -48.1434, 150.665, -173.45, 0.88 ) }
    dend_11 { pt3dadd( -48.1185, 151.043, -173.944, 0.29 ) }
    dend_11 { pt3dadd( -48.0616, 151.524, -174.524, 0.29 ) }
    dend_11 { pt3dadd( -48.0253, 151.768, -174.822, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_11 { pt3dadd( -47.9767, 152.192, -175.299, 0.74 ) }
    dend_11 { pt3dadd( -47.9584, 152.476, -175.577, 0.74 ) }
    dend_11 { pt3dadd( -47.9403, 153.057, -176.095, 0.37 ) }
    dend_11 { pt3dadd( -47.9345, 153.543, -176.5, 0.59 ) }
    dend_11 { pt3dadd( -47.9308, 153.891, -176.774, 0.59 ) }
    dend_11 { pt3dadd( -47.9034, 154.38, -177.163, 0.29 ) }
    dend_11 { pt3dadd( -47.8351, 154.936, -177.628, 0.29 ) }
    dend_11 { pt3dadd( -47.7814, 155.227, -177.865, 0.29 ) }
    dend_11 { pt3dadd( -47.6957, 155.578, -178.131, 0.52 ) }
    dend_11 { pt3dadd( -47.6136, 155.868, -178.345, 1.03 ) }
    dend_11 { pt3dadd( -47.4669, 156.267, -178.635, 1.03 ) }
    dend_11 { pt3dadd( -47.1551, 156.98, -179.148, 0.22 ) }
    dend_11 { pt3dadd( -46.7257, 157.865, -179.768, 0.22 ) }
    dend_11 { pt3dadd( -46.4035, 158.492, -180.199, 0.96 ) }
    dend_11 { pt3dadd( -46.2051, 158.869, -180.45, 0.96 ) }
    dend_11 { pt3dadd( -45.6832, 159.796, -181.058, 0.29 ) }
    dend_11 { pt3dadd( -45.2512, 160.511, -181.519, 0.29 ) }
    dend_11 { pt3dadd( -44.9562, 160.983, -181.82, 0.88 ) }
    dend_11 { pt3dadd( -44.7337, 161.344, -182.048, 1.18 ) }
    dend_11 { pt3dadd( -44.2437, 162.207, -182.602, 0.37 ) }
    dend_11 { pt3dadd( -43.82, 162.989, -183.021, 0.37 ) }
    dend_11 { pt3dadd( -43.2369, 164.093, -183.521, 0.37 ) }
    dend_11 { pt3dadd( -42.841, 164.778, -183.776, 0.37 ) }
    dend_11 { pt3dadd( -42.5249, 165.262, -183.925, 0.96 ) }
    dend_11 { pt3dadd( -42.1017, 165.815, -184.061, 0.96 ) }
    dend_11 { pt3dadd( -40.7004, 167.272, -184.319, 0.29 ) }
    dend_11 { pt3dadd( -40.3955, 167.529, -184.363, 0.29 ) }
    dend_11 { pt3dadd( -39.7838, 167.95, -184.46, 0.88 ) }
    dend_11 { pt3dadd( -39.33, 168.223, -184.552, 0.88 ) }
    dend_11 { pt3dadd( -38.9743, 168.427, -184.646, 0.59 ) }
    dend_11 { pt3dadd( -37.7111, 169.166, -185.093, 0.29 ) }
    dend_11 { pt3dadd( -36.807, 169.758, -185.573, 0.29 ) }
    dend_11 { pt3dadd( -36.2965, 170.143, -185.89, 0.81 ) }
    dend_11 { pt3dadd( -36.0783, 170.33, -186.05, 0.81 ) }
    dend_11 { pt3dadd( -35.7637, 170.659, -186.32, 0.52 ) }
    dend_11 { pt3dadd( -35.3581, 171.18, -186.732, 0.22 ) }
    dend_11 { pt3dadd( -34.7896, 172.178, -187.478, 0.22 ) }
    dend_11 { pt3dadd( -34.5227, 172.789, -187.903, 0.74 ) }
    dend_11 { pt3dadd( -34.408, 173.115, -188.117, 0.74 ) }
    dend_11 { pt3dadd( -34.1412, 174.045, -188.69, 0.22 ) }
    dend_11 { pt3dadd( -34.0486, 174.445, -188.918, 0.22 ) }
    dend_11 { pt3dadd( -33.9549, 174.977, -189.195, 0.52 ) }
    dend_11 { pt3dadd( -33.9361, 175.117, -189.262, 0.59 ) }
    dend_11 { pt3dadd( -33.864, 175.819, -189.603, 0.22 ) }
    dend_11 { pt3dadd( -33.8383, 176.367, -189.907, 0.44 ) }
    dend_11 { pt3dadd( -33.8892, 177.386, -190.541, 0.22 ) }
    dend_11 { pt3dadd( -33.9695, 177.816, -190.839, 0.66 ) }
    dend_11 { pt3dadd( -34.1668, 178.438, -191.291, 0.22 ) }
    dend_11 { pt3dadd( -34.4809, 179.161, -191.851, 0.74 ) }
    dend_11 { pt3dadd( -34.8497, 179.833, -192.403, 0.59 ) }
    dend_11 { pt3dadd( -35.1854, 180.406, -192.89, 0.29 ) }
    dend_11 { pt3dadd( -35.4638, 180.878, -193.294, 0.52 ) }
    dend_11 { pt3dadd( -35.9319, 181.651, -193.955, 0.22 ) }
    dend_11 { pt3dadd( -36.2262, 182.164, -194.369, 0.59 ) }
    dend_11 { pt3dadd( -36.3132, 182.372, -194.514, 0.59 ) }
    dend_11 { pt3dadd( -36.4795, 183.097, -194.968, 0.22 ) }
    dend_11 { pt3dadd( -36.4998, 183.57, -195.283, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -52.6962, 127.248, -158.004, 0.52 ) }
    dend_10 { pt3dadd( -51.8583, 127.954, -159.753, 0.52 ) }
    dend_10 { pt3dadd( -51.3567, 128.396, -160.793, 0.29 ) }
    dend_10 { pt3dadd( -50.8569, 128.886, -161.809, 0.29 ) }
    dend_10 { pt3dadd( -50.1449, 129.607, -163.21, 0.29 ) }
    dend_10 { pt3dadd( -49.6286, 130.111, -164.191, 0.59 ) }
    dend_10 { pt3dadd( -49.4332, 130.281, -164.553, 0.66 ) }
    dend_10 { pt3dadd( -48.7819, 130.776, -165.623, 0.29 ) }
    dend_10 { pt3dadd( -48.3351, 131.03, -166.313, 0.81 ) }
    dend_10 { pt3dadd( -48.2066, 131.104, -166.506, 0.81 ) }
    dend_10 { pt3dadd( -47.5668, 131.441, -167.369, 0.29 ) }
    dend_10 { pt3dadd( -46.9389, 131.692, -168.312, 0.44 ) }
    dend_10 { pt3dadd( -46.7438, 131.736, -168.593, 0.66 ) }
    dend_10 { pt3dadd( -46.3651, 131.72, -169.055, 0.66 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 54.4193, 307.923, -177.162, 0.37 ) }
    dend_21 { pt3dadd( 54.4732, 307.51, -178.887, 0.37 ) }
    dend_21 { pt3dadd( 54.5035, 307.381, -179.615, 0.22 ) }
    dend_21 { pt3dadd( 54.5423, 307.215, -180.548, 0.22 ) }
    dend_21 { pt3dadd( 54.5506, 307.179, -180.748, 0.66 ) }
    dend_21 { pt3dadd( 54.5934, 306.997, -181.774, 0.22 ) }
    dend_21 { pt3dadd( 54.6316, 306.833, -182.692, 0.22 ) }
    dend_21 { pt3dadd( 54.6636, 306.81, -182.91, 0.37 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 54.4193, 307.923, -177.162, 0.22 ) }
    dend_20 { pt3dadd( 55.661, 308.007, -179.513, 0.22 ) }
    dend_20 { pt3dadd( 55.9388, 308.029, -180.0, 0.88 ) }
    dend_20 { pt3dadd( 56.593, 308.08, -181.147, 0.22 ) }
    dend_20 { pt3dadd( 56.8724, 308.102, -181.637, 0.74 ) }
    dend_20 { pt3dadd( 57.8652, 308.18, -183.378, 0.22 ) }
    dend_20 { pt3dadd( 58.2849, 308.214, -184.114, 0.44 ) }
    dend_20 { pt3dadd( 58.954, 308.248, -184.926, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, axon_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, axon_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_5 = new SectionList()
    dend_67 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_62 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_53 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_52 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_29 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_4 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_63 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_61 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_30 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_65 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_60 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_39 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_6 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_49 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_48 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_26 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_11 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_56 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_57 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_58 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_66 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_55 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_54 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_64 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_35 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_10 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_42 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_47 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_46 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_43 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_22 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_27 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_19 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_23 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_21 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_20 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 13
    dend_32 nseg = 9
    dend_62 nseg = 3
    dend_53 nseg = 7
    dend_52 nseg = 5
    dend_40 nseg = 3
    dend_29 nseg = 5
    dend_14 nseg = 3
    dend_4 nseg = 9
    dend_63 nseg = 3
    dend_61 nseg = 3
    dend_50 nseg = 5
    dend_34 nseg = 5
    dend_30 nseg = 3
    dend_16 nseg = 15
    dend_15 nseg = 9
    dend_3 nseg = 13
    dend_2 nseg = 3
    dend_65 nseg = 7
    dend_60 nseg = 3
    dend_39 nseg = 5
    dend_17 nseg = 3
    dend_6 nseg = 3
    dend_49 nseg = 3
    dend_48 nseg = 5
    dend_38 nseg = 3
    dend_37 nseg = 7
    dend_45 nseg = 5
    dend_44 nseg = 7
    dend_26 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_NBC_e9641cafc3_0_0


