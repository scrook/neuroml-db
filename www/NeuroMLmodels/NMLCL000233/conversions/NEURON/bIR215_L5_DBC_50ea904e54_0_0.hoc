// Cell: bIR215_L5_DBC_50ea904e54_0_0
/*
{
  "id" : "bIR215_L5_DBC_50ea904e54_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.05004, -11.467, 1.68557, 4.95086", "-5.4629, -10.2924, 1.5193, 5.92499", "-4.87576, -9.11775, 1.35304, 7.141", "-4.28863, -7.94311, 1.18677, 8.21564", "-3.70149, -6.76848, 1.0205, 9.25116", "-3.11436, -5.59384, 0.85423, 10.4286", "-2.52722, -4.4192, 0.687961, 11.5816", "-1.94009, -3.24457, 0.521692, 12.5153", "-1.35295, -2.06993, 0.355423, 13.2226", "-0.765817, -0.895296, 0.189155, 13.8842", "-0.178681, 0.27934, 0.0228859, 14.0673", "0.408454, 1.45398, -0.143383, 13.865", "0.995589, 2.62861, -0.309652, 13.5401", "1.58272, 3.80325, -0.47592, 13.048", "2.16986, 4.97788, -0.642189, 12.525", "2.757, 6.15252, -0.808458, 12.0036", "3.34413, 7.32716, -0.974727, 11.4792", "3.93127, 8.50179, -1.141, 10.6333", "4.5184, 9.67643, -1.30726, 8.80501", "5.10554, 10.8511, -1.47353, 6.22842", "5.69267, 12.0257, -1.6398, 3.68925" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-7.65171, -10.2854, 1.81829, 5.05", "-8.20088, -11.2439, 1.8233, 5.05", "-8.76763, -12.2329, 1.82847, 5.05", "-9.79345, -14.0232, 1.83783, 4.33", "-10.4831, -15.2267, 1.84412, 3.85", "-11.8358, -17.5873, 1.85647, 5.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999972754950567
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "5.27829, 10.8233, 0.908288, 2.64", "6.76552, 12.4551, 0.351938, 2.64", "9.11586, 15.0909, -0.914193, 2.64", "10.0978, 16.248, -1.49258, 2.64", "11.3217, 17.7772, -2.27237, 2.64", "12.1803, 18.9068, -2.8089, 2.64", "15.6341, 23.5305, -4.82818, 2.04", "17.7142, 26.2898, -6.00188, 1.68", "18.7742, 27.6498, -6.54475, 1.68", "20.2798, 29.5515, -7.19332, 1.68", "21.3572, 30.9011, -7.55565, 1.68", "22.5579, 32.3995, -7.80446, 1.68", "24.7726, 35.2244, -7.89849, 1.68", "26.0897, 36.9622, -7.92042, 1.68", "27.6445, 39.2435, -7.88293, 1.32", "28.3069, 40.3805, -7.83533, 1.32", "29.1292, 42.1172, -7.7755, 1.32", "29.9038, 44.1658, -7.69859, 1.32", "30.4508, 46.3375, -7.57348, 1.32", "30.8537, 48.9333, -7.35783, 1.32", "30.9394, 50.244, -7.19634, 1.32", "30.9871, 52.9268, -6.79367, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999972754950567,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "7.35828, 7.54732, -7.05171, 2.16", "8.23212, 7.86881, -7.40397, 1.8", "9.67382, 8.31597, -7.8634, 1.32", "11.3988, 8.85714, -8.39804, 1.8", "12.6866, 9.28594, -8.77988, 1.56", "15.6223, 10.3083, -9.5058, 1.92", "18.571, 11.3351, -10.235, 1.44", "21.0353, 12.1449, -10.8848, 1.44", "22.7656, 12.6522, -11.3722, 2.52", "23.8682, 12.9342, -11.6922, 2.52", "25.4139, 13.3367, -12.0759, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999972754950567
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.808285, 9.84834, -3.52171, 1.8", "0.925945, 10.7245, -3.52617, 1.8", "1.16024, 11.925, -3.53118, 1.8", "1.52032, 13.5397, -3.53652, 1.8", "1.94464, 15.3963, -3.54164, 1.32", "2.22861, 16.7072, -3.50442, 1.8", "2.59026, 18.5393, -3.42207, 1.8", "2.78267, 19.4744, -3.36551, 1.8", "3.14807, 21.3865, -3.21863, 2.28", "3.30489, 22.5872, -3.08675, 2.28", "3.3142, 24.1617, -2.8281, 1.56", "3.18332, 25.0852, -2.62123, 1.56", "2.95502, 25.9271, -2.35581, 1.32", "2.6958, 26.5618, -2.09685, 1.92", "1.93033, 28.0011, -1.3439, 1.68", "1.05582, 29.3818, -0.485758, 1.68", "0.14476, 30.6095, 0.390086, 1.68", "-0.924749, 31.9719, 1.44512, 1.68", "-1.94913, 33.2022, 2.47749, 1.32", "-2.76738, 34.1152, 3.30806, 2.04", "-3.50259, 34.8426, 4.04374, 2.04", "-4.33882, 35.6374, 4.92177, 1.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999972754950567
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.671714, 9.25357, -1.82171, 2.16", "-0.578373, 10.4861, -2.96541, 2.16", "-0.636483, 11.9523, -4.27088, 2.16", "-1.27721, 15.8757, -7.70355, 1.8", "-1.83656, 18.1545, -9.56265, 1.2", "-2.78128, 21.6531, -12.2216, 1.44", "-3.26364, 23.307, -13.4195, 1.44", "-4.08611, 26.172, -15.4076, 1.68", "-5.25761, 29.9423, -17.9201, 1.8", "-6.26746, 32.5728, -19.49, 1.8", "-7.36874, 34.9711, -20.8375, 1.8", "-9.06994, 38.2978, -22.5897, 1.8", "-10.8941, 41.6358, -24.1408, 2.28", "-12.32, 44.0999, -25.1849, 2.16", "-14.7399, 47.993, -26.814, 1.08", "-16.8125, 50.9759, -28.121, 1.8", "-18.633, 53.2796, -29.1821, 1.44", "-20.9076, 55.8075, -30.4836, 1.44", "-23.2219, 58.0416, -31.8154, 1.32", "-25.5265, 60.1501, -33.4032, 1.2", "-26.5532, 61.1241, -34.3278, 1.2", "-27.9329, 62.599, -36.0306, 1.68", "-29.023, 64.026, -38.0238, 1.2", "-29.4569, 64.7258, -39.0108, 1.2", "-30.4713, 66.6927, -41.5861, 2.28", "-30.9638, 67.7804, -42.8875, 2.28", "-32.0582, 70.867, -46.3749, 2.28", "-33.158, 75.1671, -50.955, 2.04", "-33.4937, 77.88, -53.9353, 1.44", "-33.577, 79.7596, -56.088, 1.08", "-33.5384, 80.9983, -57.5357, 1.56", "-33.2171, 84.1037, -61.1203, 2.16", "-32.8063, 85.9566, -63.1335, 2.16", "-30.83, 91.7841, -69.2526, 1.68", "-29.8615, 93.9254, -71.6384, 1.44", "-29.3061, 95.0278, -72.9024, 1.44", "-28.5465, 96.3729, -74.4803, 1.08", "-27.1045, 98.6736, -77.1125, 1.44", "-26.1778, 100.137, -78.7042, 1.44", "-24.2787, 102.785, -80.922, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999972754950567,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.69267, 12.0257, -1.6398, 0.964009", "12.3992, 25.4429, -1.6398, 0.964009", "19.1058, 38.8602, -1.6398, 0.964009" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-11.8358, -17.5873, 1.85647, 2.28", "-13.7267, -19.1311, 2.90189, 2.28", "-15.3293, -20.4543, 3.74783, 2.04", "-16.6092, -21.4654, 4.38375, 1.92", "-18.3562, -22.6943, 5.18104, 1.68", "-19.8365, -23.7357, 5.85666, 1.68", "-20.8826, -24.4715, 6.33408, 1.68", "-21.5981, -24.9944, 6.68067, 1.68", "-22.7468, -25.791, 7.1986, 1.68", "-25.2241, -27.2955, 8.12629, 2.52" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-11.8358, -17.5873, 1.85647, 2.76", "-10.5739, -21.283, 3.89234, 2.76", "-10.0923, -22.6931, 4.66913, 2.76" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "30.9871, 52.9268, -6.79367, 1.68", "31.9885, 55.5868, -8.22347, 1.68", "32.6174, 57.6024, -9.35103, 1.68", "33.2908, 60.1798, -10.7859, 1.68", "33.8205, 62.2072, -11.9146, 1.92", "34.2628, 63.9003, -12.8572, 1.08", "34.5578, 65.0296, -13.4859, 1.08", "35.0359, 67.8245, -15.3176, 2.16", "35.2256, 69.4782, -16.4288, 2.16" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "30.9871, 52.9268, -6.79367, 1.2", "33.9298, 53.4772, -7.24958, 1.2", "35.284, 53.6941, -7.44598, 1.2", "36.2082, 53.8786, -7.5875, 1.2", "36.9345, 54.0579, -7.69884, 1.2", "37.7433, 54.2737, -7.80766, 0.72", "38.8259, 54.5861, -7.92426, 1.32", "41.0974, 55.377, -8.11614, 0.84", "41.9539, 55.6776, -8.21802, 0.84", "42.7477, 55.9631, -8.32995, 0.84", "43.5934, 56.305, -8.46022, 0.84", "44.6712, 56.77, -8.63589, 0.84", "46.9395, 57.7451, -8.99824, 0.84", "48.3781, 58.3406, -9.17976, 1.68", "50.2979, 59.0264, -9.43526, 0.96", "51.3766, 59.3741, -9.59915, 0.96", "51.9727, 59.5512, -9.69633, 0.96", "52.6049, 59.6887, -9.80644, 0.96", "53.3382, 59.8455, -9.89587, 0.96", "54.8215, 60.1873, -10.0714, 1.56", "55.6793, 60.3857, -10.1405, 1.56", "56.4101, 60.5538, -10.1887, 1.56", "58.4385, 61.093, -10.1838, 1.32", "61.5046, 62.0203, -10.0017, 1.32", "62.7895, 62.454, -9.85925, 1.32", "64.6363, 63.1356, -9.53689, 1.08", "66.3435, 63.7896, -9.18758, 1.08", "68.346, 64.6, -8.71238, 1.08", "69.2528, 64.9889, -8.43476, 1.08", "70.0217, 65.2766, -8.17343, 1.08", "70.9749, 65.6467, -7.82073, 1.08", "72.3773, 66.2633, -7.21702, 1.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "25.4139, 13.3367, -12.0759, 1.32", "26.3145, 13.8684, -11.3472, 1.32", "26.9821, 14.3492, -10.7716, 1.32", "28.4321, 15.3881, -9.47162, 0.84", "29.2641, 15.96, -8.6724, 1.32", "30.2076, 16.5648, -7.73527, 1.32", "30.7614, 16.9121, -7.18029, 0.96", "31.4988, 17.4304, -6.33977, 1.44", "32.2689, 17.9559, -5.46373, 1.44", "32.8682, 18.2266, -4.90154, 1.44", "33.286, 18.3155, -4.54, 1.44", "33.8412, 18.3615, -4.10082, 0.84", "34.2239, 18.3995, -3.74272, 0.84", "34.935, 18.479, -2.96875, 1.32", "36.0093, 18.6434, -1.78057, 1.32", "36.7157, 18.7729, -0.990753, 1.32", "37.5579, 18.9431, 0.00375693, 1.2", "38.9554, 19.1953, 1.80837, 1.08", "40.2412, 19.475, 3.68212, 0.96", "45.0986, 22.6084, 8.81046, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "25.4139, 13.3367, -12.0759, 1.32", "26.5401, 14.4112, -12.9574, 1.32", "28.0786, 15.8129, -14.1098, 1.2", "29.0159, 16.5265, -14.7755, 1.2", "30.6734, 17.5484, -15.8642, 0.96", "32.6342, 18.5339, -17.1213, 0.96", "33.3593, 18.8391, -17.5847, 0.96", "36.0228, 19.7348, -19.2417, 1.44", "38.5524, 20.5108, -20.7826, 1.8", "40.4817, 21.1023, -21.9094, 1.8", "42.5027, 21.6869, -23.0544, 1.8", "44.2909, 22.1648, -24.0445, 1.2", "46.2213, 22.7993, -25.0766, 1.68", "47.809, 23.4241, -25.8302, 1.68", "49.3521, 24.1448, -26.4902, 0.96", "51.082, 24.9745, -27.1556, 1.44", "52.5537, 25.6558, -27.6347, 1.44", "55.8892, 27.1694, -28.6365, 1.8", "58.3383, 28.187, -29.3321, 0.84", "60.2152, 28.9001, -29.8292, 1.2", "63.4981, 30.0897, -30.6754, 2.16", "64.6566, 30.4784, -30.9311, 2.4" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.33882, 35.6374, 4.92177, 1.08", "0.716625, 36.7349, 6.6247, 1.08", "3.61352, 37.3638, 7.60052, 1.44", "6.29496, 37.9459, 8.50376, 1.08", "17.6563, 39.9139, 14.288, 1.08", "27.7135, 44.187, 21.096, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.33882, 35.6374, 4.92177, 1.08", "-5.83222, 36.9902, 5.61881, 1.08", "-6.61718, 37.4911, 6.11882, 0.48", "-7.43637, 37.8957, 6.78211, 1.8", "-9.06795, 38.62, 8.1753, 1.32", "-10.7098, 39.4042, 9.632, 1.08", "-12.4313, 40.3897, 11.2433, 1.44", "-13.3923, 40.9667, 12.2583, 1.44", "-14.672, 41.7264, 13.6333, 0.96", "-15.3391, 42.1298, 14.3674, 0.96", "-16.1735, 42.6376, 15.1443, 1.44", "-17.6417, 43.5455, 16.0682, 0.96", "-19.0208, 44.39, 16.6454, 0.96", "-20.6807, 45.3062, 17.1339, 1.44", "-21.9536, 45.9554, 17.4199, 1.8", "-24.7756, 47.2299, 17.9486, 1.08", "-26.6107, 47.9184, 18.2052, 0.72", "-28.4161, 48.4752, 18.3439, 1.32", "-30.4357, 49.0701, 18.3672, 1.68", "-38.4526, 53.9815, 24.0943, 1.68", "-46.5412, 58.8023, 29.8016, 1.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "19.1058, 38.8602, -1.6398, 0.964009", "25.8123, 52.2774, -1.6398, 0.964009", "32.5188, 65.6947, -1.6398, 0.964009" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-25.2241, -27.2955, 8.12629, 1.32", "-26.3637, -27.8439, 9.48987, 1.32", "-27.4866, -28.4025, 10.8452, 1.08", "-28.4449, -28.8624, 12.0659, 1.08", "-29.2755, -29.2264, 13.2085, 1.08", "-29.963, -29.5035, 14.2014, 1.08", "-30.8599, -29.8637, 15.515, 1.08", "-31.2329, -30.0737, 16.0904, 1.08", "-31.6926, -30.3891, 16.8098, 1.08", "-32.1959, -30.7013, 17.5883, 1.44", "-32.8942, -31.1207, 18.7752, 1.08", "-33.4393, -31.4744, 19.7852, 1.08", "-34.1453, -32.0696, 21.069, 1.56", "-34.6444, -32.5726, 21.8556, 1.44" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-25.2241, -27.2955, 8.12629, 1.8", "-26.7151, -27.9177, 8.21089, 1.8", "-28.1297, -28.6215, 8.24996, 1.44", "-30.2027, -29.8337, 8.2143, 2.16", "-31.8482, -30.9279, 8.12811, 1.8", "-33.8272, -32.4411, 7.98666, 1.44", "-35.7876, -34.258, 7.80386, 1.44", "-37.1485, -36.0457, 7.59387, 1.2", "-37.9801, -37.7494, 7.39562, 1.68", "-38.3162, -38.8513, 7.29078, 1.68", "-38.6512, -40.4446, 7.17087, 1.68", "-39.0684, -43.0358, 7.02709, 1.32", "-39.4687, -45.51, 6.98162, 1.68", "-39.9621, -47.7115, 7.06625, 1.2", "-40.5309, -49.6246, 7.22197, 1.56", "-41.3782, -51.9218, 7.43893, 1.56", "-42.2024, -53.8525, 7.61419, 1.56", "-43.0595, -55.6058, 7.71817, 1.92", "-44.4197, -58.256, 7.86913, 1.56", "-45.244, -59.8742, 7.95824, 1.56", "-47.2452, -63.8474, 8.10917, 1.32", "-48.2194, -65.8045, 8.14553, 1.32", "-49.2746, -67.9651, 8.11515, 2.4" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-10.0923, -22.6931, 4.66913, 0.84", "-7.57397, -25.1557, 6.71686, 0.84", "-6.20819, -26.6983, 7.85413, 0.84", "-3.92313, -29.788, 9.9671, 2.04", "-2.01539, -32.6736, 11.8334, 1.56", "-0.532049, -35.0171, 13.3304, 2.04", "1.00381, -37.4119, 14.8691, 1.2", "2.24606, -39.466, 16.2003, 1.68", "4.07113, -42.2807, 18.2113, 0.84", "5.0469, -43.6748, 19.3441, 0.84", "6.36236, -45.3896, 20.8682, 1.32", "7.50671, -46.7485, 22.2291, 1.32", "9.30134, -48.7136, 24.4367, 1.32", "11.1582, -50.4355, 26.6269, 1.8", "13.5515, -52.4151, 29.3638, 1.2", "14.3163, -53.0504, 30.2752, 1.2", "14.8485, -53.54, 30.952, 1.2", "16.2433, -55.1005, 32.9075, 1.8", "17.2354, -56.5687, 34.3766, 1.8" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-10.0923, -22.6931, 4.66913, 1.44", "-10.7106, -26.1105, 6.37354, 1.44", "-11.1878, -28.898, 7.63071, 1.44", "-11.742, -32.3135, 9.1102, 1.44", "-12.1155, -34.6598, 10.0762, 1.44", "-12.5438, -37.4634, 11.1818, 0.84", "-12.7939, -39.5636, 11.8836, 0.84", "-13.0934, -41.8557, 12.4579, 1.68", "-13.5777, -45.2564, 13.0331, 1.32", "-13.7753, -47.0896, 13.2631, 1.32", "-13.8789, -48.3895, 13.4196, 1.32", "-14.2956, -54.0818, 14.1047, 1.92", "-14.5684, -57.68, 14.5301, 1.32", "-14.8116, -60.9481, 14.897, 1.68", "-15.062, -64.6989, 15.3081, 1.2", "-15.1742, -66.2747, 15.5009, 0.84", "-15.3578, -69.0814, 15.7285, 1.56", "-15.516, -71.566, 15.8572, 1.2", "-15.6192, -75.7878, 15.9293, 1.56", "-15.7182, -78.6775, 15.8563, 0.84", "-15.8581, -81.1252, 15.6568, 1.68", "-16.0855, -86.1843, 15.1135, 1.2", "-16.1023, -87.7974, 14.8852, 1.2", "-16.1135, -89.283, 14.5725, 1.32" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-10.0923, -22.6931, 4.66913, 1.8", "-9.35836, -25.6886, 5.70369, 1.8", "-9.14503, -26.6012, 5.96939, 1.8", "-8.77479, -28.4323, 6.33362, 1.56", "-8.47684, -30.3483, 6.56524, 2.52", "-7.95882, -33.6793, 6.96792, 1.68", "-7.67063, -35.5325, 7.19196, 1.8", "-7.4894, -37.2473, 7.30622, 1.56", "-7.28496, -39.5079, 7.41588, 2.28", "-7.14457, -41.798, 7.42023, 1.92" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "35.2256, 69.4782, -16.4288, 0.72", "34.4566, 72.3626, -16.9308, 0.72", "34.2091, 73.5429, -17.1358, 0.72", "33.657, 76.488, -17.6384, 1.2", "33.3579, 77.9487, -17.9012, 1.2", "32.9927, 79.5026, -18.2064, 1.2", "32.299, 82.4542, -18.7862, 1.56", "31.9534, 84.1484, -19.1475, 1.56", "31.7581, 85.0886, -19.352, 1.56", "31.2477, 87.7718, -19.9257, 1.56", "30.8092, 89.8958, -20.4164, 1.2" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "35.2256, 69.4782, -16.4288, 0.84", "35.9387, 71.8559, -16.6326, 0.84", "36.3829, 73.2936, -16.7706, 0.84", "36.8587, 74.9878, -16.9808, 0.84", "37.2043, 76.2442, -17.1486, 0.84", "37.5603, 77.4978, -17.3173, 0.84", "37.9183, 78.6551, -17.4671, 0.48", "38.5769, 80.8009, -17.8091, 0.96", "39.302, 83.1106, -18.2253, 0.48", "39.7885, 84.5304, -18.4915, 0.48", "40.1782, 85.6242, -18.7138, 0.96", "40.8291, 87.4254, -19.0884, 0.96", "41.8403, 90.3211, -19.6912, 0.24", "42.3583, 91.8818, -19.9434, 0.84", "42.8862, 93.4529, -20.1271, 0.24", "43.4787, 95.311, -20.3149, 0.72", "44.0553, 97.3282, -20.4865, 0.72", "44.2353, 98.0002, -20.5284, 0.12", "45.031, 100.954, -20.5737, 0.48", "45.3817, 102.23, -20.5683, 0.48", "46.1337, 105.181, -20.5166, 1.8", "46.4919, 106.583, -20.4563, 1.8" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "72.3773, 66.2633, -7.21702, 1.08", "74.5315, 65.629, -6.47902, 1.08", "77.083, 64.9267, -5.58711, 1.08", "81.3357, 63.778, -4.11474, 0.72", "84.4727, 63.0747, -3.05898, 1.32", "87.8434, 62.454, -1.82436, 0.48", "89.8778, 62.1251, -1.03466, 0.48", "91.5392, 61.9272, -0.392854, 0.96", "92.8138, 61.8169, 0.111753, 0.96", "96.9622, 61.6032, 1.94074, 0.48", "99.5147, 61.4834, 3.05528, 0.48", "100.9, 61.367, 3.63965, 1.68", "103.737, 61.0471, 4.84053, 0.84", "104.818, 60.8879, 5.3156, 0.84", "106.846, 60.5533, 6.22834, 1.32", "109.236, 60.0775, 7.2937, 0.84", "112.869, 59.3065, 8.83512, 1.2", "116.442, 58.5501, 10.3879, 0.72", "121.069, 57.5695, 12.5166, 1.2", "123.184, 57.1473, 13.517, 1.56" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "72.3773, 66.2633, -7.21702, 1.44", "74.4048, 67.4807, -7.48236, 1.44", "77.8492, 69.5233, -8.00015, 1.2", "80.9933, 71.3489, -8.49445, 0.84", "82.5577, 72.2737, -8.75419, 0.84", "85.5697, 74.0422, -9.24111, 0.84", "87.1057, 74.9456, -9.49418, 0.84", "88.7877, 75.9401, -9.84815, 0.84", "90.1663, 76.8039, -10.0769, 0.84", "91.7105, 77.8219, -10.2337, 0.72", "92.9738, 78.6343, -10.3042, 1.2", "94.863, 79.9326, -10.263, 0.6", "96.4611, 81.1062, -10.1492, 1.08", "99.8308, 83.7447, -9.79709, 0.6", "101.363, 85.0285, -9.53302, 1.08" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "45.0986, 22.6084, 8.81046, 0.96", "48.3507, 29.2142, 14.2747, 0.96", "52.3066, 35.1339, 20.0807, 0.96", "56.3397, 39.5438, 27.1039, 0.96" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "45.0986, 22.6084, 8.81046, 1.08", "50.6562, 27.2202, 15.0383, 0.96", "55.133, 31.6551, 22.2064, 0.96", "60.912, 36.5361, 28.0027, 0.96" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "64.6566, 30.4784, -30.9311, 0.84", "66.6097, 31.9833, -32.1339, 0.84", "67.7244, 33.0635, -33.0502, 1.32", "69.41, 34.9688, -34.422, 0.6", "70.4837, 36.1946, -35.176, 1.2", "72.0638, 38.0186, -36.2501, 1.68", "72.6045, 38.6342, -36.6091, 0.36", "75.0852, 41.7216, -38.5155, 1.2", "76.6224, 43.7418, -39.7278, 0.72", "78.2791, 45.9548, -40.9922, 0.96", "79.6555, 47.7462, -41.9593, 0.48", "81.2286, 49.6619, -42.95, 2.04", "82.8152, 51.4915, -43.955, 1.56" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "64.6566, 30.4784, -30.9311, 0.96", "65.4515, 30.3, -31.7745, 0.96", "66.7913, 30.0516, -33.1398, 0.96", "68.5503, 29.7984, -35.0389, 1.56", "69.9828, 29.6135, -36.7139, 1.08", "71.0337, 29.4828, -37.9462, 1.08", "71.9209, 29.3735, -38.9807, 1.08", "73.2746, 29.1896, -40.445, 1.32", "75.4914, 28.8029, -42.6878, 1.2", "77.3363, 28.3696, -44.401, 0.6", "79.3638, 27.7652, -46.2216, 1.8", "79.5929, 27.6851, -46.4224, 1.8", "81.2547, 26.9857, -47.8436, 0.72", "82.305, 26.4348, -48.7326, 1.2", "83.4402, 25.8149, -49.7304, 1.56", "84.7595, 25.0516, -50.8986, 0.72", "85.4814, 24.6089, -51.6085, 1.2", "86.7585, 23.8378, -53.0104, 1.32", "88.4589, 22.866, -55.2691, 1.08", "89.7335, 22.1655, -57.2007, 0.72" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "27.7135, 44.187, 21.096, 1.08", "38.6038, 47.2676, 25.2634, 1.08", "48.9964, 50.6525, 30.3519, 1.08", "59.6943, 53.1599, 35.3352, 1.08", "71.1709, 55.6815, 38.0785, 1.08" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "27.7135, 44.187, 21.096, 1.08", "38.72, 47.0686, 29.8487, 1.08", "50.9058, 47.5046, 37.4506, 1.08", "60.8684, 47.1218, 47.7986, 1.08", "71.3253, 45.3989, 57.495, 1.08", "81.6446, 45.1133, 67.491, 1.08" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-46.5412, 58.8023, 29.8016, 1.08", "-55.427, 63.6763, 33.5675, 1.08", "-64.0244, 68.6194, 37.8669, 1.08", "-72.5883, 72.9519, 42.867, 1.08", "-80.6823, 78.9104, 46.7703, 1.08", "-88.3271, 85.6917, 50.1308, 1.08" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-46.5412, 58.8023, 29.8016, 1.08", "-55.1938, 64.2883, 37.4409, 1.08", "-63.7214, 69.5822, 45.3615, 1.08", "-70.8473, 76.5484, 53.3215, 1.08", "-78.8955, 81.7759, 61.7797, 1.08", "-86.9552, 86.2595, 70.667, 1.08" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-49.2746, -67.9651, 8.11515, 1.2", "-51.8552, -68.1676, 7.34779, 1.2", "-53.9027, -68.3414, 6.7661, 1.2", "-57.2802, -68.708, 5.85814, 1.2", "-61.3832, -69.2612, 4.78262, 0.84", "-66.3748, -70.0165, 3.48736, 1.56", "-69.9649, -70.6157, 2.59264, 0.96", "-72.8613, -71.1928, 1.89264, 1.8", "-76.553, -72.0036, 1.05341, 1.08", "-77.7459, -72.2781, 0.836769, 1.08", "-79.1063, -72.5969, 0.632516, 1.32", "-81.6135, -73.2403, 0.357539, 0.6", "-83.0813, -73.6183, 0.221028, 1.44", "-85.4091, -74.1896, 0.0359869, 0.6", "-87.1182, -74.575, -0.108495, 1.2", "-88.7994, -74.9058, -0.280179, 0.72", "-91.1112, -75.314, -0.58553, 1.8", "-94.2104, -75.7167, -1.01433, 0.84", "-96.1455, -75.969, -1.30032, 1.68", "-98.7883, -76.289, -1.68157, 0.84", "-101.594, -76.5676, -2.09787, 1.8", "-104.142, -76.684, -2.47023, 0.84", "-106.758, -76.7206, -2.91745, 1.2" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-49.2746, -67.9651, 8.11515, 1.44", "-51.1299, -70.1637, 7.93434, 1.44", "-52.1309, -71.2021, 7.89223, 1.44", "-53.534, -72.6103, 7.92321, 1.44", "-54.9932, -74.0221, 7.95171, 1.2", "-56.5476, -75.4496, 7.89215, 1.2", "-57.5476, -76.3512, 7.82422, 1.2", "-59.3952, -77.8581, 7.70665, 1.44", "-61.0208, -79.1669, 7.54369, 1.44", "-62.2622, -80.208, 7.35177, 1.44", "-65.3626, -83.0112, 6.71933, 1.44", "-66.0104, -83.6413, 6.55962, 1.44", "-67.4198, -85.0796, 6.20745, 1.44", "-68.4871, -86.2551, 5.94166, 1.44", "-70.9281, -89.0003, 5.32, 1.8", "-72.9759, -91.4014, 4.84748, 1.08", "-75.0758, -93.9859, 4.42079, 1.92", "-77.146, -96.5691, 4.01743, 1.44", "-79.5287, -99.6214, 3.58488, 2.64" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-7.14457, -41.798, 7.42023, 1.08", "-6.35671, -42.5672, 8.10772, 1.08", "-5.07653, -43.817, 9.22482, 1.08", "-4.64378, -44.2394, 9.60243, 1.08", "-3.05797, -45.7876, 10.9862, 1.08", "-1.93699, -46.8819, 11.9644, 1.44", "-0.664647, -48.124, 13.0746, 2.16" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-7.14457, -41.798, 7.42023, 1.32", "-7.63557, -43.4193, 7.15205, 1.32", "-8.40106, -45.501, 6.71607, 1.32", "-9.08183, -47.1786, 6.33405, 1.32", "-9.80028, -48.7153, 5.97689, 1.68", "-10.9215, -51.0091, 5.47007, 1.2", "-11.2909, -51.7682, 5.30152, 1.2", "-12.1254, -53.442, 4.85761, 1.2", "-12.4177, -54.0189, 4.73689, 1.2", "-13.5448, -56.3237, 4.40604, 1.44", "-14.3625, -58.084, 4.22216, 1.44", "-15.1953, -60.1064, 4.10084, 1.44", "-16.1966, -62.718, 4.02241, 1.8", "-17.1391, -65.4465, 4.03083, 1.56", "-17.6328, -67.0079, 4.05949, 1.56", "-17.9322, -68.0733, 4.09998, 1.56", "-18.5965, -70.4556, 4.22495, 1.8", "-18.9804, -71.8197, 4.31921, 1.8", "-19.3426, -73.0105, 4.3812, 1.8", "-19.6549, -74.0918, 4.37287, 1.8", "-19.8548, -74.8519, 4.36983, 1.8", "-20.2455, -76.5869, 4.37321, 1.44", "-20.4706, -77.5744, 4.37347, 1.44", "-20.9875, -79.8905, 4.37618, 1.68", "-21.6783, -82.957, 4.37853, 1.08", "-22.182, -85.3021, 4.38489, 2.28", "-22.4998, -86.9387, 4.39558, 2.28" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "30.8092, 89.8958, -20.4164, 0.96", "29.9007, 90.9964, -21.5252, 0.96", "28.202, 92.9771, -23.6122, 0.6", "27.4775, 93.8002, -24.475, 1.08", "25.4887, 96.0856, -26.7886, 0.6", "24.2955, 97.4548, -28.1301, 1.08", "23.3985, 98.4956, -29.1046, 1.08", "22.179, 99.9364, -30.4216, 0.72", "21.5628, 100.705, -31.0671, 0.72", "20.4603, 102.237, -32.26, 1.08", "20.0129, 102.966, -32.699, 1.08", "19.1861, 104.609, -33.4672, 0.48", "18.1917, 106.972, -34.2731, 0.84", "17.2371, 109.786, -34.8379, 0.24", "16.6732, 111.644, -35.1462, 1.08", "15.8516, 114.754, -35.4846, 1.08", "15.5126, 116.29, -35.5613, 0.6", "15.2556, 117.844, -35.4571, 0.6", "14.9552, 120.725, -34.7219, 1.44" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "30.8092, 89.8958, -20.4164, 1.44", "31.0869, 93.6099, -20.7326, 1.44", "31.1881, 95.2737, -20.964, 1.44", "31.2344, 97.1055, -21.1861, 0.6", "31.2511, 100.822, -21.5928, 1.08", "31.2502, 101.237, -21.6345, 0.72", "31.2354, 103.711, -21.8784, 1.2", "31.1704, 106.721, -22.2525, 0.72", "31.147, 108.534, -22.5085, 0.72", "31.0619, 109.951, -22.7657, 1.2", "30.8494, 111.496, -23.1086, 1.2", "30.5546, 112.882, -23.4872, 1.2", "30.0331, 114.796, -24.1302, 0.72", "29.3329, 116.95, -24.9142, 0.72", "28.7449, 118.604, -25.5476, 1.08", "28.4336, 119.383, -25.831, 1.08", "27.2503, 121.984, -26.7203, 0.72", "25.841, 124.955, -27.7005, 1.2", "24.5378, 127.533, -28.584, 1.2", "23.3303, 129.829, -29.3943, 0.72", "22.2616, 131.934, -30.1424, 1.08", "21.4138, 133.61, -30.8184, 0.6", "20.1328, 136.062, -31.9714, 1.32", "18.2857, 139.567, -33.968, 0.6", "17.3585, 141.404, -35.1306, 0.84", "16.4624, 143.294, -36.3889, 0.6", "15.234, 145.984, -38.2658, 0.96", "14.3574, 148.029, -39.7283, 0.96", "12.9977, 151.287, -42.0977, 0.36", "12.1431, 153.667, -43.854, 0.84", "11.7297, 154.892, -44.7981, 0.84" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "46.4919, 106.583, -20.4563, 0.84", "44.6762, 107.559, -21.2903, 0.84", "41.9444, 108.792, -22.8351, 0.6", "39.3919, 109.799, -24.4866, 1.08", "37.5207, 110.448, -25.6028, 1.08", "35.0684, 111.175, -27.2061, 0.72", "32.8355, 111.747, -28.6966, 1.32", "29.3822, 112.445, -31.0818, 0.84", "26.4875, 112.861, -33.1037, 1.44", "23.6264, 113.14, -35.0361, 0.84", "19.3938, 113.429, -37.6063, 0.6", "17.2175, 113.517, -38.7067, 0.6", "15.3545, 113.529, -39.5061, 0.6", "13.8756, 113.441, -40.0362, 0.6", "10.9304, 113.111, -40.9239, 0.6", "9.35535, 112.842, -41.4251, 0.6", "6.54325, 112.265, -42.1911, 0.6", "4.73627, 111.819, -42.7906, 0.6", "2.53845, 111.214, -43.6373, 0.6", "1.62405, 110.938, -44.0353, 0.6", "-1.70471, 109.855, -45.4439, 0.96", "-3.87845, 109.103, -46.2509, 0.96", "-6.01027, 108.344, -46.8992, 0.6", "-9.2516, 107.197, -47.6146, 0.6", "-11.2716, 106.501, -47.9081, 0.6", "-14.1181, 105.485, -48.1173, 1.08", "-17.4912, 104.267, -48.0452, 0.72", "-19.6563, 103.441, -47.8807, 1.2", "-21.9466, 102.474, -47.837, 0.6", "-23.8146, 101.623, -47.9838, 0.6", "-26.2275, 100.486, -48.4845, 1.08", "-28.3534, 99.4514, -49.301, 0.72", "-30.6476, 98.2768, -50.5335, 1.2", "-35.8449, 95.5988, -53.529, 0.72", "-37.1999, 94.8924, -54.3295, 1.2", "-38.6547, 94.1582, -55.1635, 1.2", "-40.6457, 93.2845, -56.2101, 0.84", "-42.9643, 92.3837, -57.2748, 1.2", "-46.207, 91.3852, -58.4083, 0.6", "-47.7457, 91.033, -58.7628, 0.6", "-49.2425, 90.7135, -59.0739, 0.6", "-52.4621, 90.0838, -59.7047, 1.2", "-54.3525, 89.7467, -60.0576, 0.48", "-57.0039, 89.3574, -60.5986, 0.96", "-60.1548, 88.949, -61.5534, 1.32" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "46.4919, 106.583, -20.4563, 0.84", "47.5214, 110.87, -21.3171, 0.84", "48.1479, 113.48, -21.8409, 0.84", "48.6468, 115.558, -22.2581, 0.84", "49.2969, 118.265, -22.8017, 1.44", "50.1703, 121.903, -23.5319, 0.96", "51.2427, 126.369, -24.4286, 1.92" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "56.3397, 39.5438, 27.1039, 0.96", "60.4357, 45.5098, 33.8071, 0.96", "63.3659, 52.6232, 39.9329, 0.96", "65.4587, 60.6108, 45.2159, 0.96", "66.4074, 67.858, 51.8013, 0.96", "67.5277, 74.4819, 59.0155, 0.96", "67.6813, 81.0628, 66.3579, 0.96", "67.5542, 87.3589, 73.9569, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "56.3397, 39.5438, 27.1039, 1.08", "60.4155, 45.24, 33.8319, 0.96", "64.9441, 50.7479, 40.4303, 0.96", "70.5778, 56.252, 46.1087, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "60.912, 36.5361, 28.0027, 0.96", "64.9773, 40.206, 32.9431, 0.96", "68.6617, 44.1833, 37.941, 0.96", "72.5039, 47.0387, 43.5636, 0.96" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "60.912, 36.5361, 28.0027, 1.08", "68.0008, 43.2817, 36.6044, 0.96", "75.3044, 52.2199, 42.517, 0.96", "79.9049, 60.9934, 50.9515, 0.96", "83.0653, 69.3131, 60.4668, 0.96" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "71.1709, 55.6815, 38.0785, 1.08", "77.7041, 57.6317, 39.7873, 1.08", "84.3258, 59.1234, 41.6249, 1.08", "91.13, 60.2047, 43.0436, 1.08", "97.839, 60.1985, 45.1534, 1.08", "104.576, 59.4701, 47.0169, 1.08", "111.37, 57.9791, 47.9177, 1.08", "117.706, 55.6132, 49.7347, 1.08" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "71.1709, 55.6815, 38.0785, 1.08", "80.4273, 58.7364, 39.8163, 1.08", "89.8092, 61.4706, 41.4265, 1.08", "98.6891, 65.3052, 43.4959, 1.08", "107.916, 68.3379, 45.418, 1.08", "117.365, 69.7312, 48.0528, 1.08", "126.331, 70.397, 52.2163, 1.08" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "81.6446, 45.1133, 67.491, 1.08", "88.2395, 45.2423, 72.9631, 1.08", "94.1862, 46.628, 78.9702, 1.08", "99.7978, 49.4614, 84.7632, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "81.6446, 45.1133, 67.491, 1.08", "91.9898, 45.2711, 76.4009, 1.08", "102.467, 47.528, 84.8453, 1.08", "113.716, 50.2629, 92.0556, 1.08" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-79.5287, -99.6214, 3.58488, 0.84", "-81.973, -100.608, 3.48182, 0.84", "-82.7529, -100.958, 3.43323, 0.84", "-84.0146, -101.562, 3.35899, 0.84", "-85.147, -102.127, 3.29707, 0.84", "-86.1452, -102.647, 3.22168, 0.84", "-87.094, -103.186, 3.13697, 0.84", "-88.5274, -104.021, 2.97941, 1.44", "-89.9739, -104.945, 2.79069, 1.44", "-90.5781, -105.365, 2.6993, 1.44", "-91.9868, -106.374, 2.55434, 0.84", "-93.4135, -107.348, 2.41313, 0.6" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-79.5287, -99.6214, 3.58488, 1.2", "-80.3404, -101.443, 3.15322, 1.2", "-81.0581, -102.805, 2.96395, 1.2", "-82.353, -104.858, 2.78959, 1.8", "-83.8412, -106.872, 2.7324, 0.96", "-84.6925, -107.912, 2.74281, 1.2", "-85.4663, -108.796, 2.77605, 1.2", "-86.9188, -110.158, 2.95774, 0.84", "-87.8748, -110.976, 3.10797, 1.32", "-89.0545, -111.927, 3.29011, 1.32", "-89.6336, -112.419, 3.35187, 1.32", "-90.4426, -113.207, 3.36995, 1.32", "-91.2766, -114.114, 3.32659, 1.56", "-92.3633, -115.481, 3.14249, 1.32", "-93.0556, -116.519, 2.96736, 1.32", "-93.7445, -117.747, 2.69889, 1.08", "-94.6135, -119.49, 2.27393, 0.84", "-95.217, -120.818, 1.92825, 0.36", "-95.904, -122.434, 1.50076, 0.84", "-96.3474, -123.536, 1.21011, 0.84", "-96.9436, -125.012, 0.747123, 0.48", "-97.2305, -125.772, 0.486411, 0.84", "-97.5638, -126.729, 0.122279, 0.36", "-97.9399, -127.745, -0.283546, 0.96", "-98.3743, -128.542, -0.575003, 0.24", "-99.4329, -130.012, -1.08073, 0.72" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-0.664647, -48.124, 13.0746, 1.2", "0.0896147, -47.7452, 13.6438, 1.2", "0.548602, -47.5146, 13.9902, 1.2", "1.02086, -47.2774, 14.3465, 1.44" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-0.664647, -48.124, 13.0746, 0.84", "-0.513178, -49.5985, 13.1988, 0.84", "-0.3297, -51.4334, 13.3489, 0.84", "-0.164631, -53.1619, 13.5134, 1.44", "0.0820187, -55.9955, 13.7912, 1.8", "0.24318, -58.0324, 13.9912, 1.08", "0.338744, -59.503, 14.1406, 1.08", "0.425176, -61.3489, 14.3375, 2.04", "0.529729, -63.9364, 14.5528, 1.08", "0.574618, -64.8563, 14.5927, 1.08", "0.637185, -65.9986, 14.6183, 1.08", "0.719695, -67.6524, 14.6068, 1.56", "0.764285, -68.4557, 14.5845, 1.56", "0.884635, -70.569, 14.4089, 1.08", "0.983195, -71.6705, 14.19, 0.84" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-22.4998, -86.9387, 4.39558, 1.2", "-21.5111, -88.5183, 3.35325, 1.2", "-21.0018, -89.5725, 2.76011, 1.2", "-20.5642, -90.7013, 2.21164, 0.96", "-20.2729, -91.6459, 1.78017, 1.56", "-20.0255, -92.6963, 1.3173, 1.2", "-19.8798, -93.5398, 0.959776, 1.32", "-19.7811, -94.8407, 0.446433, 0.96", "-19.7038, -96.1183, -0.0848615, 1.8", "-19.6337, -97.4739, -0.754662, 0.6", "-19.5818, -98.1963, -1.17587, 0.6", "-19.5072, -98.8188, -1.60121, 0.96", "-19.2855, -100.343, -2.71114, 0.96", "-19.1276, -101.504, -3.53994, 1.32", "-18.9408, -103.132, -4.71979, 2.28", "-18.8208, -104.588, -5.73126, 2.28", "-18.7259, -106.352, -6.89004, 1.68", "-18.6989, -108.366, -8.12295, 1.2", "-18.7733, -109.848, -8.94543, 1.2", "-19.0543, -112.377, -10.2936, 1.2", "-19.2713, -113.694, -10.9451, 1.2", "-19.427, -114.453, -11.2977, 1.8", "-19.5561, -114.967, -11.5323, 1.8", "-19.9368, -116.159, -12.1556, 1.68", "-20.2804, -117.01, -12.707, 1.08", "-20.5472, -117.539, -13.0972, 1.08", "-20.7761, -117.955, -13.4717, 1.08", "-21.1452, -118.562, -14.0772, 1.08", "-21.6156, -119.329, -14.9153, 1.92", "-22.3299, -120.442, -16.0478, 1.32", "-22.8428, -121.283, -16.8354, 0.72", "-23.2709, -122.065, -17.4784, 1.32", "-23.7791, -123.048, -18.2208, 0.72", "-24.2928, -124.091, -18.9019, 1.44", "-25.0487, -125.726, -19.7905, 0.84", "-25.44, -126.577, -20.1637, 1.32", "-25.934, -127.664, -20.5935, 0.72", "-26.3955, -128.698, -20.9511, 0.72", "-26.6996, -129.397, -21.1622, 0.72", "-26.9546, -129.948, -21.3259, 0.72", "-27.3779, -130.939, -21.8334, 1.2" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-22.4998, -86.9387, 4.39558, 0.96", "-23.3131, -88.8807, 4.15789, 0.96", "-23.9259, -90.5556, 3.96422, 1.56", "-24.254, -91.5069, 3.85971, 1.56", "-24.9364, -93.4919, 3.65259, 2.04", "-25.3999, -94.8549, 3.51857, 2.04", "-26.0309, -96.9093, 3.34157, 2.04", "-26.5026, -98.8236, 3.2218, 1.44", "-26.6402, -99.7549, 3.18592, 1.44", "-26.8048, -101.521, 3.15095, 1.2", "-26.8571, -102.61, 3.12789, 1.2", "-26.8917, -104.143, 3.02812, 1.2", "-26.8939, -105.026, 2.93678, 1.2", "-26.8062, -106.981, 2.61224, 0.72", "-26.6674, -108.757, 2.25911, 0.96", "-26.3604, -111.956, 1.51653, 0.96", "-26.1232, -115.098, 0.703779, 1.32", "-26.0561, -116.509, 0.317079, 0.84", "-26.0177, -118.731, -0.320689, 1.8", "-26.1029, -120.494, -0.754267, 0.96", "-26.2126, -121.835, -0.979164, 1.56", "-26.3626, -122.977, -1.02198, 1.56", "-26.6262, -124.595, -0.906794, 1.56", "-27.0186, -127.289, -0.454946, 1.08", "-27.4475, -130.476, 0.302662, 1.44", "-27.609, -132.19, 0.772173, 0.96", "-27.6994, -134.175, 1.37344, 1.68", "-27.6849, -136.811, 2.20212, 2.04", "-27.5544, -139.964, 3.19634, 1.2", "-27.4374, -141.129, 3.5568, 0.84", "-27.2239, -142.43, 3.89771, 1.44", "-27.0674, -143.28, 4.10622, 1.44", "-26.6648, -145.463, 4.59445, 1.08", "-26.4395, -146.949, 4.90876, 2.16", "-26.1046, -149.874, 5.38062, 0.96", "-25.9958, -151.086, 5.5606, 0.96", "-25.9602, -151.716, 5.64602, 0.96", "-25.9254, -152.614, 5.75334, 0.96", "-25.8123, -154.382, 5.90231, 1.2", "-25.7795, -155.122, 5.94807, 0.6", "-25.8104, -156.033, 5.95286, 1.08", "-25.9673, -157.738, 5.93268, 0.48", "-26.0603, -158.693, 5.91408, 0.6", "-26.1029, -159.977, 5.88861, 0.96" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "51.2427, 126.369, -24.4286, 0.24", "50.5546, 129.749, -24.6287, 0.24", "50.1591, 131.883, -24.5685, 0.96", "49.7349, 134.679, -24.3751, 0.96", "49.4859, 137.102, -24.1503, 0.96", "49.439, 137.918, -24.0711, 0.72", "49.2169, 142.166, -23.6942, 1.2", "49.1594, 144.297, -23.4582, 0.72", "49.1407, 145.456, -23.3319, 0.72", "49.1296, 146.988, -23.1949, 0.72", "49.1194, 150.068, -23.0478, 1.2", "49.1263, 152.15, -23.0403, 1.2", "49.1393, 154.427, -23.1564, 0.36", "49.0578, 157.927, -23.3753, 0.84", "48.9385, 160.526, -23.5392, 0.36", "48.745, 163.609, -23.7262, 0.72", "48.6767, 165.099, -23.801, 0.72", "48.6739, 166.882, -23.8693, 0.72", "48.6973, 168.337, -23.9224, 0.12" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "51.2427, 126.369, -24.4286, 0.6", "52.6642, 130.991, -23.6442, 0.6", "53.51, 133.55, -23.2357, 1.68", "54.4537, 136.4, -22.8579, 0.72", "55.1533, 138.511, -22.6302, 1.32", "55.8087, 140.329, -22.4676, 0.36", "56.2159, 141.541, -22.3359, 0.36", "56.4186, 142.112, -22.2847, 0.36", "57.0291, 143.932, -22.0826, 1.32", "57.5116, 145.533, -21.8877, 0.84", "58.1351, 147.724, -21.6082, 0.48", "59.4682, 152.542, -21.0135, 0.96", "59.9132, 154.284, -20.8343, 0.48", "60.4052, 156.357, -20.6216, 0.84", "60.943, 158.728, -20.3752, 0.24", "61.2342, 160.105, -20.2438, 0.6", "61.7059, 162.61, -20.068, 0.24", "62.0354, 164.141, -20.0552, 0.96", "62.5781, 166.967, -20.0608, 0.48", "62.6878, 167.726, -20.0414, 0.48" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-27.3779, -130.939, -21.8334, 0.6", "-28.2679, -130.599, -22.1174, 0.6", "-28.9358, -130.344, -22.3305, 0.96" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-27.3779, -130.939, -21.8334, 0.48", "-27.4561, -132.093, -22.6085, 0.48", "-27.5332, -133.335, -23.663, 1.56", "-27.5548, -134.997, -25.1183, 0.6", "-27.5644, -135.735, -25.7653, 0.6", "-27.5863, -137.424, -27.2441, 0.6", "-27.6013, -138.579, -28.2562, 1.56", "-27.8468, -141.399, -30.9139, 0.6", "-27.9653, -142.212, -31.7329, 1.08" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "48.6973, 168.337, -23.9224, 0.96", "47.9566, 169.646, -24.1897, 0.96", "47.3268, 170.781, -24.316, 0.24", "46.5243, 172.139, -24.4147, 0.84", "45.971, 172.987, -24.4408, 0.36", "44.9811, 174.385, -24.4092, 0.72", "43.3883, 176.634, -24.3584, 0.72", "42.7437, 177.534, -24.2903, 0.24", "42.2069, 178.253, -24.1875, 0.72", "41.3233, 179.346, -23.9311, 0.72", "40.1671, 180.643, -23.4942, 0.72" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "48.6973, 168.337, -23.9224, 1.08", "48.4388, 171.042, -24.0057, 1.08", "48.2637, 172.507, -24.0649, 1.08", "48.1172, 174.446, -24.1491, 0.6", "48.0364, 177.025, -24.2631, 0.6", "47.9706, 179.126, -24.3559, 0.96", "47.9231, 180.644, -24.423, 0.96", "47.8826, 181.808, -24.5085, 0.12", "47.7465, 183.706, -24.6521, 0.12", "47.7405, 184.549, -24.7125, 1.32" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "40.1671, 180.643, -23.4942, 0.72", "39.4614, 181.443, -23.4755, 0.72", "38.689, 182.318, -23.4551, 1.08", "37.9421, 183.165, -23.4353, 0.6", "37.254, 183.945, -23.4171, 0.96", "36.1378, 185.209, -23.3876, 1.2", "35.5158, 185.914, -23.3712, 0.48" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "40.1671, 180.643, -23.4942, 0.48", "40.4455, 182.046, -23.9315, 0.48", "40.7599, 183.18, -24.3198, 0.96", "41.1401, 184.553, -24.7894, 0.48", "41.3406, 185.276, -25.0369, 1.08", "42.0811, 187.949, -25.9513, 0.6", "42.4057, 189.121, -26.3523, 0.6", "42.7844, 190.145, -26.7661, 0.96" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_23", "dend_12", "dend_1", "dend_0", "apic_13", "apic_1", "dend_27", "dend_24", "dend_16", "dend_13", "dend_5", "dend_2", "apic_19", "apic_14", "apic_12", "apic_11", "apic_2", "dend_37", "dend_28", "dend_26", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_9", "dend_6", "dend_4", "dend_3", "apic_18", "apic_15", "apic_8", "apic_3", "dend_39", "dend_38", "dend_36", "dend_29", "dend_22", "dend_21", "dend_19", "dend_18", "dend_11", "dend_10", "dend_8", "dend_7", "apic_17", "apic_16", "apic_10", "apic_9", "apic_5", "apic_4", "dend_31", "dend_30", "apic_7", "apic_6", "dend_33", "dend_32", "dend_35", "dend_34" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_23", "dend_12", "dend_1", "dend_0", "apic_13", "apic_1", "dend_27", "dend_24", "dend_16", "dend_13", "dend_5", "dend_2", "apic_19", "apic_14", "apic_12", "apic_11", "apic_2", "dend_37", "dend_28", "dend_26", "dend_25", "dend_20", "dend_17", "dend_15", "dend_14", "dend_9", "dend_6", "dend_4", "dend_3", "apic_18", "apic_15", "apic_8", "apic_3", "dend_39", "dend_38", "dend_36", "dend_29", "dend_22", "dend_21", "dend_19", "dend_18", "dend_11", "dend_10", "dend_8", "dend_7", "apic_17", "apic_16", "apic_10", "apic_9", "apic_5", "apic_4", "dend_31", "dend_30", "apic_7", "apic_6", "dend_33", "dend_32", "dend_35", "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_1", "apic_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_DBC_50ea904e54_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_13, id: apic_13, parent: apic_0
create apic_13
public apic_13
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_19, id: apic_19, parent: apic_13
create apic_19
public apic_19
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_1
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_1
create apic_11
public apic_11
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_37, id: dend_37, parent: dend_27
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_18, id: apic_18, parent: apic_14
create apic_18
public apic_18
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_8, id: apic_8, parent: apic_2
create apic_8
public apic_8
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: apic_17, id: apic_17, parent: apic_15
create apic_17
public apic_17
// Section: apic_16, id: apic_16, parent: apic_15
create apic_16
public apic_16
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_12, dend_1, dend_0, apic_13, apic_1, dend_27, dend_24, dend_16, dend_13, dend_5, dend_2, apic_19, apic_14, apic_12, apic_11, apic_2, dend_37, dend_28, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_9, dend_6, dend_4, dend_3, apic_18, apic_15, apic_8, apic_3, dend_39, dend_38, dend_36, dend_29, dend_22, dend_21, dend_19, dend_18, dend_11, dend_10, dend_8, dend_7, apic_17, apic_16, apic_10, apic_9, apic_5, apic_4, dend_31, dend_30, apic_7, apic_6, dend_33, dend_32, dend_35, dend_34]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_23, dend_12, dend_1, dend_0, apic_13, apic_1, dend_27, dend_24, dend_16, dend_13, dend_5, dend_2, apic_19, apic_14, apic_12, apic_11, apic_2, dend_37, dend_28, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_9, dend_6, dend_4, dend_3, apic_18, apic_15, apic_8, apic_3, dend_39, dend_38, dend_36, dend_29, dend_22, dend_21, dend_19, dend_18, dend_11, dend_10, dend_8, dend_7, apic_17, apic_16, apic_10, apic_9, apic_5, apic_4, dend_31, dend_30, apic_7, apic_6, dend_33, dend_32, dend_35, dend_34]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_63
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999972754950567)
    connect dend_23(0), soma_0(0.49999972754950567)
    connect dend_12(0), soma_0(0.49999972754950567)
    connect dend_1(0), soma_0(0.49999972754950567)
    connect dend_0(0), soma_0(0.49999972754950567)
    connect axon_0(0), soma_0(1.0)
    connect apic_13(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_19(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_1(1.0)
    connect apic_11(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_37(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_18(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_8(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect apic_17(0), apic_15(1.0)
    connect apic_16(0), apic_15(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.05004, -11.467, 1.68557, 4.95086 ) }
    soma_0 { pt3dadd( -5.4629, -10.2924, 1.5193, 5.92499 ) }
    soma_0 { pt3dadd( -4.87576, -9.11775, 1.35304, 7.141 ) }
    soma_0 { pt3dadd( -4.28863, -7.94311, 1.18677, 8.21564 ) }
    soma_0 { pt3dadd( -3.70149, -6.76848, 1.0205, 9.25116 ) }
    soma_0 { pt3dadd( -3.11436, -5.59384, 0.85423, 10.4286 ) }
    soma_0 { pt3dadd( -2.52722, -4.4192, 0.687961, 11.5816 ) }
    soma_0 { pt3dadd( -1.94009, -3.24457, 0.521692, 12.5153 ) }
    soma_0 { pt3dadd( -1.35295, -2.06993, 0.355423, 13.2226 ) }
    soma_0 { pt3dadd( -0.765817, -0.895296, 0.189155, 13.8842 ) }
    soma_0 { pt3dadd( -0.178681, 0.27934, 0.0228859, 14.0673 ) }
    soma_0 { pt3dadd( 0.408454, 1.45398, -0.143383, 13.865 ) }
    soma_0 { pt3dadd( 0.995589, 2.62861, -0.309652, 13.5401 ) }
    soma_0 { pt3dadd( 1.58272, 3.80325, -0.47592, 13.048 ) }
    soma_0 { pt3dadd( 2.16986, 4.97788, -0.642189, 12.525 ) }
    soma_0 { pt3dadd( 2.757, 6.15252, -0.808458, 12.0036 ) }
    soma_0 { pt3dadd( 3.34413, 7.32716, -0.974727, 11.4792 ) }
    soma_0 { pt3dadd( 3.93127, 8.50179, -1.141, 10.6333 ) }
    soma_0 { pt3dadd( 4.5184, 9.67643, -1.30726, 8.80501 ) }
    soma_0 { pt3dadd( 5.10554, 10.8511, -1.47353, 6.22842 ) }
    soma_0 { pt3dadd( 5.69267, 12.0257, -1.6398, 3.68925 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -7.65171, -10.2854, 1.81829, 5.05 ) }
    apic_0 { pt3dadd( -8.20088, -11.2439, 1.8233, 5.05 ) }
    apic_0 { pt3dadd( -8.76763, -12.2329, 1.82847, 5.05 ) }
    apic_0 { pt3dadd( -9.79345, -14.0232, 1.83783, 4.33 ) }
    apic_0 { pt3dadd( -10.4831, -15.2267, 1.84412, 3.85 ) }
    apic_0 { pt3dadd( -11.8358, -17.5873, 1.85647, 5.05 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 5.27829, 10.8233, 0.908288, 2.64 ) }
    dend_23 { pt3dadd( 6.76552, 12.4551, 0.351938, 2.64 ) }
    dend_23 { pt3dadd( 9.11586, 15.0909, -0.914193, 2.64 ) }
    dend_23 { pt3dadd( 10.0978, 16.248, -1.49258, 2.64 ) }
    dend_23 { pt3dadd( 11.3217, 17.7772, -2.27237, 2.64 ) }
    dend_23 { pt3dadd( 12.1803, 18.9068, -2.8089, 2.64 ) }
    dend_23 { pt3dadd( 15.6341, 23.5305, -4.82818, 2.04 ) }
    dend_23 { pt3dadd( 17.7142, 26.2898, -6.00188, 1.68 ) }
    dend_23 { pt3dadd( 18.7742, 27.6498, -6.54475, 1.68 ) }
    dend_23 { pt3dadd( 20.2798, 29.5515, -7.19332, 1.68 ) }
    dend_23 { pt3dadd( 21.3572, 30.9011, -7.55565, 1.68 ) }
    dend_23 { pt3dadd( 22.5579, 32.3995, -7.80446, 1.68 ) }
    dend_23 { pt3dadd( 24.7726, 35.2244, -7.89849, 1.68 ) }
    dend_23 { pt3dadd( 26.0897, 36.9622, -7.92042, 1.68 ) }
    dend_23 { pt3dadd( 27.6445, 39.2435, -7.88293, 1.32 ) }
    dend_23 { pt3dadd( 28.3069, 40.3805, -7.83533, 1.32 ) }
    dend_23 { pt3dadd( 29.1292, 42.1172, -7.7755, 1.32 ) }
    dend_23 { pt3dadd( 29.9038, 44.1658, -7.69859, 1.32 ) }
    dend_23 { pt3dadd( 30.4508, 46.3375, -7.57348, 1.32 ) }
    dend_23 { pt3dadd( 30.8537, 48.9333, -7.35783, 1.32 ) }
    dend_23 { pt3dadd( 30.9394, 50.244, -7.19634, 1.32 ) }
    dend_23 { pt3dadd( 30.9871, 52.9268, -6.79367, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 49/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 7.35828, 7.54732, -7.05171, 2.16 ) }
    dend_12 { pt3dadd( 8.23212, 7.86881, -7.40397, 1.8 ) }
    dend_12 { pt3dadd( 9.67382, 8.31597, -7.8634, 1.32 ) }
    dend_12 { pt3dadd( 11.3988, 8.85714, -8.39804, 1.8 ) }
    dend_12 { pt3dadd( 12.6866, 9.28594, -8.77988, 1.56 ) }
    dend_12 { pt3dadd( 15.6223, 10.3083, -9.5058, 1.92 ) }
    dend_12 { pt3dadd( 18.571, 11.3351, -10.235, 1.44 ) }
    dend_12 { pt3dadd( 21.0353, 12.1449, -10.8848, 1.44 ) }
    dend_12 { pt3dadd( 22.7656, 12.6522, -11.3722, 2.52 ) }
    dend_12 { pt3dadd( 23.8682, 12.9342, -11.6922, 2.52 ) }
    dend_12 { pt3dadd( 25.4139, 13.3367, -12.0759, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 60/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.808285, 9.84834, -3.52171, 1.8 ) }
    dend_1 { pt3dadd( 0.925945, 10.7245, -3.52617, 1.8 ) }
    dend_1 { pt3dadd( 1.16024, 11.925, -3.53118, 1.8 ) }
    dend_1 { pt3dadd( 1.52032, 13.5397, -3.53652, 1.8 ) }
    dend_1 { pt3dadd( 1.94464, 15.3963, -3.54164, 1.32 ) }
    dend_1 { pt3dadd( 2.22861, 16.7072, -3.50442, 1.8 ) }
    dend_1 { pt3dadd( 2.59026, 18.5393, -3.42207, 1.8 ) }
    dend_1 { pt3dadd( 2.78267, 19.4744, -3.36551, 1.8 ) }
    dend_1 { pt3dadd( 3.14807, 21.3865, -3.21863, 2.28 ) }
    dend_1 { pt3dadd( 3.30489, 22.5872, -3.08675, 2.28 ) }
    dend_1 { pt3dadd( 3.3142, 24.1617, -2.8281, 1.56 ) }
    dend_1 { pt3dadd( 3.18332, 25.0852, -2.62123, 1.56 ) }
    dend_1 { pt3dadd( 2.95502, 25.9271, -2.35581, 1.32 ) }
    dend_1 { pt3dadd( 2.6958, 26.5618, -2.09685, 1.92 ) }
    dend_1 { pt3dadd( 1.93033, 28.0011, -1.3439, 1.68 ) }
    dend_1 { pt3dadd( 1.05582, 29.3818, -0.485758, 1.68 ) }
    dend_1 { pt3dadd( 0.14476, 30.6095, 0.390086, 1.68 ) }
    dend_1 { pt3dadd( -0.924749, 31.9719, 1.44512, 1.68 ) }
    dend_1 { pt3dadd( -1.94913, 33.2022, 2.47749, 1.32 ) }
    dend_1 { pt3dadd( -2.76738, 34.1152, 3.30806, 2.04 ) }
    dend_1 { pt3dadd( -3.50259, 34.8426, 4.04374, 2.04 ) }
    dend_1 { pt3dadd( -4.33882, 35.6374, 4.92177, 1.08 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 82/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.671714, 9.25357, -1.82171, 2.16 ) }
    dend_0 { pt3dadd( -0.578373, 10.4861, -2.96541, 2.16 ) }
    dend_0 { pt3dadd( -0.636483, 11.9523, -4.27088, 2.16 ) }
    dend_0 { pt3dadd( -1.27721, 15.8757, -7.70355, 1.8 ) }
    dend_0 { pt3dadd( -1.83656, 18.1545, -9.56265, 1.2 ) }
    dend_0 { pt3dadd( -2.78128, 21.6531, -12.2216, 1.44 ) }
    dend_0 { pt3dadd( -3.26364, 23.307, -13.4195, 1.44 ) }
    dend_0 { pt3dadd( -4.08611, 26.172, -15.4076, 1.68 ) }
    dend_0 { pt3dadd( -5.25761, 29.9423, -17.9201, 1.8 ) }
    dend_0 { pt3dadd( -6.26746, 32.5728, -19.49, 1.8 ) }
    dend_0 { pt3dadd( -7.36874, 34.9711, -20.8375, 1.8 ) }
    dend_0 { pt3dadd( -9.06994, 38.2978, -22.5897, 1.8 ) }
    dend_0 { pt3dadd( -10.8941, 41.6358, -24.1408, 2.28 ) }
    dend_0 { pt3dadd( -12.32, 44.0999, -25.1849, 2.16 ) }
    dend_0 { pt3dadd( -14.7399, 47.993, -26.814, 1.08 ) }
    dend_0 { pt3dadd( -16.8125, 50.9759, -28.121, 1.8 ) }
    dend_0 { pt3dadd( -18.633, 53.2796, -29.1821, 1.44 ) }
    dend_0 { pt3dadd( -20.9076, 55.8075, -30.4836, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( -23.2219, 58.0416, -31.8154, 1.32 ) }
    dend_0 { pt3dadd( -25.5265, 60.1501, -33.4032, 1.2 ) }
    dend_0 { pt3dadd( -26.5532, 61.1241, -34.3278, 1.2 ) }
    dend_0 { pt3dadd( -27.9329, 62.599, -36.0306, 1.68 ) }
    dend_0 { pt3dadd( -29.023, 64.026, -38.0238, 1.2 ) }
    dend_0 { pt3dadd( -29.4569, 64.7258, -39.0108, 1.2 ) }
    dend_0 { pt3dadd( -30.4713, 66.6927, -41.5861, 2.28 ) }
    dend_0 { pt3dadd( -30.9638, 67.7804, -42.8875, 2.28 ) }
    dend_0 { pt3dadd( -32.0582, 70.867, -46.3749, 2.28 ) }
    dend_0 { pt3dadd( -33.158, 75.1671, -50.955, 2.04 ) }
    dend_0 { pt3dadd( -33.4937, 77.88, -53.9353, 1.44 ) }
    dend_0 { pt3dadd( -33.577, 79.7596, -56.088, 1.08 ) }
    dend_0 { pt3dadd( -33.5384, 80.9983, -57.5357, 1.56 ) }
    dend_0 { pt3dadd( -33.2171, 84.1037, -61.1203, 2.16 ) }
    dend_0 { pt3dadd( -32.8063, 85.9566, -63.1335, 2.16 ) }
    dend_0 { pt3dadd( -30.83, 91.7841, -69.2526, 1.68 ) }
    dend_0 { pt3dadd( -29.8615, 93.9254, -71.6384, 1.44 ) }
    dend_0 { pt3dadd( -29.3061, 95.0278, -72.9024, 1.44 ) }
    dend_0 { pt3dadd( -28.5465, 96.3729, -74.4803, 1.08 ) }
    dend_0 { pt3dadd( -27.1045, 98.6736, -77.1125, 1.44 ) }
    dend_0 { pt3dadd( -26.1778, 100.137, -78.7042, 1.44 ) }
    dend_0 { pt3dadd( -24.2787, 102.785, -80.922, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 22/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.69267, 12.0257, -1.6398, 0.964009 ) }
    axon_0 { pt3dadd( 12.3992, 25.4429, -1.6398, 0.964009 ) }
    axon_0 { pt3dadd( 19.1058, 38.8602, -1.6398, 0.964009 ) }
    // Section: apic_13, id: apic_13, parent: apic_0 (entry count 25/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -11.8358, -17.5873, 1.85647, 2.28 ) }
    apic_13 { pt3dadd( -13.7267, -19.1311, 2.90189, 2.28 ) }
    apic_13 { pt3dadd( -15.3293, -20.4543, 3.74783, 2.04 ) }
    apic_13 { pt3dadd( -16.6092, -21.4654, 4.38375, 1.92 ) }
    apic_13 { pt3dadd( -18.3562, -22.6943, 5.18104, 1.68 ) }
    apic_13 { pt3dadd( -19.8365, -23.7357, 5.85666, 1.68 ) }
    apic_13 { pt3dadd( -20.8826, -24.4715, 6.33408, 1.68 ) }
    apic_13 { pt3dadd( -21.5981, -24.9944, 6.68067, 1.68 ) }
    apic_13 { pt3dadd( -22.7468, -25.791, 7.1986, 1.68 ) }
    apic_13 { pt3dadd( -25.2241, -27.2955, 8.12629, 2.52 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 35/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -11.8358, -17.5873, 1.85647, 2.76 ) }
    apic_1 { pt3dadd( -10.5739, -21.283, 3.89234, 2.76 ) }
    apic_1 { pt3dadd( -10.0923, -22.6931, 4.66913, 2.76 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 38/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 30.9871, 52.9268, -6.79367, 1.68 ) }
    dend_27 { pt3dadd( 31.9885, 55.5868, -8.22347, 1.68 ) }
    dend_27 { pt3dadd( 32.6174, 57.6024, -9.35103, 1.68 ) }
    dend_27 { pt3dadd( 33.2908, 60.1798, -10.7859, 1.68 ) }
    dend_27 { pt3dadd( 33.8205, 62.2072, -11.9146, 1.92 ) }
    dend_27 { pt3dadd( 34.2628, 63.9003, -12.8572, 1.08 ) }
    dend_27 { pt3dadd( 34.5578, 65.0296, -13.4859, 1.08 ) }
    dend_27 { pt3dadd( 35.0359, 67.8245, -15.3176, 2.16 ) }
    dend_27 { pt3dadd( 35.2256, 69.4782, -16.4288, 2.16 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 47/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 30.9871, 52.9268, -6.79367, 1.2 ) }
    dend_24 { pt3dadd( 33.9298, 53.4772, -7.24958, 1.2 ) }
    dend_24 { pt3dadd( 35.284, 53.6941, -7.44598, 1.2 ) }
    dend_24 { pt3dadd( 36.2082, 53.8786, -7.5875, 1.2 ) }
    dend_24 { pt3dadd( 36.9345, 54.0579, -7.69884, 1.2 ) }
    dend_24 { pt3dadd( 37.7433, 54.2737, -7.80766, 0.72 ) }
    dend_24 { pt3dadd( 38.8259, 54.5861, -7.92426, 1.32 ) }
    dend_24 { pt3dadd( 41.0974, 55.377, -8.11614, 0.84 ) }
    dend_24 { pt3dadd( 41.9539, 55.6776, -8.21802, 0.84 ) }
    dend_24 { pt3dadd( 42.7477, 55.9631, -8.32995, 0.84 ) }
    dend_24 { pt3dadd( 43.5934, 56.305, -8.46022, 0.84 ) }
    dend_24 { pt3dadd( 44.6712, 56.77, -8.63589, 0.84 ) }
    dend_24 { pt3dadd( 46.9395, 57.7451, -8.99824, 0.84 ) }
    dend_24 { pt3dadd( 48.3781, 58.3406, -9.17976, 1.68 ) }
    dend_24 { pt3dadd( 50.2979, 59.0264, -9.43526, 0.96 ) }
    dend_24 { pt3dadd( 51.3766, 59.3741, -9.59915, 0.96 ) }
    dend_24 { pt3dadd( 51.9727, 59.5512, -9.69633, 0.96 ) }
    dend_24 { pt3dadd( 52.6049, 59.6887, -9.80644, 0.96 ) }
    dend_24 { pt3dadd( 53.3382, 59.8455, -9.89587, 0.96 ) }
    dend_24 { pt3dadd( 54.8215, 60.1873, -10.0714, 1.56 ) }
    dend_24 { pt3dadd( 55.6793, 60.3857, -10.1405, 1.56 ) }
    dend_24 { pt3dadd( 56.4101, 60.5538, -10.1887, 1.56 ) }
    dend_24 { pt3dadd( 58.4385, 61.093, -10.1838, 1.32 ) }
    dend_24 { pt3dadd( 61.5046, 62.0203, -10.0017, 1.32 ) }
    dend_24 { pt3dadd( 62.7895, 62.454, -9.85925, 1.32 ) }
    dend_24 { pt3dadd( 64.6363, 63.1356, -9.53689, 1.08 ) }
    dend_24 { pt3dadd( 66.3435, 63.7896, -9.18758, 1.08 ) }
    dend_24 { pt3dadd( 68.346, 64.6, -8.71238, 1.08 ) }
    dend_24 { pt3dadd( 69.2528, 64.9889, -8.43476, 1.08 ) }
    dend_24 { pt3dadd( 70.0217, 65.2766, -8.17343, 1.08 ) }
    dend_24 { pt3dadd( 70.9749, 65.6467, -7.82073, 1.08 ) }
    dend_24 { pt3dadd( 72.3773, 66.2633, -7.21702, 1.44 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 79/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 25.4139, 13.3367, -12.0759, 1.32 ) }
    dend_16 { pt3dadd( 26.3145, 13.8684, -11.3472, 1.32 ) }
    dend_16 { pt3dadd( 26.9821, 14.3492, -10.7716, 1.32 ) }
    dend_16 { pt3dadd( 28.4321, 15.3881, -9.47162, 0.84 ) }
    dend_16 { pt3dadd( 29.2641, 15.96, -8.6724, 1.32 ) }
    dend_16 { pt3dadd( 30.2076, 16.5648, -7.73527, 1.32 ) }
    dend_16 { pt3dadd( 30.7614, 16.9121, -7.18029, 0.96 ) }
    dend_16 { pt3dadd( 31.4988, 17.4304, -6.33977, 1.44 ) }
    dend_16 { pt3dadd( 32.2689, 17.9559, -5.46373, 1.44 ) }
    dend_16 { pt3dadd( 32.8682, 18.2266, -4.90154, 1.44 ) }
    dend_16 { pt3dadd( 33.286, 18.3155, -4.54, 1.44 ) }
    dend_16 { pt3dadd( 33.8412, 18.3615, -4.10082, 0.84 ) }
    dend_16 { pt3dadd( 34.2239, 18.3995, -3.74272, 0.84 ) }
    dend_16 { pt3dadd( 34.935, 18.479, -2.96875, 1.32 ) }
    dend_16 { pt3dadd( 36.0093, 18.6434, -1.78057, 1.32 ) }
    dend_16 { pt3dadd( 36.7157, 18.7729, -0.990753, 1.32 ) }
    dend_16 { pt3dadd( 37.5579, 18.9431, 0.00375693, 1.2 ) }
    dend_16 { pt3dadd( 38.9554, 19.1953, 1.80837, 1.08 ) }
    dend_16 { pt3dadd( 40.2412, 19.475, 3.68212, 0.96 ) }
    dend_16 { pt3dadd( 45.0986, 22.6084, 8.81046, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 99/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 25.4139, 13.3367, -12.0759, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_13 { pt3dadd( 26.5401, 14.4112, -12.9574, 1.32 ) }
    dend_13 { pt3dadd( 28.0786, 15.8129, -14.1098, 1.2 ) }
    dend_13 { pt3dadd( 29.0159, 16.5265, -14.7755, 1.2 ) }
    dend_13 { pt3dadd( 30.6734, 17.5484, -15.8642, 0.96 ) }
    dend_13 { pt3dadd( 32.6342, 18.5339, -17.1213, 0.96 ) }
    dend_13 { pt3dadd( 33.3593, 18.8391, -17.5847, 0.96 ) }
    dend_13 { pt3dadd( 36.0228, 19.7348, -19.2417, 1.44 ) }
    dend_13 { pt3dadd( 38.5524, 20.5108, -20.7826, 1.8 ) }
    dend_13 { pt3dadd( 40.4817, 21.1023, -21.9094, 1.8 ) }
    dend_13 { pt3dadd( 42.5027, 21.6869, -23.0544, 1.8 ) }
    dend_13 { pt3dadd( 44.2909, 22.1648, -24.0445, 1.2 ) }
    dend_13 { pt3dadd( 46.2213, 22.7993, -25.0766, 1.68 ) }
    dend_13 { pt3dadd( 47.809, 23.4241, -25.8302, 1.68 ) }
    dend_13 { pt3dadd( 49.3521, 24.1448, -26.4902, 0.96 ) }
    dend_13 { pt3dadd( 51.082, 24.9745, -27.1556, 1.44 ) }
    dend_13 { pt3dadd( 52.5537, 25.6558, -27.6347, 1.44 ) }
    dend_13 { pt3dadd( 55.8892, 27.1694, -28.6365, 1.8 ) }
    dend_13 { pt3dadd( 58.3383, 28.187, -29.3321, 0.84 ) }
    dend_13 { pt3dadd( 60.2152, 28.9001, -29.8292, 1.2 ) }
    dend_13 { pt3dadd( 63.4981, 30.0897, -30.6754, 2.16 ) }
    dend_13 { pt3dadd( 64.6566, 30.4784, -30.9311, 2.4 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.33882, 35.6374, 4.92177, 1.08 ) }
    dend_5 { pt3dadd( 0.716625, 36.7349, 6.6247, 1.08 ) }
    dend_5 { pt3dadd( 3.61352, 37.3638, 7.60052, 1.44 ) }
    dend_5 { pt3dadd( 6.29496, 37.9459, 8.50376, 1.08 ) }
    dend_5 { pt3dadd( 17.6563, 39.9139, 14.288, 1.08 ) }
    dend_5 { pt3dadd( 27.7135, 44.187, 21.096, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 27/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.33882, 35.6374, 4.92177, 1.08 ) }
    dend_2 { pt3dadd( -5.83222, 36.9902, 5.61881, 1.08 ) }
    dend_2 { pt3dadd( -6.61718, 37.4911, 6.11882, 0.48 ) }
    dend_2 { pt3dadd( -7.43637, 37.8957, 6.78211, 1.8 ) }
    dend_2 { pt3dadd( -9.06795, 38.62, 8.1753, 1.32 ) }
    dend_2 { pt3dadd( -10.7098, 39.4042, 9.632, 1.08 ) }
    dend_2 { pt3dadd( -12.4313, 40.3897, 11.2433, 1.44 ) }
    dend_2 { pt3dadd( -13.3923, 40.9667, 12.2583, 1.44 ) }
    dend_2 { pt3dadd( -14.672, 41.7264, 13.6333, 0.96 ) }
    dend_2 { pt3dadd( -15.3391, 42.1298, 14.3674, 0.96 ) }
    dend_2 { pt3dadd( -16.1735, 42.6376, 15.1443, 1.44 ) }
    dend_2 { pt3dadd( -17.6417, 43.5455, 16.0682, 0.96 ) }
    dend_2 { pt3dadd( -19.0208, 44.39, 16.6454, 0.96 ) }
    dend_2 { pt3dadd( -20.6807, 45.3062, 17.1339, 1.44 ) }
    dend_2 { pt3dadd( -21.9536, 45.9554, 17.4199, 1.8 ) }
    dend_2 { pt3dadd( -24.7756, 47.2299, 17.9486, 1.08 ) }
    dend_2 { pt3dadd( -26.6107, 47.9184, 18.2052, 0.72 ) }
    dend_2 { pt3dadd( -28.4161, 48.4752, 18.3439, 1.32 ) }
    dend_2 { pt3dadd( -30.4357, 49.0701, 18.3672, 1.68 ) }
    dend_2 { pt3dadd( -38.4526, 53.9815, 24.0943, 1.68 ) }
    dend_2 { pt3dadd( -46.5412, 58.8023, 29.8016, 1.68 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 48/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 19.1058, 38.8602, -1.6398, 0.964009 ) }
    axon_1 { pt3dadd( 25.8123, 52.2774, -1.6398, 0.964009 ) }
    axon_1 { pt3dadd( 32.5188, 65.6947, -1.6398, 0.964009 ) }
    // Section: apic_19, id: apic_19, parent: apic_13 (entry count 51/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -25.2241, -27.2955, 8.12629, 1.32 ) }
    apic_19 { pt3dadd( -26.3637, -27.8439, 9.48987, 1.32 ) }
    apic_19 { pt3dadd( -27.4866, -28.4025, 10.8452, 1.08 ) }
    apic_19 { pt3dadd( -28.4449, -28.8624, 12.0659, 1.08 ) }
    apic_19 { pt3dadd( -29.2755, -29.2264, 13.2085, 1.08 ) }
    apic_19 { pt3dadd( -29.963, -29.5035, 14.2014, 1.08 ) }
    apic_19 { pt3dadd( -30.8599, -29.8637, 15.515, 1.08 ) }
    apic_19 { pt3dadd( -31.2329, -30.0737, 16.0904, 1.08 ) }
    apic_19 { pt3dadd( -31.6926, -30.3891, 16.8098, 1.08 ) }
    apic_19 { pt3dadd( -32.1959, -30.7013, 17.5883, 1.44 ) }
    apic_19 { pt3dadd( -32.8942, -31.1207, 18.7752, 1.08 ) }
    apic_19 { pt3dadd( -33.4393, -31.4744, 19.7852, 1.08 ) }
    apic_19 { pt3dadd( -34.1453, -32.0696, 21.069, 1.56 ) }
    apic_19 { pt3dadd( -34.6444, -32.5726, 21.8556, 1.44 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 65/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -25.2241, -27.2955, 8.12629, 1.8 ) }
    apic_14 { pt3dadd( -26.7151, -27.9177, 8.21089, 1.8 ) }
    apic_14 { pt3dadd( -28.1297, -28.6215, 8.24996, 1.44 ) }
    apic_14 { pt3dadd( -30.2027, -29.8337, 8.2143, 2.16 ) }
    apic_14 { pt3dadd( -31.8482, -30.9279, 8.12811, 1.8 ) }
    apic_14 { pt3dadd( -33.8272, -32.4411, 7.98666, 1.44 ) }
    apic_14 { pt3dadd( -35.7876, -34.258, 7.80386, 1.44 ) }
    apic_14 { pt3dadd( -37.1485, -36.0457, 7.59387, 1.2 ) }
    apic_14 { pt3dadd( -37.9801, -37.7494, 7.39562, 1.68 ) }
    apic_14 { pt3dadd( -38.3162, -38.8513, 7.29078, 1.68 ) }
    apic_14 { pt3dadd( -38.6512, -40.4446, 7.17087, 1.68 ) }
    apic_14 { pt3dadd( -39.0684, -43.0358, 7.02709, 1.32 ) }
    apic_14 { pt3dadd( -39.4687, -45.51, 6.98162, 1.68 ) }
    apic_14 { pt3dadd( -39.9621, -47.7115, 7.06625, 1.2 ) }
    apic_14 { pt3dadd( -40.5309, -49.6246, 7.22197, 1.56 ) }
    apic_14 { pt3dadd( -41.3782, -51.9218, 7.43893, 1.56 ) }
    apic_14 { pt3dadd( -42.2024, -53.8525, 7.61419, 1.56 ) }
    apic_14 { pt3dadd( -43.0595, -55.6058, 7.71817, 1.92 ) }
    apic_14 { pt3dadd( -44.4197, -58.256, 7.86913, 1.56 ) }
    apic_14 { pt3dadd( -45.244, -59.8742, 7.95824, 1.56 ) }
    apic_14 { pt3dadd( -47.2452, -63.8474, 8.10917, 1.32 ) }
    apic_14 { pt3dadd( -48.2194, -65.8045, 8.14553, 1.32 ) }
    apic_14 { pt3dadd( -49.2746, -67.9651, 8.11515, 2.4 ) }
    // Section: apic_12, id: apic_12, parent: apic_1 (entry count 88/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -10.0923, -22.6931, 4.66913, 0.84 ) }
    apic_12 { pt3dadd( -7.57397, -25.1557, 6.71686, 0.84 ) }
    apic_12 { pt3dadd( -6.20819, -26.6983, 7.85413, 0.84 ) }
    apic_12 { pt3dadd( -3.92313, -29.788, 9.9671, 2.04 ) }
    apic_12 { pt3dadd( -2.01539, -32.6736, 11.8334, 1.56 ) }
    apic_12 { pt3dadd( -0.532049, -35.0171, 13.3304, 2.04 ) }
    apic_12 { pt3dadd( 1.00381, -37.4119, 14.8691, 1.2 ) }
    apic_12 { pt3dadd( 2.24606, -39.466, 16.2003, 1.68 ) }
    apic_12 { pt3dadd( 4.07113, -42.2807, 18.2113, 0.84 ) }
    apic_12 { pt3dadd( 5.0469, -43.6748, 19.3441, 0.84 ) }
    apic_12 { pt3dadd( 6.36236, -45.3896, 20.8682, 1.32 ) }
    apic_12 { pt3dadd( 7.50671, -46.7485, 22.2291, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_12 { pt3dadd( 9.30134, -48.7136, 24.4367, 1.32 ) }
    apic_12 { pt3dadd( 11.1582, -50.4355, 26.6269, 1.8 ) }
    apic_12 { pt3dadd( 13.5515, -52.4151, 29.3638, 1.2 ) }
    apic_12 { pt3dadd( 14.3163, -53.0504, 30.2752, 1.2 ) }
    apic_12 { pt3dadd( 14.8485, -53.54, 30.952, 1.2 ) }
    apic_12 { pt3dadd( 16.2433, -55.1005, 32.9075, 1.8 ) }
    apic_12 { pt3dadd( 17.2354, -56.5687, 34.3766, 1.8 ) }
    // Section: apic_11, id: apic_11, parent: apic_1 (entry count 7/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -10.0923, -22.6931, 4.66913, 1.44 ) }
    apic_11 { pt3dadd( -10.7106, -26.1105, 6.37354, 1.44 ) }
    apic_11 { pt3dadd( -11.1878, -28.898, 7.63071, 1.44 ) }
    apic_11 { pt3dadd( -11.742, -32.3135, 9.1102, 1.44 ) }
    apic_11 { pt3dadd( -12.1155, -34.6598, 10.0762, 1.44 ) }
    apic_11 { pt3dadd( -12.5438, -37.4634, 11.1818, 0.84 ) }
    apic_11 { pt3dadd( -12.7939, -39.5636, 11.8836, 0.84 ) }
    apic_11 { pt3dadd( -13.0934, -41.8557, 12.4579, 1.68 ) }
    apic_11 { pt3dadd( -13.5777, -45.2564, 13.0331, 1.32 ) }
    apic_11 { pt3dadd( -13.7753, -47.0896, 13.2631, 1.32 ) }
    apic_11 { pt3dadd( -13.8789, -48.3895, 13.4196, 1.32 ) }
    apic_11 { pt3dadd( -14.2956, -54.0818, 14.1047, 1.92 ) }
    apic_11 { pt3dadd( -14.5684, -57.68, 14.5301, 1.32 ) }
    apic_11 { pt3dadd( -14.8116, -60.9481, 14.897, 1.68 ) }
    apic_11 { pt3dadd( -15.062, -64.6989, 15.3081, 1.2 ) }
    apic_11 { pt3dadd( -15.1742, -66.2747, 15.5009, 0.84 ) }
    apic_11 { pt3dadd( -15.3578, -69.0814, 15.7285, 1.56 ) }
    apic_11 { pt3dadd( -15.516, -71.566, 15.8572, 1.2 ) }
    apic_11 { pt3dadd( -15.6192, -75.7878, 15.9293, 1.56 ) }
    apic_11 { pt3dadd( -15.7182, -78.6775, 15.8563, 0.84 ) }
    apic_11 { pt3dadd( -15.8581, -81.1252, 15.6568, 1.68 ) }
    apic_11 { pt3dadd( -16.0855, -86.1843, 15.1135, 1.2 ) }
    apic_11 { pt3dadd( -16.1023, -87.7974, 14.8852, 1.2 ) }
    apic_11 { pt3dadd( -16.1135, -89.283, 14.5725, 1.32 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 31/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -10.0923, -22.6931, 4.66913, 1.8 ) }
    apic_2 { pt3dadd( -9.35836, -25.6886, 5.70369, 1.8 ) }
    apic_2 { pt3dadd( -9.14503, -26.6012, 5.96939, 1.8 ) }
    apic_2 { pt3dadd( -8.77479, -28.4323, 6.33362, 1.56 ) }
    apic_2 { pt3dadd( -8.47684, -30.3483, 6.56524, 2.52 ) }
    apic_2 { pt3dadd( -7.95882, -33.6793, 6.96792, 1.68 ) }
    apic_2 { pt3dadd( -7.67063, -35.5325, 7.19196, 1.8 ) }
    apic_2 { pt3dadd( -7.4894, -37.2473, 7.30622, 1.56 ) }
    apic_2 { pt3dadd( -7.28496, -39.5079, 7.41588, 2.28 ) }
    apic_2 { pt3dadd( -7.14457, -41.798, 7.42023, 1.92 ) }
    // Section: dend_37, id: dend_37, parent: dend_27 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 35.2256, 69.4782, -16.4288, 0.72 ) }
    dend_37 { pt3dadd( 34.4566, 72.3626, -16.9308, 0.72 ) }
    dend_37 { pt3dadd( 34.2091, 73.5429, -17.1358, 0.72 ) }
    dend_37 { pt3dadd( 33.657, 76.488, -17.6384, 1.2 ) }
    dend_37 { pt3dadd( 33.3579, 77.9487, -17.9012, 1.2 ) }
    dend_37 { pt3dadd( 32.9927, 79.5026, -18.2064, 1.2 ) }
    dend_37 { pt3dadd( 32.299, 82.4542, -18.7862, 1.56 ) }
    dend_37 { pt3dadd( 31.9534, 84.1484, -19.1475, 1.56 ) }
    dend_37 { pt3dadd( 31.7581, 85.0886, -19.352, 1.56 ) }
    dend_37 { pt3dadd( 31.2477, 87.7718, -19.9257, 1.56 ) }
    dend_37 { pt3dadd( 30.8092, 89.8958, -20.4164, 1.2 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 52/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 35.2256, 69.4782, -16.4288, 0.84 ) }
    dend_28 { pt3dadd( 35.9387, 71.8559, -16.6326, 0.84 ) }
    dend_28 { pt3dadd( 36.3829, 73.2936, -16.7706, 0.84 ) }
    dend_28 { pt3dadd( 36.8587, 74.9878, -16.9808, 0.84 ) }
    dend_28 { pt3dadd( 37.2043, 76.2442, -17.1486, 0.84 ) }
    dend_28 { pt3dadd( 37.5603, 77.4978, -17.3173, 0.84 ) }
    dend_28 { pt3dadd( 37.9183, 78.6551, -17.4671, 0.48 ) }
    dend_28 { pt3dadd( 38.5769, 80.8009, -17.8091, 0.96 ) }
    dend_28 { pt3dadd( 39.302, 83.1106, -18.2253, 0.48 ) }
    dend_28 { pt3dadd( 39.7885, 84.5304, -18.4915, 0.48 ) }
    dend_28 { pt3dadd( 40.1782, 85.6242, -18.7138, 0.96 ) }
    dend_28 { pt3dadd( 40.8291, 87.4254, -19.0884, 0.96 ) }
    dend_28 { pt3dadd( 41.8403, 90.3211, -19.6912, 0.24 ) }
    dend_28 { pt3dadd( 42.3583, 91.8818, -19.9434, 0.84 ) }
    dend_28 { pt3dadd( 42.8862, 93.4529, -20.1271, 0.24 ) }
    dend_28 { pt3dadd( 43.4787, 95.311, -20.3149, 0.72 ) }
    dend_28 { pt3dadd( 44.0553, 97.3282, -20.4865, 0.72 ) }
    dend_28 { pt3dadd( 44.2353, 98.0002, -20.5284, 0.12 ) }
    dend_28 { pt3dadd( 45.031, 100.954, -20.5737, 0.48 ) }
    dend_28 { pt3dadd( 45.3817, 102.23, -20.5683, 0.48 ) }
    dend_28 { pt3dadd( 46.1337, 105.181, -20.5166, 1.8 ) }
    dend_28 { pt3dadd( 46.4919, 106.583, -20.4563, 1.8 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 74/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 72.3773, 66.2633, -7.21702, 1.08 ) }
    dend_26 { pt3dadd( 74.5315, 65.629, -6.47902, 1.08 ) }
    dend_26 { pt3dadd( 77.083, 64.9267, -5.58711, 1.08 ) }
    dend_26 { pt3dadd( 81.3357, 63.778, -4.11474, 0.72 ) }
    dend_26 { pt3dadd( 84.4727, 63.0747, -3.05898, 1.32 ) }
    dend_26 { pt3dadd( 87.8434, 62.454, -1.82436, 0.48 ) }
    dend_26 { pt3dadd( 89.8778, 62.1251, -1.03466, 0.48 ) }
    dend_26 { pt3dadd( 91.5392, 61.9272, -0.392854, 0.96 ) }
    dend_26 { pt3dadd( 92.8138, 61.8169, 0.111753, 0.96 ) }
    dend_26 { pt3dadd( 96.9622, 61.6032, 1.94074, 0.48 ) }
    dend_26 { pt3dadd( 99.5147, 61.4834, 3.05528, 0.48 ) }
    dend_26 { pt3dadd( 100.9, 61.367, 3.63965, 1.68 ) }
    dend_26 { pt3dadd( 103.737, 61.0471, 4.84053, 0.84 ) }
    dend_26 { pt3dadd( 104.818, 60.8879, 5.3156, 0.84 ) }
    dend_26 { pt3dadd( 106.846, 60.5533, 6.22834, 1.32 ) }
    dend_26 { pt3dadd( 109.236, 60.0775, 7.2937, 0.84 ) }
    dend_26 { pt3dadd( 112.869, 59.3065, 8.83512, 1.2 ) }
    dend_26 { pt3dadd( 116.442, 58.5501, 10.3879, 0.72 ) }
    dend_26 { pt3dadd( 121.069, 57.5695, 12.5166, 1.2 ) }
    dend_26 { pt3dadd( 123.184, 57.1473, 13.517, 1.56 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 94/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 72.3773, 66.2633, -7.21702, 1.44 ) }
    dend_25 { pt3dadd( 74.4048, 67.4807, -7.48236, 1.44 ) }
    dend_25 { pt3dadd( 77.8492, 69.5233, -8.00015, 1.2 ) }
    dend_25 { pt3dadd( 80.9933, 71.3489, -8.49445, 0.84 ) }
    dend_25 { pt3dadd( 82.5577, 72.2737, -8.75419, 0.84 ) }
    dend_25 { pt3dadd( 85.5697, 74.0422, -9.24111, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_25 { pt3dadd( 87.1057, 74.9456, -9.49418, 0.84 ) }
    dend_25 { pt3dadd( 88.7877, 75.9401, -9.84815, 0.84 ) }
    dend_25 { pt3dadd( 90.1663, 76.8039, -10.0769, 0.84 ) }
    dend_25 { pt3dadd( 91.7105, 77.8219, -10.2337, 0.72 ) }
    dend_25 { pt3dadd( 92.9738, 78.6343, -10.3042, 1.2 ) }
    dend_25 { pt3dadd( 94.863, 79.9326, -10.263, 0.6 ) }
    dend_25 { pt3dadd( 96.4611, 81.1062, -10.1492, 1.08 ) }
    dend_25 { pt3dadd( 99.8308, 83.7447, -9.79709, 0.6 ) }
    dend_25 { pt3dadd( 101.363, 85.0285, -9.53302, 1.08 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 9/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 45.0986, 22.6084, 8.81046, 0.96 ) }
    dend_20 { pt3dadd( 48.3507, 29.2142, 14.2747, 0.96 ) }
    dend_20 { pt3dadd( 52.3066, 35.1339, 20.0807, 0.96 ) }
    dend_20 { pt3dadd( 56.3397, 39.5438, 27.1039, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 13/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 45.0986, 22.6084, 8.81046, 1.08 ) }
    dend_17 { pt3dadd( 50.6562, 27.2202, 15.0383, 0.96 ) }
    dend_17 { pt3dadd( 55.133, 31.6551, 22.2064, 0.96 ) }
    dend_17 { pt3dadd( 60.912, 36.5361, 28.0027, 0.96 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 17/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 64.6566, 30.4784, -30.9311, 0.84 ) }
    dend_15 { pt3dadd( 66.6097, 31.9833, -32.1339, 0.84 ) }
    dend_15 { pt3dadd( 67.7244, 33.0635, -33.0502, 1.32 ) }
    dend_15 { pt3dadd( 69.41, 34.9688, -34.422, 0.6 ) }
    dend_15 { pt3dadd( 70.4837, 36.1946, -35.176, 1.2 ) }
    dend_15 { pt3dadd( 72.0638, 38.0186, -36.2501, 1.68 ) }
    dend_15 { pt3dadd( 72.6045, 38.6342, -36.6091, 0.36 ) }
    dend_15 { pt3dadd( 75.0852, 41.7216, -38.5155, 1.2 ) }
    dend_15 { pt3dadd( 76.6224, 43.7418, -39.7278, 0.72 ) }
    dend_15 { pt3dadd( 78.2791, 45.9548, -40.9922, 0.96 ) }
    dend_15 { pt3dadd( 79.6555, 47.7462, -41.9593, 0.48 ) }
    dend_15 { pt3dadd( 81.2286, 49.6619, -42.95, 2.04 ) }
    dend_15 { pt3dadd( 82.8152, 51.4915, -43.955, 1.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 30/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 64.6566, 30.4784, -30.9311, 0.96 ) }
    dend_14 { pt3dadd( 65.4515, 30.3, -31.7745, 0.96 ) }
    dend_14 { pt3dadd( 66.7913, 30.0516, -33.1398, 0.96 ) }
    dend_14 { pt3dadd( 68.5503, 29.7984, -35.0389, 1.56 ) }
    dend_14 { pt3dadd( 69.9828, 29.6135, -36.7139, 1.08 ) }
    dend_14 { pt3dadd( 71.0337, 29.4828, -37.9462, 1.08 ) }
    dend_14 { pt3dadd( 71.9209, 29.3735, -38.9807, 1.08 ) }
    dend_14 { pt3dadd( 73.2746, 29.1896, -40.445, 1.32 ) }
    dend_14 { pt3dadd( 75.4914, 28.8029, -42.6878, 1.2 ) }
    dend_14 { pt3dadd( 77.3363, 28.3696, -44.401, 0.6 ) }
    dend_14 { pt3dadd( 79.3638, 27.7652, -46.2216, 1.8 ) }
    dend_14 { pt3dadd( 79.5929, 27.6851, -46.4224, 1.8 ) }
    dend_14 { pt3dadd( 81.2547, 26.9857, -47.8436, 0.72 ) }
    dend_14 { pt3dadd( 82.305, 26.4348, -48.7326, 1.2 ) }
    dend_14 { pt3dadd( 83.4402, 25.8149, -49.7304, 1.56 ) }
    dend_14 { pt3dadd( 84.7595, 25.0516, -50.8986, 0.72 ) }
    dend_14 { pt3dadd( 85.4814, 24.6089, -51.6085, 1.2 ) }
    dend_14 { pt3dadd( 86.7585, 23.8378, -53.0104, 1.32 ) }
    dend_14 { pt3dadd( 88.4589, 22.866, -55.2691, 1.08 ) }
    dend_14 { pt3dadd( 89.7335, 22.1655, -57.2007, 0.72 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 27.7135, 44.187, 21.096, 1.08 ) }
    dend_9 { pt3dadd( 38.6038, 47.2676, 25.2634, 1.08 ) }
    dend_9 { pt3dadd( 48.9964, 50.6525, 30.3519, 1.08 ) }
    dend_9 { pt3dadd( 59.6943, 53.1599, 35.3352, 1.08 ) }
    dend_9 { pt3dadd( 71.1709, 55.6815, 38.0785, 1.08 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 55/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 27.7135, 44.187, 21.096, 1.08 ) }
    dend_6 { pt3dadd( 38.72, 47.0686, 29.8487, 1.08 ) }
    dend_6 { pt3dadd( 50.9058, 47.5046, 37.4506, 1.08 ) }
    dend_6 { pt3dadd( 60.8684, 47.1218, 47.7986, 1.08 ) }
    dend_6 { pt3dadd( 71.3253, 45.3989, 57.495, 1.08 ) }
    dend_6 { pt3dadd( 81.6446, 45.1133, 67.491, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 61/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -46.5412, 58.8023, 29.8016, 1.08 ) }
    dend_4 { pt3dadd( -55.427, 63.6763, 33.5675, 1.08 ) }
    dend_4 { pt3dadd( -64.0244, 68.6194, 37.8669, 1.08 ) }
    dend_4 { pt3dadd( -72.5883, 72.9519, 42.867, 1.08 ) }
    dend_4 { pt3dadd( -80.6823, 78.9104, 46.7703, 1.08 ) }
    dend_4 { pt3dadd( -88.3271, 85.6917, 50.1308, 1.08 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 67/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -46.5412, 58.8023, 29.8016, 1.08 ) }
    dend_3 { pt3dadd( -55.1938, 64.2883, 37.4409, 1.08 ) }
    dend_3 { pt3dadd( -63.7214, 69.5822, 45.3615, 1.08 ) }
    dend_3 { pt3dadd( -70.8473, 76.5484, 53.3215, 1.08 ) }
    dend_3 { pt3dadd( -78.8955, 81.7759, 61.7797, 1.08 ) }
    dend_3 { pt3dadd( -86.9552, 86.2595, 70.667, 1.08 ) }
    // Section: apic_18, id: apic_18, parent: apic_14 (entry count 73/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -49.2746, -67.9651, 8.11515, 1.2 ) }
    apic_18 { pt3dadd( -51.8552, -68.1676, 7.34779, 1.2 ) }
    apic_18 { pt3dadd( -53.9027, -68.3414, 6.7661, 1.2 ) }
    apic_18 { pt3dadd( -57.2802, -68.708, 5.85814, 1.2 ) }
    apic_18 { pt3dadd( -61.3832, -69.2612, 4.78262, 0.84 ) }
    apic_18 { pt3dadd( -66.3748, -70.0165, 3.48736, 1.56 ) }
    apic_18 { pt3dadd( -69.9649, -70.6157, 2.59264, 0.96 ) }
    apic_18 { pt3dadd( -72.8613, -71.1928, 1.89264, 1.8 ) }
    apic_18 { pt3dadd( -76.553, -72.0036, 1.05341, 1.08 ) }
    apic_18 { pt3dadd( -77.7459, -72.2781, 0.836769, 1.08 ) }
    apic_18 { pt3dadd( -79.1063, -72.5969, 0.632516, 1.32 ) }
    apic_18 { pt3dadd( -81.6135, -73.2403, 0.357539, 0.6 ) }
    apic_18 { pt3dadd( -83.0813, -73.6183, 0.221028, 1.44 ) }
    apic_18 { pt3dadd( -85.4091, -74.1896, 0.0359869, 0.6 ) }
    apic_18 { pt3dadd( -87.1182, -74.575, -0.108495, 1.2 ) }
    apic_18 { pt3dadd( -88.7994, -74.9058, -0.280179, 0.72 ) }
    apic_18 { pt3dadd( -91.1112, -75.314, -0.58553, 1.8 ) }
    apic_18 { pt3dadd( -94.2104, -75.7167, -1.01433, 0.84 ) }
    apic_18 { pt3dadd( -96.1455, -75.969, -1.30032, 1.68 ) }
    apic_18 { pt3dadd( -98.7883, -76.289, -1.68157, 0.84 ) }
    apic_18 { pt3dadd( -101.594, -76.5676, -2.09787, 1.8 ) }
    apic_18 { pt3dadd( -104.142, -76.684, -2.47023, 0.84 ) }
    apic_18 { pt3dadd( -106.758, -76.7206, -2.91745, 1.2 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 96/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -49.2746, -67.9651, 8.11515, 1.44 ) }
    apic_15 { pt3dadd( -51.1299, -70.1637, 7.93434, 1.44 ) }
    apic_15 { pt3dadd( -52.1309, -71.2021, 7.89223, 1.44 ) }
    apic_15 { pt3dadd( -53.534, -72.6103, 7.92321, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_15 { pt3dadd( -54.9932, -74.0221, 7.95171, 1.2 ) }
    apic_15 { pt3dadd( -56.5476, -75.4496, 7.89215, 1.2 ) }
    apic_15 { pt3dadd( -57.5476, -76.3512, 7.82422, 1.2 ) }
    apic_15 { pt3dadd( -59.3952, -77.8581, 7.70665, 1.44 ) }
    apic_15 { pt3dadd( -61.0208, -79.1669, 7.54369, 1.44 ) }
    apic_15 { pt3dadd( -62.2622, -80.208, 7.35177, 1.44 ) }
    apic_15 { pt3dadd( -65.3626, -83.0112, 6.71933, 1.44 ) }
    apic_15 { pt3dadd( -66.0104, -83.6413, 6.55962, 1.44 ) }
    apic_15 { pt3dadd( -67.4198, -85.0796, 6.20745, 1.44 ) }
    apic_15 { pt3dadd( -68.4871, -86.2551, 5.94166, 1.44 ) }
    apic_15 { pt3dadd( -70.9281, -89.0003, 5.32, 1.8 ) }
    apic_15 { pt3dadd( -72.9759, -91.4014, 4.84748, 1.08 ) }
    apic_15 { pt3dadd( -75.0758, -93.9859, 4.42079, 1.92 ) }
    apic_15 { pt3dadd( -77.146, -96.5691, 4.01743, 1.44 ) }
    apic_15 { pt3dadd( -79.5287, -99.6214, 3.58488, 2.64 ) }
    // Section: apic_8, id: apic_8, parent: apic_2 (entry count 15/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -7.14457, -41.798, 7.42023, 1.08 ) }
    apic_8 { pt3dadd( -6.35671, -42.5672, 8.10772, 1.08 ) }
    apic_8 { pt3dadd( -5.07653, -43.817, 9.22482, 1.08 ) }
    apic_8 { pt3dadd( -4.64378, -44.2394, 9.60243, 1.08 ) }
    apic_8 { pt3dadd( -3.05797, -45.7876, 10.9862, 1.08 ) }
    apic_8 { pt3dadd( -1.93699, -46.8819, 11.9644, 1.44 ) }
    apic_8 { pt3dadd( -0.664647, -48.124, 13.0746, 2.16 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 22/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -7.14457, -41.798, 7.42023, 1.32 ) }
    apic_3 { pt3dadd( -7.63557, -43.4193, 7.15205, 1.32 ) }
    apic_3 { pt3dadd( -8.40106, -45.501, 6.71607, 1.32 ) }
    apic_3 { pt3dadd( -9.08183, -47.1786, 6.33405, 1.32 ) }
    apic_3 { pt3dadd( -9.80028, -48.7153, 5.97689, 1.68 ) }
    apic_3 { pt3dadd( -10.9215, -51.0091, 5.47007, 1.2 ) }
    apic_3 { pt3dadd( -11.2909, -51.7682, 5.30152, 1.2 ) }
    apic_3 { pt3dadd( -12.1254, -53.442, 4.85761, 1.2 ) }
    apic_3 { pt3dadd( -12.4177, -54.0189, 4.73689, 1.2 ) }
    apic_3 { pt3dadd( -13.5448, -56.3237, 4.40604, 1.44 ) }
    apic_3 { pt3dadd( -14.3625, -58.084, 4.22216, 1.44 ) }
    apic_3 { pt3dadd( -15.1953, -60.1064, 4.10084, 1.44 ) }
    apic_3 { pt3dadd( -16.1966, -62.718, 4.02241, 1.8 ) }
    apic_3 { pt3dadd( -17.1391, -65.4465, 4.03083, 1.56 ) }
    apic_3 { pt3dadd( -17.6328, -67.0079, 4.05949, 1.56 ) }
    apic_3 { pt3dadd( -17.9322, -68.0733, 4.09998, 1.56 ) }
    apic_3 { pt3dadd( -18.5965, -70.4556, 4.22495, 1.8 ) }
    apic_3 { pt3dadd( -18.9804, -71.8197, 4.31921, 1.8 ) }
    apic_3 { pt3dadd( -19.3426, -73.0105, 4.3812, 1.8 ) }
    apic_3 { pt3dadd( -19.6549, -74.0918, 4.37287, 1.8 ) }
    apic_3 { pt3dadd( -19.8548, -74.8519, 4.36983, 1.8 ) }
    apic_3 { pt3dadd( -20.2455, -76.5869, 4.37321, 1.44 ) }
    apic_3 { pt3dadd( -20.4706, -77.5744, 4.37347, 1.44 ) }
    apic_3 { pt3dadd( -20.9875, -79.8905, 4.37618, 1.68 ) }
    apic_3 { pt3dadd( -21.6783, -82.957, 4.37853, 1.08 ) }
    apic_3 { pt3dadd( -22.182, -85.3021, 4.38489, 2.28 ) }
    apic_3 { pt3dadd( -22.4998, -86.9387, 4.39558, 2.28 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 49/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 30.8092, 89.8958, -20.4164, 0.96 ) }
    dend_39 { pt3dadd( 29.9007, 90.9964, -21.5252, 0.96 ) }
    dend_39 { pt3dadd( 28.202, 92.9771, -23.6122, 0.6 ) }
    dend_39 { pt3dadd( 27.4775, 93.8002, -24.475, 1.08 ) }
    dend_39 { pt3dadd( 25.4887, 96.0856, -26.7886, 0.6 ) }
    dend_39 { pt3dadd( 24.2955, 97.4548, -28.1301, 1.08 ) }
    dend_39 { pt3dadd( 23.3985, 98.4956, -29.1046, 1.08 ) }
    dend_39 { pt3dadd( 22.179, 99.9364, -30.4216, 0.72 ) }
    dend_39 { pt3dadd( 21.5628, 100.705, -31.0671, 0.72 ) }
    dend_39 { pt3dadd( 20.4603, 102.237, -32.26, 1.08 ) }
    dend_39 { pt3dadd( 20.0129, 102.966, -32.699, 1.08 ) }
    dend_39 { pt3dadd( 19.1861, 104.609, -33.4672, 0.48 ) }
    dend_39 { pt3dadd( 18.1917, 106.972, -34.2731, 0.84 ) }
    dend_39 { pt3dadd( 17.2371, 109.786, -34.8379, 0.24 ) }
    dend_39 { pt3dadd( 16.6732, 111.644, -35.1462, 1.08 ) }
    dend_39 { pt3dadd( 15.8516, 114.754, -35.4846, 1.08 ) }
    dend_39 { pt3dadd( 15.5126, 116.29, -35.5613, 0.6 ) }
    dend_39 { pt3dadd( 15.2556, 117.844, -35.4571, 0.6 ) }
    dend_39 { pt3dadd( 14.9552, 120.725, -34.7219, 1.44 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 68/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 30.8092, 89.8958, -20.4164, 1.44 ) }
    dend_38 { pt3dadd( 31.0869, 93.6099, -20.7326, 1.44 ) }
    dend_38 { pt3dadd( 31.1881, 95.2737, -20.964, 1.44 ) }
    dend_38 { pt3dadd( 31.2344, 97.1055, -21.1861, 0.6 ) }
    dend_38 { pt3dadd( 31.2511, 100.822, -21.5928, 1.08 ) }
    dend_38 { pt3dadd( 31.2502, 101.237, -21.6345, 0.72 ) }
    dend_38 { pt3dadd( 31.2354, 103.711, -21.8784, 1.2 ) }
    dend_38 { pt3dadd( 31.1704, 106.721, -22.2525, 0.72 ) }
    dend_38 { pt3dadd( 31.147, 108.534, -22.5085, 0.72 ) }
    dend_38 { pt3dadd( 31.0619, 109.951, -22.7657, 1.2 ) }
    dend_38 { pt3dadd( 30.8494, 111.496, -23.1086, 1.2 ) }
    dend_38 { pt3dadd( 30.5546, 112.882, -23.4872, 1.2 ) }
    dend_38 { pt3dadd( 30.0331, 114.796, -24.1302, 0.72 ) }
    dend_38 { pt3dadd( 29.3329, 116.95, -24.9142, 0.72 ) }
    dend_38 { pt3dadd( 28.7449, 118.604, -25.5476, 1.08 ) }
    dend_38 { pt3dadd( 28.4336, 119.383, -25.831, 1.08 ) }
    dend_38 { pt3dadd( 27.2503, 121.984, -26.7203, 0.72 ) }
    dend_38 { pt3dadd( 25.841, 124.955, -27.7005, 1.2 ) }
    dend_38 { pt3dadd( 24.5378, 127.533, -28.584, 1.2 ) }
    dend_38 { pt3dadd( 23.3303, 129.829, -29.3943, 0.72 ) }
    dend_38 { pt3dadd( 22.2616, 131.934, -30.1424, 1.08 ) }
    dend_38 { pt3dadd( 21.4138, 133.61, -30.8184, 0.6 ) }
    dend_38 { pt3dadd( 20.1328, 136.062, -31.9714, 1.32 ) }
    dend_38 { pt3dadd( 18.2857, 139.567, -33.968, 0.6 ) }
    dend_38 { pt3dadd( 17.3585, 141.404, -35.1306, 0.84 ) }
    dend_38 { pt3dadd( 16.4624, 143.294, -36.3889, 0.6 ) }
    dend_38 { pt3dadd( 15.234, 145.984, -38.2658, 0.96 ) }
    dend_38 { pt3dadd( 14.3574, 148.029, -39.7283, 0.96 ) }
    dend_38 { pt3dadd( 12.9977, 151.287, -42.0977, 0.36 ) }
    dend_38 { pt3dadd( 12.1431, 153.667, -43.854, 0.84 ) }
    dend_38 { pt3dadd( 11.7297, 154.892, -44.7981, 0.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 99/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 46.4919, 106.583, -20.4563, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_36 { pt3dadd( 44.6762, 107.559, -21.2903, 0.84 ) }
    dend_36 { pt3dadd( 41.9444, 108.792, -22.8351, 0.6 ) }
    dend_36 { pt3dadd( 39.3919, 109.799, -24.4866, 1.08 ) }
    dend_36 { pt3dadd( 37.5207, 110.448, -25.6028, 1.08 ) }
    dend_36 { pt3dadd( 35.0684, 111.175, -27.2061, 0.72 ) }
    dend_36 { pt3dadd( 32.8355, 111.747, -28.6966, 1.32 ) }
    dend_36 { pt3dadd( 29.3822, 112.445, -31.0818, 0.84 ) }
    dend_36 { pt3dadd( 26.4875, 112.861, -33.1037, 1.44 ) }
    dend_36 { pt3dadd( 23.6264, 113.14, -35.0361, 0.84 ) }
    dend_36 { pt3dadd( 19.3938, 113.429, -37.6063, 0.6 ) }
    dend_36 { pt3dadd( 17.2175, 113.517, -38.7067, 0.6 ) }
    dend_36 { pt3dadd( 15.3545, 113.529, -39.5061, 0.6 ) }
    dend_36 { pt3dadd( 13.8756, 113.441, -40.0362, 0.6 ) }
    dend_36 { pt3dadd( 10.9304, 113.111, -40.9239, 0.6 ) }
    dend_36 { pt3dadd( 9.35535, 112.842, -41.4251, 0.6 ) }
    dend_36 { pt3dadd( 6.54325, 112.265, -42.1911, 0.6 ) }
    dend_36 { pt3dadd( 4.73627, 111.819, -42.7906, 0.6 ) }
    dend_36 { pt3dadd( 2.53845, 111.214, -43.6373, 0.6 ) }
    dend_36 { pt3dadd( 1.62405, 110.938, -44.0353, 0.6 ) }
    dend_36 { pt3dadd( -1.70471, 109.855, -45.4439, 0.96 ) }
    dend_36 { pt3dadd( -3.87845, 109.103, -46.2509, 0.96 ) }
    dend_36 { pt3dadd( -6.01027, 108.344, -46.8992, 0.6 ) }
    dend_36 { pt3dadd( -9.2516, 107.197, -47.6146, 0.6 ) }
    dend_36 { pt3dadd( -11.2716, 106.501, -47.9081, 0.6 ) }
    dend_36 { pt3dadd( -14.1181, 105.485, -48.1173, 1.08 ) }
    dend_36 { pt3dadd( -17.4912, 104.267, -48.0452, 0.72 ) }
    dend_36 { pt3dadd( -19.6563, 103.441, -47.8807, 1.2 ) }
    dend_36 { pt3dadd( -21.9466, 102.474, -47.837, 0.6 ) }
    dend_36 { pt3dadd( -23.8146, 101.623, -47.9838, 0.6 ) }
    dend_36 { pt3dadd( -26.2275, 100.486, -48.4845, 1.08 ) }
    dend_36 { pt3dadd( -28.3534, 99.4514, -49.301, 0.72 ) }
    dend_36 { pt3dadd( -30.6476, 98.2768, -50.5335, 1.2 ) }
    dend_36 { pt3dadd( -35.8449, 95.5988, -53.529, 0.72 ) }
    dend_36 { pt3dadd( -37.1999, 94.8924, -54.3295, 1.2 ) }
    dend_36 { pt3dadd( -38.6547, 94.1582, -55.1635, 1.2 ) }
    dend_36 { pt3dadd( -40.6457, 93.2845, -56.2101, 0.84 ) }
    dend_36 { pt3dadd( -42.9643, 92.3837, -57.2748, 1.2 ) }
    dend_36 { pt3dadd( -46.207, 91.3852, -58.4083, 0.6 ) }
    dend_36 { pt3dadd( -47.7457, 91.033, -58.7628, 0.6 ) }
    dend_36 { pt3dadd( -49.2425, 90.7135, -59.0739, 0.6 ) }
    dend_36 { pt3dadd( -52.4621, 90.0838, -59.7047, 1.2 ) }
    dend_36 { pt3dadd( -54.3525, 89.7467, -60.0576, 0.48 ) }
    dend_36 { pt3dadd( -57.0039, 89.3574, -60.5986, 0.96 ) }
    dend_36 { pt3dadd( -60.1548, 88.949, -61.5534, 1.32 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 44/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 46.4919, 106.583, -20.4563, 0.84 ) }
    dend_29 { pt3dadd( 47.5214, 110.87, -21.3171, 0.84 ) }
    dend_29 { pt3dadd( 48.1479, 113.48, -21.8409, 0.84 ) }
    dend_29 { pt3dadd( 48.6468, 115.558, -22.2581, 0.84 ) }
    dend_29 { pt3dadd( 49.2969, 118.265, -22.8017, 1.44 ) }
    dend_29 { pt3dadd( 50.1703, 121.903, -23.5319, 0.96 ) }
    dend_29 { pt3dadd( 51.2427, 126.369, -24.4286, 1.92 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 51/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 56.3397, 39.5438, 27.1039, 0.96 ) }
    dend_22 { pt3dadd( 60.4357, 45.5098, 33.8071, 0.96 ) }
    dend_22 { pt3dadd( 63.3659, 52.6232, 39.9329, 0.96 ) }
    dend_22 { pt3dadd( 65.4587, 60.6108, 45.2159, 0.96 ) }
    dend_22 { pt3dadd( 66.4074, 67.858, 51.8013, 0.96 ) }
    dend_22 { pt3dadd( 67.5277, 74.4819, 59.0155, 0.96 ) }
    dend_22 { pt3dadd( 67.6813, 81.0628, 66.3579, 0.96 ) }
    dend_22 { pt3dadd( 67.5542, 87.3589, 73.9569, 0.96 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 59/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 56.3397, 39.5438, 27.1039, 1.08 ) }
    dend_21 { pt3dadd( 60.4155, 45.24, 33.8319, 0.96 ) }
    dend_21 { pt3dadd( 64.9441, 50.7479, 40.4303, 0.96 ) }
    dend_21 { pt3dadd( 70.5778, 56.252, 46.1087, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 63/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 60.912, 36.5361, 28.0027, 0.96 ) }
    dend_19 { pt3dadd( 64.9773, 40.206, 32.9431, 0.96 ) }
    dend_19 { pt3dadd( 68.6617, 44.1833, 37.941, 0.96 ) }
    dend_19 { pt3dadd( 72.5039, 47.0387, 43.5636, 0.96 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 67/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 60.912, 36.5361, 28.0027, 1.08 ) }
    dend_18 { pt3dadd( 68.0008, 43.2817, 36.6044, 0.96 ) }
    dend_18 { pt3dadd( 75.3044, 52.2199, 42.517, 0.96 ) }
    dend_18 { pt3dadd( 79.9049, 60.9934, 50.9515, 0.96 ) }
    dend_18 { pt3dadd( 83.0653, 69.3131, 60.4668, 0.96 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 72/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 71.1709, 55.6815, 38.0785, 1.08 ) }
    dend_11 { pt3dadd( 77.7041, 57.6317, 39.7873, 1.08 ) }
    dend_11 { pt3dadd( 84.3258, 59.1234, 41.6249, 1.08 ) }
    dend_11 { pt3dadd( 91.13, 60.2047, 43.0436, 1.08 ) }
    dend_11 { pt3dadd( 97.839, 60.1985, 45.1534, 1.08 ) }
    dend_11 { pt3dadd( 104.576, 59.4701, 47.0169, 1.08 ) }
    dend_11 { pt3dadd( 111.37, 57.9791, 47.9177, 1.08 ) }
    dend_11 { pt3dadd( 117.706, 55.6132, 49.7347, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 71.1709, 55.6815, 38.0785, 1.08 ) }
    dend_10 { pt3dadd( 80.4273, 58.7364, 39.8163, 1.08 ) }
    dend_10 { pt3dadd( 89.8092, 61.4706, 41.4265, 1.08 ) }
    dend_10 { pt3dadd( 98.6891, 65.3052, 43.4959, 1.08 ) }
    dend_10 { pt3dadd( 107.916, 68.3379, 45.418, 1.08 ) }
    dend_10 { pt3dadd( 117.365, 69.7312, 48.0528, 1.08 ) }
    dend_10 { pt3dadd( 126.331, 70.397, 52.2163, 1.08 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 87/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 81.6446, 45.1133, 67.491, 1.08 ) }
    dend_8 { pt3dadd( 88.2395, 45.2423, 72.9631, 1.08 ) }
    dend_8 { pt3dadd( 94.1862, 46.628, 78.9702, 1.08 ) }
    dend_8 { pt3dadd( 99.7978, 49.4614, 84.7632, 1.08 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 91/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 81.6446, 45.1133, 67.491, 1.08 ) }
    dend_7 { pt3dadd( 91.9898, 45.2711, 76.4009, 1.08 ) }
    dend_7 { pt3dadd( 102.467, 47.528, 84.8453, 1.08 ) }
    dend_7 { pt3dadd( 113.716, 50.2629, 92.0556, 1.08 ) }
    // Section: apic_17, id: apic_17, parent: apic_15 (entry count 95/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -79.5287, -99.6214, 3.58488, 0.84 ) }
    apic_17 { pt3dadd( -81.973, -100.608, 3.48182, 0.84 ) }
    apic_17 { pt3dadd( -82.7529, -100.958, 3.43323, 0.84 ) }
    apic_17 { pt3dadd( -84.0146, -101.562, 3.35899, 0.84 ) }
    apic_17 { pt3dadd( -85.147, -102.127, 3.29707, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_17 { pt3dadd( -86.1452, -102.647, 3.22168, 0.84 ) }
    apic_17 { pt3dadd( -87.094, -103.186, 3.13697, 0.84 ) }
    apic_17 { pt3dadd( -88.5274, -104.021, 2.97941, 1.44 ) }
    apic_17 { pt3dadd( -89.9739, -104.945, 2.79069, 1.44 ) }
    apic_17 { pt3dadd( -90.5781, -105.365, 2.6993, 1.44 ) }
    apic_17 { pt3dadd( -91.9868, -106.374, 2.55434, 0.84 ) }
    apic_17 { pt3dadd( -93.4135, -107.348, 2.41313, 0.6 ) }
    // Section: apic_16, id: apic_16, parent: apic_15 (entry count 7/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -79.5287, -99.6214, 3.58488, 1.2 ) }
    apic_16 { pt3dadd( -80.3404, -101.443, 3.15322, 1.2 ) }
    apic_16 { pt3dadd( -81.0581, -102.805, 2.96395, 1.2 ) }
    apic_16 { pt3dadd( -82.353, -104.858, 2.78959, 1.8 ) }
    apic_16 { pt3dadd( -83.8412, -106.872, 2.7324, 0.96 ) }
    apic_16 { pt3dadd( -84.6925, -107.912, 2.74281, 1.2 ) }
    apic_16 { pt3dadd( -85.4663, -108.796, 2.77605, 1.2 ) }
    apic_16 { pt3dadd( -86.9188, -110.158, 2.95774, 0.84 ) }
    apic_16 { pt3dadd( -87.8748, -110.976, 3.10797, 1.32 ) }
    apic_16 { pt3dadd( -89.0545, -111.927, 3.29011, 1.32 ) }
    apic_16 { pt3dadd( -89.6336, -112.419, 3.35187, 1.32 ) }
    apic_16 { pt3dadd( -90.4426, -113.207, 3.36995, 1.32 ) }
    apic_16 { pt3dadd( -91.2766, -114.114, 3.32659, 1.56 ) }
    apic_16 { pt3dadd( -92.3633, -115.481, 3.14249, 1.32 ) }
    apic_16 { pt3dadd( -93.0556, -116.519, 2.96736, 1.32 ) }
    apic_16 { pt3dadd( -93.7445, -117.747, 2.69889, 1.08 ) }
    apic_16 { pt3dadd( -94.6135, -119.49, 2.27393, 0.84 ) }
    apic_16 { pt3dadd( -95.217, -120.818, 1.92825, 0.36 ) }
    apic_16 { pt3dadd( -95.904, -122.434, 1.50076, 0.84 ) }
    apic_16 { pt3dadd( -96.3474, -123.536, 1.21011, 0.84 ) }
    apic_16 { pt3dadd( -96.9436, -125.012, 0.747123, 0.48 ) }
    apic_16 { pt3dadd( -97.2305, -125.772, 0.486411, 0.84 ) }
    apic_16 { pt3dadd( -97.5638, -126.729, 0.122279, 0.36 ) }
    apic_16 { pt3dadd( -97.9399, -127.745, -0.283546, 0.96 ) }
    apic_16 { pt3dadd( -98.3743, -128.542, -0.575003, 0.24 ) }
    apic_16 { pt3dadd( -99.4329, -130.012, -1.08073, 0.72 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 33/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -0.664647, -48.124, 13.0746, 1.2 ) }
    apic_10 { pt3dadd( 0.0896147, -47.7452, 13.6438, 1.2 ) }
    apic_10 { pt3dadd( 0.548602, -47.5146, 13.9902, 1.2 ) }
    apic_10 { pt3dadd( 1.02086, -47.2774, 14.3465, 1.44 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 37/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -0.664647, -48.124, 13.0746, 0.84 ) }
    apic_9 { pt3dadd( -0.513178, -49.5985, 13.1988, 0.84 ) }
    apic_9 { pt3dadd( -0.3297, -51.4334, 13.3489, 0.84 ) }
    apic_9 { pt3dadd( -0.164631, -53.1619, 13.5134, 1.44 ) }
    apic_9 { pt3dadd( 0.0820187, -55.9955, 13.7912, 1.8 ) }
    apic_9 { pt3dadd( 0.24318, -58.0324, 13.9912, 1.08 ) }
    apic_9 { pt3dadd( 0.338744, -59.503, 14.1406, 1.08 ) }
    apic_9 { pt3dadd( 0.425176, -61.3489, 14.3375, 2.04 ) }
    apic_9 { pt3dadd( 0.529729, -63.9364, 14.5528, 1.08 ) }
    apic_9 { pt3dadd( 0.574618, -64.8563, 14.5927, 1.08 ) }
    apic_9 { pt3dadd( 0.637185, -65.9986, 14.6183, 1.08 ) }
    apic_9 { pt3dadd( 0.719695, -67.6524, 14.6068, 1.56 ) }
    apic_9 { pt3dadd( 0.764285, -68.4557, 14.5845, 1.56 ) }
    apic_9 { pt3dadd( 0.884635, -70.569, 14.4089, 1.08 ) }
    apic_9 { pt3dadd( 0.983195, -71.6705, 14.19, 0.84 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 52/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -22.4998, -86.9387, 4.39558, 1.2 ) }
    apic_5 { pt3dadd( -21.5111, -88.5183, 3.35325, 1.2 ) }
    apic_5 { pt3dadd( -21.0018, -89.5725, 2.76011, 1.2 ) }
    apic_5 { pt3dadd( -20.5642, -90.7013, 2.21164, 0.96 ) }
    apic_5 { pt3dadd( -20.2729, -91.6459, 1.78017, 1.56 ) }
    apic_5 { pt3dadd( -20.0255, -92.6963, 1.3173, 1.2 ) }
    apic_5 { pt3dadd( -19.8798, -93.5398, 0.959776, 1.32 ) }
    apic_5 { pt3dadd( -19.7811, -94.8407, 0.446433, 0.96 ) }
    apic_5 { pt3dadd( -19.7038, -96.1183, -0.0848615, 1.8 ) }
    apic_5 { pt3dadd( -19.6337, -97.4739, -0.754662, 0.6 ) }
    apic_5 { pt3dadd( -19.5818, -98.1963, -1.17587, 0.6 ) }
    apic_5 { pt3dadd( -19.5072, -98.8188, -1.60121, 0.96 ) }
    apic_5 { pt3dadd( -19.2855, -100.343, -2.71114, 0.96 ) }
    apic_5 { pt3dadd( -19.1276, -101.504, -3.53994, 1.32 ) }
    apic_5 { pt3dadd( -18.9408, -103.132, -4.71979, 2.28 ) }
    apic_5 { pt3dadd( -18.8208, -104.588, -5.73126, 2.28 ) }
    apic_5 { pt3dadd( -18.7259, -106.352, -6.89004, 1.68 ) }
    apic_5 { pt3dadd( -18.6989, -108.366, -8.12295, 1.2 ) }
    apic_5 { pt3dadd( -18.7733, -109.848, -8.94543, 1.2 ) }
    apic_5 { pt3dadd( -19.0543, -112.377, -10.2936, 1.2 ) }
    apic_5 { pt3dadd( -19.2713, -113.694, -10.9451, 1.2 ) }
    apic_5 { pt3dadd( -19.427, -114.453, -11.2977, 1.8 ) }
    apic_5 { pt3dadd( -19.5561, -114.967, -11.5323, 1.8 ) }
    apic_5 { pt3dadd( -19.9368, -116.159, -12.1556, 1.68 ) }
    apic_5 { pt3dadd( -20.2804, -117.01, -12.707, 1.08 ) }
    apic_5 { pt3dadd( -20.5472, -117.539, -13.0972, 1.08 ) }
    apic_5 { pt3dadd( -20.7761, -117.955, -13.4717, 1.08 ) }
    apic_5 { pt3dadd( -21.1452, -118.562, -14.0772, 1.08 ) }
    apic_5 { pt3dadd( -21.6156, -119.329, -14.9153, 1.92 ) }
    apic_5 { pt3dadd( -22.3299, -120.442, -16.0478, 1.32 ) }
    apic_5 { pt3dadd( -22.8428, -121.283, -16.8354, 0.72 ) }
    apic_5 { pt3dadd( -23.2709, -122.065, -17.4784, 1.32 ) }
    apic_5 { pt3dadd( -23.7791, -123.048, -18.2208, 0.72 ) }
    apic_5 { pt3dadd( -24.2928, -124.091, -18.9019, 1.44 ) }
    apic_5 { pt3dadd( -25.0487, -125.726, -19.7905, 0.84 ) }
    apic_5 { pt3dadd( -25.44, -126.577, -20.1637, 1.32 ) }
    apic_5 { pt3dadd( -25.934, -127.664, -20.5935, 0.72 ) }
    apic_5 { pt3dadd( -26.3955, -128.698, -20.9511, 0.72 ) }
    apic_5 { pt3dadd( -26.6996, -129.397, -21.1622, 0.72 ) }
    apic_5 { pt3dadd( -26.9546, -129.948, -21.3259, 0.72 ) }
    apic_5 { pt3dadd( -27.3779, -130.939, -21.8334, 1.2 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 93/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -22.4998, -86.9387, 4.39558, 0.96 ) }
    apic_4 { pt3dadd( -23.3131, -88.8807, 4.15789, 0.96 ) }
    apic_4 { pt3dadd( -23.9259, -90.5556, 3.96422, 1.56 ) }
    apic_4 { pt3dadd( -24.254, -91.5069, 3.85971, 1.56 ) }
    apic_4 { pt3dadd( -24.9364, -93.4919, 3.65259, 2.04 ) }
    apic_4 { pt3dadd( -25.3999, -94.8549, 3.51857, 2.04 ) }
    apic_4 { pt3dadd( -26.0309, -96.9093, 3.34157, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_4 { pt3dadd( -26.5026, -98.8236, 3.2218, 1.44 ) }
    apic_4 { pt3dadd( -26.6402, -99.7549, 3.18592, 1.44 ) }
    apic_4 { pt3dadd( -26.8048, -101.521, 3.15095, 1.2 ) }
    apic_4 { pt3dadd( -26.8571, -102.61, 3.12789, 1.2 ) }
    apic_4 { pt3dadd( -26.8917, -104.143, 3.02812, 1.2 ) }
    apic_4 { pt3dadd( -26.8939, -105.026, 2.93678, 1.2 ) }
    apic_4 { pt3dadd( -26.8062, -106.981, 2.61224, 0.72 ) }
    apic_4 { pt3dadd( -26.6674, -108.757, 2.25911, 0.96 ) }
    apic_4 { pt3dadd( -26.3604, -111.956, 1.51653, 0.96 ) }
    apic_4 { pt3dadd( -26.1232, -115.098, 0.703779, 1.32 ) }
    apic_4 { pt3dadd( -26.0561, -116.509, 0.317079, 0.84 ) }
    apic_4 { pt3dadd( -26.0177, -118.731, -0.320689, 1.8 ) }
    apic_4 { pt3dadd( -26.1029, -120.494, -0.754267, 0.96 ) }
    apic_4 { pt3dadd( -26.2126, -121.835, -0.979164, 1.56 ) }
    apic_4 { pt3dadd( -26.3626, -122.977, -1.02198, 1.56 ) }
    apic_4 { pt3dadd( -26.6262, -124.595, -0.906794, 1.56 ) }
    apic_4 { pt3dadd( -27.0186, -127.289, -0.454946, 1.08 ) }
    apic_4 { pt3dadd( -27.4475, -130.476, 0.302662, 1.44 ) }
    apic_4 { pt3dadd( -27.609, -132.19, 0.772173, 0.96 ) }
    apic_4 { pt3dadd( -27.6994, -134.175, 1.37344, 1.68 ) }
    apic_4 { pt3dadd( -27.6849, -136.811, 2.20212, 2.04 ) }
    apic_4 { pt3dadd( -27.5544, -139.964, 3.19634, 1.2 ) }
    apic_4 { pt3dadd( -27.4374, -141.129, 3.5568, 0.84 ) }
    apic_4 { pt3dadd( -27.2239, -142.43, 3.89771, 1.44 ) }
    apic_4 { pt3dadd( -27.0674, -143.28, 4.10622, 1.44 ) }
    apic_4 { pt3dadd( -26.6648, -145.463, 4.59445, 1.08 ) }
    apic_4 { pt3dadd( -26.4395, -146.949, 4.90876, 2.16 ) }
    apic_4 { pt3dadd( -26.1046, -149.874, 5.38062, 0.96 ) }
    apic_4 { pt3dadd( -25.9958, -151.086, 5.5606, 0.96 ) }
    apic_4 { pt3dadd( -25.9602, -151.716, 5.64602, 0.96 ) }
    apic_4 { pt3dadd( -25.9254, -152.614, 5.75334, 0.96 ) }
    apic_4 { pt3dadd( -25.8123, -154.382, 5.90231, 1.2 ) }
    apic_4 { pt3dadd( -25.7795, -155.122, 5.94807, 0.6 ) }
    apic_4 { pt3dadd( -25.8104, -156.033, 5.95286, 1.08 ) }
    apic_4 { pt3dadd( -25.9673, -157.738, 5.93268, 0.48 ) }
    apic_4 { pt3dadd( -26.0603, -158.693, 5.91408, 0.6 ) }
    apic_4 { pt3dadd( -26.1029, -159.977, 5.88861, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 37/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 51.2427, 126.369, -24.4286, 0.24 ) }
    dend_31 { pt3dadd( 50.5546, 129.749, -24.6287, 0.24 ) }
    dend_31 { pt3dadd( 50.1591, 131.883, -24.5685, 0.96 ) }
    dend_31 { pt3dadd( 49.7349, 134.679, -24.3751, 0.96 ) }
    dend_31 { pt3dadd( 49.4859, 137.102, -24.1503, 0.96 ) }
    dend_31 { pt3dadd( 49.439, 137.918, -24.0711, 0.72 ) }
    dend_31 { pt3dadd( 49.2169, 142.166, -23.6942, 1.2 ) }
    dend_31 { pt3dadd( 49.1594, 144.297, -23.4582, 0.72 ) }
    dend_31 { pt3dadd( 49.1407, 145.456, -23.3319, 0.72 ) }
    dend_31 { pt3dadd( 49.1296, 146.988, -23.1949, 0.72 ) }
    dend_31 { pt3dadd( 49.1194, 150.068, -23.0478, 1.2 ) }
    dend_31 { pt3dadd( 49.1263, 152.15, -23.0403, 1.2 ) }
    dend_31 { pt3dadd( 49.1393, 154.427, -23.1564, 0.36 ) }
    dend_31 { pt3dadd( 49.0578, 157.927, -23.3753, 0.84 ) }
    dend_31 { pt3dadd( 48.9385, 160.526, -23.5392, 0.36 ) }
    dend_31 { pt3dadd( 48.745, 163.609, -23.7262, 0.72 ) }
    dend_31 { pt3dadd( 48.6767, 165.099, -23.801, 0.72 ) }
    dend_31 { pt3dadd( 48.6739, 166.882, -23.8693, 0.72 ) }
    dend_31 { pt3dadd( 48.6973, 168.337, -23.9224, 0.12 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 56/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 51.2427, 126.369, -24.4286, 0.6 ) }
    dend_30 { pt3dadd( 52.6642, 130.991, -23.6442, 0.6 ) }
    dend_30 { pt3dadd( 53.51, 133.55, -23.2357, 1.68 ) }
    dend_30 { pt3dadd( 54.4537, 136.4, -22.8579, 0.72 ) }
    dend_30 { pt3dadd( 55.1533, 138.511, -22.6302, 1.32 ) }
    dend_30 { pt3dadd( 55.8087, 140.329, -22.4676, 0.36 ) }
    dend_30 { pt3dadd( 56.2159, 141.541, -22.3359, 0.36 ) }
    dend_30 { pt3dadd( 56.4186, 142.112, -22.2847, 0.36 ) }
    dend_30 { pt3dadd( 57.0291, 143.932, -22.0826, 1.32 ) }
    dend_30 { pt3dadd( 57.5116, 145.533, -21.8877, 0.84 ) }
    dend_30 { pt3dadd( 58.1351, 147.724, -21.6082, 0.48 ) }
    dend_30 { pt3dadd( 59.4682, 152.542, -21.0135, 0.96 ) }
    dend_30 { pt3dadd( 59.9132, 154.284, -20.8343, 0.48 ) }
    dend_30 { pt3dadd( 60.4052, 156.357, -20.6216, 0.84 ) }
    dend_30 { pt3dadd( 60.943, 158.728, -20.3752, 0.24 ) }
    dend_30 { pt3dadd( 61.2342, 160.105, -20.2438, 0.6 ) }
    dend_30 { pt3dadd( 61.7059, 162.61, -20.068, 0.24 ) }
    dend_30 { pt3dadd( 62.0354, 164.141, -20.0552, 0.96 ) }
    dend_30 { pt3dadd( 62.5781, 166.967, -20.0608, 0.48 ) }
    dend_30 { pt3dadd( 62.6878, 167.726, -20.0414, 0.48 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 76/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -27.3779, -130.939, -21.8334, 0.6 ) }
    apic_7 { pt3dadd( -28.2679, -130.599, -22.1174, 0.6 ) }
    apic_7 { pt3dadd( -28.9358, -130.344, -22.3305, 0.96 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 79/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -27.3779, -130.939, -21.8334, 0.48 ) }
    apic_6 { pt3dadd( -27.4561, -132.093, -22.6085, 0.48 ) }
    apic_6 { pt3dadd( -27.5332, -133.335, -23.663, 1.56 ) }
    apic_6 { pt3dadd( -27.5548, -134.997, -25.1183, 0.6 ) }
    apic_6 { pt3dadd( -27.5644, -135.735, -25.7653, 0.6 ) }
    apic_6 { pt3dadd( -27.5863, -137.424, -27.2441, 0.6 ) }
    apic_6 { pt3dadd( -27.6013, -138.579, -28.2562, 1.56 ) }
    apic_6 { pt3dadd( -27.8468, -141.399, -30.9139, 0.6 ) }
    apic_6 { pt3dadd( -27.9653, -142.212, -31.7329, 1.08 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 88/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 48.6973, 168.337, -23.9224, 0.96 ) }
    dend_33 { pt3dadd( 47.9566, 169.646, -24.1897, 0.96 ) }
    dend_33 { pt3dadd( 47.3268, 170.781, -24.316, 0.24 ) }
    dend_33 { pt3dadd( 46.5243, 172.139, -24.4147, 0.84 ) }
    dend_33 { pt3dadd( 45.971, 172.987, -24.4408, 0.36 ) }
    dend_33 { pt3dadd( 44.9811, 174.385, -24.4092, 0.72 ) }
    dend_33 { pt3dadd( 43.3883, 176.634, -24.3584, 0.72 ) }
    dend_33 { pt3dadd( 42.7437, 177.534, -24.2903, 0.24 ) }
    dend_33 { pt3dadd( 42.2069, 178.253, -24.1875, 0.72 ) }
    dend_33 { pt3dadd( 41.3233, 179.346, -23.9311, 0.72 ) }
    dend_33 { pt3dadd( 40.1671, 180.643, -23.4942, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 99/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 48.6973, 168.337, -23.9224, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_32 { pt3dadd( 48.4388, 171.042, -24.0057, 1.08 ) }
    dend_32 { pt3dadd( 48.2637, 172.507, -24.0649, 1.08 ) }
    dend_32 { pt3dadd( 48.1172, 174.446, -24.1491, 0.6 ) }
    dend_32 { pt3dadd( 48.0364, 177.025, -24.2631, 0.6 ) }
    dend_32 { pt3dadd( 47.9706, 179.126, -24.3559, 0.96 ) }
    dend_32 { pt3dadd( 47.9231, 180.644, -24.423, 0.96 ) }
    dend_32 { pt3dadd( 47.8826, 181.808, -24.5085, 0.12 ) }
    dend_32 { pt3dadd( 47.7465, 183.706, -24.6521, 0.12 ) }
    dend_32 { pt3dadd( 47.7405, 184.549, -24.7125, 1.32 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 9/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 40.1671, 180.643, -23.4942, 0.72 ) }
    dend_35 { pt3dadd( 39.4614, 181.443, -23.4755, 0.72 ) }
    dend_35 { pt3dadd( 38.689, 182.318, -23.4551, 1.08 ) }
    dend_35 { pt3dadd( 37.9421, 183.165, -23.4353, 0.6 ) }
    dend_35 { pt3dadd( 37.254, 183.945, -23.4171, 0.96 ) }
    dend_35 { pt3dadd( 36.1378, 185.209, -23.3876, 1.2 ) }
    dend_35 { pt3dadd( 35.5158, 185.914, -23.3712, 0.48 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 40.1671, 180.643, -23.4942, 0.48 ) }
    dend_34 { pt3dadd( 40.4455, 182.046, -23.9315, 0.48 ) }
    dend_34 { pt3dadd( 40.7599, 183.18, -24.3198, 0.96 ) }
    dend_34 { pt3dadd( 41.1401, 184.553, -24.7894, 0.48 ) }
    dend_34 { pt3dadd( 41.3406, 185.276, -25.0369, 1.08 ) }
    dend_34 { pt3dadd( 42.0811, 187.949, -25.9513, 0.6 ) }
    dend_34 { pt3dadd( 42.4057, 189.121, -26.3523, 0.6 ) }
    dend_34 { pt3dadd( 42.7844, 190.145, -26.7661, 0.96 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_23, dend_12, dend_1, dend_0, apic_13, apic_1, dend_27, dend_24, dend_16, dend_13, dend_5, dend_2, apic_19, apic_14, apic_12, apic_11, apic_2, dend_37, dend_28, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_9, dend_6, dend_4, dend_3, apic_18, apic_15, apic_8, apic_3, dend_39, dend_38, dend_36, dend_29, dend_22, dend_21, dend_19, dend_18, dend_11, dend_10, dend_8, dend_7, apic_17, apic_16, apic_10, apic_9, apic_5, apic_4, dend_31, dend_30, apic_7, apic_6, dend_33, dend_32, dend_35, dend_34]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_19 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_18 ModelViewParmSubset_2.append()
    apic_15 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    apic_17 ModelViewParmSubset_2.append()
    apic_16 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_23, dend_12, dend_1, dend_0, apic_13, apic_1, dend_27, dend_24, dend_16, dend_13, dend_5, dend_2, apic_19, apic_14, apic_12, apic_11, apic_2, dend_37, dend_28, dend_26, dend_25, dend_20, dend_17, dend_15, dend_14, dend_9, dend_6, dend_4, dend_3, apic_18, apic_15, apic_8, apic_3, dend_39, dend_38, dend_36, dend_29, dend_22, dend_21, dend_19, dend_18, dend_11, dend_10, dend_8, dend_7, apic_17, apic_16, apic_10, apic_9, apic_5, apic_4, dend_31, dend_30, apic_7, apic_6, dend_33, dend_32, dend_35, dend_34]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_13 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_18 = new SectionList()
    apic_14 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_12 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    apic_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_6 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    apic_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_3 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_39 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_38 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_18 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_11 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_7 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    apic_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    apic_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_31 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_30 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_12 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_13 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_21 = new SectionList()
    apic_2 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    apic_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    apic_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_16 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_5 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    apic_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_17 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_15 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_19 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_21 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_25 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_29 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_50 = new SectionList()
    apic_17 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_58 = new SectionList()
    apic_7 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_59 = new SectionList()
    apic_6 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    apic_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_33 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_32 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_35 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_34 OneSecGrp_SectionRef_63.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_1, apic_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 3
    dend_0 nseg = 7
    dend_24 nseg = 3
    dend_13 nseg = 3
    dend_2 nseg = 3
    apic_14 nseg = 3
    apic_12 nseg = 3
    apic_11 nseg = 3
    dend_26 nseg = 3
    dend_9 nseg = 3
    dend_6 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 3
    apic_18 nseg = 3
    apic_15 nseg = 3
    apic_3 nseg = 3
    dend_39 nseg = 3
    dend_38 nseg = 3
    dend_36 nseg = 7
    dend_22 nseg = 3
    dend_18 nseg = 3
    dend_11 nseg = 3
    dend_10 nseg = 3
    dend_7 nseg = 3
    apic_5 nseg = 3
    apic_4 nseg = 3
    dend_31 nseg = 3
    dend_30 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_DBC_50ea904e54_0_0


