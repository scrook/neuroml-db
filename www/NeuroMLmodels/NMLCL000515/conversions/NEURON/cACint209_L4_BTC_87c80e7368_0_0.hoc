// Cell: cACint209_L4_BTC_87c80e7368_0_0
/*
{
  "id" : "cACint209_L4_BTC_87c80e7368_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.465097, 8.04727, -0.0175891, 2.59198", "0.424424, 7.2054, -0.0170165, 4.38773", "0.383751, 6.36352, -0.0164438, 5.44399", "0.343077, 5.52165, -0.0158711, 6.50025", "0.302404, 4.67978, -0.0152984, 7.50099", "0.261731, 3.83791, -0.0147257, 8.3937", "0.221058, 2.99604, -0.014153, 9.3444", "0.180384, 2.15416, -0.0135803, 10.2953", "0.139711, 1.31229, -0.0130077, 10.7907", "0.0990378, 0.470419, -0.012435, 10.75", "0.0583646, -0.371454, -0.0118623, 10.6053", "0.0176913, -1.21333, -0.0112896, 10.4607", "-0.0229819, -2.0552, -0.0107169, 10.316", "-0.0636552, -2.89707, -0.0101442, 9.78436", "-0.104328, -3.73894, -0.00957155, 9.07182", "-0.145002, -4.58081, -0.00899886, 8.12082", "-0.185675, -5.42269, -0.00842618, 7.10426", "-0.226348, -6.26456, -0.00785349, 5.9023", "-0.267021, -7.10643, -0.0072808, 4.68096", "-0.307695, -7.9483, -0.00670812, 3.08046", "-0.348368, -8.79018, -0.00613543, 1.81235" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.46257, 7.05891, -0.101719, 1.82", "-1.54269, 7.49307, 0.646212, 1.82", "-1.59686, 7.71367, 0.990658, 1.82", "-1.73711, 8.22292, 1.68515, 1.68", "-1.88584, 8.73683, 2.33784, 1.82", "-1.88584, 8.73683, 2.33784, 1.96", "-2.0403, 9.27055, 3.01569, 1.4", "-2.14139, 9.52204, 3.3198, 1.26", "-2.2687, 9.7806, 3.62065, 1.4", "-2.2687, 9.7806, 3.62065, 1.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.682563, -8.60709, 0.898281, 2.1", "-0.325808, -9.33275, 1.44864, 2.1", "0.0077399, -10.2699, 1.95815, 1.96", "0.161177, -10.8081, 2.17556, 2.1", "0.223498, -11.0542, 2.25685, 1.96", "0.319295, -11.566, 2.39822, 1.82", "0.393437, -12.1421, 2.53462, 1.68", "0.418893, -12.7458, 2.58268, 1.54", "0.404119, -13.2852, 2.58268, 1.4", "0.39025, -13.5468, 2.58268, 1.4", "0.352755, -14.1519, 2.58268, 2.38", "0.330404, -14.5262, 2.58268, 2.24", "0.317542, -15.0657, 2.58268, 2.38", "0.327035, -15.608, 2.58268, 2.24", "0.342482, -16.1474, 2.58268, 2.1", "0.367152, -16.53, 2.58268, 1.96", "0.399268, -16.7991, 2.58268, 1.82", "0.46129, -17.3255, 2.58268, 1.54", "0.517812, -17.8619, 2.58268, 1.68", "0.550215, -18.2425, 2.61408, 1.82", "0.583373, -18.7778, 2.69041, 1.68", "0.613006, -19.2978, 2.78524, 1.68", "0.626439, -19.8787, 2.95051, 1.82", "0.628248, -20.3824, 3.13505, 1.82", "0.612276, -21.3864, 3.63477, 1.82", "0.606381, -21.9066, 3.9346, 1.68", "0.602453, -22.1321, 4.07798, 1.68", "0.58876, -22.9705, 4.65321, 1.12", "0.574778, -23.4043, 4.95879, 0.98", "0.51408, -24.3399, 5.57271, 1.12", "0.471206, -24.8074, 5.8259, 0.98", "0.44513, -25.0496, 5.93899, 1.12", "0.44513, -25.0496, 5.93899, 1.26", "0.393973, -25.6382, 6.03674, 1.26", "0.35579, -26.2424, 6.08937, 1.12", "0.351546, -26.6175, 6.08937, 0.98", "0.378126, -27.1565, 6.08937, 1.12", "0.435528, -27.6954, 6.08937, 1.26", "0.515961, -28.2285, 6.08937, 1.4", "0.637623, -28.7461, 6.08937, 1.26", "0.791496, -29.261, 6.08937, 1.4", "0.917988, -29.6208, 6.08937, 1.4", "0.917988, -29.6208, 6.08937, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.348368, -8.79018, -0.00613543, 0.28", "-1.07222, -23.7727, -0.00613543, 0.28", "-1.79606, -38.7552, -0.00613543, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.2687, 9.7806, 3.62065, 0.84", "-2.2711, 10.2697, 3.29125, 0.84", "-2.29092, 11.2133, 2.7486, 0.7", "-2.30788, 11.6946, 2.5126, 0.84", "-2.32911, 12.6944, 2.07003, 0.98", "-2.34694, 13.194, 1.87128, 1.12", "-2.36251, 13.6791, 1.66891, 1.26", "-2.38297, 14.1798, 1.47298, 1.4", "-2.42479, 14.6888, 1.30942, 1.54", "-2.45721, 14.95, 1.24958, 1.68", "-2.56969, 15.5436, 1.22512, 1.68", "-2.81647, 16.6126, 1.30682, 1.54", "-2.96878, 17.1803, 1.41017, 1.4", "-3.12761, 17.6764, 1.54571, 1.4", "-3.48576, 18.6768, 1.80737, 1.26", "-3.83303, 19.5935, 1.94156, 1.12", "-4.01943, 20.0929, 1.90013, 0.98", "-4.01943, 20.0929, 1.90013, 0.98", "-4.09105, 20.4063, 1.41176, 0.7", "-4.17634, 20.9301, 0.5667, 0.56", "-4.23066, 21.5168, -0.3594, 0.42", "-4.24389, 22.0687, -1.19065, 0.56", "-4.17305, 23.1485, -2.75018, 0.56", "-4.1256, 23.4592, -3.16763, 1.26", "-4.05201, 23.8304, -3.60667, 1.12", "-3.96207, 24.2727, -3.994, 0.98", "-3.87168, 24.8035, -4.25902, 0.84", "-3.82513, 25.8365, -4.30671, 0.7", "-3.84521, 26.0962, -4.23259, 0.84", "-4.10785, 27.1746, -3.73783, 0.1", "-4.56013, 27.8711, -3.15856, 0.1", "-4.76533, 28.0527, -2.92211, 0.14", "-4.76533, 28.0527, -2.92211, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.2687, 9.7806, 3.62065, 3.22", "-1.90448, 10.1614, 3.37933, 3.22", "-1.38464, 10.8111, 2.9868, 3.08", "-0.489253, 12.1181, 2.28949, 2.94", "-0.224031, 12.5774, 2.07402, 2.8", "0.177861, 13.3079, 1.69696, 2.66", "0.905647, 14.7118, 0.974392, 2.52", "1.21285, 15.401, 0.630195, 2.38", "1.50983, 16.1909, 0.269869, 2.24", "1.74931, 16.9421, -0.00270509, 2.1", "2.17389, 18.3089, -0.562824, 1.96", "2.42907, 19.1303, -0.925379, 0.28", "2.70024, 19.9432, -1.25165, 0.42", "2.89605, 20.4482, -1.47991, 0.56", "3.21987, 21.2145, -1.86273, 0.7", "3.78527, 22.4356, -2.46055, 0.84", "3.92772, 22.8056, -2.57646, 0.84" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "0.917988, -29.6208, 6.08937, 1.4", "0.973478, -29.8255, 6.08978, 1.4", "1.06343, -30.2384, 6.0904, 1.54", "1.12538, -30.6348, 5.96269, 1.68", "1.14739, -30.7948, 5.8309, 1.54", "1.17712, -31.1122, 5.56548, 1.4", "1.17712, -31.1122, 5.56548, 1.54", "1.19237, -31.3649, 5.40414, 1.4", "1.22553, -32.1201, 4.99917, 1.26", "1.26581, -32.9127, 4.67711, 1.12", "1.28898, -33.369, 4.55042, 0.98", "1.31564, -33.7846, 4.47752, 0.84", "1.38649, -34.6583, 4.33745, 0.7", "1.40379, -34.8688, 4.31287, 0.56", "1.42686, -35.2912, 4.29526, 0.56", "1.44936, -35.7662, 4.27906, 0.7", "1.46588, -36.1743, 4.20271, 0.84", "1.49467, -36.9976, 3.94761, 0.98", "1.5079, -37.2748, 3.83682, 0.56", "1.52298, -37.7212, 3.68057, 0.7", "1.53556, -38.1254, 3.58669, 0.84", "1.57798, -39.0143, 3.51663, 0.84", "1.60471, -39.435, 3.55492, 0.98", "1.64126, -39.8452, 3.65679, 1.12", "1.73803, -40.6091, 3.90156, 0.56", "1.86338, -41.4027, 4.21041, 0.42", "1.93116, -41.7821, 4.3763, 0.42", "2.01007, -42.1639, 4.53724, 0.56", "2.0534, -42.3604, 4.59552, 0.7", "2.10363, -42.5657, 4.61396, 1.12", "2.21333, -42.9618, 4.54735, 1.26", "2.32088, -43.3495, 4.42562, 1.12", "2.52488, -44.0851, 4.26219, 1.12", "2.52488, -44.0851, 4.26219, 1.12", "2.56485, -44.2917, 4.26209, 1.12", "2.62035, -44.7117, 4.29741, 0.98", "2.65631, -45.1276, 4.36446, 1.12", "2.70323, -45.9469, 4.62072, 1.12", "2.72487, -46.3842, 4.80144, 1.26", "2.74785, -46.8182, 4.98587, 1.26", "2.76387, -47.0867, 5.09963, 1.4", "2.77279, -47.2778, 5.18395, 1.4", "2.80331, -47.9912, 5.49448, 1.26", "2.82775, -48.3859, 5.63882, 1.26", "2.87752, -48.7692, 5.80794, 1.26", "2.95335, -49.1364, 5.99403, 1.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.917988, -29.6208, 6.08937, 2.24", "0.552029, -30.0105, 5.01119, 2.24", "0.261753, -30.4191, 3.91796, 2.38", "-0.0288678, -30.8281, 2.82343, 2.52", "-0.100175, -30.9285, 2.55488, 2.38", "-0.398094, -31.3478, 1.43286, 2.24", "-0.671114, -31.7321, 0.40462, 2.1", "-0.867498, -32.1508, -0.584154, 1.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.79606, -38.7552, -0.00613543, 0.28", "-2.51991, -53.7378, -0.00613543, 0.28", "-3.24376, -68.7203, -0.00613543, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-4.76533, 28.0527, -2.92211, 0.28", "-4.72221, 29.1119, -3.41269, 0.28", "-4.78073, 30.2531, -3.66528, 0.42", "-4.83356, 30.8254, -3.73033, 0.56", "-4.9027, 31.3968, -3.75184, 0.56", "-4.94242, 31.6835, -3.74967, 0.56", "-5.11458, 32.8485, -3.71186, 0.56", "-5.21588, 33.4083, -3.60701, 0.7", "-5.21588, 33.4083, -3.60701, 0.7", "-5.30024, 33.9559, -3.49191, 0.56", "-5.3455, 34.5313, -3.43558, 0.42", "-5.35349, 35.1085, -3.44383, 0.28", "-5.32832, 35.7513, -3.51978, 0.14", "-5.28527, 36.3025, -3.63786, 0.1", "-5.23313, 36.8541, -3.7891, 0.1", "-5.081, 37.8696, -4.1803, 0.14", "-4.98423, 38.3806, -4.42128, 0.84", "-4.88097, 38.8749, -4.68389, 0.7", "-4.66582, 39.8517, -5.26766, 0.56", "-4.55154, 40.3172, -5.5702, 0.7", "-4.30536, 41.2825, -6.22982, 0.84", "-4.30536, 41.2825, -6.22982, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-4.76533, 28.0527, -2.92211, 0.56", "-5.10568, 28.3067, -4.22002, 0.56", "-5.39487, 28.562, -5.39915, 0.42", "-5.88861, 29.0556, -7.65118, 0.28", "-6.12945, 29.3212, -8.84308, 0.14", "-6.58692, 29.8632, -11.0918, 0.28", "-6.82145, 30.1667, -12.2312, 0.42", "-7.06543, 30.5398, -13.4759, 0.56", "-7.47765, 31.3299, -15.6424, 0.42", "-7.6786, 31.8278, -16.7245, 0.56", "-7.79226, 32.169, -17.3552, 0.84", "-7.9023, 32.5443, -17.8861, 0.7", "-8.03681, 32.963, -18.3761, 0.56", "-8.20763, 33.4056, -18.8384, 0.42", "-8.59996, 34.2801, -19.5992, 0.56", "-8.7105, 34.4959, -19.8196, 0.7", "-8.969, 34.9153, -20.356, 1.12", "-9.50852, 35.5788, -21.4285, 0.98", "-10.0242, 36.0147, -22.4773, 0.84", "-10.3515, 36.2027, -23.0908, 0.7", "-10.938, 36.4397, -24.1106, 0.84", "-11.1723, 36.5205, -24.4859, 0.56", "-11.5638, 36.6163, -25.0934, 0.42", "-12.3413, 36.8133, -26.148, 0.56", "-12.9163, 37.0022, -26.8347, 0.28", "-13.7268, 37.3662, -27.7062, 0.14", "-14.3462, 37.7441, -28.2608, 0.1", "-15.1655, 38.4138, -28.9325, 0.14", "-15.619, 38.8873, -29.2705, 0.28", "-15.9024, 39.2149, -29.4463, 0.14", "-16.3308, 39.7518, -29.7019, 0.1", "-16.5976, 40.1243, -29.808, 0.14", "-16.9419, 40.6813, -29.9193, 0.84", "-17.1655, 41.0989, -29.9112, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "3.92772, 22.8056, -2.57646, 1.4", "3.99755, 23.9233, -2.49762, 1.4", "3.99851, 24.5101, -2.53432, 1.4", "3.98728, 25.0867, -2.68701, 1.26", "3.96855, 25.5907, -2.85335, 1.12", "3.95517, 25.8392, -2.93799, 0.98", "3.88485, 26.8644, -3.27621, 0.84", "3.84263, 27.3406, -3.47474, 0.7", "3.73673, 28.3595, -3.90336, 0.56", "3.69184, 28.8485, -4.09492, 0.56", "3.66717, 29.3529, -4.25936, 0.42", "3.66834, 29.86, -4.37824, 0.56", "3.68583, 30.125, -4.40593, 0.7", "3.75002, 30.655, -4.42791, 0.56", "3.85264, 31.2449, -4.4081, 0.56", "3.99687, 31.8105, -4.34519, 0.7", "4.10868, 32.1698, -4.284, 0.56", "4.29836, 32.7118, -4.16966, 0.56", "4.49577, 33.2594, -4.04104, 0.56", "4.6246, 33.593, -3.95697, 0.42", "5.06785, 34.6922, -3.73311, 0.56", "5.28741, 35.2309, -3.65613, 0.7", "5.43449, 35.5758, -3.63036, 0.56", "5.67733, 36.1074, -3.62986, 0.42", "5.93183, 36.6367, -3.71977, 0.28", "6.34724, 37.4772, -3.98539, 0.14", "6.59227, 37.9558, -4.20145, 0.56", "6.85416, 38.4458, -4.39695, 0.42", "7.02465, 38.7575, -4.49852, 0.56", "7.60075, 39.7944, -4.64762, 0.7", "7.78063, 40.1222, -4.62587, 0.56", "7.94651, 40.4473, -4.54232, 0.42", "8.39963, 41.4018, -4.21329, 0.98", "8.53763, 41.734, -4.10745, 0.98", "8.92413, 42.7293, -3.80855, 0.84", "9.04904, 43.0815, -3.73556, 0.84", "9.23457, 43.6473, -3.71822, 0.98", "9.39836, 44.2107, -3.76058, 0.84", "9.6828, 45.285, -3.88507, 0.7", "9.76739, 45.6443, -3.8874, 0.56", "10.0171, 46.7331, -3.79423, 0.7", "10.0171, 46.7331, -3.79423, 0.84", "10.2332, 47.6339, -3.24729, 0.84", "10.4636, 48.4767, -2.58265, 0.7", "10.6785, 49.1401, -1.91829, 0.56", "10.7464, 49.3118, -1.73439, 0.56", "10.9298, 49.6654, -1.31154, 0.98", "11.1589, 50.0207, -0.923189, 0.84", "11.2903, 50.1829, -0.768032, 0.98", "11.8818, 50.7881, -0.252736, 0.42", "12.2497, 51.1466, 0.0199563, 0.56", "12.9258, 51.834, 0.526251, 0.7", "13.2756, 52.2103, 0.787964, 0.56", "13.4237, 52.3981, 0.894491, 0.7", "13.672, 52.8327, 1.0615, 0.84", "13.8435, 53.3153, 1.15327, 0.56", "13.9542, 53.8342, 1.2129, 0.42", "14.017, 54.362, 1.23205, 0.28", "14.0622, 54.9575, 1.25491, 0.42", "14.0993, 55.4786, 1.2362, 0.56", "14.1444, 56.0082, 1.18466, 0.7", "14.1826, 56.2692, 1.14517, 0.56", "14.3008, 56.8442, 1.03462, 0.84", "14.4552, 57.3955, 0.912811, 0.84", "14.7935, 58.3279, 0.692376, 0.7", "15.0294, 58.8456, 0.566061, 0.56", "15.2859, 59.3652, 0.44646, 0.7", "15.4465, 59.6935, 0.383262, 0.7", "15.7088, 60.2194, 0.309203, 0.84", "15.9671, 60.7389, 0.22756, 0.7", "16.0741, 60.9816, 0.215013, 0.56", "16.2545, 61.4819, 0.241142, 0.42", "16.3919, 62.0478, 0.327754, 0.28", "16.4649, 62.6247, 0.460905, 0.14", "16.4774, 63.6022, 0.742347, 0.28", "16.4282, 64.6698, 1.0802, 0.1", "16.3699, 65.6949, 1.41171, 0.1", "16.35, 66.2007, 1.57649, 0.1", "16.3444, 66.4525, 1.65485, 0.14", "16.3426, 66.9645, 1.80294, 0.84", "16.3665, 67.5427, 1.95349, 0.7", "16.4254, 68.1241, 2.01963, 0.7", "16.5071, 68.7174, 2.0406, 0.56", "16.5954, 69.2985, 2.06074, 0.56", "16.6369, 69.5623, 2.06982, 0.7", "16.6797, 69.8258, 2.07881, 0.84", "16.749, 70.3528, 2.09761, 0.56", "16.8154, 70.9369, 2.11895, 0.42", "16.8756, 71.465, 2.13824, 0.56", "16.9493, 72.0577, 2.15959, 0.42", "17.021, 72.6429, 2.18072, 0.28", "17.0756, 73.1743, 2.20041, 0.42", "17.1304, 73.7707, 2.22285, 0.28", "17.159, 74.1391, 2.23696, 0.42", "17.195, 74.7369, 2.26038, 0.56", "17.2124, 75.2708, 2.28201, 0.56", "17.2038, 75.7929, 2.30442, 0.42", "17.1704, 76.3255, 2.3285, 0.56", "17.095, 76.9184, 2.35717, 0.7", "16.9998, 77.4426, 2.34298, 0.84", "16.9998, 77.4426, 2.34298, 0.7", "16.8795, 78.0126, 2.26106, 0.28", "16.7854, 78.5256, 2.17114, 0.14", "16.7021, 79.0329, 2.07525, 0.1", "16.5397, 80.067, 1.80456, 0.14", "16.4708, 80.5715, 1.65436, 0.28", "16.4138, 81.1237, 1.44284, 0.42", "16.3773, 81.6667, 1.23302, 0.56", "16.3496, 82.1619, 1.05246, 0.56", "16.294, 83.1944, 0.731947, 0.56", "16.2613, 83.7114, 0.620076, 0.56", "16.1755, 84.6735, 0.443164, 0.7", "16.0414, 85.7239, 0.211275, 1.12", "15.9513, 86.2321, 0.0960307, 0.98", "15.8458, 86.7433, -0.00384021, 0.84", "15.7137, 87.2512, -0.0679646, 0.7", "15.562, 87.7435, -0.131382, 0.56", "15.2591, 88.6155, -0.308354, 0.42", "15.0625, 89.1477, -0.493046, 0.28", "14.8872, 89.6106, -0.639151, 0.14", "14.6943, 90.1593, -0.778863, 0.1", "14.551, 90.657, -0.819835, 0.1", "14.3514, 91.7167, -0.703483, 0.14", "14.3514, 91.7167, -0.703483, 0.28", "14.338, 92.7467, -0.363056, 0.28", "14.3727, 93.3048, -0.155593, 0.42", "14.5071, 94.333, 0.242262, 0.56", "14.6009, 94.8824, 0.45354, 0.56", "14.6452, 95.1282, 0.544674, 0.7", "14.745, 95.6859, 0.696151, 0.7", "14.8413, 96.2698, 0.786974, 0.56", "14.9272, 96.8512, 0.808954, 0.42", "14.9987, 97.4438, 0.76008, 0.28", "15.0464, 97.9715, 0.694854, 0.42", "15.0764, 98.5452, 0.568491, 0.28", "15.0855, 99.0546, 0.416497, 0.14", "15.0681, 100.014, 0.0814414, 0.1", "15.0524, 100.502, -0.100397, 0.1", "15.0392, 100.997, -0.283036, 0.14", "15.0201, 102.021, -0.632719, 0.28", "15.0148, 102.593, -0.798395, 0.14", "15.0162, 103.106, -0.907731, 0.28", "15.0258, 103.7, -0.976726, 0.42", "15.0479, 104.295, -1.02397, 0.42", "15.0791, 104.817, -1.03847, 0.28", "15.1276, 105.412, -1.01578, 0.42", "15.1771, 105.941, -0.995921, 0.56", "15.2464, 106.525, -0.974734, 0.56", "15.2768, 106.788, -0.965158, 0.7", "15.3405, 107.382, -0.943274, 0.56", "15.3966, 107.969, -0.921302, 0.42", "15.4325, 108.565, -0.937837, 0.56", "15.4474, 109.152, -0.985034, 0.7", "15.4377, 109.682, -1.04911, 0.84", "15.4158, 110.207, -1.12741, 0.7", "15.3761, 110.73, -1.22159, 0.84", "15.2803, 111.788, -1.4332, 0.7", "15.2389, 112.309, -1.53958, 0.56", "15.2289, 112.567, -1.59062, 0.56", "15.2651, 113.145, -1.68628, 0.7", "15.2651, 113.145, -1.68628, 0.56", "15.384, 113.732, -1.66552, 0.14", "15.5153, 114.294, -1.55998, 0.1", "15.5884, 114.654, -1.47278, 0.1", "15.6893, 115.37, -1.27342, 0.1", "15.7048, 115.624, -1.19662, 0.14", "15.6883, 116.684, -0.959929, 0.28", "15.6602, 116.946, -0.920861, 0.42", "15.5503, 117.525, -0.933086, 0.56", "15.4352, 118.027, -1.0614, 0.7", "15.3176, 118.498, -1.23945, 0.56", "15.1173, 119.458, -1.68105, 0.42", "15.0463, 119.912, -1.93301, 0.28", "14.9353, 120.846, -2.44979, 0.42", "14.8677, 121.737, -2.91682, 0.56", "14.8042, 122.722, -3.34769, 0.56", "14.7491, 123.265, -3.55463, 0.42", "14.7123, 123.52, -3.61935, 0.28", "14.6038, 124.086, -3.73548, 0.1", "14.4845, 124.599, -3.80391, 0.1", "14.3486, 125.105, -3.8732, 0.1", "14.0341, 126.141, -4.1256, 0.1", "13.861, 126.621, -4.25354, 0.1", "13.6788, 127.091, -4.37726, 0.14", "13.5006, 127.571, -4.49655, 0.28", "13.4119, 127.809, -4.57046, 0.42", "13.2471, 128.276, -4.71611, 0.56", "13.0788, 128.82, -4.85142, 0.84", "12.9343, 129.304, -4.97932, 0.7", "12.7946, 129.797, -5.102, 0.56", "12.5215, 130.818, -5.32293, 0.42", "12.393, 131.324, -5.41691, 0.28", "12.2721, 131.838, -5.46416, 0.14", "12.1716, 132.361, -5.46617, 0.28", "12.0943, 132.875, -5.41921, 0.42", "12.0445, 133.397, -5.3226, 0.56", "12.0309, 133.651, -5.25383, 0.56", "12.0252, 134.698, -4.96412, 0.56", "12.0524, 135.275, -4.80994, 0.42", "12.1069, 135.852, -4.70998, 0.56", "12.1843, 136.444, -4.65735, 0.42", "12.2651, 136.962, -4.63583, 0.28", "12.3292, 137.334, -4.64943, 0.14", "12.4375, 137.912, -4.75433, 0.14", "12.631, 138.976, -5.01452, 0.28", "12.631, 138.976, -5.01452, 0.42" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "3.92772, 22.8056, -2.57646, 1.26", "4.61207, 23.2514, -3.07931, 1.26", "4.8431, 23.3812, -3.26241, 1.4", "5.1755, 23.5904, -3.57808, 1.54", "5.4671, 23.7919, -3.86166, 1.4", "6.0179, 24.1739, -4.37086, 1.26", "6.62713, 24.6279, -4.90787, 1.12", "6.92105, 24.8492, -5.17896, 0.98", "7.56942, 25.3697, -5.79333, 0.84", "7.76973, 25.541, -5.9815, 0.7", "8.04852, 25.8116, -6.22278, 0.56", "8.36705, 26.1529, -6.44317, 0.7", "8.6797, 26.5283, -6.61846, 0.56", "9.24878, 27.2596, -6.91311, 0.7", "9.38708, 27.4366, -6.97335, 0.7", "9.68907, 27.8345, -7.1187, 0.1", "9.86659, 28.0863, -7.21279, 0.1", "10.2349, 28.605, -7.39917, 0.1", "10.2349, 28.605, -7.39917, 0.14", "10.5487, 29.1956, -7.38359, 0.1", "10.698, 29.4845, -7.37581, 0.1", "10.8603, 29.7742, -7.36848, 0.1", "10.984, 29.9734, -7.3639, 0.1", "11.2769, 30.4001, -7.43646, 0.7", "11.4679, 30.6494, -7.50771, 0.56", "11.8885, 31.1317, -7.67122, 0.42", "12.0982, 31.361, -7.75068, 0.28", "12.4462, 31.7242, -7.87481, 0.42", "13.0374, 32.3066, -8.07251, 0.98", "13.4197, 32.6321, -8.19034, 0.84", "13.7705, 32.9108, -8.28777, 0.7", "14.0264, 33.1029, -8.34698, 0.56", "14.431, 33.4048, -8.41414, 0.42", "14.833, 33.7163, -8.45027, 0.28", "15.1918, 34.0067, -8.45037, 0.42", "15.442, 34.2168, -8.45009, 0.28", "15.8333, 34.5454, -8.44964, 0.14", "16.2395, 34.864, -8.45023, 0.28", "16.4995, 35.0605, -8.45096, 0.14", "16.9094, 35.363, -8.45244, 0.1", "17.3225, 35.6707, -8.4538, 0.14", "17.693, 35.9405, -8.45529, 0.28", "18.066, 36.2062, -8.45709, 0.42", "18.4773, 36.5141, -8.49316, 0.28", "18.8646, 36.8295, -8.59539, 0.14", "19.0812, 37.0359, -8.72487, 0.1", "19.324, 37.3274, -9.06185, 0.1", "19.4121, 37.4502, -9.23361, 0.14", "19.7336, 37.9446, -9.98566, 0.84", "20.0135, 38.3855, -10.6853, 0.98", "20.2972, 38.8259, -11.3837, 0.84", "20.8571, 39.6752, -12.6872, 0.84", "21.0399, 39.9439, -13.082, 0.7", "21.1682, 40.1178, -13.3135, 0.56", "21.4406, 40.4183, -13.6376, 0.42", "21.7824, 40.7258, -13.8559, 0.28", "22.0425, 40.9109, -13.9173, 0.14", "22.2385, 41.0227, -13.9397, 0.28", "22.4394, 41.1238, -13.9797, 0.7", "22.8393, 41.3125, -14.0823, 0.56", "23.2309, 41.4978, -14.1979, 0.42", "23.6213, 41.6951, -14.3208, 0.28", "24.3843, 42.1296, -14.6316, 0.28", "24.6312, 42.2917, -14.7459, 0.56", "25.0019, 42.5703, -14.9649, 0.42", "25.3478, 42.8614, -15.1966, 0.28", "25.5622, 43.0597, -15.3486, 0.42", "26.1796, 43.6656, -15.7738, 0.56", "26.5118, 43.9969, -15.9748, 0.56", "27.1449, 44.6274, -16.3481, 0.56", "27.4857, 44.9583, -16.535, 0.56", "27.7061, 45.1755, -16.6399, 0.7", "28.0564, 45.5267, -16.7666, 0.56", "28.4032, 45.8993, -16.8691, 0.42", "28.6137, 46.1432, -16.9338, 0.28", "28.8984, 46.4926, -17.0478, 0.28", "29.1982, 46.8715, -17.2146, 0.1", "29.3809, 47.1017, -17.3587, 0.1", "29.9326, 47.8104, -17.8959, 0.14", "30.1013, 48.0246, -18.0749, 0.28", "30.6169, 48.6335, -18.6148, 0.42", "30.8962, 48.9314, -18.917, 0.28", "31.4015, 49.3768, -19.4266, 0.28", "31.6135, 49.5327, -19.6141, 0.56", "31.9853, 49.7513, -19.8758, 0.42", "32.3453, 49.9287, -20.0864, 0.28", "33.1306, 50.2895, -20.4254, 0.14", "33.5221, 50.4716, -20.5644, 0.28", "33.9216, 50.669, -20.6638, 0.14", "34.3093, 50.8753, -20.7477, 0.1", "34.6915, 51.109, -20.8441, 0.14", "35.2056, 51.4788, -20.9764, 0.28", "35.4577, 51.6772, -21.0336, 0.14", "35.8394, 52.0, -21.1361, 0.1", "36.0817, 52.2067, -21.2066, 0.1", "36.8019, 52.8128, -21.4188, 0.14", "37.1944, 53.118, -21.529, 0.28", "37.564, 53.375, -21.6211, 0.42", "37.9823, 53.6495, -21.7067, 0.56", "38.3665, 53.8886, -21.7665, 0.42", "38.7999, 54.1521, -21.8402, 0.28", "39.185, 54.3895, -21.8998, 0.14", "39.5994, 54.665, -22.0246, 0.28", "39.9869, 54.9485, -22.19, 0.42", "40.1508, 55.0841, -22.2775, 0.56", "40.7964, 55.684, -22.6674, 0.7", "41.126, 56.0084, -22.8821, 0.84", "41.6764, 56.5925, -23.2526, 0.7", "41.9975, 56.9325, -23.4582, 0.7", "42.3368, 57.2752, -23.6431, 0.56", "42.698, 57.6075, -23.7843, 0.42", "42.8781, 57.747, -23.8188, 0.28", "43.148, 57.9256, -23.8463, 0.1", "43.5473, 58.145, -23.8512, 0.1", "43.96, 58.3345, -23.8581, 0.1", "44.3818, 58.5047, -23.8307, 0.1", "44.7988, 58.6749, -23.7773, 0.14", "45.2637, 58.8685, -23.6985, 0.28", "45.6707, 59.0343, -23.5869, 0.28", "46.071, 59.1995, -23.4451, 0.28", "46.8976, 59.5357, -23.1111, 0.28", "47.3305, 59.7143, -22.9253, 0.42", "47.7186, 59.8808, -22.7539, 0.28", "48.5046, 60.2328, -22.418, 0.14", "48.8912, 60.425, -22.269, 0.1", "49.2767, 60.6365, -22.1506, 0.14", "49.7049, 60.8955, -22.0672, 0.28", "49.972, 61.0766, -22.0274, 0.42", "50.3793, 61.3917, -21.9929, 0.28", "50.7695, 61.7286, -22.0286, 0.28", "51.1457, 62.0696, -22.0909, 0.42", "51.3863, 62.2841, -22.145, 0.56", "51.7648, 62.6108, -22.248, 0.7", "52.147, 62.9286, -22.3618, 0.7", "52.8752, 63.5231, -22.5886, 0.84", "53.0484, 63.662, -22.641, 0.98", "53.402, 63.9415, -22.7365, 0.7", "53.6582, 64.1341, -22.7932, 0.56", "54.0695, 64.4259, -22.8595, 0.42", "54.493, 64.7039, -22.8971, 0.28", "54.9333, 64.977, -22.8641, 0.14", "55.3615, 65.2431, -22.8053, 0.1", "55.747, 65.4765, -22.7328, 0.14", "56.1249, 65.7065, -22.6456, 0.28", "56.4997, 65.9462, -22.542, 0.42", "57.2796, 66.4872, -22.3677, 0.56", "57.5318, 66.6852, -22.3281, 0.56", "57.696, 66.8367, -22.3399, 0.56", "58.0444, 67.1946, -22.4497, 0.56", "58.2552, 67.421, -22.5568, 0.42", "58.8719, 68.0559, -22.9432, 0.28", "59.0831, 68.2576, -23.0872, 0.14", "59.7509, 68.8238, -23.4928, 0.1", "60.0851, 69.0726, -23.6657, 0.1", "60.4919, 69.3233, -23.833, 0.14", "60.8898, 69.5309, -23.9195, 0.28", "61.3521, 69.7326, -23.927, 0.42", "61.7751, 69.8904, -23.8898, 0.56", "62.1978, 70.0376, -23.808, 0.42", "62.6193, 70.1907, -23.7449, 0.28", "63.4813, 70.5239, -23.6594, 0.14", "63.8949, 70.7106, -23.6763, 0.28", "64.2871, 70.9182, -23.7477, 0.42", "64.5482, 71.0856, -23.8308, 0.56", "65.2781, 71.6306, -24.146, 0.42", "65.6303, 71.9224, -24.3672, 0.28", "66.245, 72.4791, -24.8526, 0.14", "66.4469, 72.6727, -25.018, 0.1", "66.7648, 72.9832, -25.2662, 0.1", "67.1008, 73.3021, -25.4909, 0.1", "67.679, 73.8508, -25.788, 0.14", "67.8994, 74.0617, -25.904, 0.1", "68.2442, 74.4096, -26.0704, 0.1", "68.5823, 74.7633, -26.2382, 0.1", "68.8982, 75.1179, -26.4291, 0.1", "69.0883, 75.3537, -26.5545, 0.14", "69.6379, 76.0756, -26.9013, 0.28", "69.9069, 76.4626, -27.1223, 0.14", "70.1493, 76.8471, -27.361, 0.1", "70.5347, 77.5265, -27.7834, 0.1", "70.7437, 77.915, -28.0416, 0.1", "70.9494, 78.316, -28.3012, 0.1", "71.3295, 79.0903, -28.7599, 0.14", "71.4547, 79.3463, -28.9238, 0.28", "71.6463, 79.7487, -29.1788, 0.42", "72.0293, 80.5294, -29.625, 0.28", "72.2363, 80.9387, -29.8542, 0.14", "72.3728, 81.1948, -30.0088, 0.1", "72.8397, 82.0088, -30.4877, 0.14", "72.9882, 82.2593, -30.6397, 0.28", "73.288, 82.7589, -30.9285, 0.42", "73.4483, 83.0221, -31.0556, 0.56", "73.8852, 83.7319, -31.3672, 0.56", "74.1435, 84.1613, -31.5195, 0.84", "74.3121, 84.4305, -31.61, 0.7", "74.5892, 84.8328, -31.7657, 0.56", "74.8956, 85.2204, -31.9277, 0.42", "75.2261, 85.5902, -32.0783, 0.56", "75.4545, 85.8102, -32.1581, 0.7", "76.181, 86.3461, -32.4039, 0.7", "76.5626, 86.5644, -32.5224, 0.7", "76.9688, 86.7386, -32.6326, 0.84", "77.1734, 86.8141, -32.6969, 1.26", "77.5782, 86.9437, -32.8257, 1.12", "77.9929, 87.0823, -32.949, 0.98", "78.4042, 87.241, -33.0524, 0.84", "78.8093, 87.4131, -33.1609, 0.7", "79.6504, 87.8101, -33.3871, 0.56", "80.0435, 88.0153, -33.4875, 0.42", "80.4798, 88.261, -33.5924, 0.28", "80.9106, 88.5095, -33.6875, 0.14", "81.2936, 88.7476, -33.7571, 0.1", "81.7129, 89.0324, -33.8401, 0.1", "82.1021, 89.34, -33.9558, 0.14", "82.2552, 89.4906, -34.0405, 0.28", "82.386, 89.6496, -34.1455, 0.42", "82.6357, 90.0162, -34.3967, 0.7", "83.0066, 90.6644, -34.873, 0.56", "83.3825, 91.3847, -35.4092, 0.56", "83.5093, 91.6226, -35.5829, 0.42", "83.7887, 92.1115, -35.9136, 0.28", "83.9457, 92.3585, -36.0625, 0.14", "84.5137, 93.1409, -36.4708, 0.1", "84.7142, 93.3854, -36.5604, 0.1", "85.0168, 93.7238, -36.6469, 0.1", "85.3631, 94.1017, -36.7291, 0.1", "85.714, 94.4718, -36.789, 0.1", "85.9449, 94.7097, -36.8092, 0.14", "86.3007, 95.0787, -36.8397, 0.28", "86.7415, 95.5502, -36.9123, 0.14", "86.9622, 95.788, -36.9627, 0.1", "87.3118, 96.1508, -37.058, 0.14", "87.6766, 96.5111, -37.1649, 0.1", "88.3076, 97.0978, -37.3486, 0.1", "88.688, 97.4292, -37.4576, 0.1", "89.0393, 97.7082, -37.5522, 0.1", "89.437, 98.0119, -37.6464, 0.1", "89.8446, 98.3175, -37.7207, 0.1", "90.2524, 98.6198, -37.7622, 0.14", "90.4375, 98.7568, -37.7628, 0.28", "90.619, 98.8992, -37.7631, 0.42", "90.8637, 99.1047, -37.7628, 0.56", "91.2419, 99.4557, -37.8029, 0.42", "91.5963, 99.8198, -37.8736, 0.28", "91.9283, 100.202, -37.9632, 0.14", "92.1273, 100.462, -38.0262, 0.1", "92.4159, 100.878, -38.1277, 0.1", "92.9251, 101.694, -38.3214, 0.1", "93.0757, 101.975, -38.3823, 0.1", "93.3595, 102.559, -38.5382, 0.1", "93.5772, 103.007, -38.6732, 0.1", "93.728, 103.288, -38.7634, 0.1", "93.9761, 103.706, -38.9332, 0.1", "94.2414, 104.092, -39.1561, 0.1", "94.6586, 104.632, -39.662, 0.1", "94.8649, 104.866, -39.9933, 0.1", "95.0696, 105.073, -40.3444, 0.1", "95.4706, 105.434, -41.0236, 0.1", "95.8941, 105.78, -41.7001, 0.14", "96.3919, 106.154, -42.4196, 0.1", "96.8782, 106.521, -42.9993, 0.1", "97.2015, 106.758, -43.3163, 0.1", "97.5407, 106.98, -43.511, 0.1", "97.9874, 107.216, -43.5328, 0.1", "98.3895, 107.406, -43.4298, 0.1", "99.2056, 107.765, -43.0903, 0.1", "99.5882, 107.924, -42.9069, 0.1", "100.382, 108.23, -42.5367, 0.1", "100.577, 108.302, -42.449, 0.1", "101.019, 108.456, -42.2521, 0.1", "101.419, 108.595, -42.093, 0.1", "101.84, 108.733, -41.9909, 0.1", "102.263, 108.878, -41.9182, 0.1", "102.263, 108.878, -41.9182, 0.14" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "2.95335, -49.1364, 5.99403, 0.98", "3.21043, -49.6696, 5.9504, 0.98", "3.48087, -50.2795, 5.90504, 0.84", "3.71054, -50.8382, 5.86699, 0.98", "3.9505, -51.4625, 5.82768, 1.12", "4.05394, -51.7469, 5.8109, 1.68", "4.25161, -52.3163, 5.77914, 1.54", "4.4236, -52.895, 5.75244, 1.4", "4.56877, -53.4852, 5.73104, 1.26", "4.69747, -54.0767, 5.71284, 1.12", "4.80839, -54.6749, 5.74061, 1.26", "4.91202, -55.2583, 5.80029, 1.12", "5.03371, -55.9116, 5.94295, 0.98", "5.1452, -56.4791, 6.11633, 0.84", "5.25936, -57.0354, 6.32638, 0.7", "5.50551, -58.1714, 6.82252, 0.84", "5.62964, -58.7054, 7.07533, 0.84", "5.89594, -59.8105, 7.54582, 0.7", "6.03774, -60.3654, 7.73325, 0.84", "6.03774, -60.3654, 7.73325, 0.98", "6.11635, -60.6482, 7.73568, 1.12", "6.29193, -61.2274, 7.6877, 0.98", "6.65809, -62.403, 7.5874, 0.84", "6.83746, -62.9769, 7.53104, 0.7", "7.05779, -63.6176, 7.50266, 0.56", "7.25647, -64.186, 7.46228, 0.7", "7.62957, -65.3305, 7.1917, 0.84", "7.80716, -65.8823, 7.02992, 0.98", "7.99093, -66.4346, 6.9056, 0.84", "8.20243, -67.0714, 6.80585, 0.98", "8.53986, -68.1323, 6.71833, 1.12", "9.20792, -70.2031, 6.67286, 0.98", "9.53874, -71.2689, 6.58275, 0.84", "9.9327, -72.4272, 6.74494, 0.84", "10.3271, -73.4088, 7.3563, 0.98", "10.5072, -73.8127, 7.74906, 0.84", "10.6867, -74.1984, 8.16245, 0.98" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.95335, -49.1364, 5.99403, 1.82", "2.47628, -50.088, 6.70265, 1.82", "2.2488, -50.6059, 7.07472, 1.68", "2.13196, -50.9256, 7.34085, 1.54", "1.92637, -51.5702, 7.87244, 1.4", "1.85089, -51.8014, 8.05783, 1.26", "1.49654, -52.7645, 8.82191, 0.1", "1.29448, -53.2909, 9.21017, 0.1", "0.91835, -54.171, 9.88466, 0.1", "0.681678, -54.6691, 10.2696, 0.14", "0.4007, -55.1547, 10.6449, 0.28", "0.0836293, -55.5756, 10.9502, 0.42", "-0.187415, -55.8609, 11.1234, 0.28", "-0.616412, -56.2239, 11.3411, 0.14", "-0.842826, -56.3913, 11.4503, 0.28", "-1.23945, -56.6914, 11.7848, 0.56", "-1.54444, -57.004, 12.2002, 0.56", "-1.54444, -57.004, 12.2002, 0.56", "-1.54444, -57.004, 12.2002, 0.56", "-1.80027, -57.6847, 13.2317, 0.56", "-2.00701, -58.3348, 14.163, 0.42", "-2.10362, -58.7467, 14.6809, 0.28", "-2.27641, -59.6148, 15.6006, 0.42", "-2.34228, -59.9324, 15.8718, 0.28", "-2.39453, -60.186, 16.0376, 0.42", "-2.47781, -60.5866, 16.2076, 0.7", "-2.59316, -61.2234, 16.4258, 0.56", "-2.66697, -61.883, 16.6373, 0.42", "-2.66017, -62.5272, 16.865, 0.28", "-2.62586, -62.8083, 16.9897, 0.14", "-2.62586, -62.8083, 16.9897, 0.28", "-2.3433, -63.7934, 17.4797, 0.1", "-2.14882, -64.3205, 17.7312, 0.14", "-1.69958, -65.3908, 18.2014, 0.1", "-1.45774, -65.923, 18.395, 0.1", "-1.21474, -66.4675, 18.5403, 0.1", "-0.969967, -67.017, 18.6228, 0.1", "-0.696017, -67.6522, 18.6333, 0.1", "-0.569124, -67.9333, 18.6171, 0.28", "-0.29103, -68.5508, 18.5314, 0.14", "-0.0328979, -69.0899, 18.4513, 0.1", "0.269241, -69.7113, 18.3575, 0.1", "0.533823, -70.2465, 18.2751, 0.1", "0.826971, -70.8627, 18.1344, 0.14", "1.06399, -71.3965, 17.9864, 0.1", "1.29755, -72.0095, 17.7991, 0.14", "1.48187, -72.57, 17.6175, 0.1", "1.63971, -73.2046, 17.4162, 0.1", "1.87266, -74.4329, 17.0447, 0.1", "1.92768, -74.8489, 16.9314, 0.28", "1.99065, -75.5192, 16.7613, 0.14", "2.01842, -76.122, 16.6245, 0.1", "2.03359, -76.7959, 16.5019, 0.1", "2.03618, -77.4128, 16.4373, 0.1", "2.06285, -78.036, 16.4374, 0.14", "2.09666, -78.3457, 16.4304, 0.28", "2.14724, -78.6526, 16.4176, 0.28", "2.26568, -79.2625, 16.3862, 0.42", "2.33287, -79.5625, 16.3677, 0.42", "2.46619, -80.1577, 16.331, 0.28", "2.58683, -80.7641, 16.2987, 0.14", "2.7002, -81.3752, 16.269, 0.1", "2.79654, -81.9869, 16.2452, 0.14", "2.88028, -82.6038, 16.2257, 0.1", "2.93103, -83.2197, 16.1739, 0.1", "2.95887, -83.8993, 16.0874, 0.1", "2.96731, -84.511, 15.9886, 0.1", "2.96735, -85.197, 15.86, 0.1", "2.96631, -85.803, 15.7714, 0.1", "2.95743, -87.1059, 15.6444, 0.1", "2.95024, -87.7291, 15.6172, 0.1", "2.94121, -88.3498, 15.6252, 0.1", "2.9214, -88.961, 15.6711, 0.14", "2.88309, -90.1419, 15.8269, 0.1", "2.86282, -90.8285, 15.955, 0.1", "2.85947, -91.4816, 16.1582, 0.14", "2.85425, -92.14, 16.385, 0.1", "2.86212, -92.7677, 16.6513, 0.1", "2.87457, -93.0469, 16.7772, 0.14", "2.92515, -93.6147, 17.0192, 0.28", "3.07939, -94.6772, 17.5125, 0.1", "3.18121, -95.2099, 17.7777, 0.1", "3.44131, -96.3442, 18.3441, 0.1", "3.57707, -96.888, 18.5954, 0.1", "3.71424, -97.4423, 18.8239, 0.1", "3.78941, -97.7204, 18.9357, 0.14", "3.78941, -97.7204, 18.9357, 0.28", "3.97704, -98.2528, 19.1567, 0.28", "4.1862, -98.7793, 19.3896, 0.28", "4.1862, -98.7793, 19.3896, 0.42", "4.63617, -99.6785, 19.9047, 0.1", "4.88277, -100.153, 20.1962, 0.1", "5.39542, -101.102, 20.8179, 0.1", "5.65227, -101.544, 21.1437, 0.1", "5.83876, -101.85, 21.3818, 0.1", "5.83876, -101.85, 21.3818, 0.1" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.867498, -32.1508, -0.584154, 0.56", "-0.945093, -32.4216, -1.02935, 0.56", "-1.04719, -32.7146, -1.53286, 0.42", "-1.15357, -32.9839, -2.04015, 0.28", "-1.36934, -33.4436, -3.01911, 0.7", "-1.55119, -33.7494, -3.95781, 0.84", "-1.69227, -33.8416, -4.94359, 0.98", "-1.68395, -33.6788, -5.99835, 1.12", "-1.65761, -33.5133, -6.56285, 1.26", "-1.64388, -33.3261, -7.05463, 1.12", "-1.68929, -32.9307, -7.94223, 0.98", "-1.80024, -32.5641, -8.97369, 0.84", "-1.89963, -32.3413, -9.87268, 0.7", "-1.95957, -32.2599, -10.3866, 0.56", "-2.02806, -32.2056, -10.9001, 0.56", "-2.09482, -32.1456, -11.4068, 0.56", "-2.20165, -31.9656, -12.3848, 0.7", "-2.20465, -31.9061, -12.6377, 0.84", "-2.2058, -31.7423, -13.2021, 1.26", "-2.19062, -31.4348, -14.2227, 1.12", "-2.17413, -31.1012, -15.2738, 0.98", "-2.16969, -30.7982, -16.1924, 1.12", "-2.22565, -30.5095, -17.078, 0.98", "-2.34515, -30.2689, -18.1067, 0.84", "-2.72267, -30.4873, -18.5026, 0.7", "-3.53745, -31.0663, -18.9882, 0.56", "-3.78062, -31.2413, -19.1976, 0.42", "-3.95829, -31.3291, -19.7484, 0.56", "-3.97386, -31.3267, -20.0095, 0.56", "-3.95983, -31.2713, -21.1058, 0.56", "-3.85404, -31.1739, -22.0944, 0.42", "-3.67813, -31.0517, -23.0718, 0.28", "-3.45966, -30.9176, -24.036, 0.14", "-3.24414, -30.7914, -24.9315, 0.1", "-3.02027, -30.6676, -25.8989, 0.84", "-2.61734, -30.4952, -27.7238, 0.7", "-2.26222, -30.3705, -29.5621, 0.56", "-2.11465, -30.3449, -30.4788, 0.7", "-2.04812, -30.3481, -30.9861, 0.56", "-2.01114, -30.3615, -31.5077, 0.56", "-2.03039, -30.4103, -32.5713, 0.42", "-2.14354, -30.4345, -33.0815, 0.28", "-2.57079, -30.3835, -33.9808, 0.42", "-2.68834, -30.3133, -34.2019, 0.56", "-2.9204, -30.0522, -34.6787, 0.28", "-3.15091, -29.7254, -35.1173, 0.14", "-3.38253, -29.3859, -35.5379, 0.28", "-3.62726, -29.0681, -35.9748, 0.42", "-4.07669, -28.5976, -36.8303, 0.56", "-4.07669, -28.5976, -36.8303, 0.7", "-4.24902, -28.5848, -37.324, 2.1", "-4.54011, -28.7609, -38.3342, 1.96", "-4.64051, -28.93, -38.812, 1.82", "-4.81173, -29.3148, -39.687, 1.68", "-4.91904, -29.5903, -40.2061, 0.7", "-5.0847, -30.1173, -41.162, 0.56", "-5.11796, -30.3078, -41.4825, 0.56", "-5.16655, -30.9526, -42.3857, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.867498, -32.1508, -0.584154, 0.7", "-0.876169, -32.6306, -0.586274, 0.7", "-0.882411, -32.9667, -0.587715, 0.56", "-0.882557, -33.5032, -0.592555, 0.42", "-0.886052, -33.978, -0.641637, 0.28", "-0.879104, -34.5042, -0.684681, 0.14", "-0.853444, -34.9811, -0.684655, 0.1", "-0.798427, -35.5132, -0.649013, 0.1", "-0.730189, -35.9732, -0.592366, 0.1", "-0.573003, -36.8291, -0.445485, 0.14", "-0.397968, -37.6756, -0.272466, 0.42", "-0.179025, -38.601, -0.0710413, 0.28", "-0.075342, -39.0541, 0.0282999, 0.14", "0.0394736, -39.5569, 0.130661, 0.1", "0.130989, -40.0217, 0.181133, 0.14", "0.204609, -40.495, 0.163627, 0.1", "0.239742, -40.9532, 0.0397974, 0.1", "0.241521, -41.4353, -0.166279, 0.1", "0.228153, -41.8593, -0.375525, 0.1", "0.174737, -42.7145, -0.824844, 0.1", "0.10392, -43.4549, -1.22093, 0.14", "0.0681126, -43.7482, -1.37976, 0.56", "0.0126562, -44.2125, -1.61672, 0.42", "-0.0297482, -44.6417, -1.81199, 0.28", "-0.0650957, -45.1489, -1.97543, 0.42", "-0.0621969, -45.3871, -2.00327, 0.56", "-0.0621969, -45.3871, -2.00327, 0.42", "0.0132807, -45.8491, -2.02699, 0.84", "0.0132807, -45.8491, -2.02699, 0.7", "0.0696971, -46.0769, -2.07136, 0.28", "0.191029, -46.5182, -2.19651, 0.14", "0.311722, -46.9557, -2.34104, 0.1", "0.431418, -47.3878, -2.49387, 0.1", "0.551331, -47.8201, -2.65264, 0.1", "0.802857, -48.727, -2.97749, 0.14", "0.857291, -48.9393, -3.06933, 0.28", "0.906358, -49.1448, -3.17205, 0.1", "1.00513, -49.5569, -3.36769, 0.1", "1.11847, -49.9817, -3.54232, 0.1", "1.24939, -50.4217, -3.67001, 0.1", "1.54253, -51.2425, -3.78485, 0.14", "1.54253, -51.2425, -3.78485, 0.1", "1.87717, -52.0527, -3.84498, 0.28", "2.07987, -52.5388, -3.86049, 0.14", "2.26031, -52.9798, -3.85777, 0.1", "2.45174, -53.4708, -3.84098, 0.1", "2.52847, -53.6964, -3.8284, 0.14", "2.61205, -54.0243, -3.82718, 0.28", "2.69513, -54.4847, -3.85285, 0.14", "2.74812, -54.9611, -3.87089, 0.1", "2.77654, -55.4376, -3.88257, 0.14", "2.78236, -55.9741, -3.88895, 0.1", "2.78083, -56.5038, -3.89337, 0.1", "2.7823, -56.9837, -3.89812, 0.1", "2.78696, -57.5211, -3.87269, 0.1", "2.80438, -58.0458, -3.8182, 0.1", "2.84799, -58.5751, -3.73674, 0.14", "2.88513, -58.8072, -3.69265, 0.28", "2.93768, -59.0354, -3.64517, 0.42", "3.17126, -59.8662, -3.47472, 0.56", "3.3121, -60.3208, -3.43437, 0.42", "3.45134, -60.7667, -3.44652, 0.28", "3.57194, -61.2181, -3.5446, 0.14", "3.67898, -61.6657, -3.6621, 0.28", "3.78318, -62.1199, -3.76732, 0.14", "3.99492, -63.0438, -3.98371, 0.1", "4.11595, -63.4993, -4.06243, 0.1", "4.39425, -64.4219, -4.15861, 0.1", "4.67393, -65.2567, -4.18557, 0.1", "5.00542, -66.1687, -4.15056, 0.1", "5.18451, -66.6079, -4.10692, 0.1", "5.39164, -67.0775, -3.99468, 0.14", "5.57778, -67.4954, -3.87719, 0.28", "5.76164, -67.9151, -3.75385, 0.14", "5.93356, -68.349, -3.673, 0.1", "6.10563, -68.8489, -3.60295, 0.14", "6.37093, -69.7102, -3.46983, 0.1", "6.49378, -70.1664, -3.39929, 0.1", "6.6002, -70.6258, -3.33492, 0.1", "6.69305, -71.0925, -3.28275, 0.1", "6.78234, -71.6124, -3.24616, 0.14", "6.84502, -72.0877, -3.23565, 0.1", "6.90263, -72.5611, -3.25485, 0.1", "6.95463, -73.092, -3.30764, 0.1", "6.99323, -73.5538, -3.37806, 0.14", "7.03121, -74.0194, -3.47251, 0.28", "7.0808, -74.5363, -3.60081, 0.28", "7.12737, -74.9926, -3.7272, 0.14", "7.22995, -75.8324, -3.97418, 0.28", "7.26381, -76.0511, -4.03928, 0.56", "7.34177, -76.4902, -4.20072, 0.42", "7.43169, -76.9235, -4.37593, 0.28", "7.53532, -77.351, -4.55074, 0.14", "7.64747, -77.7839, -4.71366, 0.1", "7.768, -78.2206, -4.85312, 0.1", "8.02061, -79.1356, -5.15591, 0.14", "8.14125, -79.5715, -5.30483, 0.28", "8.25922, -79.9987, -5.44797, 0.14", "8.37856, -80.4269, -5.61688, 0.28", "8.49648, -80.8491, -5.79422, 0.42", "8.49648, -80.8491, -5.79422, 0.56", "8.54851, -81.0506, -5.90712, 0.56", "8.64022, -81.4355, -6.1606, 0.42", "8.81807, -82.2329, -6.71944, 0.28", "8.89938, -82.6133, -6.98257, 0.14", "9.03402, -83.3351, -7.50523, 0.1", "9.0781, -83.5908, -7.71336, 0.56", "9.14209, -83.9485, -7.99591, 0.42", "9.21257, -84.3251, -8.26698, 0.56", "9.29393, -84.7301, -8.49873, 0.7", "9.47978, -85.5467, -8.97509, 0.56", "9.67238, -86.2885, -9.4522, 0.42", "9.87021, -86.9656, -9.95879, 0.42", "9.95668, -87.3095, -10.2627, 0.56", "10.0313, -87.6459, -10.5771, 0.56", "10.1611, -88.372, -11.2295, 0.42", "10.2766, -89.1368, -11.8387, 0.28", "10.2989, -89.3265, -11.9771, 0.98", "10.3757, -90.1248, -12.5516, 0.84", "10.4126, -90.5249, -12.8017, 0.7", "10.4598, -91.0034, -13.0318, 0.56", "10.5132, -91.4594, -13.1645, 0.42", "10.5808, -91.9207, -13.2122, 0.28", "10.6674, -92.392, -13.2114, 0.14", "10.7731, -92.8537, -13.1634, 0.28", "10.885, -93.3146, -13.1025, 0.14", "11.0037, -93.7702, -13.0355, 0.1", "11.2524, -94.7258, -12.8892, 0.1", "11.3789, -95.1794, -12.8242, 0.1", "11.5201, -95.6299, -12.7711, 0.1", "11.6746, -96.0798, -12.7331, 0.1", "11.8321, -96.5274, -12.7138, 0.1", "11.9899, -96.9691, -12.7223, 0.1", "12.1692, -97.4694, -12.7732, 0.1", "12.3429, -97.9653, -12.8226, 0.1", "12.4187, -98.1905, -12.8443, 0.1", "12.5248, -98.5016, -12.8745, 0.84", "12.6754, -98.9501, -12.9175, 0.7", "12.831, -99.399, -12.9618, 0.56", "12.9853, -99.8456, -13.0058, 0.42", "13.142, -100.286, -13.0503, 0.28", "13.3114, -100.785, -13.1373, 0.14", "13.4336, -101.215, -13.2695, 0.1", "13.5112, -101.69, -13.5075, 0.14", "13.5185, -101.883, -13.6299, 0.7", "13.481, -102.25, -13.9189, 0.56", "13.3241, -102.949, -14.5926, 0.42", "13.1157, -103.611, -15.2792, 0.28", "12.893, -104.187, -15.9218, 0.14", "12.7514, -104.527, -16.2934, 0.1", "12.4908, -105.18, -16.9696, 0.1", "12.2719, -105.797, -17.5338, 0.1", "12.1688, -106.228, -17.8242, 0.14", "12.0693, -107.153, -18.1784, 0.28", "12.0644, -108.016, -18.3662, 0.1", "12.083, -108.483, -18.4688, 0.1", "12.1432, -109.422, -18.7176, 0.1", "12.1726, -109.872, -18.8754, 0.1", "12.1895, -110.34, -19.1122, 0.14", "12.1977, -111.161, -19.6185, 0.28", "12.1796, -111.94, -20.1801, 0.42", "12.1408, -112.632, -20.7056, 0.56", "12.1281, -112.816, -20.8479, 0.7", "12.1174, -113.088, -21.0288, 0.28", "12.119, -113.5, -21.2637, 0.14", "12.1295, -113.941, -21.4392, 0.1", "12.1417, -114.447, -21.5836, 0.1", "12.1459, -114.911, -21.6912, 0.1", "12.1359, -115.377, -21.7995, 0.1", "12.0716, -116.308, -22.0733, 0.14", "12.0366, -116.627, -22.179, 0.1", "11.9721, -117.119, -22.3544, 0.1", "11.9007, -117.617, -22.5318, 0.1", "11.8288, -118.112, -22.6962, 0.1", "11.6852, -119.047, -23.0227, 0.1", "11.6285, -119.495, -23.1722, 0.14", "11.6094, -119.71, -23.2513, 0.1", "11.5859, -120.209, -23.4421, 0.1", "11.5708, -120.646, -23.6318, 0.1", "11.5601, -121.555, -24.0374, 0.1", "11.5549, -121.98, -24.2499, 0.14", "11.5422, -122.387, -24.4879, 0.28", "11.5379, -122.785, -24.7437, 0.28", "11.5599, -123.601, -25.2995, 0.14", "11.5779, -123.979, -25.5806, 0.1", "11.6418, -124.651, -26.0765, 0.14", "11.6581, -124.838, -26.2152, 0.56", "11.7004, -125.271, -26.5153, 0.56", "11.7425, -125.675, -26.7533, 0.42", "11.8394, -126.562, -27.1358, 0.56", "11.8788, -127.009, -27.2901, 0.42", "11.912, -127.521, -27.4118, 0.28", "11.9284, -127.988, -27.5027, 0.14", "11.9317, -128.519, -27.5799, 0.1", "11.9389, -129.046, -27.6268, 0.1", "11.953, -129.286, -27.6326, 0.1", "12.0076, -129.82, -27.6516, 0.1", "12.0936, -130.291, -27.6781, 0.14", "12.151, -130.52, -27.695, 0.56", "12.2937, -130.966, -27.736, 0.42", "12.4633, -131.457, -27.825, 0.28", "12.6081, -131.899, -27.93, 0.14", "12.7614, -132.383, -28.0681, 0.1", "12.8765, -132.824, -28.2012, 0.1", "12.9718, -133.271, -28.337, 0.1", "13.1037, -134.173, -28.6708, 0.1", "13.1319, -134.484, -28.7973, 0.84", "13.1605, -134.914, -28.9798, 0.7", "13.1867, -135.407, -29.1848, 0.56", "13.2184, -135.85, -29.3587, 0.42", "13.3285, -136.76, -29.6793, 0.28", "13.4091, -137.202, -29.8064, 0.14", "13.5121, -137.651, -29.9312, 0.1", "13.6365, -138.094, -30.0468, 0.1", "13.7841, -138.535, -30.15, 0.1", "13.9555, -139.026, -30.2379, 0.1", "14.1177, -139.472, -30.2839, 0.1", "14.2664, -139.922, -30.3265, 0.1", "14.4151, -140.427, -30.3695, 0.14", "14.4696, -140.657, -30.405, 0.28", "14.5274, -140.976, -30.4716, 0.28", "14.5876, -141.434, -30.5862, 0.14", "14.6455, -141.945, -30.7304, 0.1", "14.6937, -142.399, -30.865, 0.1", "14.7856, -143.321, -31.1483, 0.14", "14.8089, -143.546, -31.2177, 0.28", "14.865, -144.001, -31.3545, 0.1", "14.9256, -144.456, -31.4788, 0.1", "14.9874, -144.907, -31.6209, 0.14", "14.9874, -144.907, -31.6209, 0.28", "15.0163, -145.23, -31.7064, 0.28", "15.0497, -145.688, -31.8404, 0.28", "15.0694, -146.128, -32.0164, 0.42", "15.1044, -147.008, -32.4219, 0.42", "15.1205, -147.298, -32.5894, 0.1", "15.1509, -147.687, -32.8379, 0.1", "15.1926, -148.074, -33.1009, 0.1", "15.3071, -148.86, -33.6447, 0.1", "15.3819, -149.247, -33.9007, 0.1", "15.6079, -150.08, -34.3908, 0.1", "15.672, -150.277, -34.5004, 0.1", "15.8133, -150.667, -34.7258, 0.1", "15.9834, -151.101, -34.9627, 0.14", "16.1508, -151.503, -35.1485, 0.1", "16.3221, -151.945, -35.3712, 0.1", "16.4662, -152.345, -35.5725, 0.1", "16.757, -153.173, -36.0362, 0.1", "16.8937, -153.557, -36.2698, 0.1", "17.0319, -153.932, -36.5052, 0.1", "17.3489, -154.695, -36.9932, 0.14", "17.4373, -154.881, -37.1071, 0.28", "17.5701, -155.131, -37.2672, 0.1", "17.8037, -155.535, -37.5102, 0.1", "18.0522, -155.926, -37.7584, 0.1", "18.2208, -156.169, -37.9079, 0.1", "18.5042, -156.552, -38.1138, 0.1", "18.9801, -157.188, -38.4583, 0.1", "19.1058, -157.364, -38.5491, 0.1", "19.3752, -157.767, -38.7382, 0.1", "19.6346, -158.188, -38.9057, 0.1", "19.8855, -158.632, -39.0448, 0.1", "20.0435, -158.916, -39.0873, 0.14", "20.2711, -159.332, -39.0865, 0.56", "20.4829, -159.754, -39.06, 0.42", "20.6647, -160.191, -39.0082, 0.28", "20.8186, -160.635, -38.941, 0.14", "21.0534, -161.479, -38.8625, 0.1", "21.1526, -161.944, -38.8838, 0.1", "21.223, -162.411, -38.9656, 0.1", "21.2637, -162.924, -39.1141, 0.1", "21.276, -163.363, -39.2799, 0.1", "21.2587, -164.251, -39.6664, 0.1", "21.2194, -165.126, -40.0795, 0.1", "21.1955, -165.425, -40.2309, 0.56", "21.1542, -165.89, -40.4669, 0.42", "21.1237, -166.315, -40.6707, 0.28", "21.0994, -166.808, -40.8717, 0.14", "21.0976, -167.272, -40.9805, 0.1", "21.1407, -168.265, -41.1036, 0.14", "21.1743, -168.74, -41.141, 0.28", "21.2192, -169.215, -41.157, 0.14", "21.2649, -169.693, -41.1486, 0.1", "21.342, -170.693, -41.1412, 0.1", "21.3616, -171.172, -41.1334, 0.1", "21.3748, -171.71, -41.1158, 0.1", "21.3597, -172.181, -41.1265, 0.1", "21.3135, -172.715, -41.1695, 0.1", "21.1876, -173.613, -41.2948, 0.14", "21.1298, -173.933, -41.3583, 0.28", "21.0268, -174.391, -41.433, 0.14", "20.9049, -174.908, -41.4994, 0.28", "20.7806, -175.419, -41.5392, 0.42", "20.7117, -175.751, -41.5473, 0.28", "20.6223, -176.27, -41.529, 0.14", "20.5233, -176.945, -41.5095, 0.1", "20.4937, -177.174, -41.5039, 0.1", "20.4466, -177.708, -41.4966, 0.1", "20.4314, -178.186, -41.497, 0.1", "20.4488, -178.714, -41.5063, 0.1", "20.4961, -179.188, -41.5228, 0.1", "20.5298, -179.425, -41.5337, 0.1", "20.5657, -179.66, -41.5451, 0.1", "20.6485, -180.131, -41.5708, 0.1", "20.7157, -180.599, -41.6307, 0.14", "20.7755, -181.066, -41.7178, 0.28", "20.8312, -181.579, -41.8319, 0.14", "20.8781, -182.042, -41.9443, 0.1", "20.9213, -182.5, -42.0649, 0.1", "21.0059, -183.473, -42.2817, 0.1", "21.049, -183.941, -42.3621, 0.1", "21.1024, -184.414, -42.4137, 0.1", "21.1639, -184.887, -42.428, 0.1", "21.1639, -184.887, -42.428, 0.1", "21.2871, -185.783, -42.3066, 0.1", "21.3572, -186.245, -42.2148, 0.1", "21.4213, -186.713, -42.1346, 0.1", "21.4713, -187.247, -42.1029, 0.1", "21.5039, -187.717, -42.1246, 0.14", "21.5373, -188.249, -42.1964, 0.28", "21.5664, -188.715, -42.3011, 0.42", "21.5903, -189.178, -42.4119, 0.28", "21.6449, -190.147, -42.6515, 0.14", "21.6801, -190.608, -42.7658, 0.1", "21.7226, -191.07, -42.8741, 0.1", "21.7786, -191.535, -42.9726, 0.1", "21.8411, -192.052, -43.061, 0.1", "21.9048, -192.524, -43.1163, 0.14", "21.9817, -192.994, -43.1405, 0.1", "22.0499, -193.468, -43.1624, 0.14", "22.1135, -193.941, -43.1832, 0.28", "22.158, -194.269, -43.1977, 0.1", "22.2281, -194.74, -43.2201, 0.1", "22.2988, -195.214, -43.2427, 0.1", "22.3809, -195.736, -43.2687, 0.1", "22.4623, -196.207, -43.294, 0.1", "22.5443, -196.676, -43.3195, 0.1", "22.6324, -197.147, -43.3465, 0.1", "22.7117, -197.616, -43.3713, 0.1", "22.7872, -198.087, -43.3951, 0.1", "22.8546, -198.55, -43.4489, 0.1", "22.9188, -199.075, -43.5368, 0.1", "22.9695, -199.542, -43.6336, 0.1", "23.0231, -200.053, -43.7553, 0.1", "23.074, -200.513, -43.8744, 0.1", "23.184, -201.445, -44.1336, 0.1", "23.2451, -201.899, -44.2671, 0.1", "23.3203, -202.349, -44.4013, 0.1", "23.4052, -202.793, -44.5253, 0.1", "23.4965, -203.237, -44.6682, 0.1", "23.4965, -203.237, -44.6682, 0.1", "23.5445, -203.461, -44.7333, 0.1", "23.6351, -203.905, -44.8768, 0.1", "23.7022, -204.34, -45.0574, 0.1", "23.8101, -205.214, -45.4598, 0.1", "23.8571, -205.64, -45.6608, 0.1", "23.9033, -206.063, -45.8542, 0.1", "23.9513, -206.495, -46.0427, 0.1", "24.0605, -207.417, -46.4129, 0.1", "24.1205, -207.863, -46.5654, 0.1", "24.1935, -208.312, -46.6809, 0.1", "24.275, -208.769, -46.786, 0.1", "24.3678, -209.23, -46.874, 0.1", "24.4741, -209.689, -46.9385, 0.1", "24.597, -210.148, -46.9744, 0.1", "24.7204, -210.608, -47.0105, 0.1", "24.8409, -211.059, -47.0458, 0.1", "24.9642, -211.52, -47.0819, 0.1", "25.0869, -211.978, -47.1177, 0.1", "25.2104, -212.439, -47.1539, 0.1", "25.3333, -212.897, -47.1898, 0.14", "25.4477, -213.354, -47.2567, 0.1", "25.5615, -213.799, -47.3529, 0.14", "25.6773, -214.243, -47.4749, 0.1", "25.7359, -214.463, -47.5449, 0.1", "25.795, -214.681, -47.6199, 0.1", "26.0391, -215.566, -47.9295, 0.1", "26.1854, -216.05, -48.0964, 0.1", "26.3242, -216.48, -48.238, 0.14", "26.4705, -216.912, -48.3654, 0.1", "26.6203, -217.343, -48.4707, 0.1", "26.7764, -217.784, -48.5505, 0.1", "26.9453, -218.282, -48.638, 0.14", "27.0114, -218.503, -48.689, 0.56", "27.1362, -218.946, -48.8116, 0.42", "27.2317, -219.381, -48.975, 0.28", "27.3048, -219.811, -49.1644, 0.28", "27.4192, -220.68, -49.5748, 0.42", "27.4633, -221.111, -49.7521, 0.42", "27.5082, -221.558, -49.9072, 0.28", "27.6078, -222.519, -50.1744, 0.14", "27.6544, -222.985, -50.2626, 0.1", "27.706, -223.458, -50.305, 0.1", "27.8184, -224.453, -50.2861, 0.14", "27.8636, -224.928, -50.2576, 0.28", "27.9079, -225.403, -50.2118, 0.14", "27.9636, -225.924, -50.1446, 0.28", "28.0015, -226.4, -50.1006, 0.14", "28.0363, -226.937, -50.0786, 0.1", "28.0691, -227.464, -50.0919, 0.1", "28.1029, -227.94, -50.105, 0.1", "28.1472, -228.417, -50.1207, 0.1", "28.2051, -228.943, -50.1405, 0.1", "28.2623, -229.419, -50.1596, 0.1", "28.3226, -229.892, -50.1795, 0.1", "28.3837, -230.365, -50.1996, 0.1", "28.4423, -230.84, -50.2191, 0.1", "28.4993, -231.366, -50.2386, 0.1", "28.5252, -231.604, -50.2475, 0.1", "28.5787, -232.138, -50.2662, 0.1", "28.6277, -232.612, -50.2832, 0.1", "28.6737, -233.081, -50.2993, 0.1", "28.7304, -233.616, -50.3188, 0.1", "28.7911, -234.091, -50.3389, 0.1", "28.8576, -234.563, -50.3604, 0.1", "28.9165, -235.025, -50.4118, 0.1", "28.9725, -235.551, -50.4971, 0.1", "29.0154, -236.016, -50.5939, 0.1", "29.0488, -236.479, -50.7094, 0.1", "29.068, -236.937, -50.837, 0.1", "29.0938, -237.894, -51.1217, 0.1", "29.1011, -238.12, -51.1902, 0.1", "29.1011, -238.12, -51.1902, 0.1", "29.1276, -238.447, -51.2717, 0.1", "29.1825, -238.906, -51.3601, 0.1", "29.2612, -239.373, -51.42, 0.1", "29.3632, -239.84, -51.4101, 0.1", "29.4701, -240.303, -51.3758, 0.1", "29.5825, -240.763, -51.3272, 0.1", "29.7022, -241.222, -51.2652, 0.1", "29.8107, -241.67, -51.1885, 0.1", "30.0098, -242.634, -50.9975, 0.1", "30.0834, -243.1, -50.9311, 0.1", "30.128, -243.576, -50.8979, 0.1", "30.128, -243.576, -50.8979, 0.1", "30.1233, -243.905, -50.9648, 0.1", "30.0998, -244.406, -51.1465, 0.1", "30.0301, -245.275, -51.5672, 0.1", "29.9897, -245.74, -51.8021, 0.1", "29.953, -246.164, -52.0088, 0.1", "29.9018, -247.048, -52.4046, 0.14", "29.8905, -247.263, -52.505, 0.1", "29.8717, -247.568, -52.6389, 0.1", "29.8452, -248.015, -52.8029, 0.1", "29.8109, -248.521, -52.976, 0.1", "29.7716, -248.979, -53.1073, 0.1", "29.6974, -249.954, -53.3202, 0.1", "29.6546, -250.477, -53.428, 0.1", "29.6222, -250.944, -53.5177, 0.1", "29.5919, -251.463, -53.6048, 0.1", "29.5677, -251.995, -53.6753, 0.1", "29.556, -252.465, -53.7128, 0.14", "29.5642, -252.805, -53.718, 0.1", "29.5818, -253.282, -53.7269, 0.1", "29.6054, -253.759, -53.7373, 0.14", "29.6322, -254.089, -53.7472, 0.1", "29.6802, -254.566, -53.764, 0.1", "29.7241, -255.041, -53.7797, 0.1", "29.7681, -255.576, -53.7959, 0.1", "29.7876, -256.044, -53.8052, 0.1", "29.7864, -256.522, -53.8092, 0.1", "29.7864, -256.522, -53.8092, 0.14", "29.759, -256.858, -53.775, 0.84", "29.7021, -257.374, -53.6822, 0.7", "29.6468, -257.894, -53.5646, 0.56", "29.6105, -258.22, -53.4835, 0.42", "29.5641, -258.729, -53.3568, 0.28", "29.5132, -259.707, -53.1309, 0.14", "29.5122, -260.223, -53.0231, 0.1", "29.5262, -260.691, -52.9377, 0.1", "29.5497, -261.221, -52.8578, 0.1", "29.5705, -261.686, -52.8075, 0.1", "29.5909, -262.163, -52.7828, 0.1", "29.6018, -262.643, -52.79, 0.1", "29.6017, -263.179, -52.8313, 0.1", "29.5873, -263.508, -52.8727, 0.1", "29.5434, -264.034, -52.9613, 0.1", "29.4814, -264.498, -53.0502, 0.1", "29.3946, -265.007, -53.1529, 0.1", "29.2473, -265.859, -53.3282, 0.1", "29.1953, -266.187, -53.3932, 0.1", "29.1156, -266.699, -53.4839, 0.1", "29.0391, -267.225, -53.5611, 0.1", "28.9589, -267.738, -53.6495, 0.1", "28.8978, -268.204, -53.7333, 0.1", "28.8425, -268.73, -53.8171, 0.1", "28.8137, -269.054, -53.8802, 0.1", "28.7768, -269.514, -53.9953, 0.1", "28.7178, -270.317, -54.2601, 0.1", "28.6838, -270.749, -54.4526, 0.56", "28.6838, -270.749, -54.4526, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-4.30536, 41.2825, -6.22982, 0.84", "-4.51321, 42.4513, -5.99101, 0.84", "-4.5878, 43.0196, -5.88977, 0.7", "-4.65303, 43.6028, -5.78946, 0.56", "-4.70979, 44.1856, -5.69725, 0.42", "-4.74709, 44.7742, -5.61081, 0.28", "-4.77327, 45.3619, -5.53263, 0.42", "-4.76165, 45.774, -5.51017, 0.56", "-4.74198, 46.0611, -5.49145, 0.7", "-4.68872, 46.6444, -5.4499, 0.84", "-4.62891, 47.3002, -5.32943, 0.7", "-4.57372, 47.8739, -5.17615, 0.56", "-4.54315, 48.1535, -5.08695, 0.7", "-4.47236, 48.7082, -4.89116, 0.56", "-4.39432, 49.2623, -4.68793, 0.7", "-4.1954, 50.4426, -4.32246, 0.84", "-4.07504, 51.0822, -4.23135, 0.7", "-3.99121, 51.5009, -4.24639, 0.56", "-3.93084, 51.7879, -4.29678, 0.7", "-3.79247, 52.3306, -4.4593, 0.98", "-3.51421, 53.4465, -4.82342, 0.98", "-3.25425, 54.5639, -5.20033, 0.84", "-3.14794, 55.1388, -5.297, 0.84", "-3.08333, 55.556, -5.28389, 0.7", "-3.02092, 55.9533, -5.19161, 0.56", "-2.88283, 57.0537, -4.70908, 0.7", "-2.85279, 57.623, -4.37384, 0.84", "-2.86196, 58.6924, -3.75348, 0.98", "-2.89463, 59.0721, -3.57924, 0.84", "-2.95375, 59.3519, -3.51152, 0.7", "-3.1853, 60.1453, -3.60924, 0.1", "-3.37005, 60.7302, -3.84351, 0.14", "-3.71887, 61.7768, -4.37474, 0.28", "-3.83162, 62.1218, -4.57233, 0.42", "-4.01768, 62.6795, -4.84414, 0.56", "-4.34946, 63.7553, -5.25269, 0.56", "-4.48434, 64.3109, -5.3894, 0.42", "-4.60541, 64.886, -5.44479, 0.56", "-4.66178, 65.1773, -5.42919, 0.56", "-4.8887, 66.3602, -5.30309, 0.56", "-5.00254, 66.923, -5.21435, 0.56", "-5.13064, 67.4882, -5.10123, 0.56", "-5.25968, 68.06, -5.00747, 0.7", "-5.3844, 68.6336, -4.93987, 0.84", "-5.51616, 69.2834, -4.89856, 0.98", "-5.62255, 69.8651, -4.89942, 1.12", "-5.71896, 70.4518, -4.8974, 0.98", "-5.8129, 71.0361, -4.89484, 0.84", "-5.89988, 71.6113, -4.89086, 0.7", "-5.97742, 72.2013, -4.88368, 0.84", "-6.03007, 72.7917, -4.86988, 0.7", "-6.05372, 73.0886, -4.8622, 0.84" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-4.30536, 41.2825, -6.22982, 0.7", "-4.37245, 41.3558, -7.2614, 0.7", "-4.49079, 41.5099, -9.17729, 0.56", "-4.59968, 41.6661, -11.1316, 0.42", "-4.71388, 41.8293, -13.047, 0.28", "-4.82776, 42.0046, -14.9615, 0.14", "-4.93975, 42.1961, -16.911, 0.1", "-5.03597, 42.389, -18.844, 0.1", "-5.13504, 42.5947, -20.7565, 0.1", "-5.18587, 42.7119, -21.787, 0.1", "-5.28377, 42.9536, -23.7131, 0.1", "-5.37719, 43.2128, -25.639, 0.1", "-5.45744, 43.4784, -27.5456, 0.1", "-5.53539, 43.7647, -29.4886, 0.1", "-5.60387, 44.0656, -31.4087, 0.1", "-5.63213, 44.2173, -32.397, 0.1", "-5.70617, 44.5355, -34.3156, 0.1", "-5.80643, 44.8888, -36.2273, 0.1", "-5.87623, 45.0972, -37.2039, 0.1", "-6.04747, 45.5551, -39.0897, 0.14", "-6.08356, 45.6274, -39.3491, 0.28", "-6.30638, 45.9875, -40.5114, 0.1", "-6.39011, 46.1081, -40.8578, 0.1", "-7.23021, 46.7037, -40.3552, 0.1", "-7.65373, 46.9939, -40.0384, 0.1", "-8.06195, 47.2688, -39.676, 0.14", "-8.06195, 47.2688, -39.676, 0.28" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-17.1655, 41.0989, -29.9112, 0.7", "-17.4438, 41.5016, -30.2611, 0.7", "-17.8765, 42.1452, -30.7277, 0.56", "-18.0199, 42.3666, -30.8682, 0.42", "-18.4552, 43.0531, -31.2724, 0.28", "-18.6711, 43.3824, -31.447, 0.14", "-18.9105, 43.7489, -31.653, 0.1", "-19.1407, 44.1204, -31.8493, 0.1", "-19.2492, 44.2933, -31.9228, 0.14", "-19.2492, 44.2933, -31.9228, 0.28", "-19.5375, 44.7934, -32.1253, 0.42", "-19.8944, 45.4347, -32.4457, 0.42", "-20.0868, 45.8219, -32.6553, 0.28", "-20.2601, 46.2182, -32.8662, 0.14", "-20.4089, 46.5787, -33.0596, 0.14", "-20.6876, 47.3181, -33.4539, 0.28", "-20.6876, 47.3181, -33.4539, 0.42", "-20.8125, 47.7108, -33.6024, 0.56", "-20.9227, 48.1095, -33.7423, 0.42", "-21.0633, 48.51, -33.8446, 0.28", "-21.159, 48.7055, -33.8674, 0.42", "-21.4104, 49.124, -33.8678, 0.28", "-21.6459, 49.4813, -33.8692, 0.28", "-21.8997, 49.8313, -33.8718, 0.42", "-22.2631, 50.3197, -33.9217, 0.42", "-22.5486, 50.7064, -33.9868, 0.28", "-22.7258, 50.9426, -34.0392, 0.14", "-23.009, 51.3082, -34.1804, 0.1", "-23.1842, 51.5225, -34.2917, 0.1", "-23.5986, 52.0414, -34.6699, 0.1", "-23.8269, 52.365, -34.943, 0.28", "-24.033, 52.68, -35.2338, 0.42", "-24.403, 53.2871, -35.791, 0.28", "-24.5217, 53.5001, -35.9741, 0.14", "-24.8169, 54.0749, -36.4398, 0.28", "-24.971, 54.399, -36.665, 1.12", "-24.971, 54.399, -36.665, 0.98", "-25.1445, 54.8148, -36.8649, 0.1", "-25.2979, 55.201, -36.9693, 0.1", "-25.63, 56.0479, -37.1134, 0.1", "-25.789, 56.447, -37.1558, 0.1", "-25.9628, 56.8968, -37.2141, 0.1", "-26.2524, 57.7367, -37.3301, 0.14", "-26.3048, 57.9403, -37.3872, 0.28", "-26.3412, 58.1393, -37.4669, 0.42", "-26.4668, 58.978, -37.8264, 0.28", "-26.5233, 59.3608, -38.0309, 0.28", "-26.5682, 59.7238, -38.2646, 0.14", "-26.6592, 60.4374, -38.7812, 0.1", "-26.714, 60.7984, -39.0193, 0.1", "-26.7901, 61.2161, -39.2505, 0.1", "-26.8373, 61.4151, -39.3297, 0.1" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-17.1655, 41.0989, -29.9112, 0.84", "-16.9772, 41.1765, -30.8928, 0.84", "-16.4887, 41.2715, -32.7816, 0.98", "-15.8506, 41.2995, -34.6273, 0.84", "-15.7442, 41.3043, -34.8779, 0.28", "-15.4849, 41.3291, -35.4304, 0.14", "-15.2389, 41.3631, -35.9762, 0.1", "-15.0538, 41.3791, -36.3137, 0.1", "-14.7038, 41.4038, -36.8139, 0.14", "-14.0488, 41.4957, -37.7471, 0.28", "-13.5454, 41.6175, -38.648, 0.42", "-12.8015, 41.9443, -40.4284, 0.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "12.631, 138.976, -5.01452, 0.1", "12.2586, 140.276, -4.44538, 0.1", "12.0609, 140.897, -4.19715, 0.1", "11.808, 141.593, -3.9384, 0.1", "11.5719, 142.212, -3.72098, 0.14", "11.3274, 142.832, -3.50625, 0.28", "11.3274, 142.832, -3.50625, 0.42", "10.9956, 143.511, -3.34072, 0.1", "10.6219, 144.18, -3.24436, 0.14", "10.4395, 144.477, -3.22826, 0.28", "10.2454, 144.763, -3.26485, 0.42", "9.8069, 145.384, -3.41906, 0.56", "9.39234, 146.015, -3.56165, 0.42", "8.70593, 147.229, -3.82504, 0.28", "8.3885, 147.933, -3.95349, 0.14", "7.96858, 149.301, -4.02888, 0.28", "7.96858, 149.301, -4.02888, 0.42", "8.01821, 150.724, -3.78574, 0.1", "8.16301, 151.477, -3.58234, 0.1", "8.38091, 152.174, -3.32153, 0.1", "8.88414, 153.45, -2.77725, 0.1", "9.06747, 153.851, -2.57628, 0.1", "9.37344, 154.508, -2.27688, 0.14", "9.57964, 154.931, -2.13363, 0.28", "9.72907, 155.212, -2.02587, 0.42" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "12.631, 138.976, -5.01452, 0.28", "12.9394, 139.85, -4.75533, 0.28", "13.0742, 140.324, -4.64281, 0.14", "13.1428, 140.64, -4.58191, 0.1", "13.2407, 141.27, -4.4825, 0.14", "13.2812, 141.59, -4.43973, 0.1", "13.3328, 142.043, -4.38715, 0.1", "13.367, 142.503, -4.3695, 0.14", "13.3854, 142.953, -4.35404, 0.1", "13.3873, 143.414, -4.34031, 0.1", "13.3805, 143.931, -4.326, 0.1", "13.3851, 144.439, -4.31058, 0.1", "13.4096, 144.897, -4.29416, 0.1", "13.4594, 145.41, -4.27304, 0.1", "13.5237, 145.856, -4.2521, 0.14", "13.6094, 146.363, -4.22674, 0.1", "13.6626, 146.688, -4.2107, 0.1", "13.7373, 147.19, -4.18688, 0.14", "13.8021, 147.702, -4.16393, 0.28", "13.8205, 147.922, -4.1727, 0.28", "13.8373, 148.377, -4.22357, 0.1", "13.8233, 148.829, -4.29947, 0.1", "13.7831, 149.278, -4.39009, 0.1", "13.723, 149.72, -4.48825, 0.1", "13.587, 150.623, -4.68776, 0.14", "13.5276, 151.06, -4.77591, 0.28", "13.4854, 151.51, -4.85775, 0.14", "13.466, 151.963, -4.92372, 0.1", "13.464, 152.42, -4.96817, 0.1", "13.4731, 152.935, -4.98757, 0.1", "13.4951, 153.443, -4.96998, 0.1", "13.5255, 153.768, -4.97743, 0.1", "13.5842, 154.272, -4.98287, 0.1", "13.6452, 154.727, -4.98144, 0.1", "13.7104, 155.183, -4.97339, 0.1", "13.7705, 155.689, -4.95882, 0.1", "13.8595, 156.534, -4.92368, 0.1", "13.9383, 157.47, -4.87471, 0.14", "13.9717, 157.985, -4.8421, 0.1", "13.9947, 158.49, -4.80512, 0.1", "13.9905, 158.948, -4.7694, 0.1", "13.9588, 159.454, -4.76057, 0.1", "13.904, 159.906, -4.80976, 0.1", "13.8388, 160.327, -4.9754, 0.1", "13.7591, 160.695, -5.22261, 0.14", "13.6645, 161.064, -5.54243, 0.1", "13.4938, 161.64, -6.11155, 0.1", "13.2855, 162.269, -6.77337, 0.1", "13.0823, 162.858, -7.43832, 0.1", "12.8727, 163.456, -8.12588, 0.14", "12.8243, 163.604, -8.28681, 0.28", "12.7271, 163.965, -8.61438, 0.42", "12.6459, 164.354, -8.83299, 0.56", "12.6187, 164.575, -8.88882, 0.7", "12.5852, 165.032, -8.91608, 0.84", "12.5664, 165.539, -8.90353, 0.7", "12.5562, 166.055, -8.93137, 0.56", "12.5507, 166.559, -8.98681, 0.42", "12.5363, 167.012, -9.05422, 0.28", "12.5208, 167.459, -9.1598, 0.14", "12.5009, 167.894, -9.29526, 0.1", "12.4501, 168.745, -9.66931, 0.1", "12.4215, 169.145, -9.88067, 0.1", "12.396, 169.518, -10.1231, 0.14", "12.3588, 170.262, -10.7096, 0.28", "12.344, 170.605, -11.0023, 0.28", "12.3255, 171.235, -11.543, 0.14", "12.318, 171.597, -11.815, 0.1", "12.32, 172.347, -12.3438, 0.1", "12.3408, 173.142, -12.8182, 0.1", "12.3613, 173.564, -12.9871, 0.1", "12.4136, 174.061, -13.1074, 0.14", "12.5626, 175.013, -13.1456, 0.28", "12.6102, 175.237, -13.1268, 0.42", "12.7294, 175.719, -13.029, 0.14", "12.8577, 176.204, -12.9096, 0.1", "12.942, 176.512, -12.8483, 0.1", "13.069, 176.998, -12.7837, 0.1", "13.1839, 177.5, -12.7549, 0.1", "13.2836, 177.998, -12.7633, 0.1", "13.3221, 178.222, -12.7809, 0.1", "13.4004, 178.72, -12.8799, 0.1", "13.4754, 179.202, -13.0169, 0.1", "13.5455, 179.63, -13.1651, 0.1", "13.7014, 180.517, -13.5004, 0.1", "13.7735, 180.931, -13.66, 0.1", "13.9189, 181.822, -13.9897, 0.1", "13.9601, 182.126, -14.0943, 0.1", "14.0085, 182.609, -14.2348, 0.1", "14.0481, 183.113, -14.3373, 0.1", "14.0702, 183.572, -14.3773, 0.1", "14.0837, 184.022, -14.3931, 0.1", "14.0866, 184.481, -14.3793, 0.1", "14.0814, 184.942, -14.3665, 0.1", "14.0687, 185.459, -14.3529, 0.1", "14.0569, 185.964, -14.3036, 0.1", "14.0531, 186.191, -14.2679, 0.1", "14.0416, 186.698, -14.166, 0.1", "14.0348, 187.138, -14.0604, 0.1", "14.0058, 187.57, -13.9145, 0.1", "13.8388, 188.408, -13.4823, 0.14", "13.7036, 188.764, -13.2384, 0.1", "13.5136, 189.076, -12.9794, 0.1", "13.3923, 189.207, -12.8495, 0.14", "12.7788, 189.717, -12.3619, 0.1", "12.0662, 190.183, -11.9831, 0.1", "11.647, 190.424, -11.9075, 0.14", "11.2227, 190.666, -11.9916, 0.14", "10.9858, 190.815, -12.1164, 0.1", "10.38, 191.253, -12.6685, 0.1", "10.2152, 191.392, -12.8916, 0.1", "9.78577, 191.794, -13.6093, 0.1", "9.40778, 192.19, -14.3539, 0.1", "9.22828, 192.396, -14.7658, 0.1", "8.96205, 192.707, -15.4351, 0.1", "8.85792, 192.822, -15.7058, 0.14" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.6867, -74.1984, 8.16245, 1.12", "10.755, -74.9344, 8.15797, 1.12", "10.8406, -75.7748, 8.14838, 1.26", "10.9267, -76.5214, 8.13397, 1.4", "11.0467, -77.2657, 8.09932, 1.54", "11.1161, -77.6319, 8.07621, 1.4", "11.1161, -77.6319, 8.07621, 1.26", "11.1809, -77.976, 7.98198, 1.12", "11.3184, -78.6689, 7.74374, 0.98", "11.4397, -79.4171, 7.39413, 0.84", "11.5299, -80.069, 7.05194, 0.7", "11.7013, -81.4387, 6.31758, 0.84", "11.7879, -82.0875, 5.96936, 0.98", "11.8967, -82.7467, 5.64569, 1.12", "12.1862, -84.1503, 5.01334, 1.12", "12.3234, -84.8206, 4.72287, 1.12", "12.4862, -85.4999, 4.4567, 0.98", "12.7251, -86.2674, 4.25609, 1.12", "13.1925, -87.535, 3.97144, 0.98", "13.4176, -87.9988, 3.93309, 1.12" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "10.6867, -74.1984, 8.16245, 0.28", "11.0756, -74.3444, 8.2473, 0.28", "11.7052, -74.5776, 8.38486, 0.42", "12.087, -74.7292, 8.52339, 0.56", "12.6621, -74.9865, 8.77227, 0.42", "13.0234, -75.1599, 8.93944, 0.28", "13.7313, -75.5294, 9.27236, 0.14", "14.2759, -75.8535, 9.54153, 0.28", "15.1758, -76.4554, 10.0003, 0.28", "15.6973, -76.8273, 10.2591, 0.14", "16.0206, -77.0718, 10.4125, 0.1", "16.5364, -77.4775, 10.6342, 0.1", "17.06, -77.8944, 10.7862, 0.1", "17.4017, -78.1663, 10.8341, 0.1", "18.0903, -78.6938, 10.8736, 0.1", "18.4429, -78.9453, 10.9041, 0.1", "19.0015, -79.3317, 11.0361, 0.14", "19.8782, -79.8734, 11.4059, 0.28", "19.8782, -79.8734, 11.4059, 0.42", "20.7701, -80.309, 12.0227, 0.42", "21.2362, -80.5432, 12.4664, 0.56", "21.9822, -80.9537, 13.2727, 0.42", "22.3886, -81.2137, 13.7448, 0.28", "22.8004, -81.5107, 14.2102, 0.14", "23.0679, -81.7163, 14.4702, 0.28", "23.8258, -82.3307, 15.0584, 0.56", "24.291, -82.7299, 15.3638, 0.7", "24.7059, -83.1105, 15.6243, 0.56", "25.2468, -83.678, 16.0005, 0.42", "25.5055, -83.9827, 16.1861, 0.28", "25.7516, -84.2958, 16.3536, 0.14", "26.2611, -84.9643, 16.6484, 0.14", "26.8914, -85.8548, 17.0294, 0.28", "27.2189, -86.3408, 17.2228, 0.14", "27.5393, -86.8474, 17.4027, 0.14", "27.8438, -87.3603, 17.6024, 0.1", "28.1752, -87.928, 17.8303, 0.1", "28.5164, -88.4922, 18.0519, 0.1", "28.8762, -89.0391, 18.3033, 0.1", "29.1034, -89.3611, 18.494, 0.1", "29.6911, -90.1815, 19.0474, 0.1", "30.0393, -90.6662, 19.3929, 0.1", "30.3886, -91.1546, 19.7467, 0.1", "31.0019, -92.0572, 20.4589, 0.1", "31.1991, -92.3678, 20.7017, 0.1", "31.4696, -92.8249, 21.0248, 0.14", "31.7633, -93.3478, 21.384, 0.28", "31.9314, -93.6724, 21.6151, 0.42", "32.3754, -94.5421, 22.2297, 0.1", "32.6298, -95.0194, 22.5392, 0.1", "32.8864, -95.5028, 22.8439, 0.14", "33.4353, -96.5276, 23.4509, 0.1", "33.7273, -97.0858, 23.7439, 0.1", "33.9191, -97.4561, 23.8999, 0.1", "34.2361, -98.053, 24.0749, 0.14", "34.5419, -98.5984, 24.167, 0.28", "34.8439, -99.1479, 24.2235, 0.28", "34.9885, -99.4299, 24.226, 0.42", "35.2495, -100.002, 24.2887, 0.28", "35.487, -100.579, 24.4019, 0.14", "35.8974, -101.639, 24.8098, 0.1", "36.292, -102.603, 25.3203, 0.28", "36.5145, -103.102, 25.6289, 0.14", "36.9868, -104.119, 26.3081, 0.1", "37.2207, -104.591, 26.6393, 0.1", "37.7398, -105.57, 27.3411, 0.1", "38.0054, -106.08, 27.7242, 0.1", "38.3116, -106.605, 28.0709, 0.1", "38.4572, -106.835, 28.2185, 0.1", "38.8301, -107.368, 28.4772, 0.1", "39.0814, -107.691, 28.6193, 0.1" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-5.16655, -30.9526, -42.3857, 0.28", "-5.34947, -31.2582, -42.4498, 0.28", "-5.70158, -31.8704, -42.5688, 0.14", "-5.87902, -32.1804, -42.6284, 0.28", "-6.15028, -32.6687, -42.7169, 0.14", "-6.41689, -33.1693, -42.8, 0.1", "-6.57848, -33.4959, -42.846, 0.1", "-6.78986, -34.019, -42.888, 0.14", "-6.89371, -34.3678, -42.8914, 0.28", "-6.94039, -34.6179, -42.8753, 0.42", "-6.9622, -34.8716, -42.8419, 0.98", "-6.96612, -35.3672, -42.7509, 0.84", "-6.93209, -35.924, -42.6232, 0.7", "-6.88272, -36.4051, -42.4995, 0.56", "-6.81815, -36.9591, -42.3519, 0.42", "-6.78446, -37.4329, -42.199, 0.28", "-6.77122, -37.9126, -42.0255, 0.14", "-6.77994, -38.4389, -41.8214, 0.1", "-6.8091, -38.9105, -41.6341, 0.1", "-6.85162, -39.383, -41.4444, 0.1", "-6.96596, -40.3442, -41.0631, 0.1", "-7.02759, -40.8164, -40.8769, 0.1", "-7.09912, -41.2818, -40.7071, 0.1", "-7.18101, -41.7641, -40.5541, 0.1", "-7.26497, -42.2522, -40.4296, 0.14", "-7.30464, -42.502, -40.3843, 0.28", "-7.33725, -42.7533, -40.3586, 0.7", "-7.41629, -43.3113, -40.3059, 0.56", "-7.48936, -43.8157, -40.2594, 0.42", "-7.58007, -44.3818, -40.2129, 0.28", "-7.66274, -44.8854, -40.1729, 0.14", "-7.74201, -45.3919, -40.1301, 0.1", "-7.77618, -45.6343, -40.1071, 0.1", "-7.84444, -46.1415, -40.0568, 0.1", "-7.89965, -46.4997, -40.026, 0.1", "-7.97987, -47.0036, -39.9843, 0.1", "-8.07455, -47.5084, -39.9521, 0.1", "-8.17359, -48.0012, -39.925, 0.1", "-8.29504, -48.5631, -39.8999, 0.1", "-8.42727, -49.1247, -39.8819, 0.1", "-8.55102, -49.6152, -39.8718, 0.1", "-8.70199, -50.1723, -39.8671, 0.1", "-8.83959, -50.6657, -39.8657, 0.1", "-8.98701, -51.2127, -39.8606, 0.14", "-9.12234, -51.7719, -39.8452, 0.28", "-9.25131, -52.3249, -39.8267, 0.42", "-9.37127, -52.8227, -39.8126, 0.56", "-9.42843, -53.0735, -39.8033, 0.42", "-9.51545, -53.5806, -39.8119, 0.42", "-9.57087, -54.0885, -39.8382, 0.56", "-9.59072, -54.4421, -39.8657, 0.1", "-9.60143, -55.0148, -39.9193, 0.1", "-9.60229, -55.525, -39.9709, 0.1", "-9.58931, -56.5642, -40.0649, 0.1", "-9.58626, -56.8196, -40.0872, 0.1", "-9.58008, -57.3201, -40.1193, 0.7", "-9.57342, -57.8329, -40.1307, 0.56", "-9.57517, -58.3434, -40.1187, 0.42", "-9.59712, -58.8552, -40.0816, 0.42", "-9.64084, -59.201, -40.0133, 0.56", "-9.71776, -59.6908, -39.8907, 0.56", "-9.80186, -60.1769, -39.7592, 0.42", "-9.89408, -60.6604, -39.6151, 0.28", "-9.99258, -61.1345, -39.4554, 0.14", "-10.2029, -62.086, -39.0841, 0.1", "-10.301, -62.5308, -38.8792, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-5.16655, -30.9526, -42.3857, 0.1", "-5.59675, -29.8088, -42.4272, 0.1", "-5.82003, -29.276, -42.486, 0.1", "-6.05915, -28.7634, -42.5736, 0.1", "-6.34165, -28.1887, -42.6901, 0.1", "-6.59738, -27.6921, -42.8088, 0.1", "-6.59738, -27.6921, -42.8088, 0.1", "-6.92258, -26.9859, -43.0619, 0.1", "-7.09165, -26.6351, -43.1919, 0.1", "-7.09165, -26.6351, -43.1919, 0.1", "-7.3221, -26.0632, -43.3781, 0.1", "-7.51445, -25.5394, -43.538, 0.1", "-7.68159, -24.9988, -43.6851, 0.1", "-7.82772, -24.3832, -43.8274, 0.1", "-7.94002, -23.819, -43.9454, 0.1", "-8.005, -23.2653, -44.0864, 0.1", "-8.005, -23.2653, -44.0864, 0.1", "-7.98672, -22.7056, -44.2582, 0.1", "-7.93765, -22.1454, -44.4328, 0.1", "-7.85814, -21.588, -44.5964, 0.1", "-7.6696, -20.4109, -44.9255, 0.1", "-7.58197, -19.8595, -45.0696, 0.1", "-7.45924, -19.238, -45.25, 0.1", "-7.33688, -18.6906, -45.4194, 0.1", "-7.2005, -18.086, -45.6086, 0.1", "-7.09002, -17.5347, -45.7742, 0.1", "-6.99803, -16.971, -45.9204, 0.1", "-6.82499, -15.8941, -46.2104, 0.1", "-6.74794, -15.3404, -46.3626, 0.1", "-6.68203, -14.7767, -46.5112, 0.1", "-6.60726, -14.2171, -46.6795, 0.1", "-6.51871, -13.5918, -46.8725, 0.1", "-6.44856, -13.0409, -47.0367, 0.1", "-6.38748, -12.4763, -47.1842, 0.1", "-6.31567, -11.9115, -47.3371, 0.1", "-6.15978, -10.7275, -47.6627, 0.1", "-6.09215, -10.1726, -47.8148, 0.1", "-6.01043, -9.61976, -47.9911, 0.1", "-5.90698, -9.00198, -48.1989, 0.1", "-5.81554, -8.45106, -48.3847, 0.1", "-5.72767, -7.89789, -48.5571, 0.1", "-5.65708, -7.34273, -48.7074, 0.1", "-5.50165, -6.15874, -49.0332, 0.1", "-5.43328, -5.59417, -49.1882, 0.1", "-5.35222, -5.04141, -49.3649, 0.1", "-5.25118, -4.43512, -49.5693, 0.1", "-5.16047, -3.88695, -49.7544, 0.1", "-5.06756, -3.333, -49.9311, 0.1", "-4.98825, -2.77353, -50.0882, 0.1", "-4.80731, -1.6043, -50.4276, 0.1", "-4.72415, -1.04742, -50.5912, 0.1", "-4.65441, -0.488091, -50.7527, 0.1", "-4.62581, -0.204289, -50.8271, 0.1", "-4.59148, 0.360467, -50.954, 0.1", "-4.58842, 0.93835, -51.0577, 0.1", "-4.58952, 1.51817, -51.1662, 0.1", "-4.5726, 2.08869, -51.302, 0.1", "-4.54713, 2.65624, -51.4581, 0.1", "-4.51984, 3.21652, -51.6275, 0.1", "-4.48361, 3.76673, -51.8029, 0.1", "-4.39807, 4.93878, -52.1859, 0.1", "-4.35875, 5.49472, -52.3661, 0.1", "-4.31674, 6.05741, -52.535, 0.1", "-4.29896, 6.33191, -52.6083, 0.1", "-4.26422, 6.90445, -52.7333, 0.1", "-4.24115, 7.48702, -52.8263, 0.1", "-4.24075, 8.07202, -52.8821, 0.1", "-4.23431, 8.73158, -52.9416, 0.1", "-4.21762, 9.31028, -52.9875, 0.1", "-4.20233, 9.72664, -53.0187, 0.1", "-4.17999, 10.3126, -53.062, 0.1", "-4.16251, 10.9013, -53.1084, 0.1", "-4.14386, 11.4771, -53.153, 0.1", "-4.12922, 12.1352, -53.2076, 0.1", "-4.1181, 12.7208, -53.2573, 0.1", "-4.11538, 13.306, -53.3118, 0.1", "-4.09189, 13.8883, -53.406, 0.1", "-4.07386, 14.1727, -53.4703, 0.1", "-4.03427, 14.7358, -53.6291, 0.1", "-3.99941, 15.2943, -53.8114, 0.1", "-3.96606, 15.8468, -54.0019, 0.1", "-3.91234, 16.9766, -54.3979, 0.1", "-3.89792, 17.5203, -54.585, 0.1", "-3.88007, 18.067, -54.7992, 0.1", "-3.85562, 18.6061, -55.0228, 0.1", "-3.83118, 19.1452, -55.2464, 0.1", "-3.81335, 19.6918, -55.4607, 0.1", "-3.80916, 20.2448, -55.6516, 0.1", "-3.79749, 21.3708, -56.0463, 0.1", "-3.7933, 21.9238, -56.2372, 0.1", "-3.77547, 22.4704, -56.4514, 0.1", "-3.74972, 23.0086, -56.6769, 0.1", "-3.7226, 23.5458, -56.9044, 0.1", "-3.70129, 24.0902, -57.1236, 0.1", "-3.69433, 24.632, -57.3158, 0.1", "-3.61353, 25.7328, -57.7774, 0.1", "-3.58324, 25.9952, -57.898, 0.1", "-3.49182, 26.5018, -58.1758, 0.1", "-3.38555, 26.9928, -58.4682, 0.1", "-3.25011, 27.4646, -58.7822, 0.1", "-2.93071, 28.4239, -59.4588, 0.1", "-2.78802, 28.8817, -59.788, 0.1", "-2.52772, 29.7965, -60.4906, 0.1", "-2.42082, 30.2374, -60.8522, 0.1", "-2.29897, 31.1541, -61.6351, 0.1", "-2.29897, 31.1541, -61.6351, 0.1", "-2.41394, 31.7346, -62.19, 0.1", "-2.5663, 32.1759, -62.6319, 0.1", "-2.70457, 32.444, -62.8898, 0.1", "-2.99988, 32.9558, -63.4432, 0.1", "-3.43699, 33.6203, -64.1874, 0.1", "-3.68516, 34.0147, -64.6356, 0.1", "-3.83075, 34.2547, -64.914, 0.1", "-4.07661, 34.6421, -65.3588, 0.1", "-4.47775, 35.291, -66.1355, 0.1", "-4.77735, 35.7802, -66.7117, 0.1", "-5.0293, 36.1663, -67.1443, 0.1", "-5.18849, 36.4083, -67.4259, 0.1", "-5.49809, 36.9005, -67.9751, 0.1", "-5.91678, 37.611, -68.6905, 0.1", "-6.1637, 38.0804, -69.0676, 0.1", "-6.28833, 38.3938, -69.2825, 0.1", "-6.28833, 38.3938, -69.2825, 0.1", "-6.42006, 38.9135, -69.5128, 0.1", "-6.53284, 39.4495, -69.681, 0.1", "-6.64859, 40.0124, -69.8009, 0.1", "-6.7346, 40.5681, -69.9594, 0.1", "-6.76907, 40.8441, -70.0528, 0.1", "-6.81335, 41.4319, -70.3209, 0.1", "-6.84724, 41.9318, -70.6191, 0.1", "-6.87253, 42.3662, -70.9961, 0.1", "-6.88405, 43.0802, -71.9585, 0.1", "-6.89593, 43.3513, -72.4591, 0.1", "-6.95775, 43.762, -73.4195, 0.1", "-7.01299, 43.942, -73.943, 0.1", "-7.1795, 44.2454, -75.0394, 0.1", "-7.39876, 44.4944, -76.0263, 0.1", "-7.64549, 44.7021, -76.747, 0.1", "-7.89502, 44.9095, -77.2915, 0.1", "-8.09297, 45.0901, -77.5899, 0.1", "-8.09297, 45.0901, -77.5899, 0.1", "-8.44288, 45.5286, -77.8858, 0.1", "-8.79587, 45.9968, -78.132, 0.1", "-9.14519, 46.4782, -78.3773, 0.1", "-9.36849, 46.7749, -78.5331, 0.1", "-9.74948, 47.22, -78.793, 0.1", "-10.149, 47.6309, -79.0602, 0.1", "-10.149, 47.6309, -79.0602, 0.1", "-10.6049, 47.9631, -79.352, 0.1", "-11.0642, 48.2733, -79.6436, 0.1", "-11.5325, 48.5812, -79.9402, 0.1", "-11.8204, 48.7752, -80.123, 0.1", "-12.0089, 48.9232, -80.2705, 0.1", "-12.4931, 49.3729, -80.7152, 0.1", "-12.8093, 49.7475, -81.1232, 0.1", "-12.9742, 49.9819, -81.3949, 0.1", "-13.18, 50.356, -81.8796, 0.1", "-13.4959, 51.0398, -82.8068, 0.1", "-13.5899, 51.2694, -83.1255, 0.1", "-13.8646, 51.9992, -84.1541, 0.1", "-13.9359, 52.2175, -84.4858, 0.1", "-14.1466, 52.8591, -85.4743, 0.1", "-14.2711, 53.204, -85.9879, 0.1", "-14.3717, 53.4376, -86.3018, 0.1", "-14.5571, 53.8193, -86.7708, 0.1", "-14.8849, 54.4395, -87.5052, 0.1", "-15.1572, 54.9316, -88.0863, 0.1", "-15.4065, 55.3142, -88.5338, 0.1", "-15.5698, 55.5528, -88.8157, 0.1", "-15.911, 56.0274, -89.36, 0.1", "-16.3672, 56.6705, -90.1142, 0.1", "-16.6441, 57.0427, -90.5425, 0.1", "-16.9079, 57.4102, -90.981, 0.1", "-17.1755, 57.7789, -91.4274, 0.1", "-17.326, 58.0024, -91.7156, 0.1", "-17.7534, 58.6848, -92.6017, 0.1", "-17.9825, 59.0586, -93.055, 0.1", "-18.1973, 59.4442, -93.5172, 0.1", "-18.3051, 59.6865, -93.811, 0.1", "-18.5449, 60.3298, -94.562, 0.1", "-18.6541, 60.7355, -95.0461, 0.1", "-18.7228, 61.1596, -95.5148, 0.1", "-18.7318, 61.5992, -95.9761, 0.1", "-18.6947, 62.4655, -96.8277, 0.1", "-18.6658, 62.8953, -97.1958, 0.1", "-18.6177, 63.7406, -97.788, 0.1", "-18.5645, 64.2938, -98.1298, 0.1", "-18.525, 64.6639, -98.3221, 0.1", "-18.478, 65.2743, -98.5604, 0.1", "-18.4742, 65.8434, -98.7021, 0.1", "-18.4989, 66.4111, -98.815, 0.1", "-18.5534, 66.9885, -98.9014, 0.1", "-18.587, 67.2772, -98.9482, 0.1", "-18.666, 67.8488, -99.048, 0.1", "-18.7312, 68.4151, -99.192, 0.1", "-18.7932, 68.9654, -99.3778, 0.1", "-18.8367, 69.4764, -99.6367, 0.1", "-18.8367, 69.4764, -99.6367, 0.1", "-18.8475, 69.98, -100.045, 0.1", "-18.8576, 70.8524, -100.881, 0.1", "-18.8516, 71.2254, -101.306, 0.1", "-18.828, 71.9919, -102.236, 0.1", "-18.8151, 72.3509, -102.668, 0.1", "-18.7617, 73.0401, -103.523, 0.1", "-18.7244, 73.437, -104.017, 0.1", "-18.6697, 74.226, -104.929, 0.1", "-18.6487, 74.6145, -105.349, 0.1", "-18.6314, 75.0218, -105.758, 0.1", "-18.6007, 75.7673, -106.462, 0.1", "-18.5879, 76.2675, -106.864, 0.1", "-18.5754, 76.7277, -107.197, 0.1", "-18.5673, 77.2047, -107.53, 0.1", "-18.5513, 78.1982, -108.233, 0.1", "-18.5493, 78.6825, -108.556, 0.1", "-18.5482, 79.1641, -108.878, 0.1", "-18.5342, 79.6393, -109.213, 0.1", "-18.5034, 80.6299, -109.919, 0.1", "-18.492, 81.1093, -110.244, 0.1", "-18.472, 81.5939, -110.567, 0.1", "-18.4042, 82.5837, -111.271, 0.1", "-18.3725, 83.0525, -111.614, 0.1", "-18.3472, 83.5184, -111.94, 0.1", "-18.3345, 84.0141, -112.242, 0.1", "-18.3435, 85.04, -112.844, 0.1", "-18.3435, 85.04, -112.844, 0.1", "-18.4147, 85.6314, -113.097, 0.1", "-18.5017, 86.1678, -113.315, 0.1", "-18.5946, 86.6911, -113.551, 0.1", "-18.705, 87.2704, -113.815, 0.1", "-18.8113, 87.7992, -114.04, 0.1", "-18.9225, 88.3805, -114.3, 0.1", "-19.0142, 88.9049, -114.541, 0.1", "-19.1998, 89.9977, -115.055, 0.1", "-19.2825, 90.5204, -115.297, 0.1", "-19.3562, 91.0535, -115.526, 0.1", "-19.4359, 91.6526, -115.76, 0.1", "-19.5034, 92.1971, -115.939, 0.1", "-19.5412, 92.4759, -116.013, 0.1", "-19.6358, 93.0459, -116.122, 0.1", "-19.7433, 93.6088, -116.237, 0.1", "-19.8697, 94.1676, -116.362, 0.1", "-20.017, 94.7148, -116.499, 0.1", "-20.017, 94.7148, -116.499, 0.1", "-20.2486, 95.286, -116.686, 0.1", "-20.5145, 95.8415, -116.89, 0.1", "-20.7928, 96.3796, -117.101, 0.1", "-21.0838, 96.9156, -117.318, 0.1", "-21.3758, 97.4425, -117.535, 0.1", "-21.5552, 97.7853, -117.67, 0.1", "-21.8191, 98.3432, -117.874, 0.1", "-22.0106, 98.8366, -118.083, 0.1", "-22.0106, 98.8366, -118.083, 0.1", "-22.1061, 99.4045, -118.403, 0.1", "-22.1394, 99.8874, -118.704, 0.1", "-22.1197, 100.357, -119.045, 0.1", "-22.0108, 101.303, -119.799, 0.1", "-21.9365, 101.747, -120.16, 0.1", "-21.7226, 102.664, -120.877, 0.1", "-21.5804, 103.115, -121.211, 0.1", "-21.2096, 104.054, -121.834, 0.1", "-21.0988, 104.29, -121.959, 0.1", "-20.8035, 104.837, -122.13, 0.1", "-20.4853, 105.393, -122.231, 0.1", "-20.2829, 105.754, -122.269, 0.1", "-19.9834, 106.334, -122.347, 0.1", "-19.8308, 106.705, -122.456, 0.1", "-19.7522, 106.953, -122.589, 0.1", "-19.6653, 107.472, -122.971, 0.1", "-19.6479, 108.404, -123.747, 0.1", "-19.6749, 108.863, -124.189, 0.1", "-19.7922, 109.703, -125.05, 0.1", "-19.8223, 109.891, -125.262, 0.1", "-19.8996, 110.306, -125.745, 0.1", "-19.9647, 110.703, -126.235, 0.1", "-20.0907, 111.47, -127.155, 0.1", "-20.156, 111.876, -127.648, 0.1", "-20.2804, 112.593, -128.47, 0.1", "-20.3289, 112.994, -128.959, 0.1", "-20.4055, 113.774, -129.87, 0.1", "-20.4435, 114.175, -130.282, 0.1", "-20.4817, 114.489, -130.528, 0.1", "-20.5311, 114.992, -130.819, 0.1", "-20.6313, 115.973, -131.157, 0.1", "-20.7285, 117.138, -131.417, 0.1", "-20.7925, 117.72, -131.487, 0.1", "-20.8675, 118.287, -131.553, 0.1", "-20.9746, 118.931, -131.634, 0.1", "-21.1033, 119.495, -131.718, 0.1", "-21.1793, 119.774, -131.764, 0.1", "-21.3491, 120.379, -131.919, 0.1", "-21.547, 120.971, -132.088, 0.1", "-21.7665, 121.557, -132.27, 0.1", "-21.9936, 122.131, -132.454, 0.1", "-22.189, 122.656, -132.616, 0.1", "-22.189, 122.656, -132.616, 0.1", "-22.3616, 123.26, -132.772, 0.1", "-22.4892, 123.816, -132.898, 0.1", "-22.5919, 124.383, -133.011, 0.1", "-22.6765, 124.953, -133.114, 0.1", "-22.6765, 124.953, -133.114, 0.1", "-22.7435, 125.52, -133.206, 0.1", "-22.8008, 126.097, -133.294, 0.1", "-22.8475, 126.676, -133.376, 0.1", "-22.8862, 127.259, -133.454, 0.1", "-22.9195, 127.841, -133.529, 0.1", "-22.9499, 128.425, -133.602, 0.1", "-22.9766, 128.997, -133.672, 0.1", "-23.0033, 129.652, -133.75, 0.1", "-23.0231, 130.235, -133.817, 0.1", "-23.0386, 130.821, -133.882, 0.1", "-23.0503, 131.395, -133.944, 0.1", "-23.0557, 131.689, -133.975, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "28.6838, -270.749, -54.4526, 0.1", "28.6652, -271.066, -54.5606, 0.1", "28.636, -271.516, -54.7068, 0.1", "28.5986, -272.019, -54.8529, 0.1", "28.5703, -272.477, -54.9738, 0.1", "28.5123, -273.448, -55.2007, 0.1", "28.4908, -273.906, -55.2973, 0.1", "28.4621, -274.421, -55.4285, 0.1", "28.4279, -274.924, -55.5689, 0.1", "28.3957, -275.378, -55.6973, 0.1", "28.3531, -275.891, -55.829, 0.1", "28.3231, -276.353, -55.9266, 0.1", "28.2654, -277.322, -56.1408, 0.1", "28.2585, -277.552, -56.1927, 0.14", "28.2503, -278.072, -56.3023, 0.14", "28.2516, -278.589, -56.3966, 0.1", "28.2621, -279.061, -56.4628, 0.1", "28.2833, -279.533, -56.5042, 0.1", "28.3235, -280.008, -56.5188, 0.1", "28.3776, -280.531, -56.5375, 0.1", "28.44, -281.003, -56.5579, 0.1", "28.5299, -281.528, -56.586, 0.1", "28.6106, -281.989, -56.6111, 0.1", "28.6977, -282.454, -56.6379, 0.1", "28.7937, -282.916, -56.6671, 0.1", "28.8854, -283.379, -56.7296, 0.1", "28.9761, -283.887, -56.8281, 0.1", "29.0307, -284.21, -56.9057, 0.1", "29.098, -284.661, -57.0272, 0.1", "29.1594, -285.115, -57.1221, 0.1", "29.2871, -286.095, -57.2698, 0.1", "29.3406, -286.567, -57.312, 0.14", "29.3918, -287.038, -57.3282, 0.1", "29.4452, -287.503, -57.3219, 0.1", "29.5417, -288.497, -57.2546, 0.1", "29.585, -288.968, -57.1981, 0.1", "29.6295, -289.484, -57.1094, 0.1", "29.6569, -289.954, -57.0388, 0.1", "29.6708, -290.485, -56.9782, 0.1", "29.6759, -291.008, -56.9463, 0.14", "29.6786, -291.245, -56.949, 0.1", "29.6846, -291.778, -56.9552, 0.1", "29.6828, -292.252, -56.9587, 0.1", "29.6647, -292.777, -56.9585, 0.1", "29.6384, -293.249, -56.9883, 0.1", "29.6091, -293.724, -57.0231, 0.14", "29.5685, -294.247, -57.0662, 0.28", "29.5041, -294.914, -57.1331, 0.14", "29.4586, -295.238, -57.1717, 0.1", "29.2884, -296.18, -57.3181, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "28.6838, -270.749, -54.4526, 0.1", "28.1022, -271.138, -54.4552, 0.1", "27.6, -271.513, -54.3575, 0.1", "27.0467, -271.922, -54.2092, 0.1", "26.4902, -272.337, -54.0501, 0.1", "26.156, -272.591, -53.9188, 0.1", "25.621, -272.997, -53.6846, 0.1", "24.6559, -273.782, -53.1967, 0.1", "24.2142, -274.152, -52.9527, 0.1", "23.7121, -274.572, -52.6706, 0.1", "22.7854, -275.385, -52.1626, 0.1", "22.5656, -275.596, -52.0667, 0.1", "22.0829, -276.08, -51.8816, 0.1", "21.7785, -276.411, -51.8135, 0.1", "21.3303, -276.961, -51.74, 0.1", "20.9054, -277.546, -51.7524, 0.1", "20.2312, -278.634, -52.0727, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-6.05372, 73.0886, -4.8622, 0.28", "-6.85696, 73.6622, -5.03414, 0.28", "-7.22668, 73.9667, -5.12954, 0.14", "-7.45626, 74.1691, -5.19611, 0.28", "-7.89476, 74.5857, -5.33406, 0.42", "-8.10903, 74.8038, -5.40561, 0.42", "-8.43767, 75.1596, -5.52023, 0.28", "-8.72541, 75.5388, -5.65045, 0.14", "-8.89905, 75.7919, -5.72702, 0.1", "-9.15445, 76.2027, -5.83647, 0.1", "-9.39707, 76.631, -5.93728, 0.14", "-9.62858, 77.0612, -6.0317, 0.28", "-9.84215, 77.447, -6.11972, 0.14", "-9.99398, 77.7105, -6.18317, 0.1", "-10.2269, 78.0802, -6.28338, 0.14", "-10.5037, 78.4709, -6.4065, 0.28", "-10.7813, 78.8445, -6.56889, 0.42", "-11.0808, 79.2048, -6.73948, 0.56", "-11.2744, 79.4181, -6.84554, 0.42", "-11.5919, 79.7619, -7.01075, 0.28", "-11.7976, 79.9817, -7.11218, 0.28", "-12.2968, 80.549, -7.34094, 0.42", "-12.8589, 81.2552, -7.57627, 0.1", "-13.1368, 81.6513, -7.68022, 0.1", "-13.399, 82.0702, -7.76684, 0.1", "-13.6428, 82.4983, -7.83718, 0.1", "-13.8649, 82.934, -7.93145, 0.14", "-13.9607, 83.1312, -7.98276, 0.28", "-14.1494, 83.56, -8.14886, 0.42", "-14.3201, 83.9394, -8.31698, 0.56", "-14.5088, 84.3502, -8.51995, 0.7", "-14.8758, 85.1122, -8.92714, 0.56", "-15.0029, 85.3584, -9.06402, 0.42", "-15.2823, 85.8573, -9.34059, 0.42", "-15.4229, 86.1016, -9.46702, 0.56", "-15.4229, 86.1016, -9.46702, 0.7", "-15.6695, 86.5115, -9.61476, 0.56", "-15.8944, 86.933, -9.75042, 0.42", "-16.0874, 87.3669, -9.8993, 0.28", "-16.2373, 87.7666, -10.0432, 0.14", "-16.3919, 88.2101, -10.21, 0.1", "-16.5373, 88.6562, -10.3787, 0.1", "-16.743, 89.474, -10.7424, 0.14", "-16.743, 89.474, -10.7424, 0.28", "-16.8774, 89.9131, -10.935, 0.56", "-17.0703, 90.3446, -11.0897, 0.42", "-17.296, 90.7205, -11.1855, 0.56", "-17.7982, 91.3677, -11.2825, 0.7", "-18.4958, 92.0951, -11.3354, 0.14", "-18.7232, 92.3114, -11.3516, 0.1", "-19.4854, 92.9618, -11.3816, 0.1", "-19.7278, 93.1484, -11.3904, 0.14", "-19.9828, 93.3353, -11.4034, 0.28", "-20.4744, 93.7096, -11.4368, 0.42", "-20.7054, 93.9151, -11.4884, 0.56", "-20.9206, 94.1338, -11.5556, 0.42", "-21.3037, 94.6016, -11.7321, 0.7", "-21.5684, 94.9891, -11.9031, 0.56", "-21.8024, 95.3797, -12.0949, 0.42", "-21.8024, 95.3797, -12.0949, 0.28", "-21.9877, 95.7729, -12.3402, 0.1", "-22.1843, 96.1539, -12.5841, 0.1", "-22.6151, 96.8586, -13.0155, 0.1", "-22.806, 97.0813, -13.1279, 0.1", "-23.1677, 97.3897, -13.2444, 0.14", "-23.8575, 97.864, -13.3466, 0.28", "-24.6768, 98.2812, -13.2598, 0.84", "-25.4856, 98.6176, -12.9888, 0.7", "-26.2672, 98.9413, -12.6228, 0.84", "-26.4444, 99.0199, -12.5195, 0.98", "-26.6135, 99.0969, -12.4023, 1.12", "-27.2917, 99.4238, -11.8748, 0.56", "-27.9523, 99.8052, -11.358, 0.42", "-28.2623, 100.016, -11.125, 0.28", "-28.9106, 100.503, -10.6788, 0.28", "-29.5117, 100.979, -10.32, 0.42", "-29.5117, 100.979, -10.32, 0.56", "-29.9555, 101.405, -10.2022, 0.7", "-30.2855, 101.772, -10.1805, 0.56", "-30.4796, 102.022, -10.1963, 0.42", "-30.7345, 102.442, -10.2685, 0.28", "-30.9692, 102.885, -10.3235, 0.14", "-31.1694, 103.287, -10.3403, 0.1", "-31.3861, 103.735, -10.2882, 0.1", "-31.5761, 104.135, -10.1942, 0.1", "-31.7611, 104.525, -10.0652, 0.1", "-32.1412, 105.291, -9.72569, 0.14", "-32.2344, 105.471, -9.62673, 0.28", "-32.6459, 106.132, -9.15707, 0.42", "-32.8532, 106.437, -8.90782, 0.56", "-32.9678, 106.576, -8.77987, 0.56", "-33.2119, 106.849, -8.52752, 0.7", "-33.4712, 107.12, -8.28757, 0.98", "-34.0352, 107.691, -7.81715, 0.84", "-34.3047, 107.979, -7.61497, 0.7", "-34.8904, 108.579, -7.203, 0.56", "-35.0322, 108.725, -7.11175, 0.42", "-35.6375, 109.342, -6.76314, 0.1", "-35.9772, 109.67, -6.60416, 0.1", "-36.2834, 109.963, -6.49586, 0.14", "-37.008, 110.651, -6.36177, 0.1", "-37.226, 110.877, -6.38224, 0.1", "-37.4376, 111.096, -6.42587, 0.1", "-37.8372, 111.536, -6.61941, 0.14", "-37.8372, 111.536, -6.61941, 0.28", "-38.3301, 112.147, -7.24252, 0.84", "-38.5283, 112.564, -7.87272, 0.84" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-6.05372, 73.0886, -4.8622, 0.84", "-5.97163, 73.6756, -4.8709, 0.84", "-5.89184, 74.3249, -4.87867, 0.98", "-5.80533, 74.9819, -4.88751, 0.84", "-5.73418, 75.5572, -4.89447, 0.84", "-5.66931, 76.1463, -4.90025, 0.84", "-5.60648, 76.8077, -4.90503, 0.7", "-5.5634, 77.3987, -4.9071, 0.56", "-5.53488, 78.0518, -4.90616, 0.56", "-5.51706, 78.6438, -4.90394, 0.56", "-5.49917, 79.2328, -4.90176, 0.7", "-5.48738, 79.8218, -4.89855, 0.84", "-5.49722, 80.4134, -4.89165, 0.84", "-5.49722, 80.4134, -4.89165, 0.98" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-26.8373, 61.4151, -39.3297, 1.12", "-26.7229, 61.8683, -39.261, 1.12", "-26.5772, 62.3816, -39.1802, 0.98", "-26.4079, 62.8791, -39.0964, 0.84", "-26.2899, 63.1937, -39.0413, 0.7", "-26.0841, 63.6822, -38.9514, 0.56", "-25.8613, 64.1554, -38.8598, 0.7", "-25.603, 64.6159, -38.7627, 0.1", "-25.3223, 65.0522, -38.6637, 0.14", "-25.1247, 65.3217, -38.622, 0.1", "-24.8061, 65.7389, -38.5851, 0.1", "-24.4809, 66.1518, -38.5711, 0.1", "-24.2741, 66.422, -38.5724, 0.1", "-23.9573, 66.8418, -38.5844, 0.1", "-23.3826, 67.6591, -38.6113, 0.14", "-23.0918, 68.0959, -38.6224, 0.42", "-22.9137, 68.3829, -38.6259, 0.28", "-22.5749, 68.9644, -38.6136, 0.14", "-22.41, 69.2595, -38.5941, 0.1", "-22.0981, 69.8484, -38.5213, 0.1", "-21.9404, 70.1469, -38.4602, 0.1", "-21.7876, 70.435, -38.4011, 0.1", "-21.4953, 71.0276, -38.2838, 0.1", "-21.3572, 71.3368, -38.2557, 0.14", "-21.2319, 71.6576, -38.2564, 0.28", "-21.1584, 71.8837, -38.2746, 0.42", "-21.0203, 72.3314, -38.3697, 0.1", "-20.8784, 72.8207, -38.5082, 0.14", "-20.6155, 73.7458, -38.8047, 0.1", "-20.478, 74.2321, -38.9561, 0.1", "-20.4106, 74.4513, -39.0179, 0.1", "-20.0758, 75.4384, -39.3108, 0.14", "-19.89, 75.9184, -39.4565, 0.1", "-19.7611, 76.2248, -39.5392, 0.1", "-19.5493, 76.6978, -39.6346, 0.1", "-19.3156, 77.172, -39.7171, 0.1", "-18.8637, 78.0587, -39.8226, 0.1", "-18.7052, 78.3577, -39.8339, 0.14", "-18.3774, 78.9411, -39.8439, 0.28", "-18.2067, 79.2379, -39.8372, 0.42", "-17.9386, 79.6929, -39.8046, 0.56", "-17.6718, 80.1526, -39.7433, 0.42", "-17.4087, 80.6013, -39.6464, 0.28", "-17.2453, 80.8914, -39.5851, 0.14", "-16.9297, 81.4748, -39.4643, 0.1", "-16.7794, 81.7682, -39.428, 0.1", "-16.6313, 82.0731, -39.4109, 0.1", "-16.3434, 82.6817, -39.4569, 0.1", "-16.127, 83.1644, -39.5412, 0.1", "-15.9952, 83.46, -39.6101, 0.1", "-15.5988, 84.3494, -39.8549, 0.1", "-15.4632, 84.6481, -39.9364, 0.1", "-15.0541, 85.5293, -40.1671, 0.1", "-14.913, 85.8333, -40.2372, 0.1", "-14.6223, 86.4286, -40.3336, 0.1", "-14.4748, 86.7333, -40.353, 0.1", "-14.1761, 87.3384, -40.3606, 0.1", "-14.0213, 87.6399, -40.3643, 0.1", "-13.7838, 88.1111, -40.3583, 0.1", "-13.5546, 88.5959, -40.3736, 0.1", "-13.3433, 89.0758, -40.4451, 0.1", "-12.9975, 89.9025, -40.6321, 0.1", "-12.9146, 90.111, -40.707, 0.1", "-12.7592, 90.5246, -40.8804, 0.1", "-12.5835, 90.9849, -41.0836, 0.1", "-12.2679, 91.8759, -41.4077, 0.1", "-12.1589, 92.1863, -41.4894, 0.1", "-11.8491, 93.1466, -41.548, 0.1", "-11.6893, 93.653, -41.5087, 0.1", "-11.5191, 94.1442, -41.3923, 0.1", "-11.2082, 95.0566, -41.0915, 0.1", "-11.1101, 95.3543, -40.9603, 0.1", "-10.8094, 96.223, -40.5577, 0.1", "-10.6944, 96.5061, -40.4117, 0.14", "-10.5924, 96.7064, -40.3295, 0.14", "-10.0893, 97.5077, -40.1234, 0.28", "-9.87744, 97.7668, -40.0947, 0.28", "-9.51562, 98.1436, -40.0635, 0.14", "-9.17152, 98.4662, -40.0472, 0.1", "-8.7809, 98.8085, -40.0037, 0.1", "-8.37975, 99.1314, -39.9297, 0.1", "-8.01061, 99.404, -39.8305, 0.1", "-7.59564, 99.695, -39.7205, 0.1", "-7.3298, 99.8802, -39.6502, 0.14", "-7.14075, 100.01, -39.6005, 0.28", "-6.75471, 100.264, -39.5405, 0.7", "-6.47496, 100.438, -39.5201, 0.56", "-6.08058, 100.686, -39.5122, 0.42", "-5.63635, 100.949, -39.5159, 0.28", "-5.23088, 101.18, -39.5247, 0.14", "-4.38253, 101.663, -39.5544, 0.1", "-3.98286, 101.904, -39.5719, 0.1", "-3.54643, 102.182, -39.586, 0.1", "-3.167, 102.454, -39.6242, 0.1", "-2.98615, 102.598, -39.6492, 0.1", "-2.98615, 102.598, -39.6492, 0.1", "-2.63898, 102.978, -39.7663, 0.1", "-2.33595, 103.38, -39.9116, 0.1", "-1.87042, 104.112, -40.1782, 0.1", "-1.62165, 104.558, -40.3295, 0.1", "-1.21593, 105.325, -40.6039, 0.14", "-0.98583, 105.769, -40.7612, 0.1", "-0.760885, 106.218, -40.9418, 0.1", "-0.552121, 106.665, -41.1206, 0.14", "-0.416493, 106.957, -41.222, 0.28", "0.0237179, 107.892, -41.5379, 0.14", "0.169813, 108.185, -41.6196, 0.1", "0.642232, 109.032, -41.846, 0.1", "0.815002, 109.318, -41.9132, 0.1", "1.0881, 109.763, -41.9879, 0.1", "1.26203, 110.052, -42.0086, 0.1", "1.59917, 110.629, -41.9688, 0.1", "1.86094, 111.099, -41.9068, 0.1", "2.0141, 111.387, -41.8477, 0.1", "2.25073, 111.865, -41.7896, 0.1", "2.38869, 112.175, -41.7734, 0.1", "2.65046, 112.799, -41.7716, 0.1", "2.84003, 113.293, -41.79, 0.1", "2.95161, 113.614, -41.8084, 0.1", "3.2841, 114.566, -41.8725, 0.1", "3.45904, 115.066, -41.8783, 0.1", "3.57583, 115.39, -41.8579, 0.1", "3.77031, 115.876, -41.7787, 0.1", "3.99519, 116.346, -41.644, 0.1", "4.0988, 116.537, -41.5658, 0.14", "4.54044, 117.235, -41.1864, 0.28", "4.8297, 117.614, -40.9676, 0.14", "5.12067, 117.982, -40.7216, 0.1", "5.38556, 118.329, -40.4335, 0.1", "5.52792, 118.538, -40.2155, 0.1", "5.71113, 118.868, -39.854, 0.1", "5.83346, 119.161, -39.5044, 0.14", "6.00869, 119.734, -38.7594, 0.1", "6.15458, 120.349, -37.9968, 0.1", "6.26666, 120.937, -37.3191, 0.1", "6.32355, 121.292, -36.9386, 0.1", "6.37459, 121.933, -36.1825, 0.1", "6.48523, 122.154, -36.3998, 0.14", "7.06048, 123.337, -37.4547, 0.28", "7.36857, 123.946, -38.0382, 0.14", "7.6861, 124.552, -38.6191, 0.28", "7.77308, 124.707, -38.7721, 0.42", "7.96993, 125.059, -39.0953, 0.14", "8.17725, 125.471, -39.3576, 0.1", "8.30416, 125.764, -39.4441, 0.1", "8.53951, 126.397, -39.5441, 0.1", "8.82247, 127.267, -39.6176, 0.1", "8.97835, 127.777, -39.6874, 0.1", "9.12522, 128.28, -39.7751, 0.1", "9.18683, 128.509, -39.8171, 0.1", "9.31921, 129.022, -39.9083, 0.1", "9.43605, 129.535, -39.9869, 0.1", "9.64287, 130.522, -40.0794, 0.1", "9.74455, 131.043, -40.1282, 0.1", "9.84078, 131.573, -40.1691, 0.1", "9.88148, 131.811, -40.1795, 0.1", "9.94527, 132.288, -40.182, 0.1", "9.99823, 132.818, -40.1557, 0.1", "10.033, 133.295, -40.0999, 0.1", "10.0623, 133.824, -40.0399, 0.1", "10.0791, 134.364, -39.9812, 0.1", "10.0807, 134.846, -39.9314, 0.1", "10.0819, 135.378, -39.8765, 0.1", "10.0814, 135.917, -39.8212, 0.1", "10.0851, 136.156, -39.796, 0.1", "10.104, 136.639, -39.7775, 0.14", "10.13, 137.12, -39.7868, 0.1", "10.1727, 137.65, -39.8183, 0.1", "10.2151, 138.188, -39.8668, 0.1", "10.2442, 138.519, -39.9005, 0.1", "10.3337, 139.525, -40.002, 0.1", "10.3786, 140.001, -40.0458, 0.1", "10.4267, 140.53, -40.0842, 0.1", "10.4588, 141.01, -40.1086, 0.1", "10.4923, 141.548, -40.15, 0.1", "10.5141, 142.019, -40.1874, 0.1", "10.5297, 142.561, -40.2189, 0.1", "10.541, 143.09, -40.2678, 0.1", "10.5411, 143.332, -40.2799, 0.1", "10.5374, 144.349, -40.2785, 0.1", "10.5239, 144.833, -40.2543, 0.1", "10.5132, 145.312, -40.2069, 0.1", "10.4946, 145.783, -40.1348, 0.14", "10.4374, 146.776, -39.9237, 0.1", "10.4058, 147.306, -39.8203, 0.1", "10.3694, 147.77, -39.7308, 0.1", "10.3576, 148.112, -39.7301, 0.1", "10.3621, 148.588, -39.8101, 0.1", "10.39, 149.034, -39.9763, 0.1", "10.4621, 149.902, -40.4105, 0.1", "10.5032, 150.321, -40.6306, 0.1", "10.6069, 151.205, -41.0788, 0.1", "10.6632, 151.698, -41.2835, 0.1", "10.8022, 152.642, -41.5916, 0.1", "10.8385, 152.874, -41.6373, 0.1", "10.913, 153.409, -41.6065, 0.1", "10.9735, 153.923, -41.4763, 0.1", "11.0353, 154.853, -41.0804, 0.1", "11.0445, 155.138, -40.9111, 0.1", "11.0534, 155.522, -40.6291, 0.1", "11.0535, 156.316, -40.0173, 0.1", "11.0362, 156.732, -39.6944, 0.1", "11.0084, 157.132, -39.4315, 0.1", "10.9291, 157.968, -39.0506, 0.14", "10.9031, 158.193, -38.9999, 0.28", "10.8364, 158.729, -39.0207, 0.1", "10.7924, 159.151, -39.217, 0.1", "10.7117, 159.962, -39.7396, 0.1", "10.6838, 160.342, -40.0175, 0.1", "10.6338, 161.105, -40.604, 0.1", "10.6156, 161.484, -40.8836, 0.14", "10.5906, 162.92, -41.8837, 0.28", "10.59, 163.316, -42.1266, 0.28", "10.5918, 163.619, -42.2761, 0.14", "10.5959, 164.064, -42.4499, 0.1", "10.5998, 164.584, -42.5565, 0.1", "10.6079, 165.064, -42.5861, 0.1", "10.6099, 165.603, -42.5304, 0.1", "10.6099, 165.603, -42.5304, 0.1", "10.6101, 166.083, -42.4811, 0.1", "10.621, 166.613, -42.4245, 0.1", "10.6304, 167.153, -42.3672, 0.1" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-26.8373, 61.4151, -39.3297, 0.7", "-27.5661, 61.9224, -39.5577, 0.7", "-28.1278, 62.3572, -39.7434, 0.56", "-28.4744, 62.6421, -39.8471, 0.42", "-29.024, 63.1076, -39.9961, 0.28", "-30.0368, 64.0084, -40.2424, 0.14", "-30.3724, 64.3238, -40.3154, 0.1", "-30.8855, 64.8446, -40.4238, 0.1", "-31.5064, 65.5361, -40.536, 0.14", "-31.7994, 65.8869, -40.5724, 0.1", "-32.2602, 66.4644, -40.6421, 0.1", "-32.7029, 67.0479, -40.7031, 0.1", "-32.9781, 67.4316, -40.7648, 0.1", "-33.3871, 68.032, -40.8867, 0.1", "-33.7759, 68.6435, -41.0245, 0.1", "-34.4401, 69.7039, -41.2695, 0.1", "-34.7889, 70.242, -41.438, 0.14", "-35.1765, 70.8361, -41.6641, 0.28", "-35.5547, 71.4187, -41.9083, 0.14", "-35.9238, 72.0042, -42.16, 0.1", "-36.1558, 72.3872, -42.3078, 0.14", "-36.7531, 73.4762, -42.6176, 0.28", "-36.9696, 73.8734, -42.7725, 0.42", "-37.2692, 74.4926, -43.0446, 0.7", "-37.5076, 75.0672, -43.2945, 0.56", "-37.7507, 75.697, -43.6011, 0.42", "-37.9544, 76.2746, -43.8755, 0.28", "-38.3569, 77.5131, -44.4066, 0.14", "-38.552, 78.0853, -44.6903, 0.1", "-38.7393, 78.6493, -45.0009, 0.1", "-39.1188, 79.8229, -45.6683, 0.1", "-39.2978, 80.389, -45.9806, 0.1", "-39.4779, 80.9623, -46.2726, 0.1", "-39.8654, 82.21, -46.7955, 0.1", "-40.0618, 82.8088, -47.0308, 0.1", "-40.2709, 83.4139, -47.2279, 0.1", "-40.5074, 84.1144, -47.3746, 0.1", "-40.6149, 84.4266, -47.4244, 0.1", "-40.848, 85.1416, -47.4876, 0.1", "-40.848, 85.1416, -47.4876, 0.1", "-41.0745, 85.8438, -47.6004, 0.1", "-41.2743, 86.4556, -47.7879, 0.1", "-41.48, 87.0349, -48.0293, 0.1", "-41.7059, 87.6017, -48.2987, 0.1", "-42.2184, 88.7622, -48.8991, 0.14", "-42.4834, 89.2828, -49.2135, 0.28", "-42.9962, 90.1679, -49.8029, 0.42", "-43.4381, 90.8135, -50.3096, 0.1", "-43.8121, 91.3052, -50.7154, 0.1", "-44.0585, 91.5892, -50.9734, 0.1", "-44.8212, 92.407, -51.7844, 0.1", "-45.2294, 92.8184, -52.2236, 0.1", "-45.9399, 93.5409, -52.9676, 0.1", "-46.3444, 93.9576, -53.4058, 0.1", "-47.1195, 94.7694, -54.2123, 0.14", "-47.909, 95.6164, -54.96, 0.1", "-48.1783, 95.9135, -55.1982, 0.1", "-48.6042, 96.3916, -55.5488, 0.1", "-49.0311, 96.8809, -55.8836, 0.1", "-49.454, 97.365, -56.2632, 0.1", "-49.7089, 97.6635, -56.4964, 0.14", "-50.3898, 98.4017, -57.1806, 0.28", "-50.9023, 98.9233, -57.7384, 0.28", "-51.623, 99.5874, -58.5218, 0.14", "-52.4346, 100.297, -59.3703, 0.1", "-52.7272, 100.539, -59.6465, 0.1", "-53.7055, 101.326, -60.4355, 0.1", "-54.026, 101.581, -60.6535, 0.1", "-54.5314, 101.997, -60.9642, 0.1", "-55.058, 102.447, -61.2107, 0.14", "-55.5787, 102.913, -61.4027, 0.1", "-55.8991, 103.222, -61.541, 0.1", "-56.7876, 104.159, -62.0438, 0.1", "-57.2303, 104.652, -62.3695, 0.14", "-57.4861, 104.958, -62.5928, 0.1", "-57.8831, 105.457, -62.9673, 0.1", "-58.5791, 106.433, -63.6623, 0.14", "-59.259, 107.457, -64.3085, 0.28", "-59.259, 107.457, -64.3085, 0.42", "-59.5909, 108.049, -64.6164, 0.28", "-59.8956, 108.656, -64.9082, 0.14", "-60.1474, 109.228, -65.1399, 0.1", "-60.4007, 109.909, -65.3351, 0.1", "-60.5992, 110.534, -65.4789, 0.1", "-60.9956, 111.86, -65.78, 0.1", "-61.1657, 112.495, -65.9221, 0.1", "-61.3228, 113.125, -66.0966, 0.1", "-61.4739, 113.754, -66.2904, 0.1", "-61.6209, 114.38, -66.4866, 0.1", "-61.801, 115.085, -66.69, 0.1", "-61.9672, 115.706, -66.8838, 0.1", "-62.3532, 116.93, -67.347, 0.1", "-62.4546, 117.226, -67.4702, 0.1", "-62.6963, 117.859, -67.7899, 0.1", "-62.9534, 118.477, -68.1267, 0.1", "-63.4283, 119.585, -68.7451, 0.1", "-63.7115, 120.206, -69.071, 0.1", "-63.9714, 120.754, -69.316, 0.1", "-64.5681, 121.924, -69.7977, 0.1", "-64.9126, 122.555, -70.0297, 0.1", "-65.0714, 122.825, -70.1064, 0.1", "-65.4715, 123.447, -70.2095, 0.1", "-65.8858, 124.052, -70.2776, 0.1", "-66.4383, 124.807, -70.3737, 0.1", "-66.715, 125.172, -70.4139, 0.1", "-67.1687, 125.752, -70.5093, 0.1", "-67.4522, 126.105, -70.6126, 0.1", "-67.904, 126.641, -70.8263, 0.1", "-68.7477, 127.636, -71.3024, 0.1", "-69.0166, 127.959, -71.4827, 0.1", "-69.4518, 128.474, -71.7865, 0.14", "-70.2999, 129.408, -72.3504, 0.1", "-70.7755, 129.901, -72.63, 0.1", "-71.0048, 130.111, -72.7289, 0.14", "-71.3608, 130.393, -72.8027, 0.28", "-72.1036, 130.912, -72.9753, 0.7", "-72.7207, 131.283, -73.1042, 0.56", "-73.1196, 131.498, -73.1657, 0.42", "-73.7632, 131.825, -73.2738, 0.28", "-74.4034, 132.138, -73.3794, 0.14", "-75.5155, 132.675, -73.5518, 0.14", "-76.1721, 132.977, -73.6491, 0.1", "-76.8154, 133.29, -73.7328, 0.1", "-77.4652, 133.616, -73.7944, 0.1", "-77.8632, 133.829, -73.8146, 0.1", "-78.4942, 134.202, -73.8086, 0.14", "-79.0951, 134.6, -73.8062, 0.28", "-79.6833, 135.037, -73.8503, 0.14", "-80.2334, 135.491, -73.9835, 0.1", "-80.5735, 135.78, -74.114, 0.14", "-81.1034, 136.209, -74.3663, 0.14", "-82.1201, 136.956, -74.9153, 0.1", "-82.4742, 137.171, -75.1096, 0.1", "-83.4912, 137.621, -75.5601, 0.14", "-84.0969, 137.772, -75.7309, 0.1", "-84.7436, 137.78, -75.7699, 0.1", "-85.3703, 137.66, -75.6882, 0.1", "-85.954, 137.461, -75.4704, 0.1", "-87.1147, 136.978, -74.8974, 0.1", "-87.687, 136.72, -74.5117, 0.1", "-88.2266, 136.457, -74.0994, 0.1", "-88.5653, 136.289, -73.8276, 0.1", "-89.5754, 135.805, -73.0265, 0.1", "-90.0729, 135.578, -72.6605, 0.1", "-91.1477, 135.147, -71.9892, 0.1", "-91.7713, 134.917, -71.6756, 0.1", "-92.3586, 134.719, -71.4662, 0.1", "-92.9622, 134.535, -71.3464, 0.1", "-93.6636, 134.319, -71.3206, 0.1", "-94.2858, 134.12, -71.3471, 0.1", "-95.5913, 133.708, -71.5041, 0.14", "-96.2107, 133.512, -71.577, 0.1", "-96.8301, 133.313, -71.6396, 0.1", "-97.5207, 133.083, -71.7388, 0.1", "-97.8274, 132.976, -71.7886, 0.1", "-98.4375, 132.755, -71.8755, 0.1", "-99.1195, 132.508, -71.932, 0.1", "-99.7283, 132.269, -72.0098, 0.1", "-100.983, 131.749, -72.2443, 0.14", "-101.401, 131.576, -72.3538, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-12.8015, 41.9443, -40.4284, 1.12", "-13.8556, 42.8469, -41.6629, 1.12", "-13.9944, 42.9608, -41.8361, 1.12", "-14.3732, 43.259, -42.3402, 0.14", "-14.8776, 43.6894, -43.0281, 0.1", "-15.3626, 44.1324, -43.7167, 0.1", "-15.9216, 44.6702, -44.5442, 0.1", "-16.3703, 45.0938, -45.2684, 0.1", "-16.82, 45.5267, -45.9928, 0.1", "-17.0475, 45.7571, -46.359, 0.1", "-17.5542, 46.3024, -47.1046, 0.1", "-18.0632, 46.9074, -47.7941, 0.1", "-18.0632, 46.9074, -47.7941, 0.14", "-18.4057, 47.369, -48.2001, 0.1", "-18.5753, 47.6049, -48.4056, 0.1", "-19.1149, 48.3625, -49.0658, 0.1", "-19.3396, 48.7186, -49.344, 0.1", "-19.7355, 49.4087, -49.8862, 0.1", "-19.9235, 49.777, -50.1779, 0.14", "-20.2325, 50.4461, -50.7475, 0.28", "-20.4031, 50.8634, -51.0921, 0.7", "-20.5364, 51.2333, -51.3952, 0.56", "-20.8114, 52.0053, -52.0796, 0.42", "-20.9314, 52.3636, -52.4012, 0.28", "-21.2066, 53.1199, -53.0915, 0.14", "-21.3532, 53.4861, -53.4097, 0.1", "-21.6846, 54.219, -54.0533, 0.1", "-22.0658, 54.9542, -54.6665, 0.14", "-22.0658, 54.9542, -54.6665, 0.28", "-22.3863, 55.4572, -55.0441, 0.1", "-22.6695, 55.8465, -55.3394, 0.1", "-22.8577, 56.0785, -55.5174, 0.1", "-23.0629, 56.3203, -55.6779, 0.14", "-23.2077, 56.497, -55.7834, 0.28", "-23.7322, 57.1974, -56.1861, 0.84", "-24.2714, 57.9508, -56.6899, 0.7", "-24.5452, 58.3475, -56.9705, 0.56", "-24.722, 58.6087, -57.1465, 0.42", "-24.9953, 59.0116, -57.4192, 0.28", "-25.2781, 59.4062, -57.7051, 0.14", "-25.7507, 60.0538, -58.232, 0.28", "-25.7507, 60.0538, -58.232, 0.42", "-26.0101, 60.3922, -58.5973, 0.1", "-26.4635, 61.0268, -59.302, 0.1", "-26.8258, 61.6047, -59.9793, 0.1", "-27.1527, 62.2724, -60.7325, 0.1", "-27.1527, 62.2724, -60.7325, 0.14", "-27.2308, 62.6291, -61.0696, 0.1", "-27.2594, 63.0074, -61.4105, 0.1", "-27.1987, 63.8285, -62.1021, 0.14", "-27.1259, 64.2624, -62.456, 0.1", "-27.0407, 64.6547, -62.7721, 0.1", "-26.8622, 65.4828, -63.4379, 0.1", "-26.8112, 65.7484, -63.6671, 0.1", "-26.6824, 66.5628, -64.3589, 0.14", "-26.6824, 66.5628, -64.3589, 0.28", "-26.6541, 66.9519, -64.6903, 0.28", "-26.6258, 67.343, -65.0028, 0.14", "-26.5681, 68.1656, -65.6429, 0.1", "-26.5329, 68.5705, -65.956, 0.1", "-26.4166, 69.4381, -66.5877, 0.14", "-26.3385, 69.8525, -66.8827, 0.1", "-26.2208, 70.308, -67.2021, 0.1", "-25.9514, 71.1067, -67.7149, 0.14", "-25.7603, 71.5829, -67.9633, 0.1", "-25.5518, 72.0798, -68.1825, 0.1", "-25.3517, 72.5774, -68.3801, 0.1", "-25.2291, 72.8978, -68.5111, 0.14", "-25.0574, 73.3995, -68.7495, 0.28", "-24.932, 73.8201, -69.0002, 0.42", "-24.8242, 74.2186, -69.3068, 0.56", "-24.6629, 74.8812, -69.9582, 0.42", "-24.5908, 75.2329, -70.4006, 0.14", "-24.4943, 75.7617, -71.2007, 0.1", "-24.405, 76.2941, -72.1123, 0.1", "-24.3719, 76.4625, -72.4158, 0.1", "-24.2467, 76.9857, -73.3276, 0.14", "-24.1028, 77.4834, -74.0628, 0.28", "-24.0588, 77.6351, -74.2617, 0.42", "-23.9532, 77.9864, -74.6177, 1.26", "-23.829, 78.4035, -74.993, 1.12", "-23.7156, 78.8015, -75.375, 0.98", "-23.6039, 79.1928, -75.7782, 0.84", "-23.416, 79.8642, -76.5811, 0.7", "-23.3793, 80.0045, -76.7858, 0.84", "-23.2549, 80.5206, -77.7014, 1.12", "-23.1667, 80.9605, -78.5494, 0.98", "-23.0774, 81.4389, -79.4876, 0.84", "-22.9985, 81.8876, -80.3323, 0.7", "-22.9111, 82.3676, -81.1639, 0.56", "-22.8083, 82.9208, -82.063, 0.42", "-22.7556, 83.2108, -82.4648, 0.28", "-22.6838, 83.5917, -82.8846, 0.14", "-22.6021, 83.9799, -83.2099, 0.1", "-22.3827, 84.8866, -83.7539, 0.1", "-22.3827, 84.8866, -83.7539, 0.14", "-22.2241, 85.3558, -83.9126, 0.56", "-22.0426, 85.8714, -84.1138, 0.42", "-21.8702, 86.3771, -84.3169, 0.28", "-21.6984, 86.8977, -84.5143, 0.14", "-21.5508, 87.4092, -84.7219, 0.1", "-21.4676, 87.7318, -84.8746, 0.1", "-21.2716, 88.6063, -85.4227, 0.1", "-21.2043, 88.9953, -85.7461, 0.1", "-21.1572, 89.339, -86.1192, 0.1", "-21.0936, 89.9291, -86.8412, 0.14", "-21.0698, 90.2664, -87.2977, 0.28", "-21.0385, 90.8018, -88.1011, 0.14", "-20.9974, 91.3747, -88.9874, 0.1", "-20.9626, 91.8975, -89.7982, 0.1", "-20.9451, 92.1837, -90.2148, 0.14", "-20.9102, 92.8263, -91.0172, 0.1", "-20.8945, 93.4904, -91.7277, 0.1", "-20.8884, 93.8834, -92.0516, 0.1", "-20.8824, 94.3251, -92.3159, 0.1", "-20.8813, 94.7876, -92.5393, 0.1", "-20.881, 95.255, -92.7381, 0.1", "-20.8786, 95.747, -92.8917, 0.1", "-20.8786, 95.747, -92.8917, 0.14", "-20.884, 96.2435, -93.0304, 0.1", "-20.8955, 97.2593, -93.3169, 0.1", "-20.8984, 97.7444, -93.4897, 0.1", "-20.8971, 98.2251, -93.6803, 0.1", "-20.8818, 98.6932, -93.8718, 0.1", "-20.8533, 99.1748, -94.06, 0.1", "-20.8025, 99.6576, -94.2352, 0.1", "-20.6614, 100.574, -94.5868, 0.1", "-20.571, 101.037, -94.7942, 0.1", "-20.469, 101.525, -95.0692, 0.1", "-20.3698, 101.95, -95.3396, 0.1", "-20.2599, 102.395, -95.6713, 0.1", "-20.0392, 103.226, -96.3243, 0.1", "-19.9225, 103.651, -96.6911, 0.1", "-19.7268, 104.308, -97.3357, 0.1", "-19.6091, 104.685, -97.7496, 0.1", "-19.4047, 105.343, -98.565, 0.1", "-19.3009, 105.682, -99.0002, 0.1", "-19.1011, 106.278, -99.7418, 0.1", "-19.0207, 106.498, -100.004, 0.14", "-18.9481, 106.671, -100.178, 0.28", "-18.617, 107.41, -100.838, 0.7", "-18.3984, 107.854, -101.134, 0.56", "-18.2532, 108.127, -101.312, 0.42", "-18.0276, 108.57, -101.609, 0.28", "-17.8431, 108.991, -101.953, 0.14", "-17.7505, 109.236, -102.191, 0.1", "-17.6248, 109.619, -102.598, 0.1", "-17.4499, 110.317, -103.384, 0.14", "-17.3122, 110.993, -104.158, 0.28", "-17.2042, 111.674, -104.933, 0.14", "-17.1194, 112.398, -105.709, 0.1", "-17.0879, 112.758, -106.07, 0.1", "-17.0612, 113.14, -106.405, 0.1", "-17.0396, 113.439, -106.611, 0.1", "-17.0073, 113.888, -106.847, 0.1", "-17.0042, 114.354, -107.062, 0.14", "-17.0986, 115.339, -107.5, 0.28", "-17.201, 115.776, -107.746, 0.42", "-17.201, 115.776, -107.746, 0.56", "-17.4555, 116.263, -108.19, 0.28", "-17.8592, 116.902, -108.927, 0.14", "-17.9938, 117.078, -109.193, 0.1", "-18.3934, 117.546, -110.042, 0.1", "-18.7742, 117.968, -110.923, 0.1", "-19.1022, 118.328, -111.701, 0.1", "-19.4235, 118.678, -112.489, 0.1", "-20.0999, 119.408, -114.061, 0.14", "-20.4509, 119.784, -114.822, 0.28", "-20.4509, 119.784, -114.822, 0.42", "-20.8071, 120.126, -115.333, 0.7", "-21.0188, 120.299, -115.544, 0.56", "-21.5144, 120.625, -115.925, 0.42", "-21.7809, 120.754, -116.108, 0.56", "-21.9715, 120.827, -116.249, 0.7", "-22.7402, 121.07, -116.909, 1.68", "-23.4545, 121.242, -117.597, 1.54", "-24.0806, 121.353, -118.256, 1.4", "-24.7381, 121.422, -119.02, 1.26", "-24.7381, 121.422, -119.02, 1.12", "-24.8877, 121.429, -119.218, 0.98" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-12.8015, 41.9443, -40.4284, 1.4", "-12.7003, 42.3008, -41.384, 1.4", "-12.6172, 42.614, -42.2863, 1.26", "-12.5262, 42.9308, -43.2883, 1.12", "-12.4428, 43.1983, -44.2083, 0.98", "-12.3564, 43.4225, -45.1337, 0.84", "-12.2731, 43.5945, -46.0721, 0.7", "-12.1023, 43.7417, -47.9181, 0.56", "-12.0147, 43.7461, -48.8359, 0.56", "-11.9871, 43.7305, -49.0838, 0.1", "-11.8422, 43.6284, -50.114, 0.1", "-11.6714, 43.5179, -51.1119, 0.1", "-11.4413, 43.4018, -52.125, 0.14", "-11.3396, 43.376, -52.4624, 0.84", "-11.007, 43.3945, -53.4579, 0.7", "-10.6478, 43.5221, -54.4377, 0.56", "-10.289, 43.7583, -55.2943, 0.42", "-10.0847, 43.9338, -55.7215, 0.28", "-9.66742, 44.3753, -56.5895, 0.14", "-9.29904, 44.7921, -57.3824, 0.28", "-9.09225, 45.0675, -57.8232, 0.42", "-8.9105, 45.3887, -58.26, 0.28", "-8.82568, 45.6031, -58.5277, 0.14", "-8.68221, 46.215, -59.2315, 0.1", "-8.65794, 46.3834, -59.4224, 0.14", "-8.61725, 46.7215, -59.8006, 0.1", "-8.52229, 47.3684, -60.6091, 0.1", "-8.40717, 47.9893, -61.4718, 0.1", "-8.33465, 48.2559, -61.8878, 0.14", "-8.15635, 48.7328, -62.7127, 0.28", "-8.0359, 48.9831, -63.2075, 1.4", "-7.78781, 49.3833, -64.1527, 1.26", "-7.53449, 49.692, -65.0288, 1.12", "-7.2362, 49.9729, -65.9672, 0.98", "-6.93235, 50.1923, -66.8512, 1.12", "-6.56189, 50.3981, -67.8121, 0.98", "-6.20274, 50.5345, -68.6918, 0.84", "-5.77981, 50.6534, -69.6079, 0.7", "-5.54748, 50.7041, -70.0462, 0.56", "-5.37511, 50.7414, -70.3537, 0.42", "-5.12709, 50.7969, -70.7858, 0.28", "-4.68668, 50.9275, -71.6239, 0.42", "-4.53943, 50.9887, -71.9372, 0.56", "-4.12326, 51.221, -72.8778, 0.42", "-3.76075, 51.4681, -73.7302, 0.28", "-3.36985, 51.7754, -74.6591, 0.14", "-3.0095, 52.0871, -75.4969, 0.1", "-2.57673, 52.4724, -76.3811, 0.1", "-2.33171, 52.6905, -76.8419, 0.1", "-2.16118, 52.8389, -77.1158, 0.1", "-1.60384, 53.3384, -77.8764, 0.1", "-1.41938, 53.5228, -78.114, 0.1", "-1.14849, 53.8474, -78.4986, 0.1", "-0.702874, 54.516, -79.3284, 0.14", "-0.625306, 54.6664, -79.5196, 0.14", "-0.497278, 54.96, -79.9133, 0.1", "-0.264977, 55.5953, -80.7374, 0.1", "-0.0683296, 56.1948, -81.5607, 0.1", "0.0894062, 56.7418, -82.3494, 0.1", "0.165734, 57.0101, -82.7608, 0.1", "0.339833, 57.5714, -83.6501, 0.14", "0.441341, 57.8544, -84.1209, 0.28", "0.631526, 58.3445, -84.9381, 0.14", "0.849124, 58.8988, -85.8223, 0.1", "1.03447, 59.4142, -86.6211, 0.1", "1.09736, 59.6108, -86.9156, 0.1", "1.26998, 60.2229, -87.7697, 0.1", "1.44765, 60.8574, -88.6126, 0.1", "1.5455, 61.175, -88.9975, 0.1", "1.77716, 61.8404, -89.8, 0.14", "1.90176, 62.1411, -90.1899, 0.14", "1.97587, 62.2792, -90.3906, 0.28", "2.1079, 62.4558, -90.6647, 0.56", "2.60341, 62.931, -91.479, 0.42", "3.11734, 63.3056, -92.205, 0.28", "3.74572, 63.6722, -92.9777, 0.14", "4.04132, 63.8171, -93.3568, 0.28", "4.34447, 63.9477, -93.8124, 0.14", "4.56487, 63.9931, -94.2573, 0.28", "4.62402, 63.9606, -94.4979, 0.42", "4.62402, 63.9606, -94.4979, 0.56", "4.63931, 63.6251, -95.3961, 0.84", "4.66319, 63.2895, -96.2939, 0.7", "4.72372, 62.9165, -97.2384, 0.56", "4.83885, 62.5961, -98.0983, 0.42", "4.89295, 62.5211, -98.3284, 0.56", "5.07092, 62.378, -98.8292, 0.42", "5.52053, 62.1823, -99.7205, 0.28", "5.79094, 62.1097, -100.204, 0.14", "6.30456, 62.0438, -101.08, 0.1", "6.80229, 62.0206, -101.964, 0.1", "6.91396, 62.0213, -102.188, 0.1", "7.31768, 62.0499, -103.122, 0.1", "7.65222, 62.1119, -103.944, 0.14", "7.7734, 62.1533, -104.274, 0.28", "8.09638, 62.3308, -105.226, 0.14", "8.38809, 62.5574, -106.179, 0.1", "8.62518, 62.793, -107.044, 0.1", "8.75675, 62.947, -107.568, 0.42", "8.96918, 63.2393, -108.458, 0.42", "9.17257, 63.5984, -109.432, 0.28", "9.32987, 63.993, -110.299, 0.14", "9.46291, 64.4398, -111.145, 0.28", "9.56562, 64.9047, -111.947, 0.42", "9.601, 65.1616, -112.38, 0.1", "9.61646, 65.4305, -112.807, 0.1", "9.60271, 65.6999, -113.226, 0.1", "9.52892, 66.2258, -114.036, 0.14", "9.40577, 66.7979, -114.886, 0.7", "9.25325, 67.3556, -115.741, 0.56", "9.09179, 67.8284, -116.527, 0.42", "8.88845, 68.3437, -117.43, 0.28", "8.67352, 68.835, -118.306, 0.14", "8.55172, 69.1038, -118.78, 0.1", "8.36583, 69.5414, -119.58, 0.1", "8.20775, 70.0192, -120.507, 0.1", "8.12015, 70.4485, -121.436, 0.1", "8.12015, 70.4485, -121.436, 0.14", "8.19838, 70.7531, -122.342, 0.56", "8.34067, 71.0332, -123.25, 0.42", "8.56993, 71.3279, -124.237, 0.28", "8.83856, 71.5803, -125.089, 0.14", "9.18561, 71.8568, -126.043, 0.1", "9.5638, 72.1359, -126.988, 0.1", "9.70309, 72.2355, -127.291, 0.1", "10.1831, 72.5733, -128.172, 0.1", "10.4605, 72.7734, -128.615, 0.1", "10.9674, 73.1532, -129.303, 0.14", "11.1158, 73.2651, -129.473, 0.28", "11.4615, 73.5259, -129.842, 0.7", "11.8137, 73.7848, -130.206, 0.56", "12.503, 74.2775, -130.857, 0.42", "12.7399, 74.4296, -131.067, 0.28", "13.1411, 74.6358, -131.41, 0.14", "13.9029, 74.9119, -132.086, 0.1", "14.0816, 74.937, -132.261, 0.1", "14.2554, 74.9433, -132.438, 0.1", "14.6539, 74.9348, -132.818, 0.1", "15.3753, 74.9227, -133.582, 0.1", "15.6146, 74.93, -133.843, 0.1", "16.3038, 75.0274, -134.626, 0.1", "16.6533, 75.1252, -135.046, 0.56", "17.0032, 75.274, -135.462, 0.42", "17.566, 75.6136, -136.167, 0.28", "17.8942, 75.8509, -136.564, 0.14", "18.5009, 76.335, -137.292, 0.1", "18.7033, 76.5035, -137.537, 0.1", "19.0114, 76.7352, -137.953, 0.1", "19.4939, 77.0924, -138.711, 0.1", "19.6118, 77.1721, -138.917, 0.14", "19.7585, 77.2696, -139.226, 0.28", "20.1424, 77.5126, -140.174, 0.14", "20.4875, 77.7417, -141.11, 0.1", "20.7951, 77.9721, -141.988, 0.14", "21.1306, 78.2475, -142.916, 0.1", "21.4438, 78.5461, -143.774, 0.14", "21.7664, 78.8813, -144.58, 0.28", "21.9769, 79.1409, -145.039, 0.1", "22.2071, 79.4549, -145.446, 0.1", "22.3689, 79.6691, -145.689, 0.1", "22.6289, 79.9909, -146.073, 0.1", "22.8991, 80.2359, -146.507, 0.1", "23.3537, 80.4742, -147.424, 0.1", "23.4479, 80.4909, -147.655, 0.14", "23.7858, 80.476, -148.549, 0.56", "24.1075, 80.4269, -149.444, 0.42", "24.4413, 80.3583, -150.436, 0.28", "24.7358, 80.3099, -151.344, 0.14", "25.0494, 80.2789, -152.307, 0.28", "25.1277, 80.281, -152.544, 0.42", "25.4885, 80.3432, -153.525, 0.28", "25.8591, 80.4456, -154.404, 0.14", "26.3025, 80.5941, -155.343, 0.1", "26.746, 80.7414, -156.142, 0.1", "26.8819, 80.7795, -156.35, 0.42", "27.1708, 80.8402, -156.742, 0.28", "27.5055, 80.8836, -157.113, 0.14", "28.2444, 80.973, -157.812, 0.1", "28.603, 81.0399, -158.157, 0.1", "28.9363, 81.1542, -158.513, 0.1", "29.4223, 81.5117, -159.346, 0.14", "29.4767, 81.6337, -159.552, 0.28", "29.4671, 81.9687, -160.004, 0.1", "29.3032, 82.6402, -160.813, 0.1", "29.1829, 83.0144, -161.233, 0.1", "28.95, 83.6313, -161.942, 0.1", "28.8283, 83.9637, -162.308, 0.1", "28.6197, 84.6399, -163.059, 0.1", "28.4589, 85.3072, -163.836, 0.1", "28.402, 85.6254, -164.226, 0.1", "28.3228, 86.1622, -164.947, 0.14", "28.2758, 86.4644, -165.424, 0.14", "28.2427, 86.6322, -165.734, 0.1", "28.1336, 87.0905, -166.681, 0.1", "28.0281, 87.4391, -167.534, 0.1", "27.9051, 87.8024, -168.484, 0.1", "27.6721, 88.4219, -170.161, 0.1", "27.527, 88.7423, -171.12, 0.1", "27.3911, 89.0141, -171.994, 0.1", "27.1562, 89.5092, -173.707, 0.1" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "13.4176, -87.9988, 3.93309, 0.84", "13.8794, -89.1488, 4.45222, 0.84", "14.0881, -89.7581, 4.70672, 0.98", "14.2809, -90.3913, 4.94123, 1.12", "14.4483, -91.0422, 5.16048, 0.98", "14.7648, -92.4329, 5.57893, 0.84", "14.8943, -93.101, 5.7634, 0.7", "14.9995, -93.8593, 5.91894, 0.7", "15.042, -94.558, 6.02114, 0.84", "15.0371, -95.3385, 6.07996, 0.84", "14.9944, -96.0446, 6.0764, 0.84", "14.9058, -96.8308, 6.0133, 0.84", "14.8098, -97.5279, 5.95322, 0.7", "14.5461, -98.9689, 5.74278, 0.56", "14.4129, -99.6556, 5.65354, 0.7", "14.2787, -100.349, 5.58211, 0.84", "14.129, -101.116, 5.54364, 0.7", "14.0427, -101.611, 5.54379, 0.84", "13.8418, -103.042, 5.62733, 0.98", "13.7084, -104.378, 5.83538, 0.98", "13.613, -105.139, 5.98661, 0.84", "13.4712, -105.914, 6.10797, 0.98", "13.4189, -106.26, 6.16785, 0.84", "13.3839, -106.608, 6.23107, 0.84", "13.3497, -107.38, 6.37783, 0.98", "13.3181, -108.174, 6.43651, 1.12", "13.3514, -109.484, 6.49908, 1.26", "13.4183, -110.792, 6.56254, 1.12", "13.4525, -111.485, 6.6079, 0.98", "13.4947, -112.193, 6.65726, 1.12", "13.5516, -112.897, 6.70459, 0.98", "13.6093, -113.603, 6.76141, 1.12", "13.6485, -114.108, 6.80883, 1.12", "13.6485, -114.888, 6.86352, 0.98", "13.6205, -115.592, 6.93549, 1.12", "13.5242, -116.366, 6.99863, 0.98", "13.3876, -117.058, 7.04283, 0.84", "13.2153, -117.746, 7.07321, 0.98", "12.9996, -118.5, 7.08261, 0.7", "12.7458, -119.251, 7.06547, 0.84", "12.2157, -120.491, 7.01944, 0.98", "11.8647, -121.184, 6.98525, 0.84", "11.8647, -121.184, 6.98525, 0.98", "11.4367, -121.829, 6.98768, 0.84", "11.2497, -122.126, 6.97917, 0.84", "10.8493, -122.787, 7.06392, 0.98", "10.5504, -123.458, 7.35283, 0.84", "10.3635, -123.87, 7.53289, 0.7", "10.2488, -124.17, 7.64671, 0.7", "10.0459, -124.904, 7.86237, 0.84", "9.95959, -125.383, 7.96576, 0.7", "9.9923, -126.144, 8.15937, 0.7", "10.09, -126.889, 8.37664, 0.84", "10.2205, -127.638, 8.60093, 0.7", "10.3488, -128.304, 8.79212, 0.7", "10.4806, -128.973, 8.97205, 0.56", "10.7902, -130.341, 9.28808, 0.7", "10.7902, -130.341, 9.28808, 0.84", "10.9206, -130.658, 9.36899, 0.84", "11.1632, -131.304, 9.5033, 0.98", "11.3412, -131.98, 9.58959, 0.84", "11.3038, -132.682, 9.49344, 0.84", "10.632, -133.707, 8.7949, 0.98", "10.2377, -134.125, 8.41708, 0.98", "9.42776, -134.85, 7.69129, 0.84", "8.61745, -135.518, 6.98745, 0.7", "7.02913, -136.799, 5.62035, 0.56", "6.21155, -137.455, 4.91619, 0.56", "5.90763, -137.703, 4.65071, 0.84", "5.44309, -138.157, 4.23949, 0.84", "5.13359, -138.699, 3.93953, 0.84", "5.00847, -139.366, 3.78974, 0.98", "5.0155, -139.717, 3.77489, 1.12", "5.04541, -140.071, 3.77548, 0.98", "5.12065, -140.777, 3.76406, 0.98", "5.19189, -141.48, 3.75567, 0.98", "5.25865, -142.262, 3.75638, 0.84", "5.30149, -142.971, 3.77141, 0.84", "5.33511, -143.677, 3.79368, 0.84", "5.34357, -144.032, 3.81171, 0.98", "5.3449, -144.534, 3.84578, 0.84", "5.32773, -145.226, 3.90819, 0.84", "5.24124, -146.016, 3.94459, 0.98", "5.06737, -146.697, 3.89172, 1.12", "4.92316, -147.163, 3.84946, 0.98", "4.92316, -147.163, 3.84946, 1.12", "4.77465, -147.638, 3.79918, 0.84", "4.35241, -149.056, 3.66085, 0.84", "4.01041, -150.447, 3.53302, 0.84", "3.81731, -151.791, 3.54153, 0.56", "3.79418, -152.496, 3.59848, 0.56", "3.83917, -153.27, 3.70723, 0.56", "3.94282, -153.956, 3.83872, 0.56", "4.11478, -154.607, 4.04162, 0.7", "4.53139, -155.946, 4.51878, 0.84", "4.71886, -156.591, 4.72726, 0.98", "4.90754, -157.223, 4.94372, 1.12", "5.1026, -157.861, 5.16323, 1.12", "5.4522, -159.249, 5.55654, 1.12", "5.56057, -159.942, 5.64283, 0.98", "5.59012, -160.719, 5.57005, 0.84", "5.58013, -161.061, 5.49344, 0.7", "5.54261, -161.382, 5.35627, 0.56", "5.38057, -162.643, 4.70651, 0.7", "5.22145, -163.901, 3.97761, 0.84", "5.19129, -164.518, 3.65414, 0.98", "5.2252, -165.162, 3.37566, 0.84", "5.39941, -166.58, 3.00074, 0.84", "5.56993, -167.863, 2.82047, 0.98", "5.6501, -168.551, 2.78431, 0.98", "5.81388, -169.988, 2.85635, 0.98", "5.86395, -170.692, 2.90249, 0.98", "5.89757, -171.683, 2.97476, 0.98", "5.92323, -173.039, 3.06145, 0.84", "5.89471, -174.345, 2.97428, 0.98", "5.92306, -175.638, 2.77857, 0.84", "5.97575, -176.321, 2.61836, 0.84", "6.12545, -176.977, 2.45257, 0.84", "6.29512, -177.437, 2.33719, 1.12", "6.61762, -178.126, 2.18557, 0.98", "6.92095, -178.808, 1.97897, 0.84", "7.10291, -179.415, 1.68374, 0.98", "7.21737, -179.833, 1.46865, 1.12", "7.39387, -180.449, 1.18753, 0.98", "7.59192, -181.152, 0.925146, 0.84", "7.99513, -182.505, 0.511199, 0.84", "8.41757, -183.839, 0.195562, 0.98", "8.82863, -185.054, -0.013222, 0.84", "9.29413, -186.405, -0.150782, 0.84", "9.53219, -187.056, -0.176207, 0.84", "9.80023, -187.789, -0.143542, 0.98", "10.0354, -188.446, -0.0597234, 1.12", "10.2299, -189.121, 0.0315583, 0.98", "10.304, -189.823, 0.0291988, 0.98", "10.294, -190.177, -1.37568E-4, 0.98", "10.2315, -190.673, -0.0420175, 0.98", "10.0709, -191.437, -0.105925, 1.12", "9.88154, -192.202, -0.181523, 1.26", "9.57146, -193.462, -0.322645, 1.12", "9.57146, -193.462, -0.322645, 0.98", "9.45564, -193.932, -0.395443, 0.56", "9.26592, -194.589, -0.570384, 0.7", "9.04243, -195.224, -0.762885, 0.84", "8.74881, -195.824, -0.972103, 0.84", "8.3381, -196.43, -1.20909, 0.98", "7.45316, -197.479, -1.69462, 0.84", "6.54222, -198.427, -2.19545, 0.98", "6.06272, -198.847, -2.44796, 1.12", "5.01989, -199.612, -2.97709, 1.26", "3.88855, -200.301, -3.53198, 1.12", "3.88855, -200.301, -3.53198, 0.98" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "13.4176, -87.9988, 3.93309, 0.98", "13.3913, -88.8998, 3.42143, 0.98", "13.3695, -89.3635, 3.10858, 1.12", "13.3668, -89.8197, 2.78972, 1.26", "13.3915, -90.3275, 2.43715, 1.12", "13.484, -91.2595, 1.7881, 0.98", "13.6275, -92.2164, 1.13088, 1.12", "13.68, -92.5294, 0.896419, 0.98", "13.7973, -93.0084, 0.526706, 0.84", "13.9606, -93.4831, 0.169615, 0.7", "14.1008, -93.7882, -0.0368361, 0.56", "14.3873, -94.2589, -0.312368, 0.42", "14.7106, -94.739, -0.561675, 0.28", "14.9068, -95.0344, -0.712609, 0.42", "15.2231, -95.5132, -0.955851, 0.28", "15.5421, -95.9789, -1.20239, 0.14", "15.7476, -96.2744, -1.36167, 0.1", "16.0753, -96.7281, -1.61688, 0.1", "16.4042, -97.1801, -1.87334, 0.1", "16.7371, -97.6364, -2.13306, 0.14", "17.0696, -98.0813, -2.39328, 0.1", "17.4097, -98.5271, -2.66014, 0.14", "17.6205, -98.802, -2.82572, 0.28", "17.7768, -98.9949, -2.94928, 0.42" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.301, -62.5308, -38.8792, 0.1", "-10.4207, -63.1116, -38.8571, 0.1", "-10.5723, -63.6115, -38.7826, 0.1", "-10.7543, -64.1535, -38.6689, 0.1", "-10.9508, -64.6169, -38.5177, 0.1", "-11.1788, -65.1255, -38.3255, 0.1", "-11.385, -65.5756, -38.1521, 0.1", "-11.7927, -66.4167, -37.788, 0.1", "-12.0143, -66.8456, -37.5863, 0.1", "-12.5019, -67.7013, -37.0968, 0.1", "-12.7319, -68.0873, -36.8519, 0.1", "-12.9817, -68.5289, -36.5611, 0.1", "-13.0826, -68.7329, -36.4365, 0.1", "-13.0826, -68.7329, -36.4365, 0.1", "-13.3073, -69.5885, -36.0354, 0.1", "-13.3746, -70.0742, -35.8416, 0.1", "-13.4174, -70.5541, -35.6578, 0.1", "-13.4148, -71.0598, -35.5166, 0.1", "-13.3821, -71.5783, -35.4225, 0.1", "-13.3207, -72.1556, -35.3633, 0.1", "-13.2443, -72.6769, -35.3488, 0.1", "-13.174, -73.197, -35.3484, 0.1", "-13.0478, -74.2645, -35.3648, 0.1", "-13.0058, -74.7882, -35.3813, 0.1", "-12.9859, -75.3046, -35.3998, 0.1", "-12.9892, -75.8337, -35.415, 0.1", "-12.9995, -76.426, -35.4529, 0.1", "-13.0166, -76.9538, -35.4916, 0.1", "-13.0472, -77.5368, -35.5249, 0.14", "-13.0738, -78.0636, -35.5719, 0.28", "-13.0968, -78.5871, -35.6267, 0.42", "-13.1331, -79.6862, -35.742, 0.28", "-13.1245, -80.2065, -35.8182, 0.14", "-13.1073, -80.7251, -35.9152, 0.1", "-13.0785, -81.3042, -36.0323, 0.1", "-13.0554, -81.8121, -36.1342, 0.1", "-13.0364, -82.33, -36.221, 0.1", "-13.0159, -83.3003, -36.3174, 0.1", "-13.0056, -83.6726, -36.3502, 0.1", "-12.9886, -84.1976, -36.3813, 0.1", "-12.9606, -84.7138, -36.3829, 0.1", "-12.9336, -85.241, -36.3546, 0.1", "-12.9117, -85.763, -36.2932, 0.1", "-12.897, -86.2824, -36.1977, 0.1", "-12.8728, -86.7975, -36.097, 0.1", "-12.8449, -87.3698, -35.9845, 0.1", "-12.8204, -87.8874, -35.8832, 0.14", "-12.8248, -88.3983, -35.7596, 0.28", "-12.8631, -88.8989, -35.6253, 0.14", "-12.9306, -89.4007, -35.4821, 0.1", "-13.023, -89.9, -35.3345, 0.1", "-13.1386, -90.3915, -35.186, 0.1", "-13.4095, -91.4126, -34.8634, 0.1", "-13.5544, -91.9579, -34.6822, 0.14", "-13.6659, -92.4455, -34.5122, 0.28", "-13.7064, -92.6894, -34.4271, 0.42", "-13.7064, -92.6894, -34.4271, 0.56", "-13.7017, -92.9429, -34.3543, 0.56", "-13.6396, -93.5069, -34.222, 0.56", "-13.5437, -94.0799, -34.1285, 0.7", "-13.4506, -94.5927, -34.0767, 0.56", "-13.3581, -95.1101, -34.045, 0.42", "-13.2736, -95.618, -34.0279, 0.28", "-13.1929, -96.1361, -34.026, 0.14", "-13.0613, -97.2021, -34.0674, 0.1", "-13.0114, -97.7239, -34.1008, 0.1", "-12.97, -98.2493, -34.134, 0.1", "-12.942, -98.774, -34.1575, 0.14", "-12.942, -98.774, -34.1575, 0.28", "-12.9488, -99.1396, -34.1376, 0.56", "-12.9803, -99.6614, -34.0704, 0.56", "-13.0081, -100.186, -34.0005, 0.42", "-13.0308, -100.707, -33.9279, 0.28", "-13.0469, -101.222, -33.8524, 0.14", "-13.0487, -101.741, -33.7672, 0.28", "-13.0609, -102.257, -33.65, 0.28", "-13.111, -102.75, -33.4773, 0.14", "-13.203, -103.22, -33.2651, 0.1", "-13.3448, -103.649, -32.9989, 0.1", "-13.4649, -103.93, -32.7917, 0.1", "-13.8298, -104.658, -32.2195, 0.84", "-14.2327, -105.445, -31.6278, 0.7", "-14.4548, -105.9, -31.3313, 0.56", "-14.8511, -106.78, -30.8682, 0.42", "-14.7093, -107.084, -31.2399, 0.28", "-14.5313, -107.396, -31.6831, 0.14", "-14.2209, -107.875, -32.4285, 0.1", "-13.5791, -108.745, -33.9195, 0.1", "-12.8943, -109.566, -35.415, 0.1", "-12.5194, -109.989, -36.2044, 0.1", "-12.162, -110.385, -36.9313, 0.14", "-12.162, -110.385, -36.9313, 0.28", "-12.0649, -110.535, -37.1138, 0.84", "-11.922, -111.041, -37.3485, 0.7", "-11.9086, -111.567, -37.3727, 0.56", "-11.9432, -112.095, -37.3422, 0.42", "-12.0124, -112.607, -37.3001, 0.28", "-12.1172, -113.19, -37.2683, 0.14", "-12.2504, -113.761, -37.2562, 0.1", "-12.3905, -114.336, -37.293, 0.1", "-12.462, -114.588, -37.3129, 0.1", "-12.6398, -115.142, -37.3621, 0.1", "-12.8483, -115.697, -37.3712, 0.1", "-13.076, -116.245, -37.3375, 0.1", "-13.4608, -117.132, -37.2181, 0.14", "-13.855, -118.046, -37.0394, 0.56", "-14.0759, -118.582, -36.9113, 0.42", "-14.4413, -119.557, -36.6335, 0.28", "-14.6074, -120.089, -36.4605, 0.14", "-14.7279, -120.572, -36.2938, 0.28", "-14.8221, -121.064, -36.1254, 0.42", "-14.8626, -121.571, -35.9904, 0.28", "-14.8726, -122.076, -35.8691, 0.28", "-14.8521, -122.65, -35.761, 0.28", "-14.823, -123.166, -35.657, 0.42", "-14.7952, -123.681, -35.5543, 0.28", "-14.7716, -124.196, -35.4539, 0.42", "-14.7716, -124.196, -35.4539, 0.56", "-14.7741, -124.451, -35.3856, 0.56", "-14.7993, -124.951, -35.2202, 0.42", "-14.831, -125.441, -35.0337, 0.28", "-14.8651, -125.917, -34.8394, 0.14", "-14.9006, -126.402, -34.6386, 0.1", "-14.9553, -127.419, -34.2182, 0.1", "-14.9736, -127.905, -34.0188, 0.1", "-14.9844, -128.392, -33.8257, 0.1", "-14.9788, -128.885, -33.6391, 0.1", "-14.9413, -129.386, -33.493, 0.1", "-14.8926, -129.951, -33.3569, 0.1", "-14.8418, -130.469, -33.2683, 0.1", "-14.8082, -130.977, -33.1844, 0.14", "-14.7906, -131.567, -33.0907, 0.28", "-14.7994, -132.529, -32.9445, 0.42", "-14.8478, -133.529, -32.7988, 0.84", "-14.8925, -134.052, -32.7257, 0.7", "-14.9499, -134.628, -32.6411, 0.56", "-15.0148, -135.146, -32.5663, 0.42", "-15.0884, -135.665, -32.4905, 0.28", "-15.1569, -136.182, -32.4075, 0.14", "-15.1981, -136.706, -32.3459, 0.1", "-15.2165, -137.232, -32.3113, 0.14", "-15.2125, -137.814, -32.2951, 0.1", "-15.2053, -138.341, -32.2913, 0.1", "-15.1928, -138.869, -32.3013, 0.1", "-15.1713, -139.394, -32.3281, 0.1", "-15.0975, -140.458, -32.4258, 0.14", "-15.0661, -140.717, -32.4627, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.301, -62.5308, -38.8792, 0.1", "-10.1916, -62.669, -39.1503, 0.1", "-9.96988, -62.8881, -39.7107, 0.1", "-9.52287, -63.256, -40.8865, 0.1", "-9.30325, -63.4164, -41.4652, 0.1", "-8.51953, -63.9684, -43.5843, 0.1", "-8.11558, -64.2451, -44.7057, 0.1", "-7.72828, -64.4998, -45.7946, 0.1", "-6.94358, -65.0153, -47.9927, 0.1", "-6.53348, -65.3017, -49.1097, 0.14", "-6.13179, -65.6134, -50.1808, 0.1", "-5.29241, -66.4282, -52.2726, 0.14", "-5.06208, -66.705, -52.8097, 0.1", "-4.8221, -67.0568, -53.297, 0.1", "-4.56058, -67.5026, -53.6831, 0.1", "-4.41083, -67.7604, -53.8183, 0.1", "-4.06186, -68.3095, -53.947, 0.1", "-3.66436, -68.8342, -53.9421, 0.1", "-2.71192, -69.8323, -53.8956, 0.14", "-1.75869, -70.636, -53.9238, 0.1", "-1.17973, -71.0394, -54.1106, 0.1", "-0.828421, -71.2525, -54.2903, 0.1", "-0.156022, -71.6232, -54.7863, 0.1", "0.160702, -71.7901, -55.0623, 0.1", "0.959278, -72.2268, -55.8936, 0.1", "2.42532, -73.0596, -57.599, 0.1", "2.69264, -73.2167, -57.9332, 0.1", "3.48847, -73.659, -58.927, 0.1", "3.75692, -73.7989, -59.2671, 0.1", "4.59626, -74.1848, -60.246, 0.1", "4.90785, -74.3032, -60.5633, 0.1", "5.97149, -74.628, -61.4968, 0.1", "6.4554, -74.7488, -61.8958, 0.1", "7.44224, -74.9355, -62.5985, 0.1", "7.97792, -75.0216, -62.9402, 0.1", "9.16504, -75.1778, -63.5421, 0.14", "9.5818, -75.2316, -63.712, 0.28", "10.246, -75.3275, -63.9369, 0.14", "10.9207, -75.4537, -64.1455, 0.1", "11.3452, -75.539, -64.2434, 0.1", "12.0324, -75.6987, -64.3888, 0.1", "12.7243, -75.8646, -64.4877, 0.1", "13.8961, -76.1386, -64.7118, 0.1", "14.3272, -76.2455, -64.831, 0.14" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-38.5283, 112.564, -7.87272, 0.1", "-38.952, 113.144, -7.28868, 0.1", "-39.3747, 113.764, -6.74139, 0.1", "-39.5725, 114.084, -6.50073, 0.1", "-39.9832, 114.797, -6.06137, 0.1", "-40.2028, 115.212, -5.85212, 0.1", "-40.2028, 115.212, -5.85212, 0.1", "-40.41, 115.651, -5.69622, 0.1", "-40.5876, 116.062, -5.58547, 0.1", "-40.773, 116.525, -5.47082, 0.1", "-40.9156, 116.956, -5.37904, 0.1", "-41.1426, 117.858, -5.21315, 0.1", "-41.1853, 118.074, -5.16578, 0.14", "-41.2474, 118.519, -5.054, 0.1", "-41.296, 119.022, -4.9268, 0.1", "-41.3143, 119.521, -4.80323, 0.1", "-41.3004, 120.391, -4.60997, 0.14", "-41.2495, 121.325, -4.44448, 0.28", "-41.2233, 121.783, -4.35586, 0.14", "-41.2281, 122.225, -4.24492, 0.1", "-41.2736, 122.723, -4.10094, 0.1", "-41.3523, 123.215, -3.94587, 0.1", "-41.4583, 123.627, -3.78234, 0.14", "-41.5532, 123.91, -3.64941, 0.1", "-41.8921, 124.698, -3.21062, 0.1", "-42.0736, 125.055, -2.99198, 0.1", "-42.2715, 125.406, -2.77307, 0.1", "-42.6751, 126.122, -2.33153, 0.1", "-43.0571, 126.846, -1.88582, 0.1", "-43.2424, 127.201, -1.66626, 0.1", "-43.3297, 127.385, -1.56077, 0.1", "-43.5048, 127.757, -1.35909, 0.1", "-43.7099, 128.19, -1.17098, 0.1", "-43.8026, 128.392, -1.11743, 0.1", "-44.2301, 129.247, -0.993071, 0.28", "-44.5007, 129.688, -0.966687, 0.14", "-44.7712, 130.043, -0.951081, 0.28", "-45.1924, 130.525, -0.941681, 0.14", "-45.4195, 130.75, -0.928159, 0.1", "-45.6478, 130.974, -0.908708, 0.1", "-46.0909, 131.432, -0.859259, 0.1", "-46.749, 132.104, -0.730244, 0.1", "-46.9079, 132.261, -0.689281, 0.1", "-47.5567, 132.913, -0.453333, 0.1", "-47.8588, 133.224, -0.318185, 0.1", "-48.1424, 133.529, -0.162463, 0.14", "-48.1424, 133.529, -0.162463, 0.28" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-38.5283, 112.564, -7.87272, 0.1", "-39.8003, 112.489, -7.64997, 0.1", "-40.4784, 112.433, -7.51132, 0.1", "-41.075, 112.354, -7.36322, 0.1", "-42.2842, 112.171, -7.07572, 0.1", "-43.5039, 111.971, -6.82073, 0.1", "-44.1056, 111.869, -6.71036, 0.1", "-45.3309, 111.618, -6.53326, 0.14", "-46.5944, 111.333, -6.38908, 0.28", "-47.1945, 111.187, -6.35773, 0.14", "-47.7984, 111.041, -6.37977, 0.1", "-48.0974, 110.977, -6.41505, 0.1", "-48.6976, 110.886, -6.47446, 0.14", "-49.306, 110.828, -6.5588, 0.28", "-49.7443, 110.809, -6.62266, 0.42", "-51.0295, 110.793, -6.77718, 0.1", "-51.7167, 110.799, -6.86042, 0.1", "-53.0053, 110.839, -6.97194, 0.14", "-53.6217, 110.868, -7.01994, 0.1", "-54.2332, 110.91, -7.08016, 0.1", "-54.9047, 110.963, -7.18094, 0.1", "-55.5037, 111.001, -7.31897, 0.1", "-56.7612, 111.067, -7.63745, 0.1", "-57.3464, 111.116, -7.82276, 0.14", "-57.9911, 111.208, -8.02228, 0.1", "-58.5626, 111.343, -8.20906, 0.14", "-58.8394, 111.437, -8.31145, 0.1", "-59.0984, 111.562, -8.42872, 0.1", "-59.7725, 111.947, -8.81923, 0.1", "-60.1355, 112.148, -8.9802, 0.1", "-60.8674, 112.539, -9.24177, 0.1", "-61.2447, 112.732, -9.3596, 0.1", "-61.8442, 113.017, -9.53222, 0.1", "-62.397, 113.253, -9.68783, 0.1", "-63.5786, 113.697, -10.0097, 0.1", "-63.9718, 113.825, -10.1223, 0.1", "-64.6123, 114.001, -10.3176, 0.14", "-64.6123, 114.001, -10.3176, 0.28", "-65.2328, 114.125, -10.5752, 0.28", "-65.843, 114.221, -10.8869, 0.14", "-66.3622, 114.264, -11.2158, 0.1", "-66.6229, 114.265, -11.3831, 0.14", "-67.14, 114.237, -11.7184, 0.1", "-67.6709, 114.172, -12.012, 0.1", "-68.2203, 114.069, -12.2765, 0.1", "-68.7796, 113.943, -12.5179, 0.1", "-69.3414, 113.811, -12.7428, 0.14", "-69.9162, 113.664, -12.9204, 0.28", "-71.1423, 113.33, -13.2238, 0.42", "-71.7239, 113.154, -13.3487, 0.28", "-72.2936, 112.96, -13.4659, 0.14", "-72.8615, 112.739, -13.5907, 0.1", "-74.0369, 112.238, -13.8733, 0.1", "-74.5973, 111.989, -13.9993, 0.1", "-75.2087, 111.702, -14.1545, 0.1", "-75.8252, 111.401, -14.2986, 0.1", "-76.4357, 111.085, -14.4425, 0.14", "-76.4357, 111.085, -14.4425, 0.28", "-77.4876, 110.471, -14.8192, 0.1", "-78.0652, 110.11, -15.0282, 0.1", "-78.5559, 109.789, -15.2192, 0.14", "-78.9041, 109.546, -15.3738, 0.28", "-79.4259, 109.169, -15.6445, 0.14", "-79.9315, 108.784, -15.9531, 0.1", "-80.2255, 108.542, -16.1687, 0.14", "-80.7068, 108.163, -16.5199, 0.1", "-81.1918, 107.804, -16.8711, 0.1", "-81.643, 107.512, -17.1932, 0.1", "-82.165, 107.221, -17.5608, 0.1", "-82.6954, 106.971, -17.9292, 0.1", "-83.1862, 106.79, -18.2646, 0.1", "-83.6891, 106.647, -18.6034, 0.1", "-84.196, 106.537, -18.9412, 0.1", "-84.7111, 106.465, -19.2802, 0.1", "-85.219, 106.432, -19.6101, 0.1", "-85.8013, 106.423, -19.9852, 0.1", "-86.0597, 106.43, -20.1504, 0.1", "-86.5814, 106.473, -20.4809, 0.1", "-87.1568, 106.54, -20.8431, 0.1", "-87.677, 106.622, -21.1683, 0.14", "-87.677, 106.622, -21.1683, 0.28", "-88.257, 106.751, -21.5266, 0.1", "-88.8247, 106.891, -21.8759, 0.1", "-89.3362, 107.033, -22.1888, 0.1", "-89.9095, 107.2, -22.5386, 0.1", "-90.4732, 107.38, -22.8809, 0.1", "-91.0452, 107.556, -23.229, 0.1", "-91.3012, 107.633, -23.3849, 0.1", "-91.8652, 107.811, -23.7276, 0.1", "-92.434, 108.005, -24.0716, 0.1", "-92.9972, 108.187, -24.4133, 0.1", "-93.5082, 108.348, -24.7237, 0.1", "-94.0806, 108.532, -25.0712, 0.1", "-94.4332, 108.647, -25.285, 0.1", "-95.0058, 108.83, -25.6326, 0.1", "-95.5167, 108.992, -25.9431, 0.14", "-96.0801, 109.173, -26.2849, 0.28", "-96.3311, 109.264, -26.4361, 0.14" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-5.49722, 80.4134, -4.89165, 0.98", "-4.9373, 81.8307, -4.66359, 0.98", "-4.65766, 82.602, -4.57709, 0.84", "-4.412, 83.3766, -4.51191, 0.7", "-4.26406, 83.8768, -4.48094, 0.56", "-4.05461, 84.6619, -4.44294, 0.7", "-3.87397, 85.3745, -4.41693, 0.56", "-3.70741, 86.1842, -4.43762, 0.42", "-3.58338, 86.9095, -4.45192, 0.28", "-3.48229, 87.7157, -4.40867, 0.14", "-3.42391, 88.4434, -4.32301, 0.1", "-3.3896, 89.2554, -4.18278, 0.14", "-3.39421, 89.9593, -4.0298, 0.28", "-3.41656, 90.3153, -3.94096, 0.14", "-3.56641, 91.7937, -3.55186, 0.1", "-3.66575, 92.4967, -3.36733, 0.1", "-3.76437, 93.2005, -3.19829, 0.1", "-3.86038, 93.9917, -3.03896, 0.1", "-3.91977, 94.7236, -2.97695, 0.1", "-3.93944, 95.4575, -3.00132, 0.1", "-3.91005, 96.1917, -3.07686, 0.1", "-3.82483, 97.0034, -3.09139, 0.1", "-3.69391, 97.8172, -3.03073, 0.14", "-3.42089, 99.18, -2.81172, 0.28", "-3.35208, 99.5324, -2.72777, 0.42", "-3.14467, 100.952, -2.29831, 0.1", "-3.02934, 102.364, -1.8124, 0.14", "-3.02349, 103.051, -1.56323, 0.1", "-3.05378, 103.723, -1.31546, 0.1", "-3.11076, 104.412, -1.07288, 0.1", "-3.20563, 105.195, -0.880466, 0.1", "-3.30984, 105.919, -0.802608, 0.1", "-3.41927, 106.643, -0.7778, 0.1", "-3.46475, 107.008, -0.76691, 0.14", "-3.53982, 107.733, -0.694154, 0.7", "-3.59731, 108.458, -0.5777, 0.7", "-3.63599, 109.162, -0.432692, 0.84", "-3.67409, 109.877, -0.262344, 0.98", "-3.70183, 110.386, -0.132856, 0.98", "-3.75908, 111.882, 0.241796, 0.84", "-3.77836, 112.594, 0.412545, 0.84", "-3.79417, 113.313, 0.568494, 0.7", "-3.78799, 114.024, 0.74555, 0.56", "-3.75639, 114.722, 0.921177, 0.56", "-3.68901, 115.522, 1.1069, 0.56", "-3.58092, 116.236, 1.23872, 0.42", "-3.4387, 116.945, 1.38458, 0.42", "-3.07361, 118.344, 1.90386, 0.56", "-2.86055, 119.046, 2.2654, 0.56", "-2.72154, 119.458, 2.52021, 0.7", "-2.48949, 120.107, 2.95656, 0.7", "-2.48949, 120.107, 2.95656, 0.84", "-1.57739, 122.313, 4.2007, 1.12", "-1.4449, 122.627, 4.3264, 1.12", "-1.15473, 123.35, 4.54254, 0.98", "-0.896604, 124.126, 4.66719, 0.84", "-0.768423, 124.621, 4.66592, 0.84", "-0.500292, 126.262, 4.44153, 0.84", "-0.476543, 126.614, 4.3481, 0.7", "-0.481747, 127.407, 4.16151, 0.56", "-0.56446, 128.222, 4.01258, 0.42", "-0.68978, 128.926, 3.93461, 0.28", "-0.847454, 129.722, 3.90504, 0.14", "-0.990417, 130.442, 3.93544, 0.28", "-0.990417, 130.442, 3.93544, 0.42", "-1.03689, 131.175, 3.94977, 0.1", "-1.04352, 131.913, 3.95748, 0.1", "-1.0285, 132.741, 3.96236, 0.1", "-0.985356, 133.467, 3.96162, 0.1", "-0.909222, 134.292, 3.95623, 0.14", "-0.807262, 135.023, 3.99774, 0.28", "-0.735723, 135.38, 4.03856, 0.42", "-0.552774, 136.073, 4.15151, 0.56", "-0.307314, 136.847, 4.30548, 0.56", "-0.180053, 137.185, 4.37696, 0.42", "0.375412, 138.607, 4.58117, 0.56", "0.683139, 139.375, 4.58913, 0.42", "0.884565, 139.844, 4.60041, 0.28", "1.22878, 140.592, 4.61151, 0.42", "1.55288, 141.353, 4.59881, 0.56", "1.98725, 142.636, 4.49267, 0.7", "2.26289, 143.883, 4.19734, 0.7", "2.65612, 146.493, 3.96825, 0.56", "2.7161, 146.84, 4.07494, 0.7", "2.85939, 147.476, 4.3811, 0.7", "3.0366, 148.065, 4.76434, 0.7", "3.24047, 148.641, 5.15875, 0.56", "3.45987, 149.308, 5.57695, 0.42", "3.83452, 150.654, 6.20082, 0.28", "3.94436, 151.115, 6.41044, 0.14", "4.22757, 152.487, 7.03128, 0.1", "4.29183, 152.96, 7.23344, 0.14", "4.31002, 153.72, 7.51656, 0.56", "4.23637, 154.423, 7.71542, 0.42", "4.08721, 155.197, 7.90534, 0.28", "3.91956, 155.887, 8.08192, 0.14", "3.72149, 156.651, 8.25979, 0.1", "3.56563, 157.42, 8.4597, 0.1", "3.49822, 158.124, 8.65583, 0.1", "3.56275, 159.564, 9.06311, 0.14", "3.56275, 159.564, 9.06311, 0.28", "3.85868, 160.301, 9.22368, 0.84", "4.26841, 161.002, 9.34489, 0.7", "4.56461, 161.418, 9.3877, 0.56", "5.05098, 162.077, 9.39265, 0.42", "5.49562, 162.747, 9.32411, 0.56", "5.66998, 163.07, 9.29776, 0.56", "5.81461, 163.408, 9.27654, 0.7", "6.03786, 164.112, 9.24541, 0.84", "6.19927, 164.83, 9.22476, 0.7", "6.28222, 165.561, 9.2174, 0.56", "6.32571, 166.373, 9.21736, 0.7", "6.32571, 166.373, 9.21736, 0.84" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-5.49722, 80.4134, -4.89165, 0.84", "-5.6452, 80.7154, -5.26933, 0.84", "-5.92594, 81.2882, -5.98585, 0.7", "-6.19828, 81.8439, -6.68092, 0.56", "-6.45399, 82.3657, -7.33356, 0.42", "-6.60197, 82.6676, -7.71124, 0.56", "-6.73512, 82.9393, -8.05106, 0.42" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "10.6304, 167.153, -42.3672, 0.14", "10.4454, 168.431, -42.0989, 0.14", "10.336, 169.033, -41.9567, 0.28", "10.2157, 169.709, -41.7958, 0.42", "10.1671, 170.01, -41.7261, 0.42", "9.96207, 171.284, -41.4535, 0.28", "9.8579, 171.971, -41.3157, 0.14", "9.74918, 172.565, -41.1722, 0.1", "9.64052, 173.248, -41.0217, 0.1", "9.53825, 173.936, -40.9013, 0.1", "9.4347, 174.536, -40.7959, 0.1", "9.30016, 175.222, -40.6964, 0.1", "9.22832, 175.525, -40.643, 0.1", "9.06152, 176.188, -40.5067, 0.1", "8.90686, 176.781, -40.3716, 0.1", "8.60739, 177.995, -40.0747, 0.1", "8.50208, 178.603, -39.9558, 0.1", "8.43091, 179.288, -39.8595, 0.1", "8.41212, 179.993, -39.7903, 0.1", "8.43422, 180.438, -39.7666, 0.1", "8.52042, 181.127, -39.7558, 0.14", "8.75846, 182.427, -39.7852, 0.14", "8.86671, 183.111, -39.7542, 0.1", "8.9172, 183.552, -39.7114, 0.1", "8.96063, 184.24, -39.6059, 0.1", "8.94064, 184.919, -39.4191, 0.1", "8.85793, 185.573, -39.168, 0.1", "8.61824, 186.739, -38.6186, 0.1", "8.55028, 187.013, -38.489, 0.1", "8.37417, 187.634, -38.2119, 0.1", "8.02758, 188.805, -37.7293, 0.1", "7.85728, 189.376, -37.5287, 0.1", "7.67085, 190.024, -37.3579, 0.1", "7.52333, 190.629, -37.2555, 0.1", "7.38479, 191.236, -37.1702, 0.1", "7.21469, 191.915, -37.0751, 0.1", "7.06982, 192.522, -36.9989, 0.1", "6.92475, 193.114, -36.8827, 0.1", "6.81206, 193.538, -36.78, 0.1", "6.73958, 193.831, -36.6978, 0.1", "6.47304, 195.034, -36.3415, 0.1", "6.34794, 195.689, -36.1521, 0.1", "6.2399, 196.364, -35.9684, 0.1", "6.16131, 196.973, -35.8224, 0.1", "6.08017, 197.654, -35.695, 0.1", "6.04085, 198.357, -35.6356, 0.1", "6.08029, 199.05, -35.688, 0.1", "6.1106, 199.359, -35.7406, 0.1", "6.20053, 200.04, -35.8987, 0.1", "6.29351, 200.637, -36.064, 0.1", "6.5471, 201.849, -36.4838, 0.14", "6.8394, 203.045, -36.9327, 0.28", "6.99336, 203.608, -37.1444, 0.14", "7.17382, 204.235, -37.3594, 0.1", "7.25664, 204.524, -37.4439, 0.1", "7.61673, 205.87, -37.7145, 0.1", "7.76024, 206.555, -37.7767, 0.1", "7.83597, 206.994, -37.7825, 0.1", "7.96666, 207.677, -37.7691, 0.1", "8.08492, 208.37, -37.7347, 0.14", "8.17546, 209.057, -37.6685, 0.1", "8.18977, 209.369, -37.6229, 0.1", "8.20628, 210.071, -37.5301, 0.1", "8.20789, 210.505, -37.4781, 0.1", "8.21022, 211.118, -37.4046, 0.1", "8.24755, 211.822, -37.3697, 0.1", "8.30944, 212.447, -37.3668, 0.1", "8.4001, 213.135, -37.3807, 0.1", "8.49273, 213.834, -37.4144, 0.1", "8.5414, 214.267, -37.4438, 0.1", "8.68114, 215.579, -37.5507, 0.1", "8.72225, 216.02, -37.5946, 0.1", "8.77221, 216.708, -37.6697, 0.14", "8.80326, 217.33, -37.7485, 0.1", "8.8071, 217.955, -37.8318, 0.1", "8.76206, 218.578, -37.9007, 0.1", "8.76206, 218.578, -37.9007, 0.14", "8.67835, 218.882, -37.9173, 0.56" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "10.6304, 167.153, -42.3672, 0.1", "9.87023, 166.365, -42.3214, 0.1", "9.46988, 165.948, -42.3249, 0.1", "9.2178, 165.677, -42.3818, 0.1", "8.84693, 165.254, -42.5199, 0.1", "8.49392, 164.822, -42.6801, 0.1", "8.2838, 164.536, -42.7894, 0.1", "8.00041, 164.063, -42.9788, 0.1", "7.59802, 163.174, -43.2544, 0.1", "7.39325, 162.469, -43.4059, 0.1", "7.34796, 162.206, -43.4146, 0.1", "7.29524, 161.682, -43.3552, 0.1", "7.21289, 160.624, -43.1295, 0.1", "7.16791, 160.117, -42.9883, 0.1", "7.10486, 159.56, -42.7976, 0.14", "6.98059, 158.523, -42.4285, 0.84", "6.8942, 157.966, -42.2424, 0.7", "6.83602, 157.617, -42.1449, 0.56", "6.73168, 156.874, -42.0326, 0.42", "6.73168, 156.874, -42.0326, 0.28", "6.76017, 156.609, -42.0278, 0.42", "6.83619, 156.355, -42.0445, 0.56", "7.04762, 155.808, -42.0742, 0.42", "7.25306, 155.32, -42.0985, 0.28", "7.48254, 154.781, -42.125, 0.42", "7.68923, 154.296, -42.1847, 0.28", "7.8816, 153.818, -42.239, 0.14", "8.07265, 153.325, -42.2899, 0.1", "8.26127, 152.834, -42.3347, 0.1", "8.45305, 152.343, -42.3715, 0.1", "8.80222, 151.43, -42.4255, 0.1", "9.14256, 150.514, -42.3763, 0.28", "9.31659, 150.021, -42.3063, 0.14", "9.48557, 149.477, -42.1474, 0.1", "9.6159, 149.001, -41.9676, 0.1", "9.73137, 148.526, -41.7706, 0.1", "9.94112, 147.554, -41.365, 0.1", "10.0484, 147.069, -41.2124, 0.1", "10.2895, 146.043, -40.9763, 0.1", "10.4426, 145.538, -41.0133, 0.1", "10.6356, 145.13, -41.2837, 0.1", "10.8404, 144.798, -41.6258, 0.1", "11.2399, 144.268, -42.3147, 0.1", "11.6832, 143.773, -43.0461, 0.1", "12.6205, 142.882, -44.4645, 0.1", "12.6205, 142.882, -44.4645, 0.14", "13.2771, 142.39, -45.0123, 0.42", "13.5573, 142.172, -45.0605, 0.28", "13.9699, 141.784, -44.9346, 0.14", "14.6568, 141.033, -44.5579, 0.1", "15.0107, 140.621, -44.3514, 0.1", "15.243, 140.357, -44.2737, 0.1", "15.6469, 139.938, -44.2484, 0.1", "16.0706, 139.538, -44.2787, 0.14", "16.2637, 139.365, -44.3002, 0.1", "16.9857, 138.688, -44.3405, 0.1", "17.3862, 138.273, -44.2505, 0.1", "17.6973, 137.888, -44.0886, 0.1", "17.8818, 137.614, -43.9432, 0.1", "18.3127, 136.86, -43.5275, 0.1", "18.7068, 135.977, -43.0744, 0.1", "18.8601, 135.524, -42.8642, 0.1", "18.9839, 135.041, -42.6974, 0.14", "19.0994, 134.531, -42.6043, 0.1", "19.2086, 134.021, -42.5972, 0.1", "19.3143, 133.506, -42.6885, 0.1", "19.3989, 133.005, -42.8388, 0.1", "19.45, 132.49, -42.9696, 0.1", "19.4918, 131.525, -43.1638, 0.1", "19.4936, 131.159, -43.2169, 0.1", "19.485, 130.564, -43.2698, 0.1", "19.4641, 129.974, -43.292, 0.1", "19.4237, 128.854, -43.281, 0.1", "19.4102, 128.323, -43.2513, 0.1", "19.4111, 127.792, -43.1989, 0.1", "19.4394, 127.264, -43.1583, 0.1", "19.4996, 126.68, -43.1337, 0.1", "19.5726, 126.155, -43.1017, 0.1", "19.6165, 125.893, -43.0883, 0.1", "19.7047, 125.372, -43.0372, 0.1", "19.7955, 124.861, -42.9704, 0.1", "19.8932, 124.347, -42.8911, 0.1", "20.0912, 123.298, -42.7155, 0.1", "20.1812, 122.78, -42.6315, 0.1", "20.2562, 122.261, -42.5598, 0.1", "20.3096, 121.733, -42.5072, 0.1", "20.3281, 121.47, -42.4951, 0.1", "20.3402, 121.1, -42.5042, 0.7", "20.3371, 120.568, -42.5603, 0.56", "20.3187, 119.973, -42.6252, 0.42", "20.2928, 119.395, -42.732, 0.28", "20.2698, 118.878, -42.856, 0.14", "20.2386, 118.304, -42.9809, 0.1", "20.2015, 117.717, -43.0956, 0.1", "20.1493, 117.188, -43.1503, 0.1", "20.0115, 116.079, -43.1648, 0.1", "19.9686, 115.817, -43.1482, 0.1", "19.7819, 114.824, -43.0239, 0.1", "19.6725, 114.247, -42.9187, 0.1", "19.4529, 113.193, -42.6536, 0.1", "19.3225, 112.643, -42.4712, 0.1", "19.2412, 112.317, -42.3304, 0.1", "19.1234, 111.84, -42.1443, 0.1", "19.0737, 111.586, -42.084, 0.14" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.88855, -200.301, -3.53198, 0.98", "4.19963, -200.567, -3.22813, 0.98", "4.33713, -200.702, -3.10008, 1.12", "4.82369, -201.258, -2.66569, 1.82", "5.34098, -201.928, -2.23708, 1.68", "5.82676, -202.665, -1.87781, 1.54", "6.02827, -203.076, -1.76484, 1.4", "6.16169, -203.52, -1.76659, 1.26", "6.215, -204.361, -1.99853, 1.12", "6.06334, -205.125, -2.44014, 1.12", "5.99619, -205.296, -2.57813, 1.12", "5.64895, -205.912, -3.20011, 1.12", "5.28589, -206.426, -3.81418, 1.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.88855, -200.301, -3.53198, 0.98", "3.99853, -200.591, -2.94128, 0.98", "4.06434, -200.72, -2.67678, 1.12", "4.31176, -201.237, -1.59008, 1.4", "4.43267, -201.539, -1.00666, 1.26", "4.61673, -202.147, 0.087209, 1.12", "4.69485, -202.49, 0.665337, 0.98", "4.78697, -203.122, 1.63185, 0.84", "4.79711, -203.477, 2.11323, 0.7", "4.78526, -203.921, 2.6208, 0.56", "4.77183, -204.391, 3.11801, 0.1", "4.74324, -204.697, 3.41044, 0.1", "4.67708, -205.335, 3.99046, 0.1", "4.59932, -205.668, 4.26015, 0.1", "4.29913, -206.748, 5.0848, 0.14", "4.29913, -206.748, 5.0848, 0.28", "4.00775, -207.303, 5.37147, 0.28", "3.7987, -207.652, 5.4986, 0.14", "3.11513, -208.734, 5.71331, 0.1", "2.8944, -209.098, 5.73719, 0.1", "2.26658, -210.229, 5.68209, 0.14", "2.14788, -210.511, 5.6567, 0.56", "1.96065, -211.09, 5.54087, 0.42", "1.83418, -211.665, 5.39432, 0.28", "1.76348, -212.261, 5.23676, 0.14", "1.70981, -212.858, 5.08491, 0.1", "1.67403, -213.466, 4.96023, 0.14", "1.55952, -214.747, 4.75387, 0.28", "1.48948, -215.359, 4.67867, 0.42", "1.43318, -215.794, 4.64174, 0.1", "1.34804, -216.475, 4.6122, 0.1", "1.28631, -217.172, 4.6, 0.1", "1.26607, -217.86, 4.60713, 0.1", "1.28562, -218.171, 4.61265, 0.1", "1.3192, -218.478, 4.59775, 0.84", "1.42365, -219.086, 4.51437, 0.7", "1.56888, -219.743, 4.37836, 0.56", "1.71634, -220.323, 4.23097, 0.42", "1.88908, -220.97, 4.05481, 0.28", "2.04553, -221.543, 3.89394, 0.14", "2.22041, -222.188, 3.71455, 0.28", "2.29567, -222.476, 3.6384, 0.28", "2.43842, -223.063, 3.49842, 0.14", "2.57144, -223.641, 3.37132, 0.1", "2.71354, -224.317, 3.24173, 0.1", "2.83039, -224.904, 3.13858, 0.1", "2.94108, -225.506, 3.04571, 0.14", "3.01515, -226.113, 2.93342, 0.28", "3.05647, -226.718, 2.80896, 0.28", "3.07128, -227.326, 2.67707, 0.14", "3.06184, -227.919, 2.54526, 0.1", "3.03142, -228.525, 2.40863, 0.1", "2.92571, -229.76, 2.15301, 0.14", "2.86103, -230.366, 2.04267, 0.28", "2.79385, -230.978, 1.94992, 0.42", "2.79385, -230.978, 1.94992, 0.56", "2.77142, -231.408, 1.91646, 0.56", "2.77587, -232.107, 1.88931, 0.56", "2.82458, -232.73, 1.88664, 0.56", "2.88017, -233.348, 1.87378, 0.7", "2.95096, -233.956, 1.83821, 0.56", "3.03714, -234.568, 1.78115, 0.42", "3.14445, -235.171, 1.69325, 0.56", "3.26653, -235.771, 1.58394, 0.42", "3.39338, -236.364, 1.46721, 0.28", "3.50457, -237.029, 1.30435, 0.14", "3.57968, -237.618, 1.13609, 0.1", "3.63065, -238.272, 0.935471, 0.1", "3.63933, -238.866, 0.758013, 0.1", "3.61241, -239.461, 0.594682, 0.1", "3.49367, -240.574, 0.358884, 0.1", "3.49367, -240.574, 0.358884, 0.1", "3.47881, -241.016, 0.380896, 0.1", "3.4898, -241.707, 0.492926, 0.1", "3.5369, -242.305, 0.623851, 0.1", "3.62088, -242.978, 0.797979, 0.1", "3.81696, -244.219, 1.16086, 0.14", "3.89906, -244.8, 1.32747, 0.1", "3.98021, -245.467, 1.51403, 0.14", "4.03086, -246.064, 1.68037, 0.1", "4.05851, -246.726, 1.86016, 0.14", "4.05891, -247.157, 1.95963, 0.28", "4.01645, -247.832, 2.09205, 0.14", "3.97319, -248.516, 2.22651, 0.1", "3.94123, -249.206, 2.34554, 0.14", "3.9461, -249.511, 2.41282, 0.28", "3.98949, -250.102, 2.56102, 0.42", "4.03545, -250.524, 2.68028, 0.1", "4.10978, -251.111, 2.86736, 0.1", "4.19097, -251.697, 3.06283, 0.1", "4.38013, -253.019, 3.51193, 0.14", "4.50367, -253.65, 3.75284, 0.1", "4.60054, -254.048, 3.91104, 0.14", "4.77872, -254.679, 4.14628, 0.28", "4.9461, -255.236, 4.33363, 0.42", "5.03832, -255.525, 4.403, 0.56", "5.37299, -256.614, 4.53171, 0.56", "5.56525, -257.204, 4.5718, 0.42", "5.74658, -257.796, 4.59586, 0.28", "5.90345, -258.398, 4.61685, 0.14", "6.03852, -259.074, 4.63809, 0.1", "6.13575, -259.756, 4.6502, 0.1", "6.21625, -260.375, 4.66925, 0.1", "6.33284, -261.063, 4.72256, 0.1", "6.47113, -261.732, 4.79772, 0.1", "6.64358, -262.315, 4.91347, 0.1", "6.74767, -262.599, 4.98578, 0.1", "7.176, -263.619, 5.27267, 0.1", "7.40908, -264.165, 5.43988, 0.14", "7.63397, -264.716, 5.61262, 0.1", "8.04771, -265.889, 5.98479, 0.14", "8.21132, -266.461, 6.16446, 0.1", "8.34241, -267.12, 6.35762, 0.1", "8.37083, -267.79, 6.5084, 0.1", "8.32952, -268.476, 6.6421, 0.1", "8.23095, -269.15, 6.73866, 0.1", "8.16405, -269.45, 6.76466, 0.1", "7.99689, -270.124, 6.82239, 0.1", "7.67494, -271.383, 6.92385, 0.14", "7.50399, -272.056, 6.98261, 0.1", "7.39367, -272.662, 7.06032, 0.14", "7.3271, -273.337, 7.17077, 0.1", "7.3224, -273.771, 7.25428, 0.1", "7.3766, -274.442, 7.40422, 0.1", "7.48281, -275.107, 7.58304, 0.1", "7.63498, -276.339, 7.8587, 0.14", "7.67344, -276.949, 7.98489, 0.28", "7.67525, -277.55, 8.09487, 0.42", "7.619, -278.236, 8.21728, 0.56", "7.51005, -278.664, 8.27833, 0.42", "7.04308, -279.829, 8.39611, 0.28", "6.7337, -280.446, 8.43347, 0.42", "6.53761, -280.826, 8.45867, 0.28", "6.1515, -281.616, 8.50439, 0.14", "5.64855, -282.683, 8.49399, 0.1", "5.40372, -283.249, 8.47148, 0.1", "5.19285, -283.832, 8.4406, 0.1", "4.98783, -284.493, 8.36528, 0.1", "4.86164, -285.089, 8.30909, 0.1", "4.72804, -286.351, 8.24798, 0.1", "4.7231, -286.792, 8.2662, 0.1", "4.73564, -287.412, 8.32229, 0.1", "4.7659, -288.019, 8.40748, 0.1", "4.88171, -289.308, 8.6261, 0.1", "4.95984, -289.986, 8.77304, 0.1", "5.05954, -290.648, 8.93541, 0.1", "5.13527, -291.252, 9.07227, 0.1", "5.18856, -291.934, 9.22117, 0.1", "5.20226, -292.537, 9.33985, 0.1", "5.1858, -292.973, 9.40977, 0.1", "5.12173, -293.585, 9.49428, 0.1", "5.00858, -294.258, 9.58049, 0.1", "4.86353, -294.937, 9.66012, 0.1", "4.7037, -295.601, 9.73012, 0.1", "4.52939, -296.274, 9.80253, 0.1", "4.22354, -297.418, 9.92788, 0.1", "4.04219, -298.076, 10.011, 0.1", "3.85392, -298.666, 10.068, 0.1", "3.62502, -299.322, 10.1248, 0.1", "3.3627, -299.952, 10.1561, 0.14", "3.17718, -300.348, 10.1783, 0.28", "2.88276, -300.963, 10.2295, 0.14", "2.27374, -302.105, 10.3142, 0.14", "2.06092, -302.474, 10.3447, 0.28", "1.41081, -303.592, 10.4411, 0.14", "1.08254, -304.188, 10.503, 0.1", "0.759085, -304.797, 10.5474, 0.14", "0.621175, -305.07, 10.5718, 0.28", "0.457045, -305.463, 10.6271, 0.1", "0.21614, -306.108, 10.7161, 0.1", "0.0368384, -306.774, 10.8296, 0.1", "-0.292514, -307.989, 10.9299, 0.14" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "17.7768, -98.9949, -2.94928, 0.84", "17.1373, -99.6773, -3.98188, 0.84", "16.4377, -100.424, -5.11148, 0.98", "15.8204, -101.083, -6.10811, 0.84", "15.1182, -101.832, -7.24178, 0.7", "14.9525, -102.009, -7.50936, 0.84", "14.9525, -102.009, -7.50936, 0.98" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "17.7768, -98.9949, -2.94928, 0.56", "17.7826, -99.2531, -3.18314, 0.56", "17.88, -100.351, -4.13861, 0.7", "17.9222, -100.915, -4.66152, 0.56", "17.9587, -101.426, -5.13379, 0.42", "18.0568, -102.494, -6.11907, 0.28", "18.1012, -102.855, -6.45085, 0.14", "18.1832, -103.399, -7.00072, 0.1", "18.3915, -104.38, -8.05512, 0.1", "18.431, -104.593, -8.32037, 0.14", "18.4927, -104.884, -8.70744, 0.28", "18.5713, -105.18, -9.088, 0.14", "18.8235, -106.074, -10.1934, 0.1", "18.9213, -106.389, -10.5627, 0.14", "19.2672, -107.379, -11.5666, 0.28", "19.4524, -107.939, -12.0608, 0.14", "19.638, -108.558, -12.5004, 0.1", "19.8176, -109.232, -12.8457, 0.1", "19.8849, -109.557, -12.9685, 0.28", "19.9803, -110.223, -13.1842, 0.14", "20.0498, -110.909, -13.3572, 0.1", "20.0321, -111.584, -13.5664, 0.14", "19.9503, -112.317, -13.824, 0.1", "19.7099, -113.486, -14.3467, 0.1", "19.6354, -113.793, -14.5025, 0.1", "19.4804, -114.398, -14.8297, 0.14", "19.1801, -115.628, -15.5015, 0.1", "19.047, -116.221, -15.825, 0.1", "18.7556, -117.443, -16.5162, 0.14", "18.55, -118.001, -16.8813, 0.28", "18.2654, -118.482, -17.2961, 0.42", "17.9315, -118.895, -17.7341, 0.56", "17.9315, -118.895, -17.7341, 0.56", "17.2327, -119.498, -18.6038, 0.56", "15.8878, -120.621, -20.3701, 0.42", "15.2367, -121.158, -21.314, 0.56", "15.2367, -121.158, -21.314, 0.56", "15.0962, -121.319, -21.5832, 0.28", "14.6663, -122.124, -22.7012, 0.42", "14.606, -122.663, -23.2453, 0.28", "14.8461, -123.746, -23.9941, 0.14", "15.0695, -124.397, -24.3539, 0.1", "15.3076, -124.996, -24.6341, 0.14", "15.8182, -126.273, -25.1615, 0.1", "16.0732, -126.901, -25.347, 0.1", "16.2035, -127.354, -25.5116, 0.1", "16.2035, -127.354, -25.5116, 0.1", "16.223, -127.67, -25.6681, 0.1", "16.2038, -128.927, -26.3584, 0.1", "16.1629, -129.541, -26.7024, 0.14", "16.1244, -130.891, -27.307, 0.28", "16.1361, -131.563, -27.5241, 0.42", "16.1901, -132.258, -27.6714, 0.56", "16.2876, -132.958, -27.7427, 0.42", "16.4324, -133.644, -27.7268, 0.28", "16.7774, -135.096, -27.5986, 0.42", "16.9568, -135.778, -27.4962, 0.56", "17.1316, -136.46, -27.4056, 0.42", "17.2155, -136.805, -27.3705, 0.42", "17.368, -137.485, -27.3322, 0.56", "17.5082, -138.184, -27.334, 0.42", "17.6286, -138.882, -27.3839, 0.28", "17.7887, -139.577, -27.4042, 0.14", "17.98, -140.259, -27.3998, 0.28", "18.2061, -140.93, -27.3836, 0.42", "18.4684, -141.576, -27.3666, 0.42", "18.7619, -142.217, -27.3521, 0.28", "19.3757, -143.421, -27.3533, 0.14", "19.5333, -143.735, -27.3871, 0.84", "19.8594, -144.43, -27.5301, 0.7", "20.1675, -145.125, -27.7415, 0.56", "20.4153, -145.726, -27.9795, 0.42", "20.6676, -146.391, -28.294, 0.28", "21.0983, -147.642, -28.9555, 0.14", "21.2724, -148.216, -29.2888, 0.1", "21.3818, -148.635, -29.5435, 0.1", "21.5234, -149.288, -29.9395, 0.1", "21.6478, -149.953, -30.3233, 0.1", "21.7059, -150.643, -30.698, 0.1", "21.7288, -151.942, -31.3138, 0.1", "21.7096, -152.264, -31.4597, 0.14", "21.6504, -152.717, -31.637, 0.1", "21.5366, -153.379, -31.8556, 0.1", "21.2323, -154.766, -32.3039, 0.14", "21.0821, -155.426, -32.5061, 0.1", "20.9589, -156.085, -32.6885, 0.1", "20.8357, -156.84, -32.9037, 0.14", "20.7284, -157.501, -33.1282, 0.1", "20.5631, -158.872, -33.5614, 0.1", "20.5523, -159.203, -33.6543, 0.56", "20.5678, -159.882, -33.8522, 0.56", "20.6413, -160.556, -34.0543, 0.42", "20.8928, -161.927, -34.4404, 0.56", "21.1999, -163.169, -34.7212, 0.56", "21.3799, -163.918, -34.8724, 0.42", "21.5209, -164.673, -35.0422, 0.28", "21.6293, -165.44, -35.2235, 0.14", "21.6538, -165.927, -35.3692, 0.1", "21.6361, -166.598, -35.5986, 0.1", "21.4751, -167.961, -36.155, 0.1", "21.3447, -168.601, -36.4272, 0.1", "21.166, -169.219, -36.7077, 0.1", "20.7696, -170.326, -37.2615, 0.1", "20.7696, -170.326, -37.2615, 0.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-15.0661, -140.717, -32.4627, 0.84", "-14.9528, -141.131, -31.6357, 0.84", "-14.9119, -141.28, -31.3369, 0.7", "-14.7878, -141.734, -30.4305, 0.56", "-14.7468, -141.884, -30.1317, 0.42", "-14.705, -142.037, -29.8262, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-15.0661, -140.717, -32.4627, 0.56", "-15.2103, -141.098, -32.329, 0.56", "-15.4145, -141.637, -32.149, 0.42", "-15.6273, -142.242, -31.9594, 0.28", "-15.8035, -142.797, -31.7958, 0.14", "-16.1397, -143.982, -31.4658, 0.1", "-16.283, -144.551, -31.3156, 0.1", "-16.4162, -145.185, -31.1494, 0.1", "-16.5252, -145.765, -31.0116, 0.1", "-16.6223, -146.354, -30.8939, 0.1", "-16.707, -146.948, -30.8054, 0.14", "-16.778, -147.551, -30.7554, 0.1", "-16.8556, -148.14, -30.7109, 0.1", "-16.9455, -148.814, -30.6608, 0.1", "-17.0509, -149.477, -30.6206, 0.1", "-17.1075, -149.777, -30.6074, 0.1", "-17.2428, -150.446, -30.5826, 0.1", "-17.3417, -151.048, -30.5961, 0.14", "-17.4124, -151.649, -30.6327, 0.28", "-17.455, -152.315, -30.6854, 0.42", "-17.4708, -152.994, -30.7447, 0.28", "-17.4782, -153.589, -30.8014, 0.14", "-17.4717, -154.821, -30.9225, 0.1", "-17.4833, -155.428, -30.9489, 0.1", "-17.5061, -156.033, -30.9326, 0.1", "-17.5235, -156.638, -30.8963, 0.1", "-17.5512, -157.303, -30.8213, 0.1", "-17.5819, -157.6, -30.7619, 0.1", "-17.8182, -158.738, -30.3465, 0.1", "-17.9603, -159.278, -30.1103, 0.14" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "6.32571, 166.373, 9.21736, 0.42", "7.06701, 167.189, 9.53881, 0.42", "7.31178, 167.465, 9.627, 0.28", "7.82264, 168.032, 9.76222, 0.14", "8.51498, 168.807, 9.87861, 0.1", "9.0254, 169.385, 9.93104, 0.1", "9.28368, 169.675, 9.94139, 0.1", "9.54513, 169.961, 9.91274, 0.14", "9.95592, 170.403, 9.85014, 0.28", "10.4772, 170.959, 9.72903, 0.14", "10.7336, 171.233, 9.63137, 0.1", "11.1626, 171.645, 9.51852, 0.14", "11.3703, 171.82, 9.49378, 0.28", "11.8549, 172.176, 9.49667, 0.56", "11.8549, 172.176, 9.49667, 0.42", "12.0808, 172.32, 9.51587, 0.56", "12.9452, 172.891, 9.54457, 0.56", "13.4377, 173.235, 9.52882, 0.42", "13.9434, 173.57, 9.5308, 0.28", "14.4531, 173.885, 9.52807, 0.14", "14.7838, 174.078, 9.52101, 0.1", "15.3052, 174.385, 9.49584, 0.1", "15.8186, 174.688, 9.44124, 0.1", "16.7596, 175.249, 9.35976, 0.14", "17.2231, 175.524, 9.35839, 0.28", "17.4518, 175.669, 9.37058, 0.42", "17.9601, 176.0, 9.40665, 0.56", "18.4543, 176.338, 9.45208, 0.42", "18.7619, 176.567, 9.48022, 0.56", "19.6251, 177.314, 9.51485, 0.42", "20.0681, 177.72, 9.56386, 0.28", "20.4634, 178.077, 9.63057, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "6.32571, 166.373, 9.21736, 0.98", "6.27314, 167.416, 9.45035, 0.98", "6.24182, 167.933, 9.54256, 0.84", "6.20879, 168.456, 9.5556, 0.7", "6.17457, 168.972, 9.52722, 0.56", "6.13874, 169.493, 9.47902, 0.42", "6.10142, 170.016, 9.42253, 0.28", "6.05785, 170.529, 9.32643, 0.42", "5.96679, 171.605, 9.11838, 0.28", "5.92302, 172.121, 9.02184, 0.14", "5.86268, 172.627, 8.90526, 0.1", "5.78774, 173.131, 8.77957, 0.1", "5.70178, 173.631, 8.65715, 0.1", "5.6058, 174.135, 8.54831, 0.1", "5.51791, 174.638, 8.49252, 0.1", "5.35264, 175.727, 8.41586, 0.1", "5.29323, 176.24, 8.39639, 0.1", "5.25568, 176.761, 8.43898, 0.1", "5.24369, 177.275, 8.55019, 0.1", "5.24368, 178.223, 8.87811, 0.1", "5.25171, 178.698, 9.09041, 0.1", "5.25845, 178.928, 9.20857, 0.1", "5.26315, 179.899, 9.70637, 0.1", "5.25564, 180.361, 9.94721, 0.1", "5.22402, 180.879, 10.2004, 0.1", "5.15387, 181.362, 10.3857, 0.1", "5.06852, 181.843, 10.565, 0.1", "5.06852, 181.843, 10.565, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-6.73512, 82.9393, -8.05106, 0.28", "-7.05426, 83.3842, -7.45801, 0.28", "-7.28588, 83.8644, -6.95159, 0.42", "-7.28588, 83.8644, -6.95159, 0.56", "-7.4676, 84.5182, -6.49749, 0.28", "-7.54394, 84.916, -6.29445, 0.28", "-7.60024, 85.334, -6.14036, 0.14", "-7.58227, 85.7895, -6.11084, 0.1", "-7.53417, 86.19, -6.15277, 0.1", "-7.47368, 86.5845, -6.23003, 0.1", "-7.31232, 87.3435, -6.49428, 0.1", "-7.22977, 87.7025, -6.65286, 0.1", "-7.07176, 88.4569, -6.99978, 0.1", "-7.00126, 88.8189, -7.15782, 0.1", "-6.96644, 89.0064, -7.22476, 0.14", "-6.8398, 89.8016, -7.39768, 0.1", "-6.8398, 89.8016, -7.39768, 0.1", "-6.75719, 90.6273, -7.32849, 0.1", "-6.73164, 91.0755, -7.23763, 0.1", "-6.70692, 91.5121, -7.13357, 0.1", "-6.68196, 91.954, -7.01627, 0.1", "-6.66476, 92.3858, -6.8938, 0.14", "-6.65572, 92.5788, -6.85361, 0.28", "-6.62695, 92.9764, -6.8038, 0.28", "-6.61373, 93.3806, -6.76227, 0.14", "-6.61552, 93.8358, -6.72498, 0.1", "-6.60647, 94.2421, -6.72163, 0.1", "-6.59038, 94.6425, -6.73864, 0.1", "-6.56663, 95.098, -6.77126, 0.1", "-6.54142, 95.5029, -6.81138, 0.14", "-6.5179, 95.9047, -6.86028, 0.28", "-6.49634, 96.7544, -6.92586, 0.42", "-6.4974, 97.1624, -6.93603, 0.28", "-6.51382, 97.5681, -6.92601, 0.14", "-6.5496, 97.9736, -6.89729, 0.1", "-6.59273, 98.3669, -6.84564, 0.14", "-6.68177, 99.2116, -6.7387, 0.1", "-6.71768, 99.6145, -6.70293, 0.1", "-6.7268, 100.023, -6.70438, 0.1", "-6.70626, 100.424, -6.75353, 0.1", "-6.65571, 100.855, -6.86104, 0.1", "-6.5313, 101.62, -7.13827, 0.1", "-6.41375, 102.263, -7.42763, 0.14", "-6.41375, 102.263, -7.42763, 0.28", "-6.39972, 102.655, -7.52538, 0.7", "-6.43368, 103.059, -7.56188, 0.56", "-6.50952, 103.45, -7.54017, 0.42", "-6.60998, 103.838, -7.47614, 0.28", "-6.82722, 104.621, -7.32132, 0.14", "-6.93129, 105.007, -7.25053, 0.28", "-7.03173, 105.394, -7.18593, 0.14", "-7.1268, 105.783, -7.13137, 0.1", "-7.21292, 106.172, -7.09179, 0.1", "-7.2897, 106.569, -7.0709, 0.1", "-7.34677, 106.971, -7.10077, 0.1", "-7.39746, 107.369, -7.15267, 0.1", "-7.44384, 107.767, -7.2218, 0.1", "-7.48621, 108.16, -7.30339, 0.1", "-7.52426, 108.546, -7.39662, 0.14", "-7.59923, 109.361, -7.61516, 0.28", "-7.61124, 109.743, -7.74218, 0.42", "-7.60378, 110.122, -7.88339, 0.28", "-7.59342, 110.309, -7.95461, 0.42", "-7.58246, 110.495, -8.02546, 0.56", "-7.58888, 110.884, -8.13348, 0.84", "-7.70739, 111.72, -8.25354, 0.7", "-7.7932, 112.105, -8.29678, 0.56", "-7.92917, 112.486, -8.2895, 0.56", "-8.04358, 112.739, -8.25669, 0.42", "-8.40805, 113.489, -8.09182, 0.28", "-8.61029, 113.867, -7.97325, 0.14", "-8.61029, 113.867, -7.97325, 0.14", "-8.92539, 114.59, -7.75063, 0.1", "-9.0372, 114.971, -7.66929, 0.1", "-9.09701, 115.422, -7.6159, 0.1", "-9.10112, 115.83, -7.60772, 0.1", "-9.07994, 116.228, -7.61107, 0.1", "-8.99097, 117.08, -7.6432, 0.1", "-8.92307, 117.478, -7.67912, 0.1", "-8.84481, 117.917, -7.71941, 0.14", "-8.78201, 118.317, -7.75423, 0.14", "-8.73304, 118.769, -7.78455, 0.1", "-8.72988, 118.973, -7.7908, 0.14", "-8.74254, 119.176, -7.80572, 0.28", "-8.76356, 119.619, -7.87745, 0.84", "-8.77445, 120.017, -7.9594, 0.7", "-8.76985, 120.458, -8.04863, 0.56", "-8.75934, 120.849, -8.12781, 0.42", "-8.72754, 121.663, -8.27594, 0.28", "-8.70099, 122.114, -8.34404, 0.14", "-8.66203, 122.558, -8.39609, 0.1", "-8.61568, 123.01, -8.42896, 0.1", "-8.61568, 123.01, -8.42896, 0.14", "-8.57404, 123.414, -8.406, 0.1", "-8.52468, 123.816, -8.37851, 0.1", "-8.46616, 124.213, -8.37385, 0.1", "-8.40142, 124.666, -8.3925, 0.1", "-8.34153, 125.117, -8.42726, 0.1", "-8.30821, 125.565, -8.44906, 0.1", "-8.29483, 126.345, -8.46852, 0.14", "-8.31621, 126.752, -8.46943, 0.28", "-8.37225, 127.2, -8.4619, 0.42", "-8.4579, 127.595, -8.44771, 0.28", "-8.69831, 128.411, -8.39505, 0.14", "-8.82841, 128.783, -8.35727, 0.1", "-8.95085, 129.168, -8.32243, 0.1", "-8.95085, 129.168, -8.32243, 0.1", "-8.99722, 129.571, -8.34185, 0.1", "-9.01397, 129.975, -8.3902, 0.1", "-9.00669, 130.373, -8.46056, 0.1", "-8.99294, 131.211, -8.60737, 0.1", "-8.98741, 131.612, -8.67668, 0.1", "-8.98739, 132.011, -8.74058, 0.14", "-8.99507, 132.414, -8.79783, 0.28", "-8.99351, 132.814, -8.86332, 0.14", "-8.99144, 133.209, -8.92844, 0.1", "-8.99144, 133.209, -8.92844, 0.14", "-8.97439, 133.609, -8.98741, 0.84", "-8.96274, 134.015, -9.02389, 0.7", "-8.95701, 134.871, -9.05361, 0.56", "-8.95436, 135.278, -9.04751, 0.42", "-8.97336, 135.723, -8.98911, 0.28", "-9.01406, 136.115, -8.89517, 0.14", "-9.14795, 136.887, -8.62403, 0.1", "-9.2365, 137.247, -8.46578, 0.14", "-9.31355, 137.492, -8.34502, 0.28", "-9.54511, 138.206, -8.0086, 0.56", "-9.666, 138.556, -7.8457, 0.7", "-9.78186, 138.91, -7.69344, 0.56", "-9.8828, 139.284, -7.57858, 0.42", "-9.98712, 139.663, -7.47649, 0.28", "-10.0372, 139.85, -7.44242, 0.14" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-6.73512, 82.9393, -8.05106, 0.1", "-7.38507, 82.7444, -8.13991, 0.1", "-8.03181, 82.5505, -8.22833, 0.14", "-8.35678, 82.4531, -8.27276, 0.28" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "5.28589, -206.426, -3.81418, 1.12", "5.46093, -207.528, -2.83486, 1.12", "5.49212, -207.923, -2.52413, 0.98", "5.4875, -208.234, -2.34643, 0.84", "5.35673, -209.559, -1.97299, 1.12", "5.28999, -210.338, -1.82268, 0.98", "5.28041, -211.127, -1.6487, 0.84", "5.28803, -211.63, -1.59319, 0.84", "5.43205, -213.092, -1.4909, 0.7", "5.6606, -214.585, -1.44927, 0.84", "5.90468, -215.892, -1.4779, 0.84", "6.2782, -217.309, -1.45578, 0.84", "6.49688, -217.993, -1.41393, 0.7", "6.75653, -218.739, -1.33266, 0.56", "6.86843, -219.075, -1.27168, 0.7", "6.99443, -219.55, -1.19251, 0.56", "7.08287, -220.262, -1.14302, 0.7", "7.09918, -220.981, -1.1109, 0.84", "7.05402, -221.703, -1.10042, 0.84", "6.93782, -222.505, -1.10251, 0.98", "6.80988, -223.203, -1.12427, 0.84", "6.60843, -224.208, -1.18596, 0.84", "6.51926, -224.699, -1.19545, 0.98", "6.33711, -226.02, -1.17169, 0.84", "6.30541, -226.531, -1.15297, 1.12", "6.3397, -227.249, -1.11828, 1.12", "6.44595, -227.949, -1.0736, 0.98", "6.80692, -229.367, -0.977083, 0.84", "7.00654, -230.051, -0.909657, 0.7", "7.15812, -230.532, -0.844801, 0.56", "7.33923, -231.229, -0.818136, 0.98", "7.48586, -231.931, -0.799702, 0.98", "7.62219, -232.634, -0.750078, 0.98", "7.70445, -233.125, -0.707591, 0.84", "7.83174, -233.826, -0.595669, 0.7", "8.10189, -235.237, -0.295808, 0.84", "8.3364, -236.575, -0.0615791, 0.84", "8.57311, -238.014, 0.118541, 0.98", "8.65178, -238.72, 0.111942, 0.98", "8.67739, -239.073, 0.064507, 0.98", "8.69891, -239.774, -0.0960929, 0.84", "8.7326, -241.17, -0.529667, 0.98", "8.73099, -241.832, -0.800534, 0.98", "8.71212, -243.16, -1.3943, 0.84", "8.72169, -243.81, -1.66453, 0.84", "8.76771, -244.476, -1.91369, 0.84", "8.89036, -245.234, -2.11549, 0.84", "9.08871, -245.918, -2.20569, 0.84", "9.34768, -246.582, -2.2463, 0.98", "9.66567, -247.222, -2.24327, 0.84", "10.0209, -247.926, -2.27873, 0.98", "10.5919, -249.109, -2.38197, 0.56", "10.8744, -249.835, -2.52063, 0.7", "11.0895, -250.572, -2.74581, 0.84", "11.2108, -251.302, -3.02515, 0.7", "11.3395, -252.54, -3.46826, 0.84", "11.3528, -253.031, -3.62, 0.84", "11.3674, -254.463, -3.93922, 0.7", "11.3834, -255.17, -3.96062, 0.84", "11.4216, -255.967, -3.83568, 0.84", "11.4916, -257.403, -3.52556, 0.7", "11.5415, -258.168, -3.31617, 0.56", "11.6251, -259.45, -2.96678, 0.42", "11.6738, -260.223, -2.74192, 0.42", "11.6984, -260.992, -2.54075, 0.56", "11.6704, -262.442, -2.28987, 0.56", "11.6025, -262.948, -2.28672, 0.84", "11.4678, -263.649, -2.36793, 0.84", "11.3725, -263.982, -2.45903, 0.98" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "5.28589, -206.426, -3.81418, 0.14", "5.44494, -206.693, -3.99055, 0.14", "5.70605, -207.117, -4.28145, 0.28", "5.89915, -207.378, -4.43071, 0.42", "6.23516, -207.798, -4.64041, 0.28", "6.57355, -208.228, -4.82689, 0.14", "6.78467, -208.506, -4.93818, 0.14", "6.98975, -208.783, -5.036, 0.28", "7.5367, -209.527, -5.28456, 0.28", "7.85699, -209.979, -5.43405, 0.14", "8.14507, -210.383, -5.58551, 0.1", "8.45363, -210.826, -5.77605, 0.1", "8.74863, -211.267, -5.9932, 0.14", "8.92753, -211.542, -6.15347, 0.28", "9.18853, -211.957, -6.44515, 0.14", "9.464, -212.357, -6.75672, 0.1", "9.74703, -212.727, -7.08083, 0.1", "9.90955, -212.956, -7.31059, 0.1", "10.0549, -213.177, -7.55755, 0.1", "10.1858, -213.392, -7.81224, 0.1", "10.3081, -213.605, -8.07758, 0.1", "10.5407, -214.026, -8.60611, 0.14", "10.861, -214.591, -9.33524, 0.28", "11.1083, -215.008, -9.86624, 0.14", "11.2372, -215.218, -10.1306, 0.1", "11.3689, -215.424, -10.3862, 0.1", "11.6566, -215.855, -10.8966, 0.14", "11.8099, -216.077, -11.1261, 0.28", "12.1569, -216.569, -11.5198, 0.14", "12.1569, -216.569, -11.5198, 0.28", "12.1569, -216.569, -11.5198, 0.42", "12.2439, -216.799, -11.608, 0.56", "12.384, -217.288, -11.7385, 0.42", "12.5142, -217.781, -11.8559, 0.28", "12.5763, -218.031, -11.9105, 0.28", "12.5763, -218.031, -11.9105, 0.28", "12.6506, -218.269, -11.9817, 0.28", "12.8345, -218.794, -12.1646, 0.14", "13.0263, -219.303, -12.3589, 0.1", "13.2032, -219.76, -12.5393, 0.1", "13.3954, -220.268, -12.7342, 0.1", "13.5801, -220.785, -12.9188, 0.14", "13.7561, -221.316, -13.0909, 0.28", "13.8266, -221.557, -13.157, 0.42", "13.874, -221.807, -13.2261, 0.28", "13.9308, -222.31, -13.3697, 0.14", "13.9477, -222.806, -13.5071, 0.1", "13.9347, -223.312, -13.6429, 0.1", "13.9055, -223.821, -13.777, 0.1", "13.846, -224.856, -14.0503, 0.14", "13.846, -224.856, -14.0503, 0.28", "13.8487, -225.108, -14.1254, 0.56", "13.8894, -225.605, -14.2844, 0.42", "13.9623, -226.091, -14.4443, 0.28", "14.0667, -226.579, -14.5985, 0.14", "14.228, -227.122, -14.7507, 0.1", "14.3938, -227.663, -14.9089, 0.14", "14.5664, -228.189, -15.077, 0.1", "14.5664, -228.189, -15.077, 0.14", "14.6918, -228.681, -15.3492, 0.1", "14.7181, -229.164, -15.6719, 0.14", "14.7181, -229.164, -15.6719, 0.28", "14.7208, -229.38, -15.8125, 0.56", "14.7495, -229.879, -16.1099, 0.42", "14.7611, -230.789, -16.7113, 0.28", "14.7606, -231.206, -17.0005, 0.14", "14.7588, -231.681, -17.3341, 0.1", "14.7527, -232.158, -17.6651, 0.1", "14.7458, -232.585, -17.9466, 0.1", "14.7403, -233.417, -18.4256, 0.1", "14.7403, -233.417, -18.4256, 0.1", "14.7632, -233.653, -18.5309, 0.1", "14.8227, -234.132, -18.7139, 0.1", "14.9113, -234.619, -18.8803, 0.1", "15.0343, -235.104, -19.0366, 0.1", "15.2032, -235.634, -19.1998, 0.1", "15.3847, -236.153, -19.3799, 0.14", "15.5625, -236.609, -19.5617, 0.1", "15.7468, -237.095, -19.8084, 0.1", "15.9223, -237.558, -20.0984, 0.1", "16.0325, -237.836, -20.3155, 0.1", "16.2012, -238.225, -20.6943, 0.1", "16.2851, -238.441, -20.9719, 0.14", "16.4691, -238.946, -21.7836, 0.28", "16.5091, -239.065, -22.0047, 0.7", "16.5977, -239.303, -22.504, 0.56", "16.7048, -239.53, -23.0127, 0.42", "16.9308, -239.901, -23.8774, 0.28", "17.0409, -240.04, -24.1893, 0.7", "17.1857, -240.179, -24.4863, 0.7", "17.428, -240.404, -24.9367, 0.56", "17.6609, -240.63, -25.4039, 0.42", "17.8048, -240.768, -25.6922, 0.28", "18.0651, -240.987, -26.1482, 0.14", "18.3092, -241.196, -26.6042, 0.1", "18.4551, -241.329, -26.9034, 0.1", "18.8323, -241.732, -27.8138, 0.1", "18.9326, -241.865, -28.1223, 0.14" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "20.7696, -170.326, -37.2615, 0.1", "21.0791, -170.998, -37.2829, 0.1", "21.2316, -171.366, -37.3042, 0.1", "21.3875, -171.782, -37.3333, 0.1", "21.5179, -172.162, -37.3621, 0.1", "21.6619, -172.581, -37.4007, 0.1", "21.7884, -172.954, -37.4382, 0.1", "21.9, -173.334, -37.498, 0.1", "22.0081, -173.718, -37.5553, 0.1", "22.1072, -174.103, -37.6062, 0.1", "22.1564, -174.38, -37.6544, 0.1", "22.1764, -174.575, -37.6939, 0.7", "22.1987, -174.968, -37.7842, 0.7", "22.2081, -175.358, -37.8789, 0.56", "22.2092, -175.75, -37.974, 0.7", "22.1998, -176.572, -38.1677, 0.56", "22.1933, -176.967, -38.2535, 0.42", "22.1932, -177.361, -38.3343, 0.28", "22.2024, -177.758, -38.4082, 0.14", "22.2316, -178.147, -38.4736, 0.28", "22.2589, -178.345, -38.5011, 0.28", "22.3407, -178.737, -38.5397, 0.28", "22.432, -179.127, -38.5849, 0.14", "22.5293, -179.513, -38.6345, 0.1", "22.6414, -179.941, -38.6925, 0.1", "22.7343, -180.324, -38.7728, 0.1", "22.8177, -180.703, -38.872, 0.1", "22.9032, -181.125, -39.0018, 0.1", "22.9708, -181.497, -39.1302, 0.14", "23.0274, -181.862, -39.2638, 0.28", "23.1245, -182.648, -39.5514, 0.42", "23.173, -183.02, -39.6899, 0.84", "23.173, -183.02, -39.6899, 0.7", "23.214, -183.211, -39.7379, 0.28", "23.3606, -183.582, -39.7656, 0.14", "23.5678, -183.918, -39.7029, 0.1", "23.8364, -184.233, -39.5597, 0.1", "24.0889, -184.497, -39.4116, 0.1", "24.6284, -185.009, -39.0585, 0.1", "25.1783, -185.494, -38.6867, 0.1", "25.6703, -185.918, -38.3654, 0.1", "26.2275, -186.414, -38.0195, 0.1", "26.4915, -186.664, -37.8674, 0.1", "26.9577, -187.192, -37.6766, 0.1", "27.0699, -187.581, -37.8547, 0.1", "27.0774, -188.211, -38.3915, 0.1", "27.0381, -188.781, -38.9562, 0.1", "26.9814, -189.289, -39.5049, 0.1", "26.9571, -189.552, -39.7965, 0.1", "26.9213, -190.061, -40.3455, 0.1", "26.9185, -190.199, -40.4861, 0.1", "26.9372, -190.516, -40.7855, 0.1", "26.9769, -190.849, -41.074, 0.1", "27.0085, -191.176, -41.3616, 0.1", "27.0267, -191.47, -41.6252, 0.1", "27.0329, -192.022, -42.1367, 0.1", "27.0054, -192.615, -42.7177, 0.1", "26.9678, -192.88, -42.9948, 0.1", "26.846, -193.419, -43.6029, 0.1", "26.7777, -193.673, -43.8956, 0.14", "26.6426, -194.209, -44.5038, 0.28", "26.6152, -194.346, -44.6429, 0.14", "26.5311, -194.929, -45.1897, 0.1", "26.4631, -195.531, -45.7549, 0.1", "26.4547, -195.679, -45.8823, 0.1", "26.4606, -196.031, -46.152, 0.1", "26.5178, -196.374, -46.3441, 0.1", "26.6389, -196.773, -46.494, 0.1", "26.9882, -197.527, -46.619, 0.14", "27.1756, -197.878, -46.6306, 0.28", "27.5041, -198.539, -46.6649, 0.84", "27.8068, -199.318, -46.7491, 0.7", "27.9196, -199.7, -46.8112, 0.56", "27.9657, -200.127, -46.9286, 0.42", "27.9485, -200.504, -47.0677, 0.28", "27.7765, -201.204, -47.4436, 0.14", "27.5393, -201.883, -47.8617, 0.1", "27.4712, -202.034, -47.9673, 0.1", "27.1674, -202.664, -48.4173, 0.1", "27.0187, -202.967, -48.6226, 0.1", "26.7228, -203.627, -49.0304, 0.1", "26.6027, -203.964, -49.2027, 0.1", "26.4047, -204.69, -49.5193, 0.1", "26.3247, -205.056, -49.6602, 0.1", "26.2713, -205.477, -49.7872, 0.1", "26.246, -205.867, -49.8812, 0.1", "26.2403, -206.26, -49.9652, 0.1", "26.2383, -206.458, -50.0089, 0.1", "26.2504, -206.657, -50.0375, 0.56", "26.2868, -207.055, -50.0903, 0.42", "26.3456, -207.444, -50.143, 0.28", "26.4827, -208.171, -50.2293, 0.14", "26.5689, -208.563, -50.2683, 0.1", "26.7566, -209.28, -50.3357, 0.1", "26.8693, -209.664, -50.3681, 0.1", "27.0118, -210.084, -50.4034, 0.1", "27.1505, -210.46, -50.4326, 0.1", "27.2937, -210.833, -50.4575, 0.1", "27.4409, -211.255, -50.5058, 0.1", "27.5544, -211.634, -50.5671, 0.1", "27.6746, -212.058, -50.6309, 0.14", "27.7807, -212.443, -50.6867, 0.28", "27.8846, -212.819, -50.7414, 0.14", "27.9874, -213.205, -50.7949, 0.1", "28.0826, -213.592, -50.843, 0.1", "28.1762, -213.982, -50.8899, 0.1", "28.238, -214.252, -50.9202, 0.1", "28.3304, -214.642, -50.9662, 0.84", "28.4254, -215.029, -51.0142, 0.7", "28.5231, -215.415, -51.0641, 0.56", "28.5231, -215.415, -51.0641, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "20.7696, -170.326, -37.2615, 0.28", "22.0325, -170.691, -36.1205, 0.28", "22.7012, -170.889, -35.5259, 0.14", "23.3814, -171.098, -34.9441, 0.1", "24.0628, -171.307, -34.3614, 0.1", "24.8672, -171.555, -33.6734, 0.1", "25.5454, -171.763, -33.0934, 0.14", "26.2442, -171.996, -32.5427, 0.28", "26.5084, -172.086, -32.3411, 0.42" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.9603, -159.278, -30.1103, 0.14", "-17.7172, -159.431, -30.0367, 0.14", "-17.3233, -159.675, -29.9058, 0.28", "-16.6634, -160.083, -29.6457, 0.14", "-16.2842, -160.324, -29.4761, 0.1", "-16.0472, -160.476, -29.3633, 0.1", "-15.3586, -160.939, -29.0191, 0.1", "-15.0023, -161.198, -28.8271, 0.1", "-14.6798, -161.479, -28.6192, 0.1", "-14.5038, -161.673, -28.4623, 0.1", "-14.5038, -161.673, -28.4623, 0.1", "-14.4212, -161.837, -28.3452, 0.1", "-14.2927, -162.217, -28.0751, 0.1", "-14.2069, -162.595, -27.7853, 0.1", "-14.1683, -162.833, -27.5912, 0.1", "-14.1155, -163.2, -27.2712, 0.1", "-14.0648, -163.559, -26.944, 0.1", "-14.034, -163.778, -26.7382, 0.1", "-13.9343, -164.485, -26.0572, 0.1", "-13.8832, -164.836, -25.7219, 0.1", "-13.8479, -165.058, -25.5143, 0.1", "-13.7896, -165.411, -25.1817, 0.1", "-13.7261, -165.763, -24.8577, 0.1", "-13.6763, -165.997, -24.6618, 0.1", "-13.5561, -166.386, -24.3988, 0.1", "-13.4782, -166.633, -24.2296, 0.1" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-17.9603, -159.278, -30.1103, 0.1", "-18.1425, -160.237, -29.8217, 0.1", "-18.2177, -160.737, -29.6874, 0.1", "-18.2815, -161.247, -29.561, 0.1", "-18.3365, -161.763, -29.4407, 0.1", "-18.3943, -162.279, -29.3331, 0.1", "-18.4605, -162.799, -29.2384, 0.1", "-18.5101, -163.323, -29.1731, 0.1", "-18.5672, -163.838, -29.1152, 0.1", "-18.6312, -164.365, -29.0601, 0.1", "-18.7062, -164.955, -29.0006, 0.1", "-18.7796, -165.535, -28.9421, 0.1", "-18.8433, -166.059, -28.8873, 0.1", "-18.9094, -166.585, -28.8336, 0.1", "-18.9731, -167.109, -28.7788, 0.1", "-19.0308, -167.636, -28.719, 0.1", "-19.077, -168.151, -28.653, 0.14", "-19.1471, -168.669, -28.5601, 0.28", "-19.2541, -169.241, -28.4356, 0.14", "-19.3978, -169.729, -28.287, 0.1", "-19.5744, -170.197, -28.1103, 0.1", "-19.6682, -170.416, -28.0161, 0.1", "-20.0893, -171.349, -27.5829, 0.1", "-20.2868, -171.791, -27.3701, 0.1", "-20.6754, -172.725, -26.9205, 0.1", "-20.8402, -173.193, -26.7401, 0.1", "-20.9792, -173.69, -26.6082, 0.1", "-21.0803, -174.205, -26.531, 0.1", "-21.1319, -174.736, -26.5159, 0.14", "-21.1583, -175.256, -26.5385, 0.1", "-21.15, -176.365, -26.6603, 0.14", "-21.1471, -176.958, -26.7292, 0.1", "-21.1471, -177.223, -26.7563, 0.14", "-21.1368, -177.477, -26.7896, 0.28", "-21.1185, -177.737, -26.8226, 0.28", "-21.0729, -178.264, -26.8704, 0.14", "-21.0254, -178.79, -26.885, 0.1", "-20.9675, -179.317, -26.8967, 0.1", "-20.8554, -180.392, -26.9133, 0.1", "-20.7968, -180.91, -26.912, 0.1", "-20.7367, -181.435, -26.8987, 0.1", "-20.6766, -181.959, -26.8741, 0.1", "-20.6463, -182.486, -26.8104, 0.1", "-20.6694, -183.003, -26.7, 0.1", "-20.7493, -183.342, -26.5607, 0.1", "-20.9189, -183.788, -26.3395, 1.12", "-20.9189, -183.788, -26.3395, 0.98", "-21.3421, -184.586, -25.8967, 0.28", "-21.5951, -185.056, -25.6451, 0.14", "-22.0428, -185.935, -25.214, 0.1", "-22.2724, -186.426, -24.999, 0.1", "-22.4454, -186.889, -24.8145, 0.1", "-22.5644, -187.378, -24.6424, 0.1", "-22.6098, -187.881, -24.4885, 0.1", "-22.6348, -188.378, -24.3132, 0.1", "-22.6418, -188.629, -24.2262, 0.1", "-22.6812, -189.179, -24.011, 0.1", "-22.7612, -189.719, -23.7965, 0.1", "-22.834, -190.055, -23.6671, 0.1", "-23.0829, -190.982, -23.3365, 0.1", "-23.2431, -191.52, -23.1681, 0.1", "-23.412, -192.074, -23.0226, 0.1", "-23.5168, -192.42, -22.9508, 0.1", "-23.6523, -192.929, -22.8674, 0.1", "-23.7561, -193.445, -22.7986, 0.1", "-23.8443, -193.962, -22.718, 0.1", "-23.9375, -194.474, -22.6031, 0.1", "-24.0645, -194.961, -22.4408, 0.1", "-24.2152, -195.423, -22.2518, 0.1", "-24.3902, -195.875, -22.0448, 0.1", "-24.7925, -196.688, -21.602, 0.1", "-25.019, -197.094, -21.36, 0.1", "-25.5204, -197.934, -20.8558, 0.1", "-25.7668, -198.337, -20.6273, 0.1", "-26.0144, -198.75, -20.4115, 0.1", "-26.5158, -199.654, -20.016, 0.1", "-26.7294, -200.116, -19.8649, 0.1", "-26.9683, -200.635, -19.6975, 0.1", "-27.184, -201.158, -19.5452, 0.1", "-27.2795, -201.395, -19.4737, 0.1", "-27.4747, -201.936, -19.3139, 0.1", "-27.6164, -202.428, -19.178, 0.1", "-27.8808, -203.434, -18.8746, 0.1", "-27.9899, -203.918, -18.7174, 0.1", "-28.0837, -204.415, -18.554, 0.1", "-28.1691, -204.915, -18.4045, 0.1", "-28.2401, -205.425, -18.2703, 0.1", "-28.3068, -205.942, -18.171, 0.1", "-28.3347, -206.205, -18.1404, 0.1", "-28.4051, -206.72, -18.0922, 0.1", "-28.4979, -207.308, -18.0464, 0.1", "-28.594, -207.829, -18.016, 0.1", "-28.7084, -208.405, -17.9884, 0.1", "-28.8126, -208.925, -17.9641, 0.1", "-28.9331, -209.51, -17.9393, 0.1", "-29.0384, -210.03, -17.9158, 0.1", "-29.1259, -210.611, -17.9128, 0.14", "-29.1861, -211.138, -17.9306, 0.1", "-29.2223, -211.669, -17.964, 0.1", "-29.2391, -212.254, -18.0172, 0.1", "-29.229, -212.78, -18.0699, 0.1", "-29.1819, -213.755, -18.1685, 0.14", "-29.1819, -213.755, -18.1685, 0.28", "-29.1543, -214.016, -18.2038, 0.28", "-29.0924, -214.534, -18.2824, 0.14", "-29.0305, -215.056, -18.3519, 0.1", "-28.9617, -215.562, -18.4361, 0.1", "-28.9103, -216.081, -18.5326, 0.1", "-28.8251, -217.162, -18.7831, 0.1", "-28.7993, -217.671, -18.9261, 0.1", "-28.7954, -218.173, -19.088, 0.1", "-28.8312, -219.191, -19.4291, 0.1", "-28.8676, -219.755, -19.6086, 0.1", "-28.9239, -220.319, -19.756, 0.1", "-28.9704, -220.689, -19.809, 0.1", "-29.0364, -221.273, -19.8509, 0.1", "-29.0871, -221.803, -19.8372, 0.1", "-29.1146, -222.167, -19.7868, 0.1", "-29.1284, -222.691, -19.6951, 0.1", "-29.1311, -223.269, -19.585, 0.1", "-29.1383, -223.792, -19.4887, 0.1", "-29.1548, -224.314, -19.3996, 0.1", "-29.2093, -224.831, -19.2964, 0.1", "-29.3082, -225.395, -19.1709, 0.1", "-29.4354, -225.882, -19.0077, 0.1", "-29.6079, -226.402, -18.7824, 0.1", "-29.6886, -226.626, -18.6661, 0.1", "-29.9944, -227.387, -18.1481, 0.1", "-30.1519, -227.773, -17.845, 0.1", "-30.4616, -228.583, -17.1686, 0.1", "-30.5953, -228.966, -16.8516, 0.1", "-30.7132, -229.369, -16.54, 0.1", "-30.9247, -230.266, -15.9389, 0.1", "-31.0003, -230.727, -15.6918, 0.1", "-31.0468, -231.215, -15.4976, 0.1", "-31.057, -231.732, -15.3746, 0.1", "-31.0529, -232.256, -15.2994, 0.1", "-31.035, -232.784, -15.2703, 0.1", "-31.0043, -233.306, -15.2854, 0.1", "-30.938, -234.384, -15.3407, 0.14", "-30.9123, -234.913, -15.3812, 0.28", "-30.8955, -235.507, -15.4337, 0.14", "-30.8956, -236.029, -15.4754, 0.1", "-30.9053, -236.292, -15.4875, 0.14", "-30.9053, -236.292, -15.4875, 0.28", "-30.9883, -236.649, -15.3993, 0.1", "-31.0986, -237.143, -15.238, 0.1", "-31.1944, -237.629, -15.0533, 0.1", "-31.28, -238.107, -14.8635, 0.1", "-31.4336, -239.1, -14.4702, 0.1", "-31.4962, -239.589, -14.2809, 0.1", "-31.5511, -240.141, -14.0718, 0.1", "-31.592, -240.638, -13.8977, 0.1", "-31.6221, -241.144, -13.7408, 0.1", "-31.647, -241.658, -13.6151, 0.1", "-31.6627, -242.182, -13.5249, 0.1", "-31.6967, -242.696, -13.45, 0.1", "-31.758, -243.22, -13.3934, 0.1", "-31.8423, -243.746, -13.3534, 0.1", "-31.9558, -244.333, -13.323, 0.14", "-32.0654, -244.846, -13.3041, 0.1", "-32.1474, -245.214, -13.2929, 0.1", "-32.2842, -245.797, -13.2805, 0.1", "-32.4171, -246.369, -13.2672, 0.1", "-32.5289, -246.888, -13.2487, 0.1", "-32.6332, -247.412, -13.2239, 0.1", "-32.7298, -247.933, -13.1938, 0.1", "-32.8214, -248.513, -13.1485, 0.1", "-32.9008, -249.039, -13.1048, 0.14", "-32.9784, -249.563, -13.0603, 0.1", "-33.0663, -250.141, -13.0127, 0.14", "-33.1513, -250.664, -12.9737, 0.1", "-33.2442, -251.189, -12.9402, 0.1", "-33.3505, -251.777, -12.9043, 0.1", "-33.4479, -252.292, -12.876, 0.1", "-33.5659, -252.807, -12.821, 0.1", "-33.7111, -253.377, -12.7261, 0.1", "-33.8661, -253.932, -12.6068, 0.1", "-33.9371, -254.18, -12.5418, 0.1", "-34.0697, -254.67, -12.3921, 0.14", "-34.3008, -255.577, -12.0972, 0.42", "-34.4095, -256.067, -11.932, 0.28", "-34.496, -256.564, -11.7642, 0.14", "-34.5697, -257.057, -11.6145, 0.1", "-34.6372, -257.568, -11.4851, 0.1", "-34.6922, -258.086, -11.383, 0.1", "-34.7309, -258.612, -11.3094, 0.1", "-34.7717, -259.136, -11.2377, 0.1", "-34.8177, -259.715, -11.1591, 0.1", "-34.8862, -260.233, -11.0668, 0.1", "-34.9768, -260.743, -10.9552, 0.1", "-35.0911, -261.248, -10.832, 1.26", "-35.2201, -261.745, -10.7005, 1.12", "-35.3644, -262.24, -10.5676, 0.98", "-35.6485, -263.181, -10.3141, 0.84", "-35.8087, -263.672, -10.1957, 0.7", "-35.9909, -264.227, -10.0784, 0.56", "-36.1434, -264.718, -9.99034, 0.42", "-36.2994, -265.289, -9.90625, 0.28", "-36.4052, -265.808, -9.84109, 0.14", "-36.477, -266.389, -9.78102, 0.1", "-36.4973, -266.92, -9.73701, 0.1", "-36.4957, -267.445, -9.67178, 0.1", "-36.4792, -267.97, -9.58907, 0.1", "-36.4683, -268.539, -9.44551, 0.1", "-36.4727, -269.043, -9.2795, 0.1", "-36.5074, -270.072, -8.87242, 0.1", "-36.5733, -270.967, -8.48632, 0.56", "-36.6261, -271.445, -8.27152, 0.42", "-36.8259, -272.385, -7.79674, 0.28", "-36.9776, -272.817, -7.53494, 0.14", "-37.155, -273.227, -7.2607, 0.1", "-37.3484, -273.629, -6.98265, 0.1", "-37.5317, -274.046, -6.72178, 0.1", "-37.9112, -274.93, -6.18615, 0.1", "-38.2558, -275.824, -5.69722, 0.1", "-38.4267, -276.268, -5.46615, 0.14", "-38.5895, -276.721, -5.25196, 0.28", "-38.6706, -276.95, -5.14542, 0.98", "-38.8172, -277.416, -4.9474, 1.12", "-38.9603, -277.881, -4.75894, 0.98", "-39.1365, -278.406, -4.54288, 0.84", "-39.3262, -278.842, -4.31149, 0.7", "-39.7423, -279.687, -3.79807, 0.56", "-39.9633, -280.067, -3.53095, 0.42", "-40.4586, -280.847, -2.93337, 0.28", "-40.6945, -281.212, -2.645, 0.14", "-41.1632, -281.969, -2.05418, 0.1", "-41.3815, -282.345, -1.78008, 0.1", "-41.8342, -283.179, -1.21701, 0.14", "-42.0457, -283.578, -0.951125, 0.1", "-42.2359, -284.0, -0.699378, 0.1", "-42.4207, -284.42, -0.461351, 0.14", "-42.4988, -284.654, -0.36391, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-8.35678, 82.4531, -8.27276, 0.28", "-8.40929, 82.1744, -8.21538, 0.28", "-8.45532, 81.7498, -8.09318, 0.14", "-8.46259, 81.3698, -7.96514, 0.1", "-8.45117, 81.1811, -7.89589, 0.1", "-8.37994, 80.4886, -7.63815, 0.1", "-8.33723, 80.0733, -7.48361, 0.1", "-8.28065, 79.6704, -7.30616, 0.1", "-8.20829, 79.2772, -7.10528, 0.1", "-8.11963, 78.8962, -6.8997, 0.1", "-8.06488, 78.7255, -6.81151, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-8.35678, 82.4531, -8.27276, 0.1", "-8.60721, 82.8512, -8.73943, 0.1", "-8.723, 83.0539, -8.97043, 0.1", "-8.97321, 83.4727, -9.42018, 0.1", "-9.31848, 84.0544, -10.0063, 0.1", "-9.54791, 84.414, -10.3144, 0.1", "-9.99168, 85.0578, -10.7572, 0.1", "-10.2744, 85.4602, -10.9677, 0.1", "-10.6731, 85.9689, -11.1139, 0.1", "-10.8297, 86.1467, -11.1162, 0.1", "-11.5187, 86.8445, -10.9863, 0.1", "-12.1449, 87.4309, -10.8372, 0.1", "-12.1449, 87.4309, -10.8372, 0.1", "-12.6338, 87.8639, -10.7464, 0.1", "-13.0109, 88.2247, -10.7533, 0.1", "-13.238, 88.4651, -10.8223, 0.1", "-13.6393, 88.9244, -11.0719, 0.1", "-13.8307, 89.1529, -11.2202, 0.1", "-14.123, 89.5099, -11.4614, 0.1", "-14.6016, 90.1247, -11.9138, 0.1", "-14.8648, 90.4717, -12.1979, 0.1", "-15.1079, 90.8216, -12.5056, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "11.3725, -263.982, -2.45903, 0.84", "11.5449, -264.23, -2.44266, 0.84", "11.8765, -264.719, -2.42837, 0.98", "12.1976, -265.229, -2.42741, 0.84", "12.8064, -266.339, -2.5445, 0.7", "13.0892, -266.941, -2.63784, 0.56", "13.3421, -267.57, -2.75477, 0.42", "13.4309, -267.84, -2.81683, 0.56", "13.5687, -268.413, -2.97122, 0.7", "13.7262, -269.513, -3.31075, 0.56", "13.759, -269.927, -3.42973, 0.84", "13.8312, -270.523, -3.54735, 0.84", "13.9459, -271.118, -3.60855, 0.84", "14.1206, -271.7, -3.63492, 0.84", "14.1206, -271.7, -3.63492, 0.98", "14.6182, -272.705, -3.60694, 0.1", "14.9292, -273.309, -3.60442, 0.14", "15.1945, -273.841, -3.61051, 0.1", "15.4754, -274.461, -3.63225, 0.14", "15.7198, -275.096, -3.67183, 0.28", "15.8085, -275.384, -3.69751, 0.42", "15.9074, -275.791, -3.75383, 0.84", "16.039, -276.384, -3.82502, 0.84", "16.1652, -276.976, -3.89139, 0.84", "16.282, -277.572, -3.94942, 0.7", "16.4085, -278.167, -4.01587, 0.56", "16.5086, -278.584, -4.07253, 0.56", "16.5847, -278.873, -4.11777, 0.84", "16.7144, -279.442, -4.25248, 0.84", "16.826, -280.014, -4.42127, 0.7", "16.9388, -280.641, -4.63943, 0.84", "17.0307, -281.204, -4.84944, 0.7", "17.1213, -281.762, -5.06559, 0.84", "17.3234, -282.93, -5.53251, 0.7", "17.3907, -283.206, -5.63181, 0.84", "17.582, -283.831, -5.82022, 0.7", "17.7795, -284.389, -5.9466, 0.84", "18.0312, -285.013, -6.04423, 0.7", "18.2753, -285.566, -6.08942, 0.56", "18.837, -286.707, -6.08905, 0.7", "19.1097, -287.25, -6.07619, 0.84", "19.3819, -287.789, -6.04084, 0.98", "19.6614, -288.326, -5.99007, 0.84", "19.7941, -288.594, -5.95463, 0.84" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "11.3725, -263.982, -2.45903, 1.26", "11.1756, -264.499, -2.35918, 1.26", "11.0002, -265.034, -2.26691, 1.12", "10.911, -265.371, -2.21707, 0.98", "10.7968, -265.925, -2.14787, 0.84", "10.7052, -266.477, -2.08754, 0.7", "10.6665, -266.831, -2.03032, 0.56", "10.6664, -267.33, -1.93602, 0.1", "10.7195, -267.826, -1.83264, 0.1", "10.8156, -268.303, -1.73115, 0.1", "10.8874, -268.541, -1.68295, 0.1", "11.2085, -269.403, -1.52148, 0.1", "11.3988, -269.853, -1.40674, 0.1", "11.6143, -270.345, -1.2556, 0.1", "11.7968, -270.791, -1.10702, 0.1", "11.9802, -271.294, -0.945315, 0.1", "12.048, -271.529, -0.8783, 0.1", "12.244, -272.456, -0.668762, 0.28", "12.3137, -272.936, -0.555075, 0.14", "12.3616, -273.488, -0.427928, 0.28", "12.3884, -273.984, -0.325397, 0.42", "12.4029, -274.537, -0.230332, 0.56", "12.4241, -275.042, -0.177173, 0.42", "12.4699, -275.61, -0.169825, 0.28", "12.5476, -276.11, -0.177915, 0.14", "12.6108, -276.356, -0.191686, 0.28", "12.6849, -276.588, -0.210318, 0.98", "12.8746, -277.119, -0.260812, 0.84", "13.0646, -277.643, -0.311721, 0.7", "13.243, -278.178, -0.35761, 0.56", "13.3279, -278.519, -0.375649, 0.42", "13.3928, -278.872, -0.354725, 0.1", "13.4467, -279.423, -0.264834, 0.14", "13.4543, -279.914, -0.140484, 0.28", "13.4381, -280.456, 0.0326757, 0.42", "13.4015, -280.98, 0.229, 0.28", "13.3124, -281.9, 0.531425, 0.14", "13.2692, -282.445, 0.666472, 0.1", "13.2692, -282.445, 0.666472, 0.14", "13.2857, -282.682, 0.747982, 0.14", "13.3606, -282.982, 0.909922, 0.14", "13.6887, -283.73, 1.5171, 0.28", "13.8573, -284.078, 1.82765, 0.28", "14.1818, -284.808, 2.45505, 0.42", "14.4512, -285.506, 2.99465, 0.56", "14.7242, -286.302, 3.56735, 0.42", "14.9683, -287.042, 4.06575, 0.28", "15.1036, -287.509, 4.34915, 0.14", "15.2496, -288.528, 4.61261, 0.1", "15.1953, -289.444, 4.4171, 0.14", "15.1668, -289.679, 4.327, 0.56", "15.0933, -290.115, 4.09178, 0.42", "15.0195, -290.539, 3.83442, 0.28", "14.9538, -290.967, 3.58423, 0.28", "14.8459, -291.905, 3.11875, 0.14", "14.7923, -292.365, 2.92409, 0.1", "14.6718, -293.314, 2.54412, 0.1", "14.6431, -293.555, 2.47129, 0.14", "14.6126, -293.908, 2.41032, 0.28", "14.5904, -294.407, 2.40495, 0.14", "14.5993, -294.971, 2.48611, 0.1", "14.6202, -295.467, 2.59069, 0.14", "14.6985, -296.494, 2.85863, 0.1", "14.7454, -296.984, 2.97559, 0.1", "14.812, -297.538, 3.08987, 0.1", "14.8758, -298.024, 3.17531, 0.1", "14.9418, -298.525, 3.24331, 0.1", "15.0006, -299.027, 3.28375, 0.1", "15.0453, -299.535, 3.28888, 0.1", "15.0846, -300.041, 3.29602, 0.1", "15.0993, -300.295, 3.30156, 0.14", "15.1103, -300.648, 3.31294, 0.1", "15.1087, -301.155, 3.33611, 0.14", "15.0977, -301.726, 3.36581, 0.1", "15.0873, -302.236, 3.39252, 0.1", "15.0693, -302.799, 3.38248, 0.1", "15.0538, -303.307, 3.34515, 0.1", "15.0467, -303.869, 3.31114, 0.1", "15.0466, -304.378, 3.28814, 0.1", "15.052, -304.886, 3.27571, 0.1", "15.0707, -305.925, 3.277, 0.14", "15.0762, -306.178, 3.28476, 0.28", "15.0778, -307.151, 3.35313, 0.7", "15.0782, -307.65, 3.40328, 0.56", "15.0659, -308.217, 3.48017, 0.42", "15.0532, -308.72, 3.56057, 0.28", "15.0462, -309.275, 3.65718, 0.14", "15.0378, -309.841, 3.72481, 0.1", "15.0327, -310.349, 3.74931, 0.1", "15.0393, -310.91, 3.77169, 0.1", "15.064, -311.417, 3.78456, 0.1", "15.1042, -311.922, 3.79132, 0.1", "15.1398, -312.174, 3.78862, 0.56", "15.2335, -312.674, 3.77426, 0.42", "15.3301, -313.162, 3.7582, 0.28", "15.4258, -313.658, 3.74287, 0.14", "15.5107, -314.16, 3.73202, 0.14", "15.5819, -314.719, 3.72905, 0.28", "15.6061, -314.973, 3.73088, 0.42", "15.6302, -315.332, 3.73746, 0.1", "15.6548, -315.895, 3.75282, 0.1", "15.67, -316.404, 3.76954, 0.1", "15.6848, -316.976, 3.78919, 0.1", "15.7119, -317.485, 3.80122, 0.1", "15.7381, -317.727, 3.80174, 0.14", "15.7804, -317.978, 3.79639, 0.56", "15.9003, -318.472, 3.81484, 0.42", "16.04, -318.955, 3.85825, 0.28", "16.2124, -319.484, 3.92415, 0.14", "16.3699, -319.961, 3.99549, 0.1", "16.535, -320.424, 4.10306, 0.1", "16.8798, -321.356, 4.37609, 0.14", "17.0452, -321.796, 4.52511, 0.1", "17.2096, -322.246, 4.68634, 0.1", "17.356, -322.699, 4.84979, 0.1", "17.6063, -323.553, 5.13196, 0.56", "17.7173, -324.036, 5.23231, 0.7", "17.8104, -324.532, 5.29808, 0.56", "17.8972, -325.027, 5.35568, 0.42", "17.9855, -325.579, 5.40229, 0.28", "18.0488, -326.081, 5.42534, 0.14", "18.1483, -327.114, 5.4215, 0.28", "18.1965, -328.052, 5.37351, 0.7", "18.2077, -328.55, 5.3285, 0.56", "18.2124, -329.054, 5.26817, 0.42", "18.2036, -329.61, 5.15082, 0.28", "18.1868, -330.106, 5.05223, 0.14", "18.1301, -331.154, 4.87487, 0.1", "18.082, -331.651, 4.77936, 0.1", "18.0266, -332.148, 4.69825, 0.1", "17.9073, -333.17, 4.56162, 0.1", "17.7943, -334.132, 4.48193, 0.1", "17.7316, -334.7, 4.48329, 0.1", "17.6818, -335.256, 4.54923, 0.1", "17.657, -335.505, 4.58474, 0.1", "17.657, -335.505, 4.58474, 0.1", "17.6075, -335.862, 4.58509, 0.1", "17.5399, -336.363, 4.51856, 0.1", "17.4827, -336.913, 4.42317, 0.1", "17.4343, -337.411, 4.33071, 0.1", "17.3457, -338.459, 4.14081, 0.1", "17.3157, -338.957, 4.05469, 0.1", "17.3021, -339.451, 3.97318, 0.1", "17.3023, -339.952, 3.90066, 0.1", "17.3184, -340.31, 3.85976, 0.1", "17.3613, -340.816, 3.82638, 0.1", "17.4388, -341.317, 3.81834, 0.1", "17.5294, -341.806, 3.84116, 0.1", "17.6361, -342.3, 3.89035, 0.14", "17.7553, -342.787, 3.95743, 0.28", "17.8863, -343.271, 4.03525, 0.28", "18.023, -343.807, 4.13617, 0.42", "18.2442, -344.733, 4.32304, 0.56", "18.3494, -345.209, 4.41834, 0.42", "18.4479, -345.7, 4.50883, 0.28", "18.5369, -346.192, 4.58768, 0.14", "18.6182, -346.744, 4.69964, 0.1", "18.6641, -347.228, 4.80801, 0.1", "18.7003, -347.715, 4.94923, 0.1", "18.7222, -348.18, 5.14529, 0.14", "18.7248, -348.405, 5.26199, 0.28", "18.6987, -349.314, 5.80039, 0.1", "18.6735, -349.79, 6.10447, 0.1", "18.606, -350.592, 6.63487, 0.1", "18.5603, -351.059, 6.93206, 0.1", "18.5092, -351.566, 7.18306, 0.1", "18.4838, -351.906, 7.27377, 0.1", "18.4774, -352.161, 7.27195, 0.14", "18.4832, -352.41, 7.23415, 0.56", "18.5096, -352.9, 7.10581, 0.42", "18.5928, -353.916, 6.81458, 0.28", "18.6331, -354.401, 6.68102, 0.14", "18.6618, -354.895, 6.56681, 0.1", "18.6606, -355.386, 6.44455, 0.14", "18.648, -355.632, 6.38327, 0.28", "18.6173, -355.974, 6.30672, 0.7", "18.5577, -356.533, 6.21264, 0.56", "18.4956, -357.067, 6.05945, 0.42", "18.4072, -357.939, 5.73732, 0.28", "18.392, -358.169, 5.6418, 0.1", "18.3847, -358.634, 5.44409, 0.1", "18.4138, -359.095, 5.24595, 0.1", "18.5467, -360.087, 4.89468, 0.1", "18.6328, -360.571, 4.78287, 0.1", "18.7251, -361.067, 4.74531, 0.1", "18.8005, -361.562, 4.75157, 0.1", "18.8694, -362.119, 4.80702, 0.14", "18.9672, -363.072, 4.9808, 0.1", "19.0146, -363.62, 5.1259, 0.1", "19.0607, -364.163, 5.26298, 0.1", "19.1089, -364.717, 5.38447, 0.1", "19.1652, -365.215, 5.46215, 0.1", "19.1998, -365.458, 5.47972, 0.1", "19.2457, -365.704, 5.45213, 0.1", "19.3817, -366.248, 5.33605, 0.1", "19.5087, -366.706, 5.2012, 0.1", "19.652, -367.22, 5.02047, 0.1", "19.7652, -367.679, 4.85148, 0.1", "19.9537, -368.571, 4.53651, 0.1", "19.9537, -368.571, 4.53651, 0.14", "20.0001, -368.919, 4.4428, 0.28", "20.0609, -369.412, 4.33918, 0.28", "20.1196, -369.91, 4.2699, 0.14", "20.1888, -370.413, 4.23186, 0.1", "20.2661, -370.904, 4.22354, 0.1", "20.3551, -371.405, 4.24676, 0.1", "20.446, -371.901, 4.29827, 0.1", "20.5315, -372.396, 4.37674, 0.1", "20.6029, -372.887, 4.47729, 0.1", "20.6633, -373.377, 4.59197, 0.1", "20.7641, -374.313, 4.82283, 0.1", "20.8176, -374.864, 4.95652, 0.1", "20.8631, -375.357, 5.06636, 0.1", "20.8914, -375.913, 5.13804, 0.1", "20.9027, -376.42, 5.1523, 0.1", "20.9068, -376.929, 5.11573, 0.1", "20.9102, -377.428, 5.03364, 0.1", "20.9066, -377.91, 4.91078, 0.1", "20.8862, -378.939, 4.63722, 0.1", "20.8774, -379.427, 4.50702, 0.1", "20.8668, -379.92, 4.38643, 0.1", "20.8621, -380.416, 4.28555, 0.1", "20.8637, -381.313, 4.1657, 0.1", "20.8958, -382.282, 4.11858, 0.1", "20.9373, -382.788, 4.13977, 0.1", "20.9707, -383.296, 4.17127, 0.1", "20.9924, -383.801, 4.21254, 0.1", "21.028, -384.354, 4.3023, 0.1", "21.0726, -384.848, 4.40701, 0.1", "21.1191, -385.347, 4.49845, 0.1", "21.1771, -385.894, 4.61349, 0.1", "21.2437, -386.445, 4.73953, 0.1", "21.3689, -387.444, 4.98322, 0.1", "21.4287, -387.934, 5.10493, 0.1", "21.4712, -388.416, 5.2232, 0.1", "21.494, -388.912, 5.33909, 0.1", "21.4913, -389.162, 5.37067, 0.1", "21.4662, -389.521, 5.40263, 0.1", "21.3928, -390.077, 5.42435, 0.1", "21.313, -390.643, 5.45744, 0.1", "21.2796, -390.998, 5.50985, 0.1", "21.2494, -392.009, 5.7238, 0.1", "21.3239, -392.929, 6.02825, 0.1", "21.4097, -393.391, 6.21728, 0.1", "21.528, -393.835, 6.42121, 0.1", "21.8138, -394.725, 6.84571, 0.1", "21.957, -395.151, 7.0535, 0.1", "22.2389, -396.037, 7.48876, 0.1", "22.3542, -396.496, 7.66816, 0.1", "22.4369, -396.965, 7.83682, 0.1", "22.4639, -397.46, 7.95233, 0.14", "22.4424, -397.813, 8.00531, 0.1", "22.3702, -398.375, 8.07419, 0.1", "22.2725, -398.928, 8.11497, 0.1", "22.2113, -399.282, 8.1457, 0.1", "22.0592, -400.337, 8.2414, 0.1", "21.9708, -401.303, 8.32369, 0.1", "21.954, -401.81, 8.32398, 0.1", "21.9693, -402.317, 8.32495, 0.1", "22.0173, -402.825, 8.32827, 0.1", "22.0965, -403.323, 8.37862, 0.1", "22.1977, -403.804, 8.46942, 0.1", "22.374, -404.743, 8.63768, 0.1", "22.5557, -405.667, 8.86211, 0.28", "22.6534, -406.146, 9.00177, 0.28", "22.8631, -407.141, 9.32017, 0.14", "22.9425, -407.618, 9.44337, 0.1", "23.013, -408.176, 9.54344, 0.14", "23.0375, -408.429, 9.56759, 0.7", "23.0535, -408.928, 9.48688, 0.56", "23.0392, -409.414, 9.34176, 0.56", "22.9556, -410.395, 8.95611, 0.42", "22.8958, -410.863, 8.77412, 0.28", "22.8183, -411.33, 8.6029, 0.14", "22.6171, -412.298, 8.30377, 0.1", "22.5353, -412.637, 8.22059, 0.1", "22.3966, -413.175, 8.13841, 0.1", "22.2562, -413.726, 8.11847, 0.1", "22.1584, -414.069, 8.12628, 0.14", "21.9886, -414.612, 8.13695, 0.1", "21.8192, -415.147, 8.15759, 0.1", "21.6332, -415.684, 8.15452, 0.14", "21.429, -416.206, 8.13148, 0.14", "21.2827, -416.532, 8.11131, 0.28", "20.8479, -417.347, 7.9859, 0.42", "20.8479, -417.347, 7.9859, 0.56", "20.5544, -417.806, 7.87595, 0.56", "20.3637, -418.099, 7.80958, 0.42", "19.993, -418.692, 7.69367, 0.28", "19.4994, -419.513, 7.5912, 0.42", "19.229, -419.999, 7.57595, 0.28", "18.9617, -420.497, 7.53246, 0.14", "18.8079, -420.817, 7.48992, 0.1", "18.711, -421.049, 7.45514, 0.14", "18.5277, -421.573, 7.37566, 0.7", "18.3595, -422.106, 7.32, 0.56", "18.0163, -423.109, 7.21068, 0.42", "17.8435, -423.581, 7.16403, 0.28", "17.6477, -424.041, 7.10145, 0.14", "17.5387, -424.267, 7.06839, 0.28", "17.2881, -424.762, 6.99891, 0.28", "17.0162, -425.248, 6.95106, 0.14", "16.8362, -425.556, 6.94354, 0.1", "16.2208, -426.519, 6.93757, 0.1", "16.028, -426.819, 6.94158, 0.1", "15.7419, -427.295, 6.95257, 0.1", "15.5704, -427.614, 6.96077, 0.1", "15.3229, -428.123, 6.98363, 0.1", "15.0947, -428.633, 7.03435, 0.1", "14.8978, -429.148, 7.13417, 0.14", "14.8131, -429.384, 7.17774, 0.28", "14.8131, -429.384, 7.17774, 0.84", "14.8131, -429.384, 7.17774, 0.84", "14.7223, -429.729, 7.2285, 0.28", "14.5972, -430.281, 7.30193, 0.14", "14.4755, -430.824, 7.37358, 0.1", "14.3409, -431.374, 7.45062, 0.14", "14.2011, -431.911, 7.52907, 0.1", "14.1338, -432.154, 7.56614, 0.1", "13.9687, -432.693, 7.65459, 0.14", "13.7873, -433.214, 7.74859, 0.28", "13.5265, -433.866, 7.8794, 0.14", "13.3829, -434.187, 7.94976, 0.1", "13.2316, -434.503, 8.02291, 0.1", "12.9207, -435.121, 8.17181, 0.1", "12.761, -435.437, 8.24824, 0.1", "12.4589, -436.061, 8.39395, 0.1", "12.3173, -436.383, 8.46355, 0.1", "12.1078, -436.892, 8.56799, 0.1", "11.9828, -437.222, 8.63152, 0.1", "11.7995, -437.742, 8.72619, 0.1", "11.6226, -438.277, 8.81904, 0.1", "11.4588, -438.805, 8.90647, 0.1", "11.3557, -439.15, 8.9621, 0.1", "11.1978, -439.69, 9.04777, 0.1", "11.1054, -440.026, 9.09877, 0.1", "10.9611, -440.572, 9.17943, 0.1", "10.8263, -441.111, 9.25603, 0.14", "10.6824, -441.663, 9.29427, 0.1", "10.5587, -442.21, 9.29626, 0.1", "10.5062, -442.459, 9.28955, 0.1", "10.3905, -443.018, 9.26657, 0.1", "10.2763, -443.567, 9.24062, 0.1", "10.0515, -444.612, 9.19149, 0.1", "9.59898, -446.652, 9.10986, 0.1", "9.46426, -447.196, 9.09732, 0.1", "9.36363, -447.546, 9.09969, 0.1", "9.18402, -448.075, 9.12647, 0.1", "9.04622, -448.404, 9.16786, 0.14", "8.77521, -448.894, 9.2595, 0.14", "8.46614, -449.28, 9.32671, 0.28", "8.10382, -449.694, 9.39513, 0.14", "7.7223, -450.098, 9.45476, 0.1", "7.32435, -450.478, 9.50092, 0.1", "6.61578, -451.112, 9.54644, 0.1", "6.42486, -451.271, 9.54343, 0.1" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-15.1079, 90.8216, -12.5056, 0.14", "-16.154, 91.7346, -11.4262, 0.14", "-16.6775, 92.1571, -10.7872, 0.1", "-17.0187, 92.4434, -10.3839, 0.14", "-17.5567, 92.925, -9.7979, 0.28", "-18.5061, 93.8315, -8.8658, 0.14", "-20.3335, 95.6861, -7.2655, 0.1", "-20.3335, 95.6861, -7.2655, 0.14", "-20.8945, 96.2738, -6.80384, 0.28", "-21.4754, 96.9153, -6.44487, 0.14", "-22.0978, 97.6283, -6.36305, 0.1", "-22.5919, 98.2168, -6.91094, 0.1", "-22.8111, 98.4621, -7.40275, 0.1", "-23.0334, 98.6902, -8.26822, 0.14", "-23.3892, 98.9575, -9.7391, 0.1", "-23.7795, 99.1445, -11.3779, 0.1", "-24.4002, 99.3281, -14.2931, 0.1", "-24.6518, 99.3636, -15.8081, 0.1", "-24.9113, 99.3836, -18.7807, 0.1", "-24.5878, 99.4485, -21.835, 0.1", "-25.4695, 99.238, -20.5209, 0.1", "-27.6732, 98.7222, -18.4386, 0.14", "-27.98, 98.6518, -18.1703, 0.28", "-28.6512, 98.518, -17.5536, 0.84", "-29.2444, 98.4269, -16.9745, 0.7", "-30.0384, 98.4895, -16.7458, 0.56", "-31.2638, 99.2633, -17.2834, 0.42", "-31.4993, 99.5214, -17.5188, 0.28", "-31.9603, 100.214, -17.9549, 0.1", "-32.3176, 100.962, -18.1723, 0.1", "-32.6741, 101.843, -18.0804, 0.1", "-32.9704, 102.563, -17.7274, 0.1", "-33.5322, 103.635, -16.8243, 0.14", "-34.2717, 104.773, -15.6763, 0.56", "-35.0238, 105.726, -14.4636, 0.42", "-35.8361, 106.581, -13.2303, 0.28", "-36.6358, 107.3, -12.1175, 0.42", "-37.6389, 108.057, -10.885, 0.56", "-38.3743, 108.526, -10.1043, 0.42", "-39.5459, 109.149, -9.21329, 0.56", "-40.341, 109.473, -8.87899, 0.7", "-41.229, 109.74, -8.78405, 0.84", "-42.0208, 109.912, -8.95837, 0.7", "-42.7668, 110.01, -9.31521, 0.84", "-44.0527, 110.063, -10.2494, 0.7", "-44.6736, 110.053, -10.8052, 0.56", "-45.2353, 110.001, -11.4141, 0.42", "-46.3308, 109.866, -12.7072, 0.28", "-46.8433, 109.794, -13.3565, 0.14", "-47.86, 109.623, -14.7001, 0.1", "-48.3671, 109.508, -15.3486, 0.1", "-49.2548, 109.287, -16.6565, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-15.1079, 90.8216, -12.5056, 0.1", "-15.5851, 90.6466, -10.737, 0.1", "-15.802, 90.5401, -9.72081, 0.1", "-15.954, 90.43, -8.79308, 0.1", "-16.1663, 90.1485, -6.91566, 0.1", "-16.1976, 90.0589, -6.4229, 0.1", "-16.1969, 90.0022, -6.17265, 0.1", "-16.0711, 89.8195, -5.64112, 0.1", "-15.9286, 89.6707, -5.35079, 0.28", "-15.5899, 89.3822, -4.98284, 0.14", "-15.3407, 89.1786, -4.82472, 0.1", "-14.851, 88.7131, -4.52317, 0.1", "-14.851, 88.7131, -4.52317, 0.14", "-14.851, 88.7131, -4.52317, 0.28", "-14.6248, 88.4665, -4.38835, 0.14", "-14.2468, 88.0884, -4.15824, 0.1", "-13.9865, 87.873, -4.03591, 0.1", "-13.5301, 87.5672, -3.85311, 0.1", "-13.041, 87.3058, -3.71964, 0.1", "-12.5383, 87.0553, -3.58624, 0.1", "-12.1039, 86.8351, -3.44418, 0.1", "-11.2409, 86.325, -3.02989, 0.1", "-10.8975, 86.0397, -2.77248, 0.1", "-10.4062, 85.4227, -2.17523, 0.1", "-10.0852, 84.7604, -1.55759, 0.1", "-9.76167, 83.9639, -0.878505, 0.1", "-9.47176, 83.1411, -0.265671, 0.1", "-9.29836, 82.6752, 0.0345945, 0.1", "-9.17002, 82.3733, 0.209491, 0.1", "-8.9107, 81.9224, 0.466438, 0.1", "-8.29089, 81.2374, 0.84213, 0.1", "-7.86426, 80.9182, 1.05382, 0.1", "-7.14532, 80.525, 1.60194, 0.1", "-6.59038, 80.2659, 2.32448, 0.1", "-6.34044, 80.152, 2.758, 0.1", "-5.89152, 79.952, 3.67469, 0.1", "-5.68434, 79.8536, 4.1337, 0.1", "-5.25099, 79.6459, 5.06101, 0.1", "-4.94023, 79.4758, 5.68534, 0.1", "-4.76425, 79.3698, 5.99013, 0.1", "-4.48127, 79.1848, 6.45454, 0.1", "-4.17033, 78.9881, 6.88653, 0.1", "-3.96384, 78.8662, 7.15963, 0.14", "-3.74371, 78.7655, 7.41954, 0.28", "-3.16063, 78.5546, 8.13495, 0.28", "-2.84665, 78.4597, 8.52629, 0.14", "-2.49174, 78.3745, 8.96884, 0.1", "-2.1634, 78.3243, 9.35669, 0.1", "-1.8175, 78.3029, 9.72343, 0.1", "-1.54616, 78.3049, 9.97137, 0.14", "-1.54616, 78.3049, 9.97137, 0.28", "-1.34068, 78.303, 10.1252, 0.28", "-0.931872, 78.3013, 10.4316, 0.28", "-0.520364, 78.2849, 10.738, 0.14", "-0.117878, 78.2679, 11.0375, 0.1", "0.342037, 78.2536, 11.3805, 0.1", "0.803561, 78.2319, 11.7236, 0.1", "1.20844, 78.1997, 12.0228, 0.1", "1.67019, 78.1396, 12.3607, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "19.7941, -288.594, -5.95463, 0.84", "20.0691, -289.298, -5.51383, 0.84", "20.3267, -290.094, -5.0891, 0.84", "20.4637, -290.555, -4.89687, 0.98", "20.5923, -291.025, -4.74737, 0.84", "20.6781, -291.337, -4.67327, 0.7", "20.7995, -291.776, -4.58887, 0.7", "20.8317, -291.998, -4.59447, 0.56", "20.8185, -292.497, -4.72785, 0.56", "20.6782, -292.841, -4.97159, 0.7", "20.5557, -293.065, -5.16929, 0.84", "20.5557, -293.065, -5.16929, 0.98", "20.2425, -293.651, -5.67289, 1.12", "19.9369, -294.257, -6.15414, 0.98", "19.2446, -295.442, -7.10167, 0.84", "19.6682, -296.104, -6.79335, 0.84", "20.1019, -296.837, -6.41508, 0.7", "20.5214, -297.573, -6.02622, 0.56", "20.6271, -297.749, -5.92514, 0.42", "21.0415, -298.398, -5.52117, 0.1", "21.2761, -298.787, -5.2861, 0.14", "21.4265, -299.254, -5.12102, 0.28", "21.445, -299.707, -5.08153, 0.42", "21.4086, -299.934, -5.11246, 0.56", "21.3544, -300.15, -5.17222, 0.84", "21.0517, -300.95, -5.54038, 0.84", "20.8901, -301.321, -5.75027, 0.84", "20.5923, -301.957, -6.1483, 0.84", "20.5018, -302.13, -6.26454, 0.84", "20.3144, -302.465, -6.50019, 0.84", "19.9327, -303.15, -6.98002, 0.7", "19.8499, -303.33, -7.09125, 0.56", "19.5291, -304.08, -7.53218, 0.56", "19.3858, -304.467, -7.71092, 0.7", "19.2293, -304.859, -7.8808, 0.84", "19.2293, -304.859, -7.8808, 0.84", "19.1764, -305.074, -7.94437, 0.98", "19.0557, -305.492, -8.08631, 1.12", "18.8038, -306.373, -8.37869, 0.98", "18.6877, -306.797, -8.5168, 0.84", "18.576, -307.22, -8.65286, 0.84", "18.46, -307.642, -8.79279, 0.7", "18.2313, -308.412, -9.06338, 0.56" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "19.7941, -288.594, -5.95463, 1.26", "19.8583, -288.735, -6.3194, 1.26", "20.0487, -289.152, -7.40181, 1.4", "20.1115, -289.29, -7.75857, 1.26", "20.3021, -289.707, -8.84188, 1.12", "20.3648, -289.844, -9.19862, 0.7", "20.429, -289.985, -9.5634, 0.84" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.42486, -451.271, 9.54343, 0.1", "6.14205, -450.239, 10.2228, 0.1", "5.79625, -449.121, 10.7258, 0.1", "5.63429, -448.597, 10.9613, 0.1", "5.4499, -448.001, 11.2295, 0.1", "5.28876, -447.479, 11.4639, 0.1", "5.124, -446.946, 11.7035, 0.1", "4.75008, -445.889, 11.8142, 0.1" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "6.42486, -451.271, 9.54343, 0.1", "6.04337, -451.936, 9.51833, 0.1", "5.692, -452.618, 9.5259, 0.1", "5.14441, -453.808, 9.58427, 0.1", "4.82702, -454.508, 9.6532, 0.1", "4.52654, -455.198, 9.74418, 0.1", "4.3251, -455.639, 9.78333, 0.1", "4.01325, -456.33, 9.82739, 0.1", "3.70038, -457.032, 9.879, 0.1", "3.41185, -457.733, 9.9508, 0.1", "3.1431, -458.451, 10.0519, 0.1", "2.74003, -459.639, 10.2677, 0.1", "2.60895, -460.088, 10.3666, 0.1", "2.46075, -460.808, 10.6081, 0.1", "2.36799, -461.506, 10.9223, 0.1", "2.27643, -462.775, 11.5914, 0.14", "2.26379, -463.192, 11.8396, 0.28", "2.27257, -463.834, 12.2412, 0.14", "2.30645, -464.96, 12.9124, 0.1", "2.28072, -465.804, 13.372, 0.1", "2.22226, -466.506, 13.6897, 0.1", "2.1871, -466.83, 13.8031, 0.14", "2.11487, -467.482, 13.9835, 0.28", "2.07757, -467.813, 14.0636, 0.42", "1.8567, -469.822, 14.4836, 0.83", "1.65473, -472.445, 14.9987, 0.28", "1.56705, -474.143, 15.3077, 0.55", "1.39225, -478.5, 16.1084, 0.55", "1.35828, -480.306, 16.4464, 0.28", "1.37215, -482.019, 16.7494, 0.55", "1.4295, -484.468, 17.1054, 0.28", "1.48968, -486.158, 17.2892, 0.55", "1.55038, -487.657, 17.396, 0.28", "1.66638, -489.87, 17.4682, 0.55", "1.79781, -492.593, 17.5307, 0.55", "1.86459, -495.036, 17.5968, 0.28", "1.90767, -497.791, 17.6314, 0.55", "1.92259, -500.296, 17.6562, 0.28", "1.9026, -503.05, 17.6815, 0.55", "1.8498, -504.462, 17.7233, 0.28", "1.62272, -507.483, 17.9834, 0.55", "1.42002, -509.335, 18.2934, 0.28", "1.12058, -510.965, 18.6172, 0.55", "0.762871, -512.328, 18.9546, 0.28", "0.415847, -513.474, 19.2505, 0.55", "-0.113674, -515.083, 19.668, 0.28", "-1.42356, -518.718, 20.6958, 0.55", "-3.13885, -523.156, 22.0584, 0.55", "-4.07596, -525.639, 22.7739, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "18.2313, -308.412, -9.06338, 0.7", "18.1663, -308.874, -8.83464, 0.7", "18.1294, -309.175, -8.69742, 0.84", "18.0736, -309.787, -8.45962, 0.7", "18.0203, -310.096, -8.37203, 0.56", "17.9256, -310.546, -8.27687, 0.7", "17.876, -310.774, -8.2429, 0.56", "17.8093, -311.1, -8.23642, 0.56", "17.6877, -311.548, -8.28824, 0.56", "17.4264, -312.352, -8.46413, 0.7", "17.3632, -312.561, -8.51029, 0.84", "17.2427, -313.007, -8.58901, 0.7", "17.1519, -313.463, -8.6474, 0.56", "17.0444, -314.416, -8.70374, 0.42", "17.0444, -314.416, -8.70374, 0.56", "17.1181, -315.312, -8.6249, 0.56", "17.2074, -315.819, -8.54174, 0.7", "17.3185, -316.262, -8.43523, 0.56", "17.4686, -316.749, -8.30038, 0.7", "17.6108, -317.167, -8.17458, 0.84", "17.7367, -317.605, -8.05332, 0.84", "17.9333, -318.461, -7.8529, 0.84", "18.0466, -318.958, -7.74326, 0.7", "18.1437, -319.41, -7.65118, 0.56", "18.2441, -319.923, -7.56655, 0.56", "18.3278, -320.432, -7.50305, 0.56", "18.3875, -320.897, -7.47134, 0.56", "18.4578, -321.364, -7.45989, 0.7", "18.5826, -321.815, -7.43231, 0.84", "18.75, -322.25, -7.38896, 0.7", "18.9454, -322.664, -7.33166, 0.56", "19.1613, -323.07, -7.2605, 0.56", "19.6094, -323.891, -7.07441, 0.42", "20.0227, -324.659, -6.87776, 0.56", "20.2236, -325.065, -6.76523, 0.7", "20.3449, -325.354, -6.68166, 0.56", "20.4797, -325.785, -6.55873, 0.42", "20.5739, -326.286, -6.42269, 0.56", "20.5668, -326.739, -6.32795, 0.7", "20.4993, -327.254, -6.23821, 0.56", "20.4084, -327.759, -6.14546, 0.56", "20.3021, -328.267, -6.05539, 0.56", "20.2261, -328.586, -5.99868, 0.7", "20.0317, -329.536, -5.8199, 0.56", "19.9538, -330.049, -5.72043, 0.7", "19.9613, -330.561, -5.6246, 0.56", "20.0132, -330.788, -5.58596, 0.7", "20.1067, -331.002, -5.55979, 0.7", "20.5447, -331.742, -5.51995, 0.56", "20.8117, -332.123, -5.519, 0.56", "21.3285, -332.945, -5.59863, 0.42", "21.5396, -333.353, -5.66943, 0.56", "21.7277, -333.829, -5.7749, 0.56", "21.851, -334.32, -5.88884, 0.56", "21.8908, -334.776, -5.9944, 0.42", "21.8653, -335.719, -6.15974, 0.56", "21.8238, -336.185, -6.1947, 0.42", "21.8102, -336.412, -6.177, 0.56", "21.8043, -336.928, -6.06218, 0.56", "21.8219, -337.239, -5.96472, 0.7", "21.8898, -337.731, -5.78547, 0.56", "22.0741, -338.551, -5.46422, 0.56", "22.1875, -339.029, -5.29922, 0.42", "22.2949, -339.471, -5.18459, 0.28", "22.4064, -339.925, -5.11792, 0.28", "22.4572, -340.153, -5.10465, 0.42", "22.4999, -340.384, -5.11025, 0.56", "22.5608, -340.848, -5.15281, 0.56", "22.6248, -341.303, -5.20349, 0.56", "22.6898, -341.765, -5.25509, 0.56", "22.755, -342.228, -5.30692, 0.7", "22.8199, -342.69, -5.35847, 0.56", "22.8851, -343.154, -5.4102, 0.56", "22.9255, -343.607, -5.48019, 0.7", "22.9426, -344.07, -5.56115, 0.7", "22.9034, -344.527, -5.65439, 0.7", "22.819, -344.974, -5.75557, 0.56", "22.7038, -345.416, -5.86126, 0.56", "22.4516, -346.246, -6.06361, 0.56", "22.3696, -346.56, -6.13111, 0.84", "22.1823, -347.507, -6.30227, 0.84", "22.1211, -347.966, -6.36964, 0.7", "22.1056, -348.435, -6.41747, 0.7", "22.1494, -348.902, -6.4421, 0.7", "22.3565, -349.84, -6.45084, 0.84", "22.4838, -350.282, -6.46025, 0.7", "22.4838, -350.282, -6.46025, 0.84", "22.6365, -350.724, -6.46862, 0.56", "22.7756, -351.173, -6.49577, 0.56", "22.8873, -351.624, -6.54681, 0.42", "22.9683, -352.079, -6.6344, 0.56", "22.9683, -352.079, -6.6344, 0.56", "23.03, -352.298, -6.67978, 0.56", "23.2076, -352.782, -6.77213, 0.56", "23.3889, -353.205, -6.84341, 0.56", "23.5998, -353.68, -6.8999, 0.56", "23.6932, -353.892, -6.91657, 0.7", "24.036, -354.682, -6.96993, 0.7", "24.2194, -355.109, -7.00096, 0.56", "24.4014, -355.54, -7.039, 0.42", "24.5989, -356.02, -7.11311, 0.28", "24.6793, -356.235, -7.1584, 0.14", "24.776, -356.541, -7.23856, 0.7", "24.8842, -357.028, -7.37857, 0.7", "24.9481, -357.345, -7.45584, 0.56", "25.0337, -357.85, -7.54359, 0.42", "25.0625, -358.083, -7.5609, 0.56", "25.0836, -358.416, -7.54258, 0.84", "25.1304, -358.925, -7.43551, 0.7", "25.19, -359.426, -7.28328, 0.7", "25.2349, -359.742, -7.17322, 0.7", "25.3204, -360.226, -7.00708, 0.56", "25.4275, -360.723, -6.86125, 0.7", "25.6741, -361.655, -6.65832, 0.84", "25.8112, -362.098, -6.59447, 0.7", "25.887, -362.321, -6.58016, 0.56", "26.0623, -362.809, -6.60168, 0.42", "26.22, -363.243, -6.67921, 0.28", "26.2981, -363.545, -6.78834, 0.28", "26.3252, -363.746, -6.89638, 1.12", "26.3586, -363.948, -7.00743, 0.7", "26.4445, -364.397, -7.24201, 0.56", "26.5363, -364.867, -7.44714, 0.42", "26.7049, -365.693, -7.73478, 0.28", "26.7696, -366.008, -7.8137, 0.42", "26.9436, -366.88, -7.94941, 0.56", "27.0322, -367.339, -7.98255, 0.56", "27.0909, -367.855, -7.99739, 0.42", "27.1485, -368.321, -7.97413, 0.42", "27.2108, -368.786, -7.92163, 0.28", "27.2497, -369.31, -7.85334, 0.28", "27.2585, -369.78, -7.80355, 0.28", "27.2826, -370.643, -7.70102, 0.42", "27.3236, -371.54, -7.59903, 0.42", "27.3517, -372.064, -7.53145, 0.28", "27.3873, -372.58, -7.46624, 0.42", "27.4262, -373.048, -7.40871, 0.28", "27.4705, -373.513, -7.35309, 0.42", "27.5229, -373.977, -7.30408, 0.56", "27.5535, -374.496, -7.27067, 0.56", "27.5832, -374.964, -7.24497, 0.42", "27.6139, -375.491, -7.21029, 0.28", "27.6372, -375.951, -7.17229, 0.28", "27.649, -376.186, -7.1526, 0.14", "27.6678, -376.519, -7.12928, 0.56", "27.7005, -376.988, -7.11006, 0.42", "27.7418, -377.506, -7.09983, 0.56", "27.7818, -377.974, -7.0963, 0.56", "27.8191, -378.445, -7.08651, 0.42", "27.8563, -378.914, -7.07683, 0.28", "27.8686, -379.386, -7.08352, 0.14", "27.8571, -379.855, -7.09823, 0.1", "27.8495, -380.374, -7.1139, 0.14", "27.8471, -380.904, -7.12126, 0.1", "27.8547, -381.366, -7.12289, 0.1", "27.898, -382.236, -7.12479, 0.1", "27.898, -382.236, -7.12479, 0.14", "28.0219, -383.097, -7.15326, 0.1", "28.1111, -383.556, -7.18201, 0.14", "28.215, -384.014, -7.21561, 0.1", "28.325, -384.469, -7.24557, 0.14", "28.4411, -384.924, -7.27283, 0.28", "28.5301, -385.376, -7.30244, 0.42", "28.5852, -385.843, -7.3317, 0.28", "28.6302, -386.311, -7.3391, 0.28", "28.6627, -386.779, -7.3192, 0.42", "28.6739, -387.015, -7.29835, 0.56", "28.6832, -387.339, -7.25617, 0.42", "28.6856, -387.86, -7.16145, 0.28", "28.68, -388.377, -7.05031, 0.14", "28.6708, -388.885, -6.93306, 0.1", "28.6853, -389.113, -6.87329, 0.14", "28.6853, -389.113, -6.87329, 0.28", "28.7687, -389.428, -6.80402, 0.56", "28.9169, -389.855, -6.71552, 0.56", "29.0113, -390.066, -6.67376, 0.7", "29.4191, -390.812, -6.52741, 0.56", "29.6559, -391.204, -6.44584, 0.42", "29.7832, -391.395, -6.40687, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "18.2313, -308.412, -9.06338, 2.38", "18.2946, -308.519, -9.33612, 2.38", "18.4013, -308.79, -9.94078, 2.24", "18.4887, -309.124, -10.521, 2.1", "18.5764, -309.516, -11.0515, 1.96", "18.7295, -310.277, -11.8595, 1.82", "18.7295, -310.277, -11.8595, 1.68", "18.7297, -310.516, -12.0462, 0.1", "18.709, -311.034, -12.3778, 0.1", "18.6955, -311.63, -12.7096, 0.1", "18.7113, -312.177, -12.9955, 0.1", "18.8405, -313.315, -13.5916, 0.1", "18.9272, -313.905, -13.9223, 0.1", "19.0269, -314.425, -14.2359, 0.1", "19.1661, -314.982, -14.5991, 0.1", "19.2786, -315.329, -14.8333, 0.14", "19.4192, -315.658, -15.0595, 0.28", "19.5669, -315.995, -15.298, 0.7", "19.7583, -316.512, -15.6888, 0.56", "19.8274, -316.845, -15.9561, 0.42", "19.8191, -317.354, -16.4006, 0.28", "19.7319, -317.853, -16.8565, 0.14", "19.5149, -318.79, -17.6945, 0.1", "19.4527, -319.017, -17.8882, 0.14", "19.1724, -319.95, -18.6609, 0.1", "18.89, -320.835, -19.3683, 0.14", "18.89, -320.835, -19.3683, 0.28", "18.7107, -321.768, -19.9854, 0.28", "18.7022, -322.312, -20.272, 0.42", "18.7287, -322.701, -20.4686, 0.56", "18.7287, -322.701, -20.4686, 0.7", "18.7203, -322.963, -20.6245, 0.84", "18.6618, -323.531, -21.0065, 0.7", "18.5047, -324.517, -21.7527, 0.56", "18.3931, -325.032, -22.1866, 0.42", "18.1915, -325.962, -23.0358, 0.28", "18.1538, -326.18, -23.2453, 0.42", "18.0993, -326.464, -23.55, 0.7", "18.0575, -326.745, -23.8782, 0.56", "18.0271, -327.54, -24.8639, 0.42", "18.044, -327.955, -25.3984, 0.28", "18.1099, -328.361, -25.9263, 0.14", "18.2645, -329.067, -26.8297, 0.28", "18.4195, -329.587, -27.4864, 0.42", "18.5254, -329.852, -27.8055, 0.28", "18.8081, -330.38, -28.4046, 0.14", "18.9691, -330.65, -28.7037, 0.28", "19.2904, -331.06, -29.1255, 0.42", "19.6727, -331.468, -29.4895, 0.28", "20.0821, -331.884, -29.8339, 0.14", "20.3462, -332.145, -30.0402, 0.28", "20.7772, -332.561, -30.3587, 0.14", "21.5929, -333.32, -30.9628, 0.14", "22.0322, -333.71, -31.2994, 0.1", "22.3012, -333.947, -31.5153, 0.1", "22.8399, -334.426, -31.9839, 0.1", "23.0893, -334.661, -32.2238, 0.14", "23.463, -335.045, -32.6388, 0.1", "23.7946, -335.415, -33.0806, 0.14", "24.0067, -335.656, -33.3627, 0.28", "24.3318, -336.055, -33.7914, 0.14", "24.5353, -336.322, -34.0574, 0.1", "24.9779, -336.881, -34.53, 0.14", "25.2121, -337.176, -34.7384, 0.14", "25.5932, -337.647, -35.0337, 0.28", "25.9885, -338.128, -35.313, 0.14", "26.2391, -338.432, -35.4788, 0.1", "26.9936, -339.341, -35.9724, 0.14", "27.4194, -339.811, -36.2032, 0.28", "27.6985, -340.111, -36.3379, 0.14", "28.1686, -340.562, -36.5111, 0.1", "28.6526, -341.005, -36.6627, 0.1", "29.1636, -341.442, -36.7793, 0.1", "30.1259, -342.254, -36.9708, 0.14", "30.5972, -342.631, -37.0432, 0.28", "31.496, -343.353, -37.1672, 0.28", "32.0184, -343.783, -37.2429, 0.14", "32.9742, -344.608, -37.4114, 0.1", "33.4508, -345.071, -37.5316, 0.1", "33.7257, -345.383, -37.6505, 0.14", "34.1239, -345.877, -37.8834, 0.28", "34.4775, -346.398, -38.1696, 0.14", "34.6738, -346.724, -38.3563, 0.1", "34.9435, -347.261, -38.6855, 0.1", "35.2361, -347.805, -38.9666, 0.1", "35.4359, -348.168, -39.1018, 0.1", "35.4359, -348.168, -39.1018, 0.14", "35.7192, -348.716, -39.1318, 0.84", "35.7192, -348.716, -39.1318, 0.7", "36.1926, -349.8, -39.0032, 0.1", "36.4106, -350.365, -38.9248, 0.1", "36.6079, -350.953, -38.8565, 0.1", "36.7915, -351.547, -38.8291, 0.1", "36.8795, -351.846, -38.84, 0.1", "36.9626, -352.144, -38.8811, 0.56", "37.1158, -352.724, -39.0329, 0.42", "37.286, -353.29, -39.2116, 0.28", "37.4895, -353.914, -39.4321, 0.28", "37.6182, -354.297, -39.5729, 0.56", "37.8228, -354.92, -39.7952, 0.42", "37.9493, -355.305, -39.9324, 0.28", "38.0393, -355.585, -40.0294, 0.56", "38.2109, -356.154, -40.2099, 0.42", "38.3714, -356.728, -40.3734, 0.28", "38.5288, -357.304, -40.5318, 0.42", "38.7024, -357.955, -40.7047, 0.56", "38.7818, -358.241, -40.7853, 0.7", "38.8689, -358.524, -40.8776, 0.84", "39.0806, -359.139, -41.1113, 0.7", "39.3108, -359.724, -41.3761, 0.56", "39.5228, -360.244, -41.6223, 0.42", "39.7574, -360.833, -41.8931, 0.28", "39.899, -361.202, -42.0549, 0.14", "40.117, -361.81, -42.2987, 0.1", "40.3141, -362.598, -42.6024, 0.1", "40.3797, -363.004, -42.7534, 0.84", "40.4308, -363.584, -42.961, 0.7", "40.4061, -364.163, -43.1827, 0.56", "40.3306, -364.733, -43.4071, 0.42", "40.1227, -365.876, -43.8851, 0.28", "40.0675, -366.155, -44.0056, 0.42", "40.038, -366.437, -44.1295, 0.56", "40.024, -367.636, -44.6262, 0.42", "40.08, -368.217, -44.8384, 0.28", "40.2154, -368.863, -45.0288, 0.14", "40.4029, -369.437, -45.1634, 0.1", "40.8474, -370.637, -45.4114, 0.1", "41.0791, -371.202, -45.5049, 0.1", "41.3318, -371.767, -45.5656, 0.1", "41.5648, -372.337, -45.6276, 0.1", "41.712, -372.748, -45.6798, 0.1", "41.7997, -373.043, -45.7281, 0.56", "41.9229, -373.642, -45.8331, 0.42", "42.0399, -374.245, -45.9286, 0.28", "42.1487, -374.844, -46.0127, 0.14", "42.27, -375.518, -46.1054, 0.1", "42.3827, -376.125, -46.194, 0.1", "42.5165, -376.803, -46.3047, 0.14", "42.6121, -377.403, -46.4453, 0.1", "42.6482, -377.697, -46.5321, 0.1", "42.705, -378.352, -46.7564, 0.1", "42.7403, -378.995, -46.9951, 0.1", "42.7729, -379.563, -47.2342, 0.1", "42.8453, -380.641, -47.7159, 0.1", "42.8878, -380.926, -47.8303, 0.56", "43.0221, -381.494, -48.0309, 0.42", "43.1956, -382.057, -48.1926, 0.28", "43.4402, -382.687, -48.3483, 0.42", "43.6937, -383.223, -48.473, 0.28", "44.3038, -384.341, -48.7193, 0.14", "44.64, -384.923, -48.8757, 0.1", "44.9446, -385.417, -49.0475, 0.1", "45.2614, -385.968, -49.3089, 0.1", "45.4305, -386.314, -49.5086, 0.42", "45.6359, -386.853, -49.8654, 0.28", "45.7525, -387.198, -50.0996, 0.14", "46.0576, -387.895, -50.4987, 0.1", "46.6516, -388.832, -50.8781, 0.1", "47.0152, -389.302, -50.9864, 0.14", "47.4173, -389.758, -51.0366, 0.28", "48.3577, -390.63, -51.006, 0.28", "49.3095, -391.42, -50.9113, 0.14", "50.312, -392.195, -50.7814, 0.1", "50.557, -392.372, -50.7521, 0.14", "50.9113, -392.612, -50.7169, 0.28", "51.878, -393.242, -50.6208, 0.7", "52.4397, -393.616, -50.5534, 0.56", "52.986, -394.001, -50.4793, 0.42", "53.3299, -394.253, -50.4253, 0.56", "54.2221, -394.916, -50.2762, 0.1", "55.2066, -395.639, -50.0673, 0.1", "56.1689, -396.386, -49.8389, 0.1", "56.6306, -396.75, -49.7237, 0.1", "56.95, -397.023, -49.6476, 0.14", "57.2542, -397.328, -49.5978, 0.28", "57.9606, -398.217, -49.599, 0.28", "58.3143, -398.718, -49.6216, 0.14", "58.6873, -399.299, -49.6461, 0.1", "59.0391, -399.802, -49.6128, 0.1", "59.4241, -400.361, -49.5355, 0.14", "59.593, -400.616, -49.4913, 0.28", "60.199, -401.611, -49.3003, 0.1", "60.4923, -402.143, -49.1904, 0.1", "60.9846, -403.294, -48.9795, 0.1", "61.2208, -403.855, -48.8628, 0.1", "61.3271, -404.142, -48.801, 0.1", "61.4293, -404.56, -48.7509, 0.1", "61.2944, -405.813, -48.9262, 0.1", "60.819, -406.788, -49.2721, 0.1" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "29.7832, -391.395, -6.40687, 0.28", "30.4885, -391.451, -7.04992, 0.28", "30.9106, -391.485, -7.43473, 0.14", "31.2929, -391.516, -7.78333, 0.1", "31.7217, -391.55, -8.17423, 0.1", "31.9128, -391.565, -8.34852, 0.1" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "29.7832, -391.395, -6.40687, 0.42", "29.9787, -391.936, -6.28806, 0.42", "30.154, -392.482, -6.14216, 0.28", "30.3049, -393.026, -5.97749, 0.14", "30.4288, -393.568, -5.80462, 0.1", "30.6234, -394.628, -5.45875, 0.14", "30.7153, -395.251, -5.24883, 0.14", "30.7737, -395.859, -5.01931, 0.28", "30.789, -396.252, -4.86244, 0.28", "30.8097, -396.844, -4.59178, 0.14", "30.8194, -397.439, -4.30149, 0.1", "30.8156, -397.809, -4.12596, 0.14", "30.8293, -398.403, -3.83777, 0.28", "30.8612, -399.0, -3.55139, 0.28", "30.9489, -400.205, -2.98166, 0.14", "30.9829, -400.577, -2.81425, 0.28", "31.0417, -401.188, -2.56178, 0.42", "31.0957, -401.745, -2.36791, 0.56", "31.121, -402.028, -2.29231, 0.7", "31.1505, -402.432, -2.22529, 0.56", "31.1797, -403.024, -2.19097, 0.42", "31.2293, -403.688, -2.17788, 0.56", "31.2847, -404.279, -2.1832, 0.42", "31.3452, -404.856, -2.19824, 0.28", "31.4151, -405.441, -2.22621, 0.28", "31.4948, -406.026, -2.26882, 0.42", "31.5787, -406.608, -2.31841, 0.56", "31.6689, -407.19, -2.37745, 0.56", "31.7586, -407.769, -2.43603, 0.56", "31.8473, -408.342, -2.49407, 0.56", "31.9372, -408.921, -2.55286, 0.56", "32.027, -409.5, -2.61171, 0.56", "32.1173, -410.082, -2.67088, 0.7", "32.2073, -410.662, -2.72981, 0.56", "32.2977, -411.244, -2.78908, 0.56", "32.3859, -411.813, -2.84674, 0.42", "32.4763, -412.395, -2.906, 0.56", "32.5662, -412.975, -2.96493, 0.42", "32.6564, -413.557, -3.024, 0.56", "32.7463, -414.136, -3.08282, 0.7", "32.8359, -414.715, -3.14137, 0.7", "32.9245, -415.288, -3.19916, 0.56", "33.0139, -415.867, -3.25736, 0.7" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "33.0139, -415.867, -3.25736, 1.12", "33.4853, -415.733, -3.67646, 1.12", "33.8263, -415.669, -4.22224, 0.98", "33.8263, -415.669, -4.22224, 0.84", "34.0338, -415.666, -4.83057, 0.28", "34.0338, -415.666, -4.83057, 0.28", "34.1762, -415.629, -5.11867, 0.28", "34.9014, -415.385, -6.23634, 0.14", "35.7694, -415.054, -7.2315, 0.1", "36.6453, -414.669, -8.01847, 0.42", "37.1937, -414.411, -8.42121, 0.28", "37.7015, -414.165, -8.74067, 0.14", "38.8163, -413.607, -9.30528, 0.1", "39.3671, -413.322, -9.49944, 0.1", "39.9879, -412.997, -9.67383, 0.1", "40.5347, -412.717, -9.89341, 0.1", "40.8121, -412.583, -10.0005, 0.1" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "33.0139, -415.867, -3.25736, 0.56", "33.4217, -417.523, -3.07738, 0.56", "33.5792, -418.402, -2.97612, 0.56", "33.7098, -419.282, -2.88432, 0.7", "33.8117, -420.151, -2.79036, 0.56", "33.9033, -421.041, -2.70029, 0.56", "34.0007, -422.041, -2.61083, 0.56", "34.0449, -423.029, -2.55697, 0.56", "34.078, -423.922, -2.49955, 0.56", "34.1045, -424.925, -2.42149, 0.56", "34.1175, -425.801, -2.34034, 0.42", "34.1306, -426.697, -2.2571, 0.28", "34.1061, -427.705, -2.21382, 0.42", "34.0536, -428.603, -2.2153, 0.56", "33.9639, -429.59, -2.24952, 0.56", "33.8772, -430.59, -2.28885, 0.56", "33.792, -431.48, -2.32086, 0.42", "33.6312, -433.128, -2.39115, 0.56", "33.5737, -434.003, -2.44957, 0.7", "33.5804, -434.45, -2.49151, 0.84", "33.884, -436.234, -2.72158, 0.84", "33.884, -436.234, -2.72158, 0.84", "34.0477, -436.639, -2.7818, 0.84", "34.4041, -437.443, -2.91532, 0.7", "34.7669, -438.332, -3.12992, 0.7", "35.0601, -439.137, -3.35207, 0.56", "35.3505, -440.05, -3.6196, 0.56", "35.6041, -440.866, -3.85111, 0.7", "35.8488, -441.781, -4.15532, 0.56", "36.0887, -442.691, -4.44417, 0.7", "36.3412, -443.518, -4.6415, 0.84", "36.6246, -444.356, -4.76012, 0.7", "36.9784, -445.171, -4.72908, 0.84", "37.7229, -446.611, -4.46972, 0.98", "38.5221, -448.054, -4.06051, 0.84", "39.3715, -449.554, -3.51696, 0.7", "39.8276, -450.359, -3.20349, 0.7", "40.571, -451.915, -2.64645, 0.56", "40.8746, -452.72, -2.40518, 0.7", "41.0924, -453.563, -2.20885, 0.84", "41.1407, -454.181, -2.15842, 0.56", "41.1516, -455.08, -2.11002, 0.56", "41.1653, -456.967, -2.01309, 0.56", "41.2086, -457.842, -1.93467, 0.7", "41.3773, -458.826, -1.81398, 0.56", "41.5741, -459.688, -1.69036, 0.56", "42.0547, -461.48, -1.42597, 0.56", "42.3024, -462.325, -1.28384, 0.56", "42.8379, -464.04, -0.962556, 0.7", "43.9124, -467.834, -0.259083, 0.56", "44.1541, -468.794, -0.0981461, 0.7", "44.3248, -469.662, 0.0332842, 0.7", "44.3989, -470.275, 0.108704, 0.56", "44.4685, -471.271, 0.233129, 0.42", "44.4693, -472.258, 0.342046, 0.28", "44.4931, -473.143, 0.502527, 0.42", "44.5852, -474.13, 0.689081, 0.56", "44.7306, -475.092, 0.870322, 0.7", "44.9118, -475.955, 1.01351, 0.56", "45.1451, -476.809, 1.12813, 0.7", "45.6533, -478.372, 1.2912, 0.84", "45.9005, -479.233, 1.33021, 0.7", "46.1096, -480.099, 1.29981, 0.56", "46.2574, -480.959, 1.20793, 0.42", "46.3134, -481.59, 1.10733, 0.56", "46.319, -482.013, 1.01995, 0.7", "46.1975, -483.841, 0.597683, 0.56", "46.1155, -484.717, 0.430735, 0.56", "46.0279, -485.595, 0.303648, 0.56", "45.9351, -486.486, 0.231605, 0.56", "45.8984, -486.914, 0.223275, 0.56", "45.8271, -487.545, 0.216849, 0.98", "45.7224, -488.545, 0.221548, 0.84", "45.5312, -489.399, 0.167219, 0.84", "45.3474, -489.998, 0.0877225, 0.28", "45.0621, -490.824, -0.0702693, 0.28", "44.4375, -492.525, -0.484736, 0.28", "44.1305, -493.318, -0.727189, 0.28", "43.7207, -494.785, -1.15322, 0.42", "43.6199, -495.658, -1.32522, 0.84", "43.6081, -496.546, -1.42296, 0.84", "43.6081, -496.546, -1.42296, 0.7", "43.6081, -496.546, -1.42296, 0.84", "43.8317, -500.474, -1.45705, 0.55", "44.1308, -504.466, -1.41378, 0.83", "44.4492, -508.972, -1.34134, 0.83", "44.5152, -509.957, -1.32109, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "44.5152, -509.957, -1.32109, 0.55", "43.5867, -512.638, -0.0474092, 0.55", "42.6972, -514.889, 0.953614, 0.83", "41.6911, -517.275, 1.83059, 0.83", "40.2623, -520.664, 3.07605, 0.55", "39.3858, -522.742, 3.84009, 0.28", "38.2983, -525.321, 4.78804, 0.55", "37.4192, -527.456, 5.34023, 0.28", "36.3629, -529.659, 5.74869, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "44.5152, -509.957, -1.32109, 0.83", "44.6279, -513.524, -0.940584, 0.83", "44.8056, -516.069, -0.695228, 0.55", "44.9645, -518.247, -0.486559, 0.83", "45.1069, -519.587, -0.358228, 0.55", "45.4639, -522.504, -0.0918961, 0.83", "45.807, -525.467, 0.179495, 0.83", "46.2058, -528.487, 0.446578, 0.83", "46.7694, -532.568, 0.79325, 0.83", "47.1374, -535.181, 1.04746, 0.83", "47.4741, -537.779, 1.29966, 0.83", "48.3627, -544.186, 1.91715, 0.83", "48.691, -546.35, 2.08993, 0.55", "49.2474, -549.698, 2.26791, 0.83", "49.6174, -551.629, 2.32474, 0.83", "50.2011, -554.466, 2.33079, 0.55", "51.1162, -558.42, 2.2286, 0.55", "52.0373, -561.879, 2.02207, 0.55", "52.5542, -563.991, 1.82763, 0.55", "52.9204, -565.62, 1.63579, 0.55", "53.5361, -568.795, 1.24125, 0.83", "54.0611, -572.059, 0.864382, 0.55", "54.411, -575.008, 0.518661, 0.55", "54.709, -578.005, 0.18166, 0.55", "55.1485, -583.504, -0.409934, 0.55", "55.2656, -585.238, -0.605506, 0.55", "55.3935, -587.497, -0.860005, 0.55", "55.6859, -592.36, -1.43624, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "55.6859, -592.36, -1.43624, 0.28", "55.5177, -593.011, -2.51939, 0.28", "54.8421, -593.968, -4.10922, 0.55", "54.4942, -594.368, -4.877, 0.28", "54.0485, -594.889, -5.97246, 0.55", "52.3093, -596.941, -10.4783, 0.28", "51.8396, -597.551, -11.809, 0.55", "50.1994, -599.262, -15.7831, 0.28", "49.5509, -599.807, -17.1681, 0.55", "48.8471, -600.325, -18.6244, 0.55", "48.1873, -600.77, -20.033, 0.28", "47.7019, -601.34, -21.6086, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "55.6859, -592.36, -1.43624, 0.55", "55.8624, -594.262, -1.64666, 0.55", "56.1628, -597.5, -2.00476, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_0", "axon_0", "dend_51", "dend_46", "dend_14", "dend_1", "axon_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_66", "dend_66", "dend_66", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_BTC_87c80e7368_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_51
create dend_61
public dend_61
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_63
create dend_75
public dend_75
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_64
create dend_72
public dend_72
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_65
create dend_71
public dend_71
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_70, id: dend_70, parent: dend_66
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_45, dend_0, axon_0, dend_51, dend_46, dend_14, dend_1, axon_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_80
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.49999994045921775)
    connect dend_0(0), soma_0(0.49999994045921775)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_70(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.465097, 8.04727, -0.0175891, 2.59198 ) }
    soma_0 { pt3dadd( 0.424424, 7.2054, -0.0170165, 4.38773 ) }
    soma_0 { pt3dadd( 0.383751, 6.36352, -0.0164438, 5.44399 ) }
    soma_0 { pt3dadd( 0.343077, 5.52165, -0.0158711, 6.50025 ) }
    soma_0 { pt3dadd( 0.302404, 4.67978, -0.0152984, 7.50099 ) }
    soma_0 { pt3dadd( 0.261731, 3.83791, -0.0147257, 8.3937 ) }
    soma_0 { pt3dadd( 0.221058, 2.99604, -0.014153, 9.3444 ) }
    soma_0 { pt3dadd( 0.180384, 2.15416, -0.0135803, 10.2953 ) }
    soma_0 { pt3dadd( 0.139711, 1.31229, -0.0130077, 10.7907 ) }
    soma_0 { pt3dadd( 0.0990378, 0.470419, -0.012435, 10.75 ) }
    soma_0 { pt3dadd( 0.0583646, -0.371454, -0.0118623, 10.6053 ) }
    soma_0 { pt3dadd( 0.0176913, -1.21333, -0.0112896, 10.4607 ) }
    soma_0 { pt3dadd( -0.0229819, -2.0552, -0.0107169, 10.316 ) }
    soma_0 { pt3dadd( -0.0636552, -2.89707, -0.0101442, 9.78436 ) }
    soma_0 { pt3dadd( -0.104328, -3.73894, -0.00957155, 9.07182 ) }
    soma_0 { pt3dadd( -0.145002, -4.58081, -0.00899886, 8.12082 ) }
    soma_0 { pt3dadd( -0.185675, -5.42269, -0.00842618, 7.10426 ) }
    soma_0 { pt3dadd( -0.226348, -6.26456, -0.00785349, 5.9023 ) }
    soma_0 { pt3dadd( -0.267021, -7.10643, -0.0072808, 4.68096 ) }
    soma_0 { pt3dadd( -0.307695, -7.9483, -0.00670812, 3.08046 ) }
    soma_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 1.81235 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.46257, 7.05891, -0.101719, 1.82 ) }
    dend_45 { pt3dadd( -1.54269, 7.49307, 0.646212, 1.82 ) }
    dend_45 { pt3dadd( -1.59686, 7.71367, 0.990658, 1.82 ) }
    dend_45 { pt3dadd( -1.73711, 8.22292, 1.68515, 1.68 ) }
    dend_45 { pt3dadd( -1.88584, 8.73683, 2.33784, 1.82 ) }
    dend_45 { pt3dadd( -1.88584, 8.73683, 2.33784, 1.96 ) }
    dend_45 { pt3dadd( -2.0403, 9.27055, 3.01569, 1.4 ) }
    dend_45 { pt3dadd( -2.14139, 9.52204, 3.3198, 1.26 ) }
    dend_45 { pt3dadd( -2.2687, 9.7806, 3.62065, 1.4 ) }
    dend_45 { pt3dadd( -2.2687, 9.7806, 3.62065, 1.26 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.682563, -8.60709, 0.898281, 2.1 ) }
    dend_0 { pt3dadd( -0.325808, -9.33275, 1.44864, 2.1 ) }
    dend_0 { pt3dadd( 0.0077399, -10.2699, 1.95815, 1.96 ) }
    dend_0 { pt3dadd( 0.161177, -10.8081, 2.17556, 2.1 ) }
    dend_0 { pt3dadd( 0.223498, -11.0542, 2.25685, 1.96 ) }
    dend_0 { pt3dadd( 0.319295, -11.566, 2.39822, 1.82 ) }
    dend_0 { pt3dadd( 0.393437, -12.1421, 2.53462, 1.68 ) }
    dend_0 { pt3dadd( 0.418893, -12.7458, 2.58268, 1.54 ) }
    dend_0 { pt3dadd( 0.404119, -13.2852, 2.58268, 1.4 ) }
    dend_0 { pt3dadd( 0.39025, -13.5468, 2.58268, 1.4 ) }
    dend_0 { pt3dadd( 0.352755, -14.1519, 2.58268, 2.38 ) }
    dend_0 { pt3dadd( 0.330404, -14.5262, 2.58268, 2.24 ) }
    dend_0 { pt3dadd( 0.317542, -15.0657, 2.58268, 2.38 ) }
    dend_0 { pt3dadd( 0.327035, -15.608, 2.58268, 2.24 ) }
    dend_0 { pt3dadd( 0.342482, -16.1474, 2.58268, 2.1 ) }
    dend_0 { pt3dadd( 0.367152, -16.53, 2.58268, 1.96 ) }
    dend_0 { pt3dadd( 0.399268, -16.7991, 2.58268, 1.82 ) }
    dend_0 { pt3dadd( 0.46129, -17.3255, 2.58268, 1.54 ) }
    dend_0 { pt3dadd( 0.517812, -17.8619, 2.58268, 1.68 ) }
    dend_0 { pt3dadd( 0.550215, -18.2425, 2.61408, 1.82 ) }
    dend_0 { pt3dadd( 0.583373, -18.7778, 2.69041, 1.68 ) }
    dend_0 { pt3dadd( 0.613006, -19.2978, 2.78524, 1.68 ) }
    dend_0 { pt3dadd( 0.626439, -19.8787, 2.95051, 1.82 ) }
    dend_0 { pt3dadd( 0.628248, -20.3824, 3.13505, 1.82 ) }
    dend_0 { pt3dadd( 0.612276, -21.3864, 3.63477, 1.82 ) }
    dend_0 { pt3dadd( 0.606381, -21.9066, 3.9346, 1.68 ) }
    dend_0 { pt3dadd( 0.602453, -22.1321, 4.07798, 1.68 ) }
    dend_0 { pt3dadd( 0.58876, -22.9705, 4.65321, 1.12 ) }
    dend_0 { pt3dadd( 0.574778, -23.4043, 4.95879, 0.98 ) }
    dend_0 { pt3dadd( 0.51408, -24.3399, 5.57271, 1.12 ) }
    dend_0 { pt3dadd( 0.471206, -24.8074, 5.8259, 0.98 ) }
    dend_0 { pt3dadd( 0.44513, -25.0496, 5.93899, 1.12 ) }
    dend_0 { pt3dadd( 0.44513, -25.0496, 5.93899, 1.26 ) }
    dend_0 { pt3dadd( 0.393973, -25.6382, 6.03674, 1.26 ) }
    dend_0 { pt3dadd( 0.35579, -26.2424, 6.08937, 1.12 ) }
    dend_0 { pt3dadd( 0.351546, -26.6175, 6.08937, 0.98 ) }
    dend_0 { pt3dadd( 0.378126, -27.1565, 6.08937, 1.12 ) }
    dend_0 { pt3dadd( 0.435528, -27.6954, 6.08937, 1.26 ) }
    dend_0 { pt3dadd( 0.515961, -28.2285, 6.08937, 1.4 ) }
    dend_0 { pt3dadd( 0.637623, -28.7461, 6.08937, 1.26 ) }
    dend_0 { pt3dadd( 0.791496, -29.261, 6.08937, 1.4 ) }
    dend_0 { pt3dadd( 0.917988, -29.6208, 6.08937, 1.4 ) }
    dend_0 { pt3dadd( 0.917988, -29.6208, 6.08937, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.07222, -23.7727, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.2687, 9.7806, 3.62065, 0.84 ) }
    dend_51 { pt3dadd( -2.2711, 10.2697, 3.29125, 0.84 ) }
    dend_51 { pt3dadd( -2.29092, 11.2133, 2.7486, 0.7 ) }
    dend_51 { pt3dadd( -2.30788, 11.6946, 2.5126, 0.84 ) }
    dend_51 { pt3dadd( -2.32911, 12.6944, 2.07003, 0.98 ) }
    dend_51 { pt3dadd( -2.34694, 13.194, 1.87128, 1.12 ) }
    dend_51 { pt3dadd( -2.36251, 13.6791, 1.66891, 1.26 ) }
    dend_51 { pt3dadd( -2.38297, 14.1798, 1.47298, 1.4 ) }
    dend_51 { pt3dadd( -2.42479, 14.6888, 1.30942, 1.54 ) }
    dend_51 { pt3dadd( -2.45721, 14.95, 1.24958, 1.68 ) }
    dend_51 { pt3dadd( -2.56969, 15.5436, 1.22512, 1.68 ) }
    dend_51 { pt3dadd( -2.81647, 16.6126, 1.30682, 1.54 ) }
    dend_51 { pt3dadd( -2.96878, 17.1803, 1.41017, 1.4 ) }
    dend_51 { pt3dadd( -3.12761, 17.6764, 1.54571, 1.4 ) }
    dend_51 { pt3dadd( -3.48576, 18.6768, 1.80737, 1.26 ) }
    dend_51 { pt3dadd( -3.83303, 19.5935, 1.94156, 1.12 ) }
    dend_51 { pt3dadd( -4.01943, 20.0929, 1.90013, 0.98 ) }
    dend_51 { pt3dadd( -4.01943, 20.0929, 1.90013, 0.98 ) }
    dend_51 { pt3dadd( -4.09105, 20.4063, 1.41176, 0.7 ) }
    dend_51 { pt3dadd( -4.17634, 20.9301, 0.5667, 0.56 ) }
    dend_51 { pt3dadd( -4.23066, 21.5168, -0.3594, 0.42 ) }
    dend_51 { pt3dadd( -4.24389, 22.0687, -1.19065, 0.56 ) }
    dend_51 { pt3dadd( -4.17305, 23.1485, -2.75018, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_51 { pt3dadd( -4.1256, 23.4592, -3.16763, 1.26 ) }
    dend_51 { pt3dadd( -4.05201, 23.8304, -3.60667, 1.12 ) }
    dend_51 { pt3dadd( -3.96207, 24.2727, -3.994, 0.98 ) }
    dend_51 { pt3dadd( -3.87168, 24.8035, -4.25902, 0.84 ) }
    dend_51 { pt3dadd( -3.82513, 25.8365, -4.30671, 0.7 ) }
    dend_51 { pt3dadd( -3.84521, 26.0962, -4.23259, 0.84 ) }
    dend_51 { pt3dadd( -4.10785, 27.1746, -3.73783, 0.1 ) }
    dend_51 { pt3dadd( -4.56013, 27.8711, -3.15856, 0.1 ) }
    dend_51 { pt3dadd( -4.76533, 28.0527, -2.92211, 0.14 ) }
    dend_51 { pt3dadd( -4.76533, 28.0527, -2.92211, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 10/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.2687, 9.7806, 3.62065, 3.22 ) }
    dend_46 { pt3dadd( -1.90448, 10.1614, 3.37933, 3.22 ) }
    dend_46 { pt3dadd( -1.38464, 10.8111, 2.9868, 3.08 ) }
    dend_46 { pt3dadd( -0.489253, 12.1181, 2.28949, 2.94 ) }
    dend_46 { pt3dadd( -0.224031, 12.5774, 2.07402, 2.8 ) }
    dend_46 { pt3dadd( 0.177861, 13.3079, 1.69696, 2.66 ) }
    dend_46 { pt3dadd( 0.905647, 14.7118, 0.974392, 2.52 ) }
    dend_46 { pt3dadd( 1.21285, 15.401, 0.630195, 2.38 ) }
    dend_46 { pt3dadd( 1.50983, 16.1909, 0.269869, 2.24 ) }
    dend_46 { pt3dadd( 1.74931, 16.9421, -0.00270509, 2.1 ) }
    dend_46 { pt3dadd( 2.17389, 18.3089, -0.562824, 1.96 ) }
    dend_46 { pt3dadd( 2.42907, 19.1303, -0.925379, 0.28 ) }
    dend_46 { pt3dadd( 2.70024, 19.9432, -1.25165, 0.42 ) }
    dend_46 { pt3dadd( 2.89605, 20.4482, -1.47991, 0.56 ) }
    dend_46 { pt3dadd( 3.21987, 21.2145, -1.86273, 0.7 ) }
    dend_46 { pt3dadd( 3.78527, 22.4356, -2.46055, 0.84 ) }
    dend_46 { pt3dadd( 3.92772, 22.8056, -2.57646, 0.84 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 27/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 0.917988, -29.6208, 6.08937, 1.4 ) }
    dend_14 { pt3dadd( 0.973478, -29.8255, 6.08978, 1.4 ) }
    dend_14 { pt3dadd( 1.06343, -30.2384, 6.0904, 1.54 ) }
    dend_14 { pt3dadd( 1.12538, -30.6348, 5.96269, 1.68 ) }
    dend_14 { pt3dadd( 1.14739, -30.7948, 5.8309, 1.54 ) }
    dend_14 { pt3dadd( 1.17712, -31.1122, 5.56548, 1.4 ) }
    dend_14 { pt3dadd( 1.17712, -31.1122, 5.56548, 1.54 ) }
    dend_14 { pt3dadd( 1.19237, -31.3649, 5.40414, 1.4 ) }
    dend_14 { pt3dadd( 1.22553, -32.1201, 4.99917, 1.26 ) }
    dend_14 { pt3dadd( 1.26581, -32.9127, 4.67711, 1.12 ) }
    dend_14 { pt3dadd( 1.28898, -33.369, 4.55042, 0.98 ) }
    dend_14 { pt3dadd( 1.31564, -33.7846, 4.47752, 0.84 ) }
    dend_14 { pt3dadd( 1.38649, -34.6583, 4.33745, 0.7 ) }
    dend_14 { pt3dadd( 1.40379, -34.8688, 4.31287, 0.56 ) }
    dend_14 { pt3dadd( 1.42686, -35.2912, 4.29526, 0.56 ) }
    dend_14 { pt3dadd( 1.44936, -35.7662, 4.27906, 0.7 ) }
    dend_14 { pt3dadd( 1.46588, -36.1743, 4.20271, 0.84 ) }
    dend_14 { pt3dadd( 1.49467, -36.9976, 3.94761, 0.98 ) }
    dend_14 { pt3dadd( 1.5079, -37.2748, 3.83682, 0.56 ) }
    dend_14 { pt3dadd( 1.52298, -37.7212, 3.68057, 0.7 ) }
    dend_14 { pt3dadd( 1.53556, -38.1254, 3.58669, 0.84 ) }
    dend_14 { pt3dadd( 1.57798, -39.0143, 3.51663, 0.84 ) }
    dend_14 { pt3dadd( 1.60471, -39.435, 3.55492, 0.98 ) }
    dend_14 { pt3dadd( 1.64126, -39.8452, 3.65679, 1.12 ) }
    dend_14 { pt3dadd( 1.73803, -40.6091, 3.90156, 0.56 ) }
    dend_14 { pt3dadd( 1.86338, -41.4027, 4.21041, 0.42 ) }
    dend_14 { pt3dadd( 1.93116, -41.7821, 4.3763, 0.42 ) }
    dend_14 { pt3dadd( 2.01007, -42.1639, 4.53724, 0.56 ) }
    dend_14 { pt3dadd( 2.0534, -42.3604, 4.59552, 0.7 ) }
    dend_14 { pt3dadd( 2.10363, -42.5657, 4.61396, 1.12 ) }
    dend_14 { pt3dadd( 2.21333, -42.9618, 4.54735, 1.26 ) }
    dend_14 { pt3dadd( 2.32088, -43.3495, 4.42562, 1.12 ) }
    dend_14 { pt3dadd( 2.52488, -44.0851, 4.26219, 1.12 ) }
    dend_14 { pt3dadd( 2.52488, -44.0851, 4.26219, 1.12 ) }
    dend_14 { pt3dadd( 2.56485, -44.2917, 4.26209, 1.12 ) }
    dend_14 { pt3dadd( 2.62035, -44.7117, 4.29741, 0.98 ) }
    dend_14 { pt3dadd( 2.65631, -45.1276, 4.36446, 1.12 ) }
    dend_14 { pt3dadd( 2.70323, -45.9469, 4.62072, 1.12 ) }
    dend_14 { pt3dadd( 2.72487, -46.3842, 4.80144, 1.26 ) }
    dend_14 { pt3dadd( 2.74785, -46.8182, 4.98587, 1.26 ) }
    dend_14 { pt3dadd( 2.76387, -47.0867, 5.09963, 1.4 ) }
    dend_14 { pt3dadd( 2.77279, -47.2778, 5.18395, 1.4 ) }
    dend_14 { pt3dadd( 2.80331, -47.9912, 5.49448, 1.26 ) }
    dend_14 { pt3dadd( 2.82775, -48.3859, 5.63882, 1.26 ) }
    dend_14 { pt3dadd( 2.87752, -48.7692, 5.80794, 1.26 ) }
    dend_14 { pt3dadd( 2.95335, -49.1364, 5.99403, 1.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.917988, -29.6208, 6.08937, 2.24 ) }
    dend_1 { pt3dadd( 0.552029, -30.0105, 5.01119, 2.24 ) }
    dend_1 { pt3dadd( 0.261753, -30.4191, 3.91796, 2.38 ) }
    dend_1 { pt3dadd( -0.0288678, -30.8281, 2.82343, 2.52 ) }
    dend_1 { pt3dadd( -0.100175, -30.9285, 2.55488, 2.38 ) }
    dend_1 { pt3dadd( -0.398094, -31.3478, 1.43286, 2.24 ) }
    dend_1 { pt3dadd( -0.671114, -31.7321, 0.40462, 2.1 ) }
    dend_1 { pt3dadd( -0.867498, -32.1508, -0.584154, 1.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 81/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -2.51991, -53.7378, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -3.24376, -68.7203, -0.00613543, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_51 (entry count 84/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -4.76533, 28.0527, -2.92211, 0.28 ) }
    dend_61 { pt3dadd( -4.72221, 29.1119, -3.41269, 0.28 ) }
    dend_61 { pt3dadd( -4.78073, 30.2531, -3.66528, 0.42 ) }
    dend_61 { pt3dadd( -4.83356, 30.8254, -3.73033, 0.56 ) }
    dend_61 { pt3dadd( -4.9027, 31.3968, -3.75184, 0.56 ) }
    dend_61 { pt3dadd( -4.94242, 31.6835, -3.74967, 0.56 ) }
    dend_61 { pt3dadd( -5.11458, 32.8485, -3.71186, 0.56 ) }
    dend_61 { pt3dadd( -5.21588, 33.4083, -3.60701, 0.7 ) }
    dend_61 { pt3dadd( -5.21588, 33.4083, -3.60701, 0.7 ) }
    dend_61 { pt3dadd( -5.30024, 33.9559, -3.49191, 0.56 ) }
    dend_61 { pt3dadd( -5.3455, 34.5313, -3.43558, 0.42 ) }
    dend_61 { pt3dadd( -5.35349, 35.1085, -3.44383, 0.28 ) }
    dend_61 { pt3dadd( -5.32832, 35.7513, -3.51978, 0.14 ) }
    dend_61 { pt3dadd( -5.28527, 36.3025, -3.63786, 0.1 ) }
    dend_61 { pt3dadd( -5.23313, 36.8541, -3.7891, 0.1 ) }
    dend_61 { pt3dadd( -5.081, 37.8696, -4.1803, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( -4.98423, 38.3806, -4.42128, 0.84 ) }
    dend_61 { pt3dadd( -4.88097, 38.8749, -4.68389, 0.7 ) }
    dend_61 { pt3dadd( -4.66582, 39.8517, -5.26766, 0.56 ) }
    dend_61 { pt3dadd( -4.55154, 40.3172, -5.5702, 0.7 ) }
    dend_61 { pt3dadd( -4.30536, 41.2825, -6.22982, 0.84 ) }
    dend_61 { pt3dadd( -4.30536, 41.2825, -6.22982, 0.98 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 6/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -4.76533, 28.0527, -2.92211, 0.56 ) }
    dend_52 { pt3dadd( -5.10568, 28.3067, -4.22002, 0.56 ) }
    dend_52 { pt3dadd( -5.39487, 28.562, -5.39915, 0.42 ) }
    dend_52 { pt3dadd( -5.88861, 29.0556, -7.65118, 0.28 ) }
    dend_52 { pt3dadd( -6.12945, 29.3212, -8.84308, 0.14 ) }
    dend_52 { pt3dadd( -6.58692, 29.8632, -11.0918, 0.28 ) }
    dend_52 { pt3dadd( -6.82145, 30.1667, -12.2312, 0.42 ) }
    dend_52 { pt3dadd( -7.06543, 30.5398, -13.4759, 0.56 ) }
    dend_52 { pt3dadd( -7.47765, 31.3299, -15.6424, 0.42 ) }
    dend_52 { pt3dadd( -7.6786, 31.8278, -16.7245, 0.56 ) }
    dend_52 { pt3dadd( -7.79226, 32.169, -17.3552, 0.84 ) }
    dend_52 { pt3dadd( -7.9023, 32.5443, -17.8861, 0.7 ) }
    dend_52 { pt3dadd( -8.03681, 32.963, -18.3761, 0.56 ) }
    dend_52 { pt3dadd( -8.20763, 33.4056, -18.8384, 0.42 ) }
    dend_52 { pt3dadd( -8.59996, 34.2801, -19.5992, 0.56 ) }
    dend_52 { pt3dadd( -8.7105, 34.4959, -19.8196, 0.7 ) }
    dend_52 { pt3dadd( -8.969, 34.9153, -20.356, 1.12 ) }
    dend_52 { pt3dadd( -9.50852, 35.5788, -21.4285, 0.98 ) }
    dend_52 { pt3dadd( -10.0242, 36.0147, -22.4773, 0.84 ) }
    dend_52 { pt3dadd( -10.3515, 36.2027, -23.0908, 0.7 ) }
    dend_52 { pt3dadd( -10.938, 36.4397, -24.1106, 0.84 ) }
    dend_52 { pt3dadd( -11.1723, 36.5205, -24.4859, 0.56 ) }
    dend_52 { pt3dadd( -11.5638, 36.6163, -25.0934, 0.42 ) }
    dend_52 { pt3dadd( -12.3413, 36.8133, -26.148, 0.56 ) }
    dend_52 { pt3dadd( -12.9163, 37.0022, -26.8347, 0.28 ) }
    dend_52 { pt3dadd( -13.7268, 37.3662, -27.7062, 0.14 ) }
    dend_52 { pt3dadd( -14.3462, 37.7441, -28.2608, 0.1 ) }
    dend_52 { pt3dadd( -15.1655, 38.4138, -28.9325, 0.14 ) }
    dend_52 { pt3dadd( -15.619, 38.8873, -29.2705, 0.28 ) }
    dend_52 { pt3dadd( -15.9024, 39.2149, -29.4463, 0.14 ) }
    dend_52 { pt3dadd( -16.3308, 39.7518, -29.7019, 0.1 ) }
    dend_52 { pt3dadd( -16.5976, 40.1243, -29.808, 0.14 ) }
    dend_52 { pt3dadd( -16.9419, 40.6813, -29.9193, 0.84 ) }
    dend_52 { pt3dadd( -17.1655, 41.0989, -29.9112, 0.98 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 3.92772, 22.8056, -2.57646, 1.4 ) }
    dend_48 { pt3dadd( 3.99755, 23.9233, -2.49762, 1.4 ) }
    dend_48 { pt3dadd( 3.99851, 24.5101, -2.53432, 1.4 ) }
    dend_48 { pt3dadd( 3.98728, 25.0867, -2.68701, 1.26 ) }
    dend_48 { pt3dadd( 3.96855, 25.5907, -2.85335, 1.12 ) }
    dend_48 { pt3dadd( 3.95517, 25.8392, -2.93799, 0.98 ) }
    dend_48 { pt3dadd( 3.88485, 26.8644, -3.27621, 0.84 ) }
    dend_48 { pt3dadd( 3.84263, 27.3406, -3.47474, 0.7 ) }
    dend_48 { pt3dadd( 3.73673, 28.3595, -3.90336, 0.56 ) }
    dend_48 { pt3dadd( 3.69184, 28.8485, -4.09492, 0.56 ) }
    dend_48 { pt3dadd( 3.66717, 29.3529, -4.25936, 0.42 ) }
    dend_48 { pt3dadd( 3.66834, 29.86, -4.37824, 0.56 ) }
    dend_48 { pt3dadd( 3.68583, 30.125, -4.40593, 0.7 ) }
    dend_48 { pt3dadd( 3.75002, 30.655, -4.42791, 0.56 ) }
    dend_48 { pt3dadd( 3.85264, 31.2449, -4.4081, 0.56 ) }
    dend_48 { pt3dadd( 3.99687, 31.8105, -4.34519, 0.7 ) }
    dend_48 { pt3dadd( 4.10868, 32.1698, -4.284, 0.56 ) }
    dend_48 { pt3dadd( 4.29836, 32.7118, -4.16966, 0.56 ) }
    dend_48 { pt3dadd( 4.49577, 33.2594, -4.04104, 0.56 ) }
    dend_48 { pt3dadd( 4.6246, 33.593, -3.95697, 0.42 ) }
    dend_48 { pt3dadd( 5.06785, 34.6922, -3.73311, 0.56 ) }
    dend_48 { pt3dadd( 5.28741, 35.2309, -3.65613, 0.7 ) }
    dend_48 { pt3dadd( 5.43449, 35.5758, -3.63036, 0.56 ) }
    dend_48 { pt3dadd( 5.67733, 36.1074, -3.62986, 0.42 ) }
    dend_48 { pt3dadd( 5.93183, 36.6367, -3.71977, 0.28 ) }
    dend_48 { pt3dadd( 6.34724, 37.4772, -3.98539, 0.14 ) }
    dend_48 { pt3dadd( 6.59227, 37.9558, -4.20145, 0.56 ) }
    dend_48 { pt3dadd( 6.85416, 38.4458, -4.39695, 0.42 ) }
    dend_48 { pt3dadd( 7.02465, 38.7575, -4.49852, 0.56 ) }
    dend_48 { pt3dadd( 7.60075, 39.7944, -4.64762, 0.7 ) }
    dend_48 { pt3dadd( 7.78063, 40.1222, -4.62587, 0.56 ) }
    dend_48 { pt3dadd( 7.94651, 40.4473, -4.54232, 0.42 ) }
    dend_48 { pt3dadd( 8.39963, 41.4018, -4.21329, 0.98 ) }
    dend_48 { pt3dadd( 8.53763, 41.734, -4.10745, 0.98 ) }
    dend_48 { pt3dadd( 8.92413, 42.7293, -3.80855, 0.84 ) }
    dend_48 { pt3dadd( 9.04904, 43.0815, -3.73556, 0.84 ) }
    dend_48 { pt3dadd( 9.23457, 43.6473, -3.71822, 0.98 ) }
    dend_48 { pt3dadd( 9.39836, 44.2107, -3.76058, 0.84 ) }
    dend_48 { pt3dadd( 9.6828, 45.285, -3.88507, 0.7 ) }
    dend_48 { pt3dadd( 9.76739, 45.6443, -3.8874, 0.56 ) }
    dend_48 { pt3dadd( 10.0171, 46.7331, -3.79423, 0.7 ) }
    dend_48 { pt3dadd( 10.0171, 46.7331, -3.79423, 0.84 ) }
    dend_48 { pt3dadd( 10.2332, 47.6339, -3.24729, 0.84 ) }
    dend_48 { pt3dadd( 10.4636, 48.4767, -2.58265, 0.7 ) }
    dend_48 { pt3dadd( 10.6785, 49.1401, -1.91829, 0.56 ) }
    dend_48 { pt3dadd( 10.7464, 49.3118, -1.73439, 0.56 ) }
    dend_48 { pt3dadd( 10.9298, 49.6654, -1.31154, 0.98 ) }
    dend_48 { pt3dadd( 11.1589, 50.0207, -0.923189, 0.84 ) }
    dend_48 { pt3dadd( 11.2903, 50.1829, -0.768032, 0.98 ) }
    dend_48 { pt3dadd( 11.8818, 50.7881, -0.252736, 0.42 ) }
    dend_48 { pt3dadd( 12.2497, 51.1466, 0.0199563, 0.56 ) }
    dend_48 { pt3dadd( 12.9258, 51.834, 0.526251, 0.7 ) }
    dend_48 { pt3dadd( 13.2756, 52.2103, 0.787964, 0.56 ) }
    dend_48 { pt3dadd( 13.4237, 52.3981, 0.894491, 0.7 ) }
    dend_48 { pt3dadd( 13.672, 52.8327, 1.0615, 0.84 ) }
    dend_48 { pt3dadd( 13.8435, 53.3153, 1.15327, 0.56 ) }
    dend_48 { pt3dadd( 13.9542, 53.8342, 1.2129, 0.42 ) }
    dend_48 { pt3dadd( 14.017, 54.362, 1.23205, 0.28 ) }
    dend_48 { pt3dadd( 14.0622, 54.9575, 1.25491, 0.42 ) }
    dend_48 { pt3dadd( 14.0993, 55.4786, 1.2362, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_48 { pt3dadd( 14.1444, 56.0082, 1.18466, 0.7 ) }
    dend_48 { pt3dadd( 14.1826, 56.2692, 1.14517, 0.56 ) }
    dend_48 { pt3dadd( 14.3008, 56.8442, 1.03462, 0.84 ) }
    dend_48 { pt3dadd( 14.4552, 57.3955, 0.912811, 0.84 ) }
    dend_48 { pt3dadd( 14.7935, 58.3279, 0.692376, 0.7 ) }
    dend_48 { pt3dadd( 15.0294, 58.8456, 0.566061, 0.56 ) }
    dend_48 { pt3dadd( 15.2859, 59.3652, 0.44646, 0.7 ) }
    dend_48 { pt3dadd( 15.4465, 59.6935, 0.383262, 0.7 ) }
    dend_48 { pt3dadd( 15.7088, 60.2194, 0.309203, 0.84 ) }
    dend_48 { pt3dadd( 15.9671, 60.7389, 0.22756, 0.7 ) }
    dend_48 { pt3dadd( 16.0741, 60.9816, 0.215013, 0.56 ) }
    dend_48 { pt3dadd( 16.2545, 61.4819, 0.241142, 0.42 ) }
    dend_48 { pt3dadd( 16.3919, 62.0478, 0.327754, 0.28 ) }
    dend_48 { pt3dadd( 16.4649, 62.6247, 0.460905, 0.14 ) }
    dend_48 { pt3dadd( 16.4774, 63.6022, 0.742347, 0.28 ) }
    dend_48 { pt3dadd( 16.4282, 64.6698, 1.0802, 0.1 ) }
    dend_48 { pt3dadd( 16.3699, 65.6949, 1.41171, 0.1 ) }
    dend_48 { pt3dadd( 16.35, 66.2007, 1.57649, 0.1 ) }
    dend_48 { pt3dadd( 16.3444, 66.4525, 1.65485, 0.14 ) }
    dend_48 { pt3dadd( 16.3426, 66.9645, 1.80294, 0.84 ) }
    dend_48 { pt3dadd( 16.3665, 67.5427, 1.95349, 0.7 ) }
    dend_48 { pt3dadd( 16.4254, 68.1241, 2.01963, 0.7 ) }
    dend_48 { pt3dadd( 16.5071, 68.7174, 2.0406, 0.56 ) }
    dend_48 { pt3dadd( 16.5954, 69.2985, 2.06074, 0.56 ) }
    dend_48 { pt3dadd( 16.6369, 69.5623, 2.06982, 0.7 ) }
    dend_48 { pt3dadd( 16.6797, 69.8258, 2.07881, 0.84 ) }
    dend_48 { pt3dadd( 16.749, 70.3528, 2.09761, 0.56 ) }
    dend_48 { pt3dadd( 16.8154, 70.9369, 2.11895, 0.42 ) }
    dend_48 { pt3dadd( 16.8756, 71.465, 2.13824, 0.56 ) }
    dend_48 { pt3dadd( 16.9493, 72.0577, 2.15959, 0.42 ) }
    dend_48 { pt3dadd( 17.021, 72.6429, 2.18072, 0.28 ) }
    dend_48 { pt3dadd( 17.0756, 73.1743, 2.20041, 0.42 ) }
    dend_48 { pt3dadd( 17.1304, 73.7707, 2.22285, 0.28 ) }
    dend_48 { pt3dadd( 17.159, 74.1391, 2.23696, 0.42 ) }
    dend_48 { pt3dadd( 17.195, 74.7369, 2.26038, 0.56 ) }
    dend_48 { pt3dadd( 17.2124, 75.2708, 2.28201, 0.56 ) }
    dend_48 { pt3dadd( 17.2038, 75.7929, 2.30442, 0.42 ) }
    dend_48 { pt3dadd( 17.1704, 76.3255, 2.3285, 0.56 ) }
    dend_48 { pt3dadd( 17.095, 76.9184, 2.35717, 0.7 ) }
    dend_48 { pt3dadd( 16.9998, 77.4426, 2.34298, 0.84 ) }
    dend_48 { pt3dadd( 16.9998, 77.4426, 2.34298, 0.7 ) }
    dend_48 { pt3dadd( 16.8795, 78.0126, 2.26106, 0.28 ) }
    dend_48 { pt3dadd( 16.7854, 78.5256, 2.17114, 0.14 ) }
    dend_48 { pt3dadd( 16.7021, 79.0329, 2.07525, 0.1 ) }
    dend_48 { pt3dadd( 16.5397, 80.067, 1.80456, 0.14 ) }
    dend_48 { pt3dadd( 16.4708, 80.5715, 1.65436, 0.28 ) }
    dend_48 { pt3dadd( 16.4138, 81.1237, 1.44284, 0.42 ) }
    dend_48 { pt3dadd( 16.3773, 81.6667, 1.23302, 0.56 ) }
    dend_48 { pt3dadd( 16.3496, 82.1619, 1.05246, 0.56 ) }
    dend_48 { pt3dadd( 16.294, 83.1944, 0.731947, 0.56 ) }
    dend_48 { pt3dadd( 16.2613, 83.7114, 0.620076, 0.56 ) }
    dend_48 { pt3dadd( 16.1755, 84.6735, 0.443164, 0.7 ) }
    dend_48 { pt3dadd( 16.0414, 85.7239, 0.211275, 1.12 ) }
    dend_48 { pt3dadd( 15.9513, 86.2321, 0.0960307, 0.98 ) }
    dend_48 { pt3dadd( 15.8458, 86.7433, -0.00384021, 0.84 ) }
    dend_48 { pt3dadd( 15.7137, 87.2512, -0.0679646, 0.7 ) }
    dend_48 { pt3dadd( 15.562, 87.7435, -0.131382, 0.56 ) }
    dend_48 { pt3dadd( 15.2591, 88.6155, -0.308354, 0.42 ) }
    dend_48 { pt3dadd( 15.0625, 89.1477, -0.493046, 0.28 ) }
    dend_48 { pt3dadd( 14.8872, 89.6106, -0.639151, 0.14 ) }
    dend_48 { pt3dadd( 14.6943, 90.1593, -0.778863, 0.1 ) }
    dend_48 { pt3dadd( 14.551, 90.657, -0.819835, 0.1 ) }
    dend_48 { pt3dadd( 14.3514, 91.7167, -0.703483, 0.14 ) }
    dend_48 { pt3dadd( 14.3514, 91.7167, -0.703483, 0.28 ) }
    dend_48 { pt3dadd( 14.338, 92.7467, -0.363056, 0.28 ) }
    dend_48 { pt3dadd( 14.3727, 93.3048, -0.155593, 0.42 ) }
    dend_48 { pt3dadd( 14.5071, 94.333, 0.242262, 0.56 ) }
    dend_48 { pt3dadd( 14.6009, 94.8824, 0.45354, 0.56 ) }
    dend_48 { pt3dadd( 14.6452, 95.1282, 0.544674, 0.7 ) }
    dend_48 { pt3dadd( 14.745, 95.6859, 0.696151, 0.7 ) }
    dend_48 { pt3dadd( 14.8413, 96.2698, 0.786974, 0.56 ) }
    dend_48 { pt3dadd( 14.9272, 96.8512, 0.808954, 0.42 ) }
    dend_48 { pt3dadd( 14.9987, 97.4438, 0.76008, 0.28 ) }
    dend_48 { pt3dadd( 15.0464, 97.9715, 0.694854, 0.42 ) }
    dend_48 { pt3dadd( 15.0764, 98.5452, 0.568491, 0.28 ) }
    dend_48 { pt3dadd( 15.0855, 99.0546, 0.416497, 0.14 ) }
    dend_48 { pt3dadd( 15.0681, 100.014, 0.0814414, 0.1 ) }
    dend_48 { pt3dadd( 15.0524, 100.502, -0.100397, 0.1 ) }
    dend_48 { pt3dadd( 15.0392, 100.997, -0.283036, 0.14 ) }
    dend_48 { pt3dadd( 15.0201, 102.021, -0.632719, 0.28 ) }
    dend_48 { pt3dadd( 15.0148, 102.593, -0.798395, 0.14 ) }
    dend_48 { pt3dadd( 15.0162, 103.106, -0.907731, 0.28 ) }
    dend_48 { pt3dadd( 15.0258, 103.7, -0.976726, 0.42 ) }
    dend_48 { pt3dadd( 15.0479, 104.295, -1.02397, 0.42 ) }
    dend_48 { pt3dadd( 15.0791, 104.817, -1.03847, 0.28 ) }
    dend_48 { pt3dadd( 15.1276, 105.412, -1.01578, 0.42 ) }
    dend_48 { pt3dadd( 15.1771, 105.941, -0.995921, 0.56 ) }
    dend_48 { pt3dadd( 15.2464, 106.525, -0.974734, 0.56 ) }
    dend_48 { pt3dadd( 15.2768, 106.788, -0.965158, 0.7 ) }
    dend_48 { pt3dadd( 15.3405, 107.382, -0.943274, 0.56 ) }
    dend_48 { pt3dadd( 15.3966, 107.969, -0.921302, 0.42 ) }
    dend_48 { pt3dadd( 15.4325, 108.565, -0.937837, 0.56 ) }
    dend_48 { pt3dadd( 15.4474, 109.152, -0.985034, 0.7 ) }
    dend_48 { pt3dadd( 15.4377, 109.682, -1.04911, 0.84 ) }
    dend_48 { pt3dadd( 15.4158, 110.207, -1.12741, 0.7 ) }
    dend_48 { pt3dadd( 15.3761, 110.73, -1.22159, 0.84 ) }
    dend_48 { pt3dadd( 15.2803, 111.788, -1.4332, 0.7 ) }
    dend_48 { pt3dadd( 15.2389, 112.309, -1.53958, 0.56 ) }
    dend_48 { pt3dadd( 15.2289, 112.567, -1.59062, 0.56 ) }
    dend_48 { pt3dadd( 15.2651, 113.145, -1.68628, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( 15.2651, 113.145, -1.68628, 0.56 ) }
    dend_48 { pt3dadd( 15.384, 113.732, -1.66552, 0.14 ) }
    dend_48 { pt3dadd( 15.5153, 114.294, -1.55998, 0.1 ) }
    dend_48 { pt3dadd( 15.5884, 114.654, -1.47278, 0.1 ) }
    dend_48 { pt3dadd( 15.6893, 115.37, -1.27342, 0.1 ) }
    dend_48 { pt3dadd( 15.7048, 115.624, -1.19662, 0.14 ) }
    dend_48 { pt3dadd( 15.6883, 116.684, -0.959929, 0.28 ) }
    dend_48 { pt3dadd( 15.6602, 116.946, -0.920861, 0.42 ) }
    dend_48 { pt3dadd( 15.5503, 117.525, -0.933086, 0.56 ) }
    dend_48 { pt3dadd( 15.4352, 118.027, -1.0614, 0.7 ) }
    dend_48 { pt3dadd( 15.3176, 118.498, -1.23945, 0.56 ) }
    dend_48 { pt3dadd( 15.1173, 119.458, -1.68105, 0.42 ) }
    dend_48 { pt3dadd( 15.0463, 119.912, -1.93301, 0.28 ) }
    dend_48 { pt3dadd( 14.9353, 120.846, -2.44979, 0.42 ) }
    dend_48 { pt3dadd( 14.8677, 121.737, -2.91682, 0.56 ) }
    dend_48 { pt3dadd( 14.8042, 122.722, -3.34769, 0.56 ) }
    dend_48 { pt3dadd( 14.7491, 123.265, -3.55463, 0.42 ) }
    dend_48 { pt3dadd( 14.7123, 123.52, -3.61935, 0.28 ) }
    dend_48 { pt3dadd( 14.6038, 124.086, -3.73548, 0.1 ) }
    dend_48 { pt3dadd( 14.4845, 124.599, -3.80391, 0.1 ) }
    dend_48 { pt3dadd( 14.3486, 125.105, -3.8732, 0.1 ) }
    dend_48 { pt3dadd( 14.0341, 126.141, -4.1256, 0.1 ) }
    dend_48 { pt3dadd( 13.861, 126.621, -4.25354, 0.1 ) }
    dend_48 { pt3dadd( 13.6788, 127.091, -4.37726, 0.14 ) }
    dend_48 { pt3dadd( 13.5006, 127.571, -4.49655, 0.28 ) }
    dend_48 { pt3dadd( 13.4119, 127.809, -4.57046, 0.42 ) }
    dend_48 { pt3dadd( 13.2471, 128.276, -4.71611, 0.56 ) }
    dend_48 { pt3dadd( 13.0788, 128.82, -4.85142, 0.84 ) }
    dend_48 { pt3dadd( 12.9343, 129.304, -4.97932, 0.7 ) }
    dend_48 { pt3dadd( 12.7946, 129.797, -5.102, 0.56 ) }
    dend_48 { pt3dadd( 12.5215, 130.818, -5.32293, 0.42 ) }
    dend_48 { pt3dadd( 12.393, 131.324, -5.41691, 0.28 ) }
    dend_48 { pt3dadd( 12.2721, 131.838, -5.46416, 0.14 ) }
    dend_48 { pt3dadd( 12.1716, 132.361, -5.46617, 0.28 ) }
    dend_48 { pt3dadd( 12.0943, 132.875, -5.41921, 0.42 ) }
    dend_48 { pt3dadd( 12.0445, 133.397, -5.3226, 0.56 ) }
    dend_48 { pt3dadd( 12.0309, 133.651, -5.25383, 0.56 ) }
    dend_48 { pt3dadd( 12.0252, 134.698, -4.96412, 0.56 ) }
    dend_48 { pt3dadd( 12.0524, 135.275, -4.80994, 0.42 ) }
    dend_48 { pt3dadd( 12.1069, 135.852, -4.70998, 0.56 ) }
    dend_48 { pt3dadd( 12.1843, 136.444, -4.65735, 0.42 ) }
    dend_48 { pt3dadd( 12.2651, 136.962, -4.63583, 0.28 ) }
    dend_48 { pt3dadd( 12.3292, 137.334, -4.64943, 0.14 ) }
    dend_48 { pt3dadd( 12.4375, 137.912, -4.75433, 0.14 ) }
    dend_48 { pt3dadd( 12.631, 138.976, -5.01452, 0.28 ) }
    dend_48 { pt3dadd( 12.631, 138.976, -5.01452, 0.42 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 46/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 3.92772, 22.8056, -2.57646, 1.26 ) }
    dend_47 { pt3dadd( 4.61207, 23.2514, -3.07931, 1.26 ) }
    dend_47 { pt3dadd( 4.8431, 23.3812, -3.26241, 1.4 ) }
    dend_47 { pt3dadd( 5.1755, 23.5904, -3.57808, 1.54 ) }
    dend_47 { pt3dadd( 5.4671, 23.7919, -3.86166, 1.4 ) }
    dend_47 { pt3dadd( 6.0179, 24.1739, -4.37086, 1.26 ) }
    dend_47 { pt3dadd( 6.62713, 24.6279, -4.90787, 1.12 ) }
    dend_47 { pt3dadd( 6.92105, 24.8492, -5.17896, 0.98 ) }
    dend_47 { pt3dadd( 7.56942, 25.3697, -5.79333, 0.84 ) }
    dend_47 { pt3dadd( 7.76973, 25.541, -5.9815, 0.7 ) }
    dend_47 { pt3dadd( 8.04852, 25.8116, -6.22278, 0.56 ) }
    dend_47 { pt3dadd( 8.36705, 26.1529, -6.44317, 0.7 ) }
    dend_47 { pt3dadd( 8.6797, 26.5283, -6.61846, 0.56 ) }
    dend_47 { pt3dadd( 9.24878, 27.2596, -6.91311, 0.7 ) }
    dend_47 { pt3dadd( 9.38708, 27.4366, -6.97335, 0.7 ) }
    dend_47 { pt3dadd( 9.68907, 27.8345, -7.1187, 0.1 ) }
    dend_47 { pt3dadd( 9.86659, 28.0863, -7.21279, 0.1 ) }
    dend_47 { pt3dadd( 10.2349, 28.605, -7.39917, 0.1 ) }
    dend_47 { pt3dadd( 10.2349, 28.605, -7.39917, 0.14 ) }
    dend_47 { pt3dadd( 10.5487, 29.1956, -7.38359, 0.1 ) }
    dend_47 { pt3dadd( 10.698, 29.4845, -7.37581, 0.1 ) }
    dend_47 { pt3dadd( 10.8603, 29.7742, -7.36848, 0.1 ) }
    dend_47 { pt3dadd( 10.984, 29.9734, -7.3639, 0.1 ) }
    dend_47 { pt3dadd( 11.2769, 30.4001, -7.43646, 0.7 ) }
    dend_47 { pt3dadd( 11.4679, 30.6494, -7.50771, 0.56 ) }
    dend_47 { pt3dadd( 11.8885, 31.1317, -7.67122, 0.42 ) }
    dend_47 { pt3dadd( 12.0982, 31.361, -7.75068, 0.28 ) }
    dend_47 { pt3dadd( 12.4462, 31.7242, -7.87481, 0.42 ) }
    dend_47 { pt3dadd( 13.0374, 32.3066, -8.07251, 0.98 ) }
    dend_47 { pt3dadd( 13.4197, 32.6321, -8.19034, 0.84 ) }
    dend_47 { pt3dadd( 13.7705, 32.9108, -8.28777, 0.7 ) }
    dend_47 { pt3dadd( 14.0264, 33.1029, -8.34698, 0.56 ) }
    dend_47 { pt3dadd( 14.431, 33.4048, -8.41414, 0.42 ) }
    dend_47 { pt3dadd( 14.833, 33.7163, -8.45027, 0.28 ) }
    dend_47 { pt3dadd( 15.1918, 34.0067, -8.45037, 0.42 ) }
    dend_47 { pt3dadd( 15.442, 34.2168, -8.45009, 0.28 ) }
    dend_47 { pt3dadd( 15.8333, 34.5454, -8.44964, 0.14 ) }
    dend_47 { pt3dadd( 16.2395, 34.864, -8.45023, 0.28 ) }
    dend_47 { pt3dadd( 16.4995, 35.0605, -8.45096, 0.14 ) }
    dend_47 { pt3dadd( 16.9094, 35.363, -8.45244, 0.1 ) }
    dend_47 { pt3dadd( 17.3225, 35.6707, -8.4538, 0.14 ) }
    dend_47 { pt3dadd( 17.693, 35.9405, -8.45529, 0.28 ) }
    dend_47 { pt3dadd( 18.066, 36.2062, -8.45709, 0.42 ) }
    dend_47 { pt3dadd( 18.4773, 36.5141, -8.49316, 0.28 ) }
    dend_47 { pt3dadd( 18.8646, 36.8295, -8.59539, 0.14 ) }
    dend_47 { pt3dadd( 19.0812, 37.0359, -8.72487, 0.1 ) }
    dend_47 { pt3dadd( 19.324, 37.3274, -9.06185, 0.1 ) }
    dend_47 { pt3dadd( 19.4121, 37.4502, -9.23361, 0.14 ) }
    dend_47 { pt3dadd( 19.7336, 37.9446, -9.98566, 0.84 ) }
    dend_47 { pt3dadd( 20.0135, 38.3855, -10.6853, 0.98 ) }
    dend_47 { pt3dadd( 20.2972, 38.8259, -11.3837, 0.84 ) }
    dend_47 { pt3dadd( 20.8571, 39.6752, -12.6872, 0.84 ) }
    dend_47 { pt3dadd( 21.0399, 39.9439, -13.082, 0.7 ) }
    dend_47 { pt3dadd( 21.1682, 40.1178, -13.3135, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_47 { pt3dadd( 21.4406, 40.4183, -13.6376, 0.42 ) }
    dend_47 { pt3dadd( 21.7824, 40.7258, -13.8559, 0.28 ) }
    dend_47 { pt3dadd( 22.0425, 40.9109, -13.9173, 0.14 ) }
    dend_47 { pt3dadd( 22.2385, 41.0227, -13.9397, 0.28 ) }
    dend_47 { pt3dadd( 22.4394, 41.1238, -13.9797, 0.7 ) }
    dend_47 { pt3dadd( 22.8393, 41.3125, -14.0823, 0.56 ) }
    dend_47 { pt3dadd( 23.2309, 41.4978, -14.1979, 0.42 ) }
    dend_47 { pt3dadd( 23.6213, 41.6951, -14.3208, 0.28 ) }
    dend_47 { pt3dadd( 24.3843, 42.1296, -14.6316, 0.28 ) }
    dend_47 { pt3dadd( 24.6312, 42.2917, -14.7459, 0.56 ) }
    dend_47 { pt3dadd( 25.0019, 42.5703, -14.9649, 0.42 ) }
    dend_47 { pt3dadd( 25.3478, 42.8614, -15.1966, 0.28 ) }
    dend_47 { pt3dadd( 25.5622, 43.0597, -15.3486, 0.42 ) }
    dend_47 { pt3dadd( 26.1796, 43.6656, -15.7738, 0.56 ) }
    dend_47 { pt3dadd( 26.5118, 43.9969, -15.9748, 0.56 ) }
    dend_47 { pt3dadd( 27.1449, 44.6274, -16.3481, 0.56 ) }
    dend_47 { pt3dadd( 27.4857, 44.9583, -16.535, 0.56 ) }
    dend_47 { pt3dadd( 27.7061, 45.1755, -16.6399, 0.7 ) }
    dend_47 { pt3dadd( 28.0564, 45.5267, -16.7666, 0.56 ) }
    dend_47 { pt3dadd( 28.4032, 45.8993, -16.8691, 0.42 ) }
    dend_47 { pt3dadd( 28.6137, 46.1432, -16.9338, 0.28 ) }
    dend_47 { pt3dadd( 28.8984, 46.4926, -17.0478, 0.28 ) }
    dend_47 { pt3dadd( 29.1982, 46.8715, -17.2146, 0.1 ) }
    dend_47 { pt3dadd( 29.3809, 47.1017, -17.3587, 0.1 ) }
    dend_47 { pt3dadd( 29.9326, 47.8104, -17.8959, 0.14 ) }
    dend_47 { pt3dadd( 30.1013, 48.0246, -18.0749, 0.28 ) }
    dend_47 { pt3dadd( 30.6169, 48.6335, -18.6148, 0.42 ) }
    dend_47 { pt3dadd( 30.8962, 48.9314, -18.917, 0.28 ) }
    dend_47 { pt3dadd( 31.4015, 49.3768, -19.4266, 0.28 ) }
    dend_47 { pt3dadd( 31.6135, 49.5327, -19.6141, 0.56 ) }
    dend_47 { pt3dadd( 31.9853, 49.7513, -19.8758, 0.42 ) }
    dend_47 { pt3dadd( 32.3453, 49.9287, -20.0864, 0.28 ) }
    dend_47 { pt3dadd( 33.1306, 50.2895, -20.4254, 0.14 ) }
    dend_47 { pt3dadd( 33.5221, 50.4716, -20.5644, 0.28 ) }
    dend_47 { pt3dadd( 33.9216, 50.669, -20.6638, 0.14 ) }
    dend_47 { pt3dadd( 34.3093, 50.8753, -20.7477, 0.1 ) }
    dend_47 { pt3dadd( 34.6915, 51.109, -20.8441, 0.14 ) }
    dend_47 { pt3dadd( 35.2056, 51.4788, -20.9764, 0.28 ) }
    dend_47 { pt3dadd( 35.4577, 51.6772, -21.0336, 0.14 ) }
    dend_47 { pt3dadd( 35.8394, 52.0, -21.1361, 0.1 ) }
    dend_47 { pt3dadd( 36.0817, 52.2067, -21.2066, 0.1 ) }
    dend_47 { pt3dadd( 36.8019, 52.8128, -21.4188, 0.14 ) }
    dend_47 { pt3dadd( 37.1944, 53.118, -21.529, 0.28 ) }
    dend_47 { pt3dadd( 37.564, 53.375, -21.6211, 0.42 ) }
    dend_47 { pt3dadd( 37.9823, 53.6495, -21.7067, 0.56 ) }
    dend_47 { pt3dadd( 38.3665, 53.8886, -21.7665, 0.42 ) }
    dend_47 { pt3dadd( 38.7999, 54.1521, -21.8402, 0.28 ) }
    dend_47 { pt3dadd( 39.185, 54.3895, -21.8998, 0.14 ) }
    dend_47 { pt3dadd( 39.5994, 54.665, -22.0246, 0.28 ) }
    dend_47 { pt3dadd( 39.9869, 54.9485, -22.19, 0.42 ) }
    dend_47 { pt3dadd( 40.1508, 55.0841, -22.2775, 0.56 ) }
    dend_47 { pt3dadd( 40.7964, 55.684, -22.6674, 0.7 ) }
    dend_47 { pt3dadd( 41.126, 56.0084, -22.8821, 0.84 ) }
    dend_47 { pt3dadd( 41.6764, 56.5925, -23.2526, 0.7 ) }
    dend_47 { pt3dadd( 41.9975, 56.9325, -23.4582, 0.7 ) }
    dend_47 { pt3dadd( 42.3368, 57.2752, -23.6431, 0.56 ) }
    dend_47 { pt3dadd( 42.698, 57.6075, -23.7843, 0.42 ) }
    dend_47 { pt3dadd( 42.8781, 57.747, -23.8188, 0.28 ) }
    dend_47 { pt3dadd( 43.148, 57.9256, -23.8463, 0.1 ) }
    dend_47 { pt3dadd( 43.5473, 58.145, -23.8512, 0.1 ) }
    dend_47 { pt3dadd( 43.96, 58.3345, -23.8581, 0.1 ) }
    dend_47 { pt3dadd( 44.3818, 58.5047, -23.8307, 0.1 ) }
    dend_47 { pt3dadd( 44.7988, 58.6749, -23.7773, 0.14 ) }
    dend_47 { pt3dadd( 45.2637, 58.8685, -23.6985, 0.28 ) }
    dend_47 { pt3dadd( 45.6707, 59.0343, -23.5869, 0.28 ) }
    dend_47 { pt3dadd( 46.071, 59.1995, -23.4451, 0.28 ) }
    dend_47 { pt3dadd( 46.8976, 59.5357, -23.1111, 0.28 ) }
    dend_47 { pt3dadd( 47.3305, 59.7143, -22.9253, 0.42 ) }
    dend_47 { pt3dadd( 47.7186, 59.8808, -22.7539, 0.28 ) }
    dend_47 { pt3dadd( 48.5046, 60.2328, -22.418, 0.14 ) }
    dend_47 { pt3dadd( 48.8912, 60.425, -22.269, 0.1 ) }
    dend_47 { pt3dadd( 49.2767, 60.6365, -22.1506, 0.14 ) }
    dend_47 { pt3dadd( 49.7049, 60.8955, -22.0672, 0.28 ) }
    dend_47 { pt3dadd( 49.972, 61.0766, -22.0274, 0.42 ) }
    dend_47 { pt3dadd( 50.3793, 61.3917, -21.9929, 0.28 ) }
    dend_47 { pt3dadd( 50.7695, 61.7286, -22.0286, 0.28 ) }
    dend_47 { pt3dadd( 51.1457, 62.0696, -22.0909, 0.42 ) }
    dend_47 { pt3dadd( 51.3863, 62.2841, -22.145, 0.56 ) }
    dend_47 { pt3dadd( 51.7648, 62.6108, -22.248, 0.7 ) }
    dend_47 { pt3dadd( 52.147, 62.9286, -22.3618, 0.7 ) }
    dend_47 { pt3dadd( 52.8752, 63.5231, -22.5886, 0.84 ) }
    dend_47 { pt3dadd( 53.0484, 63.662, -22.641, 0.98 ) }
    dend_47 { pt3dadd( 53.402, 63.9415, -22.7365, 0.7 ) }
    dend_47 { pt3dadd( 53.6582, 64.1341, -22.7932, 0.56 ) }
    dend_47 { pt3dadd( 54.0695, 64.4259, -22.8595, 0.42 ) }
    dend_47 { pt3dadd( 54.493, 64.7039, -22.8971, 0.28 ) }
    dend_47 { pt3dadd( 54.9333, 64.977, -22.8641, 0.14 ) }
    dend_47 { pt3dadd( 55.3615, 65.2431, -22.8053, 0.1 ) }
    dend_47 { pt3dadd( 55.747, 65.4765, -22.7328, 0.14 ) }
    dend_47 { pt3dadd( 56.1249, 65.7065, -22.6456, 0.28 ) }
    dend_47 { pt3dadd( 56.4997, 65.9462, -22.542, 0.42 ) }
    dend_47 { pt3dadd( 57.2796, 66.4872, -22.3677, 0.56 ) }
    dend_47 { pt3dadd( 57.5318, 66.6852, -22.3281, 0.56 ) }
    dend_47 { pt3dadd( 57.696, 66.8367, -22.3399, 0.56 ) }
    dend_47 { pt3dadd( 58.0444, 67.1946, -22.4497, 0.56 ) }
    dend_47 { pt3dadd( 58.2552, 67.421, -22.5568, 0.42 ) }
    dend_47 { pt3dadd( 58.8719, 68.0559, -22.9432, 0.28 ) }
    dend_47 { pt3dadd( 59.0831, 68.2576, -23.0872, 0.14 ) }
    dend_47 { pt3dadd( 59.7509, 68.8238, -23.4928, 0.1 ) }
    dend_47 { pt3dadd( 60.0851, 69.0726, -23.6657, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( 60.4919, 69.3233, -23.833, 0.14 ) }
    dend_47 { pt3dadd( 60.8898, 69.5309, -23.9195, 0.28 ) }
    dend_47 { pt3dadd( 61.3521, 69.7326, -23.927, 0.42 ) }
    dend_47 { pt3dadd( 61.7751, 69.8904, -23.8898, 0.56 ) }
    dend_47 { pt3dadd( 62.1978, 70.0376, -23.808, 0.42 ) }
    dend_47 { pt3dadd( 62.6193, 70.1907, -23.7449, 0.28 ) }
    dend_47 { pt3dadd( 63.4813, 70.5239, -23.6594, 0.14 ) }
    dend_47 { pt3dadd( 63.8949, 70.7106, -23.6763, 0.28 ) }
    dend_47 { pt3dadd( 64.2871, 70.9182, -23.7477, 0.42 ) }
    dend_47 { pt3dadd( 64.5482, 71.0856, -23.8308, 0.56 ) }
    dend_47 { pt3dadd( 65.2781, 71.6306, -24.146, 0.42 ) }
    dend_47 { pt3dadd( 65.6303, 71.9224, -24.3672, 0.28 ) }
    dend_47 { pt3dadd( 66.245, 72.4791, -24.8526, 0.14 ) }
    dend_47 { pt3dadd( 66.4469, 72.6727, -25.018, 0.1 ) }
    dend_47 { pt3dadd( 66.7648, 72.9832, -25.2662, 0.1 ) }
    dend_47 { pt3dadd( 67.1008, 73.3021, -25.4909, 0.1 ) }
    dend_47 { pt3dadd( 67.679, 73.8508, -25.788, 0.14 ) }
    dend_47 { pt3dadd( 67.8994, 74.0617, -25.904, 0.1 ) }
    dend_47 { pt3dadd( 68.2442, 74.4096, -26.0704, 0.1 ) }
    dend_47 { pt3dadd( 68.5823, 74.7633, -26.2382, 0.1 ) }
    dend_47 { pt3dadd( 68.8982, 75.1179, -26.4291, 0.1 ) }
    dend_47 { pt3dadd( 69.0883, 75.3537, -26.5545, 0.14 ) }
    dend_47 { pt3dadd( 69.6379, 76.0756, -26.9013, 0.28 ) }
    dend_47 { pt3dadd( 69.9069, 76.4626, -27.1223, 0.14 ) }
    dend_47 { pt3dadd( 70.1493, 76.8471, -27.361, 0.1 ) }
    dend_47 { pt3dadd( 70.5347, 77.5265, -27.7834, 0.1 ) }
    dend_47 { pt3dadd( 70.7437, 77.915, -28.0416, 0.1 ) }
    dend_47 { pt3dadd( 70.9494, 78.316, -28.3012, 0.1 ) }
    dend_47 { pt3dadd( 71.3295, 79.0903, -28.7599, 0.14 ) }
    dend_47 { pt3dadd( 71.4547, 79.3463, -28.9238, 0.28 ) }
    dend_47 { pt3dadd( 71.6463, 79.7487, -29.1788, 0.42 ) }
    dend_47 { pt3dadd( 72.0293, 80.5294, -29.625, 0.28 ) }
    dend_47 { pt3dadd( 72.2363, 80.9387, -29.8542, 0.14 ) }
    dend_47 { pt3dadd( 72.3728, 81.1948, -30.0088, 0.1 ) }
    dend_47 { pt3dadd( 72.8397, 82.0088, -30.4877, 0.14 ) }
    dend_47 { pt3dadd( 72.9882, 82.2593, -30.6397, 0.28 ) }
    dend_47 { pt3dadd( 73.288, 82.7589, -30.9285, 0.42 ) }
    dend_47 { pt3dadd( 73.4483, 83.0221, -31.0556, 0.56 ) }
    dend_47 { pt3dadd( 73.8852, 83.7319, -31.3672, 0.56 ) }
    dend_47 { pt3dadd( 74.1435, 84.1613, -31.5195, 0.84 ) }
    dend_47 { pt3dadd( 74.3121, 84.4305, -31.61, 0.7 ) }
    dend_47 { pt3dadd( 74.5892, 84.8328, -31.7657, 0.56 ) }
    dend_47 { pt3dadd( 74.8956, 85.2204, -31.9277, 0.42 ) }
    dend_47 { pt3dadd( 75.2261, 85.5902, -32.0783, 0.56 ) }
    dend_47 { pt3dadd( 75.4545, 85.8102, -32.1581, 0.7 ) }
    dend_47 { pt3dadd( 76.181, 86.3461, -32.4039, 0.7 ) }
    dend_47 { pt3dadd( 76.5626, 86.5644, -32.5224, 0.7 ) }
    dend_47 { pt3dadd( 76.9688, 86.7386, -32.6326, 0.84 ) }
    dend_47 { pt3dadd( 77.1734, 86.8141, -32.6969, 1.26 ) }
    dend_47 { pt3dadd( 77.5782, 86.9437, -32.8257, 1.12 ) }
    dend_47 { pt3dadd( 77.9929, 87.0823, -32.949, 0.98 ) }
    dend_47 { pt3dadd( 78.4042, 87.241, -33.0524, 0.84 ) }
    dend_47 { pt3dadd( 78.8093, 87.4131, -33.1609, 0.7 ) }
    dend_47 { pt3dadd( 79.6504, 87.8101, -33.3871, 0.56 ) }
    dend_47 { pt3dadd( 80.0435, 88.0153, -33.4875, 0.42 ) }
    dend_47 { pt3dadd( 80.4798, 88.261, -33.5924, 0.28 ) }
    dend_47 { pt3dadd( 80.9106, 88.5095, -33.6875, 0.14 ) }
    dend_47 { pt3dadd( 81.2936, 88.7476, -33.7571, 0.1 ) }
    dend_47 { pt3dadd( 81.7129, 89.0324, -33.8401, 0.1 ) }
    dend_47 { pt3dadd( 82.1021, 89.34, -33.9558, 0.14 ) }
    dend_47 { pt3dadd( 82.2552, 89.4906, -34.0405, 0.28 ) }
    dend_47 { pt3dadd( 82.386, 89.6496, -34.1455, 0.42 ) }
    dend_47 { pt3dadd( 82.6357, 90.0162, -34.3967, 0.7 ) }
    dend_47 { pt3dadd( 83.0066, 90.6644, -34.873, 0.56 ) }
    dend_47 { pt3dadd( 83.3825, 91.3847, -35.4092, 0.56 ) }
    dend_47 { pt3dadd( 83.5093, 91.6226, -35.5829, 0.42 ) }
    dend_47 { pt3dadd( 83.7887, 92.1115, -35.9136, 0.28 ) }
    dend_47 { pt3dadd( 83.9457, 92.3585, -36.0625, 0.14 ) }
    dend_47 { pt3dadd( 84.5137, 93.1409, -36.4708, 0.1 ) }
    dend_47 { pt3dadd( 84.7142, 93.3854, -36.5604, 0.1 ) }
    dend_47 { pt3dadd( 85.0168, 93.7238, -36.6469, 0.1 ) }
    dend_47 { pt3dadd( 85.3631, 94.1017, -36.7291, 0.1 ) }
    dend_47 { pt3dadd( 85.714, 94.4718, -36.789, 0.1 ) }
    dend_47 { pt3dadd( 85.9449, 94.7097, -36.8092, 0.14 ) }
    dend_47 { pt3dadd( 86.3007, 95.0787, -36.8397, 0.28 ) }
    dend_47 { pt3dadd( 86.7415, 95.5502, -36.9123, 0.14 ) }
    dend_47 { pt3dadd( 86.9622, 95.788, -36.9627, 0.1 ) }
    dend_47 { pt3dadd( 87.3118, 96.1508, -37.058, 0.14 ) }
    dend_47 { pt3dadd( 87.6766, 96.5111, -37.1649, 0.1 ) }
    dend_47 { pt3dadd( 88.3076, 97.0978, -37.3486, 0.1 ) }
    dend_47 { pt3dadd( 88.688, 97.4292, -37.4576, 0.1 ) }
    dend_47 { pt3dadd( 89.0393, 97.7082, -37.5522, 0.1 ) }
    dend_47 { pt3dadd( 89.437, 98.0119, -37.6464, 0.1 ) }
    dend_47 { pt3dadd( 89.8446, 98.3175, -37.7207, 0.1 ) }
    dend_47 { pt3dadd( 90.2524, 98.6198, -37.7622, 0.14 ) }
    dend_47 { pt3dadd( 90.4375, 98.7568, -37.7628, 0.28 ) }
    dend_47 { pt3dadd( 90.619, 98.8992, -37.7631, 0.42 ) }
    dend_47 { pt3dadd( 90.8637, 99.1047, -37.7628, 0.56 ) }
    dend_47 { pt3dadd( 91.2419, 99.4557, -37.8029, 0.42 ) }
    dend_47 { pt3dadd( 91.5963, 99.8198, -37.8736, 0.28 ) }
    dend_47 { pt3dadd( 91.9283, 100.202, -37.9632, 0.14 ) }
    dend_47 { pt3dadd( 92.1273, 100.462, -38.0262, 0.1 ) }
    dend_47 { pt3dadd( 92.4159, 100.878, -38.1277, 0.1 ) }
    dend_47 { pt3dadd( 92.9251, 101.694, -38.3214, 0.1 ) }
    dend_47 { pt3dadd( 93.0757, 101.975, -38.3823, 0.1 ) }
    dend_47 { pt3dadd( 93.3595, 102.559, -38.5382, 0.1 ) }
    dend_47 { pt3dadd( 93.5772, 103.007, -38.6732, 0.1 ) }
    dend_47 { pt3dadd( 93.728, 103.288, -38.7634, 0.1 ) }
    dend_47 { pt3dadd( 93.9761, 103.706, -38.9332, 0.1 ) }
    dend_47 { pt3dadd( 94.2414, 104.092, -39.1561, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_47 { pt3dadd( 94.6586, 104.632, -39.662, 0.1 ) }
    dend_47 { pt3dadd( 94.8649, 104.866, -39.9933, 0.1 ) }
    dend_47 { pt3dadd( 95.0696, 105.073, -40.3444, 0.1 ) }
    dend_47 { pt3dadd( 95.4706, 105.434, -41.0236, 0.1 ) }
    dend_47 { pt3dadd( 95.8941, 105.78, -41.7001, 0.14 ) }
    dend_47 { pt3dadd( 96.3919, 106.154, -42.4196, 0.1 ) }
    dend_47 { pt3dadd( 96.8782, 106.521, -42.9993, 0.1 ) }
    dend_47 { pt3dadd( 97.2015, 106.758, -43.3163, 0.1 ) }
    dend_47 { pt3dadd( 97.5407, 106.98, -43.511, 0.1 ) }
    dend_47 { pt3dadd( 97.9874, 107.216, -43.5328, 0.1 ) }
    dend_47 { pt3dadd( 98.3895, 107.406, -43.4298, 0.1 ) }
    dend_47 { pt3dadd( 99.2056, 107.765, -43.0903, 0.1 ) }
    dend_47 { pt3dadd( 99.5882, 107.924, -42.9069, 0.1 ) }
    dend_47 { pt3dadd( 100.382, 108.23, -42.5367, 0.1 ) }
    dend_47 { pt3dadd( 100.577, 108.302, -42.449, 0.1 ) }
    dend_47 { pt3dadd( 101.019, 108.456, -42.2521, 0.1 ) }
    dend_47 { pt3dadd( 101.419, 108.595, -42.093, 0.1 ) }
    dend_47 { pt3dadd( 101.84, 108.733, -41.9909, 0.1 ) }
    dend_47 { pt3dadd( 102.263, 108.878, -41.9182, 0.1 ) }
    dend_47 { pt3dadd( 102.263, 108.878, -41.9182, 0.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 2.95335, -49.1364, 5.99403, 0.98 ) }
    dend_16 { pt3dadd( 3.21043, -49.6696, 5.9504, 0.98 ) }
    dend_16 { pt3dadd( 3.48087, -50.2795, 5.90504, 0.84 ) }
    dend_16 { pt3dadd( 3.71054, -50.8382, 5.86699, 0.98 ) }
    dend_16 { pt3dadd( 3.9505, -51.4625, 5.82768, 1.12 ) }
    dend_16 { pt3dadd( 4.05394, -51.7469, 5.8109, 1.68 ) }
    dend_16 { pt3dadd( 4.25161, -52.3163, 5.77914, 1.54 ) }
    dend_16 { pt3dadd( 4.4236, -52.895, 5.75244, 1.4 ) }
    dend_16 { pt3dadd( 4.56877, -53.4852, 5.73104, 1.26 ) }
    dend_16 { pt3dadd( 4.69747, -54.0767, 5.71284, 1.12 ) }
    dend_16 { pt3dadd( 4.80839, -54.6749, 5.74061, 1.26 ) }
    dend_16 { pt3dadd( 4.91202, -55.2583, 5.80029, 1.12 ) }
    dend_16 { pt3dadd( 5.03371, -55.9116, 5.94295, 0.98 ) }
    dend_16 { pt3dadd( 5.1452, -56.4791, 6.11633, 0.84 ) }
    dend_16 { pt3dadd( 5.25936, -57.0354, 6.32638, 0.7 ) }
    dend_16 { pt3dadd( 5.50551, -58.1714, 6.82252, 0.84 ) }
    dend_16 { pt3dadd( 5.62964, -58.7054, 7.07533, 0.84 ) }
    dend_16 { pt3dadd( 5.89594, -59.8105, 7.54582, 0.7 ) }
    dend_16 { pt3dadd( 6.03774, -60.3654, 7.73325, 0.84 ) }
    dend_16 { pt3dadd( 6.03774, -60.3654, 7.73325, 0.98 ) }
    dend_16 { pt3dadd( 6.11635, -60.6482, 7.73568, 1.12 ) }
    dend_16 { pt3dadd( 6.29193, -61.2274, 7.6877, 0.98 ) }
    dend_16 { pt3dadd( 6.65809, -62.403, 7.5874, 0.84 ) }
    dend_16 { pt3dadd( 6.83746, -62.9769, 7.53104, 0.7 ) }
    dend_16 { pt3dadd( 7.05779, -63.6176, 7.50266, 0.56 ) }
    dend_16 { pt3dadd( 7.25647, -64.186, 7.46228, 0.7 ) }
    dend_16 { pt3dadd( 7.62957, -65.3305, 7.1917, 0.84 ) }
    dend_16 { pt3dadd( 7.80716, -65.8823, 7.02992, 0.98 ) }
    dend_16 { pt3dadd( 7.99093, -66.4346, 6.9056, 0.84 ) }
    dend_16 { pt3dadd( 8.20243, -67.0714, 6.80585, 0.98 ) }
    dend_16 { pt3dadd( 8.53986, -68.1323, 6.71833, 1.12 ) }
    dend_16 { pt3dadd( 9.20792, -70.2031, 6.67286, 0.98 ) }
    dend_16 { pt3dadd( 9.53874, -71.2689, 6.58275, 0.84 ) }
    dend_16 { pt3dadd( 9.9327, -72.4272, 6.74494, 0.84 ) }
    dend_16 { pt3dadd( 10.3271, -73.4088, 7.3563, 0.98 ) }
    dend_16 { pt3dadd( 10.5072, -73.8127, 7.74906, 0.84 ) }
    dend_16 { pt3dadd( 10.6867, -74.1984, 8.16245, 0.98 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 57/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.95335, -49.1364, 5.99403, 1.82 ) }
    dend_15 { pt3dadd( 2.47628, -50.088, 6.70265, 1.82 ) }
    dend_15 { pt3dadd( 2.2488, -50.6059, 7.07472, 1.68 ) }
    dend_15 { pt3dadd( 2.13196, -50.9256, 7.34085, 1.54 ) }
    dend_15 { pt3dadd( 1.92637, -51.5702, 7.87244, 1.4 ) }
    dend_15 { pt3dadd( 1.85089, -51.8014, 8.05783, 1.26 ) }
    dend_15 { pt3dadd( 1.49654, -52.7645, 8.82191, 0.1 ) }
    dend_15 { pt3dadd( 1.29448, -53.2909, 9.21017, 0.1 ) }
    dend_15 { pt3dadd( 0.91835, -54.171, 9.88466, 0.1 ) }
    dend_15 { pt3dadd( 0.681678, -54.6691, 10.2696, 0.14 ) }
    dend_15 { pt3dadd( 0.4007, -55.1547, 10.6449, 0.28 ) }
    dend_15 { pt3dadd( 0.0836293, -55.5756, 10.9502, 0.42 ) }
    dend_15 { pt3dadd( -0.187415, -55.8609, 11.1234, 0.28 ) }
    dend_15 { pt3dadd( -0.616412, -56.2239, 11.3411, 0.14 ) }
    dend_15 { pt3dadd( -0.842826, -56.3913, 11.4503, 0.28 ) }
    dend_15 { pt3dadd( -1.23945, -56.6914, 11.7848, 0.56 ) }
    dend_15 { pt3dadd( -1.54444, -57.004, 12.2002, 0.56 ) }
    dend_15 { pt3dadd( -1.54444, -57.004, 12.2002, 0.56 ) }
    dend_15 { pt3dadd( -1.54444, -57.004, 12.2002, 0.56 ) }
    dend_15 { pt3dadd( -1.80027, -57.6847, 13.2317, 0.56 ) }
    dend_15 { pt3dadd( -2.00701, -58.3348, 14.163, 0.42 ) }
    dend_15 { pt3dadd( -2.10362, -58.7467, 14.6809, 0.28 ) }
    dend_15 { pt3dadd( -2.27641, -59.6148, 15.6006, 0.42 ) }
    dend_15 { pt3dadd( -2.34228, -59.9324, 15.8718, 0.28 ) }
    dend_15 { pt3dadd( -2.39453, -60.186, 16.0376, 0.42 ) }
    dend_15 { pt3dadd( -2.47781, -60.5866, 16.2076, 0.7 ) }
    dend_15 { pt3dadd( -2.59316, -61.2234, 16.4258, 0.56 ) }
    dend_15 { pt3dadd( -2.66697, -61.883, 16.6373, 0.42 ) }
    dend_15 { pt3dadd( -2.66017, -62.5272, 16.865, 0.28 ) }
    dend_15 { pt3dadd( -2.62586, -62.8083, 16.9897, 0.14 ) }
    dend_15 { pt3dadd( -2.62586, -62.8083, 16.9897, 0.28 ) }
    dend_15 { pt3dadd( -2.3433, -63.7934, 17.4797, 0.1 ) }
    dend_15 { pt3dadd( -2.14882, -64.3205, 17.7312, 0.14 ) }
    dend_15 { pt3dadd( -1.69958, -65.3908, 18.2014, 0.1 ) }
    dend_15 { pt3dadd( -1.45774, -65.923, 18.395, 0.1 ) }
    dend_15 { pt3dadd( -1.21474, -66.4675, 18.5403, 0.1 ) }
    dend_15 { pt3dadd( -0.969967, -67.017, 18.6228, 0.1 ) }
    dend_15 { pt3dadd( -0.696017, -67.6522, 18.6333, 0.1 ) }
    dend_15 { pt3dadd( -0.569124, -67.9333, 18.6171, 0.28 ) }
    dend_15 { pt3dadd( -0.29103, -68.5508, 18.5314, 0.14 ) }
    dend_15 { pt3dadd( -0.0328979, -69.0899, 18.4513, 0.1 ) }
    dend_15 { pt3dadd( 0.269241, -69.7113, 18.3575, 0.1 ) }
    dend_15 { pt3dadd( 0.533823, -70.2465, 18.2751, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( 0.826971, -70.8627, 18.1344, 0.14 ) }
    dend_15 { pt3dadd( 1.06399, -71.3965, 17.9864, 0.1 ) }
    dend_15 { pt3dadd( 1.29755, -72.0095, 17.7991, 0.14 ) }
    dend_15 { pt3dadd( 1.48187, -72.57, 17.6175, 0.1 ) }
    dend_15 { pt3dadd( 1.63971, -73.2046, 17.4162, 0.1 ) }
    dend_15 { pt3dadd( 1.87266, -74.4329, 17.0447, 0.1 ) }
    dend_15 { pt3dadd( 1.92768, -74.8489, 16.9314, 0.28 ) }
    dend_15 { pt3dadd( 1.99065, -75.5192, 16.7613, 0.14 ) }
    dend_15 { pt3dadd( 2.01842, -76.122, 16.6245, 0.1 ) }
    dend_15 { pt3dadd( 2.03359, -76.7959, 16.5019, 0.1 ) }
    dend_15 { pt3dadd( 2.03618, -77.4128, 16.4373, 0.1 ) }
    dend_15 { pt3dadd( 2.06285, -78.036, 16.4374, 0.14 ) }
    dend_15 { pt3dadd( 2.09666, -78.3457, 16.4304, 0.28 ) }
    dend_15 { pt3dadd( 2.14724, -78.6526, 16.4176, 0.28 ) }
    dend_15 { pt3dadd( 2.26568, -79.2625, 16.3862, 0.42 ) }
    dend_15 { pt3dadd( 2.33287, -79.5625, 16.3677, 0.42 ) }
    dend_15 { pt3dadd( 2.46619, -80.1577, 16.331, 0.28 ) }
    dend_15 { pt3dadd( 2.58683, -80.7641, 16.2987, 0.14 ) }
    dend_15 { pt3dadd( 2.7002, -81.3752, 16.269, 0.1 ) }
    dend_15 { pt3dadd( 2.79654, -81.9869, 16.2452, 0.14 ) }
    dend_15 { pt3dadd( 2.88028, -82.6038, 16.2257, 0.1 ) }
    dend_15 { pt3dadd( 2.93103, -83.2197, 16.1739, 0.1 ) }
    dend_15 { pt3dadd( 2.95887, -83.8993, 16.0874, 0.1 ) }
    dend_15 { pt3dadd( 2.96731, -84.511, 15.9886, 0.1 ) }
    dend_15 { pt3dadd( 2.96735, -85.197, 15.86, 0.1 ) }
    dend_15 { pt3dadd( 2.96631, -85.803, 15.7714, 0.1 ) }
    dend_15 { pt3dadd( 2.95743, -87.1059, 15.6444, 0.1 ) }
    dend_15 { pt3dadd( 2.95024, -87.7291, 15.6172, 0.1 ) }
    dend_15 { pt3dadd( 2.94121, -88.3498, 15.6252, 0.1 ) }
    dend_15 { pt3dadd( 2.9214, -88.961, 15.6711, 0.14 ) }
    dend_15 { pt3dadd( 2.88309, -90.1419, 15.8269, 0.1 ) }
    dend_15 { pt3dadd( 2.86282, -90.8285, 15.955, 0.1 ) }
    dend_15 { pt3dadd( 2.85947, -91.4816, 16.1582, 0.14 ) }
    dend_15 { pt3dadd( 2.85425, -92.14, 16.385, 0.1 ) }
    dend_15 { pt3dadd( 2.86212, -92.7677, 16.6513, 0.1 ) }
    dend_15 { pt3dadd( 2.87457, -93.0469, 16.7772, 0.14 ) }
    dend_15 { pt3dadd( 2.92515, -93.6147, 17.0192, 0.28 ) }
    dend_15 { pt3dadd( 3.07939, -94.6772, 17.5125, 0.1 ) }
    dend_15 { pt3dadd( 3.18121, -95.2099, 17.7777, 0.1 ) }
    dend_15 { pt3dadd( 3.44131, -96.3442, 18.3441, 0.1 ) }
    dend_15 { pt3dadd( 3.57707, -96.888, 18.5954, 0.1 ) }
    dend_15 { pt3dadd( 3.71424, -97.4423, 18.8239, 0.1 ) }
    dend_15 { pt3dadd( 3.78941, -97.7204, 18.9357, 0.14 ) }
    dend_15 { pt3dadd( 3.78941, -97.7204, 18.9357, 0.28 ) }
    dend_15 { pt3dadd( 3.97704, -98.2528, 19.1567, 0.28 ) }
    dend_15 { pt3dadd( 4.1862, -98.7793, 19.3896, 0.28 ) }
    dend_15 { pt3dadd( 4.1862, -98.7793, 19.3896, 0.42 ) }
    dend_15 { pt3dadd( 4.63617, -99.6785, 19.9047, 0.1 ) }
    dend_15 { pt3dadd( 4.88277, -100.153, 20.1962, 0.1 ) }
    dend_15 { pt3dadd( 5.39542, -101.102, 20.8179, 0.1 ) }
    dend_15 { pt3dadd( 5.65227, -101.544, 21.1437, 0.1 ) }
    dend_15 { pt3dadd( 5.83876, -101.85, 21.3818, 0.1 ) }
    dend_15 { pt3dadd( 5.83876, -101.85, 21.3818, 0.1 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 53/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.867498, -32.1508, -0.584154, 0.56 ) }
    dend_5 { pt3dadd( -0.945093, -32.4216, -1.02935, 0.56 ) }
    dend_5 { pt3dadd( -1.04719, -32.7146, -1.53286, 0.42 ) }
    dend_5 { pt3dadd( -1.15357, -32.9839, -2.04015, 0.28 ) }
    dend_5 { pt3dadd( -1.36934, -33.4436, -3.01911, 0.7 ) }
    dend_5 { pt3dadd( -1.55119, -33.7494, -3.95781, 0.84 ) }
    dend_5 { pt3dadd( -1.69227, -33.8416, -4.94359, 0.98 ) }
    dend_5 { pt3dadd( -1.68395, -33.6788, -5.99835, 1.12 ) }
    dend_5 { pt3dadd( -1.65761, -33.5133, -6.56285, 1.26 ) }
    dend_5 { pt3dadd( -1.64388, -33.3261, -7.05463, 1.12 ) }
    dend_5 { pt3dadd( -1.68929, -32.9307, -7.94223, 0.98 ) }
    dend_5 { pt3dadd( -1.80024, -32.5641, -8.97369, 0.84 ) }
    dend_5 { pt3dadd( -1.89963, -32.3413, -9.87268, 0.7 ) }
    dend_5 { pt3dadd( -1.95957, -32.2599, -10.3866, 0.56 ) }
    dend_5 { pt3dadd( -2.02806, -32.2056, -10.9001, 0.56 ) }
    dend_5 { pt3dadd( -2.09482, -32.1456, -11.4068, 0.56 ) }
    dend_5 { pt3dadd( -2.20165, -31.9656, -12.3848, 0.7 ) }
    dend_5 { pt3dadd( -2.20465, -31.9061, -12.6377, 0.84 ) }
    dend_5 { pt3dadd( -2.2058, -31.7423, -13.2021, 1.26 ) }
    dend_5 { pt3dadd( -2.19062, -31.4348, -14.2227, 1.12 ) }
    dend_5 { pt3dadd( -2.17413, -31.1012, -15.2738, 0.98 ) }
    dend_5 { pt3dadd( -2.16969, -30.7982, -16.1924, 1.12 ) }
    dend_5 { pt3dadd( -2.22565, -30.5095, -17.078, 0.98 ) }
    dend_5 { pt3dadd( -2.34515, -30.2689, -18.1067, 0.84 ) }
    dend_5 { pt3dadd( -2.72267, -30.4873, -18.5026, 0.7 ) }
    dend_5 { pt3dadd( -3.53745, -31.0663, -18.9882, 0.56 ) }
    dend_5 { pt3dadd( -3.78062, -31.2413, -19.1976, 0.42 ) }
    dend_5 { pt3dadd( -3.95829, -31.3291, -19.7484, 0.56 ) }
    dend_5 { pt3dadd( -3.97386, -31.3267, -20.0095, 0.56 ) }
    dend_5 { pt3dadd( -3.95983, -31.2713, -21.1058, 0.56 ) }
    dend_5 { pt3dadd( -3.85404, -31.1739, -22.0944, 0.42 ) }
    dend_5 { pt3dadd( -3.67813, -31.0517, -23.0718, 0.28 ) }
    dend_5 { pt3dadd( -3.45966, -30.9176, -24.036, 0.14 ) }
    dend_5 { pt3dadd( -3.24414, -30.7914, -24.9315, 0.1 ) }
    dend_5 { pt3dadd( -3.02027, -30.6676, -25.8989, 0.84 ) }
    dend_5 { pt3dadd( -2.61734, -30.4952, -27.7238, 0.7 ) }
    dend_5 { pt3dadd( -2.26222, -30.3705, -29.5621, 0.56 ) }
    dend_5 { pt3dadd( -2.11465, -30.3449, -30.4788, 0.7 ) }
    dend_5 { pt3dadd( -2.04812, -30.3481, -30.9861, 0.56 ) }
    dend_5 { pt3dadd( -2.01114, -30.3615, -31.5077, 0.56 ) }
    dend_5 { pt3dadd( -2.03039, -30.4103, -32.5713, 0.42 ) }
    dend_5 { pt3dadd( -2.14354, -30.4345, -33.0815, 0.28 ) }
    dend_5 { pt3dadd( -2.57079, -30.3835, -33.9808, 0.42 ) }
    dend_5 { pt3dadd( -2.68834, -30.3133, -34.2019, 0.56 ) }
    dend_5 { pt3dadd( -2.9204, -30.0522, -34.6787, 0.28 ) }
    dend_5 { pt3dadd( -3.15091, -29.7254, -35.1173, 0.14 ) }
    dend_5 { pt3dadd( -3.38253, -29.3859, -35.5379, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( -3.62726, -29.0681, -35.9748, 0.42 ) }
    dend_5 { pt3dadd( -4.07669, -28.5976, -36.8303, 0.56 ) }
    dend_5 { pt3dadd( -4.07669, -28.5976, -36.8303, 0.7 ) }
    dend_5 { pt3dadd( -4.24902, -28.5848, -37.324, 2.1 ) }
    dend_5 { pt3dadd( -4.54011, -28.7609, -38.3342, 1.96 ) }
    dend_5 { pt3dadd( -4.64051, -28.93, -38.812, 1.82 ) }
    dend_5 { pt3dadd( -4.81173, -29.3148, -39.687, 1.68 ) }
    dend_5 { pt3dadd( -4.91904, -29.5903, -40.2061, 0.7 ) }
    dend_5 { pt3dadd( -5.0847, -30.1173, -41.162, 0.56 ) }
    dend_5 { pt3dadd( -5.11796, -30.3078, -41.4825, 0.56 ) }
    dend_5 { pt3dadd( -5.16655, -30.9526, -42.3857, 0.42 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 11/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.867498, -32.1508, -0.584154, 0.7 ) }
    dend_2 { pt3dadd( -0.876169, -32.6306, -0.586274, 0.7 ) }
    dend_2 { pt3dadd( -0.882411, -32.9667, -0.587715, 0.56 ) }
    dend_2 { pt3dadd( -0.882557, -33.5032, -0.592555, 0.42 ) }
    dend_2 { pt3dadd( -0.886052, -33.978, -0.641637, 0.28 ) }
    dend_2 { pt3dadd( -0.879104, -34.5042, -0.684681, 0.14 ) }
    dend_2 { pt3dadd( -0.853444, -34.9811, -0.684655, 0.1 ) }
    dend_2 { pt3dadd( -0.798427, -35.5132, -0.649013, 0.1 ) }
    dend_2 { pt3dadd( -0.730189, -35.9732, -0.592366, 0.1 ) }
    dend_2 { pt3dadd( -0.573003, -36.8291, -0.445485, 0.14 ) }
    dend_2 { pt3dadd( -0.397968, -37.6756, -0.272466, 0.42 ) }
    dend_2 { pt3dadd( -0.179025, -38.601, -0.0710413, 0.28 ) }
    dend_2 { pt3dadd( -0.075342, -39.0541, 0.0282999, 0.14 ) }
    dend_2 { pt3dadd( 0.0394736, -39.5569, 0.130661, 0.1 ) }
    dend_2 { pt3dadd( 0.130989, -40.0217, 0.181133, 0.14 ) }
    dend_2 { pt3dadd( 0.204609, -40.495, 0.163627, 0.1 ) }
    dend_2 { pt3dadd( 0.239742, -40.9532, 0.0397974, 0.1 ) }
    dend_2 { pt3dadd( 0.241521, -41.4353, -0.166279, 0.1 ) }
    dend_2 { pt3dadd( 0.228153, -41.8593, -0.375525, 0.1 ) }
    dend_2 { pt3dadd( 0.174737, -42.7145, -0.824844, 0.1 ) }
    dend_2 { pt3dadd( 0.10392, -43.4549, -1.22093, 0.14 ) }
    dend_2 { pt3dadd( 0.0681126, -43.7482, -1.37976, 0.56 ) }
    dend_2 { pt3dadd( 0.0126562, -44.2125, -1.61672, 0.42 ) }
    dend_2 { pt3dadd( -0.0297482, -44.6417, -1.81199, 0.28 ) }
    dend_2 { pt3dadd( -0.0650957, -45.1489, -1.97543, 0.42 ) }
    dend_2 { pt3dadd( -0.0621969, -45.3871, -2.00327, 0.56 ) }
    dend_2 { pt3dadd( -0.0621969, -45.3871, -2.00327, 0.42 ) }
    dend_2 { pt3dadd( 0.0132807, -45.8491, -2.02699, 0.84 ) }
    dend_2 { pt3dadd( 0.0132807, -45.8491, -2.02699, 0.7 ) }
    dend_2 { pt3dadd( 0.0696971, -46.0769, -2.07136, 0.28 ) }
    dend_2 { pt3dadd( 0.191029, -46.5182, -2.19651, 0.14 ) }
    dend_2 { pt3dadd( 0.311722, -46.9557, -2.34104, 0.1 ) }
    dend_2 { pt3dadd( 0.431418, -47.3878, -2.49387, 0.1 ) }
    dend_2 { pt3dadd( 0.551331, -47.8201, -2.65264, 0.1 ) }
    dend_2 { pt3dadd( 0.802857, -48.727, -2.97749, 0.14 ) }
    dend_2 { pt3dadd( 0.857291, -48.9393, -3.06933, 0.28 ) }
    dend_2 { pt3dadd( 0.906358, -49.1448, -3.17205, 0.1 ) }
    dend_2 { pt3dadd( 1.00513, -49.5569, -3.36769, 0.1 ) }
    dend_2 { pt3dadd( 1.11847, -49.9817, -3.54232, 0.1 ) }
    dend_2 { pt3dadd( 1.24939, -50.4217, -3.67001, 0.1 ) }
    dend_2 { pt3dadd( 1.54253, -51.2425, -3.78485, 0.14 ) }
    dend_2 { pt3dadd( 1.54253, -51.2425, -3.78485, 0.1 ) }
    dend_2 { pt3dadd( 1.87717, -52.0527, -3.84498, 0.28 ) }
    dend_2 { pt3dadd( 2.07987, -52.5388, -3.86049, 0.14 ) }
    dend_2 { pt3dadd( 2.26031, -52.9798, -3.85777, 0.1 ) }
    dend_2 { pt3dadd( 2.45174, -53.4708, -3.84098, 0.1 ) }
    dend_2 { pt3dadd( 2.52847, -53.6964, -3.8284, 0.14 ) }
    dend_2 { pt3dadd( 2.61205, -54.0243, -3.82718, 0.28 ) }
    dend_2 { pt3dadd( 2.69513, -54.4847, -3.85285, 0.14 ) }
    dend_2 { pt3dadd( 2.74812, -54.9611, -3.87089, 0.1 ) }
    dend_2 { pt3dadd( 2.77654, -55.4376, -3.88257, 0.14 ) }
    dend_2 { pt3dadd( 2.78236, -55.9741, -3.88895, 0.1 ) }
    dend_2 { pt3dadd( 2.78083, -56.5038, -3.89337, 0.1 ) }
    dend_2 { pt3dadd( 2.7823, -56.9837, -3.89812, 0.1 ) }
    dend_2 { pt3dadd( 2.78696, -57.5211, -3.87269, 0.1 ) }
    dend_2 { pt3dadd( 2.80438, -58.0458, -3.8182, 0.1 ) }
    dend_2 { pt3dadd( 2.84799, -58.5751, -3.73674, 0.14 ) }
    dend_2 { pt3dadd( 2.88513, -58.8072, -3.69265, 0.28 ) }
    dend_2 { pt3dadd( 2.93768, -59.0354, -3.64517, 0.42 ) }
    dend_2 { pt3dadd( 3.17126, -59.8662, -3.47472, 0.56 ) }
    dend_2 { pt3dadd( 3.3121, -60.3208, -3.43437, 0.42 ) }
    dend_2 { pt3dadd( 3.45134, -60.7667, -3.44652, 0.28 ) }
    dend_2 { pt3dadd( 3.57194, -61.2181, -3.5446, 0.14 ) }
    dend_2 { pt3dadd( 3.67898, -61.6657, -3.6621, 0.28 ) }
    dend_2 { pt3dadd( 3.78318, -62.1199, -3.76732, 0.14 ) }
    dend_2 { pt3dadd( 3.99492, -63.0438, -3.98371, 0.1 ) }
    dend_2 { pt3dadd( 4.11595, -63.4993, -4.06243, 0.1 ) }
    dend_2 { pt3dadd( 4.39425, -64.4219, -4.15861, 0.1 ) }
    dend_2 { pt3dadd( 4.67393, -65.2567, -4.18557, 0.1 ) }
    dend_2 { pt3dadd( 5.00542, -66.1687, -4.15056, 0.1 ) }
    dend_2 { pt3dadd( 5.18451, -66.6079, -4.10692, 0.1 ) }
    dend_2 { pt3dadd( 5.39164, -67.0775, -3.99468, 0.14 ) }
    dend_2 { pt3dadd( 5.57778, -67.4954, -3.87719, 0.28 ) }
    dend_2 { pt3dadd( 5.76164, -67.9151, -3.75385, 0.14 ) }
    dend_2 { pt3dadd( 5.93356, -68.349, -3.673, 0.1 ) }
    dend_2 { pt3dadd( 6.10563, -68.8489, -3.60295, 0.14 ) }
    dend_2 { pt3dadd( 6.37093, -69.7102, -3.46983, 0.1 ) }
    dend_2 { pt3dadd( 6.49378, -70.1664, -3.39929, 0.1 ) }
    dend_2 { pt3dadd( 6.6002, -70.6258, -3.33492, 0.1 ) }
    dend_2 { pt3dadd( 6.69305, -71.0925, -3.28275, 0.1 ) }
    dend_2 { pt3dadd( 6.78234, -71.6124, -3.24616, 0.14 ) }
    dend_2 { pt3dadd( 6.84502, -72.0877, -3.23565, 0.1 ) }
    dend_2 { pt3dadd( 6.90263, -72.5611, -3.25485, 0.1 ) }
    dend_2 { pt3dadd( 6.95463, -73.092, -3.30764, 0.1 ) }
    dend_2 { pt3dadd( 6.99323, -73.5538, -3.37806, 0.14 ) }
    dend_2 { pt3dadd( 7.03121, -74.0194, -3.47251, 0.28 ) }
    dend_2 { pt3dadd( 7.0808, -74.5363, -3.60081, 0.28 ) }
    dend_2 { pt3dadd( 7.12737, -74.9926, -3.7272, 0.14 ) }
    dend_2 { pt3dadd( 7.22995, -75.8324, -3.97418, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_2 { pt3dadd( 7.26381, -76.0511, -4.03928, 0.56 ) }
    dend_2 { pt3dadd( 7.34177, -76.4902, -4.20072, 0.42 ) }
    dend_2 { pt3dadd( 7.43169, -76.9235, -4.37593, 0.28 ) }
    dend_2 { pt3dadd( 7.53532, -77.351, -4.55074, 0.14 ) }
    dend_2 { pt3dadd( 7.64747, -77.7839, -4.71366, 0.1 ) }
    dend_2 { pt3dadd( 7.768, -78.2206, -4.85312, 0.1 ) }
    dend_2 { pt3dadd( 8.02061, -79.1356, -5.15591, 0.14 ) }
    dend_2 { pt3dadd( 8.14125, -79.5715, -5.30483, 0.28 ) }
    dend_2 { pt3dadd( 8.25922, -79.9987, -5.44797, 0.14 ) }
    dend_2 { pt3dadd( 8.37856, -80.4269, -5.61688, 0.28 ) }
    dend_2 { pt3dadd( 8.49648, -80.8491, -5.79422, 0.42 ) }
    dend_2 { pt3dadd( 8.49648, -80.8491, -5.79422, 0.56 ) }
    dend_2 { pt3dadd( 8.54851, -81.0506, -5.90712, 0.56 ) }
    dend_2 { pt3dadd( 8.64022, -81.4355, -6.1606, 0.42 ) }
    dend_2 { pt3dadd( 8.81807, -82.2329, -6.71944, 0.28 ) }
    dend_2 { pt3dadd( 8.89938, -82.6133, -6.98257, 0.14 ) }
    dend_2 { pt3dadd( 9.03402, -83.3351, -7.50523, 0.1 ) }
    dend_2 { pt3dadd( 9.0781, -83.5908, -7.71336, 0.56 ) }
    dend_2 { pt3dadd( 9.14209, -83.9485, -7.99591, 0.42 ) }
    dend_2 { pt3dadd( 9.21257, -84.3251, -8.26698, 0.56 ) }
    dend_2 { pt3dadd( 9.29393, -84.7301, -8.49873, 0.7 ) }
    dend_2 { pt3dadd( 9.47978, -85.5467, -8.97509, 0.56 ) }
    dend_2 { pt3dadd( 9.67238, -86.2885, -9.4522, 0.42 ) }
    dend_2 { pt3dadd( 9.87021, -86.9656, -9.95879, 0.42 ) }
    dend_2 { pt3dadd( 9.95668, -87.3095, -10.2627, 0.56 ) }
    dend_2 { pt3dadd( 10.0313, -87.6459, -10.5771, 0.56 ) }
    dend_2 { pt3dadd( 10.1611, -88.372, -11.2295, 0.42 ) }
    dend_2 { pt3dadd( 10.2766, -89.1368, -11.8387, 0.28 ) }
    dend_2 { pt3dadd( 10.2989, -89.3265, -11.9771, 0.98 ) }
    dend_2 { pt3dadd( 10.3757, -90.1248, -12.5516, 0.84 ) }
    dend_2 { pt3dadd( 10.4126, -90.5249, -12.8017, 0.7 ) }
    dend_2 { pt3dadd( 10.4598, -91.0034, -13.0318, 0.56 ) }
    dend_2 { pt3dadd( 10.5132, -91.4594, -13.1645, 0.42 ) }
    dend_2 { pt3dadd( 10.5808, -91.9207, -13.2122, 0.28 ) }
    dend_2 { pt3dadd( 10.6674, -92.392, -13.2114, 0.14 ) }
    dend_2 { pt3dadd( 10.7731, -92.8537, -13.1634, 0.28 ) }
    dend_2 { pt3dadd( 10.885, -93.3146, -13.1025, 0.14 ) }
    dend_2 { pt3dadd( 11.0037, -93.7702, -13.0355, 0.1 ) }
    dend_2 { pt3dadd( 11.2524, -94.7258, -12.8892, 0.1 ) }
    dend_2 { pt3dadd( 11.3789, -95.1794, -12.8242, 0.1 ) }
    dend_2 { pt3dadd( 11.5201, -95.6299, -12.7711, 0.1 ) }
    dend_2 { pt3dadd( 11.6746, -96.0798, -12.7331, 0.1 ) }
    dend_2 { pt3dadd( 11.8321, -96.5274, -12.7138, 0.1 ) }
    dend_2 { pt3dadd( 11.9899, -96.9691, -12.7223, 0.1 ) }
    dend_2 { pt3dadd( 12.1692, -97.4694, -12.7732, 0.1 ) }
    dend_2 { pt3dadd( 12.3429, -97.9653, -12.8226, 0.1 ) }
    dend_2 { pt3dadd( 12.4187, -98.1905, -12.8443, 0.1 ) }
    dend_2 { pt3dadd( 12.5248, -98.5016, -12.8745, 0.84 ) }
    dend_2 { pt3dadd( 12.6754, -98.9501, -12.9175, 0.7 ) }
    dend_2 { pt3dadd( 12.831, -99.399, -12.9618, 0.56 ) }
    dend_2 { pt3dadd( 12.9853, -99.8456, -13.0058, 0.42 ) }
    dend_2 { pt3dadd( 13.142, -100.286, -13.0503, 0.28 ) }
    dend_2 { pt3dadd( 13.3114, -100.785, -13.1373, 0.14 ) }
    dend_2 { pt3dadd( 13.4336, -101.215, -13.2695, 0.1 ) }
    dend_2 { pt3dadd( 13.5112, -101.69, -13.5075, 0.14 ) }
    dend_2 { pt3dadd( 13.5185, -101.883, -13.6299, 0.7 ) }
    dend_2 { pt3dadd( 13.481, -102.25, -13.9189, 0.56 ) }
    dend_2 { pt3dadd( 13.3241, -102.949, -14.5926, 0.42 ) }
    dend_2 { pt3dadd( 13.1157, -103.611, -15.2792, 0.28 ) }
    dend_2 { pt3dadd( 12.893, -104.187, -15.9218, 0.14 ) }
    dend_2 { pt3dadd( 12.7514, -104.527, -16.2934, 0.1 ) }
    dend_2 { pt3dadd( 12.4908, -105.18, -16.9696, 0.1 ) }
    dend_2 { pt3dadd( 12.2719, -105.797, -17.5338, 0.1 ) }
    dend_2 { pt3dadd( 12.1688, -106.228, -17.8242, 0.14 ) }
    dend_2 { pt3dadd( 12.0693, -107.153, -18.1784, 0.28 ) }
    dend_2 { pt3dadd( 12.0644, -108.016, -18.3662, 0.1 ) }
    dend_2 { pt3dadd( 12.083, -108.483, -18.4688, 0.1 ) }
    dend_2 { pt3dadd( 12.1432, -109.422, -18.7176, 0.1 ) }
    dend_2 { pt3dadd( 12.1726, -109.872, -18.8754, 0.1 ) }
    dend_2 { pt3dadd( 12.1895, -110.34, -19.1122, 0.14 ) }
    dend_2 { pt3dadd( 12.1977, -111.161, -19.6185, 0.28 ) }
    dend_2 { pt3dadd( 12.1796, -111.94, -20.1801, 0.42 ) }
    dend_2 { pt3dadd( 12.1408, -112.632, -20.7056, 0.56 ) }
    dend_2 { pt3dadd( 12.1281, -112.816, -20.8479, 0.7 ) }
    dend_2 { pt3dadd( 12.1174, -113.088, -21.0288, 0.28 ) }
    dend_2 { pt3dadd( 12.119, -113.5, -21.2637, 0.14 ) }
    dend_2 { pt3dadd( 12.1295, -113.941, -21.4392, 0.1 ) }
    dend_2 { pt3dadd( 12.1417, -114.447, -21.5836, 0.1 ) }
    dend_2 { pt3dadd( 12.1459, -114.911, -21.6912, 0.1 ) }
    dend_2 { pt3dadd( 12.1359, -115.377, -21.7995, 0.1 ) }
    dend_2 { pt3dadd( 12.0716, -116.308, -22.0733, 0.14 ) }
    dend_2 { pt3dadd( 12.0366, -116.627, -22.179, 0.1 ) }
    dend_2 { pt3dadd( 11.9721, -117.119, -22.3544, 0.1 ) }
    dend_2 { pt3dadd( 11.9007, -117.617, -22.5318, 0.1 ) }
    dend_2 { pt3dadd( 11.8288, -118.112, -22.6962, 0.1 ) }
    dend_2 { pt3dadd( 11.6852, -119.047, -23.0227, 0.1 ) }
    dend_2 { pt3dadd( 11.6285, -119.495, -23.1722, 0.14 ) }
    dend_2 { pt3dadd( 11.6094, -119.71, -23.2513, 0.1 ) }
    dend_2 { pt3dadd( 11.5859, -120.209, -23.4421, 0.1 ) }
    dend_2 { pt3dadd( 11.5708, -120.646, -23.6318, 0.1 ) }
    dend_2 { pt3dadd( 11.5601, -121.555, -24.0374, 0.1 ) }
    dend_2 { pt3dadd( 11.5549, -121.98, -24.2499, 0.14 ) }
    dend_2 { pt3dadd( 11.5422, -122.387, -24.4879, 0.28 ) }
    dend_2 { pt3dadd( 11.5379, -122.785, -24.7437, 0.28 ) }
    dend_2 { pt3dadd( 11.5599, -123.601, -25.2995, 0.14 ) }
    dend_2 { pt3dadd( 11.5779, -123.979, -25.5806, 0.1 ) }
    dend_2 { pt3dadd( 11.6418, -124.651, -26.0765, 0.14 ) }
    dend_2 { pt3dadd( 11.6581, -124.838, -26.2152, 0.56 ) }
    dend_2 { pt3dadd( 11.7004, -125.271, -26.5153, 0.56 ) }
    dend_2 { pt3dadd( 11.7425, -125.675, -26.7533, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 11.8394, -126.562, -27.1358, 0.56 ) }
    dend_2 { pt3dadd( 11.8788, -127.009, -27.2901, 0.42 ) }
    dend_2 { pt3dadd( 11.912, -127.521, -27.4118, 0.28 ) }
    dend_2 { pt3dadd( 11.9284, -127.988, -27.5027, 0.14 ) }
    dend_2 { pt3dadd( 11.9317, -128.519, -27.5799, 0.1 ) }
    dend_2 { pt3dadd( 11.9389, -129.046, -27.6268, 0.1 ) }
    dend_2 { pt3dadd( 11.953, -129.286, -27.6326, 0.1 ) }
    dend_2 { pt3dadd( 12.0076, -129.82, -27.6516, 0.1 ) }
    dend_2 { pt3dadd( 12.0936, -130.291, -27.6781, 0.14 ) }
    dend_2 { pt3dadd( 12.151, -130.52, -27.695, 0.56 ) }
    dend_2 { pt3dadd( 12.2937, -130.966, -27.736, 0.42 ) }
    dend_2 { pt3dadd( 12.4633, -131.457, -27.825, 0.28 ) }
    dend_2 { pt3dadd( 12.6081, -131.899, -27.93, 0.14 ) }
    dend_2 { pt3dadd( 12.7614, -132.383, -28.0681, 0.1 ) }
    dend_2 { pt3dadd( 12.8765, -132.824, -28.2012, 0.1 ) }
    dend_2 { pt3dadd( 12.9718, -133.271, -28.337, 0.1 ) }
    dend_2 { pt3dadd( 13.1037, -134.173, -28.6708, 0.1 ) }
    dend_2 { pt3dadd( 13.1319, -134.484, -28.7973, 0.84 ) }
    dend_2 { pt3dadd( 13.1605, -134.914, -28.9798, 0.7 ) }
    dend_2 { pt3dadd( 13.1867, -135.407, -29.1848, 0.56 ) }
    dend_2 { pt3dadd( 13.2184, -135.85, -29.3587, 0.42 ) }
    dend_2 { pt3dadd( 13.3285, -136.76, -29.6793, 0.28 ) }
    dend_2 { pt3dadd( 13.4091, -137.202, -29.8064, 0.14 ) }
    dend_2 { pt3dadd( 13.5121, -137.651, -29.9312, 0.1 ) }
    dend_2 { pt3dadd( 13.6365, -138.094, -30.0468, 0.1 ) }
    dend_2 { pt3dadd( 13.7841, -138.535, -30.15, 0.1 ) }
    dend_2 { pt3dadd( 13.9555, -139.026, -30.2379, 0.1 ) }
    dend_2 { pt3dadd( 14.1177, -139.472, -30.2839, 0.1 ) }
    dend_2 { pt3dadd( 14.2664, -139.922, -30.3265, 0.1 ) }
    dend_2 { pt3dadd( 14.4151, -140.427, -30.3695, 0.14 ) }
    dend_2 { pt3dadd( 14.4696, -140.657, -30.405, 0.28 ) }
    dend_2 { pt3dadd( 14.5274, -140.976, -30.4716, 0.28 ) }
    dend_2 { pt3dadd( 14.5876, -141.434, -30.5862, 0.14 ) }
    dend_2 { pt3dadd( 14.6455, -141.945, -30.7304, 0.1 ) }
    dend_2 { pt3dadd( 14.6937, -142.399, -30.865, 0.1 ) }
    dend_2 { pt3dadd( 14.7856, -143.321, -31.1483, 0.14 ) }
    dend_2 { pt3dadd( 14.8089, -143.546, -31.2177, 0.28 ) }
    dend_2 { pt3dadd( 14.865, -144.001, -31.3545, 0.1 ) }
    dend_2 { pt3dadd( 14.9256, -144.456, -31.4788, 0.1 ) }
    dend_2 { pt3dadd( 14.9874, -144.907, -31.6209, 0.14 ) }
    dend_2 { pt3dadd( 14.9874, -144.907, -31.6209, 0.28 ) }
    dend_2 { pt3dadd( 15.0163, -145.23, -31.7064, 0.28 ) }
    dend_2 { pt3dadd( 15.0497, -145.688, -31.8404, 0.28 ) }
    dend_2 { pt3dadd( 15.0694, -146.128, -32.0164, 0.42 ) }
    dend_2 { pt3dadd( 15.1044, -147.008, -32.4219, 0.42 ) }
    dend_2 { pt3dadd( 15.1205, -147.298, -32.5894, 0.1 ) }
    dend_2 { pt3dadd( 15.1509, -147.687, -32.8379, 0.1 ) }
    dend_2 { pt3dadd( 15.1926, -148.074, -33.1009, 0.1 ) }
    dend_2 { pt3dadd( 15.3071, -148.86, -33.6447, 0.1 ) }
    dend_2 { pt3dadd( 15.3819, -149.247, -33.9007, 0.1 ) }
    dend_2 { pt3dadd( 15.6079, -150.08, -34.3908, 0.1 ) }
    dend_2 { pt3dadd( 15.672, -150.277, -34.5004, 0.1 ) }
    dend_2 { pt3dadd( 15.8133, -150.667, -34.7258, 0.1 ) }
    dend_2 { pt3dadd( 15.9834, -151.101, -34.9627, 0.14 ) }
    dend_2 { pt3dadd( 16.1508, -151.503, -35.1485, 0.1 ) }
    dend_2 { pt3dadd( 16.3221, -151.945, -35.3712, 0.1 ) }
    dend_2 { pt3dadd( 16.4662, -152.345, -35.5725, 0.1 ) }
    dend_2 { pt3dadd( 16.757, -153.173, -36.0362, 0.1 ) }
    dend_2 { pt3dadd( 16.8937, -153.557, -36.2698, 0.1 ) }
    dend_2 { pt3dadd( 17.0319, -153.932, -36.5052, 0.1 ) }
    dend_2 { pt3dadd( 17.3489, -154.695, -36.9932, 0.14 ) }
    dend_2 { pt3dadd( 17.4373, -154.881, -37.1071, 0.28 ) }
    dend_2 { pt3dadd( 17.5701, -155.131, -37.2672, 0.1 ) }
    dend_2 { pt3dadd( 17.8037, -155.535, -37.5102, 0.1 ) }
    dend_2 { pt3dadd( 18.0522, -155.926, -37.7584, 0.1 ) }
    dend_2 { pt3dadd( 18.2208, -156.169, -37.9079, 0.1 ) }
    dend_2 { pt3dadd( 18.5042, -156.552, -38.1138, 0.1 ) }
    dend_2 { pt3dadd( 18.9801, -157.188, -38.4583, 0.1 ) }
    dend_2 { pt3dadd( 19.1058, -157.364, -38.5491, 0.1 ) }
    dend_2 { pt3dadd( 19.3752, -157.767, -38.7382, 0.1 ) }
    dend_2 { pt3dadd( 19.6346, -158.188, -38.9057, 0.1 ) }
    dend_2 { pt3dadd( 19.8855, -158.632, -39.0448, 0.1 ) }
    dend_2 { pt3dadd( 20.0435, -158.916, -39.0873, 0.14 ) }
    dend_2 { pt3dadd( 20.2711, -159.332, -39.0865, 0.56 ) }
    dend_2 { pt3dadd( 20.4829, -159.754, -39.06, 0.42 ) }
    dend_2 { pt3dadd( 20.6647, -160.191, -39.0082, 0.28 ) }
    dend_2 { pt3dadd( 20.8186, -160.635, -38.941, 0.14 ) }
    dend_2 { pt3dadd( 21.0534, -161.479, -38.8625, 0.1 ) }
    dend_2 { pt3dadd( 21.1526, -161.944, -38.8838, 0.1 ) }
    dend_2 { pt3dadd( 21.223, -162.411, -38.9656, 0.1 ) }
    dend_2 { pt3dadd( 21.2637, -162.924, -39.1141, 0.1 ) }
    dend_2 { pt3dadd( 21.276, -163.363, -39.2799, 0.1 ) }
    dend_2 { pt3dadd( 21.2587, -164.251, -39.6664, 0.1 ) }
    dend_2 { pt3dadd( 21.2194, -165.126, -40.0795, 0.1 ) }
    dend_2 { pt3dadd( 21.1955, -165.425, -40.2309, 0.56 ) }
    dend_2 { pt3dadd( 21.1542, -165.89, -40.4669, 0.42 ) }
    dend_2 { pt3dadd( 21.1237, -166.315, -40.6707, 0.28 ) }
    dend_2 { pt3dadd( 21.0994, -166.808, -40.8717, 0.14 ) }
    dend_2 { pt3dadd( 21.0976, -167.272, -40.9805, 0.1 ) }
    dend_2 { pt3dadd( 21.1407, -168.265, -41.1036, 0.14 ) }
    dend_2 { pt3dadd( 21.1743, -168.74, -41.141, 0.28 ) }
    dend_2 { pt3dadd( 21.2192, -169.215, -41.157, 0.14 ) }
    dend_2 { pt3dadd( 21.2649, -169.693, -41.1486, 0.1 ) }
    dend_2 { pt3dadd( 21.342, -170.693, -41.1412, 0.1 ) }
    dend_2 { pt3dadd( 21.3616, -171.172, -41.1334, 0.1 ) }
    dend_2 { pt3dadd( 21.3748, -171.71, -41.1158, 0.1 ) }
    dend_2 { pt3dadd( 21.3597, -172.181, -41.1265, 0.1 ) }
    dend_2 { pt3dadd( 21.3135, -172.715, -41.1695, 0.1 ) }
    dend_2 { pt3dadd( 21.1876, -173.613, -41.2948, 0.14 ) }
    dend_2 { pt3dadd( 21.1298, -173.933, -41.3583, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 21.0268, -174.391, -41.433, 0.14 ) }
    dend_2 { pt3dadd( 20.9049, -174.908, -41.4994, 0.28 ) }
    dend_2 { pt3dadd( 20.7806, -175.419, -41.5392, 0.42 ) }
    dend_2 { pt3dadd( 20.7117, -175.751, -41.5473, 0.28 ) }
    dend_2 { pt3dadd( 20.6223, -176.27, -41.529, 0.14 ) }
    dend_2 { pt3dadd( 20.5233, -176.945, -41.5095, 0.1 ) }
    dend_2 { pt3dadd( 20.4937, -177.174, -41.5039, 0.1 ) }
    dend_2 { pt3dadd( 20.4466, -177.708, -41.4966, 0.1 ) }
    dend_2 { pt3dadd( 20.4314, -178.186, -41.497, 0.1 ) }
    dend_2 { pt3dadd( 20.4488, -178.714, -41.5063, 0.1 ) }
    dend_2 { pt3dadd( 20.4961, -179.188, -41.5228, 0.1 ) }
    dend_2 { pt3dadd( 20.5298, -179.425, -41.5337, 0.1 ) }
    dend_2 { pt3dadd( 20.5657, -179.66, -41.5451, 0.1 ) }
    dend_2 { pt3dadd( 20.6485, -180.131, -41.5708, 0.1 ) }
    dend_2 { pt3dadd( 20.7157, -180.599, -41.6307, 0.14 ) }
    dend_2 { pt3dadd( 20.7755, -181.066, -41.7178, 0.28 ) }
    dend_2 { pt3dadd( 20.8312, -181.579, -41.8319, 0.14 ) }
    dend_2 { pt3dadd( 20.8781, -182.042, -41.9443, 0.1 ) }
    dend_2 { pt3dadd( 20.9213, -182.5, -42.0649, 0.1 ) }
    dend_2 { pt3dadd( 21.0059, -183.473, -42.2817, 0.1 ) }
    dend_2 { pt3dadd( 21.049, -183.941, -42.3621, 0.1 ) }
    dend_2 { pt3dadd( 21.1024, -184.414, -42.4137, 0.1 ) }
    dend_2 { pt3dadd( 21.1639, -184.887, -42.428, 0.1 ) }
    dend_2 { pt3dadd( 21.1639, -184.887, -42.428, 0.1 ) }
    dend_2 { pt3dadd( 21.2871, -185.783, -42.3066, 0.1 ) }
    dend_2 { pt3dadd( 21.3572, -186.245, -42.2148, 0.1 ) }
    dend_2 { pt3dadd( 21.4213, -186.713, -42.1346, 0.1 ) }
    dend_2 { pt3dadd( 21.4713, -187.247, -42.1029, 0.1 ) }
    dend_2 { pt3dadd( 21.5039, -187.717, -42.1246, 0.14 ) }
    dend_2 { pt3dadd( 21.5373, -188.249, -42.1964, 0.28 ) }
    dend_2 { pt3dadd( 21.5664, -188.715, -42.3011, 0.42 ) }
    dend_2 { pt3dadd( 21.5903, -189.178, -42.4119, 0.28 ) }
    dend_2 { pt3dadd( 21.6449, -190.147, -42.6515, 0.14 ) }
    dend_2 { pt3dadd( 21.6801, -190.608, -42.7658, 0.1 ) }
    dend_2 { pt3dadd( 21.7226, -191.07, -42.8741, 0.1 ) }
    dend_2 { pt3dadd( 21.7786, -191.535, -42.9726, 0.1 ) }
    dend_2 { pt3dadd( 21.8411, -192.052, -43.061, 0.1 ) }
    dend_2 { pt3dadd( 21.9048, -192.524, -43.1163, 0.14 ) }
    dend_2 { pt3dadd( 21.9817, -192.994, -43.1405, 0.1 ) }
    dend_2 { pt3dadd( 22.0499, -193.468, -43.1624, 0.14 ) }
    dend_2 { pt3dadd( 22.1135, -193.941, -43.1832, 0.28 ) }
    dend_2 { pt3dadd( 22.158, -194.269, -43.1977, 0.1 ) }
    dend_2 { pt3dadd( 22.2281, -194.74, -43.2201, 0.1 ) }
    dend_2 { pt3dadd( 22.2988, -195.214, -43.2427, 0.1 ) }
    dend_2 { pt3dadd( 22.3809, -195.736, -43.2687, 0.1 ) }
    dend_2 { pt3dadd( 22.4623, -196.207, -43.294, 0.1 ) }
    dend_2 { pt3dadd( 22.5443, -196.676, -43.3195, 0.1 ) }
    dend_2 { pt3dadd( 22.6324, -197.147, -43.3465, 0.1 ) }
    dend_2 { pt3dadd( 22.7117, -197.616, -43.3713, 0.1 ) }
    dend_2 { pt3dadd( 22.7872, -198.087, -43.3951, 0.1 ) }
    dend_2 { pt3dadd( 22.8546, -198.55, -43.4489, 0.1 ) }
    dend_2 { pt3dadd( 22.9188, -199.075, -43.5368, 0.1 ) }
    dend_2 { pt3dadd( 22.9695, -199.542, -43.6336, 0.1 ) }
    dend_2 { pt3dadd( 23.0231, -200.053, -43.7553, 0.1 ) }
    dend_2 { pt3dadd( 23.074, -200.513, -43.8744, 0.1 ) }
    dend_2 { pt3dadd( 23.184, -201.445, -44.1336, 0.1 ) }
    dend_2 { pt3dadd( 23.2451, -201.899, -44.2671, 0.1 ) }
    dend_2 { pt3dadd( 23.3203, -202.349, -44.4013, 0.1 ) }
    dend_2 { pt3dadd( 23.4052, -202.793, -44.5253, 0.1 ) }
    dend_2 { pt3dadd( 23.4965, -203.237, -44.6682, 0.1 ) }
    dend_2 { pt3dadd( 23.4965, -203.237, -44.6682, 0.1 ) }
    dend_2 { pt3dadd( 23.5445, -203.461, -44.7333, 0.1 ) }
    dend_2 { pt3dadd( 23.6351, -203.905, -44.8768, 0.1 ) }
    dend_2 { pt3dadd( 23.7022, -204.34, -45.0574, 0.1 ) }
    dend_2 { pt3dadd( 23.8101, -205.214, -45.4598, 0.1 ) }
    dend_2 { pt3dadd( 23.8571, -205.64, -45.6608, 0.1 ) }
    dend_2 { pt3dadd( 23.9033, -206.063, -45.8542, 0.1 ) }
    dend_2 { pt3dadd( 23.9513, -206.495, -46.0427, 0.1 ) }
    dend_2 { pt3dadd( 24.0605, -207.417, -46.4129, 0.1 ) }
    dend_2 { pt3dadd( 24.1205, -207.863, -46.5654, 0.1 ) }
    dend_2 { pt3dadd( 24.1935, -208.312, -46.6809, 0.1 ) }
    dend_2 { pt3dadd( 24.275, -208.769, -46.786, 0.1 ) }
    dend_2 { pt3dadd( 24.3678, -209.23, -46.874, 0.1 ) }
    dend_2 { pt3dadd( 24.4741, -209.689, -46.9385, 0.1 ) }
    dend_2 { pt3dadd( 24.597, -210.148, -46.9744, 0.1 ) }
    dend_2 { pt3dadd( 24.7204, -210.608, -47.0105, 0.1 ) }
    dend_2 { pt3dadd( 24.8409, -211.059, -47.0458, 0.1 ) }
    dend_2 { pt3dadd( 24.9642, -211.52, -47.0819, 0.1 ) }
    dend_2 { pt3dadd( 25.0869, -211.978, -47.1177, 0.1 ) }
    dend_2 { pt3dadd( 25.2104, -212.439, -47.1539, 0.1 ) }
    dend_2 { pt3dadd( 25.3333, -212.897, -47.1898, 0.14 ) }
    dend_2 { pt3dadd( 25.4477, -213.354, -47.2567, 0.1 ) }
    dend_2 { pt3dadd( 25.5615, -213.799, -47.3529, 0.14 ) }
    dend_2 { pt3dadd( 25.6773, -214.243, -47.4749, 0.1 ) }
    dend_2 { pt3dadd( 25.7359, -214.463, -47.5449, 0.1 ) }
    dend_2 { pt3dadd( 25.795, -214.681, -47.6199, 0.1 ) }
    dend_2 { pt3dadd( 26.0391, -215.566, -47.9295, 0.1 ) }
    dend_2 { pt3dadd( 26.1854, -216.05, -48.0964, 0.1 ) }
    dend_2 { pt3dadd( 26.3242, -216.48, -48.238, 0.14 ) }
    dend_2 { pt3dadd( 26.4705, -216.912, -48.3654, 0.1 ) }
    dend_2 { pt3dadd( 26.6203, -217.343, -48.4707, 0.1 ) }
    dend_2 { pt3dadd( 26.7764, -217.784, -48.5505, 0.1 ) }
    dend_2 { pt3dadd( 26.9453, -218.282, -48.638, 0.14 ) }
    dend_2 { pt3dadd( 27.0114, -218.503, -48.689, 0.56 ) }
    dend_2 { pt3dadd( 27.1362, -218.946, -48.8116, 0.42 ) }
    dend_2 { pt3dadd( 27.2317, -219.381, -48.975, 0.28 ) }
    dend_2 { pt3dadd( 27.3048, -219.811, -49.1644, 0.28 ) }
    dend_2 { pt3dadd( 27.4192, -220.68, -49.5748, 0.42 ) }
    dend_2 { pt3dadd( 27.4633, -221.111, -49.7521, 0.42 ) }
    dend_2 { pt3dadd( 27.5082, -221.558, -49.9072, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 27.6078, -222.519, -50.1744, 0.14 ) }
    dend_2 { pt3dadd( 27.6544, -222.985, -50.2626, 0.1 ) }
    dend_2 { pt3dadd( 27.706, -223.458, -50.305, 0.1 ) }
    dend_2 { pt3dadd( 27.8184, -224.453, -50.2861, 0.14 ) }
    dend_2 { pt3dadd( 27.8636, -224.928, -50.2576, 0.28 ) }
    dend_2 { pt3dadd( 27.9079, -225.403, -50.2118, 0.14 ) }
    dend_2 { pt3dadd( 27.9636, -225.924, -50.1446, 0.28 ) }
    dend_2 { pt3dadd( 28.0015, -226.4, -50.1006, 0.14 ) }
    dend_2 { pt3dadd( 28.0363, -226.937, -50.0786, 0.1 ) }
    dend_2 { pt3dadd( 28.0691, -227.464, -50.0919, 0.1 ) }
    dend_2 { pt3dadd( 28.1029, -227.94, -50.105, 0.1 ) }
    dend_2 { pt3dadd( 28.1472, -228.417, -50.1207, 0.1 ) }
    dend_2 { pt3dadd( 28.2051, -228.943, -50.1405, 0.1 ) }
    dend_2 { pt3dadd( 28.2623, -229.419, -50.1596, 0.1 ) }
    dend_2 { pt3dadd( 28.3226, -229.892, -50.1795, 0.1 ) }
    dend_2 { pt3dadd( 28.3837, -230.365, -50.1996, 0.1 ) }
    dend_2 { pt3dadd( 28.4423, -230.84, -50.2191, 0.1 ) }
    dend_2 { pt3dadd( 28.4993, -231.366, -50.2386, 0.1 ) }
    dend_2 { pt3dadd( 28.5252, -231.604, -50.2475, 0.1 ) }
    dend_2 { pt3dadd( 28.5787, -232.138, -50.2662, 0.1 ) }
    dend_2 { pt3dadd( 28.6277, -232.612, -50.2832, 0.1 ) }
    dend_2 { pt3dadd( 28.6737, -233.081, -50.2993, 0.1 ) }
    dend_2 { pt3dadd( 28.7304, -233.616, -50.3188, 0.1 ) }
    dend_2 { pt3dadd( 28.7911, -234.091, -50.3389, 0.1 ) }
    dend_2 { pt3dadd( 28.8576, -234.563, -50.3604, 0.1 ) }
    dend_2 { pt3dadd( 28.9165, -235.025, -50.4118, 0.1 ) }
    dend_2 { pt3dadd( 28.9725, -235.551, -50.4971, 0.1 ) }
    dend_2 { pt3dadd( 29.0154, -236.016, -50.5939, 0.1 ) }
    dend_2 { pt3dadd( 29.0488, -236.479, -50.7094, 0.1 ) }
    dend_2 { pt3dadd( 29.068, -236.937, -50.837, 0.1 ) }
    dend_2 { pt3dadd( 29.0938, -237.894, -51.1217, 0.1 ) }
    dend_2 { pt3dadd( 29.1011, -238.12, -51.1902, 0.1 ) }
    dend_2 { pt3dadd( 29.1011, -238.12, -51.1902, 0.1 ) }
    dend_2 { pt3dadd( 29.1276, -238.447, -51.2717, 0.1 ) }
    dend_2 { pt3dadd( 29.1825, -238.906, -51.3601, 0.1 ) }
    dend_2 { pt3dadd( 29.2612, -239.373, -51.42, 0.1 ) }
    dend_2 { pt3dadd( 29.3632, -239.84, -51.4101, 0.1 ) }
    dend_2 { pt3dadd( 29.4701, -240.303, -51.3758, 0.1 ) }
    dend_2 { pt3dadd( 29.5825, -240.763, -51.3272, 0.1 ) }
    dend_2 { pt3dadd( 29.7022, -241.222, -51.2652, 0.1 ) }
    dend_2 { pt3dadd( 29.8107, -241.67, -51.1885, 0.1 ) }
    dend_2 { pt3dadd( 30.0098, -242.634, -50.9975, 0.1 ) }
    dend_2 { pt3dadd( 30.0834, -243.1, -50.9311, 0.1 ) }
    dend_2 { pt3dadd( 30.128, -243.576, -50.8979, 0.1 ) }
    dend_2 { pt3dadd( 30.128, -243.576, -50.8979, 0.1 ) }
    dend_2 { pt3dadd( 30.1233, -243.905, -50.9648, 0.1 ) }
    dend_2 { pt3dadd( 30.0998, -244.406, -51.1465, 0.1 ) }
    dend_2 { pt3dadd( 30.0301, -245.275, -51.5672, 0.1 ) }
    dend_2 { pt3dadd( 29.9897, -245.74, -51.8021, 0.1 ) }
    dend_2 { pt3dadd( 29.953, -246.164, -52.0088, 0.1 ) }
    dend_2 { pt3dadd( 29.9018, -247.048, -52.4046, 0.14 ) }
    dend_2 { pt3dadd( 29.8905, -247.263, -52.505, 0.1 ) }
    dend_2 { pt3dadd( 29.8717, -247.568, -52.6389, 0.1 ) }
    dend_2 { pt3dadd( 29.8452, -248.015, -52.8029, 0.1 ) }
    dend_2 { pt3dadd( 29.8109, -248.521, -52.976, 0.1 ) }
    dend_2 { pt3dadd( 29.7716, -248.979, -53.1073, 0.1 ) }
    dend_2 { pt3dadd( 29.6974, -249.954, -53.3202, 0.1 ) }
    dend_2 { pt3dadd( 29.6546, -250.477, -53.428, 0.1 ) }
    dend_2 { pt3dadd( 29.6222, -250.944, -53.5177, 0.1 ) }
    dend_2 { pt3dadd( 29.5919, -251.463, -53.6048, 0.1 ) }
    dend_2 { pt3dadd( 29.5677, -251.995, -53.6753, 0.1 ) }
    dend_2 { pt3dadd( 29.556, -252.465, -53.7128, 0.14 ) }
    dend_2 { pt3dadd( 29.5642, -252.805, -53.718, 0.1 ) }
    dend_2 { pt3dadd( 29.5818, -253.282, -53.7269, 0.1 ) }
    dend_2 { pt3dadd( 29.6054, -253.759, -53.7373, 0.14 ) }
    dend_2 { pt3dadd( 29.6322, -254.089, -53.7472, 0.1 ) }
    dend_2 { pt3dadd( 29.6802, -254.566, -53.764, 0.1 ) }
    dend_2 { pt3dadd( 29.7241, -255.041, -53.7797, 0.1 ) }
    dend_2 { pt3dadd( 29.7681, -255.576, -53.7959, 0.1 ) }
    dend_2 { pt3dadd( 29.7876, -256.044, -53.8052, 0.1 ) }
    dend_2 { pt3dadd( 29.7864, -256.522, -53.8092, 0.1 ) }
    dend_2 { pt3dadd( 29.7864, -256.522, -53.8092, 0.14 ) }
    dend_2 { pt3dadd( 29.759, -256.858, -53.775, 0.84 ) }
    dend_2 { pt3dadd( 29.7021, -257.374, -53.6822, 0.7 ) }
    dend_2 { pt3dadd( 29.6468, -257.894, -53.5646, 0.56 ) }
    dend_2 { pt3dadd( 29.6105, -258.22, -53.4835, 0.42 ) }
    dend_2 { pt3dadd( 29.5641, -258.729, -53.3568, 0.28 ) }
    dend_2 { pt3dadd( 29.5132, -259.707, -53.1309, 0.14 ) }
    dend_2 { pt3dadd( 29.5122, -260.223, -53.0231, 0.1 ) }
    dend_2 { pt3dadd( 29.5262, -260.691, -52.9377, 0.1 ) }
    dend_2 { pt3dadd( 29.5497, -261.221, -52.8578, 0.1 ) }
    dend_2 { pt3dadd( 29.5705, -261.686, -52.8075, 0.1 ) }
    dend_2 { pt3dadd( 29.5909, -262.163, -52.7828, 0.1 ) }
    dend_2 { pt3dadd( 29.6018, -262.643, -52.79, 0.1 ) }
    dend_2 { pt3dadd( 29.6017, -263.179, -52.8313, 0.1 ) }
    dend_2 { pt3dadd( 29.5873, -263.508, -52.8727, 0.1 ) }
    dend_2 { pt3dadd( 29.5434, -264.034, -52.9613, 0.1 ) }
    dend_2 { pt3dadd( 29.4814, -264.498, -53.0502, 0.1 ) }
    dend_2 { pt3dadd( 29.3946, -265.007, -53.1529, 0.1 ) }
    dend_2 { pt3dadd( 29.2473, -265.859, -53.3282, 0.1 ) }
    dend_2 { pt3dadd( 29.1953, -266.187, -53.3932, 0.1 ) }
    dend_2 { pt3dadd( 29.1156, -266.699, -53.4839, 0.1 ) }
    dend_2 { pt3dadd( 29.0391, -267.225, -53.5611, 0.1 ) }
    dend_2 { pt3dadd( 28.9589, -267.738, -53.6495, 0.1 ) }
    dend_2 { pt3dadd( 28.8978, -268.204, -53.7333, 0.1 ) }
    dend_2 { pt3dadd( 28.8425, -268.73, -53.8171, 0.1 ) }
    dend_2 { pt3dadd( 28.8137, -269.054, -53.8802, 0.1 ) }
    dend_2 { pt3dadd( 28.7768, -269.514, -53.9953, 0.1 ) }
    dend_2 { pt3dadd( 28.7178, -270.317, -54.2601, 0.1 ) }
    dend_2 { pt3dadd( 28.6838, -270.749, -54.4526, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 28.6838, -270.749, -54.4526, 0.42 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 1/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -4.30536, 41.2825, -6.22982, 0.84 ) }
    dend_63 { pt3dadd( -4.51321, 42.4513, -5.99101, 0.84 ) }
    dend_63 { pt3dadd( -4.5878, 43.0196, -5.88977, 0.7 ) }
    dend_63 { pt3dadd( -4.65303, 43.6028, -5.78946, 0.56 ) }
    dend_63 { pt3dadd( -4.70979, 44.1856, -5.69725, 0.42 ) }
    dend_63 { pt3dadd( -4.74709, 44.7742, -5.61081, 0.28 ) }
    dend_63 { pt3dadd( -4.77327, 45.3619, -5.53263, 0.42 ) }
    dend_63 { pt3dadd( -4.76165, 45.774, -5.51017, 0.56 ) }
    dend_63 { pt3dadd( -4.74198, 46.0611, -5.49145, 0.7 ) }
    dend_63 { pt3dadd( -4.68872, 46.6444, -5.4499, 0.84 ) }
    dend_63 { pt3dadd( -4.62891, 47.3002, -5.32943, 0.7 ) }
    dend_63 { pt3dadd( -4.57372, 47.8739, -5.17615, 0.56 ) }
    dend_63 { pt3dadd( -4.54315, 48.1535, -5.08695, 0.7 ) }
    dend_63 { pt3dadd( -4.47236, 48.7082, -4.89116, 0.56 ) }
    dend_63 { pt3dadd( -4.39432, 49.2623, -4.68793, 0.7 ) }
    dend_63 { pt3dadd( -4.1954, 50.4426, -4.32246, 0.84 ) }
    dend_63 { pt3dadd( -4.07504, 51.0822, -4.23135, 0.7 ) }
    dend_63 { pt3dadd( -3.99121, 51.5009, -4.24639, 0.56 ) }
    dend_63 { pt3dadd( -3.93084, 51.7879, -4.29678, 0.7 ) }
    dend_63 { pt3dadd( -3.79247, 52.3306, -4.4593, 0.98 ) }
    dend_63 { pt3dadd( -3.51421, 53.4465, -4.82342, 0.98 ) }
    dend_63 { pt3dadd( -3.25425, 54.5639, -5.20033, 0.84 ) }
    dend_63 { pt3dadd( -3.14794, 55.1388, -5.297, 0.84 ) }
    dend_63 { pt3dadd( -3.08333, 55.556, -5.28389, 0.7 ) }
    dend_63 { pt3dadd( -3.02092, 55.9533, -5.19161, 0.56 ) }
    dend_63 { pt3dadd( -2.88283, 57.0537, -4.70908, 0.7 ) }
    dend_63 { pt3dadd( -2.85279, 57.623, -4.37384, 0.84 ) }
    dend_63 { pt3dadd( -2.86196, 58.6924, -3.75348, 0.98 ) }
    dend_63 { pt3dadd( -2.89463, 59.0721, -3.57924, 0.84 ) }
    dend_63 { pt3dadd( -2.95375, 59.3519, -3.51152, 0.7 ) }
    dend_63 { pt3dadd( -3.1853, 60.1453, -3.60924, 0.1 ) }
    dend_63 { pt3dadd( -3.37005, 60.7302, -3.84351, 0.14 ) }
    dend_63 { pt3dadd( -3.71887, 61.7768, -4.37474, 0.28 ) }
    dend_63 { pt3dadd( -3.83162, 62.1218, -4.57233, 0.42 ) }
    dend_63 { pt3dadd( -4.01768, 62.6795, -4.84414, 0.56 ) }
    dend_63 { pt3dadd( -4.34946, 63.7553, -5.25269, 0.56 ) }
    dend_63 { pt3dadd( -4.48434, 64.3109, -5.3894, 0.42 ) }
    dend_63 { pt3dadd( -4.60541, 64.886, -5.44479, 0.56 ) }
    dend_63 { pt3dadd( -4.66178, 65.1773, -5.42919, 0.56 ) }
    dend_63 { pt3dadd( -4.8887, 66.3602, -5.30309, 0.56 ) }
    dend_63 { pt3dadd( -5.00254, 66.923, -5.21435, 0.56 ) }
    dend_63 { pt3dadd( -5.13064, 67.4882, -5.10123, 0.56 ) }
    dend_63 { pt3dadd( -5.25968, 68.06, -5.00747, 0.7 ) }
    dend_63 { pt3dadd( -5.3844, 68.6336, -4.93987, 0.84 ) }
    dend_63 { pt3dadd( -5.51616, 69.2834, -4.89856, 0.98 ) }
    dend_63 { pt3dadd( -5.62255, 69.8651, -4.89942, 1.12 ) }
    dend_63 { pt3dadd( -5.71896, 70.4518, -4.8974, 0.98 ) }
    dend_63 { pt3dadd( -5.8129, 71.0361, -4.89484, 0.84 ) }
    dend_63 { pt3dadd( -5.89988, 71.6113, -4.89086, 0.7 ) }
    dend_63 { pt3dadd( -5.97742, 72.2013, -4.88368, 0.84 ) }
    dend_63 { pt3dadd( -6.03007, 72.7917, -4.86988, 0.7 ) }
    dend_63 { pt3dadd( -6.05372, 73.0886, -4.8622, 0.84 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 53/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -4.30536, 41.2825, -6.22982, 0.7 ) }
    dend_62 { pt3dadd( -4.37245, 41.3558, -7.2614, 0.7 ) }
    dend_62 { pt3dadd( -4.49079, 41.5099, -9.17729, 0.56 ) }
    dend_62 { pt3dadd( -4.59968, 41.6661, -11.1316, 0.42 ) }
    dend_62 { pt3dadd( -4.71388, 41.8293, -13.047, 0.28 ) }
    dend_62 { pt3dadd( -4.82776, 42.0046, -14.9615, 0.14 ) }
    dend_62 { pt3dadd( -4.93975, 42.1961, -16.911, 0.1 ) }
    dend_62 { pt3dadd( -5.03597, 42.389, -18.844, 0.1 ) }
    dend_62 { pt3dadd( -5.13504, 42.5947, -20.7565, 0.1 ) }
    dend_62 { pt3dadd( -5.18587, 42.7119, -21.787, 0.1 ) }
    dend_62 { pt3dadd( -5.28377, 42.9536, -23.7131, 0.1 ) }
    dend_62 { pt3dadd( -5.37719, 43.2128, -25.639, 0.1 ) }
    dend_62 { pt3dadd( -5.45744, 43.4784, -27.5456, 0.1 ) }
    dend_62 { pt3dadd( -5.53539, 43.7647, -29.4886, 0.1 ) }
    dend_62 { pt3dadd( -5.60387, 44.0656, -31.4087, 0.1 ) }
    dend_62 { pt3dadd( -5.63213, 44.2173, -32.397, 0.1 ) }
    dend_62 { pt3dadd( -5.70617, 44.5355, -34.3156, 0.1 ) }
    dend_62 { pt3dadd( -5.80643, 44.8888, -36.2273, 0.1 ) }
    dend_62 { pt3dadd( -5.87623, 45.0972, -37.2039, 0.1 ) }
    dend_62 { pt3dadd( -6.04747, 45.5551, -39.0897, 0.14 ) }
    dend_62 { pt3dadd( -6.08356, 45.6274, -39.3491, 0.28 ) }
    dend_62 { pt3dadd( -6.30638, 45.9875, -40.5114, 0.1 ) }
    dend_62 { pt3dadd( -6.39011, 46.1081, -40.8578, 0.1 ) }
    dend_62 { pt3dadd( -7.23021, 46.7037, -40.3552, 0.1 ) }
    dend_62 { pt3dadd( -7.65373, 46.9939, -40.0384, 0.1 ) }
    dend_62 { pt3dadd( -8.06195, 47.2688, -39.676, 0.14 ) }
    dend_62 { pt3dadd( -8.06195, 47.2688, -39.676, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 80/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -17.1655, 41.0989, -29.9112, 0.7 ) }
    dend_56 { pt3dadd( -17.4438, 41.5016, -30.2611, 0.7 ) }
    dend_56 { pt3dadd( -17.8765, 42.1452, -30.7277, 0.56 ) }
    dend_56 { pt3dadd( -18.0199, 42.3666, -30.8682, 0.42 ) }
    dend_56 { pt3dadd( -18.4552, 43.0531, -31.2724, 0.28 ) }
    dend_56 { pt3dadd( -18.6711, 43.3824, -31.447, 0.14 ) }
    dend_56 { pt3dadd( -18.9105, 43.7489, -31.653, 0.1 ) }
    dend_56 { pt3dadd( -19.1407, 44.1204, -31.8493, 0.1 ) }
    dend_56 { pt3dadd( -19.2492, 44.2933, -31.9228, 0.14 ) }
    dend_56 { pt3dadd( -19.2492, 44.2933, -31.9228, 0.28 ) }
    dend_56 { pt3dadd( -19.5375, 44.7934, -32.1253, 0.42 ) }
    dend_56 { pt3dadd( -19.8944, 45.4347, -32.4457, 0.42 ) }
    dend_56 { pt3dadd( -20.0868, 45.8219, -32.6553, 0.28 ) }
    dend_56 { pt3dadd( -20.2601, 46.2182, -32.8662, 0.14 ) }
    dend_56 { pt3dadd( -20.4089, 46.5787, -33.0596, 0.14 ) }
    dend_56 { pt3dadd( -20.6876, 47.3181, -33.4539, 0.28 ) }
    dend_56 { pt3dadd( -20.6876, 47.3181, -33.4539, 0.42 ) }
    dend_56 { pt3dadd( -20.8125, 47.7108, -33.6024, 0.56 ) }
    dend_56 { pt3dadd( -20.9227, 48.1095, -33.7423, 0.42 ) }
    dend_56 { pt3dadd( -21.0633, 48.51, -33.8446, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_56 { pt3dadd( -21.159, 48.7055, -33.8674, 0.42 ) }
    dend_56 { pt3dadd( -21.4104, 49.124, -33.8678, 0.28 ) }
    dend_56 { pt3dadd( -21.6459, 49.4813, -33.8692, 0.28 ) }
    dend_56 { pt3dadd( -21.8997, 49.8313, -33.8718, 0.42 ) }
    dend_56 { pt3dadd( -22.2631, 50.3197, -33.9217, 0.42 ) }
    dend_56 { pt3dadd( -22.5486, 50.7064, -33.9868, 0.28 ) }
    dend_56 { pt3dadd( -22.7258, 50.9426, -34.0392, 0.14 ) }
    dend_56 { pt3dadd( -23.009, 51.3082, -34.1804, 0.1 ) }
    dend_56 { pt3dadd( -23.1842, 51.5225, -34.2917, 0.1 ) }
    dend_56 { pt3dadd( -23.5986, 52.0414, -34.6699, 0.1 ) }
    dend_56 { pt3dadd( -23.8269, 52.365, -34.943, 0.28 ) }
    dend_56 { pt3dadd( -24.033, 52.68, -35.2338, 0.42 ) }
    dend_56 { pt3dadd( -24.403, 53.2871, -35.791, 0.28 ) }
    dend_56 { pt3dadd( -24.5217, 53.5001, -35.9741, 0.14 ) }
    dend_56 { pt3dadd( -24.8169, 54.0749, -36.4398, 0.28 ) }
    dend_56 { pt3dadd( -24.971, 54.399, -36.665, 1.12 ) }
    dend_56 { pt3dadd( -24.971, 54.399, -36.665, 0.98 ) }
    dend_56 { pt3dadd( -25.1445, 54.8148, -36.8649, 0.1 ) }
    dend_56 { pt3dadd( -25.2979, 55.201, -36.9693, 0.1 ) }
    dend_56 { pt3dadd( -25.63, 56.0479, -37.1134, 0.1 ) }
    dend_56 { pt3dadd( -25.789, 56.447, -37.1558, 0.1 ) }
    dend_56 { pt3dadd( -25.9628, 56.8968, -37.2141, 0.1 ) }
    dend_56 { pt3dadd( -26.2524, 57.7367, -37.3301, 0.14 ) }
    dend_56 { pt3dadd( -26.3048, 57.9403, -37.3872, 0.28 ) }
    dend_56 { pt3dadd( -26.3412, 58.1393, -37.4669, 0.42 ) }
    dend_56 { pt3dadd( -26.4668, 58.978, -37.8264, 0.28 ) }
    dend_56 { pt3dadd( -26.5233, 59.3608, -38.0309, 0.28 ) }
    dend_56 { pt3dadd( -26.5682, 59.7238, -38.2646, 0.14 ) }
    dend_56 { pt3dadd( -26.6592, 60.4374, -38.7812, 0.1 ) }
    dend_56 { pt3dadd( -26.714, 60.7984, -39.0193, 0.1 ) }
    dend_56 { pt3dadd( -26.7901, 61.2161, -39.2505, 0.1 ) }
    dend_56 { pt3dadd( -26.8373, 61.4151, -39.3297, 0.1 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -17.1655, 41.0989, -29.9112, 0.84 ) }
    dend_53 { pt3dadd( -16.9772, 41.1765, -30.8928, 0.84 ) }
    dend_53 { pt3dadd( -16.4887, 41.2715, -32.7816, 0.98 ) }
    dend_53 { pt3dadd( -15.8506, 41.2995, -34.6273, 0.84 ) }
    dend_53 { pt3dadd( -15.7442, 41.3043, -34.8779, 0.28 ) }
    dend_53 { pt3dadd( -15.4849, 41.3291, -35.4304, 0.14 ) }
    dend_53 { pt3dadd( -15.2389, 41.3631, -35.9762, 0.1 ) }
    dend_53 { pt3dadd( -15.0538, 41.3791, -36.3137, 0.1 ) }
    dend_53 { pt3dadd( -14.7038, 41.4038, -36.8139, 0.14 ) }
    dend_53 { pt3dadd( -14.0488, 41.4957, -37.7471, 0.28 ) }
    dend_53 { pt3dadd( -13.5454, 41.6175, -38.648, 0.42 ) }
    dend_53 { pt3dadd( -12.8015, 41.9443, -40.4284, 0.56 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 44/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 12.631, 138.976, -5.01452, 0.1 ) }
    dend_50 { pt3dadd( 12.2586, 140.276, -4.44538, 0.1 ) }
    dend_50 { pt3dadd( 12.0609, 140.897, -4.19715, 0.1 ) }
    dend_50 { pt3dadd( 11.808, 141.593, -3.9384, 0.1 ) }
    dend_50 { pt3dadd( 11.5719, 142.212, -3.72098, 0.14 ) }
    dend_50 { pt3dadd( 11.3274, 142.832, -3.50625, 0.28 ) }
    dend_50 { pt3dadd( 11.3274, 142.832, -3.50625, 0.42 ) }
    dend_50 { pt3dadd( 10.9956, 143.511, -3.34072, 0.1 ) }
    dend_50 { pt3dadd( 10.6219, 144.18, -3.24436, 0.14 ) }
    dend_50 { pt3dadd( 10.4395, 144.477, -3.22826, 0.28 ) }
    dend_50 { pt3dadd( 10.2454, 144.763, -3.26485, 0.42 ) }
    dend_50 { pt3dadd( 9.8069, 145.384, -3.41906, 0.56 ) }
    dend_50 { pt3dadd( 9.39234, 146.015, -3.56165, 0.42 ) }
    dend_50 { pt3dadd( 8.70593, 147.229, -3.82504, 0.28 ) }
    dend_50 { pt3dadd( 8.3885, 147.933, -3.95349, 0.14 ) }
    dend_50 { pt3dadd( 7.96858, 149.301, -4.02888, 0.28 ) }
    dend_50 { pt3dadd( 7.96858, 149.301, -4.02888, 0.42 ) }
    dend_50 { pt3dadd( 8.01821, 150.724, -3.78574, 0.1 ) }
    dend_50 { pt3dadd( 8.16301, 151.477, -3.58234, 0.1 ) }
    dend_50 { pt3dadd( 8.38091, 152.174, -3.32153, 0.1 ) }
    dend_50 { pt3dadd( 8.88414, 153.45, -2.77725, 0.1 ) }
    dend_50 { pt3dadd( 9.06747, 153.851, -2.57628, 0.1 ) }
    dend_50 { pt3dadd( 9.37344, 154.508, -2.27688, 0.14 ) }
    dend_50 { pt3dadd( 9.57964, 154.931, -2.13363, 0.28 ) }
    dend_50 { pt3dadd( 9.72907, 155.212, -2.02587, 0.42 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 69/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 12.631, 138.976, -5.01452, 0.28 ) }
    dend_49 { pt3dadd( 12.9394, 139.85, -4.75533, 0.28 ) }
    dend_49 { pt3dadd( 13.0742, 140.324, -4.64281, 0.14 ) }
    dend_49 { pt3dadd( 13.1428, 140.64, -4.58191, 0.1 ) }
    dend_49 { pt3dadd( 13.2407, 141.27, -4.4825, 0.14 ) }
    dend_49 { pt3dadd( 13.2812, 141.59, -4.43973, 0.1 ) }
    dend_49 { pt3dadd( 13.3328, 142.043, -4.38715, 0.1 ) }
    dend_49 { pt3dadd( 13.367, 142.503, -4.3695, 0.14 ) }
    dend_49 { pt3dadd( 13.3854, 142.953, -4.35404, 0.1 ) }
    dend_49 { pt3dadd( 13.3873, 143.414, -4.34031, 0.1 ) }
    dend_49 { pt3dadd( 13.3805, 143.931, -4.326, 0.1 ) }
    dend_49 { pt3dadd( 13.3851, 144.439, -4.31058, 0.1 ) }
    dend_49 { pt3dadd( 13.4096, 144.897, -4.29416, 0.1 ) }
    dend_49 { pt3dadd( 13.4594, 145.41, -4.27304, 0.1 ) }
    dend_49 { pt3dadd( 13.5237, 145.856, -4.2521, 0.14 ) }
    dend_49 { pt3dadd( 13.6094, 146.363, -4.22674, 0.1 ) }
    dend_49 { pt3dadd( 13.6626, 146.688, -4.2107, 0.1 ) }
    dend_49 { pt3dadd( 13.7373, 147.19, -4.18688, 0.14 ) }
    dend_49 { pt3dadd( 13.8021, 147.702, -4.16393, 0.28 ) }
    dend_49 { pt3dadd( 13.8205, 147.922, -4.1727, 0.28 ) }
    dend_49 { pt3dadd( 13.8373, 148.377, -4.22357, 0.1 ) }
    dend_49 { pt3dadd( 13.8233, 148.829, -4.29947, 0.1 ) }
    dend_49 { pt3dadd( 13.7831, 149.278, -4.39009, 0.1 ) }
    dend_49 { pt3dadd( 13.723, 149.72, -4.48825, 0.1 ) }
    dend_49 { pt3dadd( 13.587, 150.623, -4.68776, 0.14 ) }
    dend_49 { pt3dadd( 13.5276, 151.06, -4.77591, 0.28 ) }
    dend_49 { pt3dadd( 13.4854, 151.51, -4.85775, 0.14 ) }
    dend_49 { pt3dadd( 13.466, 151.963, -4.92372, 0.1 ) }
    dend_49 { pt3dadd( 13.464, 152.42, -4.96817, 0.1 ) }
    dend_49 { pt3dadd( 13.4731, 152.935, -4.98757, 0.1 ) }
    dend_49 { pt3dadd( 13.4951, 153.443, -4.96998, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_49 { pt3dadd( 13.5255, 153.768, -4.97743, 0.1 ) }
    dend_49 { pt3dadd( 13.5842, 154.272, -4.98287, 0.1 ) }
    dend_49 { pt3dadd( 13.6452, 154.727, -4.98144, 0.1 ) }
    dend_49 { pt3dadd( 13.7104, 155.183, -4.97339, 0.1 ) }
    dend_49 { pt3dadd( 13.7705, 155.689, -4.95882, 0.1 ) }
    dend_49 { pt3dadd( 13.8595, 156.534, -4.92368, 0.1 ) }
    dend_49 { pt3dadd( 13.9383, 157.47, -4.87471, 0.14 ) }
    dend_49 { pt3dadd( 13.9717, 157.985, -4.8421, 0.1 ) }
    dend_49 { pt3dadd( 13.9947, 158.49, -4.80512, 0.1 ) }
    dend_49 { pt3dadd( 13.9905, 158.948, -4.7694, 0.1 ) }
    dend_49 { pt3dadd( 13.9588, 159.454, -4.76057, 0.1 ) }
    dend_49 { pt3dadd( 13.904, 159.906, -4.80976, 0.1 ) }
    dend_49 { pt3dadd( 13.8388, 160.327, -4.9754, 0.1 ) }
    dend_49 { pt3dadd( 13.7591, 160.695, -5.22261, 0.14 ) }
    dend_49 { pt3dadd( 13.6645, 161.064, -5.54243, 0.1 ) }
    dend_49 { pt3dadd( 13.4938, 161.64, -6.11155, 0.1 ) }
    dend_49 { pt3dadd( 13.2855, 162.269, -6.77337, 0.1 ) }
    dend_49 { pt3dadd( 13.0823, 162.858, -7.43832, 0.1 ) }
    dend_49 { pt3dadd( 12.8727, 163.456, -8.12588, 0.14 ) }
    dend_49 { pt3dadd( 12.8243, 163.604, -8.28681, 0.28 ) }
    dend_49 { pt3dadd( 12.7271, 163.965, -8.61438, 0.42 ) }
    dend_49 { pt3dadd( 12.6459, 164.354, -8.83299, 0.56 ) }
    dend_49 { pt3dadd( 12.6187, 164.575, -8.88882, 0.7 ) }
    dend_49 { pt3dadd( 12.5852, 165.032, -8.91608, 0.84 ) }
    dend_49 { pt3dadd( 12.5664, 165.539, -8.90353, 0.7 ) }
    dend_49 { pt3dadd( 12.5562, 166.055, -8.93137, 0.56 ) }
    dend_49 { pt3dadd( 12.5507, 166.559, -8.98681, 0.42 ) }
    dend_49 { pt3dadd( 12.5363, 167.012, -9.05422, 0.28 ) }
    dend_49 { pt3dadd( 12.5208, 167.459, -9.1598, 0.14 ) }
    dend_49 { pt3dadd( 12.5009, 167.894, -9.29526, 0.1 ) }
    dend_49 { pt3dadd( 12.4501, 168.745, -9.66931, 0.1 ) }
    dend_49 { pt3dadd( 12.4215, 169.145, -9.88067, 0.1 ) }
    dend_49 { pt3dadd( 12.396, 169.518, -10.1231, 0.14 ) }
    dend_49 { pt3dadd( 12.3588, 170.262, -10.7096, 0.28 ) }
    dend_49 { pt3dadd( 12.344, 170.605, -11.0023, 0.28 ) }
    dend_49 { pt3dadd( 12.3255, 171.235, -11.543, 0.14 ) }
    dend_49 { pt3dadd( 12.318, 171.597, -11.815, 0.1 ) }
    dend_49 { pt3dadd( 12.32, 172.347, -12.3438, 0.1 ) }
    dend_49 { pt3dadd( 12.3408, 173.142, -12.8182, 0.1 ) }
    dend_49 { pt3dadd( 12.3613, 173.564, -12.9871, 0.1 ) }
    dend_49 { pt3dadd( 12.4136, 174.061, -13.1074, 0.14 ) }
    dend_49 { pt3dadd( 12.5626, 175.013, -13.1456, 0.28 ) }
    dend_49 { pt3dadd( 12.6102, 175.237, -13.1268, 0.42 ) }
    dend_49 { pt3dadd( 12.7294, 175.719, -13.029, 0.14 ) }
    dend_49 { pt3dadd( 12.8577, 176.204, -12.9096, 0.1 ) }
    dend_49 { pt3dadd( 12.942, 176.512, -12.8483, 0.1 ) }
    dend_49 { pt3dadd( 13.069, 176.998, -12.7837, 0.1 ) }
    dend_49 { pt3dadd( 13.1839, 177.5, -12.7549, 0.1 ) }
    dend_49 { pt3dadd( 13.2836, 177.998, -12.7633, 0.1 ) }
    dend_49 { pt3dadd( 13.3221, 178.222, -12.7809, 0.1 ) }
    dend_49 { pt3dadd( 13.4004, 178.72, -12.8799, 0.1 ) }
    dend_49 { pt3dadd( 13.4754, 179.202, -13.0169, 0.1 ) }
    dend_49 { pt3dadd( 13.5455, 179.63, -13.1651, 0.1 ) }
    dend_49 { pt3dadd( 13.7014, 180.517, -13.5004, 0.1 ) }
    dend_49 { pt3dadd( 13.7735, 180.931, -13.66, 0.1 ) }
    dend_49 { pt3dadd( 13.9189, 181.822, -13.9897, 0.1 ) }
    dend_49 { pt3dadd( 13.9601, 182.126, -14.0943, 0.1 ) }
    dend_49 { pt3dadd( 14.0085, 182.609, -14.2348, 0.1 ) }
    dend_49 { pt3dadd( 14.0481, 183.113, -14.3373, 0.1 ) }
    dend_49 { pt3dadd( 14.0702, 183.572, -14.3773, 0.1 ) }
    dend_49 { pt3dadd( 14.0837, 184.022, -14.3931, 0.1 ) }
    dend_49 { pt3dadd( 14.0866, 184.481, -14.3793, 0.1 ) }
    dend_49 { pt3dadd( 14.0814, 184.942, -14.3665, 0.1 ) }
    dend_49 { pt3dadd( 14.0687, 185.459, -14.3529, 0.1 ) }
    dend_49 { pt3dadd( 14.0569, 185.964, -14.3036, 0.1 ) }
    dend_49 { pt3dadd( 14.0531, 186.191, -14.2679, 0.1 ) }
    dend_49 { pt3dadd( 14.0416, 186.698, -14.166, 0.1 ) }
    dend_49 { pt3dadd( 14.0348, 187.138, -14.0604, 0.1 ) }
    dend_49 { pt3dadd( 14.0058, 187.57, -13.9145, 0.1 ) }
    dend_49 { pt3dadd( 13.8388, 188.408, -13.4823, 0.14 ) }
    dend_49 { pt3dadd( 13.7036, 188.764, -13.2384, 0.1 ) }
    dend_49 { pt3dadd( 13.5136, 189.076, -12.9794, 0.1 ) }
    dend_49 { pt3dadd( 13.3923, 189.207, -12.8495, 0.14 ) }
    dend_49 { pt3dadd( 12.7788, 189.717, -12.3619, 0.1 ) }
    dend_49 { pt3dadd( 12.0662, 190.183, -11.9831, 0.1 ) }
    dend_49 { pt3dadd( 11.647, 190.424, -11.9075, 0.14 ) }
    dend_49 { pt3dadd( 11.2227, 190.666, -11.9916, 0.14 ) }
    dend_49 { pt3dadd( 10.9858, 190.815, -12.1164, 0.1 ) }
    dend_49 { pt3dadd( 10.38, 191.253, -12.6685, 0.1 ) }
    dend_49 { pt3dadd( 10.2152, 191.392, -12.8916, 0.1 ) }
    dend_49 { pt3dadd( 9.78577, 191.794, -13.6093, 0.1 ) }
    dend_49 { pt3dadd( 9.40778, 192.19, -14.3539, 0.1 ) }
    dend_49 { pt3dadd( 9.22828, 192.396, -14.7658, 0.1 ) }
    dend_49 { pt3dadd( 8.96205, 192.707, -15.4351, 0.1 ) }
    dend_49 { pt3dadd( 8.85792, 192.822, -15.7058, 0.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 85/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.6867, -74.1984, 8.16245, 1.12 ) }
    dend_18 { pt3dadd( 10.755, -74.9344, 8.15797, 1.12 ) }
    dend_18 { pt3dadd( 10.8406, -75.7748, 8.14838, 1.26 ) }
    dend_18 { pt3dadd( 10.9267, -76.5214, 8.13397, 1.4 ) }
    dend_18 { pt3dadd( 11.0467, -77.2657, 8.09932, 1.54 ) }
    dend_18 { pt3dadd( 11.1161, -77.6319, 8.07621, 1.4 ) }
    dend_18 { pt3dadd( 11.1161, -77.6319, 8.07621, 1.26 ) }
    dend_18 { pt3dadd( 11.1809, -77.976, 7.98198, 1.12 ) }
    dend_18 { pt3dadd( 11.3184, -78.6689, 7.74374, 0.98 ) }
    dend_18 { pt3dadd( 11.4397, -79.4171, 7.39413, 0.84 ) }
    dend_18 { pt3dadd( 11.5299, -80.069, 7.05194, 0.7 ) }
    dend_18 { pt3dadd( 11.7013, -81.4387, 6.31758, 0.84 ) }
    dend_18 { pt3dadd( 11.7879, -82.0875, 5.96936, 0.98 ) }
    dend_18 { pt3dadd( 11.8967, -82.7467, 5.64569, 1.12 ) }
    dend_18 { pt3dadd( 12.1862, -84.1503, 5.01334, 1.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_18 { pt3dadd( 12.3234, -84.8206, 4.72287, 1.12 ) }
    dend_18 { pt3dadd( 12.4862, -85.4999, 4.4567, 0.98 ) }
    dend_18 { pt3dadd( 12.7251, -86.2674, 4.25609, 1.12 ) }
    dend_18 { pt3dadd( 13.1925, -87.535, 3.97144, 0.98 ) }
    dend_18 { pt3dadd( 13.4176, -87.9988, 3.93309, 1.12 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 10.6867, -74.1984, 8.16245, 0.28 ) }
    dend_17 { pt3dadd( 11.0756, -74.3444, 8.2473, 0.28 ) }
    dend_17 { pt3dadd( 11.7052, -74.5776, 8.38486, 0.42 ) }
    dend_17 { pt3dadd( 12.087, -74.7292, 8.52339, 0.56 ) }
    dend_17 { pt3dadd( 12.6621, -74.9865, 8.77227, 0.42 ) }
    dend_17 { pt3dadd( 13.0234, -75.1599, 8.93944, 0.28 ) }
    dend_17 { pt3dadd( 13.7313, -75.5294, 9.27236, 0.14 ) }
    dend_17 { pt3dadd( 14.2759, -75.8535, 9.54153, 0.28 ) }
    dend_17 { pt3dadd( 15.1758, -76.4554, 10.0003, 0.28 ) }
    dend_17 { pt3dadd( 15.6973, -76.8273, 10.2591, 0.14 ) }
    dend_17 { pt3dadd( 16.0206, -77.0718, 10.4125, 0.1 ) }
    dend_17 { pt3dadd( 16.5364, -77.4775, 10.6342, 0.1 ) }
    dend_17 { pt3dadd( 17.06, -77.8944, 10.7862, 0.1 ) }
    dend_17 { pt3dadd( 17.4017, -78.1663, 10.8341, 0.1 ) }
    dend_17 { pt3dadd( 18.0903, -78.6938, 10.8736, 0.1 ) }
    dend_17 { pt3dadd( 18.4429, -78.9453, 10.9041, 0.1 ) }
    dend_17 { pt3dadd( 19.0015, -79.3317, 11.0361, 0.14 ) }
    dend_17 { pt3dadd( 19.8782, -79.8734, 11.4059, 0.28 ) }
    dend_17 { pt3dadd( 19.8782, -79.8734, 11.4059, 0.42 ) }
    dend_17 { pt3dadd( 20.7701, -80.309, 12.0227, 0.42 ) }
    dend_17 { pt3dadd( 21.2362, -80.5432, 12.4664, 0.56 ) }
    dend_17 { pt3dadd( 21.9822, -80.9537, 13.2727, 0.42 ) }
    dend_17 { pt3dadd( 22.3886, -81.2137, 13.7448, 0.28 ) }
    dend_17 { pt3dadd( 22.8004, -81.5107, 14.2102, 0.14 ) }
    dend_17 { pt3dadd( 23.0679, -81.7163, 14.4702, 0.28 ) }
    dend_17 { pt3dadd( 23.8258, -82.3307, 15.0584, 0.56 ) }
    dend_17 { pt3dadd( 24.291, -82.7299, 15.3638, 0.7 ) }
    dend_17 { pt3dadd( 24.7059, -83.1105, 15.6243, 0.56 ) }
    dend_17 { pt3dadd( 25.2468, -83.678, 16.0005, 0.42 ) }
    dend_17 { pt3dadd( 25.5055, -83.9827, 16.1861, 0.28 ) }
    dend_17 { pt3dadd( 25.7516, -84.2958, 16.3536, 0.14 ) }
    dend_17 { pt3dadd( 26.2611, -84.9643, 16.6484, 0.14 ) }
    dend_17 { pt3dadd( 26.8914, -85.8548, 17.0294, 0.28 ) }
    dend_17 { pt3dadd( 27.2189, -86.3408, 17.2228, 0.14 ) }
    dend_17 { pt3dadd( 27.5393, -86.8474, 17.4027, 0.14 ) }
    dend_17 { pt3dadd( 27.8438, -87.3603, 17.6024, 0.1 ) }
    dend_17 { pt3dadd( 28.1752, -87.928, 17.8303, 0.1 ) }
    dend_17 { pt3dadd( 28.5164, -88.4922, 18.0519, 0.1 ) }
    dend_17 { pt3dadd( 28.8762, -89.0391, 18.3033, 0.1 ) }
    dend_17 { pt3dadd( 29.1034, -89.3611, 18.494, 0.1 ) }
    dend_17 { pt3dadd( 29.6911, -90.1815, 19.0474, 0.1 ) }
    dend_17 { pt3dadd( 30.0393, -90.6662, 19.3929, 0.1 ) }
    dend_17 { pt3dadd( 30.3886, -91.1546, 19.7467, 0.1 ) }
    dend_17 { pt3dadd( 31.0019, -92.0572, 20.4589, 0.1 ) }
    dend_17 { pt3dadd( 31.1991, -92.3678, 20.7017, 0.1 ) }
    dend_17 { pt3dadd( 31.4696, -92.8249, 21.0248, 0.14 ) }
    dend_17 { pt3dadd( 31.7633, -93.3478, 21.384, 0.28 ) }
    dend_17 { pt3dadd( 31.9314, -93.6724, 21.6151, 0.42 ) }
    dend_17 { pt3dadd( 32.3754, -94.5421, 22.2297, 0.1 ) }
    dend_17 { pt3dadd( 32.6298, -95.0194, 22.5392, 0.1 ) }
    dend_17 { pt3dadd( 32.8864, -95.5028, 22.8439, 0.14 ) }
    dend_17 { pt3dadd( 33.4353, -96.5276, 23.4509, 0.1 ) }
    dend_17 { pt3dadd( 33.7273, -97.0858, 23.7439, 0.1 ) }
    dend_17 { pt3dadd( 33.9191, -97.4561, 23.8999, 0.1 ) }
    dend_17 { pt3dadd( 34.2361, -98.053, 24.0749, 0.14 ) }
    dend_17 { pt3dadd( 34.5419, -98.5984, 24.167, 0.28 ) }
    dend_17 { pt3dadd( 34.8439, -99.1479, 24.2235, 0.28 ) }
    dend_17 { pt3dadd( 34.9885, -99.4299, 24.226, 0.42 ) }
    dend_17 { pt3dadd( 35.2495, -100.002, 24.2887, 0.28 ) }
    dend_17 { pt3dadd( 35.487, -100.579, 24.4019, 0.14 ) }
    dend_17 { pt3dadd( 35.8974, -101.639, 24.8098, 0.1 ) }
    dend_17 { pt3dadd( 36.292, -102.603, 25.3203, 0.28 ) }
    dend_17 { pt3dadd( 36.5145, -103.102, 25.6289, 0.14 ) }
    dend_17 { pt3dadd( 36.9868, -104.119, 26.3081, 0.1 ) }
    dend_17 { pt3dadd( 37.2207, -104.591, 26.6393, 0.1 ) }
    dend_17 { pt3dadd( 37.7398, -105.57, 27.3411, 0.1 ) }
    dend_17 { pt3dadd( 38.0054, -106.08, 27.7242, 0.1 ) }
    dend_17 { pt3dadd( 38.3116, -106.605, 28.0709, 0.1 ) }
    dend_17 { pt3dadd( 38.4572, -106.835, 28.2185, 0.1 ) }
    dend_17 { pt3dadd( 38.8301, -107.368, 28.4772, 0.1 ) }
    dend_17 { pt3dadd( 39.0814, -107.691, 28.6193, 0.1 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -5.16655, -30.9526, -42.3857, 0.28 ) }
    dend_7 { pt3dadd( -5.34947, -31.2582, -42.4498, 0.28 ) }
    dend_7 { pt3dadd( -5.70158, -31.8704, -42.5688, 0.14 ) }
    dend_7 { pt3dadd( -5.87902, -32.1804, -42.6284, 0.28 ) }
    dend_7 { pt3dadd( -6.15028, -32.6687, -42.7169, 0.14 ) }
    dend_7 { pt3dadd( -6.41689, -33.1693, -42.8, 0.1 ) }
    dend_7 { pt3dadd( -6.57848, -33.4959, -42.846, 0.1 ) }
    dend_7 { pt3dadd( -6.78986, -34.019, -42.888, 0.14 ) }
    dend_7 { pt3dadd( -6.89371, -34.3678, -42.8914, 0.28 ) }
    dend_7 { pt3dadd( -6.94039, -34.6179, -42.8753, 0.42 ) }
    dend_7 { pt3dadd( -6.9622, -34.8716, -42.8419, 0.98 ) }
    dend_7 { pt3dadd( -6.96612, -35.3672, -42.7509, 0.84 ) }
    dend_7 { pt3dadd( -6.93209, -35.924, -42.6232, 0.7 ) }
    dend_7 { pt3dadd( -6.88272, -36.4051, -42.4995, 0.56 ) }
    dend_7 { pt3dadd( -6.81815, -36.9591, -42.3519, 0.42 ) }
    dend_7 { pt3dadd( -6.78446, -37.4329, -42.199, 0.28 ) }
    dend_7 { pt3dadd( -6.77122, -37.9126, -42.0255, 0.14 ) }
    dend_7 { pt3dadd( -6.77994, -38.4389, -41.8214, 0.1 ) }
    dend_7 { pt3dadd( -6.8091, -38.9105, -41.6341, 0.1 ) }
    dend_7 { pt3dadd( -6.85162, -39.383, -41.4444, 0.1 ) }
    dend_7 { pt3dadd( -6.96596, -40.3442, -41.0631, 0.1 ) }
    dend_7 { pt3dadd( -7.02759, -40.8164, -40.8769, 0.1 ) }
    dend_7 { pt3dadd( -7.09912, -41.2818, -40.7071, 0.1 ) }
    dend_7 { pt3dadd( -7.18101, -41.7641, -40.5541, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_7 { pt3dadd( -7.26497, -42.2522, -40.4296, 0.14 ) }
    dend_7 { pt3dadd( -7.30464, -42.502, -40.3843, 0.28 ) }
    dend_7 { pt3dadd( -7.33725, -42.7533, -40.3586, 0.7 ) }
    dend_7 { pt3dadd( -7.41629, -43.3113, -40.3059, 0.56 ) }
    dend_7 { pt3dadd( -7.48936, -43.8157, -40.2594, 0.42 ) }
    dend_7 { pt3dadd( -7.58007, -44.3818, -40.2129, 0.28 ) }
    dend_7 { pt3dadd( -7.66274, -44.8854, -40.1729, 0.14 ) }
    dend_7 { pt3dadd( -7.74201, -45.3919, -40.1301, 0.1 ) }
    dend_7 { pt3dadd( -7.77618, -45.6343, -40.1071, 0.1 ) }
    dend_7 { pt3dadd( -7.84444, -46.1415, -40.0568, 0.1 ) }
    dend_7 { pt3dadd( -7.89965, -46.4997, -40.026, 0.1 ) }
    dend_7 { pt3dadd( -7.97987, -47.0036, -39.9843, 0.1 ) }
    dend_7 { pt3dadd( -8.07455, -47.5084, -39.9521, 0.1 ) }
    dend_7 { pt3dadd( -8.17359, -48.0012, -39.925, 0.1 ) }
    dend_7 { pt3dadd( -8.29504, -48.5631, -39.8999, 0.1 ) }
    dend_7 { pt3dadd( -8.42727, -49.1247, -39.8819, 0.1 ) }
    dend_7 { pt3dadd( -8.55102, -49.6152, -39.8718, 0.1 ) }
    dend_7 { pt3dadd( -8.70199, -50.1723, -39.8671, 0.1 ) }
    dend_7 { pt3dadd( -8.83959, -50.6657, -39.8657, 0.1 ) }
    dend_7 { pt3dadd( -8.98701, -51.2127, -39.8606, 0.14 ) }
    dend_7 { pt3dadd( -9.12234, -51.7719, -39.8452, 0.28 ) }
    dend_7 { pt3dadd( -9.25131, -52.3249, -39.8267, 0.42 ) }
    dend_7 { pt3dadd( -9.37127, -52.8227, -39.8126, 0.56 ) }
    dend_7 { pt3dadd( -9.42843, -53.0735, -39.8033, 0.42 ) }
    dend_7 { pt3dadd( -9.51545, -53.5806, -39.8119, 0.42 ) }
    dend_7 { pt3dadd( -9.57087, -54.0885, -39.8382, 0.56 ) }
    dend_7 { pt3dadd( -9.59072, -54.4421, -39.8657, 0.1 ) }
    dend_7 { pt3dadd( -9.60143, -55.0148, -39.9193, 0.1 ) }
    dend_7 { pt3dadd( -9.60229, -55.525, -39.9709, 0.1 ) }
    dend_7 { pt3dadd( -9.58931, -56.5642, -40.0649, 0.1 ) }
    dend_7 { pt3dadd( -9.58626, -56.8196, -40.0872, 0.1 ) }
    dend_7 { pt3dadd( -9.58008, -57.3201, -40.1193, 0.7 ) }
    dend_7 { pt3dadd( -9.57342, -57.8329, -40.1307, 0.56 ) }
    dend_7 { pt3dadd( -9.57517, -58.3434, -40.1187, 0.42 ) }
    dend_7 { pt3dadd( -9.59712, -58.8552, -40.0816, 0.42 ) }
    dend_7 { pt3dadd( -9.64084, -59.201, -40.0133, 0.56 ) }
    dend_7 { pt3dadd( -9.71776, -59.6908, -39.8907, 0.56 ) }
    dend_7 { pt3dadd( -9.80186, -60.1769, -39.7592, 0.42 ) }
    dend_7 { pt3dadd( -9.89408, -60.6604, -39.6151, 0.28 ) }
    dend_7 { pt3dadd( -9.99258, -61.1345, -39.4554, 0.14 ) }
    dend_7 { pt3dadd( -10.2029, -62.086, -39.0841, 0.1 ) }
    dend_7 { pt3dadd( -10.301, -62.5308, -38.8792, 0.1 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 42/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -5.16655, -30.9526, -42.3857, 0.1 ) }
    dend_6 { pt3dadd( -5.59675, -29.8088, -42.4272, 0.1 ) }
    dend_6 { pt3dadd( -5.82003, -29.276, -42.486, 0.1 ) }
    dend_6 { pt3dadd( -6.05915, -28.7634, -42.5736, 0.1 ) }
    dend_6 { pt3dadd( -6.34165, -28.1887, -42.6901, 0.1 ) }
    dend_6 { pt3dadd( -6.59738, -27.6921, -42.8088, 0.1 ) }
    dend_6 { pt3dadd( -6.59738, -27.6921, -42.8088, 0.1 ) }
    dend_6 { pt3dadd( -6.92258, -26.9859, -43.0619, 0.1 ) }
    dend_6 { pt3dadd( -7.09165, -26.6351, -43.1919, 0.1 ) }
    dend_6 { pt3dadd( -7.09165, -26.6351, -43.1919, 0.1 ) }
    dend_6 { pt3dadd( -7.3221, -26.0632, -43.3781, 0.1 ) }
    dend_6 { pt3dadd( -7.51445, -25.5394, -43.538, 0.1 ) }
    dend_6 { pt3dadd( -7.68159, -24.9988, -43.6851, 0.1 ) }
    dend_6 { pt3dadd( -7.82772, -24.3832, -43.8274, 0.1 ) }
    dend_6 { pt3dadd( -7.94002, -23.819, -43.9454, 0.1 ) }
    dend_6 { pt3dadd( -8.005, -23.2653, -44.0864, 0.1 ) }
    dend_6 { pt3dadd( -8.005, -23.2653, -44.0864, 0.1 ) }
    dend_6 { pt3dadd( -7.98672, -22.7056, -44.2582, 0.1 ) }
    dend_6 { pt3dadd( -7.93765, -22.1454, -44.4328, 0.1 ) }
    dend_6 { pt3dadd( -7.85814, -21.588, -44.5964, 0.1 ) }
    dend_6 { pt3dadd( -7.6696, -20.4109, -44.9255, 0.1 ) }
    dend_6 { pt3dadd( -7.58197, -19.8595, -45.0696, 0.1 ) }
    dend_6 { pt3dadd( -7.45924, -19.238, -45.25, 0.1 ) }
    dend_6 { pt3dadd( -7.33688, -18.6906, -45.4194, 0.1 ) }
    dend_6 { pt3dadd( -7.2005, -18.086, -45.6086, 0.1 ) }
    dend_6 { pt3dadd( -7.09002, -17.5347, -45.7742, 0.1 ) }
    dend_6 { pt3dadd( -6.99803, -16.971, -45.9204, 0.1 ) }
    dend_6 { pt3dadd( -6.82499, -15.8941, -46.2104, 0.1 ) }
    dend_6 { pt3dadd( -6.74794, -15.3404, -46.3626, 0.1 ) }
    dend_6 { pt3dadd( -6.68203, -14.7767, -46.5112, 0.1 ) }
    dend_6 { pt3dadd( -6.60726, -14.2171, -46.6795, 0.1 ) }
    dend_6 { pt3dadd( -6.51871, -13.5918, -46.8725, 0.1 ) }
    dend_6 { pt3dadd( -6.44856, -13.0409, -47.0367, 0.1 ) }
    dend_6 { pt3dadd( -6.38748, -12.4763, -47.1842, 0.1 ) }
    dend_6 { pt3dadd( -6.31567, -11.9115, -47.3371, 0.1 ) }
    dend_6 { pt3dadd( -6.15978, -10.7275, -47.6627, 0.1 ) }
    dend_6 { pt3dadd( -6.09215, -10.1726, -47.8148, 0.1 ) }
    dend_6 { pt3dadd( -6.01043, -9.61976, -47.9911, 0.1 ) }
    dend_6 { pt3dadd( -5.90698, -9.00198, -48.1989, 0.1 ) }
    dend_6 { pt3dadd( -5.81554, -8.45106, -48.3847, 0.1 ) }
    dend_6 { pt3dadd( -5.72767, -7.89789, -48.5571, 0.1 ) }
    dend_6 { pt3dadd( -5.65708, -7.34273, -48.7074, 0.1 ) }
    dend_6 { pt3dadd( -5.50165, -6.15874, -49.0332, 0.1 ) }
    dend_6 { pt3dadd( -5.43328, -5.59417, -49.1882, 0.1 ) }
    dend_6 { pt3dadd( -5.35222, -5.04141, -49.3649, 0.1 ) }
    dend_6 { pt3dadd( -5.25118, -4.43512, -49.5693, 0.1 ) }
    dend_6 { pt3dadd( -5.16047, -3.88695, -49.7544, 0.1 ) }
    dend_6 { pt3dadd( -5.06756, -3.333, -49.9311, 0.1 ) }
    dend_6 { pt3dadd( -4.98825, -2.77353, -50.0882, 0.1 ) }
    dend_6 { pt3dadd( -4.80731, -1.6043, -50.4276, 0.1 ) }
    dend_6 { pt3dadd( -4.72415, -1.04742, -50.5912, 0.1 ) }
    dend_6 { pt3dadd( -4.65441, -0.488091, -50.7527, 0.1 ) }
    dend_6 { pt3dadd( -4.62581, -0.204289, -50.8271, 0.1 ) }
    dend_6 { pt3dadd( -4.59148, 0.360467, -50.954, 0.1 ) }
    dend_6 { pt3dadd( -4.58842, 0.93835, -51.0577, 0.1 ) }
    dend_6 { pt3dadd( -4.58952, 1.51817, -51.1662, 0.1 ) }
    dend_6 { pt3dadd( -4.5726, 2.08869, -51.302, 0.1 ) }
    dend_6 { pt3dadd( -4.54713, 2.65624, -51.4581, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( -4.51984, 3.21652, -51.6275, 0.1 ) }
    dend_6 { pt3dadd( -4.48361, 3.76673, -51.8029, 0.1 ) }
    dend_6 { pt3dadd( -4.39807, 4.93878, -52.1859, 0.1 ) }
    dend_6 { pt3dadd( -4.35875, 5.49472, -52.3661, 0.1 ) }
    dend_6 { pt3dadd( -4.31674, 6.05741, -52.535, 0.1 ) }
    dend_6 { pt3dadd( -4.29896, 6.33191, -52.6083, 0.1 ) }
    dend_6 { pt3dadd( -4.26422, 6.90445, -52.7333, 0.1 ) }
    dend_6 { pt3dadd( -4.24115, 7.48702, -52.8263, 0.1 ) }
    dend_6 { pt3dadd( -4.24075, 8.07202, -52.8821, 0.1 ) }
    dend_6 { pt3dadd( -4.23431, 8.73158, -52.9416, 0.1 ) }
    dend_6 { pt3dadd( -4.21762, 9.31028, -52.9875, 0.1 ) }
    dend_6 { pt3dadd( -4.20233, 9.72664, -53.0187, 0.1 ) }
    dend_6 { pt3dadd( -4.17999, 10.3126, -53.062, 0.1 ) }
    dend_6 { pt3dadd( -4.16251, 10.9013, -53.1084, 0.1 ) }
    dend_6 { pt3dadd( -4.14386, 11.4771, -53.153, 0.1 ) }
    dend_6 { pt3dadd( -4.12922, 12.1352, -53.2076, 0.1 ) }
    dend_6 { pt3dadd( -4.1181, 12.7208, -53.2573, 0.1 ) }
    dend_6 { pt3dadd( -4.11538, 13.306, -53.3118, 0.1 ) }
    dend_6 { pt3dadd( -4.09189, 13.8883, -53.406, 0.1 ) }
    dend_6 { pt3dadd( -4.07386, 14.1727, -53.4703, 0.1 ) }
    dend_6 { pt3dadd( -4.03427, 14.7358, -53.6291, 0.1 ) }
    dend_6 { pt3dadd( -3.99941, 15.2943, -53.8114, 0.1 ) }
    dend_6 { pt3dadd( -3.96606, 15.8468, -54.0019, 0.1 ) }
    dend_6 { pt3dadd( -3.91234, 16.9766, -54.3979, 0.1 ) }
    dend_6 { pt3dadd( -3.89792, 17.5203, -54.585, 0.1 ) }
    dend_6 { pt3dadd( -3.88007, 18.067, -54.7992, 0.1 ) }
    dend_6 { pt3dadd( -3.85562, 18.6061, -55.0228, 0.1 ) }
    dend_6 { pt3dadd( -3.83118, 19.1452, -55.2464, 0.1 ) }
    dend_6 { pt3dadd( -3.81335, 19.6918, -55.4607, 0.1 ) }
    dend_6 { pt3dadd( -3.80916, 20.2448, -55.6516, 0.1 ) }
    dend_6 { pt3dadd( -3.79749, 21.3708, -56.0463, 0.1 ) }
    dend_6 { pt3dadd( -3.7933, 21.9238, -56.2372, 0.1 ) }
    dend_6 { pt3dadd( -3.77547, 22.4704, -56.4514, 0.1 ) }
    dend_6 { pt3dadd( -3.74972, 23.0086, -56.6769, 0.1 ) }
    dend_6 { pt3dadd( -3.7226, 23.5458, -56.9044, 0.1 ) }
    dend_6 { pt3dadd( -3.70129, 24.0902, -57.1236, 0.1 ) }
    dend_6 { pt3dadd( -3.69433, 24.632, -57.3158, 0.1 ) }
    dend_6 { pt3dadd( -3.61353, 25.7328, -57.7774, 0.1 ) }
    dend_6 { pt3dadd( -3.58324, 25.9952, -57.898, 0.1 ) }
    dend_6 { pt3dadd( -3.49182, 26.5018, -58.1758, 0.1 ) }
    dend_6 { pt3dadd( -3.38555, 26.9928, -58.4682, 0.1 ) }
    dend_6 { pt3dadd( -3.25011, 27.4646, -58.7822, 0.1 ) }
    dend_6 { pt3dadd( -2.93071, 28.4239, -59.4588, 0.1 ) }
    dend_6 { pt3dadd( -2.78802, 28.8817, -59.788, 0.1 ) }
    dend_6 { pt3dadd( -2.52772, 29.7965, -60.4906, 0.1 ) }
    dend_6 { pt3dadd( -2.42082, 30.2374, -60.8522, 0.1 ) }
    dend_6 { pt3dadd( -2.29897, 31.1541, -61.6351, 0.1 ) }
    dend_6 { pt3dadd( -2.29897, 31.1541, -61.6351, 0.1 ) }
    dend_6 { pt3dadd( -2.41394, 31.7346, -62.19, 0.1 ) }
    dend_6 { pt3dadd( -2.5663, 32.1759, -62.6319, 0.1 ) }
    dend_6 { pt3dadd( -2.70457, 32.444, -62.8898, 0.1 ) }
    dend_6 { pt3dadd( -2.99988, 32.9558, -63.4432, 0.1 ) }
    dend_6 { pt3dadd( -3.43699, 33.6203, -64.1874, 0.1 ) }
    dend_6 { pt3dadd( -3.68516, 34.0147, -64.6356, 0.1 ) }
    dend_6 { pt3dadd( -3.83075, 34.2547, -64.914, 0.1 ) }
    dend_6 { pt3dadd( -4.07661, 34.6421, -65.3588, 0.1 ) }
    dend_6 { pt3dadd( -4.47775, 35.291, -66.1355, 0.1 ) }
    dend_6 { pt3dadd( -4.77735, 35.7802, -66.7117, 0.1 ) }
    dend_6 { pt3dadd( -5.0293, 36.1663, -67.1443, 0.1 ) }
    dend_6 { pt3dadd( -5.18849, 36.4083, -67.4259, 0.1 ) }
    dend_6 { pt3dadd( -5.49809, 36.9005, -67.9751, 0.1 ) }
    dend_6 { pt3dadd( -5.91678, 37.611, -68.6905, 0.1 ) }
    dend_6 { pt3dadd( -6.1637, 38.0804, -69.0676, 0.1 ) }
    dend_6 { pt3dadd( -6.28833, 38.3938, -69.2825, 0.1 ) }
    dend_6 { pt3dadd( -6.28833, 38.3938, -69.2825, 0.1 ) }
    dend_6 { pt3dadd( -6.42006, 38.9135, -69.5128, 0.1 ) }
    dend_6 { pt3dadd( -6.53284, 39.4495, -69.681, 0.1 ) }
    dend_6 { pt3dadd( -6.64859, 40.0124, -69.8009, 0.1 ) }
    dend_6 { pt3dadd( -6.7346, 40.5681, -69.9594, 0.1 ) }
    dend_6 { pt3dadd( -6.76907, 40.8441, -70.0528, 0.1 ) }
    dend_6 { pt3dadd( -6.81335, 41.4319, -70.3209, 0.1 ) }
    dend_6 { pt3dadd( -6.84724, 41.9318, -70.6191, 0.1 ) }
    dend_6 { pt3dadd( -6.87253, 42.3662, -70.9961, 0.1 ) }
    dend_6 { pt3dadd( -6.88405, 43.0802, -71.9585, 0.1 ) }
    dend_6 { pt3dadd( -6.89593, 43.3513, -72.4591, 0.1 ) }
    dend_6 { pt3dadd( -6.95775, 43.762, -73.4195, 0.1 ) }
    dend_6 { pt3dadd( -7.01299, 43.942, -73.943, 0.1 ) }
    dend_6 { pt3dadd( -7.1795, 44.2454, -75.0394, 0.1 ) }
    dend_6 { pt3dadd( -7.39876, 44.4944, -76.0263, 0.1 ) }
    dend_6 { pt3dadd( -7.64549, 44.7021, -76.747, 0.1 ) }
    dend_6 { pt3dadd( -7.89502, 44.9095, -77.2915, 0.1 ) }
    dend_6 { pt3dadd( -8.09297, 45.0901, -77.5899, 0.1 ) }
    dend_6 { pt3dadd( -8.09297, 45.0901, -77.5899, 0.1 ) }
    dend_6 { pt3dadd( -8.44288, 45.5286, -77.8858, 0.1 ) }
    dend_6 { pt3dadd( -8.79587, 45.9968, -78.132, 0.1 ) }
    dend_6 { pt3dadd( -9.14519, 46.4782, -78.3773, 0.1 ) }
    dend_6 { pt3dadd( -9.36849, 46.7749, -78.5331, 0.1 ) }
    dend_6 { pt3dadd( -9.74948, 47.22, -78.793, 0.1 ) }
    dend_6 { pt3dadd( -10.149, 47.6309, -79.0602, 0.1 ) }
    dend_6 { pt3dadd( -10.149, 47.6309, -79.0602, 0.1 ) }
    dend_6 { pt3dadd( -10.6049, 47.9631, -79.352, 0.1 ) }
    dend_6 { pt3dadd( -11.0642, 48.2733, -79.6436, 0.1 ) }
    dend_6 { pt3dadd( -11.5325, 48.5812, -79.9402, 0.1 ) }
    dend_6 { pt3dadd( -11.8204, 48.7752, -80.123, 0.1 ) }
    dend_6 { pt3dadd( -12.0089, 48.9232, -80.2705, 0.1 ) }
    dend_6 { pt3dadd( -12.4931, 49.3729, -80.7152, 0.1 ) }
    dend_6 { pt3dadd( -12.8093, 49.7475, -81.1232, 0.1 ) }
    dend_6 { pt3dadd( -12.9742, 49.9819, -81.3949, 0.1 ) }
    dend_6 { pt3dadd( -13.18, 50.356, -81.8796, 0.1 ) }
    dend_6 { pt3dadd( -13.4959, 51.0398, -82.8068, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -13.5899, 51.2694, -83.1255, 0.1 ) }
    dend_6 { pt3dadd( -13.8646, 51.9992, -84.1541, 0.1 ) }
    dend_6 { pt3dadd( -13.9359, 52.2175, -84.4858, 0.1 ) }
    dend_6 { pt3dadd( -14.1466, 52.8591, -85.4743, 0.1 ) }
    dend_6 { pt3dadd( -14.2711, 53.204, -85.9879, 0.1 ) }
    dend_6 { pt3dadd( -14.3717, 53.4376, -86.3018, 0.1 ) }
    dend_6 { pt3dadd( -14.5571, 53.8193, -86.7708, 0.1 ) }
    dend_6 { pt3dadd( -14.8849, 54.4395, -87.5052, 0.1 ) }
    dend_6 { pt3dadd( -15.1572, 54.9316, -88.0863, 0.1 ) }
    dend_6 { pt3dadd( -15.4065, 55.3142, -88.5338, 0.1 ) }
    dend_6 { pt3dadd( -15.5698, 55.5528, -88.8157, 0.1 ) }
    dend_6 { pt3dadd( -15.911, 56.0274, -89.36, 0.1 ) }
    dend_6 { pt3dadd( -16.3672, 56.6705, -90.1142, 0.1 ) }
    dend_6 { pt3dadd( -16.6441, 57.0427, -90.5425, 0.1 ) }
    dend_6 { pt3dadd( -16.9079, 57.4102, -90.981, 0.1 ) }
    dend_6 { pt3dadd( -17.1755, 57.7789, -91.4274, 0.1 ) }
    dend_6 { pt3dadd( -17.326, 58.0024, -91.7156, 0.1 ) }
    dend_6 { pt3dadd( -17.7534, 58.6848, -92.6017, 0.1 ) }
    dend_6 { pt3dadd( -17.9825, 59.0586, -93.055, 0.1 ) }
    dend_6 { pt3dadd( -18.1973, 59.4442, -93.5172, 0.1 ) }
    dend_6 { pt3dadd( -18.3051, 59.6865, -93.811, 0.1 ) }
    dend_6 { pt3dadd( -18.5449, 60.3298, -94.562, 0.1 ) }
    dend_6 { pt3dadd( -18.6541, 60.7355, -95.0461, 0.1 ) }
    dend_6 { pt3dadd( -18.7228, 61.1596, -95.5148, 0.1 ) }
    dend_6 { pt3dadd( -18.7318, 61.5992, -95.9761, 0.1 ) }
    dend_6 { pt3dadd( -18.6947, 62.4655, -96.8277, 0.1 ) }
    dend_6 { pt3dadd( -18.6658, 62.8953, -97.1958, 0.1 ) }
    dend_6 { pt3dadd( -18.6177, 63.7406, -97.788, 0.1 ) }
    dend_6 { pt3dadd( -18.5645, 64.2938, -98.1298, 0.1 ) }
    dend_6 { pt3dadd( -18.525, 64.6639, -98.3221, 0.1 ) }
    dend_6 { pt3dadd( -18.478, 65.2743, -98.5604, 0.1 ) }
    dend_6 { pt3dadd( -18.4742, 65.8434, -98.7021, 0.1 ) }
    dend_6 { pt3dadd( -18.4989, 66.4111, -98.815, 0.1 ) }
    dend_6 { pt3dadd( -18.5534, 66.9885, -98.9014, 0.1 ) }
    dend_6 { pt3dadd( -18.587, 67.2772, -98.9482, 0.1 ) }
    dend_6 { pt3dadd( -18.666, 67.8488, -99.048, 0.1 ) }
    dend_6 { pt3dadd( -18.7312, 68.4151, -99.192, 0.1 ) }
    dend_6 { pt3dadd( -18.7932, 68.9654, -99.3778, 0.1 ) }
    dend_6 { pt3dadd( -18.8367, 69.4764, -99.6367, 0.1 ) }
    dend_6 { pt3dadd( -18.8367, 69.4764, -99.6367, 0.1 ) }
    dend_6 { pt3dadd( -18.8475, 69.98, -100.045, 0.1 ) }
    dend_6 { pt3dadd( -18.8576, 70.8524, -100.881, 0.1 ) }
    dend_6 { pt3dadd( -18.8516, 71.2254, -101.306, 0.1 ) }
    dend_6 { pt3dadd( -18.828, 71.9919, -102.236, 0.1 ) }
    dend_6 { pt3dadd( -18.8151, 72.3509, -102.668, 0.1 ) }
    dend_6 { pt3dadd( -18.7617, 73.0401, -103.523, 0.1 ) }
    dend_6 { pt3dadd( -18.7244, 73.437, -104.017, 0.1 ) }
    dend_6 { pt3dadd( -18.6697, 74.226, -104.929, 0.1 ) }
    dend_6 { pt3dadd( -18.6487, 74.6145, -105.349, 0.1 ) }
    dend_6 { pt3dadd( -18.6314, 75.0218, -105.758, 0.1 ) }
    dend_6 { pt3dadd( -18.6007, 75.7673, -106.462, 0.1 ) }
    dend_6 { pt3dadd( -18.5879, 76.2675, -106.864, 0.1 ) }
    dend_6 { pt3dadd( -18.5754, 76.7277, -107.197, 0.1 ) }
    dend_6 { pt3dadd( -18.5673, 77.2047, -107.53, 0.1 ) }
    dend_6 { pt3dadd( -18.5513, 78.1982, -108.233, 0.1 ) }
    dend_6 { pt3dadd( -18.5493, 78.6825, -108.556, 0.1 ) }
    dend_6 { pt3dadd( -18.5482, 79.1641, -108.878, 0.1 ) }
    dend_6 { pt3dadd( -18.5342, 79.6393, -109.213, 0.1 ) }
    dend_6 { pt3dadd( -18.5034, 80.6299, -109.919, 0.1 ) }
    dend_6 { pt3dadd( -18.492, 81.1093, -110.244, 0.1 ) }
    dend_6 { pt3dadd( -18.472, 81.5939, -110.567, 0.1 ) }
    dend_6 { pt3dadd( -18.4042, 82.5837, -111.271, 0.1 ) }
    dend_6 { pt3dadd( -18.3725, 83.0525, -111.614, 0.1 ) }
    dend_6 { pt3dadd( -18.3472, 83.5184, -111.94, 0.1 ) }
    dend_6 { pt3dadd( -18.3345, 84.0141, -112.242, 0.1 ) }
    dend_6 { pt3dadd( -18.3435, 85.04, -112.844, 0.1 ) }
    dend_6 { pt3dadd( -18.3435, 85.04, -112.844, 0.1 ) }
    dend_6 { pt3dadd( -18.4147, 85.6314, -113.097, 0.1 ) }
    dend_6 { pt3dadd( -18.5017, 86.1678, -113.315, 0.1 ) }
    dend_6 { pt3dadd( -18.5946, 86.6911, -113.551, 0.1 ) }
    dend_6 { pt3dadd( -18.705, 87.2704, -113.815, 0.1 ) }
    dend_6 { pt3dadd( -18.8113, 87.7992, -114.04, 0.1 ) }
    dend_6 { pt3dadd( -18.9225, 88.3805, -114.3, 0.1 ) }
    dend_6 { pt3dadd( -19.0142, 88.9049, -114.541, 0.1 ) }
    dend_6 { pt3dadd( -19.1998, 89.9977, -115.055, 0.1 ) }
    dend_6 { pt3dadd( -19.2825, 90.5204, -115.297, 0.1 ) }
    dend_6 { pt3dadd( -19.3562, 91.0535, -115.526, 0.1 ) }
    dend_6 { pt3dadd( -19.4359, 91.6526, -115.76, 0.1 ) }
    dend_6 { pt3dadd( -19.5034, 92.1971, -115.939, 0.1 ) }
    dend_6 { pt3dadd( -19.5412, 92.4759, -116.013, 0.1 ) }
    dend_6 { pt3dadd( -19.6358, 93.0459, -116.122, 0.1 ) }
    dend_6 { pt3dadd( -19.7433, 93.6088, -116.237, 0.1 ) }
    dend_6 { pt3dadd( -19.8697, 94.1676, -116.362, 0.1 ) }
    dend_6 { pt3dadd( -20.017, 94.7148, -116.499, 0.1 ) }
    dend_6 { pt3dadd( -20.017, 94.7148, -116.499, 0.1 ) }
    dend_6 { pt3dadd( -20.2486, 95.286, -116.686, 0.1 ) }
    dend_6 { pt3dadd( -20.5145, 95.8415, -116.89, 0.1 ) }
    dend_6 { pt3dadd( -20.7928, 96.3796, -117.101, 0.1 ) }
    dend_6 { pt3dadd( -21.0838, 96.9156, -117.318, 0.1 ) }
    dend_6 { pt3dadd( -21.3758, 97.4425, -117.535, 0.1 ) }
    dend_6 { pt3dadd( -21.5552, 97.7853, -117.67, 0.1 ) }
    dend_6 { pt3dadd( -21.8191, 98.3432, -117.874, 0.1 ) }
    dend_6 { pt3dadd( -22.0106, 98.8366, -118.083, 0.1 ) }
    dend_6 { pt3dadd( -22.0106, 98.8366, -118.083, 0.1 ) }
    dend_6 { pt3dadd( -22.1061, 99.4045, -118.403, 0.1 ) }
    dend_6 { pt3dadd( -22.1394, 99.8874, -118.704, 0.1 ) }
    dend_6 { pt3dadd( -22.1197, 100.357, -119.045, 0.1 ) }
    dend_6 { pt3dadd( -22.0108, 101.303, -119.799, 0.1 ) }
    dend_6 { pt3dadd( -21.9365, 101.747, -120.16, 0.1 ) }
    dend_6 { pt3dadd( -21.7226, 102.664, -120.877, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -21.5804, 103.115, -121.211, 0.1 ) }
    dend_6 { pt3dadd( -21.2096, 104.054, -121.834, 0.1 ) }
    dend_6 { pt3dadd( -21.0988, 104.29, -121.959, 0.1 ) }
    dend_6 { pt3dadd( -20.8035, 104.837, -122.13, 0.1 ) }
    dend_6 { pt3dadd( -20.4853, 105.393, -122.231, 0.1 ) }
    dend_6 { pt3dadd( -20.2829, 105.754, -122.269, 0.1 ) }
    dend_6 { pt3dadd( -19.9834, 106.334, -122.347, 0.1 ) }
    dend_6 { pt3dadd( -19.8308, 106.705, -122.456, 0.1 ) }
    dend_6 { pt3dadd( -19.7522, 106.953, -122.589, 0.1 ) }
    dend_6 { pt3dadd( -19.6653, 107.472, -122.971, 0.1 ) }
    dend_6 { pt3dadd( -19.6479, 108.404, -123.747, 0.1 ) }
    dend_6 { pt3dadd( -19.6749, 108.863, -124.189, 0.1 ) }
    dend_6 { pt3dadd( -19.7922, 109.703, -125.05, 0.1 ) }
    dend_6 { pt3dadd( -19.8223, 109.891, -125.262, 0.1 ) }
    dend_6 { pt3dadd( -19.8996, 110.306, -125.745, 0.1 ) }
    dend_6 { pt3dadd( -19.9647, 110.703, -126.235, 0.1 ) }
    dend_6 { pt3dadd( -20.0907, 111.47, -127.155, 0.1 ) }
    dend_6 { pt3dadd( -20.156, 111.876, -127.648, 0.1 ) }
    dend_6 { pt3dadd( -20.2804, 112.593, -128.47, 0.1 ) }
    dend_6 { pt3dadd( -20.3289, 112.994, -128.959, 0.1 ) }
    dend_6 { pt3dadd( -20.4055, 113.774, -129.87, 0.1 ) }
    dend_6 { pt3dadd( -20.4435, 114.175, -130.282, 0.1 ) }
    dend_6 { pt3dadd( -20.4817, 114.489, -130.528, 0.1 ) }
    dend_6 { pt3dadd( -20.5311, 114.992, -130.819, 0.1 ) }
    dend_6 { pt3dadd( -20.6313, 115.973, -131.157, 0.1 ) }
    dend_6 { pt3dadd( -20.7285, 117.138, -131.417, 0.1 ) }
    dend_6 { pt3dadd( -20.7925, 117.72, -131.487, 0.1 ) }
    dend_6 { pt3dadd( -20.8675, 118.287, -131.553, 0.1 ) }
    dend_6 { pt3dadd( -20.9746, 118.931, -131.634, 0.1 ) }
    dend_6 { pt3dadd( -21.1033, 119.495, -131.718, 0.1 ) }
    dend_6 { pt3dadd( -21.1793, 119.774, -131.764, 0.1 ) }
    dend_6 { pt3dadd( -21.3491, 120.379, -131.919, 0.1 ) }
    dend_6 { pt3dadd( -21.547, 120.971, -132.088, 0.1 ) }
    dend_6 { pt3dadd( -21.7665, 121.557, -132.27, 0.1 ) }
    dend_6 { pt3dadd( -21.9936, 122.131, -132.454, 0.1 ) }
    dend_6 { pt3dadd( -22.189, 122.656, -132.616, 0.1 ) }
    dend_6 { pt3dadd( -22.189, 122.656, -132.616, 0.1 ) }
    dend_6 { pt3dadd( -22.3616, 123.26, -132.772, 0.1 ) }
    dend_6 { pt3dadd( -22.4892, 123.816, -132.898, 0.1 ) }
    dend_6 { pt3dadd( -22.5919, 124.383, -133.011, 0.1 ) }
    dend_6 { pt3dadd( -22.6765, 124.953, -133.114, 0.1 ) }
    dend_6 { pt3dadd( -22.6765, 124.953, -133.114, 0.1 ) }
    dend_6 { pt3dadd( -22.7435, 125.52, -133.206, 0.1 ) }
    dend_6 { pt3dadd( -22.8008, 126.097, -133.294, 0.1 ) }
    dend_6 { pt3dadd( -22.8475, 126.676, -133.376, 0.1 ) }
    dend_6 { pt3dadd( -22.8862, 127.259, -133.454, 0.1 ) }
    dend_6 { pt3dadd( -22.9195, 127.841, -133.529, 0.1 ) }
    dend_6 { pt3dadd( -22.9499, 128.425, -133.602, 0.1 ) }
    dend_6 { pt3dadd( -22.9766, 128.997, -133.672, 0.1 ) }
    dend_6 { pt3dadd( -23.0033, 129.652, -133.75, 0.1 ) }
    dend_6 { pt3dadd( -23.0231, 130.235, -133.817, 0.1 ) }
    dend_6 { pt3dadd( -23.0386, 130.821, -133.882, 0.1 ) }
    dend_6 { pt3dadd( -23.0503, 131.395, -133.944, 0.1 ) }
    dend_6 { pt3dadd( -23.0557, 131.689, -133.975, 0.1 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 28.6838, -270.749, -54.4526, 0.1 ) }
    dend_4 { pt3dadd( 28.6652, -271.066, -54.5606, 0.1 ) }
    dend_4 { pt3dadd( 28.636, -271.516, -54.7068, 0.1 ) }
    dend_4 { pt3dadd( 28.5986, -272.019, -54.8529, 0.1 ) }
    dend_4 { pt3dadd( 28.5703, -272.477, -54.9738, 0.1 ) }
    dend_4 { pt3dadd( 28.5123, -273.448, -55.2007, 0.1 ) }
    dend_4 { pt3dadd( 28.4908, -273.906, -55.2973, 0.1 ) }
    dend_4 { pt3dadd( 28.4621, -274.421, -55.4285, 0.1 ) }
    dend_4 { pt3dadd( 28.4279, -274.924, -55.5689, 0.1 ) }
    dend_4 { pt3dadd( 28.3957, -275.378, -55.6973, 0.1 ) }
    dend_4 { pt3dadd( 28.3531, -275.891, -55.829, 0.1 ) }
    dend_4 { pt3dadd( 28.3231, -276.353, -55.9266, 0.1 ) }
    dend_4 { pt3dadd( 28.2654, -277.322, -56.1408, 0.1 ) }
    dend_4 { pt3dadd( 28.2585, -277.552, -56.1927, 0.14 ) }
    dend_4 { pt3dadd( 28.2503, -278.072, -56.3023, 0.14 ) }
    dend_4 { pt3dadd( 28.2516, -278.589, -56.3966, 0.1 ) }
    dend_4 { pt3dadd( 28.2621, -279.061, -56.4628, 0.1 ) }
    dend_4 { pt3dadd( 28.2833, -279.533, -56.5042, 0.1 ) }
    dend_4 { pt3dadd( 28.3235, -280.008, -56.5188, 0.1 ) }
    dend_4 { pt3dadd( 28.3776, -280.531, -56.5375, 0.1 ) }
    dend_4 { pt3dadd( 28.44, -281.003, -56.5579, 0.1 ) }
    dend_4 { pt3dadd( 28.5299, -281.528, -56.586, 0.1 ) }
    dend_4 { pt3dadd( 28.6106, -281.989, -56.6111, 0.1 ) }
    dend_4 { pt3dadd( 28.6977, -282.454, -56.6379, 0.1 ) }
    dend_4 { pt3dadd( 28.7937, -282.916, -56.6671, 0.1 ) }
    dend_4 { pt3dadd( 28.8854, -283.379, -56.7296, 0.1 ) }
    dend_4 { pt3dadd( 28.9761, -283.887, -56.8281, 0.1 ) }
    dend_4 { pt3dadd( 29.0307, -284.21, -56.9057, 0.1 ) }
    dend_4 { pt3dadd( 29.098, -284.661, -57.0272, 0.1 ) }
    dend_4 { pt3dadd( 29.1594, -285.115, -57.1221, 0.1 ) }
    dend_4 { pt3dadd( 29.2871, -286.095, -57.2698, 0.1 ) }
    dend_4 { pt3dadd( 29.3406, -286.567, -57.312, 0.14 ) }
    dend_4 { pt3dadd( 29.3918, -287.038, -57.3282, 0.1 ) }
    dend_4 { pt3dadd( 29.4452, -287.503, -57.3219, 0.1 ) }
    dend_4 { pt3dadd( 29.5417, -288.497, -57.2546, 0.1 ) }
    dend_4 { pt3dadd( 29.585, -288.968, -57.1981, 0.1 ) }
    dend_4 { pt3dadd( 29.6295, -289.484, -57.1094, 0.1 ) }
    dend_4 { pt3dadd( 29.6569, -289.954, -57.0388, 0.1 ) }
    dend_4 { pt3dadd( 29.6708, -290.485, -56.9782, 0.1 ) }
    dend_4 { pt3dadd( 29.6759, -291.008, -56.9463, 0.14 ) }
    dend_4 { pt3dadd( 29.6786, -291.245, -56.949, 0.1 ) }
    dend_4 { pt3dadd( 29.6846, -291.778, -56.9552, 0.1 ) }
    dend_4 { pt3dadd( 29.6828, -292.252, -56.9587, 0.1 ) }
    dend_4 { pt3dadd( 29.6647, -292.777, -56.9585, 0.1 ) }
    dend_4 { pt3dadd( 29.6384, -293.249, -56.9883, 0.1 ) }
    dend_4 { pt3dadd( 29.6091, -293.724, -57.0231, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_4 { pt3dadd( 29.5685, -294.247, -57.0662, 0.28 ) }
    dend_4 { pt3dadd( 29.5041, -294.914, -57.1331, 0.14 ) }
    dend_4 { pt3dadd( 29.4586, -295.238, -57.1717, 0.1 ) }
    dend_4 { pt3dadd( 29.2884, -296.18, -57.3181, 0.1 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 4/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 28.6838, -270.749, -54.4526, 0.1 ) }
    dend_3 { pt3dadd( 28.1022, -271.138, -54.4552, 0.1 ) }
    dend_3 { pt3dadd( 27.6, -271.513, -54.3575, 0.1 ) }
    dend_3 { pt3dadd( 27.0467, -271.922, -54.2092, 0.1 ) }
    dend_3 { pt3dadd( 26.4902, -272.337, -54.0501, 0.1 ) }
    dend_3 { pt3dadd( 26.156, -272.591, -53.9188, 0.1 ) }
    dend_3 { pt3dadd( 25.621, -272.997, -53.6846, 0.1 ) }
    dend_3 { pt3dadd( 24.6559, -273.782, -53.1967, 0.1 ) }
    dend_3 { pt3dadd( 24.2142, -274.152, -52.9527, 0.1 ) }
    dend_3 { pt3dadd( 23.7121, -274.572, -52.6706, 0.1 ) }
    dend_3 { pt3dadd( 22.7854, -275.385, -52.1626, 0.1 ) }
    dend_3 { pt3dadd( 22.5656, -275.596, -52.0667, 0.1 ) }
    dend_3 { pt3dadd( 22.0829, -276.08, -51.8816, 0.1 ) }
    dend_3 { pt3dadd( 21.7785, -276.411, -51.8135, 0.1 ) }
    dend_3 { pt3dadd( 21.3303, -276.961, -51.74, 0.1 ) }
    dend_3 { pt3dadd( 20.9054, -277.546, -51.7524, 0.1 ) }
    dend_3 { pt3dadd( 20.2312, -278.634, -52.0727, 0.1 ) }
    // Section: dend_75, id: dend_75, parent: dend_63 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -6.05372, 73.0886, -4.8622, 0.28 ) }
    dend_75 { pt3dadd( -6.85696, 73.6622, -5.03414, 0.28 ) }
    dend_75 { pt3dadd( -7.22668, 73.9667, -5.12954, 0.14 ) }
    dend_75 { pt3dadd( -7.45626, 74.1691, -5.19611, 0.28 ) }
    dend_75 { pt3dadd( -7.89476, 74.5857, -5.33406, 0.42 ) }
    dend_75 { pt3dadd( -8.10903, 74.8038, -5.40561, 0.42 ) }
    dend_75 { pt3dadd( -8.43767, 75.1596, -5.52023, 0.28 ) }
    dend_75 { pt3dadd( -8.72541, 75.5388, -5.65045, 0.14 ) }
    dend_75 { pt3dadd( -8.89905, 75.7919, -5.72702, 0.1 ) }
    dend_75 { pt3dadd( -9.15445, 76.2027, -5.83647, 0.1 ) }
    dend_75 { pt3dadd( -9.39707, 76.631, -5.93728, 0.14 ) }
    dend_75 { pt3dadd( -9.62858, 77.0612, -6.0317, 0.28 ) }
    dend_75 { pt3dadd( -9.84215, 77.447, -6.11972, 0.14 ) }
    dend_75 { pt3dadd( -9.99398, 77.7105, -6.18317, 0.1 ) }
    dend_75 { pt3dadd( -10.2269, 78.0802, -6.28338, 0.14 ) }
    dend_75 { pt3dadd( -10.5037, 78.4709, -6.4065, 0.28 ) }
    dend_75 { pt3dadd( -10.7813, 78.8445, -6.56889, 0.42 ) }
    dend_75 { pt3dadd( -11.0808, 79.2048, -6.73948, 0.56 ) }
    dend_75 { pt3dadd( -11.2744, 79.4181, -6.84554, 0.42 ) }
    dend_75 { pt3dadd( -11.5919, 79.7619, -7.01075, 0.28 ) }
    dend_75 { pt3dadd( -11.7976, 79.9817, -7.11218, 0.28 ) }
    dend_75 { pt3dadd( -12.2968, 80.549, -7.34094, 0.42 ) }
    dend_75 { pt3dadd( -12.8589, 81.2552, -7.57627, 0.1 ) }
    dend_75 { pt3dadd( -13.1368, 81.6513, -7.68022, 0.1 ) }
    dend_75 { pt3dadd( -13.399, 82.0702, -7.76684, 0.1 ) }
    dend_75 { pt3dadd( -13.6428, 82.4983, -7.83718, 0.1 ) }
    dend_75 { pt3dadd( -13.8649, 82.934, -7.93145, 0.14 ) }
    dend_75 { pt3dadd( -13.9607, 83.1312, -7.98276, 0.28 ) }
    dend_75 { pt3dadd( -14.1494, 83.56, -8.14886, 0.42 ) }
    dend_75 { pt3dadd( -14.3201, 83.9394, -8.31698, 0.56 ) }
    dend_75 { pt3dadd( -14.5088, 84.3502, -8.51995, 0.7 ) }
    dend_75 { pt3dadd( -14.8758, 85.1122, -8.92714, 0.56 ) }
    dend_75 { pt3dadd( -15.0029, 85.3584, -9.06402, 0.42 ) }
    dend_75 { pt3dadd( -15.2823, 85.8573, -9.34059, 0.42 ) }
    dend_75 { pt3dadd( -15.4229, 86.1016, -9.46702, 0.56 ) }
    dend_75 { pt3dadd( -15.4229, 86.1016, -9.46702, 0.7 ) }
    dend_75 { pt3dadd( -15.6695, 86.5115, -9.61476, 0.56 ) }
    dend_75 { pt3dadd( -15.8944, 86.933, -9.75042, 0.42 ) }
    dend_75 { pt3dadd( -16.0874, 87.3669, -9.8993, 0.28 ) }
    dend_75 { pt3dadd( -16.2373, 87.7666, -10.0432, 0.14 ) }
    dend_75 { pt3dadd( -16.3919, 88.2101, -10.21, 0.1 ) }
    dend_75 { pt3dadd( -16.5373, 88.6562, -10.3787, 0.1 ) }
    dend_75 { pt3dadd( -16.743, 89.474, -10.7424, 0.14 ) }
    dend_75 { pt3dadd( -16.743, 89.474, -10.7424, 0.28 ) }
    dend_75 { pt3dadd( -16.8774, 89.9131, -10.935, 0.56 ) }
    dend_75 { pt3dadd( -17.0703, 90.3446, -11.0897, 0.42 ) }
    dend_75 { pt3dadd( -17.296, 90.7205, -11.1855, 0.56 ) }
    dend_75 { pt3dadd( -17.7982, 91.3677, -11.2825, 0.7 ) }
    dend_75 { pt3dadd( -18.4958, 92.0951, -11.3354, 0.14 ) }
    dend_75 { pt3dadd( -18.7232, 92.3114, -11.3516, 0.1 ) }
    dend_75 { pt3dadd( -19.4854, 92.9618, -11.3816, 0.1 ) }
    dend_75 { pt3dadd( -19.7278, 93.1484, -11.3904, 0.14 ) }
    dend_75 { pt3dadd( -19.9828, 93.3353, -11.4034, 0.28 ) }
    dend_75 { pt3dadd( -20.4744, 93.7096, -11.4368, 0.42 ) }
    dend_75 { pt3dadd( -20.7054, 93.9151, -11.4884, 0.56 ) }
    dend_75 { pt3dadd( -20.9206, 94.1338, -11.5556, 0.42 ) }
    dend_75 { pt3dadd( -21.3037, 94.6016, -11.7321, 0.7 ) }
    dend_75 { pt3dadd( -21.5684, 94.9891, -11.9031, 0.56 ) }
    dend_75 { pt3dadd( -21.8024, 95.3797, -12.0949, 0.42 ) }
    dend_75 { pt3dadd( -21.8024, 95.3797, -12.0949, 0.28 ) }
    dend_75 { pt3dadd( -21.9877, 95.7729, -12.3402, 0.1 ) }
    dend_75 { pt3dadd( -22.1843, 96.1539, -12.5841, 0.1 ) }
    dend_75 { pt3dadd( -22.6151, 96.8586, -13.0155, 0.1 ) }
    dend_75 { pt3dadd( -22.806, 97.0813, -13.1279, 0.1 ) }
    dend_75 { pt3dadd( -23.1677, 97.3897, -13.2444, 0.14 ) }
    dend_75 { pt3dadd( -23.8575, 97.864, -13.3466, 0.28 ) }
    dend_75 { pt3dadd( -24.6768, 98.2812, -13.2598, 0.84 ) }
    dend_75 { pt3dadd( -25.4856, 98.6176, -12.9888, 0.7 ) }
    dend_75 { pt3dadd( -26.2672, 98.9413, -12.6228, 0.84 ) }
    dend_75 { pt3dadd( -26.4444, 99.0199, -12.5195, 0.98 ) }
    dend_75 { pt3dadd( -26.6135, 99.0969, -12.4023, 1.12 ) }
    dend_75 { pt3dadd( -27.2917, 99.4238, -11.8748, 0.56 ) }
    dend_75 { pt3dadd( -27.9523, 99.8052, -11.358, 0.42 ) }
    dend_75 { pt3dadd( -28.2623, 100.016, -11.125, 0.28 ) }
    dend_75 { pt3dadd( -28.9106, 100.503, -10.6788, 0.28 ) }
    dend_75 { pt3dadd( -29.5117, 100.979, -10.32, 0.42 ) }
    dend_75 { pt3dadd( -29.5117, 100.979, -10.32, 0.56 ) }
    dend_75 { pt3dadd( -29.9555, 101.405, -10.2022, 0.7 ) }
    dend_75 { pt3dadd( -30.2855, 101.772, -10.1805, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_75 { pt3dadd( -30.4796, 102.022, -10.1963, 0.42 ) }
    dend_75 { pt3dadd( -30.7345, 102.442, -10.2685, 0.28 ) }
    dend_75 { pt3dadd( -30.9692, 102.885, -10.3235, 0.14 ) }
    dend_75 { pt3dadd( -31.1694, 103.287, -10.3403, 0.1 ) }
    dend_75 { pt3dadd( -31.3861, 103.735, -10.2882, 0.1 ) }
    dend_75 { pt3dadd( -31.5761, 104.135, -10.1942, 0.1 ) }
    dend_75 { pt3dadd( -31.7611, 104.525, -10.0652, 0.1 ) }
    dend_75 { pt3dadd( -32.1412, 105.291, -9.72569, 0.14 ) }
    dend_75 { pt3dadd( -32.2344, 105.471, -9.62673, 0.28 ) }
    dend_75 { pt3dadd( -32.6459, 106.132, -9.15707, 0.42 ) }
    dend_75 { pt3dadd( -32.8532, 106.437, -8.90782, 0.56 ) }
    dend_75 { pt3dadd( -32.9678, 106.576, -8.77987, 0.56 ) }
    dend_75 { pt3dadd( -33.2119, 106.849, -8.52752, 0.7 ) }
    dend_75 { pt3dadd( -33.4712, 107.12, -8.28757, 0.98 ) }
    dend_75 { pt3dadd( -34.0352, 107.691, -7.81715, 0.84 ) }
    dend_75 { pt3dadd( -34.3047, 107.979, -7.61497, 0.7 ) }
    dend_75 { pt3dadd( -34.8904, 108.579, -7.203, 0.56 ) }
    dend_75 { pt3dadd( -35.0322, 108.725, -7.11175, 0.42 ) }
    dend_75 { pt3dadd( -35.6375, 109.342, -6.76314, 0.1 ) }
    dend_75 { pt3dadd( -35.9772, 109.67, -6.60416, 0.1 ) }
    dend_75 { pt3dadd( -36.2834, 109.963, -6.49586, 0.14 ) }
    dend_75 { pt3dadd( -37.008, 110.651, -6.36177, 0.1 ) }
    dend_75 { pt3dadd( -37.226, 110.877, -6.38224, 0.1 ) }
    dend_75 { pt3dadd( -37.4376, 111.096, -6.42587, 0.1 ) }
    dend_75 { pt3dadd( -37.8372, 111.536, -6.61941, 0.14 ) }
    dend_75 { pt3dadd( -37.8372, 111.536, -6.61941, 0.28 ) }
    dend_75 { pt3dadd( -38.3301, 112.147, -7.24252, 0.84 ) }
    dend_75 { pt3dadd( -38.5283, 112.564, -7.87272, 0.84 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 28/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -6.05372, 73.0886, -4.8622, 0.84 ) }
    dend_64 { pt3dadd( -5.97163, 73.6756, -4.8709, 0.84 ) }
    dend_64 { pt3dadd( -5.89184, 74.3249, -4.87867, 0.98 ) }
    dend_64 { pt3dadd( -5.80533, 74.9819, -4.88751, 0.84 ) }
    dend_64 { pt3dadd( -5.73418, 75.5572, -4.89447, 0.84 ) }
    dend_64 { pt3dadd( -5.66931, 76.1463, -4.90025, 0.84 ) }
    dend_64 { pt3dadd( -5.60648, 76.8077, -4.90503, 0.7 ) }
    dend_64 { pt3dadd( -5.5634, 77.3987, -4.9071, 0.56 ) }
    dend_64 { pt3dadd( -5.53488, 78.0518, -4.90616, 0.56 ) }
    dend_64 { pt3dadd( -5.51706, 78.6438, -4.90394, 0.56 ) }
    dend_64 { pt3dadd( -5.49917, 79.2328, -4.90176, 0.7 ) }
    dend_64 { pt3dadd( -5.48738, 79.8218, -4.89855, 0.84 ) }
    dend_64 { pt3dadd( -5.49722, 80.4134, -4.89165, 0.84 ) }
    dend_64 { pt3dadd( -5.49722, 80.4134, -4.89165, 0.98 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 42/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -26.8373, 61.4151, -39.3297, 1.12 ) }
    dend_58 { pt3dadd( -26.7229, 61.8683, -39.261, 1.12 ) }
    dend_58 { pt3dadd( -26.5772, 62.3816, -39.1802, 0.98 ) }
    dend_58 { pt3dadd( -26.4079, 62.8791, -39.0964, 0.84 ) }
    dend_58 { pt3dadd( -26.2899, 63.1937, -39.0413, 0.7 ) }
    dend_58 { pt3dadd( -26.0841, 63.6822, -38.9514, 0.56 ) }
    dend_58 { pt3dadd( -25.8613, 64.1554, -38.8598, 0.7 ) }
    dend_58 { pt3dadd( -25.603, 64.6159, -38.7627, 0.1 ) }
    dend_58 { pt3dadd( -25.3223, 65.0522, -38.6637, 0.14 ) }
    dend_58 { pt3dadd( -25.1247, 65.3217, -38.622, 0.1 ) }
    dend_58 { pt3dadd( -24.8061, 65.7389, -38.5851, 0.1 ) }
    dend_58 { pt3dadd( -24.4809, 66.1518, -38.5711, 0.1 ) }
    dend_58 { pt3dadd( -24.2741, 66.422, -38.5724, 0.1 ) }
    dend_58 { pt3dadd( -23.9573, 66.8418, -38.5844, 0.1 ) }
    dend_58 { pt3dadd( -23.3826, 67.6591, -38.6113, 0.14 ) }
    dend_58 { pt3dadd( -23.0918, 68.0959, -38.6224, 0.42 ) }
    dend_58 { pt3dadd( -22.9137, 68.3829, -38.6259, 0.28 ) }
    dend_58 { pt3dadd( -22.5749, 68.9644, -38.6136, 0.14 ) }
    dend_58 { pt3dadd( -22.41, 69.2595, -38.5941, 0.1 ) }
    dend_58 { pt3dadd( -22.0981, 69.8484, -38.5213, 0.1 ) }
    dend_58 { pt3dadd( -21.9404, 70.1469, -38.4602, 0.1 ) }
    dend_58 { pt3dadd( -21.7876, 70.435, -38.4011, 0.1 ) }
    dend_58 { pt3dadd( -21.4953, 71.0276, -38.2838, 0.1 ) }
    dend_58 { pt3dadd( -21.3572, 71.3368, -38.2557, 0.14 ) }
    dend_58 { pt3dadd( -21.2319, 71.6576, -38.2564, 0.28 ) }
    dend_58 { pt3dadd( -21.1584, 71.8837, -38.2746, 0.42 ) }
    dend_58 { pt3dadd( -21.0203, 72.3314, -38.3697, 0.1 ) }
    dend_58 { pt3dadd( -20.8784, 72.8207, -38.5082, 0.14 ) }
    dend_58 { pt3dadd( -20.6155, 73.7458, -38.8047, 0.1 ) }
    dend_58 { pt3dadd( -20.478, 74.2321, -38.9561, 0.1 ) }
    dend_58 { pt3dadd( -20.4106, 74.4513, -39.0179, 0.1 ) }
    dend_58 { pt3dadd( -20.0758, 75.4384, -39.3108, 0.14 ) }
    dend_58 { pt3dadd( -19.89, 75.9184, -39.4565, 0.1 ) }
    dend_58 { pt3dadd( -19.7611, 76.2248, -39.5392, 0.1 ) }
    dend_58 { pt3dadd( -19.5493, 76.6978, -39.6346, 0.1 ) }
    dend_58 { pt3dadd( -19.3156, 77.172, -39.7171, 0.1 ) }
    dend_58 { pt3dadd( -18.8637, 78.0587, -39.8226, 0.1 ) }
    dend_58 { pt3dadd( -18.7052, 78.3577, -39.8339, 0.14 ) }
    dend_58 { pt3dadd( -18.3774, 78.9411, -39.8439, 0.28 ) }
    dend_58 { pt3dadd( -18.2067, 79.2379, -39.8372, 0.42 ) }
    dend_58 { pt3dadd( -17.9386, 79.6929, -39.8046, 0.56 ) }
    dend_58 { pt3dadd( -17.6718, 80.1526, -39.7433, 0.42 ) }
    dend_58 { pt3dadd( -17.4087, 80.6013, -39.6464, 0.28 ) }
    dend_58 { pt3dadd( -17.2453, 80.8914, -39.5851, 0.14 ) }
    dend_58 { pt3dadd( -16.9297, 81.4748, -39.4643, 0.1 ) }
    dend_58 { pt3dadd( -16.7794, 81.7682, -39.428, 0.1 ) }
    dend_58 { pt3dadd( -16.6313, 82.0731, -39.4109, 0.1 ) }
    dend_58 { pt3dadd( -16.3434, 82.6817, -39.4569, 0.1 ) }
    dend_58 { pt3dadd( -16.127, 83.1644, -39.5412, 0.1 ) }
    dend_58 { pt3dadd( -15.9952, 83.46, -39.6101, 0.1 ) }
    dend_58 { pt3dadd( -15.5988, 84.3494, -39.8549, 0.1 ) }
    dend_58 { pt3dadd( -15.4632, 84.6481, -39.9364, 0.1 ) }
    dend_58 { pt3dadd( -15.0541, 85.5293, -40.1671, 0.1 ) }
    dend_58 { pt3dadd( -14.913, 85.8333, -40.2372, 0.1 ) }
    dend_58 { pt3dadd( -14.6223, 86.4286, -40.3336, 0.1 ) }
    dend_58 { pt3dadd( -14.4748, 86.7333, -40.353, 0.1 ) }
    dend_58 { pt3dadd( -14.1761, 87.3384, -40.3606, 0.1 ) }
    dend_58 { pt3dadd( -14.0213, 87.6399, -40.3643, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_58 { pt3dadd( -13.7838, 88.1111, -40.3583, 0.1 ) }
    dend_58 { pt3dadd( -13.5546, 88.5959, -40.3736, 0.1 ) }
    dend_58 { pt3dadd( -13.3433, 89.0758, -40.4451, 0.1 ) }
    dend_58 { pt3dadd( -12.9975, 89.9025, -40.6321, 0.1 ) }
    dend_58 { pt3dadd( -12.9146, 90.111, -40.707, 0.1 ) }
    dend_58 { pt3dadd( -12.7592, 90.5246, -40.8804, 0.1 ) }
    dend_58 { pt3dadd( -12.5835, 90.9849, -41.0836, 0.1 ) }
    dend_58 { pt3dadd( -12.2679, 91.8759, -41.4077, 0.1 ) }
    dend_58 { pt3dadd( -12.1589, 92.1863, -41.4894, 0.1 ) }
    dend_58 { pt3dadd( -11.8491, 93.1466, -41.548, 0.1 ) }
    dend_58 { pt3dadd( -11.6893, 93.653, -41.5087, 0.1 ) }
    dend_58 { pt3dadd( -11.5191, 94.1442, -41.3923, 0.1 ) }
    dend_58 { pt3dadd( -11.2082, 95.0566, -41.0915, 0.1 ) }
    dend_58 { pt3dadd( -11.1101, 95.3543, -40.9603, 0.1 ) }
    dend_58 { pt3dadd( -10.8094, 96.223, -40.5577, 0.1 ) }
    dend_58 { pt3dadd( -10.6944, 96.5061, -40.4117, 0.14 ) }
    dend_58 { pt3dadd( -10.5924, 96.7064, -40.3295, 0.14 ) }
    dend_58 { pt3dadd( -10.0893, 97.5077, -40.1234, 0.28 ) }
    dend_58 { pt3dadd( -9.87744, 97.7668, -40.0947, 0.28 ) }
    dend_58 { pt3dadd( -9.51562, 98.1436, -40.0635, 0.14 ) }
    dend_58 { pt3dadd( -9.17152, 98.4662, -40.0472, 0.1 ) }
    dend_58 { pt3dadd( -8.7809, 98.8085, -40.0037, 0.1 ) }
    dend_58 { pt3dadd( -8.37975, 99.1314, -39.9297, 0.1 ) }
    dend_58 { pt3dadd( -8.01061, 99.404, -39.8305, 0.1 ) }
    dend_58 { pt3dadd( -7.59564, 99.695, -39.7205, 0.1 ) }
    dend_58 { pt3dadd( -7.3298, 99.8802, -39.6502, 0.14 ) }
    dend_58 { pt3dadd( -7.14075, 100.01, -39.6005, 0.28 ) }
    dend_58 { pt3dadd( -6.75471, 100.264, -39.5405, 0.7 ) }
    dend_58 { pt3dadd( -6.47496, 100.438, -39.5201, 0.56 ) }
    dend_58 { pt3dadd( -6.08058, 100.686, -39.5122, 0.42 ) }
    dend_58 { pt3dadd( -5.63635, 100.949, -39.5159, 0.28 ) }
    dend_58 { pt3dadd( -5.23088, 101.18, -39.5247, 0.14 ) }
    dend_58 { pt3dadd( -4.38253, 101.663, -39.5544, 0.1 ) }
    dend_58 { pt3dadd( -3.98286, 101.904, -39.5719, 0.1 ) }
    dend_58 { pt3dadd( -3.54643, 102.182, -39.586, 0.1 ) }
    dend_58 { pt3dadd( -3.167, 102.454, -39.6242, 0.1 ) }
    dend_58 { pt3dadd( -2.98615, 102.598, -39.6492, 0.1 ) }
    dend_58 { pt3dadd( -2.98615, 102.598, -39.6492, 0.1 ) }
    dend_58 { pt3dadd( -2.63898, 102.978, -39.7663, 0.1 ) }
    dend_58 { pt3dadd( -2.33595, 103.38, -39.9116, 0.1 ) }
    dend_58 { pt3dadd( -1.87042, 104.112, -40.1782, 0.1 ) }
    dend_58 { pt3dadd( -1.62165, 104.558, -40.3295, 0.1 ) }
    dend_58 { pt3dadd( -1.21593, 105.325, -40.6039, 0.14 ) }
    dend_58 { pt3dadd( -0.98583, 105.769, -40.7612, 0.1 ) }
    dend_58 { pt3dadd( -0.760885, 106.218, -40.9418, 0.1 ) }
    dend_58 { pt3dadd( -0.552121, 106.665, -41.1206, 0.14 ) }
    dend_58 { pt3dadd( -0.416493, 106.957, -41.222, 0.28 ) }
    dend_58 { pt3dadd( 0.0237179, 107.892, -41.5379, 0.14 ) }
    dend_58 { pt3dadd( 0.169813, 108.185, -41.6196, 0.1 ) }
    dend_58 { pt3dadd( 0.642232, 109.032, -41.846, 0.1 ) }
    dend_58 { pt3dadd( 0.815002, 109.318, -41.9132, 0.1 ) }
    dend_58 { pt3dadd( 1.0881, 109.763, -41.9879, 0.1 ) }
    dend_58 { pt3dadd( 1.26203, 110.052, -42.0086, 0.1 ) }
    dend_58 { pt3dadd( 1.59917, 110.629, -41.9688, 0.1 ) }
    dend_58 { pt3dadd( 1.86094, 111.099, -41.9068, 0.1 ) }
    dend_58 { pt3dadd( 2.0141, 111.387, -41.8477, 0.1 ) }
    dend_58 { pt3dadd( 2.25073, 111.865, -41.7896, 0.1 ) }
    dend_58 { pt3dadd( 2.38869, 112.175, -41.7734, 0.1 ) }
    dend_58 { pt3dadd( 2.65046, 112.799, -41.7716, 0.1 ) }
    dend_58 { pt3dadd( 2.84003, 113.293, -41.79, 0.1 ) }
    dend_58 { pt3dadd( 2.95161, 113.614, -41.8084, 0.1 ) }
    dend_58 { pt3dadd( 3.2841, 114.566, -41.8725, 0.1 ) }
    dend_58 { pt3dadd( 3.45904, 115.066, -41.8783, 0.1 ) }
    dend_58 { pt3dadd( 3.57583, 115.39, -41.8579, 0.1 ) }
    dend_58 { pt3dadd( 3.77031, 115.876, -41.7787, 0.1 ) }
    dend_58 { pt3dadd( 3.99519, 116.346, -41.644, 0.1 ) }
    dend_58 { pt3dadd( 4.0988, 116.537, -41.5658, 0.14 ) }
    dend_58 { pt3dadd( 4.54044, 117.235, -41.1864, 0.28 ) }
    dend_58 { pt3dadd( 4.8297, 117.614, -40.9676, 0.14 ) }
    dend_58 { pt3dadd( 5.12067, 117.982, -40.7216, 0.1 ) }
    dend_58 { pt3dadd( 5.38556, 118.329, -40.4335, 0.1 ) }
    dend_58 { pt3dadd( 5.52792, 118.538, -40.2155, 0.1 ) }
    dend_58 { pt3dadd( 5.71113, 118.868, -39.854, 0.1 ) }
    dend_58 { pt3dadd( 5.83346, 119.161, -39.5044, 0.14 ) }
    dend_58 { pt3dadd( 6.00869, 119.734, -38.7594, 0.1 ) }
    dend_58 { pt3dadd( 6.15458, 120.349, -37.9968, 0.1 ) }
    dend_58 { pt3dadd( 6.26666, 120.937, -37.3191, 0.1 ) }
    dend_58 { pt3dadd( 6.32355, 121.292, -36.9386, 0.1 ) }
    dend_58 { pt3dadd( 6.37459, 121.933, -36.1825, 0.1 ) }
    dend_58 { pt3dadd( 6.48523, 122.154, -36.3998, 0.14 ) }
    dend_58 { pt3dadd( 7.06048, 123.337, -37.4547, 0.28 ) }
    dend_58 { pt3dadd( 7.36857, 123.946, -38.0382, 0.14 ) }
    dend_58 { pt3dadd( 7.6861, 124.552, -38.6191, 0.28 ) }
    dend_58 { pt3dadd( 7.77308, 124.707, -38.7721, 0.42 ) }
    dend_58 { pt3dadd( 7.96993, 125.059, -39.0953, 0.14 ) }
    dend_58 { pt3dadd( 8.17725, 125.471, -39.3576, 0.1 ) }
    dend_58 { pt3dadd( 8.30416, 125.764, -39.4441, 0.1 ) }
    dend_58 { pt3dadd( 8.53951, 126.397, -39.5441, 0.1 ) }
    dend_58 { pt3dadd( 8.82247, 127.267, -39.6176, 0.1 ) }
    dend_58 { pt3dadd( 8.97835, 127.777, -39.6874, 0.1 ) }
    dend_58 { pt3dadd( 9.12522, 128.28, -39.7751, 0.1 ) }
    dend_58 { pt3dadd( 9.18683, 128.509, -39.8171, 0.1 ) }
    dend_58 { pt3dadd( 9.31921, 129.022, -39.9083, 0.1 ) }
    dend_58 { pt3dadd( 9.43605, 129.535, -39.9869, 0.1 ) }
    dend_58 { pt3dadd( 9.64287, 130.522, -40.0794, 0.1 ) }
    dend_58 { pt3dadd( 9.74455, 131.043, -40.1282, 0.1 ) }
    dend_58 { pt3dadd( 9.84078, 131.573, -40.1691, 0.1 ) }
    dend_58 { pt3dadd( 9.88148, 131.811, -40.1795, 0.1 ) }
    dend_58 { pt3dadd( 9.94527, 132.288, -40.182, 0.1 ) }
    dend_58 { pt3dadd( 9.99823, 132.818, -40.1557, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_58 { pt3dadd( 10.033, 133.295, -40.0999, 0.1 ) }
    dend_58 { pt3dadd( 10.0623, 133.824, -40.0399, 0.1 ) }
    dend_58 { pt3dadd( 10.0791, 134.364, -39.9812, 0.1 ) }
    dend_58 { pt3dadd( 10.0807, 134.846, -39.9314, 0.1 ) }
    dend_58 { pt3dadd( 10.0819, 135.378, -39.8765, 0.1 ) }
    dend_58 { pt3dadd( 10.0814, 135.917, -39.8212, 0.1 ) }
    dend_58 { pt3dadd( 10.0851, 136.156, -39.796, 0.1 ) }
    dend_58 { pt3dadd( 10.104, 136.639, -39.7775, 0.14 ) }
    dend_58 { pt3dadd( 10.13, 137.12, -39.7868, 0.1 ) }
    dend_58 { pt3dadd( 10.1727, 137.65, -39.8183, 0.1 ) }
    dend_58 { pt3dadd( 10.2151, 138.188, -39.8668, 0.1 ) }
    dend_58 { pt3dadd( 10.2442, 138.519, -39.9005, 0.1 ) }
    dend_58 { pt3dadd( 10.3337, 139.525, -40.002, 0.1 ) }
    dend_58 { pt3dadd( 10.3786, 140.001, -40.0458, 0.1 ) }
    dend_58 { pt3dadd( 10.4267, 140.53, -40.0842, 0.1 ) }
    dend_58 { pt3dadd( 10.4588, 141.01, -40.1086, 0.1 ) }
    dend_58 { pt3dadd( 10.4923, 141.548, -40.15, 0.1 ) }
    dend_58 { pt3dadd( 10.5141, 142.019, -40.1874, 0.1 ) }
    dend_58 { pt3dadd( 10.5297, 142.561, -40.2189, 0.1 ) }
    dend_58 { pt3dadd( 10.541, 143.09, -40.2678, 0.1 ) }
    dend_58 { pt3dadd( 10.5411, 143.332, -40.2799, 0.1 ) }
    dend_58 { pt3dadd( 10.5374, 144.349, -40.2785, 0.1 ) }
    dend_58 { pt3dadd( 10.5239, 144.833, -40.2543, 0.1 ) }
    dend_58 { pt3dadd( 10.5132, 145.312, -40.2069, 0.1 ) }
    dend_58 { pt3dadd( 10.4946, 145.783, -40.1348, 0.14 ) }
    dend_58 { pt3dadd( 10.4374, 146.776, -39.9237, 0.1 ) }
    dend_58 { pt3dadd( 10.4058, 147.306, -39.8203, 0.1 ) }
    dend_58 { pt3dadd( 10.3694, 147.77, -39.7308, 0.1 ) }
    dend_58 { pt3dadd( 10.3576, 148.112, -39.7301, 0.1 ) }
    dend_58 { pt3dadd( 10.3621, 148.588, -39.8101, 0.1 ) }
    dend_58 { pt3dadd( 10.39, 149.034, -39.9763, 0.1 ) }
    dend_58 { pt3dadd( 10.4621, 149.902, -40.4105, 0.1 ) }
    dend_58 { pt3dadd( 10.5032, 150.321, -40.6306, 0.1 ) }
    dend_58 { pt3dadd( 10.6069, 151.205, -41.0788, 0.1 ) }
    dend_58 { pt3dadd( 10.6632, 151.698, -41.2835, 0.1 ) }
    dend_58 { pt3dadd( 10.8022, 152.642, -41.5916, 0.1 ) }
    dend_58 { pt3dadd( 10.8385, 152.874, -41.6373, 0.1 ) }
    dend_58 { pt3dadd( 10.913, 153.409, -41.6065, 0.1 ) }
    dend_58 { pt3dadd( 10.9735, 153.923, -41.4763, 0.1 ) }
    dend_58 { pt3dadd( 11.0353, 154.853, -41.0804, 0.1 ) }
    dend_58 { pt3dadd( 11.0445, 155.138, -40.9111, 0.1 ) }
    dend_58 { pt3dadd( 11.0534, 155.522, -40.6291, 0.1 ) }
    dend_58 { pt3dadd( 11.0535, 156.316, -40.0173, 0.1 ) }
    dend_58 { pt3dadd( 11.0362, 156.732, -39.6944, 0.1 ) }
    dend_58 { pt3dadd( 11.0084, 157.132, -39.4315, 0.1 ) }
    dend_58 { pt3dadd( 10.9291, 157.968, -39.0506, 0.14 ) }
    dend_58 { pt3dadd( 10.9031, 158.193, -38.9999, 0.28 ) }
    dend_58 { pt3dadd( 10.8364, 158.729, -39.0207, 0.1 ) }
    dend_58 { pt3dadd( 10.7924, 159.151, -39.217, 0.1 ) }
    dend_58 { pt3dadd( 10.7117, 159.962, -39.7396, 0.1 ) }
    dend_58 { pt3dadd( 10.6838, 160.342, -40.0175, 0.1 ) }
    dend_58 { pt3dadd( 10.6338, 161.105, -40.604, 0.1 ) }
    dend_58 { pt3dadd( 10.6156, 161.484, -40.8836, 0.14 ) }
    dend_58 { pt3dadd( 10.5906, 162.92, -41.8837, 0.28 ) }
    dend_58 { pt3dadd( 10.59, 163.316, -42.1266, 0.28 ) }
    dend_58 { pt3dadd( 10.5918, 163.619, -42.2761, 0.14 ) }
    dend_58 { pt3dadd( 10.5959, 164.064, -42.4499, 0.1 ) }
    dend_58 { pt3dadd( 10.5998, 164.584, -42.5565, 0.1 ) }
    dend_58 { pt3dadd( 10.6079, 165.064, -42.5861, 0.1 ) }
    dend_58 { pt3dadd( 10.6099, 165.603, -42.5304, 0.1 ) }
    dend_58 { pt3dadd( 10.6099, 165.603, -42.5304, 0.1 ) }
    dend_58 { pt3dadd( 10.6101, 166.083, -42.4811, 0.1 ) }
    dend_58 { pt3dadd( 10.621, 166.613, -42.4245, 0.1 ) }
    dend_58 { pt3dadd( 10.6304, 167.153, -42.3672, 0.1 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 64/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -26.8373, 61.4151, -39.3297, 0.7 ) }
    dend_57 { pt3dadd( -27.5661, 61.9224, -39.5577, 0.7 ) }
    dend_57 { pt3dadd( -28.1278, 62.3572, -39.7434, 0.56 ) }
    dend_57 { pt3dadd( -28.4744, 62.6421, -39.8471, 0.42 ) }
    dend_57 { pt3dadd( -29.024, 63.1076, -39.9961, 0.28 ) }
    dend_57 { pt3dadd( -30.0368, 64.0084, -40.2424, 0.14 ) }
    dend_57 { pt3dadd( -30.3724, 64.3238, -40.3154, 0.1 ) }
    dend_57 { pt3dadd( -30.8855, 64.8446, -40.4238, 0.1 ) }
    dend_57 { pt3dadd( -31.5064, 65.5361, -40.536, 0.14 ) }
    dend_57 { pt3dadd( -31.7994, 65.8869, -40.5724, 0.1 ) }
    dend_57 { pt3dadd( -32.2602, 66.4644, -40.6421, 0.1 ) }
    dend_57 { pt3dadd( -32.7029, 67.0479, -40.7031, 0.1 ) }
    dend_57 { pt3dadd( -32.9781, 67.4316, -40.7648, 0.1 ) }
    dend_57 { pt3dadd( -33.3871, 68.032, -40.8867, 0.1 ) }
    dend_57 { pt3dadd( -33.7759, 68.6435, -41.0245, 0.1 ) }
    dend_57 { pt3dadd( -34.4401, 69.7039, -41.2695, 0.1 ) }
    dend_57 { pt3dadd( -34.7889, 70.242, -41.438, 0.14 ) }
    dend_57 { pt3dadd( -35.1765, 70.8361, -41.6641, 0.28 ) }
    dend_57 { pt3dadd( -35.5547, 71.4187, -41.9083, 0.14 ) }
    dend_57 { pt3dadd( -35.9238, 72.0042, -42.16, 0.1 ) }
    dend_57 { pt3dadd( -36.1558, 72.3872, -42.3078, 0.14 ) }
    dend_57 { pt3dadd( -36.7531, 73.4762, -42.6176, 0.28 ) }
    dend_57 { pt3dadd( -36.9696, 73.8734, -42.7725, 0.42 ) }
    dend_57 { pt3dadd( -37.2692, 74.4926, -43.0446, 0.7 ) }
    dend_57 { pt3dadd( -37.5076, 75.0672, -43.2945, 0.56 ) }
    dend_57 { pt3dadd( -37.7507, 75.697, -43.6011, 0.42 ) }
    dend_57 { pt3dadd( -37.9544, 76.2746, -43.8755, 0.28 ) }
    dend_57 { pt3dadd( -38.3569, 77.5131, -44.4066, 0.14 ) }
    dend_57 { pt3dadd( -38.552, 78.0853, -44.6903, 0.1 ) }
    dend_57 { pt3dadd( -38.7393, 78.6493, -45.0009, 0.1 ) }
    dend_57 { pt3dadd( -39.1188, 79.8229, -45.6683, 0.1 ) }
    dend_57 { pt3dadd( -39.2978, 80.389, -45.9806, 0.1 ) }
    dend_57 { pt3dadd( -39.4779, 80.9623, -46.2726, 0.1 ) }
    dend_57 { pt3dadd( -39.8654, 82.21, -46.7955, 0.1 ) }
    dend_57 { pt3dadd( -40.0618, 82.8088, -47.0308, 0.1 ) }
    dend_57 { pt3dadd( -40.2709, 83.4139, -47.2279, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_57 { pt3dadd( -40.5074, 84.1144, -47.3746, 0.1 ) }
    dend_57 { pt3dadd( -40.6149, 84.4266, -47.4244, 0.1 ) }
    dend_57 { pt3dadd( -40.848, 85.1416, -47.4876, 0.1 ) }
    dend_57 { pt3dadd( -40.848, 85.1416, -47.4876, 0.1 ) }
    dend_57 { pt3dadd( -41.0745, 85.8438, -47.6004, 0.1 ) }
    dend_57 { pt3dadd( -41.2743, 86.4556, -47.7879, 0.1 ) }
    dend_57 { pt3dadd( -41.48, 87.0349, -48.0293, 0.1 ) }
    dend_57 { pt3dadd( -41.7059, 87.6017, -48.2987, 0.1 ) }
    dend_57 { pt3dadd( -42.2184, 88.7622, -48.8991, 0.14 ) }
    dend_57 { pt3dadd( -42.4834, 89.2828, -49.2135, 0.28 ) }
    dend_57 { pt3dadd( -42.9962, 90.1679, -49.8029, 0.42 ) }
    dend_57 { pt3dadd( -43.4381, 90.8135, -50.3096, 0.1 ) }
    dend_57 { pt3dadd( -43.8121, 91.3052, -50.7154, 0.1 ) }
    dend_57 { pt3dadd( -44.0585, 91.5892, -50.9734, 0.1 ) }
    dend_57 { pt3dadd( -44.8212, 92.407, -51.7844, 0.1 ) }
    dend_57 { pt3dadd( -45.2294, 92.8184, -52.2236, 0.1 ) }
    dend_57 { pt3dadd( -45.9399, 93.5409, -52.9676, 0.1 ) }
    dend_57 { pt3dadd( -46.3444, 93.9576, -53.4058, 0.1 ) }
    dend_57 { pt3dadd( -47.1195, 94.7694, -54.2123, 0.14 ) }
    dend_57 { pt3dadd( -47.909, 95.6164, -54.96, 0.1 ) }
    dend_57 { pt3dadd( -48.1783, 95.9135, -55.1982, 0.1 ) }
    dend_57 { pt3dadd( -48.6042, 96.3916, -55.5488, 0.1 ) }
    dend_57 { pt3dadd( -49.0311, 96.8809, -55.8836, 0.1 ) }
    dend_57 { pt3dadd( -49.454, 97.365, -56.2632, 0.1 ) }
    dend_57 { pt3dadd( -49.7089, 97.6635, -56.4964, 0.14 ) }
    dend_57 { pt3dadd( -50.3898, 98.4017, -57.1806, 0.28 ) }
    dend_57 { pt3dadd( -50.9023, 98.9233, -57.7384, 0.28 ) }
    dend_57 { pt3dadd( -51.623, 99.5874, -58.5218, 0.14 ) }
    dend_57 { pt3dadd( -52.4346, 100.297, -59.3703, 0.1 ) }
    dend_57 { pt3dadd( -52.7272, 100.539, -59.6465, 0.1 ) }
    dend_57 { pt3dadd( -53.7055, 101.326, -60.4355, 0.1 ) }
    dend_57 { pt3dadd( -54.026, 101.581, -60.6535, 0.1 ) }
    dend_57 { pt3dadd( -54.5314, 101.997, -60.9642, 0.1 ) }
    dend_57 { pt3dadd( -55.058, 102.447, -61.2107, 0.14 ) }
    dend_57 { pt3dadd( -55.5787, 102.913, -61.4027, 0.1 ) }
    dend_57 { pt3dadd( -55.8991, 103.222, -61.541, 0.1 ) }
    dend_57 { pt3dadd( -56.7876, 104.159, -62.0438, 0.1 ) }
    dend_57 { pt3dadd( -57.2303, 104.652, -62.3695, 0.14 ) }
    dend_57 { pt3dadd( -57.4861, 104.958, -62.5928, 0.1 ) }
    dend_57 { pt3dadd( -57.8831, 105.457, -62.9673, 0.1 ) }
    dend_57 { pt3dadd( -58.5791, 106.433, -63.6623, 0.14 ) }
    dend_57 { pt3dadd( -59.259, 107.457, -64.3085, 0.28 ) }
    dend_57 { pt3dadd( -59.259, 107.457, -64.3085, 0.42 ) }
    dend_57 { pt3dadd( -59.5909, 108.049, -64.6164, 0.28 ) }
    dend_57 { pt3dadd( -59.8956, 108.656, -64.9082, 0.14 ) }
    dend_57 { pt3dadd( -60.1474, 109.228, -65.1399, 0.1 ) }
    dend_57 { pt3dadd( -60.4007, 109.909, -65.3351, 0.1 ) }
    dend_57 { pt3dadd( -60.5992, 110.534, -65.4789, 0.1 ) }
    dend_57 { pt3dadd( -60.9956, 111.86, -65.78, 0.1 ) }
    dend_57 { pt3dadd( -61.1657, 112.495, -65.9221, 0.1 ) }
    dend_57 { pt3dadd( -61.3228, 113.125, -66.0966, 0.1 ) }
    dend_57 { pt3dadd( -61.4739, 113.754, -66.2904, 0.1 ) }
    dend_57 { pt3dadd( -61.6209, 114.38, -66.4866, 0.1 ) }
    dend_57 { pt3dadd( -61.801, 115.085, -66.69, 0.1 ) }
    dend_57 { pt3dadd( -61.9672, 115.706, -66.8838, 0.1 ) }
    dend_57 { pt3dadd( -62.3532, 116.93, -67.347, 0.1 ) }
    dend_57 { pt3dadd( -62.4546, 117.226, -67.4702, 0.1 ) }
    dend_57 { pt3dadd( -62.6963, 117.859, -67.7899, 0.1 ) }
    dend_57 { pt3dadd( -62.9534, 118.477, -68.1267, 0.1 ) }
    dend_57 { pt3dadd( -63.4283, 119.585, -68.7451, 0.1 ) }
    dend_57 { pt3dadd( -63.7115, 120.206, -69.071, 0.1 ) }
    dend_57 { pt3dadd( -63.9714, 120.754, -69.316, 0.1 ) }
    dend_57 { pt3dadd( -64.5681, 121.924, -69.7977, 0.1 ) }
    dend_57 { pt3dadd( -64.9126, 122.555, -70.0297, 0.1 ) }
    dend_57 { pt3dadd( -65.0714, 122.825, -70.1064, 0.1 ) }
    dend_57 { pt3dadd( -65.4715, 123.447, -70.2095, 0.1 ) }
    dend_57 { pt3dadd( -65.8858, 124.052, -70.2776, 0.1 ) }
    dend_57 { pt3dadd( -66.4383, 124.807, -70.3737, 0.1 ) }
    dend_57 { pt3dadd( -66.715, 125.172, -70.4139, 0.1 ) }
    dend_57 { pt3dadd( -67.1687, 125.752, -70.5093, 0.1 ) }
    dend_57 { pt3dadd( -67.4522, 126.105, -70.6126, 0.1 ) }
    dend_57 { pt3dadd( -67.904, 126.641, -70.8263, 0.1 ) }
    dend_57 { pt3dadd( -68.7477, 127.636, -71.3024, 0.1 ) }
    dend_57 { pt3dadd( -69.0166, 127.959, -71.4827, 0.1 ) }
    dend_57 { pt3dadd( -69.4518, 128.474, -71.7865, 0.14 ) }
    dend_57 { pt3dadd( -70.2999, 129.408, -72.3504, 0.1 ) }
    dend_57 { pt3dadd( -70.7755, 129.901, -72.63, 0.1 ) }
    dend_57 { pt3dadd( -71.0048, 130.111, -72.7289, 0.14 ) }
    dend_57 { pt3dadd( -71.3608, 130.393, -72.8027, 0.28 ) }
    dend_57 { pt3dadd( -72.1036, 130.912, -72.9753, 0.7 ) }
    dend_57 { pt3dadd( -72.7207, 131.283, -73.1042, 0.56 ) }
    dend_57 { pt3dadd( -73.1196, 131.498, -73.1657, 0.42 ) }
    dend_57 { pt3dadd( -73.7632, 131.825, -73.2738, 0.28 ) }
    dend_57 { pt3dadd( -74.4034, 132.138, -73.3794, 0.14 ) }
    dend_57 { pt3dadd( -75.5155, 132.675, -73.5518, 0.14 ) }
    dend_57 { pt3dadd( -76.1721, 132.977, -73.6491, 0.1 ) }
    dend_57 { pt3dadd( -76.8154, 133.29, -73.7328, 0.1 ) }
    dend_57 { pt3dadd( -77.4652, 133.616, -73.7944, 0.1 ) }
    dend_57 { pt3dadd( -77.8632, 133.829, -73.8146, 0.1 ) }
    dend_57 { pt3dadd( -78.4942, 134.202, -73.8086, 0.14 ) }
    dend_57 { pt3dadd( -79.0951, 134.6, -73.8062, 0.28 ) }
    dend_57 { pt3dadd( -79.6833, 135.037, -73.8503, 0.14 ) }
    dend_57 { pt3dadd( -80.2334, 135.491, -73.9835, 0.1 ) }
    dend_57 { pt3dadd( -80.5735, 135.78, -74.114, 0.14 ) }
    dend_57 { pt3dadd( -81.1034, 136.209, -74.3663, 0.14 ) }
    dend_57 { pt3dadd( -82.1201, 136.956, -74.9153, 0.1 ) }
    dend_57 { pt3dadd( -82.4742, 137.171, -75.1096, 0.1 ) }
    dend_57 { pt3dadd( -83.4912, 137.621, -75.5601, 0.14 ) }
    dend_57 { pt3dadd( -84.0969, 137.772, -75.7309, 0.1 ) }
    dend_57 { pt3dadd( -84.7436, 137.78, -75.7699, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_57 { pt3dadd( -85.3703, 137.66, -75.6882, 0.1 ) }
    dend_57 { pt3dadd( -85.954, 137.461, -75.4704, 0.1 ) }
    dend_57 { pt3dadd( -87.1147, 136.978, -74.8974, 0.1 ) }
    dend_57 { pt3dadd( -87.687, 136.72, -74.5117, 0.1 ) }
    dend_57 { pt3dadd( -88.2266, 136.457, -74.0994, 0.1 ) }
    dend_57 { pt3dadd( -88.5653, 136.289, -73.8276, 0.1 ) }
    dend_57 { pt3dadd( -89.5754, 135.805, -73.0265, 0.1 ) }
    dend_57 { pt3dadd( -90.0729, 135.578, -72.6605, 0.1 ) }
    dend_57 { pt3dadd( -91.1477, 135.147, -71.9892, 0.1 ) }
    dend_57 { pt3dadd( -91.7713, 134.917, -71.6756, 0.1 ) }
    dend_57 { pt3dadd( -92.3586, 134.719, -71.4662, 0.1 ) }
    dend_57 { pt3dadd( -92.9622, 134.535, -71.3464, 0.1 ) }
    dend_57 { pt3dadd( -93.6636, 134.319, -71.3206, 0.1 ) }
    dend_57 { pt3dadd( -94.2858, 134.12, -71.3471, 0.1 ) }
    dend_57 { pt3dadd( -95.5913, 133.708, -71.5041, 0.14 ) }
    dend_57 { pt3dadd( -96.2107, 133.512, -71.577, 0.1 ) }
    dend_57 { pt3dadd( -96.8301, 133.313, -71.6396, 0.1 ) }
    dend_57 { pt3dadd( -97.5207, 133.083, -71.7388, 0.1 ) }
    dend_57 { pt3dadd( -97.8274, 132.976, -71.7886, 0.1 ) }
    dend_57 { pt3dadd( -98.4375, 132.755, -71.8755, 0.1 ) }
    dend_57 { pt3dadd( -99.1195, 132.508, -71.932, 0.1 ) }
    dend_57 { pt3dadd( -99.7283, 132.269, -72.0098, 0.1 ) }
    dend_57 { pt3dadd( -100.983, 131.749, -72.2443, 0.14 ) }
    dend_57 { pt3dadd( -101.401, 131.576, -72.3538, 0.28 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 24/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -12.8015, 41.9443, -40.4284, 1.12 ) }
    dend_55 { pt3dadd( -13.8556, 42.8469, -41.6629, 1.12 ) }
    dend_55 { pt3dadd( -13.9944, 42.9608, -41.8361, 1.12 ) }
    dend_55 { pt3dadd( -14.3732, 43.259, -42.3402, 0.14 ) }
    dend_55 { pt3dadd( -14.8776, 43.6894, -43.0281, 0.1 ) }
    dend_55 { pt3dadd( -15.3626, 44.1324, -43.7167, 0.1 ) }
    dend_55 { pt3dadd( -15.9216, 44.6702, -44.5442, 0.1 ) }
    dend_55 { pt3dadd( -16.3703, 45.0938, -45.2684, 0.1 ) }
    dend_55 { pt3dadd( -16.82, 45.5267, -45.9928, 0.1 ) }
    dend_55 { pt3dadd( -17.0475, 45.7571, -46.359, 0.1 ) }
    dend_55 { pt3dadd( -17.5542, 46.3024, -47.1046, 0.1 ) }
    dend_55 { pt3dadd( -18.0632, 46.9074, -47.7941, 0.1 ) }
    dend_55 { pt3dadd( -18.0632, 46.9074, -47.7941, 0.14 ) }
    dend_55 { pt3dadd( -18.4057, 47.369, -48.2001, 0.1 ) }
    dend_55 { pt3dadd( -18.5753, 47.6049, -48.4056, 0.1 ) }
    dend_55 { pt3dadd( -19.1149, 48.3625, -49.0658, 0.1 ) }
    dend_55 { pt3dadd( -19.3396, 48.7186, -49.344, 0.1 ) }
    dend_55 { pt3dadd( -19.7355, 49.4087, -49.8862, 0.1 ) }
    dend_55 { pt3dadd( -19.9235, 49.777, -50.1779, 0.14 ) }
    dend_55 { pt3dadd( -20.2325, 50.4461, -50.7475, 0.28 ) }
    dend_55 { pt3dadd( -20.4031, 50.8634, -51.0921, 0.7 ) }
    dend_55 { pt3dadd( -20.5364, 51.2333, -51.3952, 0.56 ) }
    dend_55 { pt3dadd( -20.8114, 52.0053, -52.0796, 0.42 ) }
    dend_55 { pt3dadd( -20.9314, 52.3636, -52.4012, 0.28 ) }
    dend_55 { pt3dadd( -21.2066, 53.1199, -53.0915, 0.14 ) }
    dend_55 { pt3dadd( -21.3532, 53.4861, -53.4097, 0.1 ) }
    dend_55 { pt3dadd( -21.6846, 54.219, -54.0533, 0.1 ) }
    dend_55 { pt3dadd( -22.0658, 54.9542, -54.6665, 0.14 ) }
    dend_55 { pt3dadd( -22.0658, 54.9542, -54.6665, 0.28 ) }
    dend_55 { pt3dadd( -22.3863, 55.4572, -55.0441, 0.1 ) }
    dend_55 { pt3dadd( -22.6695, 55.8465, -55.3394, 0.1 ) }
    dend_55 { pt3dadd( -22.8577, 56.0785, -55.5174, 0.1 ) }
    dend_55 { pt3dadd( -23.0629, 56.3203, -55.6779, 0.14 ) }
    dend_55 { pt3dadd( -23.2077, 56.497, -55.7834, 0.28 ) }
    dend_55 { pt3dadd( -23.7322, 57.1974, -56.1861, 0.84 ) }
    dend_55 { pt3dadd( -24.2714, 57.9508, -56.6899, 0.7 ) }
    dend_55 { pt3dadd( -24.5452, 58.3475, -56.9705, 0.56 ) }
    dend_55 { pt3dadd( -24.722, 58.6087, -57.1465, 0.42 ) }
    dend_55 { pt3dadd( -24.9953, 59.0116, -57.4192, 0.28 ) }
    dend_55 { pt3dadd( -25.2781, 59.4062, -57.7051, 0.14 ) }
    dend_55 { pt3dadd( -25.7507, 60.0538, -58.232, 0.28 ) }
    dend_55 { pt3dadd( -25.7507, 60.0538, -58.232, 0.42 ) }
    dend_55 { pt3dadd( -26.0101, 60.3922, -58.5973, 0.1 ) }
    dend_55 { pt3dadd( -26.4635, 61.0268, -59.302, 0.1 ) }
    dend_55 { pt3dadd( -26.8258, 61.6047, -59.9793, 0.1 ) }
    dend_55 { pt3dadd( -27.1527, 62.2724, -60.7325, 0.1 ) }
    dend_55 { pt3dadd( -27.1527, 62.2724, -60.7325, 0.14 ) }
    dend_55 { pt3dadd( -27.2308, 62.6291, -61.0696, 0.1 ) }
    dend_55 { pt3dadd( -27.2594, 63.0074, -61.4105, 0.1 ) }
    dend_55 { pt3dadd( -27.1987, 63.8285, -62.1021, 0.14 ) }
    dend_55 { pt3dadd( -27.1259, 64.2624, -62.456, 0.1 ) }
    dend_55 { pt3dadd( -27.0407, 64.6547, -62.7721, 0.1 ) }
    dend_55 { pt3dadd( -26.8622, 65.4828, -63.4379, 0.1 ) }
    dend_55 { pt3dadd( -26.8112, 65.7484, -63.6671, 0.1 ) }
    dend_55 { pt3dadd( -26.6824, 66.5628, -64.3589, 0.14 ) }
    dend_55 { pt3dadd( -26.6824, 66.5628, -64.3589, 0.28 ) }
    dend_55 { pt3dadd( -26.6541, 66.9519, -64.6903, 0.28 ) }
    dend_55 { pt3dadd( -26.6258, 67.343, -65.0028, 0.14 ) }
    dend_55 { pt3dadd( -26.5681, 68.1656, -65.6429, 0.1 ) }
    dend_55 { pt3dadd( -26.5329, 68.5705, -65.956, 0.1 ) }
    dend_55 { pt3dadd( -26.4166, 69.4381, -66.5877, 0.14 ) }
    dend_55 { pt3dadd( -26.3385, 69.8525, -66.8827, 0.1 ) }
    dend_55 { pt3dadd( -26.2208, 70.308, -67.2021, 0.1 ) }
    dend_55 { pt3dadd( -25.9514, 71.1067, -67.7149, 0.14 ) }
    dend_55 { pt3dadd( -25.7603, 71.5829, -67.9633, 0.1 ) }
    dend_55 { pt3dadd( -25.5518, 72.0798, -68.1825, 0.1 ) }
    dend_55 { pt3dadd( -25.3517, 72.5774, -68.3801, 0.1 ) }
    dend_55 { pt3dadd( -25.2291, 72.8978, -68.5111, 0.14 ) }
    dend_55 { pt3dadd( -25.0574, 73.3995, -68.7495, 0.28 ) }
    dend_55 { pt3dadd( -24.932, 73.8201, -69.0002, 0.42 ) }
    dend_55 { pt3dadd( -24.8242, 74.2186, -69.3068, 0.56 ) }
    dend_55 { pt3dadd( -24.6629, 74.8812, -69.9582, 0.42 ) }
    dend_55 { pt3dadd( -24.5908, 75.2329, -70.4006, 0.14 ) }
    dend_55 { pt3dadd( -24.4943, 75.7617, -71.2007, 0.1 ) }
    dend_55 { pt3dadd( -24.405, 76.2941, -72.1123, 0.1 ) }
    dend_55 { pt3dadd( -24.3719, 76.4625, -72.4158, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_55 { pt3dadd( -24.2467, 76.9857, -73.3276, 0.14 ) }
    dend_55 { pt3dadd( -24.1028, 77.4834, -74.0628, 0.28 ) }
    dend_55 { pt3dadd( -24.0588, 77.6351, -74.2617, 0.42 ) }
    dend_55 { pt3dadd( -23.9532, 77.9864, -74.6177, 1.26 ) }
    dend_55 { pt3dadd( -23.829, 78.4035, -74.993, 1.12 ) }
    dend_55 { pt3dadd( -23.7156, 78.8015, -75.375, 0.98 ) }
    dend_55 { pt3dadd( -23.6039, 79.1928, -75.7782, 0.84 ) }
    dend_55 { pt3dadd( -23.416, 79.8642, -76.5811, 0.7 ) }
    dend_55 { pt3dadd( -23.3793, 80.0045, -76.7858, 0.84 ) }
    dend_55 { pt3dadd( -23.2549, 80.5206, -77.7014, 1.12 ) }
    dend_55 { pt3dadd( -23.1667, 80.9605, -78.5494, 0.98 ) }
    dend_55 { pt3dadd( -23.0774, 81.4389, -79.4876, 0.84 ) }
    dend_55 { pt3dadd( -22.9985, 81.8876, -80.3323, 0.7 ) }
    dend_55 { pt3dadd( -22.9111, 82.3676, -81.1639, 0.56 ) }
    dend_55 { pt3dadd( -22.8083, 82.9208, -82.063, 0.42 ) }
    dend_55 { pt3dadd( -22.7556, 83.2108, -82.4648, 0.28 ) }
    dend_55 { pt3dadd( -22.6838, 83.5917, -82.8846, 0.14 ) }
    dend_55 { pt3dadd( -22.6021, 83.9799, -83.2099, 0.1 ) }
    dend_55 { pt3dadd( -22.3827, 84.8866, -83.7539, 0.1 ) }
    dend_55 { pt3dadd( -22.3827, 84.8866, -83.7539, 0.14 ) }
    dend_55 { pt3dadd( -22.2241, 85.3558, -83.9126, 0.56 ) }
    dend_55 { pt3dadd( -22.0426, 85.8714, -84.1138, 0.42 ) }
    dend_55 { pt3dadd( -21.8702, 86.3771, -84.3169, 0.28 ) }
    dend_55 { pt3dadd( -21.6984, 86.8977, -84.5143, 0.14 ) }
    dend_55 { pt3dadd( -21.5508, 87.4092, -84.7219, 0.1 ) }
    dend_55 { pt3dadd( -21.4676, 87.7318, -84.8746, 0.1 ) }
    dend_55 { pt3dadd( -21.2716, 88.6063, -85.4227, 0.1 ) }
    dend_55 { pt3dadd( -21.2043, 88.9953, -85.7461, 0.1 ) }
    dend_55 { pt3dadd( -21.1572, 89.339, -86.1192, 0.1 ) }
    dend_55 { pt3dadd( -21.0936, 89.9291, -86.8412, 0.14 ) }
    dend_55 { pt3dadd( -21.0698, 90.2664, -87.2977, 0.28 ) }
    dend_55 { pt3dadd( -21.0385, 90.8018, -88.1011, 0.14 ) }
    dend_55 { pt3dadd( -20.9974, 91.3747, -88.9874, 0.1 ) }
    dend_55 { pt3dadd( -20.9626, 91.8975, -89.7982, 0.1 ) }
    dend_55 { pt3dadd( -20.9451, 92.1837, -90.2148, 0.14 ) }
    dend_55 { pt3dadd( -20.9102, 92.8263, -91.0172, 0.1 ) }
    dend_55 { pt3dadd( -20.8945, 93.4904, -91.7277, 0.1 ) }
    dend_55 { pt3dadd( -20.8884, 93.8834, -92.0516, 0.1 ) }
    dend_55 { pt3dadd( -20.8824, 94.3251, -92.3159, 0.1 ) }
    dend_55 { pt3dadd( -20.8813, 94.7876, -92.5393, 0.1 ) }
    dend_55 { pt3dadd( -20.881, 95.255, -92.7381, 0.1 ) }
    dend_55 { pt3dadd( -20.8786, 95.747, -92.8917, 0.1 ) }
    dend_55 { pt3dadd( -20.8786, 95.747, -92.8917, 0.14 ) }
    dend_55 { pt3dadd( -20.884, 96.2435, -93.0304, 0.1 ) }
    dend_55 { pt3dadd( -20.8955, 97.2593, -93.3169, 0.1 ) }
    dend_55 { pt3dadd( -20.8984, 97.7444, -93.4897, 0.1 ) }
    dend_55 { pt3dadd( -20.8971, 98.2251, -93.6803, 0.1 ) }
    dend_55 { pt3dadd( -20.8818, 98.6932, -93.8718, 0.1 ) }
    dend_55 { pt3dadd( -20.8533, 99.1748, -94.06, 0.1 ) }
    dend_55 { pt3dadd( -20.8025, 99.6576, -94.2352, 0.1 ) }
    dend_55 { pt3dadd( -20.6614, 100.574, -94.5868, 0.1 ) }
    dend_55 { pt3dadd( -20.571, 101.037, -94.7942, 0.1 ) }
    dend_55 { pt3dadd( -20.469, 101.525, -95.0692, 0.1 ) }
    dend_55 { pt3dadd( -20.3698, 101.95, -95.3396, 0.1 ) }
    dend_55 { pt3dadd( -20.2599, 102.395, -95.6713, 0.1 ) }
    dend_55 { pt3dadd( -20.0392, 103.226, -96.3243, 0.1 ) }
    dend_55 { pt3dadd( -19.9225, 103.651, -96.6911, 0.1 ) }
    dend_55 { pt3dadd( -19.7268, 104.308, -97.3357, 0.1 ) }
    dend_55 { pt3dadd( -19.6091, 104.685, -97.7496, 0.1 ) }
    dend_55 { pt3dadd( -19.4047, 105.343, -98.565, 0.1 ) }
    dend_55 { pt3dadd( -19.3009, 105.682, -99.0002, 0.1 ) }
    dend_55 { pt3dadd( -19.1011, 106.278, -99.7418, 0.1 ) }
    dend_55 { pt3dadd( -19.0207, 106.498, -100.004, 0.14 ) }
    dend_55 { pt3dadd( -18.9481, 106.671, -100.178, 0.28 ) }
    dend_55 { pt3dadd( -18.617, 107.41, -100.838, 0.7 ) }
    dend_55 { pt3dadd( -18.3984, 107.854, -101.134, 0.56 ) }
    dend_55 { pt3dadd( -18.2532, 108.127, -101.312, 0.42 ) }
    dend_55 { pt3dadd( -18.0276, 108.57, -101.609, 0.28 ) }
    dend_55 { pt3dadd( -17.8431, 108.991, -101.953, 0.14 ) }
    dend_55 { pt3dadd( -17.7505, 109.236, -102.191, 0.1 ) }
    dend_55 { pt3dadd( -17.6248, 109.619, -102.598, 0.1 ) }
    dend_55 { pt3dadd( -17.4499, 110.317, -103.384, 0.14 ) }
    dend_55 { pt3dadd( -17.3122, 110.993, -104.158, 0.28 ) }
    dend_55 { pt3dadd( -17.2042, 111.674, -104.933, 0.14 ) }
    dend_55 { pt3dadd( -17.1194, 112.398, -105.709, 0.1 ) }
    dend_55 { pt3dadd( -17.0879, 112.758, -106.07, 0.1 ) }
    dend_55 { pt3dadd( -17.0612, 113.14, -106.405, 0.1 ) }
    dend_55 { pt3dadd( -17.0396, 113.439, -106.611, 0.1 ) }
    dend_55 { pt3dadd( -17.0073, 113.888, -106.847, 0.1 ) }
    dend_55 { pt3dadd( -17.0042, 114.354, -107.062, 0.14 ) }
    dend_55 { pt3dadd( -17.0986, 115.339, -107.5, 0.28 ) }
    dend_55 { pt3dadd( -17.201, 115.776, -107.746, 0.42 ) }
    dend_55 { pt3dadd( -17.201, 115.776, -107.746, 0.56 ) }
    dend_55 { pt3dadd( -17.4555, 116.263, -108.19, 0.28 ) }
    dend_55 { pt3dadd( -17.8592, 116.902, -108.927, 0.14 ) }
    dend_55 { pt3dadd( -17.9938, 117.078, -109.193, 0.1 ) }
    dend_55 { pt3dadd( -18.3934, 117.546, -110.042, 0.1 ) }
    dend_55 { pt3dadd( -18.7742, 117.968, -110.923, 0.1 ) }
    dend_55 { pt3dadd( -19.1022, 118.328, -111.701, 0.1 ) }
    dend_55 { pt3dadd( -19.4235, 118.678, -112.489, 0.1 ) }
    dend_55 { pt3dadd( -20.0999, 119.408, -114.061, 0.14 ) }
    dend_55 { pt3dadd( -20.4509, 119.784, -114.822, 0.28 ) }
    dend_55 { pt3dadd( -20.4509, 119.784, -114.822, 0.42 ) }
    dend_55 { pt3dadd( -20.8071, 120.126, -115.333, 0.7 ) }
    dend_55 { pt3dadd( -21.0188, 120.299, -115.544, 0.56 ) }
    dend_55 { pt3dadd( -21.5144, 120.625, -115.925, 0.42 ) }
    dend_55 { pt3dadd( -21.7809, 120.754, -116.108, 0.56 ) }
    dend_55 { pt3dadd( -21.9715, 120.827, -116.249, 0.7 ) }
    dend_55 { pt3dadd( -22.7402, 121.07, -116.909, 1.68 ) }
    dend_55 { pt3dadd( -23.4545, 121.242, -117.597, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_55 { pt3dadd( -24.0806, 121.353, -118.256, 1.4 ) }
    dend_55 { pt3dadd( -24.7381, 121.422, -119.02, 1.26 ) }
    dend_55 { pt3dadd( -24.7381, 121.422, -119.02, 1.12 ) }
    dend_55 { pt3dadd( -24.8877, 121.429, -119.218, 0.98 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -12.8015, 41.9443, -40.4284, 1.4 ) }
    dend_54 { pt3dadd( -12.7003, 42.3008, -41.384, 1.4 ) }
    dend_54 { pt3dadd( -12.6172, 42.614, -42.2863, 1.26 ) }
    dend_54 { pt3dadd( -12.5262, 42.9308, -43.2883, 1.12 ) }
    dend_54 { pt3dadd( -12.4428, 43.1983, -44.2083, 0.98 ) }
    dend_54 { pt3dadd( -12.3564, 43.4225, -45.1337, 0.84 ) }
    dend_54 { pt3dadd( -12.2731, 43.5945, -46.0721, 0.7 ) }
    dend_54 { pt3dadd( -12.1023, 43.7417, -47.9181, 0.56 ) }
    dend_54 { pt3dadd( -12.0147, 43.7461, -48.8359, 0.56 ) }
    dend_54 { pt3dadd( -11.9871, 43.7305, -49.0838, 0.1 ) }
    dend_54 { pt3dadd( -11.8422, 43.6284, -50.114, 0.1 ) }
    dend_54 { pt3dadd( -11.6714, 43.5179, -51.1119, 0.1 ) }
    dend_54 { pt3dadd( -11.4413, 43.4018, -52.125, 0.14 ) }
    dend_54 { pt3dadd( -11.3396, 43.376, -52.4624, 0.84 ) }
    dend_54 { pt3dadd( -11.007, 43.3945, -53.4579, 0.7 ) }
    dend_54 { pt3dadd( -10.6478, 43.5221, -54.4377, 0.56 ) }
    dend_54 { pt3dadd( -10.289, 43.7583, -55.2943, 0.42 ) }
    dend_54 { pt3dadd( -10.0847, 43.9338, -55.7215, 0.28 ) }
    dend_54 { pt3dadd( -9.66742, 44.3753, -56.5895, 0.14 ) }
    dend_54 { pt3dadd( -9.29904, 44.7921, -57.3824, 0.28 ) }
    dend_54 { pt3dadd( -9.09225, 45.0675, -57.8232, 0.42 ) }
    dend_54 { pt3dadd( -8.9105, 45.3887, -58.26, 0.28 ) }
    dend_54 { pt3dadd( -8.82568, 45.6031, -58.5277, 0.14 ) }
    dend_54 { pt3dadd( -8.68221, 46.215, -59.2315, 0.1 ) }
    dend_54 { pt3dadd( -8.65794, 46.3834, -59.4224, 0.14 ) }
    dend_54 { pt3dadd( -8.61725, 46.7215, -59.8006, 0.1 ) }
    dend_54 { pt3dadd( -8.52229, 47.3684, -60.6091, 0.1 ) }
    dend_54 { pt3dadd( -8.40717, 47.9893, -61.4718, 0.1 ) }
    dend_54 { pt3dadd( -8.33465, 48.2559, -61.8878, 0.14 ) }
    dend_54 { pt3dadd( -8.15635, 48.7328, -62.7127, 0.28 ) }
    dend_54 { pt3dadd( -8.0359, 48.9831, -63.2075, 1.4 ) }
    dend_54 { pt3dadd( -7.78781, 49.3833, -64.1527, 1.26 ) }
    dend_54 { pt3dadd( -7.53449, 49.692, -65.0288, 1.12 ) }
    dend_54 { pt3dadd( -7.2362, 49.9729, -65.9672, 0.98 ) }
    dend_54 { pt3dadd( -6.93235, 50.1923, -66.8512, 1.12 ) }
    dend_54 { pt3dadd( -6.56189, 50.3981, -67.8121, 0.98 ) }
    dend_54 { pt3dadd( -6.20274, 50.5345, -68.6918, 0.84 ) }
    dend_54 { pt3dadd( -5.77981, 50.6534, -69.6079, 0.7 ) }
    dend_54 { pt3dadd( -5.54748, 50.7041, -70.0462, 0.56 ) }
    dend_54 { pt3dadd( -5.37511, 50.7414, -70.3537, 0.42 ) }
    dend_54 { pt3dadd( -5.12709, 50.7969, -70.7858, 0.28 ) }
    dend_54 { pt3dadd( -4.68668, 50.9275, -71.6239, 0.42 ) }
    dend_54 { pt3dadd( -4.53943, 50.9887, -71.9372, 0.56 ) }
    dend_54 { pt3dadd( -4.12326, 51.221, -72.8778, 0.42 ) }
    dend_54 { pt3dadd( -3.76075, 51.4681, -73.7302, 0.28 ) }
    dend_54 { pt3dadd( -3.36985, 51.7754, -74.6591, 0.14 ) }
    dend_54 { pt3dadd( -3.0095, 52.0871, -75.4969, 0.1 ) }
    dend_54 { pt3dadd( -2.57673, 52.4724, -76.3811, 0.1 ) }
    dend_54 { pt3dadd( -2.33171, 52.6905, -76.8419, 0.1 ) }
    dend_54 { pt3dadd( -2.16118, 52.8389, -77.1158, 0.1 ) }
    dend_54 { pt3dadd( -1.60384, 53.3384, -77.8764, 0.1 ) }
    dend_54 { pt3dadd( -1.41938, 53.5228, -78.114, 0.1 ) }
    dend_54 { pt3dadd( -1.14849, 53.8474, -78.4986, 0.1 ) }
    dend_54 { pt3dadd( -0.702874, 54.516, -79.3284, 0.14 ) }
    dend_54 { pt3dadd( -0.625306, 54.6664, -79.5196, 0.14 ) }
    dend_54 { pt3dadd( -0.497278, 54.96, -79.9133, 0.1 ) }
    dend_54 { pt3dadd( -0.264977, 55.5953, -80.7374, 0.1 ) }
    dend_54 { pt3dadd( -0.0683296, 56.1948, -81.5607, 0.1 ) }
    dend_54 { pt3dadd( 0.0894062, 56.7418, -82.3494, 0.1 ) }
    dend_54 { pt3dadd( 0.165734, 57.0101, -82.7608, 0.1 ) }
    dend_54 { pt3dadd( 0.339833, 57.5714, -83.6501, 0.14 ) }
    dend_54 { pt3dadd( 0.441341, 57.8544, -84.1209, 0.28 ) }
    dend_54 { pt3dadd( 0.631526, 58.3445, -84.9381, 0.14 ) }
    dend_54 { pt3dadd( 0.849124, 58.8988, -85.8223, 0.1 ) }
    dend_54 { pt3dadd( 1.03447, 59.4142, -86.6211, 0.1 ) }
    dend_54 { pt3dadd( 1.09736, 59.6108, -86.9156, 0.1 ) }
    dend_54 { pt3dadd( 1.26998, 60.2229, -87.7697, 0.1 ) }
    dend_54 { pt3dadd( 1.44765, 60.8574, -88.6126, 0.1 ) }
    dend_54 { pt3dadd( 1.5455, 61.175, -88.9975, 0.1 ) }
    dend_54 { pt3dadd( 1.77716, 61.8404, -89.8, 0.14 ) }
    dend_54 { pt3dadd( 1.90176, 62.1411, -90.1899, 0.14 ) }
    dend_54 { pt3dadd( 1.97587, 62.2792, -90.3906, 0.28 ) }
    dend_54 { pt3dadd( 2.1079, 62.4558, -90.6647, 0.56 ) }
    dend_54 { pt3dadd( 2.60341, 62.931, -91.479, 0.42 ) }
    dend_54 { pt3dadd( 3.11734, 63.3056, -92.205, 0.28 ) }
    dend_54 { pt3dadd( 3.74572, 63.6722, -92.9777, 0.14 ) }
    dend_54 { pt3dadd( 4.04132, 63.8171, -93.3568, 0.28 ) }
    dend_54 { pt3dadd( 4.34447, 63.9477, -93.8124, 0.14 ) }
    dend_54 { pt3dadd( 4.56487, 63.9931, -94.2573, 0.28 ) }
    dend_54 { pt3dadd( 4.62402, 63.9606, -94.4979, 0.42 ) }
    dend_54 { pt3dadd( 4.62402, 63.9606, -94.4979, 0.56 ) }
    dend_54 { pt3dadd( 4.63931, 63.6251, -95.3961, 0.84 ) }
    dend_54 { pt3dadd( 4.66319, 63.2895, -96.2939, 0.7 ) }
    dend_54 { pt3dadd( 4.72372, 62.9165, -97.2384, 0.56 ) }
    dend_54 { pt3dadd( 4.83885, 62.5961, -98.0983, 0.42 ) }
    dend_54 { pt3dadd( 4.89295, 62.5211, -98.3284, 0.56 ) }
    dend_54 { pt3dadd( 5.07092, 62.378, -98.8292, 0.42 ) }
    dend_54 { pt3dadd( 5.52053, 62.1823, -99.7205, 0.28 ) }
    dend_54 { pt3dadd( 5.79094, 62.1097, -100.204, 0.14 ) }
    dend_54 { pt3dadd( 6.30456, 62.0438, -101.08, 0.1 ) }
    dend_54 { pt3dadd( 6.80229, 62.0206, -101.964, 0.1 ) }
    dend_54 { pt3dadd( 6.91396, 62.0213, -102.188, 0.1 ) }
    dend_54 { pt3dadd( 7.31768, 62.0499, -103.122, 0.1 ) }
    dend_54 { pt3dadd( 7.65222, 62.1119, -103.944, 0.14 ) }
    dend_54 { pt3dadd( 7.7734, 62.1533, -104.274, 0.28 ) }
    dend_54 { pt3dadd( 8.09638, 62.3308, -105.226, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_54 { pt3dadd( 8.38809, 62.5574, -106.179, 0.1 ) }
    dend_54 { pt3dadd( 8.62518, 62.793, -107.044, 0.1 ) }
    dend_54 { pt3dadd( 8.75675, 62.947, -107.568, 0.42 ) }
    dend_54 { pt3dadd( 8.96918, 63.2393, -108.458, 0.42 ) }
    dend_54 { pt3dadd( 9.17257, 63.5984, -109.432, 0.28 ) }
    dend_54 { pt3dadd( 9.32987, 63.993, -110.299, 0.14 ) }
    dend_54 { pt3dadd( 9.46291, 64.4398, -111.145, 0.28 ) }
    dend_54 { pt3dadd( 9.56562, 64.9047, -111.947, 0.42 ) }
    dend_54 { pt3dadd( 9.601, 65.1616, -112.38, 0.1 ) }
    dend_54 { pt3dadd( 9.61646, 65.4305, -112.807, 0.1 ) }
    dend_54 { pt3dadd( 9.60271, 65.6999, -113.226, 0.1 ) }
    dend_54 { pt3dadd( 9.52892, 66.2258, -114.036, 0.14 ) }
    dend_54 { pt3dadd( 9.40577, 66.7979, -114.886, 0.7 ) }
    dend_54 { pt3dadd( 9.25325, 67.3556, -115.741, 0.56 ) }
    dend_54 { pt3dadd( 9.09179, 67.8284, -116.527, 0.42 ) }
    dend_54 { pt3dadd( 8.88845, 68.3437, -117.43, 0.28 ) }
    dend_54 { pt3dadd( 8.67352, 68.835, -118.306, 0.14 ) }
    dend_54 { pt3dadd( 8.55172, 69.1038, -118.78, 0.1 ) }
    dend_54 { pt3dadd( 8.36583, 69.5414, -119.58, 0.1 ) }
    dend_54 { pt3dadd( 8.20775, 70.0192, -120.507, 0.1 ) }
    dend_54 { pt3dadd( 8.12015, 70.4485, -121.436, 0.1 ) }
    dend_54 { pt3dadd( 8.12015, 70.4485, -121.436, 0.14 ) }
    dend_54 { pt3dadd( 8.19838, 70.7531, -122.342, 0.56 ) }
    dend_54 { pt3dadd( 8.34067, 71.0332, -123.25, 0.42 ) }
    dend_54 { pt3dadd( 8.56993, 71.3279, -124.237, 0.28 ) }
    dend_54 { pt3dadd( 8.83856, 71.5803, -125.089, 0.14 ) }
    dend_54 { pt3dadd( 9.18561, 71.8568, -126.043, 0.1 ) }
    dend_54 { pt3dadd( 9.5638, 72.1359, -126.988, 0.1 ) }
    dend_54 { pt3dadd( 9.70309, 72.2355, -127.291, 0.1 ) }
    dend_54 { pt3dadd( 10.1831, 72.5733, -128.172, 0.1 ) }
    dend_54 { pt3dadd( 10.4605, 72.7734, -128.615, 0.1 ) }
    dend_54 { pt3dadd( 10.9674, 73.1532, -129.303, 0.14 ) }
    dend_54 { pt3dadd( 11.1158, 73.2651, -129.473, 0.28 ) }
    dend_54 { pt3dadd( 11.4615, 73.5259, -129.842, 0.7 ) }
    dend_54 { pt3dadd( 11.8137, 73.7848, -130.206, 0.56 ) }
    dend_54 { pt3dadd( 12.503, 74.2775, -130.857, 0.42 ) }
    dend_54 { pt3dadd( 12.7399, 74.4296, -131.067, 0.28 ) }
    dend_54 { pt3dadd( 13.1411, 74.6358, -131.41, 0.14 ) }
    dend_54 { pt3dadd( 13.9029, 74.9119, -132.086, 0.1 ) }
    dend_54 { pt3dadd( 14.0816, 74.937, -132.261, 0.1 ) }
    dend_54 { pt3dadd( 14.2554, 74.9433, -132.438, 0.1 ) }
    dend_54 { pt3dadd( 14.6539, 74.9348, -132.818, 0.1 ) }
    dend_54 { pt3dadd( 15.3753, 74.9227, -133.582, 0.1 ) }
    dend_54 { pt3dadd( 15.6146, 74.93, -133.843, 0.1 ) }
    dend_54 { pt3dadd( 16.3038, 75.0274, -134.626, 0.1 ) }
    dend_54 { pt3dadd( 16.6533, 75.1252, -135.046, 0.56 ) }
    dend_54 { pt3dadd( 17.0032, 75.274, -135.462, 0.42 ) }
    dend_54 { pt3dadd( 17.566, 75.6136, -136.167, 0.28 ) }
    dend_54 { pt3dadd( 17.8942, 75.8509, -136.564, 0.14 ) }
    dend_54 { pt3dadd( 18.5009, 76.335, -137.292, 0.1 ) }
    dend_54 { pt3dadd( 18.7033, 76.5035, -137.537, 0.1 ) }
    dend_54 { pt3dadd( 19.0114, 76.7352, -137.953, 0.1 ) }
    dend_54 { pt3dadd( 19.4939, 77.0924, -138.711, 0.1 ) }
    dend_54 { pt3dadd( 19.6118, 77.1721, -138.917, 0.14 ) }
    dend_54 { pt3dadd( 19.7585, 77.2696, -139.226, 0.28 ) }
    dend_54 { pt3dadd( 20.1424, 77.5126, -140.174, 0.14 ) }
    dend_54 { pt3dadd( 20.4875, 77.7417, -141.11, 0.1 ) }
    dend_54 { pt3dadd( 20.7951, 77.9721, -141.988, 0.14 ) }
    dend_54 { pt3dadd( 21.1306, 78.2475, -142.916, 0.1 ) }
    dend_54 { pt3dadd( 21.4438, 78.5461, -143.774, 0.14 ) }
    dend_54 { pt3dadd( 21.7664, 78.8813, -144.58, 0.28 ) }
    dend_54 { pt3dadd( 21.9769, 79.1409, -145.039, 0.1 ) }
    dend_54 { pt3dadd( 22.2071, 79.4549, -145.446, 0.1 ) }
    dend_54 { pt3dadd( 22.3689, 79.6691, -145.689, 0.1 ) }
    dend_54 { pt3dadd( 22.6289, 79.9909, -146.073, 0.1 ) }
    dend_54 { pt3dadd( 22.8991, 80.2359, -146.507, 0.1 ) }
    dend_54 { pt3dadd( 23.3537, 80.4742, -147.424, 0.1 ) }
    dend_54 { pt3dadd( 23.4479, 80.4909, -147.655, 0.14 ) }
    dend_54 { pt3dadd( 23.7858, 80.476, -148.549, 0.56 ) }
    dend_54 { pt3dadd( 24.1075, 80.4269, -149.444, 0.42 ) }
    dend_54 { pt3dadd( 24.4413, 80.3583, -150.436, 0.28 ) }
    dend_54 { pt3dadd( 24.7358, 80.3099, -151.344, 0.14 ) }
    dend_54 { pt3dadd( 25.0494, 80.2789, -152.307, 0.28 ) }
    dend_54 { pt3dadd( 25.1277, 80.281, -152.544, 0.42 ) }
    dend_54 { pt3dadd( 25.4885, 80.3432, -153.525, 0.28 ) }
    dend_54 { pt3dadd( 25.8591, 80.4456, -154.404, 0.14 ) }
    dend_54 { pt3dadd( 26.3025, 80.5941, -155.343, 0.1 ) }
    dend_54 { pt3dadd( 26.746, 80.7414, -156.142, 0.1 ) }
    dend_54 { pt3dadd( 26.8819, 80.7795, -156.35, 0.42 ) }
    dend_54 { pt3dadd( 27.1708, 80.8402, -156.742, 0.28 ) }
    dend_54 { pt3dadd( 27.5055, 80.8836, -157.113, 0.14 ) }
    dend_54 { pt3dadd( 28.2444, 80.973, -157.812, 0.1 ) }
    dend_54 { pt3dadd( 28.603, 81.0399, -158.157, 0.1 ) }
    dend_54 { pt3dadd( 28.9363, 81.1542, -158.513, 0.1 ) }
    dend_54 { pt3dadd( 29.4223, 81.5117, -159.346, 0.14 ) }
    dend_54 { pt3dadd( 29.4767, 81.6337, -159.552, 0.28 ) }
    dend_54 { pt3dadd( 29.4671, 81.9687, -160.004, 0.1 ) }
    dend_54 { pt3dadd( 29.3032, 82.6402, -160.813, 0.1 ) }
    dend_54 { pt3dadd( 29.1829, 83.0144, -161.233, 0.1 ) }
    dend_54 { pt3dadd( 28.95, 83.6313, -161.942, 0.1 ) }
    dend_54 { pt3dadd( 28.8283, 83.9637, -162.308, 0.1 ) }
    dend_54 { pt3dadd( 28.6197, 84.6399, -163.059, 0.1 ) }
    dend_54 { pt3dadd( 28.4589, 85.3072, -163.836, 0.1 ) }
    dend_54 { pt3dadd( 28.402, 85.6254, -164.226, 0.1 ) }
    dend_54 { pt3dadd( 28.3228, 86.1622, -164.947, 0.14 ) }
    dend_54 { pt3dadd( 28.2758, 86.4644, -165.424, 0.14 ) }
    dend_54 { pt3dadd( 28.2427, 86.6322, -165.734, 0.1 ) }
    dend_54 { pt3dadd( 28.1336, 87.0905, -166.681, 0.1 ) }
    dend_54 { pt3dadd( 28.0281, 87.4391, -167.534, 0.1 ) }
    dend_54 { pt3dadd( 27.9051, 87.8024, -168.484, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( 27.6721, 88.4219, -170.161, 0.1 ) }
    dend_54 { pt3dadd( 27.527, 88.7423, -171.12, 0.1 ) }
    dend_54 { pt3dadd( 27.3911, 89.0141, -171.994, 0.1 ) }
    dend_54 { pt3dadd( 27.1562, 89.5092, -173.707, 0.1 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 13.4176, -87.9988, 3.93309, 0.84 ) }
    dend_24 { pt3dadd( 13.8794, -89.1488, 4.45222, 0.84 ) }
    dend_24 { pt3dadd( 14.0881, -89.7581, 4.70672, 0.98 ) }
    dend_24 { pt3dadd( 14.2809, -90.3913, 4.94123, 1.12 ) }
    dend_24 { pt3dadd( 14.4483, -91.0422, 5.16048, 0.98 ) }
    dend_24 { pt3dadd( 14.7648, -92.4329, 5.57893, 0.84 ) }
    dend_24 { pt3dadd( 14.8943, -93.101, 5.7634, 0.7 ) }
    dend_24 { pt3dadd( 14.9995, -93.8593, 5.91894, 0.7 ) }
    dend_24 { pt3dadd( 15.042, -94.558, 6.02114, 0.84 ) }
    dend_24 { pt3dadd( 15.0371, -95.3385, 6.07996, 0.84 ) }
    dend_24 { pt3dadd( 14.9944, -96.0446, 6.0764, 0.84 ) }
    dend_24 { pt3dadd( 14.9058, -96.8308, 6.0133, 0.84 ) }
    dend_24 { pt3dadd( 14.8098, -97.5279, 5.95322, 0.7 ) }
    dend_24 { pt3dadd( 14.5461, -98.9689, 5.74278, 0.56 ) }
    dend_24 { pt3dadd( 14.4129, -99.6556, 5.65354, 0.7 ) }
    dend_24 { pt3dadd( 14.2787, -100.349, 5.58211, 0.84 ) }
    dend_24 { pt3dadd( 14.129, -101.116, 5.54364, 0.7 ) }
    dend_24 { pt3dadd( 14.0427, -101.611, 5.54379, 0.84 ) }
    dend_24 { pt3dadd( 13.8418, -103.042, 5.62733, 0.98 ) }
    dend_24 { pt3dadd( 13.7084, -104.378, 5.83538, 0.98 ) }
    dend_24 { pt3dadd( 13.613, -105.139, 5.98661, 0.84 ) }
    dend_24 { pt3dadd( 13.4712, -105.914, 6.10797, 0.98 ) }
    dend_24 { pt3dadd( 13.4189, -106.26, 6.16785, 0.84 ) }
    dend_24 { pt3dadd( 13.3839, -106.608, 6.23107, 0.84 ) }
    dend_24 { pt3dadd( 13.3497, -107.38, 6.37783, 0.98 ) }
    dend_24 { pt3dadd( 13.3181, -108.174, 6.43651, 1.12 ) }
    dend_24 { pt3dadd( 13.3514, -109.484, 6.49908, 1.26 ) }
    dend_24 { pt3dadd( 13.4183, -110.792, 6.56254, 1.12 ) }
    dend_24 { pt3dadd( 13.4525, -111.485, 6.6079, 0.98 ) }
    dend_24 { pt3dadd( 13.4947, -112.193, 6.65726, 1.12 ) }
    dend_24 { pt3dadd( 13.5516, -112.897, 6.70459, 0.98 ) }
    dend_24 { pt3dadd( 13.6093, -113.603, 6.76141, 1.12 ) }
    dend_24 { pt3dadd( 13.6485, -114.108, 6.80883, 1.12 ) }
    dend_24 { pt3dadd( 13.6485, -114.888, 6.86352, 0.98 ) }
    dend_24 { pt3dadd( 13.6205, -115.592, 6.93549, 1.12 ) }
    dend_24 { pt3dadd( 13.5242, -116.366, 6.99863, 0.98 ) }
    dend_24 { pt3dadd( 13.3876, -117.058, 7.04283, 0.84 ) }
    dend_24 { pt3dadd( 13.2153, -117.746, 7.07321, 0.98 ) }
    dend_24 { pt3dadd( 12.9996, -118.5, 7.08261, 0.7 ) }
    dend_24 { pt3dadd( 12.7458, -119.251, 7.06547, 0.84 ) }
    dend_24 { pt3dadd( 12.2157, -120.491, 7.01944, 0.98 ) }
    dend_24 { pt3dadd( 11.8647, -121.184, 6.98525, 0.84 ) }
    dend_24 { pt3dadd( 11.8647, -121.184, 6.98525, 0.98 ) }
    dend_24 { pt3dadd( 11.4367, -121.829, 6.98768, 0.84 ) }
    dend_24 { pt3dadd( 11.2497, -122.126, 6.97917, 0.84 ) }
    dend_24 { pt3dadd( 10.8493, -122.787, 7.06392, 0.98 ) }
    dend_24 { pt3dadd( 10.5504, -123.458, 7.35283, 0.84 ) }
    dend_24 { pt3dadd( 10.3635, -123.87, 7.53289, 0.7 ) }
    dend_24 { pt3dadd( 10.2488, -124.17, 7.64671, 0.7 ) }
    dend_24 { pt3dadd( 10.0459, -124.904, 7.86237, 0.84 ) }
    dend_24 { pt3dadd( 9.95959, -125.383, 7.96576, 0.7 ) }
    dend_24 { pt3dadd( 9.9923, -126.144, 8.15937, 0.7 ) }
    dend_24 { pt3dadd( 10.09, -126.889, 8.37664, 0.84 ) }
    dend_24 { pt3dadd( 10.2205, -127.638, 8.60093, 0.7 ) }
    dend_24 { pt3dadd( 10.3488, -128.304, 8.79212, 0.7 ) }
    dend_24 { pt3dadd( 10.4806, -128.973, 8.97205, 0.56 ) }
    dend_24 { pt3dadd( 10.7902, -130.341, 9.28808, 0.7 ) }
    dend_24 { pt3dadd( 10.7902, -130.341, 9.28808, 0.84 ) }
    dend_24 { pt3dadd( 10.9206, -130.658, 9.36899, 0.84 ) }
    dend_24 { pt3dadd( 11.1632, -131.304, 9.5033, 0.98 ) }
    dend_24 { pt3dadd( 11.3412, -131.98, 9.58959, 0.84 ) }
    dend_24 { pt3dadd( 11.3038, -132.682, 9.49344, 0.84 ) }
    dend_24 { pt3dadd( 10.632, -133.707, 8.7949, 0.98 ) }
    dend_24 { pt3dadd( 10.2377, -134.125, 8.41708, 0.98 ) }
    dend_24 { pt3dadd( 9.42776, -134.85, 7.69129, 0.84 ) }
    dend_24 { pt3dadd( 8.61745, -135.518, 6.98745, 0.7 ) }
    dend_24 { pt3dadd( 7.02913, -136.799, 5.62035, 0.56 ) }
    dend_24 { pt3dadd( 6.21155, -137.455, 4.91619, 0.56 ) }
    dend_24 { pt3dadd( 5.90763, -137.703, 4.65071, 0.84 ) }
    dend_24 { pt3dadd( 5.44309, -138.157, 4.23949, 0.84 ) }
    dend_24 { pt3dadd( 5.13359, -138.699, 3.93953, 0.84 ) }
    dend_24 { pt3dadd( 5.00847, -139.366, 3.78974, 0.98 ) }
    dend_24 { pt3dadd( 5.0155, -139.717, 3.77489, 1.12 ) }
    dend_24 { pt3dadd( 5.04541, -140.071, 3.77548, 0.98 ) }
    dend_24 { pt3dadd( 5.12065, -140.777, 3.76406, 0.98 ) }
    dend_24 { pt3dadd( 5.19189, -141.48, 3.75567, 0.98 ) }
    dend_24 { pt3dadd( 5.25865, -142.262, 3.75638, 0.84 ) }
    dend_24 { pt3dadd( 5.30149, -142.971, 3.77141, 0.84 ) }
    dend_24 { pt3dadd( 5.33511, -143.677, 3.79368, 0.84 ) }
    dend_24 { pt3dadd( 5.34357, -144.032, 3.81171, 0.98 ) }
    dend_24 { pt3dadd( 5.3449, -144.534, 3.84578, 0.84 ) }
    dend_24 { pt3dadd( 5.32773, -145.226, 3.90819, 0.84 ) }
    dend_24 { pt3dadd( 5.24124, -146.016, 3.94459, 0.98 ) }
    dend_24 { pt3dadd( 5.06737, -146.697, 3.89172, 1.12 ) }
    dend_24 { pt3dadd( 4.92316, -147.163, 3.84946, 0.98 ) }
    dend_24 { pt3dadd( 4.92316, -147.163, 3.84946, 1.12 ) }
    dend_24 { pt3dadd( 4.77465, -147.638, 3.79918, 0.84 ) }
    dend_24 { pt3dadd( 4.35241, -149.056, 3.66085, 0.84 ) }
    dend_24 { pt3dadd( 4.01041, -150.447, 3.53302, 0.84 ) }
    dend_24 { pt3dadd( 3.81731, -151.791, 3.54153, 0.56 ) }
    dend_24 { pt3dadd( 3.79418, -152.496, 3.59848, 0.56 ) }
    dend_24 { pt3dadd( 3.83917, -153.27, 3.70723, 0.56 ) }
    dend_24 { pt3dadd( 3.94282, -153.956, 3.83872, 0.56 ) }
    dend_24 { pt3dadd( 4.11478, -154.607, 4.04162, 0.7 ) }
    dend_24 { pt3dadd( 4.53139, -155.946, 4.51878, 0.84 ) }
    dend_24 { pt3dadd( 4.71886, -156.591, 4.72726, 0.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_24 { pt3dadd( 4.90754, -157.223, 4.94372, 1.12 ) }
    dend_24 { pt3dadd( 5.1026, -157.861, 5.16323, 1.12 ) }
    dend_24 { pt3dadd( 5.4522, -159.249, 5.55654, 1.12 ) }
    dend_24 { pt3dadd( 5.56057, -159.942, 5.64283, 0.98 ) }
    dend_24 { pt3dadd( 5.59012, -160.719, 5.57005, 0.84 ) }
    dend_24 { pt3dadd( 5.58013, -161.061, 5.49344, 0.7 ) }
    dend_24 { pt3dadd( 5.54261, -161.382, 5.35627, 0.56 ) }
    dend_24 { pt3dadd( 5.38057, -162.643, 4.70651, 0.7 ) }
    dend_24 { pt3dadd( 5.22145, -163.901, 3.97761, 0.84 ) }
    dend_24 { pt3dadd( 5.19129, -164.518, 3.65414, 0.98 ) }
    dend_24 { pt3dadd( 5.2252, -165.162, 3.37566, 0.84 ) }
    dend_24 { pt3dadd( 5.39941, -166.58, 3.00074, 0.84 ) }
    dend_24 { pt3dadd( 5.56993, -167.863, 2.82047, 0.98 ) }
    dend_24 { pt3dadd( 5.6501, -168.551, 2.78431, 0.98 ) }
    dend_24 { pt3dadd( 5.81388, -169.988, 2.85635, 0.98 ) }
    dend_24 { pt3dadd( 5.86395, -170.692, 2.90249, 0.98 ) }
    dend_24 { pt3dadd( 5.89757, -171.683, 2.97476, 0.98 ) }
    dend_24 { pt3dadd( 5.92323, -173.039, 3.06145, 0.84 ) }
    dend_24 { pt3dadd( 5.89471, -174.345, 2.97428, 0.98 ) }
    dend_24 { pt3dadd( 5.92306, -175.638, 2.77857, 0.84 ) }
    dend_24 { pt3dadd( 5.97575, -176.321, 2.61836, 0.84 ) }
    dend_24 { pt3dadd( 6.12545, -176.977, 2.45257, 0.84 ) }
    dend_24 { pt3dadd( 6.29512, -177.437, 2.33719, 1.12 ) }
    dend_24 { pt3dadd( 6.61762, -178.126, 2.18557, 0.98 ) }
    dend_24 { pt3dadd( 6.92095, -178.808, 1.97897, 0.84 ) }
    dend_24 { pt3dadd( 7.10291, -179.415, 1.68374, 0.98 ) }
    dend_24 { pt3dadd( 7.21737, -179.833, 1.46865, 1.12 ) }
    dend_24 { pt3dadd( 7.39387, -180.449, 1.18753, 0.98 ) }
    dend_24 { pt3dadd( 7.59192, -181.152, 0.925146, 0.84 ) }
    dend_24 { pt3dadd( 7.99513, -182.505, 0.511199, 0.84 ) }
    dend_24 { pt3dadd( 8.41757, -183.839, 0.195562, 0.98 ) }
    dend_24 { pt3dadd( 8.82863, -185.054, -0.013222, 0.84 ) }
    dend_24 { pt3dadd( 9.29413, -186.405, -0.150782, 0.84 ) }
    dend_24 { pt3dadd( 9.53219, -187.056, -0.176207, 0.84 ) }
    dend_24 { pt3dadd( 9.80023, -187.789, -0.143542, 0.98 ) }
    dend_24 { pt3dadd( 10.0354, -188.446, -0.0597234, 1.12 ) }
    dend_24 { pt3dadd( 10.2299, -189.121, 0.0315583, 0.98 ) }
    dend_24 { pt3dadd( 10.304, -189.823, 0.0291988, 0.98 ) }
    dend_24 { pt3dadd( 10.294, -190.177, -1.37568E-4, 0.98 ) }
    dend_24 { pt3dadd( 10.2315, -190.673, -0.0420175, 0.98 ) }
    dend_24 { pt3dadd( 10.0709, -191.437, -0.105925, 1.12 ) }
    dend_24 { pt3dadd( 9.88154, -192.202, -0.181523, 1.26 ) }
    dend_24 { pt3dadd( 9.57146, -193.462, -0.322645, 1.12 ) }
    dend_24 { pt3dadd( 9.57146, -193.462, -0.322645, 0.98 ) }
    dend_24 { pt3dadd( 9.45564, -193.932, -0.395443, 0.56 ) }
    dend_24 { pt3dadd( 9.26592, -194.589, -0.570384, 0.7 ) }
    dend_24 { pt3dadd( 9.04243, -195.224, -0.762885, 0.84 ) }
    dend_24 { pt3dadd( 8.74881, -195.824, -0.972103, 0.84 ) }
    dend_24 { pt3dadd( 8.3381, -196.43, -1.20909, 0.98 ) }
    dend_24 { pt3dadd( 7.45316, -197.479, -1.69462, 0.84 ) }
    dend_24 { pt3dadd( 6.54222, -198.427, -2.19545, 0.98 ) }
    dend_24 { pt3dadd( 6.06272, -198.847, -2.44796, 1.12 ) }
    dend_24 { pt3dadd( 5.01989, -199.612, -2.97709, 1.26 ) }
    dend_24 { pt3dadd( 3.88855, -200.301, -3.53198, 1.12 ) }
    dend_24 { pt3dadd( 3.88855, -200.301, -3.53198, 0.98 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 55/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 13.4176, -87.9988, 3.93309, 0.98 ) }
    dend_19 { pt3dadd( 13.3913, -88.8998, 3.42143, 0.98 ) }
    dend_19 { pt3dadd( 13.3695, -89.3635, 3.10858, 1.12 ) }
    dend_19 { pt3dadd( 13.3668, -89.8197, 2.78972, 1.26 ) }
    dend_19 { pt3dadd( 13.3915, -90.3275, 2.43715, 1.12 ) }
    dend_19 { pt3dadd( 13.484, -91.2595, 1.7881, 0.98 ) }
    dend_19 { pt3dadd( 13.6275, -92.2164, 1.13088, 1.12 ) }
    dend_19 { pt3dadd( 13.68, -92.5294, 0.896419, 0.98 ) }
    dend_19 { pt3dadd( 13.7973, -93.0084, 0.526706, 0.84 ) }
    dend_19 { pt3dadd( 13.9606, -93.4831, 0.169615, 0.7 ) }
    dend_19 { pt3dadd( 14.1008, -93.7882, -0.0368361, 0.56 ) }
    dend_19 { pt3dadd( 14.3873, -94.2589, -0.312368, 0.42 ) }
    dend_19 { pt3dadd( 14.7106, -94.739, -0.561675, 0.28 ) }
    dend_19 { pt3dadd( 14.9068, -95.0344, -0.712609, 0.42 ) }
    dend_19 { pt3dadd( 15.2231, -95.5132, -0.955851, 0.28 ) }
    dend_19 { pt3dadd( 15.5421, -95.9789, -1.20239, 0.14 ) }
    dend_19 { pt3dadd( 15.7476, -96.2744, -1.36167, 0.1 ) }
    dend_19 { pt3dadd( 16.0753, -96.7281, -1.61688, 0.1 ) }
    dend_19 { pt3dadd( 16.4042, -97.1801, -1.87334, 0.1 ) }
    dend_19 { pt3dadd( 16.7371, -97.6364, -2.13306, 0.14 ) }
    dend_19 { pt3dadd( 17.0696, -98.0813, -2.39328, 0.1 ) }
    dend_19 { pt3dadd( 17.4097, -98.5271, -2.66014, 0.14 ) }
    dend_19 { pt3dadd( 17.6205, -98.802, -2.82572, 0.28 ) }
    dend_19 { pt3dadd( 17.7768, -98.9949, -2.94928, 0.42 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.301, -62.5308, -38.8792, 0.1 ) }
    dend_9 { pt3dadd( -10.4207, -63.1116, -38.8571, 0.1 ) }
    dend_9 { pt3dadd( -10.5723, -63.6115, -38.7826, 0.1 ) }
    dend_9 { pt3dadd( -10.7543, -64.1535, -38.6689, 0.1 ) }
    dend_9 { pt3dadd( -10.9508, -64.6169, -38.5177, 0.1 ) }
    dend_9 { pt3dadd( -11.1788, -65.1255, -38.3255, 0.1 ) }
    dend_9 { pt3dadd( -11.385, -65.5756, -38.1521, 0.1 ) }
    dend_9 { pt3dadd( -11.7927, -66.4167, -37.788, 0.1 ) }
    dend_9 { pt3dadd( -12.0143, -66.8456, -37.5863, 0.1 ) }
    dend_9 { pt3dadd( -12.5019, -67.7013, -37.0968, 0.1 ) }
    dend_9 { pt3dadd( -12.7319, -68.0873, -36.8519, 0.1 ) }
    dend_9 { pt3dadd( -12.9817, -68.5289, -36.5611, 0.1 ) }
    dend_9 { pt3dadd( -13.0826, -68.7329, -36.4365, 0.1 ) }
    dend_9 { pt3dadd( -13.0826, -68.7329, -36.4365, 0.1 ) }
    dend_9 { pt3dadd( -13.3073, -69.5885, -36.0354, 0.1 ) }
    dend_9 { pt3dadd( -13.3746, -70.0742, -35.8416, 0.1 ) }
    dend_9 { pt3dadd( -13.4174, -70.5541, -35.6578, 0.1 ) }
    dend_9 { pt3dadd( -13.4148, -71.0598, -35.5166, 0.1 ) }
    dend_9 { pt3dadd( -13.3821, -71.5783, -35.4225, 0.1 ) }
    dend_9 { pt3dadd( -13.3207, -72.1556, -35.3633, 0.1 ) }
    dend_9 { pt3dadd( -13.2443, -72.6769, -35.3488, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( -13.174, -73.197, -35.3484, 0.1 ) }
    dend_9 { pt3dadd( -13.0478, -74.2645, -35.3648, 0.1 ) }
    dend_9 { pt3dadd( -13.0058, -74.7882, -35.3813, 0.1 ) }
    dend_9 { pt3dadd( -12.9859, -75.3046, -35.3998, 0.1 ) }
    dend_9 { pt3dadd( -12.9892, -75.8337, -35.415, 0.1 ) }
    dend_9 { pt3dadd( -12.9995, -76.426, -35.4529, 0.1 ) }
    dend_9 { pt3dadd( -13.0166, -76.9538, -35.4916, 0.1 ) }
    dend_9 { pt3dadd( -13.0472, -77.5368, -35.5249, 0.14 ) }
    dend_9 { pt3dadd( -13.0738, -78.0636, -35.5719, 0.28 ) }
    dend_9 { pt3dadd( -13.0968, -78.5871, -35.6267, 0.42 ) }
    dend_9 { pt3dadd( -13.1331, -79.6862, -35.742, 0.28 ) }
    dend_9 { pt3dadd( -13.1245, -80.2065, -35.8182, 0.14 ) }
    dend_9 { pt3dadd( -13.1073, -80.7251, -35.9152, 0.1 ) }
    dend_9 { pt3dadd( -13.0785, -81.3042, -36.0323, 0.1 ) }
    dend_9 { pt3dadd( -13.0554, -81.8121, -36.1342, 0.1 ) }
    dend_9 { pt3dadd( -13.0364, -82.33, -36.221, 0.1 ) }
    dend_9 { pt3dadd( -13.0159, -83.3003, -36.3174, 0.1 ) }
    dend_9 { pt3dadd( -13.0056, -83.6726, -36.3502, 0.1 ) }
    dend_9 { pt3dadd( -12.9886, -84.1976, -36.3813, 0.1 ) }
    dend_9 { pt3dadd( -12.9606, -84.7138, -36.3829, 0.1 ) }
    dend_9 { pt3dadd( -12.9336, -85.241, -36.3546, 0.1 ) }
    dend_9 { pt3dadd( -12.9117, -85.763, -36.2932, 0.1 ) }
    dend_9 { pt3dadd( -12.897, -86.2824, -36.1977, 0.1 ) }
    dend_9 { pt3dadd( -12.8728, -86.7975, -36.097, 0.1 ) }
    dend_9 { pt3dadd( -12.8449, -87.3698, -35.9845, 0.1 ) }
    dend_9 { pt3dadd( -12.8204, -87.8874, -35.8832, 0.14 ) }
    dend_9 { pt3dadd( -12.8248, -88.3983, -35.7596, 0.28 ) }
    dend_9 { pt3dadd( -12.8631, -88.8989, -35.6253, 0.14 ) }
    dend_9 { pt3dadd( -12.9306, -89.4007, -35.4821, 0.1 ) }
    dend_9 { pt3dadd( -13.023, -89.9, -35.3345, 0.1 ) }
    dend_9 { pt3dadd( -13.1386, -90.3915, -35.186, 0.1 ) }
    dend_9 { pt3dadd( -13.4095, -91.4126, -34.8634, 0.1 ) }
    dend_9 { pt3dadd( -13.5544, -91.9579, -34.6822, 0.14 ) }
    dend_9 { pt3dadd( -13.6659, -92.4455, -34.5122, 0.28 ) }
    dend_9 { pt3dadd( -13.7064, -92.6894, -34.4271, 0.42 ) }
    dend_9 { pt3dadd( -13.7064, -92.6894, -34.4271, 0.56 ) }
    dend_9 { pt3dadd( -13.7017, -92.9429, -34.3543, 0.56 ) }
    dend_9 { pt3dadd( -13.6396, -93.5069, -34.222, 0.56 ) }
    dend_9 { pt3dadd( -13.5437, -94.0799, -34.1285, 0.7 ) }
    dend_9 { pt3dadd( -13.4506, -94.5927, -34.0767, 0.56 ) }
    dend_9 { pt3dadd( -13.3581, -95.1101, -34.045, 0.42 ) }
    dend_9 { pt3dadd( -13.2736, -95.618, -34.0279, 0.28 ) }
    dend_9 { pt3dadd( -13.1929, -96.1361, -34.026, 0.14 ) }
    dend_9 { pt3dadd( -13.0613, -97.2021, -34.0674, 0.1 ) }
    dend_9 { pt3dadd( -13.0114, -97.7239, -34.1008, 0.1 ) }
    dend_9 { pt3dadd( -12.97, -98.2493, -34.134, 0.1 ) }
    dend_9 { pt3dadd( -12.942, -98.774, -34.1575, 0.14 ) }
    dend_9 { pt3dadd( -12.942, -98.774, -34.1575, 0.28 ) }
    dend_9 { pt3dadd( -12.9488, -99.1396, -34.1376, 0.56 ) }
    dend_9 { pt3dadd( -12.9803, -99.6614, -34.0704, 0.56 ) }
    dend_9 { pt3dadd( -13.0081, -100.186, -34.0005, 0.42 ) }
    dend_9 { pt3dadd( -13.0308, -100.707, -33.9279, 0.28 ) }
    dend_9 { pt3dadd( -13.0469, -101.222, -33.8524, 0.14 ) }
    dend_9 { pt3dadd( -13.0487, -101.741, -33.7672, 0.28 ) }
    dend_9 { pt3dadd( -13.0609, -102.257, -33.65, 0.28 ) }
    dend_9 { pt3dadd( -13.111, -102.75, -33.4773, 0.14 ) }
    dend_9 { pt3dadd( -13.203, -103.22, -33.2651, 0.1 ) }
    dend_9 { pt3dadd( -13.3448, -103.649, -32.9989, 0.1 ) }
    dend_9 { pt3dadd( -13.4649, -103.93, -32.7917, 0.1 ) }
    dend_9 { pt3dadd( -13.8298, -104.658, -32.2195, 0.84 ) }
    dend_9 { pt3dadd( -14.2327, -105.445, -31.6278, 0.7 ) }
    dend_9 { pt3dadd( -14.4548, -105.9, -31.3313, 0.56 ) }
    dend_9 { pt3dadd( -14.8511, -106.78, -30.8682, 0.42 ) }
    dend_9 { pt3dadd( -14.7093, -107.084, -31.2399, 0.28 ) }
    dend_9 { pt3dadd( -14.5313, -107.396, -31.6831, 0.14 ) }
    dend_9 { pt3dadd( -14.2209, -107.875, -32.4285, 0.1 ) }
    dend_9 { pt3dadd( -13.5791, -108.745, -33.9195, 0.1 ) }
    dend_9 { pt3dadd( -12.8943, -109.566, -35.415, 0.1 ) }
    dend_9 { pt3dadd( -12.5194, -109.989, -36.2044, 0.1 ) }
    dend_9 { pt3dadd( -12.162, -110.385, -36.9313, 0.14 ) }
    dend_9 { pt3dadd( -12.162, -110.385, -36.9313, 0.28 ) }
    dend_9 { pt3dadd( -12.0649, -110.535, -37.1138, 0.84 ) }
    dend_9 { pt3dadd( -11.922, -111.041, -37.3485, 0.7 ) }
    dend_9 { pt3dadd( -11.9086, -111.567, -37.3727, 0.56 ) }
    dend_9 { pt3dadd( -11.9432, -112.095, -37.3422, 0.42 ) }
    dend_9 { pt3dadd( -12.0124, -112.607, -37.3001, 0.28 ) }
    dend_9 { pt3dadd( -12.1172, -113.19, -37.2683, 0.14 ) }
    dend_9 { pt3dadd( -12.2504, -113.761, -37.2562, 0.1 ) }
    dend_9 { pt3dadd( -12.3905, -114.336, -37.293, 0.1 ) }
    dend_9 { pt3dadd( -12.462, -114.588, -37.3129, 0.1 ) }
    dend_9 { pt3dadd( -12.6398, -115.142, -37.3621, 0.1 ) }
    dend_9 { pt3dadd( -12.8483, -115.697, -37.3712, 0.1 ) }
    dend_9 { pt3dadd( -13.076, -116.245, -37.3375, 0.1 ) }
    dend_9 { pt3dadd( -13.4608, -117.132, -37.2181, 0.14 ) }
    dend_9 { pt3dadd( -13.855, -118.046, -37.0394, 0.56 ) }
    dend_9 { pt3dadd( -14.0759, -118.582, -36.9113, 0.42 ) }
    dend_9 { pt3dadd( -14.4413, -119.557, -36.6335, 0.28 ) }
    dend_9 { pt3dadd( -14.6074, -120.089, -36.4605, 0.14 ) }
    dend_9 { pt3dadd( -14.7279, -120.572, -36.2938, 0.28 ) }
    dend_9 { pt3dadd( -14.8221, -121.064, -36.1254, 0.42 ) }
    dend_9 { pt3dadd( -14.8626, -121.571, -35.9904, 0.28 ) }
    dend_9 { pt3dadd( -14.8726, -122.076, -35.8691, 0.28 ) }
    dend_9 { pt3dadd( -14.8521, -122.65, -35.761, 0.28 ) }
    dend_9 { pt3dadd( -14.823, -123.166, -35.657, 0.42 ) }
    dend_9 { pt3dadd( -14.7952, -123.681, -35.5543, 0.28 ) }
    dend_9 { pt3dadd( -14.7716, -124.196, -35.4539, 0.42 ) }
    dend_9 { pt3dadd( -14.7716, -124.196, -35.4539, 0.56 ) }
    dend_9 { pt3dadd( -14.7741, -124.451, -35.3856, 0.56 ) }
    dend_9 { pt3dadd( -14.7993, -124.951, -35.2202, 0.42 ) }
    dend_9 { pt3dadd( -14.831, -125.441, -35.0337, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_9 { pt3dadd( -14.8651, -125.917, -34.8394, 0.14 ) }
    dend_9 { pt3dadd( -14.9006, -126.402, -34.6386, 0.1 ) }
    dend_9 { pt3dadd( -14.9553, -127.419, -34.2182, 0.1 ) }
    dend_9 { pt3dadd( -14.9736, -127.905, -34.0188, 0.1 ) }
    dend_9 { pt3dadd( -14.9844, -128.392, -33.8257, 0.1 ) }
    dend_9 { pt3dadd( -14.9788, -128.885, -33.6391, 0.1 ) }
    dend_9 { pt3dadd( -14.9413, -129.386, -33.493, 0.1 ) }
    dend_9 { pt3dadd( -14.8926, -129.951, -33.3569, 0.1 ) }
    dend_9 { pt3dadd( -14.8418, -130.469, -33.2683, 0.1 ) }
    dend_9 { pt3dadd( -14.8082, -130.977, -33.1844, 0.14 ) }
    dend_9 { pt3dadd( -14.7906, -131.567, -33.0907, 0.28 ) }
    dend_9 { pt3dadd( -14.7994, -132.529, -32.9445, 0.42 ) }
    dend_9 { pt3dadd( -14.8478, -133.529, -32.7988, 0.84 ) }
    dend_9 { pt3dadd( -14.8925, -134.052, -32.7257, 0.7 ) }
    dend_9 { pt3dadd( -14.9499, -134.628, -32.6411, 0.56 ) }
    dend_9 { pt3dadd( -15.0148, -135.146, -32.5663, 0.42 ) }
    dend_9 { pt3dadd( -15.0884, -135.665, -32.4905, 0.28 ) }
    dend_9 { pt3dadd( -15.1569, -136.182, -32.4075, 0.14 ) }
    dend_9 { pt3dadd( -15.1981, -136.706, -32.3459, 0.1 ) }
    dend_9 { pt3dadd( -15.2165, -137.232, -32.3113, 0.14 ) }
    dend_9 { pt3dadd( -15.2125, -137.814, -32.2951, 0.1 ) }
    dend_9 { pt3dadd( -15.2053, -138.341, -32.2913, 0.1 ) }
    dend_9 { pt3dadd( -15.1928, -138.869, -32.3013, 0.1 ) }
    dend_9 { pt3dadd( -15.1713, -139.394, -32.3281, 0.1 ) }
    dend_9 { pt3dadd( -15.0975, -140.458, -32.4258, 0.14 ) }
    dend_9 { pt3dadd( -15.0661, -140.717, -32.4627, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 26/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.301, -62.5308, -38.8792, 0.1 ) }
    dend_8 { pt3dadd( -10.1916, -62.669, -39.1503, 0.1 ) }
    dend_8 { pt3dadd( -9.96988, -62.8881, -39.7107, 0.1 ) }
    dend_8 { pt3dadd( -9.52287, -63.256, -40.8865, 0.1 ) }
    dend_8 { pt3dadd( -9.30325, -63.4164, -41.4652, 0.1 ) }
    dend_8 { pt3dadd( -8.51953, -63.9684, -43.5843, 0.1 ) }
    dend_8 { pt3dadd( -8.11558, -64.2451, -44.7057, 0.1 ) }
    dend_8 { pt3dadd( -7.72828, -64.4998, -45.7946, 0.1 ) }
    dend_8 { pt3dadd( -6.94358, -65.0153, -47.9927, 0.1 ) }
    dend_8 { pt3dadd( -6.53348, -65.3017, -49.1097, 0.14 ) }
    dend_8 { pt3dadd( -6.13179, -65.6134, -50.1808, 0.1 ) }
    dend_8 { pt3dadd( -5.29241, -66.4282, -52.2726, 0.14 ) }
    dend_8 { pt3dadd( -5.06208, -66.705, -52.8097, 0.1 ) }
    dend_8 { pt3dadd( -4.8221, -67.0568, -53.297, 0.1 ) }
    dend_8 { pt3dadd( -4.56058, -67.5026, -53.6831, 0.1 ) }
    dend_8 { pt3dadd( -4.41083, -67.7604, -53.8183, 0.1 ) }
    dend_8 { pt3dadd( -4.06186, -68.3095, -53.947, 0.1 ) }
    dend_8 { pt3dadd( -3.66436, -68.8342, -53.9421, 0.1 ) }
    dend_8 { pt3dadd( -2.71192, -69.8323, -53.8956, 0.14 ) }
    dend_8 { pt3dadd( -1.75869, -70.636, -53.9238, 0.1 ) }
    dend_8 { pt3dadd( -1.17973, -71.0394, -54.1106, 0.1 ) }
    dend_8 { pt3dadd( -0.828421, -71.2525, -54.2903, 0.1 ) }
    dend_8 { pt3dadd( -0.156022, -71.6232, -54.7863, 0.1 ) }
    dend_8 { pt3dadd( 0.160702, -71.7901, -55.0623, 0.1 ) }
    dend_8 { pt3dadd( 0.959278, -72.2268, -55.8936, 0.1 ) }
    dend_8 { pt3dadd( 2.42532, -73.0596, -57.599, 0.1 ) }
    dend_8 { pt3dadd( 2.69264, -73.2167, -57.9332, 0.1 ) }
    dend_8 { pt3dadd( 3.48847, -73.659, -58.927, 0.1 ) }
    dend_8 { pt3dadd( 3.75692, -73.7989, -59.2671, 0.1 ) }
    dend_8 { pt3dadd( 4.59626, -74.1848, -60.246, 0.1 ) }
    dend_8 { pt3dadd( 4.90785, -74.3032, -60.5633, 0.1 ) }
    dend_8 { pt3dadd( 5.97149, -74.628, -61.4968, 0.1 ) }
    dend_8 { pt3dadd( 6.4554, -74.7488, -61.8958, 0.1 ) }
    dend_8 { pt3dadd( 7.44224, -74.9355, -62.5985, 0.1 ) }
    dend_8 { pt3dadd( 7.97792, -75.0216, -62.9402, 0.1 ) }
    dend_8 { pt3dadd( 9.16504, -75.1778, -63.5421, 0.14 ) }
    dend_8 { pt3dadd( 9.5818, -75.2316, -63.712, 0.28 ) }
    dend_8 { pt3dadd( 10.246, -75.3275, -63.9369, 0.14 ) }
    dend_8 { pt3dadd( 10.9207, -75.4537, -64.1455, 0.1 ) }
    dend_8 { pt3dadd( 11.3452, -75.539, -64.2434, 0.1 ) }
    dend_8 { pt3dadd( 12.0324, -75.6987, -64.3888, 0.1 ) }
    dend_8 { pt3dadd( 12.7243, -75.8646, -64.4877, 0.1 ) }
    dend_8 { pt3dadd( 13.8961, -76.1386, -64.7118, 0.1 ) }
    dend_8 { pt3dadd( 14.3272, -76.2455, -64.831, 0.14 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 70/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -38.5283, 112.564, -7.87272, 0.1 ) }
    dend_77 { pt3dadd( -38.952, 113.144, -7.28868, 0.1 ) }
    dend_77 { pt3dadd( -39.3747, 113.764, -6.74139, 0.1 ) }
    dend_77 { pt3dadd( -39.5725, 114.084, -6.50073, 0.1 ) }
    dend_77 { pt3dadd( -39.9832, 114.797, -6.06137, 0.1 ) }
    dend_77 { pt3dadd( -40.2028, 115.212, -5.85212, 0.1 ) }
    dend_77 { pt3dadd( -40.2028, 115.212, -5.85212, 0.1 ) }
    dend_77 { pt3dadd( -40.41, 115.651, -5.69622, 0.1 ) }
    dend_77 { pt3dadd( -40.5876, 116.062, -5.58547, 0.1 ) }
    dend_77 { pt3dadd( -40.773, 116.525, -5.47082, 0.1 ) }
    dend_77 { pt3dadd( -40.9156, 116.956, -5.37904, 0.1 ) }
    dend_77 { pt3dadd( -41.1426, 117.858, -5.21315, 0.1 ) }
    dend_77 { pt3dadd( -41.1853, 118.074, -5.16578, 0.14 ) }
    dend_77 { pt3dadd( -41.2474, 118.519, -5.054, 0.1 ) }
    dend_77 { pt3dadd( -41.296, 119.022, -4.9268, 0.1 ) }
    dend_77 { pt3dadd( -41.3143, 119.521, -4.80323, 0.1 ) }
    dend_77 { pt3dadd( -41.3004, 120.391, -4.60997, 0.14 ) }
    dend_77 { pt3dadd( -41.2495, 121.325, -4.44448, 0.28 ) }
    dend_77 { pt3dadd( -41.2233, 121.783, -4.35586, 0.14 ) }
    dend_77 { pt3dadd( -41.2281, 122.225, -4.24492, 0.1 ) }
    dend_77 { pt3dadd( -41.2736, 122.723, -4.10094, 0.1 ) }
    dend_77 { pt3dadd( -41.3523, 123.215, -3.94587, 0.1 ) }
    dend_77 { pt3dadd( -41.4583, 123.627, -3.78234, 0.14 ) }
    dend_77 { pt3dadd( -41.5532, 123.91, -3.64941, 0.1 ) }
    dend_77 { pt3dadd( -41.8921, 124.698, -3.21062, 0.1 ) }
    dend_77 { pt3dadd( -42.0736, 125.055, -2.99198, 0.1 ) }
    dend_77 { pt3dadd( -42.2715, 125.406, -2.77307, 0.1 ) }
    dend_77 { pt3dadd( -42.6751, 126.122, -2.33153, 0.1 ) }
    dend_77 { pt3dadd( -43.0571, 126.846, -1.88582, 0.1 ) }
    dend_77 { pt3dadd( -43.2424, 127.201, -1.66626, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_77 { pt3dadd( -43.3297, 127.385, -1.56077, 0.1 ) }
    dend_77 { pt3dadd( -43.5048, 127.757, -1.35909, 0.1 ) }
    dend_77 { pt3dadd( -43.7099, 128.19, -1.17098, 0.1 ) }
    dend_77 { pt3dadd( -43.8026, 128.392, -1.11743, 0.1 ) }
    dend_77 { pt3dadd( -44.2301, 129.247, -0.993071, 0.28 ) }
    dend_77 { pt3dadd( -44.5007, 129.688, -0.966687, 0.14 ) }
    dend_77 { pt3dadd( -44.7712, 130.043, -0.951081, 0.28 ) }
    dend_77 { pt3dadd( -45.1924, 130.525, -0.941681, 0.14 ) }
    dend_77 { pt3dadd( -45.4195, 130.75, -0.928159, 0.1 ) }
    dend_77 { pt3dadd( -45.6478, 130.974, -0.908708, 0.1 ) }
    dend_77 { pt3dadd( -46.0909, 131.432, -0.859259, 0.1 ) }
    dend_77 { pt3dadd( -46.749, 132.104, -0.730244, 0.1 ) }
    dend_77 { pt3dadd( -46.9079, 132.261, -0.689281, 0.1 ) }
    dend_77 { pt3dadd( -47.5567, 132.913, -0.453333, 0.1 ) }
    dend_77 { pt3dadd( -47.8588, 133.224, -0.318185, 0.1 ) }
    dend_77 { pt3dadd( -48.1424, 133.529, -0.162463, 0.14 ) }
    dend_77 { pt3dadd( -48.1424, 133.529, -0.162463, 0.28 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 17/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -38.5283, 112.564, -7.87272, 0.1 ) }
    dend_76 { pt3dadd( -39.8003, 112.489, -7.64997, 0.1 ) }
    dend_76 { pt3dadd( -40.4784, 112.433, -7.51132, 0.1 ) }
    dend_76 { pt3dadd( -41.075, 112.354, -7.36322, 0.1 ) }
    dend_76 { pt3dadd( -42.2842, 112.171, -7.07572, 0.1 ) }
    dend_76 { pt3dadd( -43.5039, 111.971, -6.82073, 0.1 ) }
    dend_76 { pt3dadd( -44.1056, 111.869, -6.71036, 0.1 ) }
    dend_76 { pt3dadd( -45.3309, 111.618, -6.53326, 0.14 ) }
    dend_76 { pt3dadd( -46.5944, 111.333, -6.38908, 0.28 ) }
    dend_76 { pt3dadd( -47.1945, 111.187, -6.35773, 0.14 ) }
    dend_76 { pt3dadd( -47.7984, 111.041, -6.37977, 0.1 ) }
    dend_76 { pt3dadd( -48.0974, 110.977, -6.41505, 0.1 ) }
    dend_76 { pt3dadd( -48.6976, 110.886, -6.47446, 0.14 ) }
    dend_76 { pt3dadd( -49.306, 110.828, -6.5588, 0.28 ) }
    dend_76 { pt3dadd( -49.7443, 110.809, -6.62266, 0.42 ) }
    dend_76 { pt3dadd( -51.0295, 110.793, -6.77718, 0.1 ) }
    dend_76 { pt3dadd( -51.7167, 110.799, -6.86042, 0.1 ) }
    dend_76 { pt3dadd( -53.0053, 110.839, -6.97194, 0.14 ) }
    dend_76 { pt3dadd( -53.6217, 110.868, -7.01994, 0.1 ) }
    dend_76 { pt3dadd( -54.2332, 110.91, -7.08016, 0.1 ) }
    dend_76 { pt3dadd( -54.9047, 110.963, -7.18094, 0.1 ) }
    dend_76 { pt3dadd( -55.5037, 111.001, -7.31897, 0.1 ) }
    dend_76 { pt3dadd( -56.7612, 111.067, -7.63745, 0.1 ) }
    dend_76 { pt3dadd( -57.3464, 111.116, -7.82276, 0.14 ) }
    dend_76 { pt3dadd( -57.9911, 111.208, -8.02228, 0.1 ) }
    dend_76 { pt3dadd( -58.5626, 111.343, -8.20906, 0.14 ) }
    dend_76 { pt3dadd( -58.8394, 111.437, -8.31145, 0.1 ) }
    dend_76 { pt3dadd( -59.0984, 111.562, -8.42872, 0.1 ) }
    dend_76 { pt3dadd( -59.7725, 111.947, -8.81923, 0.1 ) }
    dend_76 { pt3dadd( -60.1355, 112.148, -8.9802, 0.1 ) }
    dend_76 { pt3dadd( -60.8674, 112.539, -9.24177, 0.1 ) }
    dend_76 { pt3dadd( -61.2447, 112.732, -9.3596, 0.1 ) }
    dend_76 { pt3dadd( -61.8442, 113.017, -9.53222, 0.1 ) }
    dend_76 { pt3dadd( -62.397, 113.253, -9.68783, 0.1 ) }
    dend_76 { pt3dadd( -63.5786, 113.697, -10.0097, 0.1 ) }
    dend_76 { pt3dadd( -63.9718, 113.825, -10.1223, 0.1 ) }
    dend_76 { pt3dadd( -64.6123, 114.001, -10.3176, 0.14 ) }
    dend_76 { pt3dadd( -64.6123, 114.001, -10.3176, 0.28 ) }
    dend_76 { pt3dadd( -65.2328, 114.125, -10.5752, 0.28 ) }
    dend_76 { pt3dadd( -65.843, 114.221, -10.8869, 0.14 ) }
    dend_76 { pt3dadd( -66.3622, 114.264, -11.2158, 0.1 ) }
    dend_76 { pt3dadd( -66.6229, 114.265, -11.3831, 0.14 ) }
    dend_76 { pt3dadd( -67.14, 114.237, -11.7184, 0.1 ) }
    dend_76 { pt3dadd( -67.6709, 114.172, -12.012, 0.1 ) }
    dend_76 { pt3dadd( -68.2203, 114.069, -12.2765, 0.1 ) }
    dend_76 { pt3dadd( -68.7796, 113.943, -12.5179, 0.1 ) }
    dend_76 { pt3dadd( -69.3414, 113.811, -12.7428, 0.14 ) }
    dend_76 { pt3dadd( -69.9162, 113.664, -12.9204, 0.28 ) }
    dend_76 { pt3dadd( -71.1423, 113.33, -13.2238, 0.42 ) }
    dend_76 { pt3dadd( -71.7239, 113.154, -13.3487, 0.28 ) }
    dend_76 { pt3dadd( -72.2936, 112.96, -13.4659, 0.14 ) }
    dend_76 { pt3dadd( -72.8615, 112.739, -13.5907, 0.1 ) }
    dend_76 { pt3dadd( -74.0369, 112.238, -13.8733, 0.1 ) }
    dend_76 { pt3dadd( -74.5973, 111.989, -13.9993, 0.1 ) }
    dend_76 { pt3dadd( -75.2087, 111.702, -14.1545, 0.1 ) }
    dend_76 { pt3dadd( -75.8252, 111.401, -14.2986, 0.1 ) }
    dend_76 { pt3dadd( -76.4357, 111.085, -14.4425, 0.14 ) }
    dend_76 { pt3dadd( -76.4357, 111.085, -14.4425, 0.28 ) }
    dend_76 { pt3dadd( -77.4876, 110.471, -14.8192, 0.1 ) }
    dend_76 { pt3dadd( -78.0652, 110.11, -15.0282, 0.1 ) }
    dend_76 { pt3dadd( -78.5559, 109.789, -15.2192, 0.14 ) }
    dend_76 { pt3dadd( -78.9041, 109.546, -15.3738, 0.28 ) }
    dend_76 { pt3dadd( -79.4259, 109.169, -15.6445, 0.14 ) }
    dend_76 { pt3dadd( -79.9315, 108.784, -15.9531, 0.1 ) }
    dend_76 { pt3dadd( -80.2255, 108.542, -16.1687, 0.14 ) }
    dend_76 { pt3dadd( -80.7068, 108.163, -16.5199, 0.1 ) }
    dend_76 { pt3dadd( -81.1918, 107.804, -16.8711, 0.1 ) }
    dend_76 { pt3dadd( -81.643, 107.512, -17.1932, 0.1 ) }
    dend_76 { pt3dadd( -82.165, 107.221, -17.5608, 0.1 ) }
    dend_76 { pt3dadd( -82.6954, 106.971, -17.9292, 0.1 ) }
    dend_76 { pt3dadd( -83.1862, 106.79, -18.2646, 0.1 ) }
    dend_76 { pt3dadd( -83.6891, 106.647, -18.6034, 0.1 ) }
    dend_76 { pt3dadd( -84.196, 106.537, -18.9412, 0.1 ) }
    dend_76 { pt3dadd( -84.7111, 106.465, -19.2802, 0.1 ) }
    dend_76 { pt3dadd( -85.219, 106.432, -19.6101, 0.1 ) }
    dend_76 { pt3dadd( -85.8013, 106.423, -19.9852, 0.1 ) }
    dend_76 { pt3dadd( -86.0597, 106.43, -20.1504, 0.1 ) }
    dend_76 { pt3dadd( -86.5814, 106.473, -20.4809, 0.1 ) }
    dend_76 { pt3dadd( -87.1568, 106.54, -20.8431, 0.1 ) }
    dend_76 { pt3dadd( -87.677, 106.622, -21.1683, 0.14 ) }
    dend_76 { pt3dadd( -87.677, 106.622, -21.1683, 0.28 ) }
    dend_76 { pt3dadd( -88.257, 106.751, -21.5266, 0.1 ) }
    dend_76 { pt3dadd( -88.8247, 106.891, -21.8759, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_76 { pt3dadd( -89.3362, 107.033, -22.1888, 0.1 ) }
    dend_76 { pt3dadd( -89.9095, 107.2, -22.5386, 0.1 ) }
    dend_76 { pt3dadd( -90.4732, 107.38, -22.8809, 0.1 ) }
    dend_76 { pt3dadd( -91.0452, 107.556, -23.229, 0.1 ) }
    dend_76 { pt3dadd( -91.3012, 107.633, -23.3849, 0.1 ) }
    dend_76 { pt3dadd( -91.8652, 107.811, -23.7276, 0.1 ) }
    dend_76 { pt3dadd( -92.434, 108.005, -24.0716, 0.1 ) }
    dend_76 { pt3dadd( -92.9972, 108.187, -24.4133, 0.1 ) }
    dend_76 { pt3dadd( -93.5082, 108.348, -24.7237, 0.1 ) }
    dend_76 { pt3dadd( -94.0806, 108.532, -25.0712, 0.1 ) }
    dend_76 { pt3dadd( -94.4332, 108.647, -25.285, 0.1 ) }
    dend_76 { pt3dadd( -95.0058, 108.83, -25.6326, 0.1 ) }
    dend_76 { pt3dadd( -95.5167, 108.992, -25.9431, 0.14 ) }
    dend_76 { pt3dadd( -96.0801, 109.173, -26.2849, 0.28 ) }
    dend_76 { pt3dadd( -96.3311, 109.264, -26.4361, 0.14 ) }
    // Section: dend_72, id: dend_72, parent: dend_64 (entry count 15/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -5.49722, 80.4134, -4.89165, 0.98 ) }
    dend_72 { pt3dadd( -4.9373, 81.8307, -4.66359, 0.98 ) }
    dend_72 { pt3dadd( -4.65766, 82.602, -4.57709, 0.84 ) }
    dend_72 { pt3dadd( -4.412, 83.3766, -4.51191, 0.7 ) }
    dend_72 { pt3dadd( -4.26406, 83.8768, -4.48094, 0.56 ) }
    dend_72 { pt3dadd( -4.05461, 84.6619, -4.44294, 0.7 ) }
    dend_72 { pt3dadd( -3.87397, 85.3745, -4.41693, 0.56 ) }
    dend_72 { pt3dadd( -3.70741, 86.1842, -4.43762, 0.42 ) }
    dend_72 { pt3dadd( -3.58338, 86.9095, -4.45192, 0.28 ) }
    dend_72 { pt3dadd( -3.48229, 87.7157, -4.40867, 0.14 ) }
    dend_72 { pt3dadd( -3.42391, 88.4434, -4.32301, 0.1 ) }
    dend_72 { pt3dadd( -3.3896, 89.2554, -4.18278, 0.14 ) }
    dend_72 { pt3dadd( -3.39421, 89.9593, -4.0298, 0.28 ) }
    dend_72 { pt3dadd( -3.41656, 90.3153, -3.94096, 0.14 ) }
    dend_72 { pt3dadd( -3.56641, 91.7937, -3.55186, 0.1 ) }
    dend_72 { pt3dadd( -3.66575, 92.4967, -3.36733, 0.1 ) }
    dend_72 { pt3dadd( -3.76437, 93.2005, -3.19829, 0.1 ) }
    dend_72 { pt3dadd( -3.86038, 93.9917, -3.03896, 0.1 ) }
    dend_72 { pt3dadd( -3.91977, 94.7236, -2.97695, 0.1 ) }
    dend_72 { pt3dadd( -3.93944, 95.4575, -3.00132, 0.1 ) }
    dend_72 { pt3dadd( -3.91005, 96.1917, -3.07686, 0.1 ) }
    dend_72 { pt3dadd( -3.82483, 97.0034, -3.09139, 0.1 ) }
    dend_72 { pt3dadd( -3.69391, 97.8172, -3.03073, 0.14 ) }
    dend_72 { pt3dadd( -3.42089, 99.18, -2.81172, 0.28 ) }
    dend_72 { pt3dadd( -3.35208, 99.5324, -2.72777, 0.42 ) }
    dend_72 { pt3dadd( -3.14467, 100.952, -2.29831, 0.1 ) }
    dend_72 { pt3dadd( -3.02934, 102.364, -1.8124, 0.14 ) }
    dend_72 { pt3dadd( -3.02349, 103.051, -1.56323, 0.1 ) }
    dend_72 { pt3dadd( -3.05378, 103.723, -1.31546, 0.1 ) }
    dend_72 { pt3dadd( -3.11076, 104.412, -1.07288, 0.1 ) }
    dend_72 { pt3dadd( -3.20563, 105.195, -0.880466, 0.1 ) }
    dend_72 { pt3dadd( -3.30984, 105.919, -0.802608, 0.1 ) }
    dend_72 { pt3dadd( -3.41927, 106.643, -0.7778, 0.1 ) }
    dend_72 { pt3dadd( -3.46475, 107.008, -0.76691, 0.14 ) }
    dend_72 { pt3dadd( -3.53982, 107.733, -0.694154, 0.7 ) }
    dend_72 { pt3dadd( -3.59731, 108.458, -0.5777, 0.7 ) }
    dend_72 { pt3dadd( -3.63599, 109.162, -0.432692, 0.84 ) }
    dend_72 { pt3dadd( -3.67409, 109.877, -0.262344, 0.98 ) }
    dend_72 { pt3dadd( -3.70183, 110.386, -0.132856, 0.98 ) }
    dend_72 { pt3dadd( -3.75908, 111.882, 0.241796, 0.84 ) }
    dend_72 { pt3dadd( -3.77836, 112.594, 0.412545, 0.84 ) }
    dend_72 { pt3dadd( -3.79417, 113.313, 0.568494, 0.7 ) }
    dend_72 { pt3dadd( -3.78799, 114.024, 0.74555, 0.56 ) }
    dend_72 { pt3dadd( -3.75639, 114.722, 0.921177, 0.56 ) }
    dend_72 { pt3dadd( -3.68901, 115.522, 1.1069, 0.56 ) }
    dend_72 { pt3dadd( -3.58092, 116.236, 1.23872, 0.42 ) }
    dend_72 { pt3dadd( -3.4387, 116.945, 1.38458, 0.42 ) }
    dend_72 { pt3dadd( -3.07361, 118.344, 1.90386, 0.56 ) }
    dend_72 { pt3dadd( -2.86055, 119.046, 2.2654, 0.56 ) }
    dend_72 { pt3dadd( -2.72154, 119.458, 2.52021, 0.7 ) }
    dend_72 { pt3dadd( -2.48949, 120.107, 2.95656, 0.7 ) }
    dend_72 { pt3dadd( -2.48949, 120.107, 2.95656, 0.84 ) }
    dend_72 { pt3dadd( -1.57739, 122.313, 4.2007, 1.12 ) }
    dend_72 { pt3dadd( -1.4449, 122.627, 4.3264, 1.12 ) }
    dend_72 { pt3dadd( -1.15473, 123.35, 4.54254, 0.98 ) }
    dend_72 { pt3dadd( -0.896604, 124.126, 4.66719, 0.84 ) }
    dend_72 { pt3dadd( -0.768423, 124.621, 4.66592, 0.84 ) }
    dend_72 { pt3dadd( -0.500292, 126.262, 4.44153, 0.84 ) }
    dend_72 { pt3dadd( -0.476543, 126.614, 4.3481, 0.7 ) }
    dend_72 { pt3dadd( -0.481747, 127.407, 4.16151, 0.56 ) }
    dend_72 { pt3dadd( -0.56446, 128.222, 4.01258, 0.42 ) }
    dend_72 { pt3dadd( -0.68978, 128.926, 3.93461, 0.28 ) }
    dend_72 { pt3dadd( -0.847454, 129.722, 3.90504, 0.14 ) }
    dend_72 { pt3dadd( -0.990417, 130.442, 3.93544, 0.28 ) }
    dend_72 { pt3dadd( -0.990417, 130.442, 3.93544, 0.42 ) }
    dend_72 { pt3dadd( -1.03689, 131.175, 3.94977, 0.1 ) }
    dend_72 { pt3dadd( -1.04352, 131.913, 3.95748, 0.1 ) }
    dend_72 { pt3dadd( -1.0285, 132.741, 3.96236, 0.1 ) }
    dend_72 { pt3dadd( -0.985356, 133.467, 3.96162, 0.1 ) }
    dend_72 { pt3dadd( -0.909222, 134.292, 3.95623, 0.14 ) }
    dend_72 { pt3dadd( -0.807262, 135.023, 3.99774, 0.28 ) }
    dend_72 { pt3dadd( -0.735723, 135.38, 4.03856, 0.42 ) }
    dend_72 { pt3dadd( -0.552774, 136.073, 4.15151, 0.56 ) }
    dend_72 { pt3dadd( -0.307314, 136.847, 4.30548, 0.56 ) }
    dend_72 { pt3dadd( -0.180053, 137.185, 4.37696, 0.42 ) }
    dend_72 { pt3dadd( 0.375412, 138.607, 4.58117, 0.56 ) }
    dend_72 { pt3dadd( 0.683139, 139.375, 4.58913, 0.42 ) }
    dend_72 { pt3dadd( 0.884565, 139.844, 4.60041, 0.28 ) }
    dend_72 { pt3dadd( 1.22878, 140.592, 4.61151, 0.42 ) }
    dend_72 { pt3dadd( 1.55288, 141.353, 4.59881, 0.56 ) }
    dend_72 { pt3dadd( 1.98725, 142.636, 4.49267, 0.7 ) }
    dend_72 { pt3dadd( 2.26289, 143.883, 4.19734, 0.7 ) }
    dend_72 { pt3dadd( 2.65612, 146.493, 3.96825, 0.56 ) }
    dend_72 { pt3dadd( 2.7161, 146.84, 4.07494, 0.7 ) }
    dend_72 { pt3dadd( 2.85939, 147.476, 4.3811, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_72 { pt3dadd( 3.0366, 148.065, 4.76434, 0.7 ) }
    dend_72 { pt3dadd( 3.24047, 148.641, 5.15875, 0.56 ) }
    dend_72 { pt3dadd( 3.45987, 149.308, 5.57695, 0.42 ) }
    dend_72 { pt3dadd( 3.83452, 150.654, 6.20082, 0.28 ) }
    dend_72 { pt3dadd( 3.94436, 151.115, 6.41044, 0.14 ) }
    dend_72 { pt3dadd( 4.22757, 152.487, 7.03128, 0.1 ) }
    dend_72 { pt3dadd( 4.29183, 152.96, 7.23344, 0.14 ) }
    dend_72 { pt3dadd( 4.31002, 153.72, 7.51656, 0.56 ) }
    dend_72 { pt3dadd( 4.23637, 154.423, 7.71542, 0.42 ) }
    dend_72 { pt3dadd( 4.08721, 155.197, 7.90534, 0.28 ) }
    dend_72 { pt3dadd( 3.91956, 155.887, 8.08192, 0.14 ) }
    dend_72 { pt3dadd( 3.72149, 156.651, 8.25979, 0.1 ) }
    dend_72 { pt3dadd( 3.56563, 157.42, 8.4597, 0.1 ) }
    dend_72 { pt3dadd( 3.49822, 158.124, 8.65583, 0.1 ) }
    dend_72 { pt3dadd( 3.56275, 159.564, 9.06311, 0.14 ) }
    dend_72 { pt3dadd( 3.56275, 159.564, 9.06311, 0.28 ) }
    dend_72 { pt3dadd( 3.85868, 160.301, 9.22368, 0.84 ) }
    dend_72 { pt3dadd( 4.26841, 161.002, 9.34489, 0.7 ) }
    dend_72 { pt3dadd( 4.56461, 161.418, 9.3877, 0.56 ) }
    dend_72 { pt3dadd( 5.05098, 162.077, 9.39265, 0.42 ) }
    dend_72 { pt3dadd( 5.49562, 162.747, 9.32411, 0.56 ) }
    dend_72 { pt3dadd( 5.66998, 163.07, 9.29776, 0.56 ) }
    dend_72 { pt3dadd( 5.81461, 163.408, 9.27654, 0.7 ) }
    dend_72 { pt3dadd( 6.03786, 164.112, 9.24541, 0.84 ) }
    dend_72 { pt3dadd( 6.19927, 164.83, 9.22476, 0.7 ) }
    dend_72 { pt3dadd( 6.28222, 165.561, 9.2174, 0.56 ) }
    dend_72 { pt3dadd( 6.32571, 166.373, 9.21736, 0.7 ) }
    dend_72 { pt3dadd( 6.32571, 166.373, 9.21736, 0.84 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 28/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -5.49722, 80.4134, -4.89165, 0.84 ) }
    dend_65 { pt3dadd( -5.6452, 80.7154, -5.26933, 0.84 ) }
    dend_65 { pt3dadd( -5.92594, 81.2882, -5.98585, 0.7 ) }
    dend_65 { pt3dadd( -6.19828, 81.8439, -6.68092, 0.56 ) }
    dend_65 { pt3dadd( -6.45399, 82.3657, -7.33356, 0.42 ) }
    dend_65 { pt3dadd( -6.60197, 82.6676, -7.71124, 0.56 ) }
    dend_65 { pt3dadd( -6.73512, 82.9393, -8.05106, 0.42 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 10.6304, 167.153, -42.3672, 0.14 ) }
    dend_60 { pt3dadd( 10.4454, 168.431, -42.0989, 0.14 ) }
    dend_60 { pt3dadd( 10.336, 169.033, -41.9567, 0.28 ) }
    dend_60 { pt3dadd( 10.2157, 169.709, -41.7958, 0.42 ) }
    dend_60 { pt3dadd( 10.1671, 170.01, -41.7261, 0.42 ) }
    dend_60 { pt3dadd( 9.96207, 171.284, -41.4535, 0.28 ) }
    dend_60 { pt3dadd( 9.8579, 171.971, -41.3157, 0.14 ) }
    dend_60 { pt3dadd( 9.74918, 172.565, -41.1722, 0.1 ) }
    dend_60 { pt3dadd( 9.64052, 173.248, -41.0217, 0.1 ) }
    dend_60 { pt3dadd( 9.53825, 173.936, -40.9013, 0.1 ) }
    dend_60 { pt3dadd( 9.4347, 174.536, -40.7959, 0.1 ) }
    dend_60 { pt3dadd( 9.30016, 175.222, -40.6964, 0.1 ) }
    dend_60 { pt3dadd( 9.22832, 175.525, -40.643, 0.1 ) }
    dend_60 { pt3dadd( 9.06152, 176.188, -40.5067, 0.1 ) }
    dend_60 { pt3dadd( 8.90686, 176.781, -40.3716, 0.1 ) }
    dend_60 { pt3dadd( 8.60739, 177.995, -40.0747, 0.1 ) }
    dend_60 { pt3dadd( 8.50208, 178.603, -39.9558, 0.1 ) }
    dend_60 { pt3dadd( 8.43091, 179.288, -39.8595, 0.1 ) }
    dend_60 { pt3dadd( 8.41212, 179.993, -39.7903, 0.1 ) }
    dend_60 { pt3dadd( 8.43422, 180.438, -39.7666, 0.1 ) }
    dend_60 { pt3dadd( 8.52042, 181.127, -39.7558, 0.14 ) }
    dend_60 { pt3dadd( 8.75846, 182.427, -39.7852, 0.14 ) }
    dend_60 { pt3dadd( 8.86671, 183.111, -39.7542, 0.1 ) }
    dend_60 { pt3dadd( 8.9172, 183.552, -39.7114, 0.1 ) }
    dend_60 { pt3dadd( 8.96063, 184.24, -39.6059, 0.1 ) }
    dend_60 { pt3dadd( 8.94064, 184.919, -39.4191, 0.1 ) }
    dend_60 { pt3dadd( 8.85793, 185.573, -39.168, 0.1 ) }
    dend_60 { pt3dadd( 8.61824, 186.739, -38.6186, 0.1 ) }
    dend_60 { pt3dadd( 8.55028, 187.013, -38.489, 0.1 ) }
    dend_60 { pt3dadd( 8.37417, 187.634, -38.2119, 0.1 ) }
    dend_60 { pt3dadd( 8.02758, 188.805, -37.7293, 0.1 ) }
    dend_60 { pt3dadd( 7.85728, 189.376, -37.5287, 0.1 ) }
    dend_60 { pt3dadd( 7.67085, 190.024, -37.3579, 0.1 ) }
    dend_60 { pt3dadd( 7.52333, 190.629, -37.2555, 0.1 ) }
    dend_60 { pt3dadd( 7.38479, 191.236, -37.1702, 0.1 ) }
    dend_60 { pt3dadd( 7.21469, 191.915, -37.0751, 0.1 ) }
    dend_60 { pt3dadd( 7.06982, 192.522, -36.9989, 0.1 ) }
    dend_60 { pt3dadd( 6.92475, 193.114, -36.8827, 0.1 ) }
    dend_60 { pt3dadd( 6.81206, 193.538, -36.78, 0.1 ) }
    dend_60 { pt3dadd( 6.73958, 193.831, -36.6978, 0.1 ) }
    dend_60 { pt3dadd( 6.47304, 195.034, -36.3415, 0.1 ) }
    dend_60 { pt3dadd( 6.34794, 195.689, -36.1521, 0.1 ) }
    dend_60 { pt3dadd( 6.2399, 196.364, -35.9684, 0.1 ) }
    dend_60 { pt3dadd( 6.16131, 196.973, -35.8224, 0.1 ) }
    dend_60 { pt3dadd( 6.08017, 197.654, -35.695, 0.1 ) }
    dend_60 { pt3dadd( 6.04085, 198.357, -35.6356, 0.1 ) }
    dend_60 { pt3dadd( 6.08029, 199.05, -35.688, 0.1 ) }
    dend_60 { pt3dadd( 6.1106, 199.359, -35.7406, 0.1 ) }
    dend_60 { pt3dadd( 6.20053, 200.04, -35.8987, 0.1 ) }
    dend_60 { pt3dadd( 6.29351, 200.637, -36.064, 0.1 ) }
    dend_60 { pt3dadd( 6.5471, 201.849, -36.4838, 0.14 ) }
    dend_60 { pt3dadd( 6.8394, 203.045, -36.9327, 0.28 ) }
    dend_60 { pt3dadd( 6.99336, 203.608, -37.1444, 0.14 ) }
    dend_60 { pt3dadd( 7.17382, 204.235, -37.3594, 0.1 ) }
    dend_60 { pt3dadd( 7.25664, 204.524, -37.4439, 0.1 ) }
    dend_60 { pt3dadd( 7.61673, 205.87, -37.7145, 0.1 ) }
    dend_60 { pt3dadd( 7.76024, 206.555, -37.7767, 0.1 ) }
    dend_60 { pt3dadd( 7.83597, 206.994, -37.7825, 0.1 ) }
    dend_60 { pt3dadd( 7.96666, 207.677, -37.7691, 0.1 ) }
    dend_60 { pt3dadd( 8.08492, 208.37, -37.7347, 0.14 ) }
    dend_60 { pt3dadd( 8.17546, 209.057, -37.6685, 0.1 ) }
    dend_60 { pt3dadd( 8.18977, 209.369, -37.6229, 0.1 ) }
    dend_60 { pt3dadd( 8.20628, 210.071, -37.5301, 0.1 ) }
    dend_60 { pt3dadd( 8.20789, 210.505, -37.4781, 0.1 ) }
    dend_60 { pt3dadd( 8.21022, 211.118, -37.4046, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_60 { pt3dadd( 8.24755, 211.822, -37.3697, 0.1 ) }
    dend_60 { pt3dadd( 8.30944, 212.447, -37.3668, 0.1 ) }
    dend_60 { pt3dadd( 8.4001, 213.135, -37.3807, 0.1 ) }
    dend_60 { pt3dadd( 8.49273, 213.834, -37.4144, 0.1 ) }
    dend_60 { pt3dadd( 8.5414, 214.267, -37.4438, 0.1 ) }
    dend_60 { pt3dadd( 8.68114, 215.579, -37.5507, 0.1 ) }
    dend_60 { pt3dadd( 8.72225, 216.02, -37.5946, 0.1 ) }
    dend_60 { pt3dadd( 8.77221, 216.708, -37.6697, 0.14 ) }
    dend_60 { pt3dadd( 8.80326, 217.33, -37.7485, 0.1 ) }
    dend_60 { pt3dadd( 8.8071, 217.955, -37.8318, 0.1 ) }
    dend_60 { pt3dadd( 8.76206, 218.578, -37.9007, 0.1 ) }
    dend_60 { pt3dadd( 8.76206, 218.578, -37.9007, 0.14 ) }
    dend_60 { pt3dadd( 8.67835, 218.882, -37.9173, 0.56 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 13/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 10.6304, 167.153, -42.3672, 0.1 ) }
    dend_59 { pt3dadd( 9.87023, 166.365, -42.3214, 0.1 ) }
    dend_59 { pt3dadd( 9.46988, 165.948, -42.3249, 0.1 ) }
    dend_59 { pt3dadd( 9.2178, 165.677, -42.3818, 0.1 ) }
    dend_59 { pt3dadd( 8.84693, 165.254, -42.5199, 0.1 ) }
    dend_59 { pt3dadd( 8.49392, 164.822, -42.6801, 0.1 ) }
    dend_59 { pt3dadd( 8.2838, 164.536, -42.7894, 0.1 ) }
    dend_59 { pt3dadd( 8.00041, 164.063, -42.9788, 0.1 ) }
    dend_59 { pt3dadd( 7.59802, 163.174, -43.2544, 0.1 ) }
    dend_59 { pt3dadd( 7.39325, 162.469, -43.4059, 0.1 ) }
    dend_59 { pt3dadd( 7.34796, 162.206, -43.4146, 0.1 ) }
    dend_59 { pt3dadd( 7.29524, 161.682, -43.3552, 0.1 ) }
    dend_59 { pt3dadd( 7.21289, 160.624, -43.1295, 0.1 ) }
    dend_59 { pt3dadd( 7.16791, 160.117, -42.9883, 0.1 ) }
    dend_59 { pt3dadd( 7.10486, 159.56, -42.7976, 0.14 ) }
    dend_59 { pt3dadd( 6.98059, 158.523, -42.4285, 0.84 ) }
    dend_59 { pt3dadd( 6.8942, 157.966, -42.2424, 0.7 ) }
    dend_59 { pt3dadd( 6.83602, 157.617, -42.1449, 0.56 ) }
    dend_59 { pt3dadd( 6.73168, 156.874, -42.0326, 0.42 ) }
    dend_59 { pt3dadd( 6.73168, 156.874, -42.0326, 0.28 ) }
    dend_59 { pt3dadd( 6.76017, 156.609, -42.0278, 0.42 ) }
    dend_59 { pt3dadd( 6.83619, 156.355, -42.0445, 0.56 ) }
    dend_59 { pt3dadd( 7.04762, 155.808, -42.0742, 0.42 ) }
    dend_59 { pt3dadd( 7.25306, 155.32, -42.0985, 0.28 ) }
    dend_59 { pt3dadd( 7.48254, 154.781, -42.125, 0.42 ) }
    dend_59 { pt3dadd( 7.68923, 154.296, -42.1847, 0.28 ) }
    dend_59 { pt3dadd( 7.8816, 153.818, -42.239, 0.14 ) }
    dend_59 { pt3dadd( 8.07265, 153.325, -42.2899, 0.1 ) }
    dend_59 { pt3dadd( 8.26127, 152.834, -42.3347, 0.1 ) }
    dend_59 { pt3dadd( 8.45305, 152.343, -42.3715, 0.1 ) }
    dend_59 { pt3dadd( 8.80222, 151.43, -42.4255, 0.1 ) }
    dend_59 { pt3dadd( 9.14256, 150.514, -42.3763, 0.28 ) }
    dend_59 { pt3dadd( 9.31659, 150.021, -42.3063, 0.14 ) }
    dend_59 { pt3dadd( 9.48557, 149.477, -42.1474, 0.1 ) }
    dend_59 { pt3dadd( 9.6159, 149.001, -41.9676, 0.1 ) }
    dend_59 { pt3dadd( 9.73137, 148.526, -41.7706, 0.1 ) }
    dend_59 { pt3dadd( 9.94112, 147.554, -41.365, 0.1 ) }
    dend_59 { pt3dadd( 10.0484, 147.069, -41.2124, 0.1 ) }
    dend_59 { pt3dadd( 10.2895, 146.043, -40.9763, 0.1 ) }
    dend_59 { pt3dadd( 10.4426, 145.538, -41.0133, 0.1 ) }
    dend_59 { pt3dadd( 10.6356, 145.13, -41.2837, 0.1 ) }
    dend_59 { pt3dadd( 10.8404, 144.798, -41.6258, 0.1 ) }
    dend_59 { pt3dadd( 11.2399, 144.268, -42.3147, 0.1 ) }
    dend_59 { pt3dadd( 11.6832, 143.773, -43.0461, 0.1 ) }
    dend_59 { pt3dadd( 12.6205, 142.882, -44.4645, 0.1 ) }
    dend_59 { pt3dadd( 12.6205, 142.882, -44.4645, 0.14 ) }
    dend_59 { pt3dadd( 13.2771, 142.39, -45.0123, 0.42 ) }
    dend_59 { pt3dadd( 13.5573, 142.172, -45.0605, 0.28 ) }
    dend_59 { pt3dadd( 13.9699, 141.784, -44.9346, 0.14 ) }
    dend_59 { pt3dadd( 14.6568, 141.033, -44.5579, 0.1 ) }
    dend_59 { pt3dadd( 15.0107, 140.621, -44.3514, 0.1 ) }
    dend_59 { pt3dadd( 15.243, 140.357, -44.2737, 0.1 ) }
    dend_59 { pt3dadd( 15.6469, 139.938, -44.2484, 0.1 ) }
    dend_59 { pt3dadd( 16.0706, 139.538, -44.2787, 0.14 ) }
    dend_59 { pt3dadd( 16.2637, 139.365, -44.3002, 0.1 ) }
    dend_59 { pt3dadd( 16.9857, 138.688, -44.3405, 0.1 ) }
    dend_59 { pt3dadd( 17.3862, 138.273, -44.2505, 0.1 ) }
    dend_59 { pt3dadd( 17.6973, 137.888, -44.0886, 0.1 ) }
    dend_59 { pt3dadd( 17.8818, 137.614, -43.9432, 0.1 ) }
    dend_59 { pt3dadd( 18.3127, 136.86, -43.5275, 0.1 ) }
    dend_59 { pt3dadd( 18.7068, 135.977, -43.0744, 0.1 ) }
    dend_59 { pt3dadd( 18.8601, 135.524, -42.8642, 0.1 ) }
    dend_59 { pt3dadd( 18.9839, 135.041, -42.6974, 0.14 ) }
    dend_59 { pt3dadd( 19.0994, 134.531, -42.6043, 0.1 ) }
    dend_59 { pt3dadd( 19.2086, 134.021, -42.5972, 0.1 ) }
    dend_59 { pt3dadd( 19.3143, 133.506, -42.6885, 0.1 ) }
    dend_59 { pt3dadd( 19.3989, 133.005, -42.8388, 0.1 ) }
    dend_59 { pt3dadd( 19.45, 132.49, -42.9696, 0.1 ) }
    dend_59 { pt3dadd( 19.4918, 131.525, -43.1638, 0.1 ) }
    dend_59 { pt3dadd( 19.4936, 131.159, -43.2169, 0.1 ) }
    dend_59 { pt3dadd( 19.485, 130.564, -43.2698, 0.1 ) }
    dend_59 { pt3dadd( 19.4641, 129.974, -43.292, 0.1 ) }
    dend_59 { pt3dadd( 19.4237, 128.854, -43.281, 0.1 ) }
    dend_59 { pt3dadd( 19.4102, 128.323, -43.2513, 0.1 ) }
    dend_59 { pt3dadd( 19.4111, 127.792, -43.1989, 0.1 ) }
    dend_59 { pt3dadd( 19.4394, 127.264, -43.1583, 0.1 ) }
    dend_59 { pt3dadd( 19.4996, 126.68, -43.1337, 0.1 ) }
    dend_59 { pt3dadd( 19.5726, 126.155, -43.1017, 0.1 ) }
    dend_59 { pt3dadd( 19.6165, 125.893, -43.0883, 0.1 ) }
    dend_59 { pt3dadd( 19.7047, 125.372, -43.0372, 0.1 ) }
    dend_59 { pt3dadd( 19.7955, 124.861, -42.9704, 0.1 ) }
    dend_59 { pt3dadd( 19.8932, 124.347, -42.8911, 0.1 ) }
    dend_59 { pt3dadd( 20.0912, 123.298, -42.7155, 0.1 ) }
    dend_59 { pt3dadd( 20.1812, 122.78, -42.6315, 0.1 ) }
    dend_59 { pt3dadd( 20.2562, 122.261, -42.5598, 0.1 ) }
    dend_59 { pt3dadd( 20.3096, 121.733, -42.5072, 0.1 ) }
    dend_59 { pt3dadd( 20.3281, 121.47, -42.4951, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_59 { pt3dadd( 20.3402, 121.1, -42.5042, 0.7 ) }
    dend_59 { pt3dadd( 20.3371, 120.568, -42.5603, 0.56 ) }
    dend_59 { pt3dadd( 20.3187, 119.973, -42.6252, 0.42 ) }
    dend_59 { pt3dadd( 20.2928, 119.395, -42.732, 0.28 ) }
    dend_59 { pt3dadd( 20.2698, 118.878, -42.856, 0.14 ) }
    dend_59 { pt3dadd( 20.2386, 118.304, -42.9809, 0.1 ) }
    dend_59 { pt3dadd( 20.2015, 117.717, -43.0956, 0.1 ) }
    dend_59 { pt3dadd( 20.1493, 117.188, -43.1503, 0.1 ) }
    dend_59 { pt3dadd( 20.0115, 116.079, -43.1648, 0.1 ) }
    dend_59 { pt3dadd( 19.9686, 115.817, -43.1482, 0.1 ) }
    dend_59 { pt3dadd( 19.7819, 114.824, -43.0239, 0.1 ) }
    dend_59 { pt3dadd( 19.6725, 114.247, -42.9187, 0.1 ) }
    dend_59 { pt3dadd( 19.4529, 113.193, -42.6536, 0.1 ) }
    dend_59 { pt3dadd( 19.3225, 112.643, -42.4712, 0.1 ) }
    dend_59 { pt3dadd( 19.2412, 112.317, -42.3304, 0.1 ) }
    dend_59 { pt3dadd( 19.1234, 111.84, -42.1443, 0.1 ) }
    dend_59 { pt3dadd( 19.0737, 111.586, -42.084, 0.14 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 17/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.88855, -200.301, -3.53198, 0.98 ) }
    dend_26 { pt3dadd( 4.19963, -200.567, -3.22813, 0.98 ) }
    dend_26 { pt3dadd( 4.33713, -200.702, -3.10008, 1.12 ) }
    dend_26 { pt3dadd( 4.82369, -201.258, -2.66569, 1.82 ) }
    dend_26 { pt3dadd( 5.34098, -201.928, -2.23708, 1.68 ) }
    dend_26 { pt3dadd( 5.82676, -202.665, -1.87781, 1.54 ) }
    dend_26 { pt3dadd( 6.02827, -203.076, -1.76484, 1.4 ) }
    dend_26 { pt3dadd( 6.16169, -203.52, -1.76659, 1.26 ) }
    dend_26 { pt3dadd( 6.215, -204.361, -1.99853, 1.12 ) }
    dend_26 { pt3dadd( 6.06334, -205.125, -2.44014, 1.12 ) }
    dend_26 { pt3dadd( 5.99619, -205.296, -2.57813, 1.12 ) }
    dend_26 { pt3dadd( 5.64895, -205.912, -3.20011, 1.12 ) }
    dend_26 { pt3dadd( 5.28589, -206.426, -3.81418, 1.12 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.88855, -200.301, -3.53198, 0.98 ) }
    dend_25 { pt3dadd( 3.99853, -200.591, -2.94128, 0.98 ) }
    dend_25 { pt3dadd( 4.06434, -200.72, -2.67678, 1.12 ) }
    dend_25 { pt3dadd( 4.31176, -201.237, -1.59008, 1.4 ) }
    dend_25 { pt3dadd( 4.43267, -201.539, -1.00666, 1.26 ) }
    dend_25 { pt3dadd( 4.61673, -202.147, 0.087209, 1.12 ) }
    dend_25 { pt3dadd( 4.69485, -202.49, 0.665337, 0.98 ) }
    dend_25 { pt3dadd( 4.78697, -203.122, 1.63185, 0.84 ) }
    dend_25 { pt3dadd( 4.79711, -203.477, 2.11323, 0.7 ) }
    dend_25 { pt3dadd( 4.78526, -203.921, 2.6208, 0.56 ) }
    dend_25 { pt3dadd( 4.77183, -204.391, 3.11801, 0.1 ) }
    dend_25 { pt3dadd( 4.74324, -204.697, 3.41044, 0.1 ) }
    dend_25 { pt3dadd( 4.67708, -205.335, 3.99046, 0.1 ) }
    dend_25 { pt3dadd( 4.59932, -205.668, 4.26015, 0.1 ) }
    dend_25 { pt3dadd( 4.29913, -206.748, 5.0848, 0.14 ) }
    dend_25 { pt3dadd( 4.29913, -206.748, 5.0848, 0.28 ) }
    dend_25 { pt3dadd( 4.00775, -207.303, 5.37147, 0.28 ) }
    dend_25 { pt3dadd( 3.7987, -207.652, 5.4986, 0.14 ) }
    dend_25 { pt3dadd( 3.11513, -208.734, 5.71331, 0.1 ) }
    dend_25 { pt3dadd( 2.8944, -209.098, 5.73719, 0.1 ) }
    dend_25 { pt3dadd( 2.26658, -210.229, 5.68209, 0.14 ) }
    dend_25 { pt3dadd( 2.14788, -210.511, 5.6567, 0.56 ) }
    dend_25 { pt3dadd( 1.96065, -211.09, 5.54087, 0.42 ) }
    dend_25 { pt3dadd( 1.83418, -211.665, 5.39432, 0.28 ) }
    dend_25 { pt3dadd( 1.76348, -212.261, 5.23676, 0.14 ) }
    dend_25 { pt3dadd( 1.70981, -212.858, 5.08491, 0.1 ) }
    dend_25 { pt3dadd( 1.67403, -213.466, 4.96023, 0.14 ) }
    dend_25 { pt3dadd( 1.55952, -214.747, 4.75387, 0.28 ) }
    dend_25 { pt3dadd( 1.48948, -215.359, 4.67867, 0.42 ) }
    dend_25 { pt3dadd( 1.43318, -215.794, 4.64174, 0.1 ) }
    dend_25 { pt3dadd( 1.34804, -216.475, 4.6122, 0.1 ) }
    dend_25 { pt3dadd( 1.28631, -217.172, 4.6, 0.1 ) }
    dend_25 { pt3dadd( 1.26607, -217.86, 4.60713, 0.1 ) }
    dend_25 { pt3dadd( 1.28562, -218.171, 4.61265, 0.1 ) }
    dend_25 { pt3dadd( 1.3192, -218.478, 4.59775, 0.84 ) }
    dend_25 { pt3dadd( 1.42365, -219.086, 4.51437, 0.7 ) }
    dend_25 { pt3dadd( 1.56888, -219.743, 4.37836, 0.56 ) }
    dend_25 { pt3dadd( 1.71634, -220.323, 4.23097, 0.42 ) }
    dend_25 { pt3dadd( 1.88908, -220.97, 4.05481, 0.28 ) }
    dend_25 { pt3dadd( 2.04553, -221.543, 3.89394, 0.14 ) }
    dend_25 { pt3dadd( 2.22041, -222.188, 3.71455, 0.28 ) }
    dend_25 { pt3dadd( 2.29567, -222.476, 3.6384, 0.28 ) }
    dend_25 { pt3dadd( 2.43842, -223.063, 3.49842, 0.14 ) }
    dend_25 { pt3dadd( 2.57144, -223.641, 3.37132, 0.1 ) }
    dend_25 { pt3dadd( 2.71354, -224.317, 3.24173, 0.1 ) }
    dend_25 { pt3dadd( 2.83039, -224.904, 3.13858, 0.1 ) }
    dend_25 { pt3dadd( 2.94108, -225.506, 3.04571, 0.14 ) }
    dend_25 { pt3dadd( 3.01515, -226.113, 2.93342, 0.28 ) }
    dend_25 { pt3dadd( 3.05647, -226.718, 2.80896, 0.28 ) }
    dend_25 { pt3dadd( 3.07128, -227.326, 2.67707, 0.14 ) }
    dend_25 { pt3dadd( 3.06184, -227.919, 2.54526, 0.1 ) }
    dend_25 { pt3dadd( 3.03142, -228.525, 2.40863, 0.1 ) }
    dend_25 { pt3dadd( 2.92571, -229.76, 2.15301, 0.14 ) }
    dend_25 { pt3dadd( 2.86103, -230.366, 2.04267, 0.28 ) }
    dend_25 { pt3dadd( 2.79385, -230.978, 1.94992, 0.42 ) }
    dend_25 { pt3dadd( 2.79385, -230.978, 1.94992, 0.56 ) }
    dend_25 { pt3dadd( 2.77142, -231.408, 1.91646, 0.56 ) }
    dend_25 { pt3dadd( 2.77587, -232.107, 1.88931, 0.56 ) }
    dend_25 { pt3dadd( 2.82458, -232.73, 1.88664, 0.56 ) }
    dend_25 { pt3dadd( 2.88017, -233.348, 1.87378, 0.7 ) }
    dend_25 { pt3dadd( 2.95096, -233.956, 1.83821, 0.56 ) }
    dend_25 { pt3dadd( 3.03714, -234.568, 1.78115, 0.42 ) }
    dend_25 { pt3dadd( 3.14445, -235.171, 1.69325, 0.56 ) }
    dend_25 { pt3dadd( 3.26653, -235.771, 1.58394, 0.42 ) }
    dend_25 { pt3dadd( 3.39338, -236.364, 1.46721, 0.28 ) }
    dend_25 { pt3dadd( 3.50457, -237.029, 1.30435, 0.14 ) }
    dend_25 { pt3dadd( 3.57968, -237.618, 1.13609, 0.1 ) }
    dend_25 { pt3dadd( 3.63065, -238.272, 0.935471, 0.1 ) }
    dend_25 { pt3dadd( 3.63933, -238.866, 0.758013, 0.1 ) }
    dend_25 { pt3dadd( 3.61241, -239.461, 0.594682, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_25 { pt3dadd( 3.49367, -240.574, 0.358884, 0.1 ) }
    dend_25 { pt3dadd( 3.49367, -240.574, 0.358884, 0.1 ) }
    dend_25 { pt3dadd( 3.47881, -241.016, 0.380896, 0.1 ) }
    dend_25 { pt3dadd( 3.4898, -241.707, 0.492926, 0.1 ) }
    dend_25 { pt3dadd( 3.5369, -242.305, 0.623851, 0.1 ) }
    dend_25 { pt3dadd( 3.62088, -242.978, 0.797979, 0.1 ) }
    dend_25 { pt3dadd( 3.81696, -244.219, 1.16086, 0.14 ) }
    dend_25 { pt3dadd( 3.89906, -244.8, 1.32747, 0.1 ) }
    dend_25 { pt3dadd( 3.98021, -245.467, 1.51403, 0.14 ) }
    dend_25 { pt3dadd( 4.03086, -246.064, 1.68037, 0.1 ) }
    dend_25 { pt3dadd( 4.05851, -246.726, 1.86016, 0.14 ) }
    dend_25 { pt3dadd( 4.05891, -247.157, 1.95963, 0.28 ) }
    dend_25 { pt3dadd( 4.01645, -247.832, 2.09205, 0.14 ) }
    dend_25 { pt3dadd( 3.97319, -248.516, 2.22651, 0.1 ) }
    dend_25 { pt3dadd( 3.94123, -249.206, 2.34554, 0.14 ) }
    dend_25 { pt3dadd( 3.9461, -249.511, 2.41282, 0.28 ) }
    dend_25 { pt3dadd( 3.98949, -250.102, 2.56102, 0.42 ) }
    dend_25 { pt3dadd( 4.03545, -250.524, 2.68028, 0.1 ) }
    dend_25 { pt3dadd( 4.10978, -251.111, 2.86736, 0.1 ) }
    dend_25 { pt3dadd( 4.19097, -251.697, 3.06283, 0.1 ) }
    dend_25 { pt3dadd( 4.38013, -253.019, 3.51193, 0.14 ) }
    dend_25 { pt3dadd( 4.50367, -253.65, 3.75284, 0.1 ) }
    dend_25 { pt3dadd( 4.60054, -254.048, 3.91104, 0.14 ) }
    dend_25 { pt3dadd( 4.77872, -254.679, 4.14628, 0.28 ) }
    dend_25 { pt3dadd( 4.9461, -255.236, 4.33363, 0.42 ) }
    dend_25 { pt3dadd( 5.03832, -255.525, 4.403, 0.56 ) }
    dend_25 { pt3dadd( 5.37299, -256.614, 4.53171, 0.56 ) }
    dend_25 { pt3dadd( 5.56525, -257.204, 4.5718, 0.42 ) }
    dend_25 { pt3dadd( 5.74658, -257.796, 4.59586, 0.28 ) }
    dend_25 { pt3dadd( 5.90345, -258.398, 4.61685, 0.14 ) }
    dend_25 { pt3dadd( 6.03852, -259.074, 4.63809, 0.1 ) }
    dend_25 { pt3dadd( 6.13575, -259.756, 4.6502, 0.1 ) }
    dend_25 { pt3dadd( 6.21625, -260.375, 4.66925, 0.1 ) }
    dend_25 { pt3dadd( 6.33284, -261.063, 4.72256, 0.1 ) }
    dend_25 { pt3dadd( 6.47113, -261.732, 4.79772, 0.1 ) }
    dend_25 { pt3dadd( 6.64358, -262.315, 4.91347, 0.1 ) }
    dend_25 { pt3dadd( 6.74767, -262.599, 4.98578, 0.1 ) }
    dend_25 { pt3dadd( 7.176, -263.619, 5.27267, 0.1 ) }
    dend_25 { pt3dadd( 7.40908, -264.165, 5.43988, 0.14 ) }
    dend_25 { pt3dadd( 7.63397, -264.716, 5.61262, 0.1 ) }
    dend_25 { pt3dadd( 8.04771, -265.889, 5.98479, 0.14 ) }
    dend_25 { pt3dadd( 8.21132, -266.461, 6.16446, 0.1 ) }
    dend_25 { pt3dadd( 8.34241, -267.12, 6.35762, 0.1 ) }
    dend_25 { pt3dadd( 8.37083, -267.79, 6.5084, 0.1 ) }
    dend_25 { pt3dadd( 8.32952, -268.476, 6.6421, 0.1 ) }
    dend_25 { pt3dadd( 8.23095, -269.15, 6.73866, 0.1 ) }
    dend_25 { pt3dadd( 8.16405, -269.45, 6.76466, 0.1 ) }
    dend_25 { pt3dadd( 7.99689, -270.124, 6.82239, 0.1 ) }
    dend_25 { pt3dadd( 7.67494, -271.383, 6.92385, 0.14 ) }
    dend_25 { pt3dadd( 7.50399, -272.056, 6.98261, 0.1 ) }
    dend_25 { pt3dadd( 7.39367, -272.662, 7.06032, 0.14 ) }
    dend_25 { pt3dadd( 7.3271, -273.337, 7.17077, 0.1 ) }
    dend_25 { pt3dadd( 7.3224, -273.771, 7.25428, 0.1 ) }
    dend_25 { pt3dadd( 7.3766, -274.442, 7.40422, 0.1 ) }
    dend_25 { pt3dadd( 7.48281, -275.107, 7.58304, 0.1 ) }
    dend_25 { pt3dadd( 7.63498, -276.339, 7.8587, 0.14 ) }
    dend_25 { pt3dadd( 7.67344, -276.949, 7.98489, 0.28 ) }
    dend_25 { pt3dadd( 7.67525, -277.55, 8.09487, 0.42 ) }
    dend_25 { pt3dadd( 7.619, -278.236, 8.21728, 0.56 ) }
    dend_25 { pt3dadd( 7.51005, -278.664, 8.27833, 0.42 ) }
    dend_25 { pt3dadd( 7.04308, -279.829, 8.39611, 0.28 ) }
    dend_25 { pt3dadd( 6.7337, -280.446, 8.43347, 0.42 ) }
    dend_25 { pt3dadd( 6.53761, -280.826, 8.45867, 0.28 ) }
    dend_25 { pt3dadd( 6.1515, -281.616, 8.50439, 0.14 ) }
    dend_25 { pt3dadd( 5.64855, -282.683, 8.49399, 0.1 ) }
    dend_25 { pt3dadd( 5.40372, -283.249, 8.47148, 0.1 ) }
    dend_25 { pt3dadd( 5.19285, -283.832, 8.4406, 0.1 ) }
    dend_25 { pt3dadd( 4.98783, -284.493, 8.36528, 0.1 ) }
    dend_25 { pt3dadd( 4.86164, -285.089, 8.30909, 0.1 ) }
    dend_25 { pt3dadd( 4.72804, -286.351, 8.24798, 0.1 ) }
    dend_25 { pt3dadd( 4.7231, -286.792, 8.2662, 0.1 ) }
    dend_25 { pt3dadd( 4.73564, -287.412, 8.32229, 0.1 ) }
    dend_25 { pt3dadd( 4.7659, -288.019, 8.40748, 0.1 ) }
    dend_25 { pt3dadd( 4.88171, -289.308, 8.6261, 0.1 ) }
    dend_25 { pt3dadd( 4.95984, -289.986, 8.77304, 0.1 ) }
    dend_25 { pt3dadd( 5.05954, -290.648, 8.93541, 0.1 ) }
    dend_25 { pt3dadd( 5.13527, -291.252, 9.07227, 0.1 ) }
    dend_25 { pt3dadd( 5.18856, -291.934, 9.22117, 0.1 ) }
    dend_25 { pt3dadd( 5.20226, -292.537, 9.33985, 0.1 ) }
    dend_25 { pt3dadd( 5.1858, -292.973, 9.40977, 0.1 ) }
    dend_25 { pt3dadd( 5.12173, -293.585, 9.49428, 0.1 ) }
    dend_25 { pt3dadd( 5.00858, -294.258, 9.58049, 0.1 ) }
    dend_25 { pt3dadd( 4.86353, -294.937, 9.66012, 0.1 ) }
    dend_25 { pt3dadd( 4.7037, -295.601, 9.73012, 0.1 ) }
    dend_25 { pt3dadd( 4.52939, -296.274, 9.80253, 0.1 ) }
    dend_25 { pt3dadd( 4.22354, -297.418, 9.92788, 0.1 ) }
    dend_25 { pt3dadd( 4.04219, -298.076, 10.011, 0.1 ) }
    dend_25 { pt3dadd( 3.85392, -298.666, 10.068, 0.1 ) }
    dend_25 { pt3dadd( 3.62502, -299.322, 10.1248, 0.1 ) }
    dend_25 { pt3dadd( 3.3627, -299.952, 10.1561, 0.14 ) }
    dend_25 { pt3dadd( 3.17718, -300.348, 10.1783, 0.28 ) }
    dend_25 { pt3dadd( 2.88276, -300.963, 10.2295, 0.14 ) }
    dend_25 { pt3dadd( 2.27374, -302.105, 10.3142, 0.14 ) }
    dend_25 { pt3dadd( 2.06092, -302.474, 10.3447, 0.28 ) }
    dend_25 { pt3dadd( 1.41081, -303.592, 10.4411, 0.14 ) }
    dend_25 { pt3dadd( 1.08254, -304.188, 10.503, 0.1 ) }
    dend_25 { pt3dadd( 0.759085, -304.797, 10.5474, 0.14 ) }
    dend_25 { pt3dadd( 0.621175, -305.07, 10.5718, 0.28 ) }
    dend_25 { pt3dadd( 0.457045, -305.463, 10.6271, 0.1 ) }
    dend_25 { pt3dadd( 0.21614, -306.108, 10.7161, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_25 { pt3dadd( 0.0368384, -306.774, 10.8296, 0.1 ) }
    dend_25 { pt3dadd( -0.292514, -307.989, 10.9299, 0.14 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 17.7768, -98.9949, -2.94928, 0.84 ) }
    dend_23 { pt3dadd( 17.1373, -99.6773, -3.98188, 0.84 ) }
    dend_23 { pt3dadd( 16.4377, -100.424, -5.11148, 0.98 ) }
    dend_23 { pt3dadd( 15.8204, -101.083, -6.10811, 0.84 ) }
    dend_23 { pt3dadd( 15.1182, -101.832, -7.24178, 0.7 ) }
    dend_23 { pt3dadd( 14.9525, -102.009, -7.50936, 0.84 ) }
    dend_23 { pt3dadd( 14.9525, -102.009, -7.50936, 0.98 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 9/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 17.7768, -98.9949, -2.94928, 0.56 ) }
    dend_20 { pt3dadd( 17.7826, -99.2531, -3.18314, 0.56 ) }
    dend_20 { pt3dadd( 17.88, -100.351, -4.13861, 0.7 ) }
    dend_20 { pt3dadd( 17.9222, -100.915, -4.66152, 0.56 ) }
    dend_20 { pt3dadd( 17.9587, -101.426, -5.13379, 0.42 ) }
    dend_20 { pt3dadd( 18.0568, -102.494, -6.11907, 0.28 ) }
    dend_20 { pt3dadd( 18.1012, -102.855, -6.45085, 0.14 ) }
    dend_20 { pt3dadd( 18.1832, -103.399, -7.00072, 0.1 ) }
    dend_20 { pt3dadd( 18.3915, -104.38, -8.05512, 0.1 ) }
    dend_20 { pt3dadd( 18.431, -104.593, -8.32037, 0.14 ) }
    dend_20 { pt3dadd( 18.4927, -104.884, -8.70744, 0.28 ) }
    dend_20 { pt3dadd( 18.5713, -105.18, -9.088, 0.14 ) }
    dend_20 { pt3dadd( 18.8235, -106.074, -10.1934, 0.1 ) }
    dend_20 { pt3dadd( 18.9213, -106.389, -10.5627, 0.14 ) }
    dend_20 { pt3dadd( 19.2672, -107.379, -11.5666, 0.28 ) }
    dend_20 { pt3dadd( 19.4524, -107.939, -12.0608, 0.14 ) }
    dend_20 { pt3dadd( 19.638, -108.558, -12.5004, 0.1 ) }
    dend_20 { pt3dadd( 19.8176, -109.232, -12.8457, 0.1 ) }
    dend_20 { pt3dadd( 19.8849, -109.557, -12.9685, 0.28 ) }
    dend_20 { pt3dadd( 19.9803, -110.223, -13.1842, 0.14 ) }
    dend_20 { pt3dadd( 20.0498, -110.909, -13.3572, 0.1 ) }
    dend_20 { pt3dadd( 20.0321, -111.584, -13.5664, 0.14 ) }
    dend_20 { pt3dadd( 19.9503, -112.317, -13.824, 0.1 ) }
    dend_20 { pt3dadd( 19.7099, -113.486, -14.3467, 0.1 ) }
    dend_20 { pt3dadd( 19.6354, -113.793, -14.5025, 0.1 ) }
    dend_20 { pt3dadd( 19.4804, -114.398, -14.8297, 0.14 ) }
    dend_20 { pt3dadd( 19.1801, -115.628, -15.5015, 0.1 ) }
    dend_20 { pt3dadd( 19.047, -116.221, -15.825, 0.1 ) }
    dend_20 { pt3dadd( 18.7556, -117.443, -16.5162, 0.14 ) }
    dend_20 { pt3dadd( 18.55, -118.001, -16.8813, 0.28 ) }
    dend_20 { pt3dadd( 18.2654, -118.482, -17.2961, 0.42 ) }
    dend_20 { pt3dadd( 17.9315, -118.895, -17.7341, 0.56 ) }
    dend_20 { pt3dadd( 17.9315, -118.895, -17.7341, 0.56 ) }
    dend_20 { pt3dadd( 17.2327, -119.498, -18.6038, 0.56 ) }
    dend_20 { pt3dadd( 15.8878, -120.621, -20.3701, 0.42 ) }
    dend_20 { pt3dadd( 15.2367, -121.158, -21.314, 0.56 ) }
    dend_20 { pt3dadd( 15.2367, -121.158, -21.314, 0.56 ) }
    dend_20 { pt3dadd( 15.0962, -121.319, -21.5832, 0.28 ) }
    dend_20 { pt3dadd( 14.6663, -122.124, -22.7012, 0.42 ) }
    dend_20 { pt3dadd( 14.606, -122.663, -23.2453, 0.28 ) }
    dend_20 { pt3dadd( 14.8461, -123.746, -23.9941, 0.14 ) }
    dend_20 { pt3dadd( 15.0695, -124.397, -24.3539, 0.1 ) }
    dend_20 { pt3dadd( 15.3076, -124.996, -24.6341, 0.14 ) }
    dend_20 { pt3dadd( 15.8182, -126.273, -25.1615, 0.1 ) }
    dend_20 { pt3dadd( 16.0732, -126.901, -25.347, 0.1 ) }
    dend_20 { pt3dadd( 16.2035, -127.354, -25.5116, 0.1 ) }
    dend_20 { pt3dadd( 16.2035, -127.354, -25.5116, 0.1 ) }
    dend_20 { pt3dadd( 16.223, -127.67, -25.6681, 0.1 ) }
    dend_20 { pt3dadd( 16.2038, -128.927, -26.3584, 0.1 ) }
    dend_20 { pt3dadd( 16.1629, -129.541, -26.7024, 0.14 ) }
    dend_20 { pt3dadd( 16.1244, -130.891, -27.307, 0.28 ) }
    dend_20 { pt3dadd( 16.1361, -131.563, -27.5241, 0.42 ) }
    dend_20 { pt3dadd( 16.1901, -132.258, -27.6714, 0.56 ) }
    dend_20 { pt3dadd( 16.2876, -132.958, -27.7427, 0.42 ) }
    dend_20 { pt3dadd( 16.4324, -133.644, -27.7268, 0.28 ) }
    dend_20 { pt3dadd( 16.7774, -135.096, -27.5986, 0.42 ) }
    dend_20 { pt3dadd( 16.9568, -135.778, -27.4962, 0.56 ) }
    dend_20 { pt3dadd( 17.1316, -136.46, -27.4056, 0.42 ) }
    dend_20 { pt3dadd( 17.2155, -136.805, -27.3705, 0.42 ) }
    dend_20 { pt3dadd( 17.368, -137.485, -27.3322, 0.56 ) }
    dend_20 { pt3dadd( 17.5082, -138.184, -27.334, 0.42 ) }
    dend_20 { pt3dadd( 17.6286, -138.882, -27.3839, 0.28 ) }
    dend_20 { pt3dadd( 17.7887, -139.577, -27.4042, 0.14 ) }
    dend_20 { pt3dadd( 17.98, -140.259, -27.3998, 0.28 ) }
    dend_20 { pt3dadd( 18.2061, -140.93, -27.3836, 0.42 ) }
    dend_20 { pt3dadd( 18.4684, -141.576, -27.3666, 0.42 ) }
    dend_20 { pt3dadd( 18.7619, -142.217, -27.3521, 0.28 ) }
    dend_20 { pt3dadd( 19.3757, -143.421, -27.3533, 0.14 ) }
    dend_20 { pt3dadd( 19.5333, -143.735, -27.3871, 0.84 ) }
    dend_20 { pt3dadd( 19.8594, -144.43, -27.5301, 0.7 ) }
    dend_20 { pt3dadd( 20.1675, -145.125, -27.7415, 0.56 ) }
    dend_20 { pt3dadd( 20.4153, -145.726, -27.9795, 0.42 ) }
    dend_20 { pt3dadd( 20.6676, -146.391, -28.294, 0.28 ) }
    dend_20 { pt3dadd( 21.0983, -147.642, -28.9555, 0.14 ) }
    dend_20 { pt3dadd( 21.2724, -148.216, -29.2888, 0.1 ) }
    dend_20 { pt3dadd( 21.3818, -148.635, -29.5435, 0.1 ) }
    dend_20 { pt3dadd( 21.5234, -149.288, -29.9395, 0.1 ) }
    dend_20 { pt3dadd( 21.6478, -149.953, -30.3233, 0.1 ) }
    dend_20 { pt3dadd( 21.7059, -150.643, -30.698, 0.1 ) }
    dend_20 { pt3dadd( 21.7288, -151.942, -31.3138, 0.1 ) }
    dend_20 { pt3dadd( 21.7096, -152.264, -31.4597, 0.14 ) }
    dend_20 { pt3dadd( 21.6504, -152.717, -31.637, 0.1 ) }
    dend_20 { pt3dadd( 21.5366, -153.379, -31.8556, 0.1 ) }
    dend_20 { pt3dadd( 21.2323, -154.766, -32.3039, 0.14 ) }
    dend_20 { pt3dadd( 21.0821, -155.426, -32.5061, 0.1 ) }
    dend_20 { pt3dadd( 20.9589, -156.085, -32.6885, 0.1 ) }
    dend_20 { pt3dadd( 20.8357, -156.84, -32.9037, 0.14 ) }
    dend_20 { pt3dadd( 20.7284, -157.501, -33.1282, 0.1 ) }
    dend_20 { pt3dadd( 20.5631, -158.872, -33.5614, 0.1 ) }
    dend_20 { pt3dadd( 20.5523, -159.203, -33.6543, 0.56 ) }
    dend_20 { pt3dadd( 20.5678, -159.882, -33.8522, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_20 { pt3dadd( 20.6413, -160.556, -34.0543, 0.42 ) }
    dend_20 { pt3dadd( 20.8928, -161.927, -34.4404, 0.56 ) }
    dend_20 { pt3dadd( 21.1999, -163.169, -34.7212, 0.56 ) }
    dend_20 { pt3dadd( 21.3799, -163.918, -34.8724, 0.42 ) }
    dend_20 { pt3dadd( 21.5209, -164.673, -35.0422, 0.28 ) }
    dend_20 { pt3dadd( 21.6293, -165.44, -35.2235, 0.14 ) }
    dend_20 { pt3dadd( 21.6538, -165.927, -35.3692, 0.1 ) }
    dend_20 { pt3dadd( 21.6361, -166.598, -35.5986, 0.1 ) }
    dend_20 { pt3dadd( 21.4751, -167.961, -36.155, 0.1 ) }
    dend_20 { pt3dadd( 21.3447, -168.601, -36.4272, 0.1 ) }
    dend_20 { pt3dadd( 21.166, -169.219, -36.7077, 0.1 ) }
    dend_20 { pt3dadd( 20.7696, -170.326, -37.2615, 0.1 ) }
    dend_20 { pt3dadd( 20.7696, -170.326, -37.2615, 0.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -15.0661, -140.717, -32.4627, 0.84 ) }
    dend_13 { pt3dadd( -14.9528, -141.131, -31.6357, 0.84 ) }
    dend_13 { pt3dadd( -14.9119, -141.28, -31.3369, 0.7 ) }
    dend_13 { pt3dadd( -14.7878, -141.734, -30.4305, 0.56 ) }
    dend_13 { pt3dadd( -14.7468, -141.884, -30.1317, 0.42 ) }
    dend_13 { pt3dadd( -14.705, -142.037, -29.8262, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 19/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -15.0661, -140.717, -32.4627, 0.56 ) }
    dend_10 { pt3dadd( -15.2103, -141.098, -32.329, 0.56 ) }
    dend_10 { pt3dadd( -15.4145, -141.637, -32.149, 0.42 ) }
    dend_10 { pt3dadd( -15.6273, -142.242, -31.9594, 0.28 ) }
    dend_10 { pt3dadd( -15.8035, -142.797, -31.7958, 0.14 ) }
    dend_10 { pt3dadd( -16.1397, -143.982, -31.4658, 0.1 ) }
    dend_10 { pt3dadd( -16.283, -144.551, -31.3156, 0.1 ) }
    dend_10 { pt3dadd( -16.4162, -145.185, -31.1494, 0.1 ) }
    dend_10 { pt3dadd( -16.5252, -145.765, -31.0116, 0.1 ) }
    dend_10 { pt3dadd( -16.6223, -146.354, -30.8939, 0.1 ) }
    dend_10 { pt3dadd( -16.707, -146.948, -30.8054, 0.14 ) }
    dend_10 { pt3dadd( -16.778, -147.551, -30.7554, 0.1 ) }
    dend_10 { pt3dadd( -16.8556, -148.14, -30.7109, 0.1 ) }
    dend_10 { pt3dadd( -16.9455, -148.814, -30.6608, 0.1 ) }
    dend_10 { pt3dadd( -17.0509, -149.477, -30.6206, 0.1 ) }
    dend_10 { pt3dadd( -17.1075, -149.777, -30.6074, 0.1 ) }
    dend_10 { pt3dadd( -17.2428, -150.446, -30.5826, 0.1 ) }
    dend_10 { pt3dadd( -17.3417, -151.048, -30.5961, 0.14 ) }
    dend_10 { pt3dadd( -17.4124, -151.649, -30.6327, 0.28 ) }
    dend_10 { pt3dadd( -17.455, -152.315, -30.6854, 0.42 ) }
    dend_10 { pt3dadd( -17.4708, -152.994, -30.7447, 0.28 ) }
    dend_10 { pt3dadd( -17.4782, -153.589, -30.8014, 0.14 ) }
    dend_10 { pt3dadd( -17.4717, -154.821, -30.9225, 0.1 ) }
    dend_10 { pt3dadd( -17.4833, -155.428, -30.9489, 0.1 ) }
    dend_10 { pt3dadd( -17.5061, -156.033, -30.9326, 0.1 ) }
    dend_10 { pt3dadd( -17.5235, -156.638, -30.8963, 0.1 ) }
    dend_10 { pt3dadd( -17.5512, -157.303, -30.8213, 0.1 ) }
    dend_10 { pt3dadd( -17.5819, -157.6, -30.7619, 0.1 ) }
    dend_10 { pt3dadd( -17.8182, -158.738, -30.3465, 0.1 ) }
    dend_10 { pt3dadd( -17.9603, -159.278, -30.1103, 0.14 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 49/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 6.32571, 166.373, 9.21736, 0.42 ) }
    dend_74 { pt3dadd( 7.06701, 167.189, 9.53881, 0.42 ) }
    dend_74 { pt3dadd( 7.31178, 167.465, 9.627, 0.28 ) }
    dend_74 { pt3dadd( 7.82264, 168.032, 9.76222, 0.14 ) }
    dend_74 { pt3dadd( 8.51498, 168.807, 9.87861, 0.1 ) }
    dend_74 { pt3dadd( 9.0254, 169.385, 9.93104, 0.1 ) }
    dend_74 { pt3dadd( 9.28368, 169.675, 9.94139, 0.1 ) }
    dend_74 { pt3dadd( 9.54513, 169.961, 9.91274, 0.14 ) }
    dend_74 { pt3dadd( 9.95592, 170.403, 9.85014, 0.28 ) }
    dend_74 { pt3dadd( 10.4772, 170.959, 9.72903, 0.14 ) }
    dend_74 { pt3dadd( 10.7336, 171.233, 9.63137, 0.1 ) }
    dend_74 { pt3dadd( 11.1626, 171.645, 9.51852, 0.14 ) }
    dend_74 { pt3dadd( 11.3703, 171.82, 9.49378, 0.28 ) }
    dend_74 { pt3dadd( 11.8549, 172.176, 9.49667, 0.56 ) }
    dend_74 { pt3dadd( 11.8549, 172.176, 9.49667, 0.42 ) }
    dend_74 { pt3dadd( 12.0808, 172.32, 9.51587, 0.56 ) }
    dend_74 { pt3dadd( 12.9452, 172.891, 9.54457, 0.56 ) }
    dend_74 { pt3dadd( 13.4377, 173.235, 9.52882, 0.42 ) }
    dend_74 { pt3dadd( 13.9434, 173.57, 9.5308, 0.28 ) }
    dend_74 { pt3dadd( 14.4531, 173.885, 9.52807, 0.14 ) }
    dend_74 { pt3dadd( 14.7838, 174.078, 9.52101, 0.1 ) }
    dend_74 { pt3dadd( 15.3052, 174.385, 9.49584, 0.1 ) }
    dend_74 { pt3dadd( 15.8186, 174.688, 9.44124, 0.1 ) }
    dend_74 { pt3dadd( 16.7596, 175.249, 9.35976, 0.14 ) }
    dend_74 { pt3dadd( 17.2231, 175.524, 9.35839, 0.28 ) }
    dend_74 { pt3dadd( 17.4518, 175.669, 9.37058, 0.42 ) }
    dend_74 { pt3dadd( 17.9601, 176.0, 9.40665, 0.56 ) }
    dend_74 { pt3dadd( 18.4543, 176.338, 9.45208, 0.42 ) }
    dend_74 { pt3dadd( 18.7619, 176.567, 9.48022, 0.56 ) }
    dend_74 { pt3dadd( 19.6251, 177.314, 9.51485, 0.42 ) }
    dend_74 { pt3dadd( 20.0681, 177.72, 9.56386, 0.28 ) }
    dend_74 { pt3dadd( 20.4634, 178.077, 9.63057, 0.14 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 6.32571, 166.373, 9.21736, 0.98 ) }
    dend_73 { pt3dadd( 6.27314, 167.416, 9.45035, 0.98 ) }
    dend_73 { pt3dadd( 6.24182, 167.933, 9.54256, 0.84 ) }
    dend_73 { pt3dadd( 6.20879, 168.456, 9.5556, 0.7 ) }
    dend_73 { pt3dadd( 6.17457, 168.972, 9.52722, 0.56 ) }
    dend_73 { pt3dadd( 6.13874, 169.493, 9.47902, 0.42 ) }
    dend_73 { pt3dadd( 6.10142, 170.016, 9.42253, 0.28 ) }
    dend_73 { pt3dadd( 6.05785, 170.529, 9.32643, 0.42 ) }
    dend_73 { pt3dadd( 5.96679, 171.605, 9.11838, 0.28 ) }
    dend_73 { pt3dadd( 5.92302, 172.121, 9.02184, 0.14 ) }
    dend_73 { pt3dadd( 5.86268, 172.627, 8.90526, 0.1 ) }
    dend_73 { pt3dadd( 5.78774, 173.131, 8.77957, 0.1 ) }
    dend_73 { pt3dadd( 5.70178, 173.631, 8.65715, 0.1 ) }
    dend_73 { pt3dadd( 5.6058, 174.135, 8.54831, 0.1 ) }
    dend_73 { pt3dadd( 5.51791, 174.638, 8.49252, 0.1 ) }
    dend_73 { pt3dadd( 5.35264, 175.727, 8.41586, 0.1 ) }
    dend_73 { pt3dadd( 5.29323, 176.24, 8.39639, 0.1 ) }
    dend_73 { pt3dadd( 5.25568, 176.761, 8.43898, 0.1 ) }
    dend_73 { pt3dadd( 5.24369, 177.275, 8.55019, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_73 { pt3dadd( 5.24368, 178.223, 8.87811, 0.1 ) }
    dend_73 { pt3dadd( 5.25171, 178.698, 9.09041, 0.1 ) }
    dend_73 { pt3dadd( 5.25845, 178.928, 9.20857, 0.1 ) }
    dend_73 { pt3dadd( 5.26315, 179.899, 9.70637, 0.1 ) }
    dend_73 { pt3dadd( 5.25564, 180.361, 9.94721, 0.1 ) }
    dend_73 { pt3dadd( 5.22402, 180.879, 10.2004, 0.1 ) }
    dend_73 { pt3dadd( 5.15387, 181.362, 10.3857, 0.1 ) }
    dend_73 { pt3dadd( 5.06852, 181.843, 10.565, 0.1 ) }
    dend_73 { pt3dadd( 5.06852, 181.843, 10.565, 0.14 ) }
    // Section: dend_71, id: dend_71, parent: dend_65 (entry count 9/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -6.73512, 82.9393, -8.05106, 0.28 ) }
    dend_71 { pt3dadd( -7.05426, 83.3842, -7.45801, 0.28 ) }
    dend_71 { pt3dadd( -7.28588, 83.8644, -6.95159, 0.42 ) }
    dend_71 { pt3dadd( -7.28588, 83.8644, -6.95159, 0.56 ) }
    dend_71 { pt3dadd( -7.4676, 84.5182, -6.49749, 0.28 ) }
    dend_71 { pt3dadd( -7.54394, 84.916, -6.29445, 0.28 ) }
    dend_71 { pt3dadd( -7.60024, 85.334, -6.14036, 0.14 ) }
    dend_71 { pt3dadd( -7.58227, 85.7895, -6.11084, 0.1 ) }
    dend_71 { pt3dadd( -7.53417, 86.19, -6.15277, 0.1 ) }
    dend_71 { pt3dadd( -7.47368, 86.5845, -6.23003, 0.1 ) }
    dend_71 { pt3dadd( -7.31232, 87.3435, -6.49428, 0.1 ) }
    dend_71 { pt3dadd( -7.22977, 87.7025, -6.65286, 0.1 ) }
    dend_71 { pt3dadd( -7.07176, 88.4569, -6.99978, 0.1 ) }
    dend_71 { pt3dadd( -7.00126, 88.8189, -7.15782, 0.1 ) }
    dend_71 { pt3dadd( -6.96644, 89.0064, -7.22476, 0.14 ) }
    dend_71 { pt3dadd( -6.8398, 89.8016, -7.39768, 0.1 ) }
    dend_71 { pt3dadd( -6.8398, 89.8016, -7.39768, 0.1 ) }
    dend_71 { pt3dadd( -6.75719, 90.6273, -7.32849, 0.1 ) }
    dend_71 { pt3dadd( -6.73164, 91.0755, -7.23763, 0.1 ) }
    dend_71 { pt3dadd( -6.70692, 91.5121, -7.13357, 0.1 ) }
    dend_71 { pt3dadd( -6.68196, 91.954, -7.01627, 0.1 ) }
    dend_71 { pt3dadd( -6.66476, 92.3858, -6.8938, 0.14 ) }
    dend_71 { pt3dadd( -6.65572, 92.5788, -6.85361, 0.28 ) }
    dend_71 { pt3dadd( -6.62695, 92.9764, -6.8038, 0.28 ) }
    dend_71 { pt3dadd( -6.61373, 93.3806, -6.76227, 0.14 ) }
    dend_71 { pt3dadd( -6.61552, 93.8358, -6.72498, 0.1 ) }
    dend_71 { pt3dadd( -6.60647, 94.2421, -6.72163, 0.1 ) }
    dend_71 { pt3dadd( -6.59038, 94.6425, -6.73864, 0.1 ) }
    dend_71 { pt3dadd( -6.56663, 95.098, -6.77126, 0.1 ) }
    dend_71 { pt3dadd( -6.54142, 95.5029, -6.81138, 0.14 ) }
    dend_71 { pt3dadd( -6.5179, 95.9047, -6.86028, 0.28 ) }
    dend_71 { pt3dadd( -6.49634, 96.7544, -6.92586, 0.42 ) }
    dend_71 { pt3dadd( -6.4974, 97.1624, -6.93603, 0.28 ) }
    dend_71 { pt3dadd( -6.51382, 97.5681, -6.92601, 0.14 ) }
    dend_71 { pt3dadd( -6.5496, 97.9736, -6.89729, 0.1 ) }
    dend_71 { pt3dadd( -6.59273, 98.3669, -6.84564, 0.14 ) }
    dend_71 { pt3dadd( -6.68177, 99.2116, -6.7387, 0.1 ) }
    dend_71 { pt3dadd( -6.71768, 99.6145, -6.70293, 0.1 ) }
    dend_71 { pt3dadd( -6.7268, 100.023, -6.70438, 0.1 ) }
    dend_71 { pt3dadd( -6.70626, 100.424, -6.75353, 0.1 ) }
    dend_71 { pt3dadd( -6.65571, 100.855, -6.86104, 0.1 ) }
    dend_71 { pt3dadd( -6.5313, 101.62, -7.13827, 0.1 ) }
    dend_71 { pt3dadd( -6.41375, 102.263, -7.42763, 0.14 ) }
    dend_71 { pt3dadd( -6.41375, 102.263, -7.42763, 0.28 ) }
    dend_71 { pt3dadd( -6.39972, 102.655, -7.52538, 0.7 ) }
    dend_71 { pt3dadd( -6.43368, 103.059, -7.56188, 0.56 ) }
    dend_71 { pt3dadd( -6.50952, 103.45, -7.54017, 0.42 ) }
    dend_71 { pt3dadd( -6.60998, 103.838, -7.47614, 0.28 ) }
    dend_71 { pt3dadd( -6.82722, 104.621, -7.32132, 0.14 ) }
    dend_71 { pt3dadd( -6.93129, 105.007, -7.25053, 0.28 ) }
    dend_71 { pt3dadd( -7.03173, 105.394, -7.18593, 0.14 ) }
    dend_71 { pt3dadd( -7.1268, 105.783, -7.13137, 0.1 ) }
    dend_71 { pt3dadd( -7.21292, 106.172, -7.09179, 0.1 ) }
    dend_71 { pt3dadd( -7.2897, 106.569, -7.0709, 0.1 ) }
    dend_71 { pt3dadd( -7.34677, 106.971, -7.10077, 0.1 ) }
    dend_71 { pt3dadd( -7.39746, 107.369, -7.15267, 0.1 ) }
    dend_71 { pt3dadd( -7.44384, 107.767, -7.2218, 0.1 ) }
    dend_71 { pt3dadd( -7.48621, 108.16, -7.30339, 0.1 ) }
    dend_71 { pt3dadd( -7.52426, 108.546, -7.39662, 0.14 ) }
    dend_71 { pt3dadd( -7.59923, 109.361, -7.61516, 0.28 ) }
    dend_71 { pt3dadd( -7.61124, 109.743, -7.74218, 0.42 ) }
    dend_71 { pt3dadd( -7.60378, 110.122, -7.88339, 0.28 ) }
    dend_71 { pt3dadd( -7.59342, 110.309, -7.95461, 0.42 ) }
    dend_71 { pt3dadd( -7.58246, 110.495, -8.02546, 0.56 ) }
    dend_71 { pt3dadd( -7.58888, 110.884, -8.13348, 0.84 ) }
    dend_71 { pt3dadd( -7.70739, 111.72, -8.25354, 0.7 ) }
    dend_71 { pt3dadd( -7.7932, 112.105, -8.29678, 0.56 ) }
    dend_71 { pt3dadd( -7.92917, 112.486, -8.2895, 0.56 ) }
    dend_71 { pt3dadd( -8.04358, 112.739, -8.25669, 0.42 ) }
    dend_71 { pt3dadd( -8.40805, 113.489, -8.09182, 0.28 ) }
    dend_71 { pt3dadd( -8.61029, 113.867, -7.97325, 0.14 ) }
    dend_71 { pt3dadd( -8.61029, 113.867, -7.97325, 0.14 ) }
    dend_71 { pt3dadd( -8.92539, 114.59, -7.75063, 0.1 ) }
    dend_71 { pt3dadd( -9.0372, 114.971, -7.66929, 0.1 ) }
    dend_71 { pt3dadd( -9.09701, 115.422, -7.6159, 0.1 ) }
    dend_71 { pt3dadd( -9.10112, 115.83, -7.60772, 0.1 ) }
    dend_71 { pt3dadd( -9.07994, 116.228, -7.61107, 0.1 ) }
    dend_71 { pt3dadd( -8.99097, 117.08, -7.6432, 0.1 ) }
    dend_71 { pt3dadd( -8.92307, 117.478, -7.67912, 0.1 ) }
    dend_71 { pt3dadd( -8.84481, 117.917, -7.71941, 0.14 ) }
    dend_71 { pt3dadd( -8.78201, 118.317, -7.75423, 0.14 ) }
    dend_71 { pt3dadd( -8.73304, 118.769, -7.78455, 0.1 ) }
    dend_71 { pt3dadd( -8.72988, 118.973, -7.7908, 0.14 ) }
    dend_71 { pt3dadd( -8.74254, 119.176, -7.80572, 0.28 ) }
    dend_71 { pt3dadd( -8.76356, 119.619, -7.87745, 0.84 ) }
    dend_71 { pt3dadd( -8.77445, 120.017, -7.9594, 0.7 ) }
    dend_71 { pt3dadd( -8.76985, 120.458, -8.04863, 0.56 ) }
    dend_71 { pt3dadd( -8.75934, 120.849, -8.12781, 0.42 ) }
    dend_71 { pt3dadd( -8.72754, 121.663, -8.27594, 0.28 ) }
    dend_71 { pt3dadd( -8.70099, 122.114, -8.34404, 0.14 ) }
    dend_71 { pt3dadd( -8.66203, 122.558, -8.39609, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_71 { pt3dadd( -8.61568, 123.01, -8.42896, 0.1 ) }
    dend_71 { pt3dadd( -8.61568, 123.01, -8.42896, 0.14 ) }
    dend_71 { pt3dadd( -8.57404, 123.414, -8.406, 0.1 ) }
    dend_71 { pt3dadd( -8.52468, 123.816, -8.37851, 0.1 ) }
    dend_71 { pt3dadd( -8.46616, 124.213, -8.37385, 0.1 ) }
    dend_71 { pt3dadd( -8.40142, 124.666, -8.3925, 0.1 ) }
    dend_71 { pt3dadd( -8.34153, 125.117, -8.42726, 0.1 ) }
    dend_71 { pt3dadd( -8.30821, 125.565, -8.44906, 0.1 ) }
    dend_71 { pt3dadd( -8.29483, 126.345, -8.46852, 0.14 ) }
    dend_71 { pt3dadd( -8.31621, 126.752, -8.46943, 0.28 ) }
    dend_71 { pt3dadd( -8.37225, 127.2, -8.4619, 0.42 ) }
    dend_71 { pt3dadd( -8.4579, 127.595, -8.44771, 0.28 ) }
    dend_71 { pt3dadd( -8.69831, 128.411, -8.39505, 0.14 ) }
    dend_71 { pt3dadd( -8.82841, 128.783, -8.35727, 0.1 ) }
    dend_71 { pt3dadd( -8.95085, 129.168, -8.32243, 0.1 ) }
    dend_71 { pt3dadd( -8.95085, 129.168, -8.32243, 0.1 ) }
    dend_71 { pt3dadd( -8.99722, 129.571, -8.34185, 0.1 ) }
    dend_71 { pt3dadd( -9.01397, 129.975, -8.3902, 0.1 ) }
    dend_71 { pt3dadd( -9.00669, 130.373, -8.46056, 0.1 ) }
    dend_71 { pt3dadd( -8.99294, 131.211, -8.60737, 0.1 ) }
    dend_71 { pt3dadd( -8.98741, 131.612, -8.67668, 0.1 ) }
    dend_71 { pt3dadd( -8.98739, 132.011, -8.74058, 0.14 ) }
    dend_71 { pt3dadd( -8.99507, 132.414, -8.79783, 0.28 ) }
    dend_71 { pt3dadd( -8.99351, 132.814, -8.86332, 0.14 ) }
    dend_71 { pt3dadd( -8.99144, 133.209, -8.92844, 0.1 ) }
    dend_71 { pt3dadd( -8.99144, 133.209, -8.92844, 0.14 ) }
    dend_71 { pt3dadd( -8.97439, 133.609, -8.98741, 0.84 ) }
    dend_71 { pt3dadd( -8.96274, 134.015, -9.02389, 0.7 ) }
    dend_71 { pt3dadd( -8.95701, 134.871, -9.05361, 0.56 ) }
    dend_71 { pt3dadd( -8.95436, 135.278, -9.04751, 0.42 ) }
    dend_71 { pt3dadd( -8.97336, 135.723, -8.98911, 0.28 ) }
    dend_71 { pt3dadd( -9.01406, 136.115, -8.89517, 0.14 ) }
    dend_71 { pt3dadd( -9.14795, 136.887, -8.62403, 0.1 ) }
    dend_71 { pt3dadd( -9.2365, 137.247, -8.46578, 0.14 ) }
    dend_71 { pt3dadd( -9.31355, 137.492, -8.34502, 0.28 ) }
    dend_71 { pt3dadd( -9.54511, 138.206, -8.0086, 0.56 ) }
    dend_71 { pt3dadd( -9.666, 138.556, -7.8457, 0.7 ) }
    dend_71 { pt3dadd( -9.78186, 138.91, -7.69344, 0.56 ) }
    dend_71 { pt3dadd( -9.8828, 139.284, -7.57858, 0.42 ) }
    dend_71 { pt3dadd( -9.98712, 139.663, -7.47649, 0.28 ) }
    dend_71 { pt3dadd( -10.0372, 139.85, -7.44242, 0.14 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 41/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -6.73512, 82.9393, -8.05106, 0.1 ) }
    dend_66 { pt3dadd( -7.38507, 82.7444, -8.13991, 0.1 ) }
    dend_66 { pt3dadd( -8.03181, 82.5505, -8.22833, 0.14 ) }
    dend_66 { pt3dadd( -8.35678, 82.4531, -8.27276, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 45/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 5.28589, -206.426, -3.81418, 1.12 ) }
    dend_28 { pt3dadd( 5.46093, -207.528, -2.83486, 1.12 ) }
    dend_28 { pt3dadd( 5.49212, -207.923, -2.52413, 0.98 ) }
    dend_28 { pt3dadd( 5.4875, -208.234, -2.34643, 0.84 ) }
    dend_28 { pt3dadd( 5.35673, -209.559, -1.97299, 1.12 ) }
    dend_28 { pt3dadd( 5.28999, -210.338, -1.82268, 0.98 ) }
    dend_28 { pt3dadd( 5.28041, -211.127, -1.6487, 0.84 ) }
    dend_28 { pt3dadd( 5.28803, -211.63, -1.59319, 0.84 ) }
    dend_28 { pt3dadd( 5.43205, -213.092, -1.4909, 0.7 ) }
    dend_28 { pt3dadd( 5.6606, -214.585, -1.44927, 0.84 ) }
    dend_28 { pt3dadd( 5.90468, -215.892, -1.4779, 0.84 ) }
    dend_28 { pt3dadd( 6.2782, -217.309, -1.45578, 0.84 ) }
    dend_28 { pt3dadd( 6.49688, -217.993, -1.41393, 0.7 ) }
    dend_28 { pt3dadd( 6.75653, -218.739, -1.33266, 0.56 ) }
    dend_28 { pt3dadd( 6.86843, -219.075, -1.27168, 0.7 ) }
    dend_28 { pt3dadd( 6.99443, -219.55, -1.19251, 0.56 ) }
    dend_28 { pt3dadd( 7.08287, -220.262, -1.14302, 0.7 ) }
    dend_28 { pt3dadd( 7.09918, -220.981, -1.1109, 0.84 ) }
    dend_28 { pt3dadd( 7.05402, -221.703, -1.10042, 0.84 ) }
    dend_28 { pt3dadd( 6.93782, -222.505, -1.10251, 0.98 ) }
    dend_28 { pt3dadd( 6.80988, -223.203, -1.12427, 0.84 ) }
    dend_28 { pt3dadd( 6.60843, -224.208, -1.18596, 0.84 ) }
    dend_28 { pt3dadd( 6.51926, -224.699, -1.19545, 0.98 ) }
    dend_28 { pt3dadd( 6.33711, -226.02, -1.17169, 0.84 ) }
    dend_28 { pt3dadd( 6.30541, -226.531, -1.15297, 1.12 ) }
    dend_28 { pt3dadd( 6.3397, -227.249, -1.11828, 1.12 ) }
    dend_28 { pt3dadd( 6.44595, -227.949, -1.0736, 0.98 ) }
    dend_28 { pt3dadd( 6.80692, -229.367, -0.977083, 0.84 ) }
    dend_28 { pt3dadd( 7.00654, -230.051, -0.909657, 0.7 ) }
    dend_28 { pt3dadd( 7.15812, -230.532, -0.844801, 0.56 ) }
    dend_28 { pt3dadd( 7.33923, -231.229, -0.818136, 0.98 ) }
    dend_28 { pt3dadd( 7.48586, -231.931, -0.799702, 0.98 ) }
    dend_28 { pt3dadd( 7.62219, -232.634, -0.750078, 0.98 ) }
    dend_28 { pt3dadd( 7.70445, -233.125, -0.707591, 0.84 ) }
    dend_28 { pt3dadd( 7.83174, -233.826, -0.595669, 0.7 ) }
    dend_28 { pt3dadd( 8.10189, -235.237, -0.295808, 0.84 ) }
    dend_28 { pt3dadd( 8.3364, -236.575, -0.0615791, 0.84 ) }
    dend_28 { pt3dadd( 8.57311, -238.014, 0.118541, 0.98 ) }
    dend_28 { pt3dadd( 8.65178, -238.72, 0.111942, 0.98 ) }
    dend_28 { pt3dadd( 8.67739, -239.073, 0.064507, 0.98 ) }
    dend_28 { pt3dadd( 8.69891, -239.774, -0.0960929, 0.84 ) }
    dend_28 { pt3dadd( 8.7326, -241.17, -0.529667, 0.98 ) }
    dend_28 { pt3dadd( 8.73099, -241.832, -0.800534, 0.98 ) }
    dend_28 { pt3dadd( 8.71212, -243.16, -1.3943, 0.84 ) }
    dend_28 { pt3dadd( 8.72169, -243.81, -1.66453, 0.84 ) }
    dend_28 { pt3dadd( 8.76771, -244.476, -1.91369, 0.84 ) }
    dend_28 { pt3dadd( 8.89036, -245.234, -2.11549, 0.84 ) }
    dend_28 { pt3dadd( 9.08871, -245.918, -2.20569, 0.84 ) }
    dend_28 { pt3dadd( 9.34768, -246.582, -2.2463, 0.98 ) }
    dend_28 { pt3dadd( 9.66567, -247.222, -2.24327, 0.84 ) }
    dend_28 { pt3dadd( 10.0209, -247.926, -2.27873, 0.98 ) }
    dend_28 { pt3dadd( 10.5919, -249.109, -2.38197, 0.56 ) }
    dend_28 { pt3dadd( 10.8744, -249.835, -2.52063, 0.7 ) }
    dend_28 { pt3dadd( 11.0895, -250.572, -2.74581, 0.84 ) }
    dend_28 { pt3dadd( 11.2108, -251.302, -3.02515, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_28 { pt3dadd( 11.3395, -252.54, -3.46826, 0.84 ) }
    dend_28 { pt3dadd( 11.3528, -253.031, -3.62, 0.84 ) }
    dend_28 { pt3dadd( 11.3674, -254.463, -3.93922, 0.7 ) }
    dend_28 { pt3dadd( 11.3834, -255.17, -3.96062, 0.84 ) }
    dend_28 { pt3dadd( 11.4216, -255.967, -3.83568, 0.84 ) }
    dend_28 { pt3dadd( 11.4916, -257.403, -3.52556, 0.7 ) }
    dend_28 { pt3dadd( 11.5415, -258.168, -3.31617, 0.56 ) }
    dend_28 { pt3dadd( 11.6251, -259.45, -2.96678, 0.42 ) }
    dend_28 { pt3dadd( 11.6738, -260.223, -2.74192, 0.42 ) }
    dend_28 { pt3dadd( 11.6984, -260.992, -2.54075, 0.56 ) }
    dend_28 { pt3dadd( 11.6704, -262.442, -2.28987, 0.56 ) }
    dend_28 { pt3dadd( 11.6025, -262.948, -2.28672, 0.84 ) }
    dend_28 { pt3dadd( 11.4678, -263.649, -2.36793, 0.84 ) }
    dend_28 { pt3dadd( 11.3725, -263.982, -2.45903, 0.98 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 14/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 5.28589, -206.426, -3.81418, 0.14 ) }
    dend_27 { pt3dadd( 5.44494, -206.693, -3.99055, 0.14 ) }
    dend_27 { pt3dadd( 5.70605, -207.117, -4.28145, 0.28 ) }
    dend_27 { pt3dadd( 5.89915, -207.378, -4.43071, 0.42 ) }
    dend_27 { pt3dadd( 6.23516, -207.798, -4.64041, 0.28 ) }
    dend_27 { pt3dadd( 6.57355, -208.228, -4.82689, 0.14 ) }
    dend_27 { pt3dadd( 6.78467, -208.506, -4.93818, 0.14 ) }
    dend_27 { pt3dadd( 6.98975, -208.783, -5.036, 0.28 ) }
    dend_27 { pt3dadd( 7.5367, -209.527, -5.28456, 0.28 ) }
    dend_27 { pt3dadd( 7.85699, -209.979, -5.43405, 0.14 ) }
    dend_27 { pt3dadd( 8.14507, -210.383, -5.58551, 0.1 ) }
    dend_27 { pt3dadd( 8.45363, -210.826, -5.77605, 0.1 ) }
    dend_27 { pt3dadd( 8.74863, -211.267, -5.9932, 0.14 ) }
    dend_27 { pt3dadd( 8.92753, -211.542, -6.15347, 0.28 ) }
    dend_27 { pt3dadd( 9.18853, -211.957, -6.44515, 0.14 ) }
    dend_27 { pt3dadd( 9.464, -212.357, -6.75672, 0.1 ) }
    dend_27 { pt3dadd( 9.74703, -212.727, -7.08083, 0.1 ) }
    dend_27 { pt3dadd( 9.90955, -212.956, -7.31059, 0.1 ) }
    dend_27 { pt3dadd( 10.0549, -213.177, -7.55755, 0.1 ) }
    dend_27 { pt3dadd( 10.1858, -213.392, -7.81224, 0.1 ) }
    dend_27 { pt3dadd( 10.3081, -213.605, -8.07758, 0.1 ) }
    dend_27 { pt3dadd( 10.5407, -214.026, -8.60611, 0.14 ) }
    dend_27 { pt3dadd( 10.861, -214.591, -9.33524, 0.28 ) }
    dend_27 { pt3dadd( 11.1083, -215.008, -9.86624, 0.14 ) }
    dend_27 { pt3dadd( 11.2372, -215.218, -10.1306, 0.1 ) }
    dend_27 { pt3dadd( 11.3689, -215.424, -10.3862, 0.1 ) }
    dend_27 { pt3dadd( 11.6566, -215.855, -10.8966, 0.14 ) }
    dend_27 { pt3dadd( 11.8099, -216.077, -11.1261, 0.28 ) }
    dend_27 { pt3dadd( 12.1569, -216.569, -11.5198, 0.14 ) }
    dend_27 { pt3dadd( 12.1569, -216.569, -11.5198, 0.28 ) }
    dend_27 { pt3dadd( 12.1569, -216.569, -11.5198, 0.42 ) }
    dend_27 { pt3dadd( 12.2439, -216.799, -11.608, 0.56 ) }
    dend_27 { pt3dadd( 12.384, -217.288, -11.7385, 0.42 ) }
    dend_27 { pt3dadd( 12.5142, -217.781, -11.8559, 0.28 ) }
    dend_27 { pt3dadd( 12.5763, -218.031, -11.9105, 0.28 ) }
    dend_27 { pt3dadd( 12.5763, -218.031, -11.9105, 0.28 ) }
    dend_27 { pt3dadd( 12.6506, -218.269, -11.9817, 0.28 ) }
    dend_27 { pt3dadd( 12.8345, -218.794, -12.1646, 0.14 ) }
    dend_27 { pt3dadd( 13.0263, -219.303, -12.3589, 0.1 ) }
    dend_27 { pt3dadd( 13.2032, -219.76, -12.5393, 0.1 ) }
    dend_27 { pt3dadd( 13.3954, -220.268, -12.7342, 0.1 ) }
    dend_27 { pt3dadd( 13.5801, -220.785, -12.9188, 0.14 ) }
    dend_27 { pt3dadd( 13.7561, -221.316, -13.0909, 0.28 ) }
    dend_27 { pt3dadd( 13.8266, -221.557, -13.157, 0.42 ) }
    dend_27 { pt3dadd( 13.874, -221.807, -13.2261, 0.28 ) }
    dend_27 { pt3dadd( 13.9308, -222.31, -13.3697, 0.14 ) }
    dend_27 { pt3dadd( 13.9477, -222.806, -13.5071, 0.1 ) }
    dend_27 { pt3dadd( 13.9347, -223.312, -13.6429, 0.1 ) }
    dend_27 { pt3dadd( 13.9055, -223.821, -13.777, 0.1 ) }
    dend_27 { pt3dadd( 13.846, -224.856, -14.0503, 0.14 ) }
    dend_27 { pt3dadd( 13.846, -224.856, -14.0503, 0.28 ) }
    dend_27 { pt3dadd( 13.8487, -225.108, -14.1254, 0.56 ) }
    dend_27 { pt3dadd( 13.8894, -225.605, -14.2844, 0.42 ) }
    dend_27 { pt3dadd( 13.9623, -226.091, -14.4443, 0.28 ) }
    dend_27 { pt3dadd( 14.0667, -226.579, -14.5985, 0.14 ) }
    dend_27 { pt3dadd( 14.228, -227.122, -14.7507, 0.1 ) }
    dend_27 { pt3dadd( 14.3938, -227.663, -14.9089, 0.14 ) }
    dend_27 { pt3dadd( 14.5664, -228.189, -15.077, 0.1 ) }
    dend_27 { pt3dadd( 14.5664, -228.189, -15.077, 0.14 ) }
    dend_27 { pt3dadd( 14.6918, -228.681, -15.3492, 0.1 ) }
    dend_27 { pt3dadd( 14.7181, -229.164, -15.6719, 0.14 ) }
    dend_27 { pt3dadd( 14.7181, -229.164, -15.6719, 0.28 ) }
    dend_27 { pt3dadd( 14.7208, -229.38, -15.8125, 0.56 ) }
    dend_27 { pt3dadd( 14.7495, -229.879, -16.1099, 0.42 ) }
    dend_27 { pt3dadd( 14.7611, -230.789, -16.7113, 0.28 ) }
    dend_27 { pt3dadd( 14.7606, -231.206, -17.0005, 0.14 ) }
    dend_27 { pt3dadd( 14.7588, -231.681, -17.3341, 0.1 ) }
    dend_27 { pt3dadd( 14.7527, -232.158, -17.6651, 0.1 ) }
    dend_27 { pt3dadd( 14.7458, -232.585, -17.9466, 0.1 ) }
    dend_27 { pt3dadd( 14.7403, -233.417, -18.4256, 0.1 ) }
    dend_27 { pt3dadd( 14.7403, -233.417, -18.4256, 0.1 ) }
    dend_27 { pt3dadd( 14.7632, -233.653, -18.5309, 0.1 ) }
    dend_27 { pt3dadd( 14.8227, -234.132, -18.7139, 0.1 ) }
    dend_27 { pt3dadd( 14.9113, -234.619, -18.8803, 0.1 ) }
    dend_27 { pt3dadd( 15.0343, -235.104, -19.0366, 0.1 ) }
    dend_27 { pt3dadd( 15.2032, -235.634, -19.1998, 0.1 ) }
    dend_27 { pt3dadd( 15.3847, -236.153, -19.3799, 0.14 ) }
    dend_27 { pt3dadd( 15.5625, -236.609, -19.5617, 0.1 ) }
    dend_27 { pt3dadd( 15.7468, -237.095, -19.8084, 0.1 ) }
    dend_27 { pt3dadd( 15.9223, -237.558, -20.0984, 0.1 ) }
    dend_27 { pt3dadd( 16.0325, -237.836, -20.3155, 0.1 ) }
    dend_27 { pt3dadd( 16.2012, -238.225, -20.6943, 0.1 ) }
    dend_27 { pt3dadd( 16.2851, -238.441, -20.9719, 0.14 ) }
    dend_27 { pt3dadd( 16.4691, -238.946, -21.7836, 0.28 ) }
    dend_27 { pt3dadd( 16.5091, -239.065, -22.0047, 0.7 ) }
    dend_27 { pt3dadd( 16.5977, -239.303, -22.504, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_27 { pt3dadd( 16.7048, -239.53, -23.0127, 0.42 ) }
    dend_27 { pt3dadd( 16.9308, -239.901, -23.8774, 0.28 ) }
    dend_27 { pt3dadd( 17.0409, -240.04, -24.1893, 0.7 ) }
    dend_27 { pt3dadd( 17.1857, -240.179, -24.4863, 0.7 ) }
    dend_27 { pt3dadd( 17.428, -240.404, -24.9367, 0.56 ) }
    dend_27 { pt3dadd( 17.6609, -240.63, -25.4039, 0.42 ) }
    dend_27 { pt3dadd( 17.8048, -240.768, -25.6922, 0.28 ) }
    dend_27 { pt3dadd( 18.0651, -240.987, -26.1482, 0.14 ) }
    dend_27 { pt3dadd( 18.3092, -241.196, -26.6042, 0.1 ) }
    dend_27 { pt3dadd( 18.4551, -241.329, -26.9034, 0.1 ) }
    dend_27 { pt3dadd( 18.8323, -241.732, -27.8138, 0.1 ) }
    dend_27 { pt3dadd( 18.9326, -241.865, -28.1223, 0.14 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 20.7696, -170.326, -37.2615, 0.1 ) }
    dend_22 { pt3dadd( 21.0791, -170.998, -37.2829, 0.1 ) }
    dend_22 { pt3dadd( 21.2316, -171.366, -37.3042, 0.1 ) }
    dend_22 { pt3dadd( 21.3875, -171.782, -37.3333, 0.1 ) }
    dend_22 { pt3dadd( 21.5179, -172.162, -37.3621, 0.1 ) }
    dend_22 { pt3dadd( 21.6619, -172.581, -37.4007, 0.1 ) }
    dend_22 { pt3dadd( 21.7884, -172.954, -37.4382, 0.1 ) }
    dend_22 { pt3dadd( 21.9, -173.334, -37.498, 0.1 ) }
    dend_22 { pt3dadd( 22.0081, -173.718, -37.5553, 0.1 ) }
    dend_22 { pt3dadd( 22.1072, -174.103, -37.6062, 0.1 ) }
    dend_22 { pt3dadd( 22.1564, -174.38, -37.6544, 0.1 ) }
    dend_22 { pt3dadd( 22.1764, -174.575, -37.6939, 0.7 ) }
    dend_22 { pt3dadd( 22.1987, -174.968, -37.7842, 0.7 ) }
    dend_22 { pt3dadd( 22.2081, -175.358, -37.8789, 0.56 ) }
    dend_22 { pt3dadd( 22.2092, -175.75, -37.974, 0.7 ) }
    dend_22 { pt3dadd( 22.1998, -176.572, -38.1677, 0.56 ) }
    dend_22 { pt3dadd( 22.1933, -176.967, -38.2535, 0.42 ) }
    dend_22 { pt3dadd( 22.1932, -177.361, -38.3343, 0.28 ) }
    dend_22 { pt3dadd( 22.2024, -177.758, -38.4082, 0.14 ) }
    dend_22 { pt3dadd( 22.2316, -178.147, -38.4736, 0.28 ) }
    dend_22 { pt3dadd( 22.2589, -178.345, -38.5011, 0.28 ) }
    dend_22 { pt3dadd( 22.3407, -178.737, -38.5397, 0.28 ) }
    dend_22 { pt3dadd( 22.432, -179.127, -38.5849, 0.14 ) }
    dend_22 { pt3dadd( 22.5293, -179.513, -38.6345, 0.1 ) }
    dend_22 { pt3dadd( 22.6414, -179.941, -38.6925, 0.1 ) }
    dend_22 { pt3dadd( 22.7343, -180.324, -38.7728, 0.1 ) }
    dend_22 { pt3dadd( 22.8177, -180.703, -38.872, 0.1 ) }
    dend_22 { pt3dadd( 22.9032, -181.125, -39.0018, 0.1 ) }
    dend_22 { pt3dadd( 22.9708, -181.497, -39.1302, 0.14 ) }
    dend_22 { pt3dadd( 23.0274, -181.862, -39.2638, 0.28 ) }
    dend_22 { pt3dadd( 23.1245, -182.648, -39.5514, 0.42 ) }
    dend_22 { pt3dadd( 23.173, -183.02, -39.6899, 0.84 ) }
    dend_22 { pt3dadd( 23.173, -183.02, -39.6899, 0.7 ) }
    dend_22 { pt3dadd( 23.214, -183.211, -39.7379, 0.28 ) }
    dend_22 { pt3dadd( 23.3606, -183.582, -39.7656, 0.14 ) }
    dend_22 { pt3dadd( 23.5678, -183.918, -39.7029, 0.1 ) }
    dend_22 { pt3dadd( 23.8364, -184.233, -39.5597, 0.1 ) }
    dend_22 { pt3dadd( 24.0889, -184.497, -39.4116, 0.1 ) }
    dend_22 { pt3dadd( 24.6284, -185.009, -39.0585, 0.1 ) }
    dend_22 { pt3dadd( 25.1783, -185.494, -38.6867, 0.1 ) }
    dend_22 { pt3dadd( 25.6703, -185.918, -38.3654, 0.1 ) }
    dend_22 { pt3dadd( 26.2275, -186.414, -38.0195, 0.1 ) }
    dend_22 { pt3dadd( 26.4915, -186.664, -37.8674, 0.1 ) }
    dend_22 { pt3dadd( 26.9577, -187.192, -37.6766, 0.1 ) }
    dend_22 { pt3dadd( 27.0699, -187.581, -37.8547, 0.1 ) }
    dend_22 { pt3dadd( 27.0774, -188.211, -38.3915, 0.1 ) }
    dend_22 { pt3dadd( 27.0381, -188.781, -38.9562, 0.1 ) }
    dend_22 { pt3dadd( 26.9814, -189.289, -39.5049, 0.1 ) }
    dend_22 { pt3dadd( 26.9571, -189.552, -39.7965, 0.1 ) }
    dend_22 { pt3dadd( 26.9213, -190.061, -40.3455, 0.1 ) }
    dend_22 { pt3dadd( 26.9185, -190.199, -40.4861, 0.1 ) }
    dend_22 { pt3dadd( 26.9372, -190.516, -40.7855, 0.1 ) }
    dend_22 { pt3dadd( 26.9769, -190.849, -41.074, 0.1 ) }
    dend_22 { pt3dadd( 27.0085, -191.176, -41.3616, 0.1 ) }
    dend_22 { pt3dadd( 27.0267, -191.47, -41.6252, 0.1 ) }
    dend_22 { pt3dadd( 27.0329, -192.022, -42.1367, 0.1 ) }
    dend_22 { pt3dadd( 27.0054, -192.615, -42.7177, 0.1 ) }
    dend_22 { pt3dadd( 26.9678, -192.88, -42.9948, 0.1 ) }
    dend_22 { pt3dadd( 26.846, -193.419, -43.6029, 0.1 ) }
    dend_22 { pt3dadd( 26.7777, -193.673, -43.8956, 0.14 ) }
    dend_22 { pt3dadd( 26.6426, -194.209, -44.5038, 0.28 ) }
    dend_22 { pt3dadd( 26.6152, -194.346, -44.6429, 0.14 ) }
    dend_22 { pt3dadd( 26.5311, -194.929, -45.1897, 0.1 ) }
    dend_22 { pt3dadd( 26.4631, -195.531, -45.7549, 0.1 ) }
    dend_22 { pt3dadd( 26.4547, -195.679, -45.8823, 0.1 ) }
    dend_22 { pt3dadd( 26.4606, -196.031, -46.152, 0.1 ) }
    dend_22 { pt3dadd( 26.5178, -196.374, -46.3441, 0.1 ) }
    dend_22 { pt3dadd( 26.6389, -196.773, -46.494, 0.1 ) }
    dend_22 { pt3dadd( 26.9882, -197.527, -46.619, 0.14 ) }
    dend_22 { pt3dadd( 27.1756, -197.878, -46.6306, 0.28 ) }
    dend_22 { pt3dadd( 27.5041, -198.539, -46.6649, 0.84 ) }
    dend_22 { pt3dadd( 27.8068, -199.318, -46.7491, 0.7 ) }
    dend_22 { pt3dadd( 27.9196, -199.7, -46.8112, 0.56 ) }
    dend_22 { pt3dadd( 27.9657, -200.127, -46.9286, 0.42 ) }
    dend_22 { pt3dadd( 27.9485, -200.504, -47.0677, 0.28 ) }
    dend_22 { pt3dadd( 27.7765, -201.204, -47.4436, 0.14 ) }
    dend_22 { pt3dadd( 27.5393, -201.883, -47.8617, 0.1 ) }
    dend_22 { pt3dadd( 27.4712, -202.034, -47.9673, 0.1 ) }
    dend_22 { pt3dadd( 27.1674, -202.664, -48.4173, 0.1 ) }
    dend_22 { pt3dadd( 27.0187, -202.967, -48.6226, 0.1 ) }
    dend_22 { pt3dadd( 26.7228, -203.627, -49.0304, 0.1 ) }
    dend_22 { pt3dadd( 26.6027, -203.964, -49.2027, 0.1 ) }
    dend_22 { pt3dadd( 26.4047, -204.69, -49.5193, 0.1 ) }
    dend_22 { pt3dadd( 26.3247, -205.056, -49.6602, 0.1 ) }
    dend_22 { pt3dadd( 26.2713, -205.477, -49.7872, 0.1 ) }
    dend_22 { pt3dadd( 26.246, -205.867, -49.8812, 0.1 ) }
    dend_22 { pt3dadd( 26.2403, -206.26, -49.9652, 0.1 ) }
    dend_22 { pt3dadd( 26.2383, -206.458, -50.0089, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_22 { pt3dadd( 26.2504, -206.657, -50.0375, 0.56 ) }
    dend_22 { pt3dadd( 26.2868, -207.055, -50.0903, 0.42 ) }
    dend_22 { pt3dadd( 26.3456, -207.444, -50.143, 0.28 ) }
    dend_22 { pt3dadd( 26.4827, -208.171, -50.2293, 0.14 ) }
    dend_22 { pt3dadd( 26.5689, -208.563, -50.2683, 0.1 ) }
    dend_22 { pt3dadd( 26.7566, -209.28, -50.3357, 0.1 ) }
    dend_22 { pt3dadd( 26.8693, -209.664, -50.3681, 0.1 ) }
    dend_22 { pt3dadd( 27.0118, -210.084, -50.4034, 0.1 ) }
    dend_22 { pt3dadd( 27.1505, -210.46, -50.4326, 0.1 ) }
    dend_22 { pt3dadd( 27.2937, -210.833, -50.4575, 0.1 ) }
    dend_22 { pt3dadd( 27.4409, -211.255, -50.5058, 0.1 ) }
    dend_22 { pt3dadd( 27.5544, -211.634, -50.5671, 0.1 ) }
    dend_22 { pt3dadd( 27.6746, -212.058, -50.6309, 0.14 ) }
    dend_22 { pt3dadd( 27.7807, -212.443, -50.6867, 0.28 ) }
    dend_22 { pt3dadd( 27.8846, -212.819, -50.7414, 0.14 ) }
    dend_22 { pt3dadd( 27.9874, -213.205, -50.7949, 0.1 ) }
    dend_22 { pt3dadd( 28.0826, -213.592, -50.843, 0.1 ) }
    dend_22 { pt3dadd( 28.1762, -213.982, -50.8899, 0.1 ) }
    dend_22 { pt3dadd( 28.238, -214.252, -50.9202, 0.1 ) }
    dend_22 { pt3dadd( 28.3304, -214.642, -50.9662, 0.84 ) }
    dend_22 { pt3dadd( 28.4254, -215.029, -51.0142, 0.7 ) }
    dend_22 { pt3dadd( 28.5231, -215.415, -51.0641, 0.56 ) }
    dend_22 { pt3dadd( 28.5231, -215.415, -51.0641, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 23/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 20.7696, -170.326, -37.2615, 0.28 ) }
    dend_21 { pt3dadd( 22.0325, -170.691, -36.1205, 0.28 ) }
    dend_21 { pt3dadd( 22.7012, -170.889, -35.5259, 0.14 ) }
    dend_21 { pt3dadd( 23.3814, -171.098, -34.9441, 0.1 ) }
    dend_21 { pt3dadd( 24.0628, -171.307, -34.3614, 0.1 ) }
    dend_21 { pt3dadd( 24.8672, -171.555, -33.6734, 0.1 ) }
    dend_21 { pt3dadd( 25.5454, -171.763, -33.0934, 0.14 ) }
    dend_21 { pt3dadd( 26.2442, -171.996, -32.5427, 0.28 ) }
    dend_21 { pt3dadd( 26.5084, -172.086, -32.3411, 0.42 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 32/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.9603, -159.278, -30.1103, 0.14 ) }
    dend_12 { pt3dadd( -17.7172, -159.431, -30.0367, 0.14 ) }
    dend_12 { pt3dadd( -17.3233, -159.675, -29.9058, 0.28 ) }
    dend_12 { pt3dadd( -16.6634, -160.083, -29.6457, 0.14 ) }
    dend_12 { pt3dadd( -16.2842, -160.324, -29.4761, 0.1 ) }
    dend_12 { pt3dadd( -16.0472, -160.476, -29.3633, 0.1 ) }
    dend_12 { pt3dadd( -15.3586, -160.939, -29.0191, 0.1 ) }
    dend_12 { pt3dadd( -15.0023, -161.198, -28.8271, 0.1 ) }
    dend_12 { pt3dadd( -14.6798, -161.479, -28.6192, 0.1 ) }
    dend_12 { pt3dadd( -14.5038, -161.673, -28.4623, 0.1 ) }
    dend_12 { pt3dadd( -14.5038, -161.673, -28.4623, 0.1 ) }
    dend_12 { pt3dadd( -14.4212, -161.837, -28.3452, 0.1 ) }
    dend_12 { pt3dadd( -14.2927, -162.217, -28.0751, 0.1 ) }
    dend_12 { pt3dadd( -14.2069, -162.595, -27.7853, 0.1 ) }
    dend_12 { pt3dadd( -14.1683, -162.833, -27.5912, 0.1 ) }
    dend_12 { pt3dadd( -14.1155, -163.2, -27.2712, 0.1 ) }
    dend_12 { pt3dadd( -14.0648, -163.559, -26.944, 0.1 ) }
    dend_12 { pt3dadd( -14.034, -163.778, -26.7382, 0.1 ) }
    dend_12 { pt3dadd( -13.9343, -164.485, -26.0572, 0.1 ) }
    dend_12 { pt3dadd( -13.8832, -164.836, -25.7219, 0.1 ) }
    dend_12 { pt3dadd( -13.8479, -165.058, -25.5143, 0.1 ) }
    dend_12 { pt3dadd( -13.7896, -165.411, -25.1817, 0.1 ) }
    dend_12 { pt3dadd( -13.7261, -165.763, -24.8577, 0.1 ) }
    dend_12 { pt3dadd( -13.6763, -165.997, -24.6618, 0.1 ) }
    dend_12 { pt3dadd( -13.5561, -166.386, -24.3988, 0.1 ) }
    dend_12 { pt3dadd( -13.4782, -166.633, -24.2296, 0.1 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -17.9603, -159.278, -30.1103, 0.1 ) }
    dend_11 { pt3dadd( -18.1425, -160.237, -29.8217, 0.1 ) }
    dend_11 { pt3dadd( -18.2177, -160.737, -29.6874, 0.1 ) }
    dend_11 { pt3dadd( -18.2815, -161.247, -29.561, 0.1 ) }
    dend_11 { pt3dadd( -18.3365, -161.763, -29.4407, 0.1 ) }
    dend_11 { pt3dadd( -18.3943, -162.279, -29.3331, 0.1 ) }
    dend_11 { pt3dadd( -18.4605, -162.799, -29.2384, 0.1 ) }
    dend_11 { pt3dadd( -18.5101, -163.323, -29.1731, 0.1 ) }
    dend_11 { pt3dadd( -18.5672, -163.838, -29.1152, 0.1 ) }
    dend_11 { pt3dadd( -18.6312, -164.365, -29.0601, 0.1 ) }
    dend_11 { pt3dadd( -18.7062, -164.955, -29.0006, 0.1 ) }
    dend_11 { pt3dadd( -18.7796, -165.535, -28.9421, 0.1 ) }
    dend_11 { pt3dadd( -18.8433, -166.059, -28.8873, 0.1 ) }
    dend_11 { pt3dadd( -18.9094, -166.585, -28.8336, 0.1 ) }
    dend_11 { pt3dadd( -18.9731, -167.109, -28.7788, 0.1 ) }
    dend_11 { pt3dadd( -19.0308, -167.636, -28.719, 0.1 ) }
    dend_11 { pt3dadd( -19.077, -168.151, -28.653, 0.14 ) }
    dend_11 { pt3dadd( -19.1471, -168.669, -28.5601, 0.28 ) }
    dend_11 { pt3dadd( -19.2541, -169.241, -28.4356, 0.14 ) }
    dend_11 { pt3dadd( -19.3978, -169.729, -28.287, 0.1 ) }
    dend_11 { pt3dadd( -19.5744, -170.197, -28.1103, 0.1 ) }
    dend_11 { pt3dadd( -19.6682, -170.416, -28.0161, 0.1 ) }
    dend_11 { pt3dadd( -20.0893, -171.349, -27.5829, 0.1 ) }
    dend_11 { pt3dadd( -20.2868, -171.791, -27.3701, 0.1 ) }
    dend_11 { pt3dadd( -20.6754, -172.725, -26.9205, 0.1 ) }
    dend_11 { pt3dadd( -20.8402, -173.193, -26.7401, 0.1 ) }
    dend_11 { pt3dadd( -20.9792, -173.69, -26.6082, 0.1 ) }
    dend_11 { pt3dadd( -21.0803, -174.205, -26.531, 0.1 ) }
    dend_11 { pt3dadd( -21.1319, -174.736, -26.5159, 0.14 ) }
    dend_11 { pt3dadd( -21.1583, -175.256, -26.5385, 0.1 ) }
    dend_11 { pt3dadd( -21.15, -176.365, -26.6603, 0.14 ) }
    dend_11 { pt3dadd( -21.1471, -176.958, -26.7292, 0.1 ) }
    dend_11 { pt3dadd( -21.1471, -177.223, -26.7563, 0.14 ) }
    dend_11 { pt3dadd( -21.1368, -177.477, -26.7896, 0.28 ) }
    dend_11 { pt3dadd( -21.1185, -177.737, -26.8226, 0.28 ) }
    dend_11 { pt3dadd( -21.0729, -178.264, -26.8704, 0.14 ) }
    dend_11 { pt3dadd( -21.0254, -178.79, -26.885, 0.1 ) }
    dend_11 { pt3dadd( -20.9675, -179.317, -26.8967, 0.1 ) }
    dend_11 { pt3dadd( -20.8554, -180.392, -26.9133, 0.1 ) }
    dend_11 { pt3dadd( -20.7968, -180.91, -26.912, 0.1 ) }
    dend_11 { pt3dadd( -20.7367, -181.435, -26.8987, 0.1 ) }
    dend_11 { pt3dadd( -20.6766, -181.959, -26.8741, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_11 { pt3dadd( -20.6463, -182.486, -26.8104, 0.1 ) }
    dend_11 { pt3dadd( -20.6694, -183.003, -26.7, 0.1 ) }
    dend_11 { pt3dadd( -20.7493, -183.342, -26.5607, 0.1 ) }
    dend_11 { pt3dadd( -20.9189, -183.788, -26.3395, 1.12 ) }
    dend_11 { pt3dadd( -20.9189, -183.788, -26.3395, 0.98 ) }
    dend_11 { pt3dadd( -21.3421, -184.586, -25.8967, 0.28 ) }
    dend_11 { pt3dadd( -21.5951, -185.056, -25.6451, 0.14 ) }
    dend_11 { pt3dadd( -22.0428, -185.935, -25.214, 0.1 ) }
    dend_11 { pt3dadd( -22.2724, -186.426, -24.999, 0.1 ) }
    dend_11 { pt3dadd( -22.4454, -186.889, -24.8145, 0.1 ) }
    dend_11 { pt3dadd( -22.5644, -187.378, -24.6424, 0.1 ) }
    dend_11 { pt3dadd( -22.6098, -187.881, -24.4885, 0.1 ) }
    dend_11 { pt3dadd( -22.6348, -188.378, -24.3132, 0.1 ) }
    dend_11 { pt3dadd( -22.6418, -188.629, -24.2262, 0.1 ) }
    dend_11 { pt3dadd( -22.6812, -189.179, -24.011, 0.1 ) }
    dend_11 { pt3dadd( -22.7612, -189.719, -23.7965, 0.1 ) }
    dend_11 { pt3dadd( -22.834, -190.055, -23.6671, 0.1 ) }
    dend_11 { pt3dadd( -23.0829, -190.982, -23.3365, 0.1 ) }
    dend_11 { pt3dadd( -23.2431, -191.52, -23.1681, 0.1 ) }
    dend_11 { pt3dadd( -23.412, -192.074, -23.0226, 0.1 ) }
    dend_11 { pt3dadd( -23.5168, -192.42, -22.9508, 0.1 ) }
    dend_11 { pt3dadd( -23.6523, -192.929, -22.8674, 0.1 ) }
    dend_11 { pt3dadd( -23.7561, -193.445, -22.7986, 0.1 ) }
    dend_11 { pt3dadd( -23.8443, -193.962, -22.718, 0.1 ) }
    dend_11 { pt3dadd( -23.9375, -194.474, -22.6031, 0.1 ) }
    dend_11 { pt3dadd( -24.0645, -194.961, -22.4408, 0.1 ) }
    dend_11 { pt3dadd( -24.2152, -195.423, -22.2518, 0.1 ) }
    dend_11 { pt3dadd( -24.3902, -195.875, -22.0448, 0.1 ) }
    dend_11 { pt3dadd( -24.7925, -196.688, -21.602, 0.1 ) }
    dend_11 { pt3dadd( -25.019, -197.094, -21.36, 0.1 ) }
    dend_11 { pt3dadd( -25.5204, -197.934, -20.8558, 0.1 ) }
    dend_11 { pt3dadd( -25.7668, -198.337, -20.6273, 0.1 ) }
    dend_11 { pt3dadd( -26.0144, -198.75, -20.4115, 0.1 ) }
    dend_11 { pt3dadd( -26.5158, -199.654, -20.016, 0.1 ) }
    dend_11 { pt3dadd( -26.7294, -200.116, -19.8649, 0.1 ) }
    dend_11 { pt3dadd( -26.9683, -200.635, -19.6975, 0.1 ) }
    dend_11 { pt3dadd( -27.184, -201.158, -19.5452, 0.1 ) }
    dend_11 { pt3dadd( -27.2795, -201.395, -19.4737, 0.1 ) }
    dend_11 { pt3dadd( -27.4747, -201.936, -19.3139, 0.1 ) }
    dend_11 { pt3dadd( -27.6164, -202.428, -19.178, 0.1 ) }
    dend_11 { pt3dadd( -27.8808, -203.434, -18.8746, 0.1 ) }
    dend_11 { pt3dadd( -27.9899, -203.918, -18.7174, 0.1 ) }
    dend_11 { pt3dadd( -28.0837, -204.415, -18.554, 0.1 ) }
    dend_11 { pt3dadd( -28.1691, -204.915, -18.4045, 0.1 ) }
    dend_11 { pt3dadd( -28.2401, -205.425, -18.2703, 0.1 ) }
    dend_11 { pt3dadd( -28.3068, -205.942, -18.171, 0.1 ) }
    dend_11 { pt3dadd( -28.3347, -206.205, -18.1404, 0.1 ) }
    dend_11 { pt3dadd( -28.4051, -206.72, -18.0922, 0.1 ) }
    dend_11 { pt3dadd( -28.4979, -207.308, -18.0464, 0.1 ) }
    dend_11 { pt3dadd( -28.594, -207.829, -18.016, 0.1 ) }
    dend_11 { pt3dadd( -28.7084, -208.405, -17.9884, 0.1 ) }
    dend_11 { pt3dadd( -28.8126, -208.925, -17.9641, 0.1 ) }
    dend_11 { pt3dadd( -28.9331, -209.51, -17.9393, 0.1 ) }
    dend_11 { pt3dadd( -29.0384, -210.03, -17.9158, 0.1 ) }
    dend_11 { pt3dadd( -29.1259, -210.611, -17.9128, 0.14 ) }
    dend_11 { pt3dadd( -29.1861, -211.138, -17.9306, 0.1 ) }
    dend_11 { pt3dadd( -29.2223, -211.669, -17.964, 0.1 ) }
    dend_11 { pt3dadd( -29.2391, -212.254, -18.0172, 0.1 ) }
    dend_11 { pt3dadd( -29.229, -212.78, -18.0699, 0.1 ) }
    dend_11 { pt3dadd( -29.1819, -213.755, -18.1685, 0.14 ) }
    dend_11 { pt3dadd( -29.1819, -213.755, -18.1685, 0.28 ) }
    dend_11 { pt3dadd( -29.1543, -214.016, -18.2038, 0.28 ) }
    dend_11 { pt3dadd( -29.0924, -214.534, -18.2824, 0.14 ) }
    dend_11 { pt3dadd( -29.0305, -215.056, -18.3519, 0.1 ) }
    dend_11 { pt3dadd( -28.9617, -215.562, -18.4361, 0.1 ) }
    dend_11 { pt3dadd( -28.9103, -216.081, -18.5326, 0.1 ) }
    dend_11 { pt3dadd( -28.8251, -217.162, -18.7831, 0.1 ) }
    dend_11 { pt3dadd( -28.7993, -217.671, -18.9261, 0.1 ) }
    dend_11 { pt3dadd( -28.7954, -218.173, -19.088, 0.1 ) }
    dend_11 { pt3dadd( -28.8312, -219.191, -19.4291, 0.1 ) }
    dend_11 { pt3dadd( -28.8676, -219.755, -19.6086, 0.1 ) }
    dend_11 { pt3dadd( -28.9239, -220.319, -19.756, 0.1 ) }
    dend_11 { pt3dadd( -28.9704, -220.689, -19.809, 0.1 ) }
    dend_11 { pt3dadd( -29.0364, -221.273, -19.8509, 0.1 ) }
    dend_11 { pt3dadd( -29.0871, -221.803, -19.8372, 0.1 ) }
    dend_11 { pt3dadd( -29.1146, -222.167, -19.7868, 0.1 ) }
    dend_11 { pt3dadd( -29.1284, -222.691, -19.6951, 0.1 ) }
    dend_11 { pt3dadd( -29.1311, -223.269, -19.585, 0.1 ) }
    dend_11 { pt3dadd( -29.1383, -223.792, -19.4887, 0.1 ) }
    dend_11 { pt3dadd( -29.1548, -224.314, -19.3996, 0.1 ) }
    dend_11 { pt3dadd( -29.2093, -224.831, -19.2964, 0.1 ) }
    dend_11 { pt3dadd( -29.3082, -225.395, -19.1709, 0.1 ) }
    dend_11 { pt3dadd( -29.4354, -225.882, -19.0077, 0.1 ) }
    dend_11 { pt3dadd( -29.6079, -226.402, -18.7824, 0.1 ) }
    dend_11 { pt3dadd( -29.6886, -226.626, -18.6661, 0.1 ) }
    dend_11 { pt3dadd( -29.9944, -227.387, -18.1481, 0.1 ) }
    dend_11 { pt3dadd( -30.1519, -227.773, -17.845, 0.1 ) }
    dend_11 { pt3dadd( -30.4616, -228.583, -17.1686, 0.1 ) }
    dend_11 { pt3dadd( -30.5953, -228.966, -16.8516, 0.1 ) }
    dend_11 { pt3dadd( -30.7132, -229.369, -16.54, 0.1 ) }
    dend_11 { pt3dadd( -30.9247, -230.266, -15.9389, 0.1 ) }
    dend_11 { pt3dadd( -31.0003, -230.727, -15.6918, 0.1 ) }
    dend_11 { pt3dadd( -31.0468, -231.215, -15.4976, 0.1 ) }
    dend_11 { pt3dadd( -31.057, -231.732, -15.3746, 0.1 ) }
    dend_11 { pt3dadd( -31.0529, -232.256, -15.2994, 0.1 ) }
    dend_11 { pt3dadd( -31.035, -232.784, -15.2703, 0.1 ) }
    dend_11 { pt3dadd( -31.0043, -233.306, -15.2854, 0.1 ) }
    dend_11 { pt3dadd( -30.938, -234.384, -15.3407, 0.14 ) }
    dend_11 { pt3dadd( -30.9123, -234.913, -15.3812, 0.28 ) }
    dend_11 { pt3dadd( -30.8955, -235.507, -15.4337, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_11 { pt3dadd( -30.8956, -236.029, -15.4754, 0.1 ) }
    dend_11 { pt3dadd( -30.9053, -236.292, -15.4875, 0.14 ) }
    dend_11 { pt3dadd( -30.9053, -236.292, -15.4875, 0.28 ) }
    dend_11 { pt3dadd( -30.9883, -236.649, -15.3993, 0.1 ) }
    dend_11 { pt3dadd( -31.0986, -237.143, -15.238, 0.1 ) }
    dend_11 { pt3dadd( -31.1944, -237.629, -15.0533, 0.1 ) }
    dend_11 { pt3dadd( -31.28, -238.107, -14.8635, 0.1 ) }
    dend_11 { pt3dadd( -31.4336, -239.1, -14.4702, 0.1 ) }
    dend_11 { pt3dadd( -31.4962, -239.589, -14.2809, 0.1 ) }
    dend_11 { pt3dadd( -31.5511, -240.141, -14.0718, 0.1 ) }
    dend_11 { pt3dadd( -31.592, -240.638, -13.8977, 0.1 ) }
    dend_11 { pt3dadd( -31.6221, -241.144, -13.7408, 0.1 ) }
    dend_11 { pt3dadd( -31.647, -241.658, -13.6151, 0.1 ) }
    dend_11 { pt3dadd( -31.6627, -242.182, -13.5249, 0.1 ) }
    dend_11 { pt3dadd( -31.6967, -242.696, -13.45, 0.1 ) }
    dend_11 { pt3dadd( -31.758, -243.22, -13.3934, 0.1 ) }
    dend_11 { pt3dadd( -31.8423, -243.746, -13.3534, 0.1 ) }
    dend_11 { pt3dadd( -31.9558, -244.333, -13.323, 0.14 ) }
    dend_11 { pt3dadd( -32.0654, -244.846, -13.3041, 0.1 ) }
    dend_11 { pt3dadd( -32.1474, -245.214, -13.2929, 0.1 ) }
    dend_11 { pt3dadd( -32.2842, -245.797, -13.2805, 0.1 ) }
    dend_11 { pt3dadd( -32.4171, -246.369, -13.2672, 0.1 ) }
    dend_11 { pt3dadd( -32.5289, -246.888, -13.2487, 0.1 ) }
    dend_11 { pt3dadd( -32.6332, -247.412, -13.2239, 0.1 ) }
    dend_11 { pt3dadd( -32.7298, -247.933, -13.1938, 0.1 ) }
    dend_11 { pt3dadd( -32.8214, -248.513, -13.1485, 0.1 ) }
    dend_11 { pt3dadd( -32.9008, -249.039, -13.1048, 0.14 ) }
    dend_11 { pt3dadd( -32.9784, -249.563, -13.0603, 0.1 ) }
    dend_11 { pt3dadd( -33.0663, -250.141, -13.0127, 0.14 ) }
    dend_11 { pt3dadd( -33.1513, -250.664, -12.9737, 0.1 ) }
    dend_11 { pt3dadd( -33.2442, -251.189, -12.9402, 0.1 ) }
    dend_11 { pt3dadd( -33.3505, -251.777, -12.9043, 0.1 ) }
    dend_11 { pt3dadd( -33.4479, -252.292, -12.876, 0.1 ) }
    dend_11 { pt3dadd( -33.5659, -252.807, -12.821, 0.1 ) }
    dend_11 { pt3dadd( -33.7111, -253.377, -12.7261, 0.1 ) }
    dend_11 { pt3dadd( -33.8661, -253.932, -12.6068, 0.1 ) }
    dend_11 { pt3dadd( -33.9371, -254.18, -12.5418, 0.1 ) }
    dend_11 { pt3dadd( -34.0697, -254.67, -12.3921, 0.14 ) }
    dend_11 { pt3dadd( -34.3008, -255.577, -12.0972, 0.42 ) }
    dend_11 { pt3dadd( -34.4095, -256.067, -11.932, 0.28 ) }
    dend_11 { pt3dadd( -34.496, -256.564, -11.7642, 0.14 ) }
    dend_11 { pt3dadd( -34.5697, -257.057, -11.6145, 0.1 ) }
    dend_11 { pt3dadd( -34.6372, -257.568, -11.4851, 0.1 ) }
    dend_11 { pt3dadd( -34.6922, -258.086, -11.383, 0.1 ) }
    dend_11 { pt3dadd( -34.7309, -258.612, -11.3094, 0.1 ) }
    dend_11 { pt3dadd( -34.7717, -259.136, -11.2377, 0.1 ) }
    dend_11 { pt3dadd( -34.8177, -259.715, -11.1591, 0.1 ) }
    dend_11 { pt3dadd( -34.8862, -260.233, -11.0668, 0.1 ) }
    dend_11 { pt3dadd( -34.9768, -260.743, -10.9552, 0.1 ) }
    dend_11 { pt3dadd( -35.0911, -261.248, -10.832, 1.26 ) }
    dend_11 { pt3dadd( -35.2201, -261.745, -10.7005, 1.12 ) }
    dend_11 { pt3dadd( -35.3644, -262.24, -10.5676, 0.98 ) }
    dend_11 { pt3dadd( -35.6485, -263.181, -10.3141, 0.84 ) }
    dend_11 { pt3dadd( -35.8087, -263.672, -10.1957, 0.7 ) }
    dend_11 { pt3dadd( -35.9909, -264.227, -10.0784, 0.56 ) }
    dend_11 { pt3dadd( -36.1434, -264.718, -9.99034, 0.42 ) }
    dend_11 { pt3dadd( -36.2994, -265.289, -9.90625, 0.28 ) }
    dend_11 { pt3dadd( -36.4052, -265.808, -9.84109, 0.14 ) }
    dend_11 { pt3dadd( -36.477, -266.389, -9.78102, 0.1 ) }
    dend_11 { pt3dadd( -36.4973, -266.92, -9.73701, 0.1 ) }
    dend_11 { pt3dadd( -36.4957, -267.445, -9.67178, 0.1 ) }
    dend_11 { pt3dadd( -36.4792, -267.97, -9.58907, 0.1 ) }
    dend_11 { pt3dadd( -36.4683, -268.539, -9.44551, 0.1 ) }
    dend_11 { pt3dadd( -36.4727, -269.043, -9.2795, 0.1 ) }
    dend_11 { pt3dadd( -36.5074, -270.072, -8.87242, 0.1 ) }
    dend_11 { pt3dadd( -36.5733, -270.967, -8.48632, 0.56 ) }
    dend_11 { pt3dadd( -36.6261, -271.445, -8.27152, 0.42 ) }
    dend_11 { pt3dadd( -36.8259, -272.385, -7.79674, 0.28 ) }
    dend_11 { pt3dadd( -36.9776, -272.817, -7.53494, 0.14 ) }
    dend_11 { pt3dadd( -37.155, -273.227, -7.2607, 0.1 ) }
    dend_11 { pt3dadd( -37.3484, -273.629, -6.98265, 0.1 ) }
    dend_11 { pt3dadd( -37.5317, -274.046, -6.72178, 0.1 ) }
    dend_11 { pt3dadd( -37.9112, -274.93, -6.18615, 0.1 ) }
    dend_11 { pt3dadd( -38.2558, -275.824, -5.69722, 0.1 ) }
    dend_11 { pt3dadd( -38.4267, -276.268, -5.46615, 0.14 ) }
    dend_11 { pt3dadd( -38.5895, -276.721, -5.25196, 0.28 ) }
    dend_11 { pt3dadd( -38.6706, -276.95, -5.14542, 0.98 ) }
    dend_11 { pt3dadd( -38.8172, -277.416, -4.9474, 1.12 ) }
    dend_11 { pt3dadd( -38.9603, -277.881, -4.75894, 0.98 ) }
    dend_11 { pt3dadd( -39.1365, -278.406, -4.54288, 0.84 ) }
    dend_11 { pt3dadd( -39.3262, -278.842, -4.31149, 0.7 ) }
    dend_11 { pt3dadd( -39.7423, -279.687, -3.79807, 0.56 ) }
    dend_11 { pt3dadd( -39.9633, -280.067, -3.53095, 0.42 ) }
    dend_11 { pt3dadd( -40.4586, -280.847, -2.93337, 0.28 ) }
    dend_11 { pt3dadd( -40.6945, -281.212, -2.645, 0.14 ) }
    dend_11 { pt3dadd( -41.1632, -281.969, -2.05418, 0.1 ) }
    dend_11 { pt3dadd( -41.3815, -282.345, -1.78008, 0.1 ) }
    dend_11 { pt3dadd( -41.8342, -283.179, -1.21701, 0.14 ) }
    dend_11 { pt3dadd( -42.0457, -283.578, -0.951125, 0.1 ) }
    dend_11 { pt3dadd( -42.2359, -284.0, -0.699378, 0.1 ) }
    dend_11 { pt3dadd( -42.4207, -284.42, -0.461351, 0.14 ) }
    dend_11 { pt3dadd( -42.4988, -284.654, -0.36391, 0.28 ) }
    // Section: dend_70, id: dend_70, parent: dend_66 (entry count 92/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -8.35678, 82.4531, -8.27276, 0.28 ) }
    dend_70 { pt3dadd( -8.40929, 82.1744, -8.21538, 0.28 ) }
    dend_70 { pt3dadd( -8.45532, 81.7498, -8.09318, 0.14 ) }
    dend_70 { pt3dadd( -8.46259, 81.3698, -7.96514, 0.1 ) }
    dend_70 { pt3dadd( -8.45117, 81.1811, -7.89589, 0.1 ) }
    dend_70 { pt3dadd( -8.37994, 80.4886, -7.63815, 0.1 ) }
    dend_70 { pt3dadd( -8.33723, 80.0733, -7.48361, 0.1 ) }
    dend_70 { pt3dadd( -8.28065, 79.6704, -7.30616, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_70 { pt3dadd( -8.20829, 79.2772, -7.10528, 0.1 ) }
    dend_70 { pt3dadd( -8.11963, 78.8962, -6.8997, 0.1 ) }
    dend_70 { pt3dadd( -8.06488, 78.7255, -6.81151, 0.1 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 3/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -8.35678, 82.4531, -8.27276, 0.1 ) }
    dend_67 { pt3dadd( -8.60721, 82.8512, -8.73943, 0.1 ) }
    dend_67 { pt3dadd( -8.723, 83.0539, -8.97043, 0.1 ) }
    dend_67 { pt3dadd( -8.97321, 83.4727, -9.42018, 0.1 ) }
    dend_67 { pt3dadd( -9.31848, 84.0544, -10.0063, 0.1 ) }
    dend_67 { pt3dadd( -9.54791, 84.414, -10.3144, 0.1 ) }
    dend_67 { pt3dadd( -9.99168, 85.0578, -10.7572, 0.1 ) }
    dend_67 { pt3dadd( -10.2744, 85.4602, -10.9677, 0.1 ) }
    dend_67 { pt3dadd( -10.6731, 85.9689, -11.1139, 0.1 ) }
    dend_67 { pt3dadd( -10.8297, 86.1467, -11.1162, 0.1 ) }
    dend_67 { pt3dadd( -11.5187, 86.8445, -10.9863, 0.1 ) }
    dend_67 { pt3dadd( -12.1449, 87.4309, -10.8372, 0.1 ) }
    dend_67 { pt3dadd( -12.1449, 87.4309, -10.8372, 0.1 ) }
    dend_67 { pt3dadd( -12.6338, 87.8639, -10.7464, 0.1 ) }
    dend_67 { pt3dadd( -13.0109, 88.2247, -10.7533, 0.1 ) }
    dend_67 { pt3dadd( -13.238, 88.4651, -10.8223, 0.1 ) }
    dend_67 { pt3dadd( -13.6393, 88.9244, -11.0719, 0.1 ) }
    dend_67 { pt3dadd( -13.8307, 89.1529, -11.2202, 0.1 ) }
    dend_67 { pt3dadd( -14.123, 89.5099, -11.4614, 0.1 ) }
    dend_67 { pt3dadd( -14.6016, 90.1247, -11.9138, 0.1 ) }
    dend_67 { pt3dadd( -14.8648, 90.4717, -12.1979, 0.1 ) }
    dend_67 { pt3dadd( -15.1079, 90.8216, -12.5056, 0.1 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 25/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 11.3725, -263.982, -2.45903, 0.84 ) }
    dend_32 { pt3dadd( 11.5449, -264.23, -2.44266, 0.84 ) }
    dend_32 { pt3dadd( 11.8765, -264.719, -2.42837, 0.98 ) }
    dend_32 { pt3dadd( 12.1976, -265.229, -2.42741, 0.84 ) }
    dend_32 { pt3dadd( 12.8064, -266.339, -2.5445, 0.7 ) }
    dend_32 { pt3dadd( 13.0892, -266.941, -2.63784, 0.56 ) }
    dend_32 { pt3dadd( 13.3421, -267.57, -2.75477, 0.42 ) }
    dend_32 { pt3dadd( 13.4309, -267.84, -2.81683, 0.56 ) }
    dend_32 { pt3dadd( 13.5687, -268.413, -2.97122, 0.7 ) }
    dend_32 { pt3dadd( 13.7262, -269.513, -3.31075, 0.56 ) }
    dend_32 { pt3dadd( 13.759, -269.927, -3.42973, 0.84 ) }
    dend_32 { pt3dadd( 13.8312, -270.523, -3.54735, 0.84 ) }
    dend_32 { pt3dadd( 13.9459, -271.118, -3.60855, 0.84 ) }
    dend_32 { pt3dadd( 14.1206, -271.7, -3.63492, 0.84 ) }
    dend_32 { pt3dadd( 14.1206, -271.7, -3.63492, 0.98 ) }
    dend_32 { pt3dadd( 14.6182, -272.705, -3.60694, 0.1 ) }
    dend_32 { pt3dadd( 14.9292, -273.309, -3.60442, 0.14 ) }
    dend_32 { pt3dadd( 15.1945, -273.841, -3.61051, 0.1 ) }
    dend_32 { pt3dadd( 15.4754, -274.461, -3.63225, 0.14 ) }
    dend_32 { pt3dadd( 15.7198, -275.096, -3.67183, 0.28 ) }
    dend_32 { pt3dadd( 15.8085, -275.384, -3.69751, 0.42 ) }
    dend_32 { pt3dadd( 15.9074, -275.791, -3.75383, 0.84 ) }
    dend_32 { pt3dadd( 16.039, -276.384, -3.82502, 0.84 ) }
    dend_32 { pt3dadd( 16.1652, -276.976, -3.89139, 0.84 ) }
    dend_32 { pt3dadd( 16.282, -277.572, -3.94942, 0.7 ) }
    dend_32 { pt3dadd( 16.4085, -278.167, -4.01587, 0.56 ) }
    dend_32 { pt3dadd( 16.5086, -278.584, -4.07253, 0.56 ) }
    dend_32 { pt3dadd( 16.5847, -278.873, -4.11777, 0.84 ) }
    dend_32 { pt3dadd( 16.7144, -279.442, -4.25248, 0.84 ) }
    dend_32 { pt3dadd( 16.826, -280.014, -4.42127, 0.7 ) }
    dend_32 { pt3dadd( 16.9388, -280.641, -4.63943, 0.84 ) }
    dend_32 { pt3dadd( 17.0307, -281.204, -4.84944, 0.7 ) }
    dend_32 { pt3dadd( 17.1213, -281.762, -5.06559, 0.84 ) }
    dend_32 { pt3dadd( 17.3234, -282.93, -5.53251, 0.7 ) }
    dend_32 { pt3dadd( 17.3907, -283.206, -5.63181, 0.84 ) }
    dend_32 { pt3dadd( 17.582, -283.831, -5.82022, 0.7 ) }
    dend_32 { pt3dadd( 17.7795, -284.389, -5.9466, 0.84 ) }
    dend_32 { pt3dadd( 18.0312, -285.013, -6.04423, 0.7 ) }
    dend_32 { pt3dadd( 18.2753, -285.566, -6.08942, 0.56 ) }
    dend_32 { pt3dadd( 18.837, -286.707, -6.08905, 0.7 ) }
    dend_32 { pt3dadd( 19.1097, -287.25, -6.07619, 0.84 ) }
    dend_32 { pt3dadd( 19.3819, -287.789, -6.04084, 0.98 ) }
    dend_32 { pt3dadd( 19.6614, -288.326, -5.99007, 0.84 ) }
    dend_32 { pt3dadd( 19.7941, -288.594, -5.95463, 0.84 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 69/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 11.3725, -263.982, -2.45903, 1.26 ) }
    dend_29 { pt3dadd( 11.1756, -264.499, -2.35918, 1.26 ) }
    dend_29 { pt3dadd( 11.0002, -265.034, -2.26691, 1.12 ) }
    dend_29 { pt3dadd( 10.911, -265.371, -2.21707, 0.98 ) }
    dend_29 { pt3dadd( 10.7968, -265.925, -2.14787, 0.84 ) }
    dend_29 { pt3dadd( 10.7052, -266.477, -2.08754, 0.7 ) }
    dend_29 { pt3dadd( 10.6665, -266.831, -2.03032, 0.56 ) }
    dend_29 { pt3dadd( 10.6664, -267.33, -1.93602, 0.1 ) }
    dend_29 { pt3dadd( 10.7195, -267.826, -1.83264, 0.1 ) }
    dend_29 { pt3dadd( 10.8156, -268.303, -1.73115, 0.1 ) }
    dend_29 { pt3dadd( 10.8874, -268.541, -1.68295, 0.1 ) }
    dend_29 { pt3dadd( 11.2085, -269.403, -1.52148, 0.1 ) }
    dend_29 { pt3dadd( 11.3988, -269.853, -1.40674, 0.1 ) }
    dend_29 { pt3dadd( 11.6143, -270.345, -1.2556, 0.1 ) }
    dend_29 { pt3dadd( 11.7968, -270.791, -1.10702, 0.1 ) }
    dend_29 { pt3dadd( 11.9802, -271.294, -0.945315, 0.1 ) }
    dend_29 { pt3dadd( 12.048, -271.529, -0.8783, 0.1 ) }
    dend_29 { pt3dadd( 12.244, -272.456, -0.668762, 0.28 ) }
    dend_29 { pt3dadd( 12.3137, -272.936, -0.555075, 0.14 ) }
    dend_29 { pt3dadd( 12.3616, -273.488, -0.427928, 0.28 ) }
    dend_29 { pt3dadd( 12.3884, -273.984, -0.325397, 0.42 ) }
    dend_29 { pt3dadd( 12.4029, -274.537, -0.230332, 0.56 ) }
    dend_29 { pt3dadd( 12.4241, -275.042, -0.177173, 0.42 ) }
    dend_29 { pt3dadd( 12.4699, -275.61, -0.169825, 0.28 ) }
    dend_29 { pt3dadd( 12.5476, -276.11, -0.177915, 0.14 ) }
    dend_29 { pt3dadd( 12.6108, -276.356, -0.191686, 0.28 ) }
    dend_29 { pt3dadd( 12.6849, -276.588, -0.210318, 0.98 ) }
    dend_29 { pt3dadd( 12.8746, -277.119, -0.260812, 0.84 ) }
    dend_29 { pt3dadd( 13.0646, -277.643, -0.311721, 0.7 ) }
    dend_29 { pt3dadd( 13.243, -278.178, -0.35761, 0.56 ) }
    dend_29 { pt3dadd( 13.3279, -278.519, -0.375649, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_29 { pt3dadd( 13.3928, -278.872, -0.354725, 0.1 ) }
    dend_29 { pt3dadd( 13.4467, -279.423, -0.264834, 0.14 ) }
    dend_29 { pt3dadd( 13.4543, -279.914, -0.140484, 0.28 ) }
    dend_29 { pt3dadd( 13.4381, -280.456, 0.0326757, 0.42 ) }
    dend_29 { pt3dadd( 13.4015, -280.98, 0.229, 0.28 ) }
    dend_29 { pt3dadd( 13.3124, -281.9, 0.531425, 0.14 ) }
    dend_29 { pt3dadd( 13.2692, -282.445, 0.666472, 0.1 ) }
    dend_29 { pt3dadd( 13.2692, -282.445, 0.666472, 0.14 ) }
    dend_29 { pt3dadd( 13.2857, -282.682, 0.747982, 0.14 ) }
    dend_29 { pt3dadd( 13.3606, -282.982, 0.909922, 0.14 ) }
    dend_29 { pt3dadd( 13.6887, -283.73, 1.5171, 0.28 ) }
    dend_29 { pt3dadd( 13.8573, -284.078, 1.82765, 0.28 ) }
    dend_29 { pt3dadd( 14.1818, -284.808, 2.45505, 0.42 ) }
    dend_29 { pt3dadd( 14.4512, -285.506, 2.99465, 0.56 ) }
    dend_29 { pt3dadd( 14.7242, -286.302, 3.56735, 0.42 ) }
    dend_29 { pt3dadd( 14.9683, -287.042, 4.06575, 0.28 ) }
    dend_29 { pt3dadd( 15.1036, -287.509, 4.34915, 0.14 ) }
    dend_29 { pt3dadd( 15.2496, -288.528, 4.61261, 0.1 ) }
    dend_29 { pt3dadd( 15.1953, -289.444, 4.4171, 0.14 ) }
    dend_29 { pt3dadd( 15.1668, -289.679, 4.327, 0.56 ) }
    dend_29 { pt3dadd( 15.0933, -290.115, 4.09178, 0.42 ) }
    dend_29 { pt3dadd( 15.0195, -290.539, 3.83442, 0.28 ) }
    dend_29 { pt3dadd( 14.9538, -290.967, 3.58423, 0.28 ) }
    dend_29 { pt3dadd( 14.8459, -291.905, 3.11875, 0.14 ) }
    dend_29 { pt3dadd( 14.7923, -292.365, 2.92409, 0.1 ) }
    dend_29 { pt3dadd( 14.6718, -293.314, 2.54412, 0.1 ) }
    dend_29 { pt3dadd( 14.6431, -293.555, 2.47129, 0.14 ) }
    dend_29 { pt3dadd( 14.6126, -293.908, 2.41032, 0.28 ) }
    dend_29 { pt3dadd( 14.5904, -294.407, 2.40495, 0.14 ) }
    dend_29 { pt3dadd( 14.5993, -294.971, 2.48611, 0.1 ) }
    dend_29 { pt3dadd( 14.6202, -295.467, 2.59069, 0.14 ) }
    dend_29 { pt3dadd( 14.6985, -296.494, 2.85863, 0.1 ) }
    dend_29 { pt3dadd( 14.7454, -296.984, 2.97559, 0.1 ) }
    dend_29 { pt3dadd( 14.812, -297.538, 3.08987, 0.1 ) }
    dend_29 { pt3dadd( 14.8758, -298.024, 3.17531, 0.1 ) }
    dend_29 { pt3dadd( 14.9418, -298.525, 3.24331, 0.1 ) }
    dend_29 { pt3dadd( 15.0006, -299.027, 3.28375, 0.1 ) }
    dend_29 { pt3dadd( 15.0453, -299.535, 3.28888, 0.1 ) }
    dend_29 { pt3dadd( 15.0846, -300.041, 3.29602, 0.1 ) }
    dend_29 { pt3dadd( 15.0993, -300.295, 3.30156, 0.14 ) }
    dend_29 { pt3dadd( 15.1103, -300.648, 3.31294, 0.1 ) }
    dend_29 { pt3dadd( 15.1087, -301.155, 3.33611, 0.14 ) }
    dend_29 { pt3dadd( 15.0977, -301.726, 3.36581, 0.1 ) }
    dend_29 { pt3dadd( 15.0873, -302.236, 3.39252, 0.1 ) }
    dend_29 { pt3dadd( 15.0693, -302.799, 3.38248, 0.1 ) }
    dend_29 { pt3dadd( 15.0538, -303.307, 3.34515, 0.1 ) }
    dend_29 { pt3dadd( 15.0467, -303.869, 3.31114, 0.1 ) }
    dend_29 { pt3dadd( 15.0466, -304.378, 3.28814, 0.1 ) }
    dend_29 { pt3dadd( 15.052, -304.886, 3.27571, 0.1 ) }
    dend_29 { pt3dadd( 15.0707, -305.925, 3.277, 0.14 ) }
    dend_29 { pt3dadd( 15.0762, -306.178, 3.28476, 0.28 ) }
    dend_29 { pt3dadd( 15.0778, -307.151, 3.35313, 0.7 ) }
    dend_29 { pt3dadd( 15.0782, -307.65, 3.40328, 0.56 ) }
    dend_29 { pt3dadd( 15.0659, -308.217, 3.48017, 0.42 ) }
    dend_29 { pt3dadd( 15.0532, -308.72, 3.56057, 0.28 ) }
    dend_29 { pt3dadd( 15.0462, -309.275, 3.65718, 0.14 ) }
    dend_29 { pt3dadd( 15.0378, -309.841, 3.72481, 0.1 ) }
    dend_29 { pt3dadd( 15.0327, -310.349, 3.74931, 0.1 ) }
    dend_29 { pt3dadd( 15.0393, -310.91, 3.77169, 0.1 ) }
    dend_29 { pt3dadd( 15.064, -311.417, 3.78456, 0.1 ) }
    dend_29 { pt3dadd( 15.1042, -311.922, 3.79132, 0.1 ) }
    dend_29 { pt3dadd( 15.1398, -312.174, 3.78862, 0.56 ) }
    dend_29 { pt3dadd( 15.2335, -312.674, 3.77426, 0.42 ) }
    dend_29 { pt3dadd( 15.3301, -313.162, 3.7582, 0.28 ) }
    dend_29 { pt3dadd( 15.4258, -313.658, 3.74287, 0.14 ) }
    dend_29 { pt3dadd( 15.5107, -314.16, 3.73202, 0.14 ) }
    dend_29 { pt3dadd( 15.5819, -314.719, 3.72905, 0.28 ) }
    dend_29 { pt3dadd( 15.6061, -314.973, 3.73088, 0.42 ) }
    dend_29 { pt3dadd( 15.6302, -315.332, 3.73746, 0.1 ) }
    dend_29 { pt3dadd( 15.6548, -315.895, 3.75282, 0.1 ) }
    dend_29 { pt3dadd( 15.67, -316.404, 3.76954, 0.1 ) }
    dend_29 { pt3dadd( 15.6848, -316.976, 3.78919, 0.1 ) }
    dend_29 { pt3dadd( 15.7119, -317.485, 3.80122, 0.1 ) }
    dend_29 { pt3dadd( 15.7381, -317.727, 3.80174, 0.14 ) }
    dend_29 { pt3dadd( 15.7804, -317.978, 3.79639, 0.56 ) }
    dend_29 { pt3dadd( 15.9003, -318.472, 3.81484, 0.42 ) }
    dend_29 { pt3dadd( 16.04, -318.955, 3.85825, 0.28 ) }
    dend_29 { pt3dadd( 16.2124, -319.484, 3.92415, 0.14 ) }
    dend_29 { pt3dadd( 16.3699, -319.961, 3.99549, 0.1 ) }
    dend_29 { pt3dadd( 16.535, -320.424, 4.10306, 0.1 ) }
    dend_29 { pt3dadd( 16.8798, -321.356, 4.37609, 0.14 ) }
    dend_29 { pt3dadd( 17.0452, -321.796, 4.52511, 0.1 ) }
    dend_29 { pt3dadd( 17.2096, -322.246, 4.68634, 0.1 ) }
    dend_29 { pt3dadd( 17.356, -322.699, 4.84979, 0.1 ) }
    dend_29 { pt3dadd( 17.6063, -323.553, 5.13196, 0.56 ) }
    dend_29 { pt3dadd( 17.7173, -324.036, 5.23231, 0.7 ) }
    dend_29 { pt3dadd( 17.8104, -324.532, 5.29808, 0.56 ) }
    dend_29 { pt3dadd( 17.8972, -325.027, 5.35568, 0.42 ) }
    dend_29 { pt3dadd( 17.9855, -325.579, 5.40229, 0.28 ) }
    dend_29 { pt3dadd( 18.0488, -326.081, 5.42534, 0.14 ) }
    dend_29 { pt3dadd( 18.1483, -327.114, 5.4215, 0.28 ) }
    dend_29 { pt3dadd( 18.1965, -328.052, 5.37351, 0.7 ) }
    dend_29 { pt3dadd( 18.2077, -328.55, 5.3285, 0.56 ) }
    dend_29 { pt3dadd( 18.2124, -329.054, 5.26817, 0.42 ) }
    dend_29 { pt3dadd( 18.2036, -329.61, 5.15082, 0.28 ) }
    dend_29 { pt3dadd( 18.1868, -330.106, 5.05223, 0.14 ) }
    dend_29 { pt3dadd( 18.1301, -331.154, 4.87487, 0.1 ) }
    dend_29 { pt3dadd( 18.082, -331.651, 4.77936, 0.1 ) }
    dend_29 { pt3dadd( 18.0266, -332.148, 4.69825, 0.1 ) }
    dend_29 { pt3dadd( 17.9073, -333.17, 4.56162, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_29 { pt3dadd( 17.7943, -334.132, 4.48193, 0.1 ) }
    dend_29 { pt3dadd( 17.7316, -334.7, 4.48329, 0.1 ) }
    dend_29 { pt3dadd( 17.6818, -335.256, 4.54923, 0.1 ) }
    dend_29 { pt3dadd( 17.657, -335.505, 4.58474, 0.1 ) }
    dend_29 { pt3dadd( 17.657, -335.505, 4.58474, 0.1 ) }
    dend_29 { pt3dadd( 17.6075, -335.862, 4.58509, 0.1 ) }
    dend_29 { pt3dadd( 17.5399, -336.363, 4.51856, 0.1 ) }
    dend_29 { pt3dadd( 17.4827, -336.913, 4.42317, 0.1 ) }
    dend_29 { pt3dadd( 17.4343, -337.411, 4.33071, 0.1 ) }
    dend_29 { pt3dadd( 17.3457, -338.459, 4.14081, 0.1 ) }
    dend_29 { pt3dadd( 17.3157, -338.957, 4.05469, 0.1 ) }
    dend_29 { pt3dadd( 17.3021, -339.451, 3.97318, 0.1 ) }
    dend_29 { pt3dadd( 17.3023, -339.952, 3.90066, 0.1 ) }
    dend_29 { pt3dadd( 17.3184, -340.31, 3.85976, 0.1 ) }
    dend_29 { pt3dadd( 17.3613, -340.816, 3.82638, 0.1 ) }
    dend_29 { pt3dadd( 17.4388, -341.317, 3.81834, 0.1 ) }
    dend_29 { pt3dadd( 17.5294, -341.806, 3.84116, 0.1 ) }
    dend_29 { pt3dadd( 17.6361, -342.3, 3.89035, 0.14 ) }
    dend_29 { pt3dadd( 17.7553, -342.787, 3.95743, 0.28 ) }
    dend_29 { pt3dadd( 17.8863, -343.271, 4.03525, 0.28 ) }
    dend_29 { pt3dadd( 18.023, -343.807, 4.13617, 0.42 ) }
    dend_29 { pt3dadd( 18.2442, -344.733, 4.32304, 0.56 ) }
    dend_29 { pt3dadd( 18.3494, -345.209, 4.41834, 0.42 ) }
    dend_29 { pt3dadd( 18.4479, -345.7, 4.50883, 0.28 ) }
    dend_29 { pt3dadd( 18.5369, -346.192, 4.58768, 0.14 ) }
    dend_29 { pt3dadd( 18.6182, -346.744, 4.69964, 0.1 ) }
    dend_29 { pt3dadd( 18.6641, -347.228, 4.80801, 0.1 ) }
    dend_29 { pt3dadd( 18.7003, -347.715, 4.94923, 0.1 ) }
    dend_29 { pt3dadd( 18.7222, -348.18, 5.14529, 0.14 ) }
    dend_29 { pt3dadd( 18.7248, -348.405, 5.26199, 0.28 ) }
    dend_29 { pt3dadd( 18.6987, -349.314, 5.80039, 0.1 ) }
    dend_29 { pt3dadd( 18.6735, -349.79, 6.10447, 0.1 ) }
    dend_29 { pt3dadd( 18.606, -350.592, 6.63487, 0.1 ) }
    dend_29 { pt3dadd( 18.5603, -351.059, 6.93206, 0.1 ) }
    dend_29 { pt3dadd( 18.5092, -351.566, 7.18306, 0.1 ) }
    dend_29 { pt3dadd( 18.4838, -351.906, 7.27377, 0.1 ) }
    dend_29 { pt3dadd( 18.4774, -352.161, 7.27195, 0.14 ) }
    dend_29 { pt3dadd( 18.4832, -352.41, 7.23415, 0.56 ) }
    dend_29 { pt3dadd( 18.5096, -352.9, 7.10581, 0.42 ) }
    dend_29 { pt3dadd( 18.5928, -353.916, 6.81458, 0.28 ) }
    dend_29 { pt3dadd( 18.6331, -354.401, 6.68102, 0.14 ) }
    dend_29 { pt3dadd( 18.6618, -354.895, 6.56681, 0.1 ) }
    dend_29 { pt3dadd( 18.6606, -355.386, 6.44455, 0.14 ) }
    dend_29 { pt3dadd( 18.648, -355.632, 6.38327, 0.28 ) }
    dend_29 { pt3dadd( 18.6173, -355.974, 6.30672, 0.7 ) }
    dend_29 { pt3dadd( 18.5577, -356.533, 6.21264, 0.56 ) }
    dend_29 { pt3dadd( 18.4956, -357.067, 6.05945, 0.42 ) }
    dend_29 { pt3dadd( 18.4072, -357.939, 5.73732, 0.28 ) }
    dend_29 { pt3dadd( 18.392, -358.169, 5.6418, 0.1 ) }
    dend_29 { pt3dadd( 18.3847, -358.634, 5.44409, 0.1 ) }
    dend_29 { pt3dadd( 18.4138, -359.095, 5.24595, 0.1 ) }
    dend_29 { pt3dadd( 18.5467, -360.087, 4.89468, 0.1 ) }
    dend_29 { pt3dadd( 18.6328, -360.571, 4.78287, 0.1 ) }
    dend_29 { pt3dadd( 18.7251, -361.067, 4.74531, 0.1 ) }
    dend_29 { pt3dadd( 18.8005, -361.562, 4.75157, 0.1 ) }
    dend_29 { pt3dadd( 18.8694, -362.119, 4.80702, 0.14 ) }
    dend_29 { pt3dadd( 18.9672, -363.072, 4.9808, 0.1 ) }
    dend_29 { pt3dadd( 19.0146, -363.62, 5.1259, 0.1 ) }
    dend_29 { pt3dadd( 19.0607, -364.163, 5.26298, 0.1 ) }
    dend_29 { pt3dadd( 19.1089, -364.717, 5.38447, 0.1 ) }
    dend_29 { pt3dadd( 19.1652, -365.215, 5.46215, 0.1 ) }
    dend_29 { pt3dadd( 19.1998, -365.458, 5.47972, 0.1 ) }
    dend_29 { pt3dadd( 19.2457, -365.704, 5.45213, 0.1 ) }
    dend_29 { pt3dadd( 19.3817, -366.248, 5.33605, 0.1 ) }
    dend_29 { pt3dadd( 19.5087, -366.706, 5.2012, 0.1 ) }
    dend_29 { pt3dadd( 19.652, -367.22, 5.02047, 0.1 ) }
    dend_29 { pt3dadd( 19.7652, -367.679, 4.85148, 0.1 ) }
    dend_29 { pt3dadd( 19.9537, -368.571, 4.53651, 0.1 ) }
    dend_29 { pt3dadd( 19.9537, -368.571, 4.53651, 0.14 ) }
    dend_29 { pt3dadd( 20.0001, -368.919, 4.4428, 0.28 ) }
    dend_29 { pt3dadd( 20.0609, -369.412, 4.33918, 0.28 ) }
    dend_29 { pt3dadd( 20.1196, -369.91, 4.2699, 0.14 ) }
    dend_29 { pt3dadd( 20.1888, -370.413, 4.23186, 0.1 ) }
    dend_29 { pt3dadd( 20.2661, -370.904, 4.22354, 0.1 ) }
    dend_29 { pt3dadd( 20.3551, -371.405, 4.24676, 0.1 ) }
    dend_29 { pt3dadd( 20.446, -371.901, 4.29827, 0.1 ) }
    dend_29 { pt3dadd( 20.5315, -372.396, 4.37674, 0.1 ) }
    dend_29 { pt3dadd( 20.6029, -372.887, 4.47729, 0.1 ) }
    dend_29 { pt3dadd( 20.6633, -373.377, 4.59197, 0.1 ) }
    dend_29 { pt3dadd( 20.7641, -374.313, 4.82283, 0.1 ) }
    dend_29 { pt3dadd( 20.8176, -374.864, 4.95652, 0.1 ) }
    dend_29 { pt3dadd( 20.8631, -375.357, 5.06636, 0.1 ) }
    dend_29 { pt3dadd( 20.8914, -375.913, 5.13804, 0.1 ) }
    dend_29 { pt3dadd( 20.9027, -376.42, 5.1523, 0.1 ) }
    dend_29 { pt3dadd( 20.9068, -376.929, 5.11573, 0.1 ) }
    dend_29 { pt3dadd( 20.9102, -377.428, 5.03364, 0.1 ) }
    dend_29 { pt3dadd( 20.9066, -377.91, 4.91078, 0.1 ) }
    dend_29 { pt3dadd( 20.8862, -378.939, 4.63722, 0.1 ) }
    dend_29 { pt3dadd( 20.8774, -379.427, 4.50702, 0.1 ) }
    dend_29 { pt3dadd( 20.8668, -379.92, 4.38643, 0.1 ) }
    dend_29 { pt3dadd( 20.8621, -380.416, 4.28555, 0.1 ) }
    dend_29 { pt3dadd( 20.8637, -381.313, 4.1657, 0.1 ) }
    dend_29 { pt3dadd( 20.8958, -382.282, 4.11858, 0.1 ) }
    dend_29 { pt3dadd( 20.9373, -382.788, 4.13977, 0.1 ) }
    dend_29 { pt3dadd( 20.9707, -383.296, 4.17127, 0.1 ) }
    dend_29 { pt3dadd( 20.9924, -383.801, 4.21254, 0.1 ) }
    dend_29 { pt3dadd( 21.028, -384.354, 4.3023, 0.1 ) }
    dend_29 { pt3dadd( 21.0726, -384.848, 4.40701, 0.1 ) }
    dend_29 { pt3dadd( 21.1191, -385.347, 4.49845, 0.1 ) }
    dend_29 { pt3dadd( 21.1771, -385.894, 4.61349, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_29 { pt3dadd( 21.2437, -386.445, 4.73953, 0.1 ) }
    dend_29 { pt3dadd( 21.3689, -387.444, 4.98322, 0.1 ) }
    dend_29 { pt3dadd( 21.4287, -387.934, 5.10493, 0.1 ) }
    dend_29 { pt3dadd( 21.4712, -388.416, 5.2232, 0.1 ) }
    dend_29 { pt3dadd( 21.494, -388.912, 5.33909, 0.1 ) }
    dend_29 { pt3dadd( 21.4913, -389.162, 5.37067, 0.1 ) }
    dend_29 { pt3dadd( 21.4662, -389.521, 5.40263, 0.1 ) }
    dend_29 { pt3dadd( 21.3928, -390.077, 5.42435, 0.1 ) }
    dend_29 { pt3dadd( 21.313, -390.643, 5.45744, 0.1 ) }
    dend_29 { pt3dadd( 21.2796, -390.998, 5.50985, 0.1 ) }
    dend_29 { pt3dadd( 21.2494, -392.009, 5.7238, 0.1 ) }
    dend_29 { pt3dadd( 21.3239, -392.929, 6.02825, 0.1 ) }
    dend_29 { pt3dadd( 21.4097, -393.391, 6.21728, 0.1 ) }
    dend_29 { pt3dadd( 21.528, -393.835, 6.42121, 0.1 ) }
    dend_29 { pt3dadd( 21.8138, -394.725, 6.84571, 0.1 ) }
    dend_29 { pt3dadd( 21.957, -395.151, 7.0535, 0.1 ) }
    dend_29 { pt3dadd( 22.2389, -396.037, 7.48876, 0.1 ) }
    dend_29 { pt3dadd( 22.3542, -396.496, 7.66816, 0.1 ) }
    dend_29 { pt3dadd( 22.4369, -396.965, 7.83682, 0.1 ) }
    dend_29 { pt3dadd( 22.4639, -397.46, 7.95233, 0.14 ) }
    dend_29 { pt3dadd( 22.4424, -397.813, 8.00531, 0.1 ) }
    dend_29 { pt3dadd( 22.3702, -398.375, 8.07419, 0.1 ) }
    dend_29 { pt3dadd( 22.2725, -398.928, 8.11497, 0.1 ) }
    dend_29 { pt3dadd( 22.2113, -399.282, 8.1457, 0.1 ) }
    dend_29 { pt3dadd( 22.0592, -400.337, 8.2414, 0.1 ) }
    dend_29 { pt3dadd( 21.9708, -401.303, 8.32369, 0.1 ) }
    dend_29 { pt3dadd( 21.954, -401.81, 8.32398, 0.1 ) }
    dend_29 { pt3dadd( 21.9693, -402.317, 8.32495, 0.1 ) }
    dend_29 { pt3dadd( 22.0173, -402.825, 8.32827, 0.1 ) }
    dend_29 { pt3dadd( 22.0965, -403.323, 8.37862, 0.1 ) }
    dend_29 { pt3dadd( 22.1977, -403.804, 8.46942, 0.1 ) }
    dend_29 { pt3dadd( 22.374, -404.743, 8.63768, 0.1 ) }
    dend_29 { pt3dadd( 22.5557, -405.667, 8.86211, 0.28 ) }
    dend_29 { pt3dadd( 22.6534, -406.146, 9.00177, 0.28 ) }
    dend_29 { pt3dadd( 22.8631, -407.141, 9.32017, 0.14 ) }
    dend_29 { pt3dadd( 22.9425, -407.618, 9.44337, 0.1 ) }
    dend_29 { pt3dadd( 23.013, -408.176, 9.54344, 0.14 ) }
    dend_29 { pt3dadd( 23.0375, -408.429, 9.56759, 0.7 ) }
    dend_29 { pt3dadd( 23.0535, -408.928, 9.48688, 0.56 ) }
    dend_29 { pt3dadd( 23.0392, -409.414, 9.34176, 0.56 ) }
    dend_29 { pt3dadd( 22.9556, -410.395, 8.95611, 0.42 ) }
    dend_29 { pt3dadd( 22.8958, -410.863, 8.77412, 0.28 ) }
    dend_29 { pt3dadd( 22.8183, -411.33, 8.6029, 0.14 ) }
    dend_29 { pt3dadd( 22.6171, -412.298, 8.30377, 0.1 ) }
    dend_29 { pt3dadd( 22.5353, -412.637, 8.22059, 0.1 ) }
    dend_29 { pt3dadd( 22.3966, -413.175, 8.13841, 0.1 ) }
    dend_29 { pt3dadd( 22.2562, -413.726, 8.11847, 0.1 ) }
    dend_29 { pt3dadd( 22.1584, -414.069, 8.12628, 0.14 ) }
    dend_29 { pt3dadd( 21.9886, -414.612, 8.13695, 0.1 ) }
    dend_29 { pt3dadd( 21.8192, -415.147, 8.15759, 0.1 ) }
    dend_29 { pt3dadd( 21.6332, -415.684, 8.15452, 0.14 ) }
    dend_29 { pt3dadd( 21.429, -416.206, 8.13148, 0.14 ) }
    dend_29 { pt3dadd( 21.2827, -416.532, 8.11131, 0.28 ) }
    dend_29 { pt3dadd( 20.8479, -417.347, 7.9859, 0.42 ) }
    dend_29 { pt3dadd( 20.8479, -417.347, 7.9859, 0.56 ) }
    dend_29 { pt3dadd( 20.5544, -417.806, 7.87595, 0.56 ) }
    dend_29 { pt3dadd( 20.3637, -418.099, 7.80958, 0.42 ) }
    dend_29 { pt3dadd( 19.993, -418.692, 7.69367, 0.28 ) }
    dend_29 { pt3dadd( 19.4994, -419.513, 7.5912, 0.42 ) }
    dend_29 { pt3dadd( 19.229, -419.999, 7.57595, 0.28 ) }
    dend_29 { pt3dadd( 18.9617, -420.497, 7.53246, 0.14 ) }
    dend_29 { pt3dadd( 18.8079, -420.817, 7.48992, 0.1 ) }
    dend_29 { pt3dadd( 18.711, -421.049, 7.45514, 0.14 ) }
    dend_29 { pt3dadd( 18.5277, -421.573, 7.37566, 0.7 ) }
    dend_29 { pt3dadd( 18.3595, -422.106, 7.32, 0.56 ) }
    dend_29 { pt3dadd( 18.0163, -423.109, 7.21068, 0.42 ) }
    dend_29 { pt3dadd( 17.8435, -423.581, 7.16403, 0.28 ) }
    dend_29 { pt3dadd( 17.6477, -424.041, 7.10145, 0.14 ) }
    dend_29 { pt3dadd( 17.5387, -424.267, 7.06839, 0.28 ) }
    dend_29 { pt3dadd( 17.2881, -424.762, 6.99891, 0.28 ) }
    dend_29 { pt3dadd( 17.0162, -425.248, 6.95106, 0.14 ) }
    dend_29 { pt3dadd( 16.8362, -425.556, 6.94354, 0.1 ) }
    dend_29 { pt3dadd( 16.2208, -426.519, 6.93757, 0.1 ) }
    dend_29 { pt3dadd( 16.028, -426.819, 6.94158, 0.1 ) }
    dend_29 { pt3dadd( 15.7419, -427.295, 6.95257, 0.1 ) }
    dend_29 { pt3dadd( 15.5704, -427.614, 6.96077, 0.1 ) }
    dend_29 { pt3dadd( 15.3229, -428.123, 6.98363, 0.1 ) }
    dend_29 { pt3dadd( 15.0947, -428.633, 7.03435, 0.1 ) }
    dend_29 { pt3dadd( 14.8978, -429.148, 7.13417, 0.14 ) }
    dend_29 { pt3dadd( 14.8131, -429.384, 7.17774, 0.28 ) }
    dend_29 { pt3dadd( 14.8131, -429.384, 7.17774, 0.84 ) }
    dend_29 { pt3dadd( 14.8131, -429.384, 7.17774, 0.84 ) }
    dend_29 { pt3dadd( 14.7223, -429.729, 7.2285, 0.28 ) }
    dend_29 { pt3dadd( 14.5972, -430.281, 7.30193, 0.14 ) }
    dend_29 { pt3dadd( 14.4755, -430.824, 7.37358, 0.1 ) }
    dend_29 { pt3dadd( 14.3409, -431.374, 7.45062, 0.14 ) }
    dend_29 { pt3dadd( 14.2011, -431.911, 7.52907, 0.1 ) }
    dend_29 { pt3dadd( 14.1338, -432.154, 7.56614, 0.1 ) }
    dend_29 { pt3dadd( 13.9687, -432.693, 7.65459, 0.14 ) }
    dend_29 { pt3dadd( 13.7873, -433.214, 7.74859, 0.28 ) }
    dend_29 { pt3dadd( 13.5265, -433.866, 7.8794, 0.14 ) }
    dend_29 { pt3dadd( 13.3829, -434.187, 7.94976, 0.1 ) }
    dend_29 { pt3dadd( 13.2316, -434.503, 8.02291, 0.1 ) }
    dend_29 { pt3dadd( 12.9207, -435.121, 8.17181, 0.1 ) }
    dend_29 { pt3dadd( 12.761, -435.437, 8.24824, 0.1 ) }
    dend_29 { pt3dadd( 12.4589, -436.061, 8.39395, 0.1 ) }
    dend_29 { pt3dadd( 12.3173, -436.383, 8.46355, 0.1 ) }
    dend_29 { pt3dadd( 12.1078, -436.892, 8.56799, 0.1 ) }
    dend_29 { pt3dadd( 11.9828, -437.222, 8.63152, 0.1 ) }
    dend_29 { pt3dadd( 11.7995, -437.742, 8.72619, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_29 { pt3dadd( 11.6226, -438.277, 8.81904, 0.1 ) }
    dend_29 { pt3dadd( 11.4588, -438.805, 8.90647, 0.1 ) }
    dend_29 { pt3dadd( 11.3557, -439.15, 8.9621, 0.1 ) }
    dend_29 { pt3dadd( 11.1978, -439.69, 9.04777, 0.1 ) }
    dend_29 { pt3dadd( 11.1054, -440.026, 9.09877, 0.1 ) }
    dend_29 { pt3dadd( 10.9611, -440.572, 9.17943, 0.1 ) }
    dend_29 { pt3dadd( 10.8263, -441.111, 9.25603, 0.14 ) }
    dend_29 { pt3dadd( 10.6824, -441.663, 9.29427, 0.1 ) }
    dend_29 { pt3dadd( 10.5587, -442.21, 9.29626, 0.1 ) }
    dend_29 { pt3dadd( 10.5062, -442.459, 9.28955, 0.1 ) }
    dend_29 { pt3dadd( 10.3905, -443.018, 9.26657, 0.1 ) }
    dend_29 { pt3dadd( 10.2763, -443.567, 9.24062, 0.1 ) }
    dend_29 { pt3dadd( 10.0515, -444.612, 9.19149, 0.1 ) }
    dend_29 { pt3dadd( 9.59898, -446.652, 9.10986, 0.1 ) }
    dend_29 { pt3dadd( 9.46426, -447.196, 9.09732, 0.1 ) }
    dend_29 { pt3dadd( 9.36363, -447.546, 9.09969, 0.1 ) }
    dend_29 { pt3dadd( 9.18402, -448.075, 9.12647, 0.1 ) }
    dend_29 { pt3dadd( 9.04622, -448.404, 9.16786, 0.14 ) }
    dend_29 { pt3dadd( 8.77521, -448.894, 9.2595, 0.14 ) }
    dend_29 { pt3dadd( 8.46614, -449.28, 9.32671, 0.28 ) }
    dend_29 { pt3dadd( 8.10382, -449.694, 9.39513, 0.14 ) }
    dend_29 { pt3dadd( 7.7223, -450.098, 9.45476, 0.1 ) }
    dend_29 { pt3dadd( 7.32435, -450.478, 9.50092, 0.1 ) }
    dend_29 { pt3dadd( 6.61578, -451.112, 9.54644, 0.1 ) }
    dend_29 { pt3dadd( 6.42486, -451.271, 9.54343, 0.1 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 25/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -15.1079, 90.8216, -12.5056, 0.14 ) }
    dend_69 { pt3dadd( -16.154, 91.7346, -11.4262, 0.14 ) }
    dend_69 { pt3dadd( -16.6775, 92.1571, -10.7872, 0.1 ) }
    dend_69 { pt3dadd( -17.0187, 92.4434, -10.3839, 0.14 ) }
    dend_69 { pt3dadd( -17.5567, 92.925, -9.7979, 0.28 ) }
    dend_69 { pt3dadd( -18.5061, 93.8315, -8.8658, 0.14 ) }
    dend_69 { pt3dadd( -20.3335, 95.6861, -7.2655, 0.1 ) }
    dend_69 { pt3dadd( -20.3335, 95.6861, -7.2655, 0.14 ) }
    dend_69 { pt3dadd( -20.8945, 96.2738, -6.80384, 0.28 ) }
    dend_69 { pt3dadd( -21.4754, 96.9153, -6.44487, 0.14 ) }
    dend_69 { pt3dadd( -22.0978, 97.6283, -6.36305, 0.1 ) }
    dend_69 { pt3dadd( -22.5919, 98.2168, -6.91094, 0.1 ) }
    dend_69 { pt3dadd( -22.8111, 98.4621, -7.40275, 0.1 ) }
    dend_69 { pt3dadd( -23.0334, 98.6902, -8.26822, 0.14 ) }
    dend_69 { pt3dadd( -23.3892, 98.9575, -9.7391, 0.1 ) }
    dend_69 { pt3dadd( -23.7795, 99.1445, -11.3779, 0.1 ) }
    dend_69 { pt3dadd( -24.4002, 99.3281, -14.2931, 0.1 ) }
    dend_69 { pt3dadd( -24.6518, 99.3636, -15.8081, 0.1 ) }
    dend_69 { pt3dadd( -24.9113, 99.3836, -18.7807, 0.1 ) }
    dend_69 { pt3dadd( -24.5878, 99.4485, -21.835, 0.1 ) }
    dend_69 { pt3dadd( -25.4695, 99.238, -20.5209, 0.1 ) }
    dend_69 { pt3dadd( -27.6732, 98.7222, -18.4386, 0.14 ) }
    dend_69 { pt3dadd( -27.98, 98.6518, -18.1703, 0.28 ) }
    dend_69 { pt3dadd( -28.6512, 98.518, -17.5536, 0.84 ) }
    dend_69 { pt3dadd( -29.2444, 98.4269, -16.9745, 0.7 ) }
    dend_69 { pt3dadd( -30.0384, 98.4895, -16.7458, 0.56 ) }
    dend_69 { pt3dadd( -31.2638, 99.2633, -17.2834, 0.42 ) }
    dend_69 { pt3dadd( -31.4993, 99.5214, -17.5188, 0.28 ) }
    dend_69 { pt3dadd( -31.9603, 100.214, -17.9549, 0.1 ) }
    dend_69 { pt3dadd( -32.3176, 100.962, -18.1723, 0.1 ) }
    dend_69 { pt3dadd( -32.6741, 101.843, -18.0804, 0.1 ) }
    dend_69 { pt3dadd( -32.9704, 102.563, -17.7274, 0.1 ) }
    dend_69 { pt3dadd( -33.5322, 103.635, -16.8243, 0.14 ) }
    dend_69 { pt3dadd( -34.2717, 104.773, -15.6763, 0.56 ) }
    dend_69 { pt3dadd( -35.0238, 105.726, -14.4636, 0.42 ) }
    dend_69 { pt3dadd( -35.8361, 106.581, -13.2303, 0.28 ) }
    dend_69 { pt3dadd( -36.6358, 107.3, -12.1175, 0.42 ) }
    dend_69 { pt3dadd( -37.6389, 108.057, -10.885, 0.56 ) }
    dend_69 { pt3dadd( -38.3743, 108.526, -10.1043, 0.42 ) }
    dend_69 { pt3dadd( -39.5459, 109.149, -9.21329, 0.56 ) }
    dend_69 { pt3dadd( -40.341, 109.473, -8.87899, 0.7 ) }
    dend_69 { pt3dadd( -41.229, 109.74, -8.78405, 0.84 ) }
    dend_69 { pt3dadd( -42.0208, 109.912, -8.95837, 0.7 ) }
    dend_69 { pt3dadd( -42.7668, 110.01, -9.31521, 0.84 ) }
    dend_69 { pt3dadd( -44.0527, 110.063, -10.2494, 0.7 ) }
    dend_69 { pt3dadd( -44.6736, 110.053, -10.8052, 0.56 ) }
    dend_69 { pt3dadd( -45.2353, 110.001, -11.4141, 0.42 ) }
    dend_69 { pt3dadd( -46.3308, 109.866, -12.7072, 0.28 ) }
    dend_69 { pt3dadd( -46.8433, 109.794, -13.3565, 0.14 ) }
    dend_69 { pt3dadd( -47.86, 109.623, -14.7001, 0.1 ) }
    dend_69 { pt3dadd( -48.3671, 109.508, -15.3486, 0.1 ) }
    dend_69 { pt3dadd( -49.2548, 109.287, -16.6565, 0.14 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 77/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -15.1079, 90.8216, -12.5056, 0.1 ) }
    dend_68 { pt3dadd( -15.5851, 90.6466, -10.737, 0.1 ) }
    dend_68 { pt3dadd( -15.802, 90.5401, -9.72081, 0.1 ) }
    dend_68 { pt3dadd( -15.954, 90.43, -8.79308, 0.1 ) }
    dend_68 { pt3dadd( -16.1663, 90.1485, -6.91566, 0.1 ) }
    dend_68 { pt3dadd( -16.1976, 90.0589, -6.4229, 0.1 ) }
    dend_68 { pt3dadd( -16.1969, 90.0022, -6.17265, 0.1 ) }
    dend_68 { pt3dadd( -16.0711, 89.8195, -5.64112, 0.1 ) }
    dend_68 { pt3dadd( -15.9286, 89.6707, -5.35079, 0.28 ) }
    dend_68 { pt3dadd( -15.5899, 89.3822, -4.98284, 0.14 ) }
    dend_68 { pt3dadd( -15.3407, 89.1786, -4.82472, 0.1 ) }
    dend_68 { pt3dadd( -14.851, 88.7131, -4.52317, 0.1 ) }
    dend_68 { pt3dadd( -14.851, 88.7131, -4.52317, 0.14 ) }
    dend_68 { pt3dadd( -14.851, 88.7131, -4.52317, 0.28 ) }
    dend_68 { pt3dadd( -14.6248, 88.4665, -4.38835, 0.14 ) }
    dend_68 { pt3dadd( -14.2468, 88.0884, -4.15824, 0.1 ) }
    dend_68 { pt3dadd( -13.9865, 87.873, -4.03591, 0.1 ) }
    dend_68 { pt3dadd( -13.5301, 87.5672, -3.85311, 0.1 ) }
    dend_68 { pt3dadd( -13.041, 87.3058, -3.71964, 0.1 ) }
    dend_68 { pt3dadd( -12.5383, 87.0553, -3.58624, 0.1 ) }
    dend_68 { pt3dadd( -12.1039, 86.8351, -3.44418, 0.1 ) }
    dend_68 { pt3dadd( -11.2409, 86.325, -3.02989, 0.1 ) }
    dend_68 { pt3dadd( -10.8975, 86.0397, -2.77248, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_68 { pt3dadd( -10.4062, 85.4227, -2.17523, 0.1 ) }
    dend_68 { pt3dadd( -10.0852, 84.7604, -1.55759, 0.1 ) }
    dend_68 { pt3dadd( -9.76167, 83.9639, -0.878505, 0.1 ) }
    dend_68 { pt3dadd( -9.47176, 83.1411, -0.265671, 0.1 ) }
    dend_68 { pt3dadd( -9.29836, 82.6752, 0.0345945, 0.1 ) }
    dend_68 { pt3dadd( -9.17002, 82.3733, 0.209491, 0.1 ) }
    dend_68 { pt3dadd( -8.9107, 81.9224, 0.466438, 0.1 ) }
    dend_68 { pt3dadd( -8.29089, 81.2374, 0.84213, 0.1 ) }
    dend_68 { pt3dadd( -7.86426, 80.9182, 1.05382, 0.1 ) }
    dend_68 { pt3dadd( -7.14532, 80.525, 1.60194, 0.1 ) }
    dend_68 { pt3dadd( -6.59038, 80.2659, 2.32448, 0.1 ) }
    dend_68 { pt3dadd( -6.34044, 80.152, 2.758, 0.1 ) }
    dend_68 { pt3dadd( -5.89152, 79.952, 3.67469, 0.1 ) }
    dend_68 { pt3dadd( -5.68434, 79.8536, 4.1337, 0.1 ) }
    dend_68 { pt3dadd( -5.25099, 79.6459, 5.06101, 0.1 ) }
    dend_68 { pt3dadd( -4.94023, 79.4758, 5.68534, 0.1 ) }
    dend_68 { pt3dadd( -4.76425, 79.3698, 5.99013, 0.1 ) }
    dend_68 { pt3dadd( -4.48127, 79.1848, 6.45454, 0.1 ) }
    dend_68 { pt3dadd( -4.17033, 78.9881, 6.88653, 0.1 ) }
    dend_68 { pt3dadd( -3.96384, 78.8662, 7.15963, 0.14 ) }
    dend_68 { pt3dadd( -3.74371, 78.7655, 7.41954, 0.28 ) }
    dend_68 { pt3dadd( -3.16063, 78.5546, 8.13495, 0.28 ) }
    dend_68 { pt3dadd( -2.84665, 78.4597, 8.52629, 0.14 ) }
    dend_68 { pt3dadd( -2.49174, 78.3745, 8.96884, 0.1 ) }
    dend_68 { pt3dadd( -2.1634, 78.3243, 9.35669, 0.1 ) }
    dend_68 { pt3dadd( -1.8175, 78.3029, 9.72343, 0.1 ) }
    dend_68 { pt3dadd( -1.54616, 78.3049, 9.97137, 0.14 ) }
    dend_68 { pt3dadd( -1.54616, 78.3049, 9.97137, 0.28 ) }
    dend_68 { pt3dadd( -1.34068, 78.303, 10.1252, 0.28 ) }
    dend_68 { pt3dadd( -0.931872, 78.3013, 10.4316, 0.28 ) }
    dend_68 { pt3dadd( -0.520364, 78.2849, 10.738, 0.14 ) }
    dend_68 { pt3dadd( -0.117878, 78.2679, 11.0375, 0.1 ) }
    dend_68 { pt3dadd( 0.342037, 78.2536, 11.3805, 0.1 ) }
    dend_68 { pt3dadd( 0.803561, 78.2319, 11.7236, 0.1 ) }
    dend_68 { pt3dadd( 1.20844, 78.1997, 12.0228, 0.1 ) }
    dend_68 { pt3dadd( 1.67019, 78.1396, 12.3607, 0.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 19.7941, -288.594, -5.95463, 0.84 ) }
    dend_34 { pt3dadd( 20.0691, -289.298, -5.51383, 0.84 ) }
    dend_34 { pt3dadd( 20.3267, -290.094, -5.0891, 0.84 ) }
    dend_34 { pt3dadd( 20.4637, -290.555, -4.89687, 0.98 ) }
    dend_34 { pt3dadd( 20.5923, -291.025, -4.74737, 0.84 ) }
    dend_34 { pt3dadd( 20.6781, -291.337, -4.67327, 0.7 ) }
    dend_34 { pt3dadd( 20.7995, -291.776, -4.58887, 0.7 ) }
    dend_34 { pt3dadd( 20.8317, -291.998, -4.59447, 0.56 ) }
    dend_34 { pt3dadd( 20.8185, -292.497, -4.72785, 0.56 ) }
    dend_34 { pt3dadd( 20.6782, -292.841, -4.97159, 0.7 ) }
    dend_34 { pt3dadd( 20.5557, -293.065, -5.16929, 0.84 ) }
    dend_34 { pt3dadd( 20.5557, -293.065, -5.16929, 0.98 ) }
    dend_34 { pt3dadd( 20.2425, -293.651, -5.67289, 1.12 ) }
    dend_34 { pt3dadd( 19.9369, -294.257, -6.15414, 0.98 ) }
    dend_34 { pt3dadd( 19.2446, -295.442, -7.10167, 0.84 ) }
    dend_34 { pt3dadd( 19.6682, -296.104, -6.79335, 0.84 ) }
    dend_34 { pt3dadd( 20.1019, -296.837, -6.41508, 0.7 ) }
    dend_34 { pt3dadd( 20.5214, -297.573, -6.02622, 0.56 ) }
    dend_34 { pt3dadd( 20.6271, -297.749, -5.92514, 0.42 ) }
    dend_34 { pt3dadd( 21.0415, -298.398, -5.52117, 0.1 ) }
    dend_34 { pt3dadd( 21.2761, -298.787, -5.2861, 0.14 ) }
    dend_34 { pt3dadd( 21.4265, -299.254, -5.12102, 0.28 ) }
    dend_34 { pt3dadd( 21.445, -299.707, -5.08153, 0.42 ) }
    dend_34 { pt3dadd( 21.4086, -299.934, -5.11246, 0.56 ) }
    dend_34 { pt3dadd( 21.3544, -300.15, -5.17222, 0.84 ) }
    dend_34 { pt3dadd( 21.0517, -300.95, -5.54038, 0.84 ) }
    dend_34 { pt3dadd( 20.8901, -301.321, -5.75027, 0.84 ) }
    dend_34 { pt3dadd( 20.5923, -301.957, -6.1483, 0.84 ) }
    dend_34 { pt3dadd( 20.5018, -302.13, -6.26454, 0.84 ) }
    dend_34 { pt3dadd( 20.3144, -302.465, -6.50019, 0.84 ) }
    dend_34 { pt3dadd( 19.9327, -303.15, -6.98002, 0.7 ) }
    dend_34 { pt3dadd( 19.8499, -303.33, -7.09125, 0.56 ) }
    dend_34 { pt3dadd( 19.5291, -304.08, -7.53218, 0.56 ) }
    dend_34 { pt3dadd( 19.3858, -304.467, -7.71092, 0.7 ) }
    dend_34 { pt3dadd( 19.2293, -304.859, -7.8808, 0.84 ) }
    dend_34 { pt3dadd( 19.2293, -304.859, -7.8808, 0.84 ) }
    dend_34 { pt3dadd( 19.1764, -305.074, -7.94437, 0.98 ) }
    dend_34 { pt3dadd( 19.0557, -305.492, -8.08631, 1.12 ) }
    dend_34 { pt3dadd( 18.8038, -306.373, -8.37869, 0.98 ) }
    dend_34 { pt3dadd( 18.6877, -306.797, -8.5168, 0.84 ) }
    dend_34 { pt3dadd( 18.576, -307.22, -8.65286, 0.84 ) }
    dend_34 { pt3dadd( 18.46, -307.642, -8.79279, 0.7 ) }
    dend_34 { pt3dadd( 18.2313, -308.412, -9.06338, 0.56 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 19.7941, -288.594, -5.95463, 1.26 ) }
    dend_33 { pt3dadd( 19.8583, -288.735, -6.3194, 1.26 ) }
    dend_33 { pt3dadd( 20.0487, -289.152, -7.40181, 1.4 ) }
    dend_33 { pt3dadd( 20.1115, -289.29, -7.75857, 1.26 ) }
    dend_33 { pt3dadd( 20.3021, -289.707, -8.84188, 1.12 ) }
    dend_33 { pt3dadd( 20.3648, -289.844, -9.19862, 0.7 ) }
    dend_33 { pt3dadd( 20.429, -289.985, -9.5634, 0.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 86/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.42486, -451.271, 9.54343, 0.1 ) }
    dend_31 { pt3dadd( 6.14205, -450.239, 10.2228, 0.1 ) }
    dend_31 { pt3dadd( 5.79625, -449.121, 10.7258, 0.1 ) }
    dend_31 { pt3dadd( 5.63429, -448.597, 10.9613, 0.1 ) }
    dend_31 { pt3dadd( 5.4499, -448.001, 11.2295, 0.1 ) }
    dend_31 { pt3dadd( 5.28876, -447.479, 11.4639, 0.1 ) }
    dend_31 { pt3dadd( 5.124, -446.946, 11.7035, 0.1 ) }
    dend_31 { pt3dadd( 4.75008, -445.889, 11.8142, 0.1 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 94/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 6.42486, -451.271, 9.54343, 0.1 ) }
    dend_30 { pt3dadd( 6.04337, -451.936, 9.51833, 0.1 ) }
    dend_30 { pt3dadd( 5.692, -452.618, 9.5259, 0.1 ) }
    dend_30 { pt3dadd( 5.14441, -453.808, 9.58427, 0.1 ) }
    dend_30 { pt3dadd( 4.82702, -454.508, 9.6532, 0.1 ) }
    dend_30 { pt3dadd( 4.52654, -455.198, 9.74418, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_30 { pt3dadd( 4.3251, -455.639, 9.78333, 0.1 ) }
    dend_30 { pt3dadd( 4.01325, -456.33, 9.82739, 0.1 ) }
    dend_30 { pt3dadd( 3.70038, -457.032, 9.879, 0.1 ) }
    dend_30 { pt3dadd( 3.41185, -457.733, 9.9508, 0.1 ) }
    dend_30 { pt3dadd( 3.1431, -458.451, 10.0519, 0.1 ) }
    dend_30 { pt3dadd( 2.74003, -459.639, 10.2677, 0.1 ) }
    dend_30 { pt3dadd( 2.60895, -460.088, 10.3666, 0.1 ) }
    dend_30 { pt3dadd( 2.46075, -460.808, 10.6081, 0.1 ) }
    dend_30 { pt3dadd( 2.36799, -461.506, 10.9223, 0.1 ) }
    dend_30 { pt3dadd( 2.27643, -462.775, 11.5914, 0.14 ) }
    dend_30 { pt3dadd( 2.26379, -463.192, 11.8396, 0.28 ) }
    dend_30 { pt3dadd( 2.27257, -463.834, 12.2412, 0.14 ) }
    dend_30 { pt3dadd( 2.30645, -464.96, 12.9124, 0.1 ) }
    dend_30 { pt3dadd( 2.28072, -465.804, 13.372, 0.1 ) }
    dend_30 { pt3dadd( 2.22226, -466.506, 13.6897, 0.1 ) }
    dend_30 { pt3dadd( 2.1871, -466.83, 13.8031, 0.14 ) }
    dend_30 { pt3dadd( 2.11487, -467.482, 13.9835, 0.28 ) }
    dend_30 { pt3dadd( 2.07757, -467.813, 14.0636, 0.42 ) }
    dend_30 { pt3dadd( 1.8567, -469.822, 14.4836, 0.83 ) }
    dend_30 { pt3dadd( 1.65473, -472.445, 14.9987, 0.28 ) }
    dend_30 { pt3dadd( 1.56705, -474.143, 15.3077, 0.55 ) }
    dend_30 { pt3dadd( 1.39225, -478.5, 16.1084, 0.55 ) }
    dend_30 { pt3dadd( 1.35828, -480.306, 16.4464, 0.28 ) }
    dend_30 { pt3dadd( 1.37215, -482.019, 16.7494, 0.55 ) }
    dend_30 { pt3dadd( 1.4295, -484.468, 17.1054, 0.28 ) }
    dend_30 { pt3dadd( 1.48968, -486.158, 17.2892, 0.55 ) }
    dend_30 { pt3dadd( 1.55038, -487.657, 17.396, 0.28 ) }
    dend_30 { pt3dadd( 1.66638, -489.87, 17.4682, 0.55 ) }
    dend_30 { pt3dadd( 1.79781, -492.593, 17.5307, 0.55 ) }
    dend_30 { pt3dadd( 1.86459, -495.036, 17.5968, 0.28 ) }
    dend_30 { pt3dadd( 1.90767, -497.791, 17.6314, 0.55 ) }
    dend_30 { pt3dadd( 1.92259, -500.296, 17.6562, 0.28 ) }
    dend_30 { pt3dadd( 1.9026, -503.05, 17.6815, 0.55 ) }
    dend_30 { pt3dadd( 1.8498, -504.462, 17.7233, 0.28 ) }
    dend_30 { pt3dadd( 1.62272, -507.483, 17.9834, 0.55 ) }
    dend_30 { pt3dadd( 1.42002, -509.335, 18.2934, 0.28 ) }
    dend_30 { pt3dadd( 1.12058, -510.965, 18.6172, 0.55 ) }
    dend_30 { pt3dadd( 0.762871, -512.328, 18.9546, 0.28 ) }
    dend_30 { pt3dadd( 0.415847, -513.474, 19.2505, 0.55 ) }
    dend_30 { pt3dadd( -0.113674, -515.083, 19.668, 0.28 ) }
    dend_30 { pt3dadd( -1.42356, -518.718, 20.6958, 0.55 ) }
    dend_30 { pt3dadd( -3.13885, -523.156, 22.0584, 0.55 ) }
    dend_30 { pt3dadd( -4.07596, -525.639, 22.7739, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 18.2313, -308.412, -9.06338, 0.7 ) }
    dend_36 { pt3dadd( 18.1663, -308.874, -8.83464, 0.7 ) }
    dend_36 { pt3dadd( 18.1294, -309.175, -8.69742, 0.84 ) }
    dend_36 { pt3dadd( 18.0736, -309.787, -8.45962, 0.7 ) }
    dend_36 { pt3dadd( 18.0203, -310.096, -8.37203, 0.56 ) }
    dend_36 { pt3dadd( 17.9256, -310.546, -8.27687, 0.7 ) }
    dend_36 { pt3dadd( 17.876, -310.774, -8.2429, 0.56 ) }
    dend_36 { pt3dadd( 17.8093, -311.1, -8.23642, 0.56 ) }
    dend_36 { pt3dadd( 17.6877, -311.548, -8.28824, 0.56 ) }
    dend_36 { pt3dadd( 17.4264, -312.352, -8.46413, 0.7 ) }
    dend_36 { pt3dadd( 17.3632, -312.561, -8.51029, 0.84 ) }
    dend_36 { pt3dadd( 17.2427, -313.007, -8.58901, 0.7 ) }
    dend_36 { pt3dadd( 17.1519, -313.463, -8.6474, 0.56 ) }
    dend_36 { pt3dadd( 17.0444, -314.416, -8.70374, 0.42 ) }
    dend_36 { pt3dadd( 17.0444, -314.416, -8.70374, 0.56 ) }
    dend_36 { pt3dadd( 17.1181, -315.312, -8.6249, 0.56 ) }
    dend_36 { pt3dadd( 17.2074, -315.819, -8.54174, 0.7 ) }
    dend_36 { pt3dadd( 17.3185, -316.262, -8.43523, 0.56 ) }
    dend_36 { pt3dadd( 17.4686, -316.749, -8.30038, 0.7 ) }
    dend_36 { pt3dadd( 17.6108, -317.167, -8.17458, 0.84 ) }
    dend_36 { pt3dadd( 17.7367, -317.605, -8.05332, 0.84 ) }
    dend_36 { pt3dadd( 17.9333, -318.461, -7.8529, 0.84 ) }
    dend_36 { pt3dadd( 18.0466, -318.958, -7.74326, 0.7 ) }
    dend_36 { pt3dadd( 18.1437, -319.41, -7.65118, 0.56 ) }
    dend_36 { pt3dadd( 18.2441, -319.923, -7.56655, 0.56 ) }
    dend_36 { pt3dadd( 18.3278, -320.432, -7.50305, 0.56 ) }
    dend_36 { pt3dadd( 18.3875, -320.897, -7.47134, 0.56 ) }
    dend_36 { pt3dadd( 18.4578, -321.364, -7.45989, 0.7 ) }
    dend_36 { pt3dadd( 18.5826, -321.815, -7.43231, 0.84 ) }
    dend_36 { pt3dadd( 18.75, -322.25, -7.38896, 0.7 ) }
    dend_36 { pt3dadd( 18.9454, -322.664, -7.33166, 0.56 ) }
    dend_36 { pt3dadd( 19.1613, -323.07, -7.2605, 0.56 ) }
    dend_36 { pt3dadd( 19.6094, -323.891, -7.07441, 0.42 ) }
    dend_36 { pt3dadd( 20.0227, -324.659, -6.87776, 0.56 ) }
    dend_36 { pt3dadd( 20.2236, -325.065, -6.76523, 0.7 ) }
    dend_36 { pt3dadd( 20.3449, -325.354, -6.68166, 0.56 ) }
    dend_36 { pt3dadd( 20.4797, -325.785, -6.55873, 0.42 ) }
    dend_36 { pt3dadd( 20.5739, -326.286, -6.42269, 0.56 ) }
    dend_36 { pt3dadd( 20.5668, -326.739, -6.32795, 0.7 ) }
    dend_36 { pt3dadd( 20.4993, -327.254, -6.23821, 0.56 ) }
    dend_36 { pt3dadd( 20.4084, -327.759, -6.14546, 0.56 ) }
    dend_36 { pt3dadd( 20.3021, -328.267, -6.05539, 0.56 ) }
    dend_36 { pt3dadd( 20.2261, -328.586, -5.99868, 0.7 ) }
    dend_36 { pt3dadd( 20.0317, -329.536, -5.8199, 0.56 ) }
    dend_36 { pt3dadd( 19.9538, -330.049, -5.72043, 0.7 ) }
    dend_36 { pt3dadd( 19.9613, -330.561, -5.6246, 0.56 ) }
    dend_36 { pt3dadd( 20.0132, -330.788, -5.58596, 0.7 ) }
    dend_36 { pt3dadd( 20.1067, -331.002, -5.55979, 0.7 ) }
    dend_36 { pt3dadd( 20.5447, -331.742, -5.51995, 0.56 ) }
    dend_36 { pt3dadd( 20.8117, -332.123, -5.519, 0.56 ) }
    dend_36 { pt3dadd( 21.3285, -332.945, -5.59863, 0.42 ) }
    dend_36 { pt3dadd( 21.5396, -333.353, -5.66943, 0.56 ) }
    dend_36 { pt3dadd( 21.7277, -333.829, -5.7749, 0.56 ) }
    dend_36 { pt3dadd( 21.851, -334.32, -5.88884, 0.56 ) }
    dend_36 { pt3dadd( 21.8908, -334.776, -5.9944, 0.42 ) }
    dend_36 { pt3dadd( 21.8653, -335.719, -6.15974, 0.56 ) }
    dend_36 { pt3dadd( 21.8238, -336.185, -6.1947, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_36 { pt3dadd( 21.8102, -336.412, -6.177, 0.56 ) }
    dend_36 { pt3dadd( 21.8043, -336.928, -6.06218, 0.56 ) }
    dend_36 { pt3dadd( 21.8219, -337.239, -5.96472, 0.7 ) }
    dend_36 { pt3dadd( 21.8898, -337.731, -5.78547, 0.56 ) }
    dend_36 { pt3dadd( 22.0741, -338.551, -5.46422, 0.56 ) }
    dend_36 { pt3dadd( 22.1875, -339.029, -5.29922, 0.42 ) }
    dend_36 { pt3dadd( 22.2949, -339.471, -5.18459, 0.28 ) }
    dend_36 { pt3dadd( 22.4064, -339.925, -5.11792, 0.28 ) }
    dend_36 { pt3dadd( 22.4572, -340.153, -5.10465, 0.42 ) }
    dend_36 { pt3dadd( 22.4999, -340.384, -5.11025, 0.56 ) }
    dend_36 { pt3dadd( 22.5608, -340.848, -5.15281, 0.56 ) }
    dend_36 { pt3dadd( 22.6248, -341.303, -5.20349, 0.56 ) }
    dend_36 { pt3dadd( 22.6898, -341.765, -5.25509, 0.56 ) }
    dend_36 { pt3dadd( 22.755, -342.228, -5.30692, 0.7 ) }
    dend_36 { pt3dadd( 22.8199, -342.69, -5.35847, 0.56 ) }
    dend_36 { pt3dadd( 22.8851, -343.154, -5.4102, 0.56 ) }
    dend_36 { pt3dadd( 22.9255, -343.607, -5.48019, 0.7 ) }
    dend_36 { pt3dadd( 22.9426, -344.07, -5.56115, 0.7 ) }
    dend_36 { pt3dadd( 22.9034, -344.527, -5.65439, 0.7 ) }
    dend_36 { pt3dadd( 22.819, -344.974, -5.75557, 0.56 ) }
    dend_36 { pt3dadd( 22.7038, -345.416, -5.86126, 0.56 ) }
    dend_36 { pt3dadd( 22.4516, -346.246, -6.06361, 0.56 ) }
    dend_36 { pt3dadd( 22.3696, -346.56, -6.13111, 0.84 ) }
    dend_36 { pt3dadd( 22.1823, -347.507, -6.30227, 0.84 ) }
    dend_36 { pt3dadd( 22.1211, -347.966, -6.36964, 0.7 ) }
    dend_36 { pt3dadd( 22.1056, -348.435, -6.41747, 0.7 ) }
    dend_36 { pt3dadd( 22.1494, -348.902, -6.4421, 0.7 ) }
    dend_36 { pt3dadd( 22.3565, -349.84, -6.45084, 0.84 ) }
    dend_36 { pt3dadd( 22.4838, -350.282, -6.46025, 0.7 ) }
    dend_36 { pt3dadd( 22.4838, -350.282, -6.46025, 0.84 ) }
    dend_36 { pt3dadd( 22.6365, -350.724, -6.46862, 0.56 ) }
    dend_36 { pt3dadd( 22.7756, -351.173, -6.49577, 0.56 ) }
    dend_36 { pt3dadd( 22.8873, -351.624, -6.54681, 0.42 ) }
    dend_36 { pt3dadd( 22.9683, -352.079, -6.6344, 0.56 ) }
    dend_36 { pt3dadd( 22.9683, -352.079, -6.6344, 0.56 ) }
    dend_36 { pt3dadd( 23.03, -352.298, -6.67978, 0.56 ) }
    dend_36 { pt3dadd( 23.2076, -352.782, -6.77213, 0.56 ) }
    dend_36 { pt3dadd( 23.3889, -353.205, -6.84341, 0.56 ) }
    dend_36 { pt3dadd( 23.5998, -353.68, -6.8999, 0.56 ) }
    dend_36 { pt3dadd( 23.6932, -353.892, -6.91657, 0.7 ) }
    dend_36 { pt3dadd( 24.036, -354.682, -6.96993, 0.7 ) }
    dend_36 { pt3dadd( 24.2194, -355.109, -7.00096, 0.56 ) }
    dend_36 { pt3dadd( 24.4014, -355.54, -7.039, 0.42 ) }
    dend_36 { pt3dadd( 24.5989, -356.02, -7.11311, 0.28 ) }
    dend_36 { pt3dadd( 24.6793, -356.235, -7.1584, 0.14 ) }
    dend_36 { pt3dadd( 24.776, -356.541, -7.23856, 0.7 ) }
    dend_36 { pt3dadd( 24.8842, -357.028, -7.37857, 0.7 ) }
    dend_36 { pt3dadd( 24.9481, -357.345, -7.45584, 0.56 ) }
    dend_36 { pt3dadd( 25.0337, -357.85, -7.54359, 0.42 ) }
    dend_36 { pt3dadd( 25.0625, -358.083, -7.5609, 0.56 ) }
    dend_36 { pt3dadd( 25.0836, -358.416, -7.54258, 0.84 ) }
    dend_36 { pt3dadd( 25.1304, -358.925, -7.43551, 0.7 ) }
    dend_36 { pt3dadd( 25.19, -359.426, -7.28328, 0.7 ) }
    dend_36 { pt3dadd( 25.2349, -359.742, -7.17322, 0.7 ) }
    dend_36 { pt3dadd( 25.3204, -360.226, -7.00708, 0.56 ) }
    dend_36 { pt3dadd( 25.4275, -360.723, -6.86125, 0.7 ) }
    dend_36 { pt3dadd( 25.6741, -361.655, -6.65832, 0.84 ) }
    dend_36 { pt3dadd( 25.8112, -362.098, -6.59447, 0.7 ) }
    dend_36 { pt3dadd( 25.887, -362.321, -6.58016, 0.56 ) }
    dend_36 { pt3dadd( 26.0623, -362.809, -6.60168, 0.42 ) }
    dend_36 { pt3dadd( 26.22, -363.243, -6.67921, 0.28 ) }
    dend_36 { pt3dadd( 26.2981, -363.545, -6.78834, 0.28 ) }
    dend_36 { pt3dadd( 26.3252, -363.746, -6.89638, 1.12 ) }
    dend_36 { pt3dadd( 26.3586, -363.948, -7.00743, 0.7 ) }
    dend_36 { pt3dadd( 26.4445, -364.397, -7.24201, 0.56 ) }
    dend_36 { pt3dadd( 26.5363, -364.867, -7.44714, 0.42 ) }
    dend_36 { pt3dadd( 26.7049, -365.693, -7.73478, 0.28 ) }
    dend_36 { pt3dadd( 26.7696, -366.008, -7.8137, 0.42 ) }
    dend_36 { pt3dadd( 26.9436, -366.88, -7.94941, 0.56 ) }
    dend_36 { pt3dadd( 27.0322, -367.339, -7.98255, 0.56 ) }
    dend_36 { pt3dadd( 27.0909, -367.855, -7.99739, 0.42 ) }
    dend_36 { pt3dadd( 27.1485, -368.321, -7.97413, 0.42 ) }
    dend_36 { pt3dadd( 27.2108, -368.786, -7.92163, 0.28 ) }
    dend_36 { pt3dadd( 27.2497, -369.31, -7.85334, 0.28 ) }
    dend_36 { pt3dadd( 27.2585, -369.78, -7.80355, 0.28 ) }
    dend_36 { pt3dadd( 27.2826, -370.643, -7.70102, 0.42 ) }
    dend_36 { pt3dadd( 27.3236, -371.54, -7.59903, 0.42 ) }
    dend_36 { pt3dadd( 27.3517, -372.064, -7.53145, 0.28 ) }
    dend_36 { pt3dadd( 27.3873, -372.58, -7.46624, 0.42 ) }
    dend_36 { pt3dadd( 27.4262, -373.048, -7.40871, 0.28 ) }
    dend_36 { pt3dadd( 27.4705, -373.513, -7.35309, 0.42 ) }
    dend_36 { pt3dadd( 27.5229, -373.977, -7.30408, 0.56 ) }
    dend_36 { pt3dadd( 27.5535, -374.496, -7.27067, 0.56 ) }
    dend_36 { pt3dadd( 27.5832, -374.964, -7.24497, 0.42 ) }
    dend_36 { pt3dadd( 27.6139, -375.491, -7.21029, 0.28 ) }
    dend_36 { pt3dadd( 27.6372, -375.951, -7.17229, 0.28 ) }
    dend_36 { pt3dadd( 27.649, -376.186, -7.1526, 0.14 ) }
    dend_36 { pt3dadd( 27.6678, -376.519, -7.12928, 0.56 ) }
    dend_36 { pt3dadd( 27.7005, -376.988, -7.11006, 0.42 ) }
    dend_36 { pt3dadd( 27.7418, -377.506, -7.09983, 0.56 ) }
    dend_36 { pt3dadd( 27.7818, -377.974, -7.0963, 0.56 ) }
    dend_36 { pt3dadd( 27.8191, -378.445, -7.08651, 0.42 ) }
    dend_36 { pt3dadd( 27.8563, -378.914, -7.07683, 0.28 ) }
    dend_36 { pt3dadd( 27.8686, -379.386, -7.08352, 0.14 ) }
    dend_36 { pt3dadd( 27.8571, -379.855, -7.09823, 0.1 ) }
    dend_36 { pt3dadd( 27.8495, -380.374, -7.1139, 0.14 ) }
    dend_36 { pt3dadd( 27.8471, -380.904, -7.12126, 0.1 ) }
    dend_36 { pt3dadd( 27.8547, -381.366, -7.12289, 0.1 ) }
    dend_36 { pt3dadd( 27.898, -382.236, -7.12479, 0.1 ) }
    dend_36 { pt3dadd( 27.898, -382.236, -7.12479, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_36 { pt3dadd( 28.0219, -383.097, -7.15326, 0.1 ) }
    dend_36 { pt3dadd( 28.1111, -383.556, -7.18201, 0.14 ) }
    dend_36 { pt3dadd( 28.215, -384.014, -7.21561, 0.1 ) }
    dend_36 { pt3dadd( 28.325, -384.469, -7.24557, 0.14 ) }
    dend_36 { pt3dadd( 28.4411, -384.924, -7.27283, 0.28 ) }
    dend_36 { pt3dadd( 28.5301, -385.376, -7.30244, 0.42 ) }
    dend_36 { pt3dadd( 28.5852, -385.843, -7.3317, 0.28 ) }
    dend_36 { pt3dadd( 28.6302, -386.311, -7.3391, 0.28 ) }
    dend_36 { pt3dadd( 28.6627, -386.779, -7.3192, 0.42 ) }
    dend_36 { pt3dadd( 28.6739, -387.015, -7.29835, 0.56 ) }
    dend_36 { pt3dadd( 28.6832, -387.339, -7.25617, 0.42 ) }
    dend_36 { pt3dadd( 28.6856, -387.86, -7.16145, 0.28 ) }
    dend_36 { pt3dadd( 28.68, -388.377, -7.05031, 0.14 ) }
    dend_36 { pt3dadd( 28.6708, -388.885, -6.93306, 0.1 ) }
    dend_36 { pt3dadd( 28.6853, -389.113, -6.87329, 0.14 ) }
    dend_36 { pt3dadd( 28.6853, -389.113, -6.87329, 0.28 ) }
    dend_36 { pt3dadd( 28.7687, -389.428, -6.80402, 0.56 ) }
    dend_36 { pt3dadd( 28.9169, -389.855, -6.71552, 0.56 ) }
    dend_36 { pt3dadd( 29.0113, -390.066, -6.67376, 0.7 ) }
    dend_36 { pt3dadd( 29.4191, -390.812, -6.52741, 0.56 ) }
    dend_36 { pt3dadd( 29.6559, -391.204, -6.44584, 0.42 ) }
    dend_36 { pt3dadd( 29.7832, -391.395, -6.40687, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 22/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 18.2313, -308.412, -9.06338, 2.38 ) }
    dend_35 { pt3dadd( 18.2946, -308.519, -9.33612, 2.38 ) }
    dend_35 { pt3dadd( 18.4013, -308.79, -9.94078, 2.24 ) }
    dend_35 { pt3dadd( 18.4887, -309.124, -10.521, 2.1 ) }
    dend_35 { pt3dadd( 18.5764, -309.516, -11.0515, 1.96 ) }
    dend_35 { pt3dadd( 18.7295, -310.277, -11.8595, 1.82 ) }
    dend_35 { pt3dadd( 18.7295, -310.277, -11.8595, 1.68 ) }
    dend_35 { pt3dadd( 18.7297, -310.516, -12.0462, 0.1 ) }
    dend_35 { pt3dadd( 18.709, -311.034, -12.3778, 0.1 ) }
    dend_35 { pt3dadd( 18.6955, -311.63, -12.7096, 0.1 ) }
    dend_35 { pt3dadd( 18.7113, -312.177, -12.9955, 0.1 ) }
    dend_35 { pt3dadd( 18.8405, -313.315, -13.5916, 0.1 ) }
    dend_35 { pt3dadd( 18.9272, -313.905, -13.9223, 0.1 ) }
    dend_35 { pt3dadd( 19.0269, -314.425, -14.2359, 0.1 ) }
    dend_35 { pt3dadd( 19.1661, -314.982, -14.5991, 0.1 ) }
    dend_35 { pt3dadd( 19.2786, -315.329, -14.8333, 0.14 ) }
    dend_35 { pt3dadd( 19.4192, -315.658, -15.0595, 0.28 ) }
    dend_35 { pt3dadd( 19.5669, -315.995, -15.298, 0.7 ) }
    dend_35 { pt3dadd( 19.7583, -316.512, -15.6888, 0.56 ) }
    dend_35 { pt3dadd( 19.8274, -316.845, -15.9561, 0.42 ) }
    dend_35 { pt3dadd( 19.8191, -317.354, -16.4006, 0.28 ) }
    dend_35 { pt3dadd( 19.7319, -317.853, -16.8565, 0.14 ) }
    dend_35 { pt3dadd( 19.5149, -318.79, -17.6945, 0.1 ) }
    dend_35 { pt3dadd( 19.4527, -319.017, -17.8882, 0.14 ) }
    dend_35 { pt3dadd( 19.1724, -319.95, -18.6609, 0.1 ) }
    dend_35 { pt3dadd( 18.89, -320.835, -19.3683, 0.14 ) }
    dend_35 { pt3dadd( 18.89, -320.835, -19.3683, 0.28 ) }
    dend_35 { pt3dadd( 18.7107, -321.768, -19.9854, 0.28 ) }
    dend_35 { pt3dadd( 18.7022, -322.312, -20.272, 0.42 ) }
    dend_35 { pt3dadd( 18.7287, -322.701, -20.4686, 0.56 ) }
    dend_35 { pt3dadd( 18.7287, -322.701, -20.4686, 0.7 ) }
    dend_35 { pt3dadd( 18.7203, -322.963, -20.6245, 0.84 ) }
    dend_35 { pt3dadd( 18.6618, -323.531, -21.0065, 0.7 ) }
    dend_35 { pt3dadd( 18.5047, -324.517, -21.7527, 0.56 ) }
    dend_35 { pt3dadd( 18.3931, -325.032, -22.1866, 0.42 ) }
    dend_35 { pt3dadd( 18.1915, -325.962, -23.0358, 0.28 ) }
    dend_35 { pt3dadd( 18.1538, -326.18, -23.2453, 0.42 ) }
    dend_35 { pt3dadd( 18.0993, -326.464, -23.55, 0.7 ) }
    dend_35 { pt3dadd( 18.0575, -326.745, -23.8782, 0.56 ) }
    dend_35 { pt3dadd( 18.0271, -327.54, -24.8639, 0.42 ) }
    dend_35 { pt3dadd( 18.044, -327.955, -25.3984, 0.28 ) }
    dend_35 { pt3dadd( 18.1099, -328.361, -25.9263, 0.14 ) }
    dend_35 { pt3dadd( 18.2645, -329.067, -26.8297, 0.28 ) }
    dend_35 { pt3dadd( 18.4195, -329.587, -27.4864, 0.42 ) }
    dend_35 { pt3dadd( 18.5254, -329.852, -27.8055, 0.28 ) }
    dend_35 { pt3dadd( 18.8081, -330.38, -28.4046, 0.14 ) }
    dend_35 { pt3dadd( 18.9691, -330.65, -28.7037, 0.28 ) }
    dend_35 { pt3dadd( 19.2904, -331.06, -29.1255, 0.42 ) }
    dend_35 { pt3dadd( 19.6727, -331.468, -29.4895, 0.28 ) }
    dend_35 { pt3dadd( 20.0821, -331.884, -29.8339, 0.14 ) }
    dend_35 { pt3dadd( 20.3462, -332.145, -30.0402, 0.28 ) }
    dend_35 { pt3dadd( 20.7772, -332.561, -30.3587, 0.14 ) }
    dend_35 { pt3dadd( 21.5929, -333.32, -30.9628, 0.14 ) }
    dend_35 { pt3dadd( 22.0322, -333.71, -31.2994, 0.1 ) }
    dend_35 { pt3dadd( 22.3012, -333.947, -31.5153, 0.1 ) }
    dend_35 { pt3dadd( 22.8399, -334.426, -31.9839, 0.1 ) }
    dend_35 { pt3dadd( 23.0893, -334.661, -32.2238, 0.14 ) }
    dend_35 { pt3dadd( 23.463, -335.045, -32.6388, 0.1 ) }
    dend_35 { pt3dadd( 23.7946, -335.415, -33.0806, 0.14 ) }
    dend_35 { pt3dadd( 24.0067, -335.656, -33.3627, 0.28 ) }
    dend_35 { pt3dadd( 24.3318, -336.055, -33.7914, 0.14 ) }
    dend_35 { pt3dadd( 24.5353, -336.322, -34.0574, 0.1 ) }
    dend_35 { pt3dadd( 24.9779, -336.881, -34.53, 0.14 ) }
    dend_35 { pt3dadd( 25.2121, -337.176, -34.7384, 0.14 ) }
    dend_35 { pt3dadd( 25.5932, -337.647, -35.0337, 0.28 ) }
    dend_35 { pt3dadd( 25.9885, -338.128, -35.313, 0.14 ) }
    dend_35 { pt3dadd( 26.2391, -338.432, -35.4788, 0.1 ) }
    dend_35 { pt3dadd( 26.9936, -339.341, -35.9724, 0.14 ) }
    dend_35 { pt3dadd( 27.4194, -339.811, -36.2032, 0.28 ) }
    dend_35 { pt3dadd( 27.6985, -340.111, -36.3379, 0.14 ) }
    dend_35 { pt3dadd( 28.1686, -340.562, -36.5111, 0.1 ) }
    dend_35 { pt3dadd( 28.6526, -341.005, -36.6627, 0.1 ) }
    dend_35 { pt3dadd( 29.1636, -341.442, -36.7793, 0.1 ) }
    dend_35 { pt3dadd( 30.1259, -342.254, -36.9708, 0.14 ) }
    dend_35 { pt3dadd( 30.5972, -342.631, -37.0432, 0.28 ) }
    dend_35 { pt3dadd( 31.496, -343.353, -37.1672, 0.28 ) }
    dend_35 { pt3dadd( 32.0184, -343.783, -37.2429, 0.14 ) }
    dend_35 { pt3dadd( 32.9742, -344.608, -37.4114, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_35 { pt3dadd( 33.4508, -345.071, -37.5316, 0.1 ) }
    dend_35 { pt3dadd( 33.7257, -345.383, -37.6505, 0.14 ) }
    dend_35 { pt3dadd( 34.1239, -345.877, -37.8834, 0.28 ) }
    dend_35 { pt3dadd( 34.4775, -346.398, -38.1696, 0.14 ) }
    dend_35 { pt3dadd( 34.6738, -346.724, -38.3563, 0.1 ) }
    dend_35 { pt3dadd( 34.9435, -347.261, -38.6855, 0.1 ) }
    dend_35 { pt3dadd( 35.2361, -347.805, -38.9666, 0.1 ) }
    dend_35 { pt3dadd( 35.4359, -348.168, -39.1018, 0.1 ) }
    dend_35 { pt3dadd( 35.4359, -348.168, -39.1018, 0.14 ) }
    dend_35 { pt3dadd( 35.7192, -348.716, -39.1318, 0.84 ) }
    dend_35 { pt3dadd( 35.7192, -348.716, -39.1318, 0.7 ) }
    dend_35 { pt3dadd( 36.1926, -349.8, -39.0032, 0.1 ) }
    dend_35 { pt3dadd( 36.4106, -350.365, -38.9248, 0.1 ) }
    dend_35 { pt3dadd( 36.6079, -350.953, -38.8565, 0.1 ) }
    dend_35 { pt3dadd( 36.7915, -351.547, -38.8291, 0.1 ) }
    dend_35 { pt3dadd( 36.8795, -351.846, -38.84, 0.1 ) }
    dend_35 { pt3dadd( 36.9626, -352.144, -38.8811, 0.56 ) }
    dend_35 { pt3dadd( 37.1158, -352.724, -39.0329, 0.42 ) }
    dend_35 { pt3dadd( 37.286, -353.29, -39.2116, 0.28 ) }
    dend_35 { pt3dadd( 37.4895, -353.914, -39.4321, 0.28 ) }
    dend_35 { pt3dadd( 37.6182, -354.297, -39.5729, 0.56 ) }
    dend_35 { pt3dadd( 37.8228, -354.92, -39.7952, 0.42 ) }
    dend_35 { pt3dadd( 37.9493, -355.305, -39.9324, 0.28 ) }
    dend_35 { pt3dadd( 38.0393, -355.585, -40.0294, 0.56 ) }
    dend_35 { pt3dadd( 38.2109, -356.154, -40.2099, 0.42 ) }
    dend_35 { pt3dadd( 38.3714, -356.728, -40.3734, 0.28 ) }
    dend_35 { pt3dadd( 38.5288, -357.304, -40.5318, 0.42 ) }
    dend_35 { pt3dadd( 38.7024, -357.955, -40.7047, 0.56 ) }
    dend_35 { pt3dadd( 38.7818, -358.241, -40.7853, 0.7 ) }
    dend_35 { pt3dadd( 38.8689, -358.524, -40.8776, 0.84 ) }
    dend_35 { pt3dadd( 39.0806, -359.139, -41.1113, 0.7 ) }
    dend_35 { pt3dadd( 39.3108, -359.724, -41.3761, 0.56 ) }
    dend_35 { pt3dadd( 39.5228, -360.244, -41.6223, 0.42 ) }
    dend_35 { pt3dadd( 39.7574, -360.833, -41.8931, 0.28 ) }
    dend_35 { pt3dadd( 39.899, -361.202, -42.0549, 0.14 ) }
    dend_35 { pt3dadd( 40.117, -361.81, -42.2987, 0.1 ) }
    dend_35 { pt3dadd( 40.3141, -362.598, -42.6024, 0.1 ) }
    dend_35 { pt3dadd( 40.3797, -363.004, -42.7534, 0.84 ) }
    dend_35 { pt3dadd( 40.4308, -363.584, -42.961, 0.7 ) }
    dend_35 { pt3dadd( 40.4061, -364.163, -43.1827, 0.56 ) }
    dend_35 { pt3dadd( 40.3306, -364.733, -43.4071, 0.42 ) }
    dend_35 { pt3dadd( 40.1227, -365.876, -43.8851, 0.28 ) }
    dend_35 { pt3dadd( 40.0675, -366.155, -44.0056, 0.42 ) }
    dend_35 { pt3dadd( 40.038, -366.437, -44.1295, 0.56 ) }
    dend_35 { pt3dadd( 40.024, -367.636, -44.6262, 0.42 ) }
    dend_35 { pt3dadd( 40.08, -368.217, -44.8384, 0.28 ) }
    dend_35 { pt3dadd( 40.2154, -368.863, -45.0288, 0.14 ) }
    dend_35 { pt3dadd( 40.4029, -369.437, -45.1634, 0.1 ) }
    dend_35 { pt3dadd( 40.8474, -370.637, -45.4114, 0.1 ) }
    dend_35 { pt3dadd( 41.0791, -371.202, -45.5049, 0.1 ) }
    dend_35 { pt3dadd( 41.3318, -371.767, -45.5656, 0.1 ) }
    dend_35 { pt3dadd( 41.5648, -372.337, -45.6276, 0.1 ) }
    dend_35 { pt3dadd( 41.712, -372.748, -45.6798, 0.1 ) }
    dend_35 { pt3dadd( 41.7997, -373.043, -45.7281, 0.56 ) }
    dend_35 { pt3dadd( 41.9229, -373.642, -45.8331, 0.42 ) }
    dend_35 { pt3dadd( 42.0399, -374.245, -45.9286, 0.28 ) }
    dend_35 { pt3dadd( 42.1487, -374.844, -46.0127, 0.14 ) }
    dend_35 { pt3dadd( 42.27, -375.518, -46.1054, 0.1 ) }
    dend_35 { pt3dadd( 42.3827, -376.125, -46.194, 0.1 ) }
    dend_35 { pt3dadd( 42.5165, -376.803, -46.3047, 0.14 ) }
    dend_35 { pt3dadd( 42.6121, -377.403, -46.4453, 0.1 ) }
    dend_35 { pt3dadd( 42.6482, -377.697, -46.5321, 0.1 ) }
    dend_35 { pt3dadd( 42.705, -378.352, -46.7564, 0.1 ) }
    dend_35 { pt3dadd( 42.7403, -378.995, -46.9951, 0.1 ) }
    dend_35 { pt3dadd( 42.7729, -379.563, -47.2342, 0.1 ) }
    dend_35 { pt3dadd( 42.8453, -380.641, -47.7159, 0.1 ) }
    dend_35 { pt3dadd( 42.8878, -380.926, -47.8303, 0.56 ) }
    dend_35 { pt3dadd( 43.0221, -381.494, -48.0309, 0.42 ) }
    dend_35 { pt3dadd( 43.1956, -382.057, -48.1926, 0.28 ) }
    dend_35 { pt3dadd( 43.4402, -382.687, -48.3483, 0.42 ) }
    dend_35 { pt3dadd( 43.6937, -383.223, -48.473, 0.28 ) }
    dend_35 { pt3dadd( 44.3038, -384.341, -48.7193, 0.14 ) }
    dend_35 { pt3dadd( 44.64, -384.923, -48.8757, 0.1 ) }
    dend_35 { pt3dadd( 44.9446, -385.417, -49.0475, 0.1 ) }
    dend_35 { pt3dadd( 45.2614, -385.968, -49.3089, 0.1 ) }
    dend_35 { pt3dadd( 45.4305, -386.314, -49.5086, 0.42 ) }
    dend_35 { pt3dadd( 45.6359, -386.853, -49.8654, 0.28 ) }
    dend_35 { pt3dadd( 45.7525, -387.198, -50.0996, 0.14 ) }
    dend_35 { pt3dadd( 46.0576, -387.895, -50.4987, 0.1 ) }
    dend_35 { pt3dadd( 46.6516, -388.832, -50.8781, 0.1 ) }
    dend_35 { pt3dadd( 47.0152, -389.302, -50.9864, 0.14 ) }
    dend_35 { pt3dadd( 47.4173, -389.758, -51.0366, 0.28 ) }
    dend_35 { pt3dadd( 48.3577, -390.63, -51.006, 0.28 ) }
    dend_35 { pt3dadd( 49.3095, -391.42, -50.9113, 0.14 ) }
    dend_35 { pt3dadd( 50.312, -392.195, -50.7814, 0.1 ) }
    dend_35 { pt3dadd( 50.557, -392.372, -50.7521, 0.14 ) }
    dend_35 { pt3dadd( 50.9113, -392.612, -50.7169, 0.28 ) }
    dend_35 { pt3dadd( 51.878, -393.242, -50.6208, 0.7 ) }
    dend_35 { pt3dadd( 52.4397, -393.616, -50.5534, 0.56 ) }
    dend_35 { pt3dadd( 52.986, -394.001, -50.4793, 0.42 ) }
    dend_35 { pt3dadd( 53.3299, -394.253, -50.4253, 0.56 ) }
    dend_35 { pt3dadd( 54.2221, -394.916, -50.2762, 0.1 ) }
    dend_35 { pt3dadd( 55.2066, -395.639, -50.0673, 0.1 ) }
    dend_35 { pt3dadd( 56.1689, -396.386, -49.8389, 0.1 ) }
    dend_35 { pt3dadd( 56.6306, -396.75, -49.7237, 0.1 ) }
    dend_35 { pt3dadd( 56.95, -397.023, -49.6476, 0.14 ) }
    dend_35 { pt3dadd( 57.2542, -397.328, -49.5978, 0.28 ) }
    dend_35 { pt3dadd( 57.9606, -398.217, -49.599, 0.28 ) }
    dend_35 { pt3dadd( 58.3143, -398.718, -49.6216, 0.14 ) }
    dend_35 { pt3dadd( 58.6873, -399.299, -49.6461, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_59()
}

proc basic_shape_59() {
    dend_35 { pt3dadd( 59.0391, -399.802, -49.6128, 0.1 ) }
    dend_35 { pt3dadd( 59.4241, -400.361, -49.5355, 0.14 ) }
    dend_35 { pt3dadd( 59.593, -400.616, -49.4913, 0.28 ) }
    dend_35 { pt3dadd( 60.199, -401.611, -49.3003, 0.1 ) }
    dend_35 { pt3dadd( 60.4923, -402.143, -49.1904, 0.1 ) }
    dend_35 { pt3dadd( 60.9846, -403.294, -48.9795, 0.1 ) }
    dend_35 { pt3dadd( 61.2208, -403.855, -48.8628, 0.1 ) }
    dend_35 { pt3dadd( 61.3271, -404.142, -48.801, 0.1 ) }
    dend_35 { pt3dadd( 61.4293, -404.56, -48.7509, 0.1 ) }
    dend_35 { pt3dadd( 61.2944, -405.813, -48.9262, 0.1 ) }
    dend_35 { pt3dadd( 60.819, -406.788, -49.2721, 0.1 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 11/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 29.7832, -391.395, -6.40687, 0.28 ) }
    dend_44 { pt3dadd( 30.4885, -391.451, -7.04992, 0.28 ) }
    dend_44 { pt3dadd( 30.9106, -391.485, -7.43473, 0.14 ) }
    dend_44 { pt3dadd( 31.2929, -391.516, -7.78333, 0.1 ) }
    dend_44 { pt3dadd( 31.7217, -391.55, -8.17423, 0.1 ) }
    dend_44 { pt3dadd( 31.9128, -391.565, -8.34852, 0.1 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 17/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 29.7832, -391.395, -6.40687, 0.42 ) }
    dend_37 { pt3dadd( 29.9787, -391.936, -6.28806, 0.42 ) }
    dend_37 { pt3dadd( 30.154, -392.482, -6.14216, 0.28 ) }
    dend_37 { pt3dadd( 30.3049, -393.026, -5.97749, 0.14 ) }
    dend_37 { pt3dadd( 30.4288, -393.568, -5.80462, 0.1 ) }
    dend_37 { pt3dadd( 30.6234, -394.628, -5.45875, 0.14 ) }
    dend_37 { pt3dadd( 30.7153, -395.251, -5.24883, 0.14 ) }
    dend_37 { pt3dadd( 30.7737, -395.859, -5.01931, 0.28 ) }
    dend_37 { pt3dadd( 30.789, -396.252, -4.86244, 0.28 ) }
    dend_37 { pt3dadd( 30.8097, -396.844, -4.59178, 0.14 ) }
    dend_37 { pt3dadd( 30.8194, -397.439, -4.30149, 0.1 ) }
    dend_37 { pt3dadd( 30.8156, -397.809, -4.12596, 0.14 ) }
    dend_37 { pt3dadd( 30.8293, -398.403, -3.83777, 0.28 ) }
    dend_37 { pt3dadd( 30.8612, -399.0, -3.55139, 0.28 ) }
    dend_37 { pt3dadd( 30.9489, -400.205, -2.98166, 0.14 ) }
    dend_37 { pt3dadd( 30.9829, -400.577, -2.81425, 0.28 ) }
    dend_37 { pt3dadd( 31.0417, -401.188, -2.56178, 0.42 ) }
    dend_37 { pt3dadd( 31.0957, -401.745, -2.36791, 0.56 ) }
    dend_37 { pt3dadd( 31.121, -402.028, -2.29231, 0.7 ) }
    dend_37 { pt3dadd( 31.1505, -402.432, -2.22529, 0.56 ) }
    dend_37 { pt3dadd( 31.1797, -403.024, -2.19097, 0.42 ) }
    dend_37 { pt3dadd( 31.2293, -403.688, -2.17788, 0.56 ) }
    dend_37 { pt3dadd( 31.2847, -404.279, -2.1832, 0.42 ) }
    dend_37 { pt3dadd( 31.3452, -404.856, -2.19824, 0.28 ) }
    dend_37 { pt3dadd( 31.4151, -405.441, -2.22621, 0.28 ) }
    dend_37 { pt3dadd( 31.4948, -406.026, -2.26882, 0.42 ) }
    dend_37 { pt3dadd( 31.5787, -406.608, -2.31841, 0.56 ) }
    dend_37 { pt3dadd( 31.6689, -407.19, -2.37745, 0.56 ) }
    dend_37 { pt3dadd( 31.7586, -407.769, -2.43603, 0.56 ) }
    dend_37 { pt3dadd( 31.8473, -408.342, -2.49407, 0.56 ) }
    dend_37 { pt3dadd( 31.9372, -408.921, -2.55286, 0.56 ) }
    dend_37 { pt3dadd( 32.027, -409.5, -2.61171, 0.56 ) }
    dend_37 { pt3dadd( 32.1173, -410.082, -2.67088, 0.7 ) }
    dend_37 { pt3dadd( 32.2073, -410.662, -2.72981, 0.56 ) }
    dend_37 { pt3dadd( 32.2977, -411.244, -2.78908, 0.56 ) }
    dend_37 { pt3dadd( 32.3859, -411.813, -2.84674, 0.42 ) }
    dend_37 { pt3dadd( 32.4763, -412.395, -2.906, 0.56 ) }
    dend_37 { pt3dadd( 32.5662, -412.975, -2.96493, 0.42 ) }
    dend_37 { pt3dadd( 32.6564, -413.557, -3.024, 0.56 ) }
    dend_37 { pt3dadd( 32.7463, -414.136, -3.08282, 0.7 ) }
    dend_37 { pt3dadd( 32.8359, -414.715, -3.14137, 0.7 ) }
    dend_37 { pt3dadd( 32.9245, -415.288, -3.19916, 0.56 ) }
    dend_37 { pt3dadd( 33.0139, -415.867, -3.25736, 0.7 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 60/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 33.0139, -415.867, -3.25736, 1.12 ) }
    dend_43 { pt3dadd( 33.4853, -415.733, -3.67646, 1.12 ) }
    dend_43 { pt3dadd( 33.8263, -415.669, -4.22224, 0.98 ) }
    dend_43 { pt3dadd( 33.8263, -415.669, -4.22224, 0.84 ) }
    dend_43 { pt3dadd( 34.0338, -415.666, -4.83057, 0.28 ) }
    dend_43 { pt3dadd( 34.0338, -415.666, -4.83057, 0.28 ) }
    dend_43 { pt3dadd( 34.1762, -415.629, -5.11867, 0.28 ) }
    dend_43 { pt3dadd( 34.9014, -415.385, -6.23634, 0.14 ) }
    dend_43 { pt3dadd( 35.7694, -415.054, -7.2315, 0.1 ) }
    dend_43 { pt3dadd( 36.6453, -414.669, -8.01847, 0.42 ) }
    dend_43 { pt3dadd( 37.1937, -414.411, -8.42121, 0.28 ) }
    dend_43 { pt3dadd( 37.7015, -414.165, -8.74067, 0.14 ) }
    dend_43 { pt3dadd( 38.8163, -413.607, -9.30528, 0.1 ) }
    dend_43 { pt3dadd( 39.3671, -413.322, -9.49944, 0.1 ) }
    dend_43 { pt3dadd( 39.9879, -412.997, -9.67383, 0.1 ) }
    dend_43 { pt3dadd( 40.5347, -412.717, -9.89341, 0.1 ) }
    dend_43 { pt3dadd( 40.8121, -412.583, -10.0005, 0.1 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 77/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 33.0139, -415.867, -3.25736, 0.56 ) }
    dend_38 { pt3dadd( 33.4217, -417.523, -3.07738, 0.56 ) }
    dend_38 { pt3dadd( 33.5792, -418.402, -2.97612, 0.56 ) }
    dend_38 { pt3dadd( 33.7098, -419.282, -2.88432, 0.7 ) }
    dend_38 { pt3dadd( 33.8117, -420.151, -2.79036, 0.56 ) }
    dend_38 { pt3dadd( 33.9033, -421.041, -2.70029, 0.56 ) }
    dend_38 { pt3dadd( 34.0007, -422.041, -2.61083, 0.56 ) }
    dend_38 { pt3dadd( 34.0449, -423.029, -2.55697, 0.56 ) }
    dend_38 { pt3dadd( 34.078, -423.922, -2.49955, 0.56 ) }
    dend_38 { pt3dadd( 34.1045, -424.925, -2.42149, 0.56 ) }
    dend_38 { pt3dadd( 34.1175, -425.801, -2.34034, 0.42 ) }
    dend_38 { pt3dadd( 34.1306, -426.697, -2.2571, 0.28 ) }
    dend_38 { pt3dadd( 34.1061, -427.705, -2.21382, 0.42 ) }
    dend_38 { pt3dadd( 34.0536, -428.603, -2.2153, 0.56 ) }
    dend_38 { pt3dadd( 33.9639, -429.59, -2.24952, 0.56 ) }
    dend_38 { pt3dadd( 33.8772, -430.59, -2.28885, 0.56 ) }
    dend_38 { pt3dadd( 33.792, -431.48, -2.32086, 0.42 ) }
    dend_38 { pt3dadd( 33.6312, -433.128, -2.39115, 0.56 ) }
    dend_38 { pt3dadd( 33.5737, -434.003, -2.44957, 0.7 ) }
    dend_38 { pt3dadd( 33.5804, -434.45, -2.49151, 0.84 ) }
    dend_38 { pt3dadd( 33.884, -436.234, -2.72158, 0.84 ) }
    dend_38 { pt3dadd( 33.884, -436.234, -2.72158, 0.84 ) }
    dend_38 { pt3dadd( 34.0477, -436.639, -2.7818, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_60()
}

proc basic_shape_60() {
    dend_38 { pt3dadd( 34.4041, -437.443, -2.91532, 0.7 ) }
    dend_38 { pt3dadd( 34.7669, -438.332, -3.12992, 0.7 ) }
    dend_38 { pt3dadd( 35.0601, -439.137, -3.35207, 0.56 ) }
    dend_38 { pt3dadd( 35.3505, -440.05, -3.6196, 0.56 ) }
    dend_38 { pt3dadd( 35.6041, -440.866, -3.85111, 0.7 ) }
    dend_38 { pt3dadd( 35.8488, -441.781, -4.15532, 0.56 ) }
    dend_38 { pt3dadd( 36.0887, -442.691, -4.44417, 0.7 ) }
    dend_38 { pt3dadd( 36.3412, -443.518, -4.6415, 0.84 ) }
    dend_38 { pt3dadd( 36.6246, -444.356, -4.76012, 0.7 ) }
    dend_38 { pt3dadd( 36.9784, -445.171, -4.72908, 0.84 ) }
    dend_38 { pt3dadd( 37.7229, -446.611, -4.46972, 0.98 ) }
    dend_38 { pt3dadd( 38.5221, -448.054, -4.06051, 0.84 ) }
    dend_38 { pt3dadd( 39.3715, -449.554, -3.51696, 0.7 ) }
    dend_38 { pt3dadd( 39.8276, -450.359, -3.20349, 0.7 ) }
    dend_38 { pt3dadd( 40.571, -451.915, -2.64645, 0.56 ) }
    dend_38 { pt3dadd( 40.8746, -452.72, -2.40518, 0.7 ) }
    dend_38 { pt3dadd( 41.0924, -453.563, -2.20885, 0.84 ) }
    dend_38 { pt3dadd( 41.1407, -454.181, -2.15842, 0.56 ) }
    dend_38 { pt3dadd( 41.1516, -455.08, -2.11002, 0.56 ) }
    dend_38 { pt3dadd( 41.1653, -456.967, -2.01309, 0.56 ) }
    dend_38 { pt3dadd( 41.2086, -457.842, -1.93467, 0.7 ) }
    dend_38 { pt3dadd( 41.3773, -458.826, -1.81398, 0.56 ) }
    dend_38 { pt3dadd( 41.5741, -459.688, -1.69036, 0.56 ) }
    dend_38 { pt3dadd( 42.0547, -461.48, -1.42597, 0.56 ) }
    dend_38 { pt3dadd( 42.3024, -462.325, -1.28384, 0.56 ) }
    dend_38 { pt3dadd( 42.8379, -464.04, -0.962556, 0.7 ) }
    dend_38 { pt3dadd( 43.9124, -467.834, -0.259083, 0.56 ) }
    dend_38 { pt3dadd( 44.1541, -468.794, -0.0981461, 0.7 ) }
    dend_38 { pt3dadd( 44.3248, -469.662, 0.0332842, 0.7 ) }
    dend_38 { pt3dadd( 44.3989, -470.275, 0.108704, 0.56 ) }
    dend_38 { pt3dadd( 44.4685, -471.271, 0.233129, 0.42 ) }
    dend_38 { pt3dadd( 44.4693, -472.258, 0.342046, 0.28 ) }
    dend_38 { pt3dadd( 44.4931, -473.143, 0.502527, 0.42 ) }
    dend_38 { pt3dadd( 44.5852, -474.13, 0.689081, 0.56 ) }
    dend_38 { pt3dadd( 44.7306, -475.092, 0.870322, 0.7 ) }
    dend_38 { pt3dadd( 44.9118, -475.955, 1.01351, 0.56 ) }
    dend_38 { pt3dadd( 45.1451, -476.809, 1.12813, 0.7 ) }
    dend_38 { pt3dadd( 45.6533, -478.372, 1.2912, 0.84 ) }
    dend_38 { pt3dadd( 45.9005, -479.233, 1.33021, 0.7 ) }
    dend_38 { pt3dadd( 46.1096, -480.099, 1.29981, 0.56 ) }
    dend_38 { pt3dadd( 46.2574, -480.959, 1.20793, 0.42 ) }
    dend_38 { pt3dadd( 46.3134, -481.59, 1.10733, 0.56 ) }
    dend_38 { pt3dadd( 46.319, -482.013, 1.01995, 0.7 ) }
    dend_38 { pt3dadd( 46.1975, -483.841, 0.597683, 0.56 ) }
    dend_38 { pt3dadd( 46.1155, -484.717, 0.430735, 0.56 ) }
    dend_38 { pt3dadd( 46.0279, -485.595, 0.303648, 0.56 ) }
    dend_38 { pt3dadd( 45.9351, -486.486, 0.231605, 0.56 ) }
    dend_38 { pt3dadd( 45.8984, -486.914, 0.223275, 0.56 ) }
    dend_38 { pt3dadd( 45.8271, -487.545, 0.216849, 0.98 ) }
    dend_38 { pt3dadd( 45.7224, -488.545, 0.221548, 0.84 ) }
    dend_38 { pt3dadd( 45.5312, -489.399, 0.167219, 0.84 ) }
    dend_38 { pt3dadd( 45.3474, -489.998, 0.0877225, 0.28 ) }
    dend_38 { pt3dadd( 45.0621, -490.824, -0.0702693, 0.28 ) }
    dend_38 { pt3dadd( 44.4375, -492.525, -0.484736, 0.28 ) }
    dend_38 { pt3dadd( 44.1305, -493.318, -0.727189, 0.28 ) }
    dend_38 { pt3dadd( 43.7207, -494.785, -1.15322, 0.42 ) }
    dend_38 { pt3dadd( 43.6199, -495.658, -1.32522, 0.84 ) }
    dend_38 { pt3dadd( 43.6081, -496.546, -1.42296, 0.84 ) }
    dend_38 { pt3dadd( 43.6081, -496.546, -1.42296, 0.7 ) }
    dend_38 { pt3dadd( 43.6081, -496.546, -1.42296, 0.84 ) }
    dend_38 { pt3dadd( 43.8317, -500.474, -1.45705, 0.55 ) }
    dend_38 { pt3dadd( 44.1308, -504.466, -1.41378, 0.83 ) }
    dend_38 { pt3dadd( 44.4492, -508.972, -1.34134, 0.83 ) }
    dend_38 { pt3dadd( 44.5152, -509.957, -1.32109, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 64/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 44.5152, -509.957, -1.32109, 0.55 ) }
    dend_42 { pt3dadd( 43.5867, -512.638, -0.0474092, 0.55 ) }
    dend_42 { pt3dadd( 42.6972, -514.889, 0.953614, 0.83 ) }
    dend_42 { pt3dadd( 41.6911, -517.275, 1.83059, 0.83 ) }
    dend_42 { pt3dadd( 40.2623, -520.664, 3.07605, 0.55 ) }
    dend_42 { pt3dadd( 39.3858, -522.742, 3.84009, 0.28 ) }
    dend_42 { pt3dadd( 38.2983, -525.321, 4.78804, 0.55 ) }
    dend_42 { pt3dadd( 37.4192, -527.456, 5.34023, 0.28 ) }
    dend_42 { pt3dadd( 36.3629, -529.659, 5.74869, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 44.5152, -509.957, -1.32109, 0.83 ) }
    dend_39 { pt3dadd( 44.6279, -513.524, -0.940584, 0.83 ) }
    dend_39 { pt3dadd( 44.8056, -516.069, -0.695228, 0.55 ) }
    dend_39 { pt3dadd( 44.9645, -518.247, -0.486559, 0.83 ) }
    dend_39 { pt3dadd( 45.1069, -519.587, -0.358228, 0.55 ) }
    dend_39 { pt3dadd( 45.4639, -522.504, -0.0918961, 0.83 ) }
    dend_39 { pt3dadd( 45.807, -525.467, 0.179495, 0.83 ) }
    dend_39 { pt3dadd( 46.2058, -528.487, 0.446578, 0.83 ) }
    dend_39 { pt3dadd( 46.7694, -532.568, 0.79325, 0.83 ) }
    dend_39 { pt3dadd( 47.1374, -535.181, 1.04746, 0.83 ) }
    dend_39 { pt3dadd( 47.4741, -537.779, 1.29966, 0.83 ) }
    dend_39 { pt3dadd( 48.3627, -544.186, 1.91715, 0.83 ) }
    dend_39 { pt3dadd( 48.691, -546.35, 2.08993, 0.55 ) }
    dend_39 { pt3dadd( 49.2474, -549.698, 2.26791, 0.83 ) }
    dend_39 { pt3dadd( 49.6174, -551.629, 2.32474, 0.83 ) }
    dend_39 { pt3dadd( 50.2011, -554.466, 2.33079, 0.55 ) }
    dend_39 { pt3dadd( 51.1162, -558.42, 2.2286, 0.55 ) }
    dend_39 { pt3dadd( 52.0373, -561.879, 2.02207, 0.55 ) }
    dend_39 { pt3dadd( 52.5542, -563.991, 1.82763, 0.55 ) }
    dend_39 { pt3dadd( 52.9204, -565.62, 1.63579, 0.55 ) }
    dend_39 { pt3dadd( 53.5361, -568.795, 1.24125, 0.83 ) }
    dend_39 { pt3dadd( 54.0611, -572.059, 0.864382, 0.55 ) }
    dend_39 { pt3dadd( 54.411, -575.008, 0.518661, 0.55 ) }
    dend_39 { pt3dadd( 54.709, -578.005, 0.18166, 0.55 ) }
    dend_39 { pt3dadd( 55.1485, -583.504, -0.409934, 0.55 ) }
    dend_39 { pt3dadd( 55.2656, -585.238, -0.605506, 0.55 ) }
    dend_39 { pt3dadd( 55.3935, -587.497, -0.860005, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_61()
}

proc basic_shape_61() {
    dend_39 { pt3dadd( 55.6859, -592.36, -1.43624, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 55.6859, -592.36, -1.43624, 0.28 ) }
    dend_41 { pt3dadd( 55.5177, -593.011, -2.51939, 0.28 ) }
    dend_41 { pt3dadd( 54.8421, -593.968, -4.10922, 0.55 ) }
    dend_41 { pt3dadd( 54.4942, -594.368, -4.877, 0.28 ) }
    dend_41 { pt3dadd( 54.0485, -594.889, -5.97246, 0.55 ) }
    dend_41 { pt3dadd( 52.3093, -596.941, -10.4783, 0.28 ) }
    dend_41 { pt3dadd( 51.8396, -597.551, -11.809, 0.55 ) }
    dend_41 { pt3dadd( 50.1994, -599.262, -15.7831, 0.28 ) }
    dend_41 { pt3dadd( 49.5509, -599.807, -17.1681, 0.55 ) }
    dend_41 { pt3dadd( 48.8471, -600.325, -18.6244, 0.55 ) }
    dend_41 { pt3dadd( 48.1873, -600.77, -20.033, 0.28 ) }
    dend_41 { pt3dadd( 47.7019, -601.34, -21.6086, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 55.6859, -592.36, -1.43624, 0.55 ) }
    dend_40 { pt3dadd( 55.8624, -594.262, -1.64666, 0.55 ) }
    dend_40 { pt3dadd( 56.1628, -597.5, -2.00476, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_45, dend_0, axon_0, dend_51, dend_46, dend_14, dend_1, axon_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_5 = new SectionList()
    dend_45 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_77 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_48 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_5 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_75 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_58 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_57 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_55 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_24 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_76 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_72 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_60 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_59 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_25 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_71 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_27 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_29 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_36 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_35 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_38 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_39 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_51 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_61 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_14 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_52 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_53 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_63 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_62 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_64 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_18 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_65 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_66 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_70 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_67 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_23 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_7 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_68 OneSecGrp_SectionRef_67.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_77 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_50 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_73 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_74 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_21 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_26 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_32 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_33 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_34 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_44 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_37 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_43 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_31 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_42 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_40 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_41 OneSecGrp_SectionRef_80.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_63()
}

proc subsets_63() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_64()
}

proc subsets_64() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 7
    dend_47 nseg = 7
    dend_15 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 13
    dend_49 nseg = 3
    dend_17 nseg = 3
    dend_6 nseg = 11
    dend_75 nseg = 3
    dend_58 nseg = 7
    dend_57 nseg = 7
    dend_55 nseg = 7
    dend_54 nseg = 7
    dend_24 nseg = 7
    dend_9 nseg = 5
    dend_8 nseg = 3
    dend_76 nseg = 3
    dend_72 nseg = 5
    dend_60 nseg = 3
    dend_59 nseg = 3
    dend_25 nseg = 5
    dend_20 nseg = 5
    dend_71 nseg = 3
    dend_28 nseg = 3
    dend_27 nseg = 3
    dend_22 nseg = 3
    dend_11 nseg = 7
    dend_29 nseg = 9
    dend_69 nseg = 3
    dend_30 nseg = 3
    dend_36 nseg = 5
    dend_35 nseg = 7
    dend_38 nseg = 5
    dend_39 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_BTC_87c80e7368_0_0


