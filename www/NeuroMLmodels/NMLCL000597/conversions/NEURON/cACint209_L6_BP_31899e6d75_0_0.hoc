// Cell: cACint209_L6_BP_31899e6d75_0_0
/*
{
  "id" : "cACint209_L6_BP_31899e6d75_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-2.75525, 7.94854, 2.77096, 0.83", "-5.13479, 9.79288, 3.12983, 1.11", "-6.53779, 10.8796, 3.31651, 0.83", "-7.90085, 11.9262, 3.48377, 0.83", "-8.70788, 12.523, 3.57542, 1.11", "-11.2352, 14.388, 3.86917, 1.11", "-15.7554, 17.5808, 4.38844, 0.83", "-17.3839, 18.6872, 4.55991, 0.83", "-18.6735, 19.5373, 4.66642, 0.83", "-19.9311, 20.3799, 4.75862, 0.83", "-20.9547, 21.0743, 4.80836, 0.55", "-21.7242, 21.5445, 4.85884, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.11755, 6.0332, -6.08254, 0.55", "6.09111, 6.46012, -6.52327, 0.55", "7.2363, 6.56789, -7.10645, 0.83", "9.04878, 6.68258, -8.18976, 0.55", "9.9237, 6.73794, -8.71269, 1.38", "12.0749, 6.87407, -9.99844, 0.55", "12.9911, 6.82797, -10.6119, 0.83", "17.7306, 5.9826, -14.0589, 0.55", "18.1891, 5.86892, -14.4381, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.674677, -9.65377, 2.93379, 1.11", "-0.705063, -12.3346, 3.89487, 1.11", "-0.717436, -13.4264, 4.28628, 0.83", "-0.733876, -14.8769, 4.80629, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.998906, 10.6434, -1.42824, 1.11", "1.19124, 13.3271, -1.41412, 1.11", "1.50935, 17.7053, -1.23053, 1.38", "1.53171, 17.949, -1.21636, 1.38", "1.99251, 20.9588, -1.02874, 0.83", "2.62566, 24.1367, -0.673221, 0.83", "3.69043, 27.7136, 0.132054, 0.83", "4.2795, 29.0644, 0.588303, 0.83", "4.84833, 30.0382, 1.00494, 1.11", "6.48296, 32.4026, 2.06232, 0.55", "8.38079, 34.8645, 3.32978, 0.83", "10.8223, 37.3818, 4.7367, 0.55", "12.0516, 38.4208, 5.36074, 0.83", "13.7815, 39.8258, 6.35393, 0.55", "15.9399, 41.6139, 7.71851, 0.55", "18.9818, 44.311, 9.83156, 0.55", "22.3376, 47.3976, 12.1656, 0.55", "24.4883, 49.401, 13.9475, 0.55", "27.1651, 51.9348, 16.502, 0.55", "27.7265, 52.442, 17.0863, 0.83", "29.221, 53.7819, 18.7443, 0.55", "30.4659, 54.824, 20.0378, 0.83", "33.3548, 57.6876, 23.1141, 0.55", "34.4123, 58.7338, 23.9901, 0.83", "35.3701, 59.4998, 24.5577, 0.55", "36.3019, 60.1561, 24.9717, 0.83", "38.34, 61.3674, 25.6831, 0.83", "41.0124, 63.0201, 26.3955, 0.83", "42.6361, 64.1174, 26.6627, 0.55", "43.8781, 65.0718, 26.8733, 0.55", "47.128, 67.5366, 27.3783, 0.83", "49.2179, 69.1172, 27.6225, 0.55", "52.3746, 71.4301, 27.868, 0.55", "55.2495, 73.3626, 27.9796, 0.55", "57.8109, 74.996, 28.0116, 0.55", "61.0274, 76.9036, 27.9072, 0.55", "62.9796, 77.8272, 27.7798, 0.55", "64.2906, 78.3404, 27.5347, 0.55", "66.0067, 78.7025, 27.0607, 0.55", "68.532, 78.819, 26.1389, 0.55", "70.0937, 78.6853, 25.5011, 0.55", "72.3929, 78.4245, 24.7349, 0.55", "76.8223, 78.0697, 23.6791, 0.55", "80.3309, 77.9542, 23.103, 0.55", "84.08, 78.0101, 22.7169, 0.55", "86.5076, 78.1275, 22.6594, 0.55", "92.8771, 78.9989, 22.9231, 0.55", "96.6851, 79.799, 23.3585, 0.55", "99.575, 80.5803, 23.9453, 0.55", "101.347, 81.336, 24.3682, 0.55", "103.406, 82.4772, 24.8496, 0.55", "106.867, 84.7459, 25.3698, 0.55", "107.65, 85.2939, 25.3841, 0.55", "109.876, 86.7557, 25.2809, 0.55", "111.927, 88.3222, 25.1792, 0.83", "113.045, 89.1918, 25.1064, 0.55", "114.717, 90.6916, 24.9329, 0.83", "123.781, 98.6928, 26.2922, 0.83", "131.659, 107.946, 26.8872, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-21.7242, 21.5445, 4.85884, 0.55", "-22.572, 22.1875, 4.31568, 0.55", "-23.494, 22.8868, 3.72504, 0.55", "-24.6066, 23.7307, 3.01227, 0.55", "-25.5253, 24.4275, 2.42371, 0.83", "-26.2951, 25.0114, 1.9305, 0.55", "-27.7241, 26.0953, 1.01504, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-21.7242, 21.5445, 4.85884, 0.55", "-23.6907, 22.0558, 4.35959, 0.55", "-25.8207, 22.4954, 4.02692, 0.55", "-28.2461, 22.9795, 3.70753, 0.55", "-31.8142, 23.5857, 3.5572, 0.55", "-34.837, 23.9704, 3.623, 0.55", "-38.0306, 24.3029, 3.814, 0.55", "-41.176, 24.3651, 4.28105, 0.55", "-43.9305, 24.1237, 4.88491, 0.55", "-47.4252, 23.537, 5.93787, 0.55", "-48.9796, 23.145, 6.57024, 0.55", "-50.6699, 22.6939, 7.31496, 0.55", "-53.6347, 21.7175, 8.47253, 0.55", "-55.1746, 21.2417, 8.86827, 0.55", "-56.787, 20.6992, 9.26595, 0.55", "-58.6737, 20.108, 9.56567, 0.55", "-60.7144, 19.5148, 9.84655, 0.55", "-63.6169, 18.672, 10.1871, 0.55", "-67.4337, 17.8489, 10.3609, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "18.1891, 5.86892, -14.4381, 0.55", "22.9202, 6.95826, -15.4298, 0.55", "25.6354, 7.45867, -16.3955, 0.55", "28.3094, 7.8358, -17.3975, 0.55", "30.133, 8.02053, -18.0876, 0.55", "32.7959, 8.22694, -19.0809, 0.55", "38.313, 8.56241, -21.3235, 0.55", "44.5651, 8.93785, -24.2898, 0.55", "47.5856, 8.94712, -25.9552, 0.55", "49.2003, 8.92078, -26.9577, 0.55", "50.9703, 8.90659, -28.1289, 0.55", "54.1249, 8.79108, -30.2138, 0.55", "55.2669, 8.68419, -31.0153, 0.55", "60.1028, 8.38574, -34.7778, 0.55", "63.5253, 8.25147, -37.6939, 0.55", "65.4968, 8.21768, -39.4247, 0.55", "67.4623, 8.16622, -41.1508, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "18.1891, 5.86892, -14.4381, 0.83", "20.0977, 6.90143, -14.4005, 0.83", "21.1878, 7.49528, -14.4274, 0.55", "22.7925, 8.41641, -14.5963, 0.83", "23.8724, 9.06555, -14.739, 0.55", "25.3643, 9.99736, -14.9109, 0.83", "27.1612, 11.1457, -15.0502, 0.55", "28.0622, 11.6555, -15.0902, 0.55", "30.1223, 12.5421, -15.0662, 0.83", "31.9837, 13.1046, -14.8276, 0.55", "33.025, 13.3991, -14.5973, 0.83", "34.5915, 13.8593, -14.0871, 0.55", "36.8477, 14.5327, -13.0687, 0.55", "39.9741, 15.2955, -11.512, 0.55", "42.9522, 15.8991, -9.83555, 0.55", "45.3107, 16.3488, -8.46811, 0.55", "49.2002, 17.1059, -6.19203, 0.55", "52.0512, 17.734, -4.45778, 0.55", "53.7809, 18.2482, -3.33529, 0.55", "56.9839, 19.5096, -1.20907, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.733876, -14.8769, 4.80629, 0.83", "-1.14696, -17.0432, 4.78612, 0.83", "-1.54942, -19.1537, 4.76646, 0.83", "-1.99876, -21.5102, 4.74452, 0.83", "-2.2334, -22.7407, 4.73306, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.733876, -14.8769, 4.80629, 0.55", "-0.071623, -16.4957, 5.76305, 0.55", "0.567335, -18.4667, 7.05463, 0.55", "1.04671, -21.0263, 8.92208, 0.55", "1.17085, -22.0171, 9.68758, 0.83", "1.31843, -24.5352, 11.9674, 0.55", "1.29544, -25.829, 13.1899, 0.55", "1.21938, -28.3431, 15.6827, 0.83", "1.08044, -30.2048, 17.6716, 0.55", "0.826723, -31.7311, 19.3158, 0.55", "0.27133, -34.6168, 22.3907, 0.55", "-0.174359, -36.9165, 24.8142, 0.55", "-0.489385, -38.763, 26.7753, 0.55", "-0.729035, -40.7297, 28.7745, 0.28", "-0.767029, -41.5529, 29.5624, 0.55", "-0.815298, -43.0747, 30.9248, 0.28", "-0.645613, -45.4659, 32.6246, 0.55", "-1.86585, -53.3033, 39.0762, 0.55", "-3.12247, -60.5386, 46.1901, 0.55", "-3.59522, -66.5276, 54.4633, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-27.7241, 26.0953, 1.01504, 0.55", "-30.9567, 26.3141, 2.43318, 0.55", "-32.3303, 26.3183, 3.18364, 0.83", "-33.9537, 26.2256, 4.25689, 0.55", "-35.204, 26.143, 5.1845, 0.83", "-38.4765, 26.0386, 7.59955, 0.55", "-39.7159, 26.0175, 8.52521, 0.28", "-41.7946, 25.9865, 10.235, 0.55", "-44.5825, 25.9616, 12.5185, 0.55", "-46.6925, 25.9529, 14.1614, 0.55", "-49.5049, 25.9496, 16.2716, 0.28", "-50.2293, 25.9626, 16.7374, 0.55", "-51.7244, 26.012, 17.6494, 0.28", "-52.7324, 26.0802, 18.1806, 0.55", "-54.7776, 26.2237, 19.0922, 0.28", "-55.9749, 26.2504, 19.5604, 0.55", "-58.0912, 26.1467, 20.3875, 0.28", "-59.5093, 26.0731, 20.8938, 0.55", "-68.4388, 24.5671, 27.6282, 0.55", "-76.7096, 21.9283, 34.8384, 0.55", "-84.6999, 18.2363, 41.9011, 0.55", "-92.6223, 13.3254, 48.2631, 0.55", "-99.4073, 8.69706, 56.0026, 0.55", "-106.972, 4.54832, 63.277, 0.55", "-114.673, 2.16821, 71.1753, 0.55", "-122.339, -1.07439, 78.7961, 0.55", "-129.814, -3.62161, 86.8576, 0.55", "-136.808, -6.38284, 95.2733, 0.55", "-142.758, -10.4687, 103.948, 0.55", "-148.813, -13.5466, 112.96, 0.55", "-154.999, -17.6834, 121.444, 0.55", "-159.938, -22.382, 130.438, 0.55", "-163.076, -26.476, 140.475, 0.55", "-166.113, -32.5167, 149.511, 0.55", "-167.562, -38.8252, 158.755, 0.55", "-169.615, -44.6745, 168.185, 0.55", "-172.861, -49.7026, 177.753, 0.55", "-178.363, -52.8919, 187.076, 0.55", "-182.929, -57.3513, 196.383, 0.55", "-185.462, -60.1429, 207.02, 0.55", "-189.732, -62.0193, 217.296, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-27.7241, 26.0953, 1.01504, 0.55", "-29.2713, 27.1369, -1.2374, 0.55", "-30.3735, 28.2687, -3.68282, 0.55", "-31.3628, 29.6214, -6.23949, 0.55", "-31.9824, 30.4684, -7.84044, 0.55", "-33.1125, 32.0135, -10.7608, 0.83", "-33.9393, 33.1438, -12.8973, 0.55", "-34.8047, 34.6956, -16.0078, 0.83", "-35.044, 35.706, -17.7178, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-67.4337, 17.8489, 10.3609, 0.28", "-68.298, 16.2642, 9.76965, 0.28", "-68.7053, 15.5893, 9.45061, 0.28", "-69.2281, 14.6375, 8.97017, 0.55", "-69.6584, 13.7993, 8.55956, 0.28", "-70.2939, 12.5206, 7.9538, 0.55", "-72.0637, 8.75397, 6.25177, 0.28", "-72.6247, 7.44235, 5.55315, 0.55", "-73.4643, 5.42874, 4.40882, 0.28", "-73.9374, 4.22916, 3.67118, 0.55", "-74.2616, 3.40443, 3.14195, 0.28", "-74.6318, 2.45705, 2.54304, 0.55", "-75.7446, -0.714821, 0.644218, 0.28", "-76.0921, -1.67071, 0.0324065, 0.55", "-76.6919, -3.11592, -1.07344, 0.28", "-77.1935, -4.03076, -1.88526, 0.28", "-77.6582, -4.63658, -2.47151, 0.55", "-79.3209, -6.33341, -4.1182, 0.28", "-80.1045, -7.01924, -4.78541, 0.55", "-82.0177, -8.56789, -6.432, 0.28", "-83.9436, -9.92942, -7.96206, 0.28", "-86.0463, -11.2147, -9.53768, 0.28", "-87.0198, -11.6941, -10.1644, 0.55", "-91.6084, -17.3376, -14.4025, 0.55", "-96.9505, -23.2091, -17.2047, 0.55", "-102.021, -28.6329, -21.1716, 0.55", "-107.137, -33.4633, -25.7927, 0.55", "-112.23, -37.6195, -31.0511, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-67.4337, 17.8489, 10.3609, 0.55", "-67.9734, 17.7986, 10.3946, 0.55", "-69.5118, 17.681, 10.6844, 0.55", "-70.0922, 17.6258, 10.8251, 0.55", "-71.4581, 17.4581, 11.1812, 0.55", "-73.551, 17.2095, 11.6275, 0.55", "-74.6375, 17.1108, 11.8367, 0.28", "-76.3252, 16.9175, 12.1343, 0.55", "-77.5745, 16.7435, 12.3141, 0.55", "-78.1021, 16.6667, 12.3916, 0.28", "-81.2665, 16.204, 12.8524, 0.55", "-82.7372, 15.9103, 12.9869, 0.28", "-84.7114, 15.4932, 13.0545, 0.28", "-86.4056, 15.1469, 13.011, 0.55", "-93.1486, 14.9297, 14.1574, 0.55", "-99.7197, 14.6302, 16.0445, 0.55", "-105.964, 13.7266, 18.6944, 0.55", "-112.088, 14.027, 21.7329, 0.55", "-117.448, 14.2538, 25.9816, 0.55", "-121.897, 14.9805, 31.1298, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "67.4623, 8.16622, -41.1508, 0.55", "71.3886, 9.35721, -44.4351, 0.55", "72.6276, 9.67848, -45.5528, 0.55", "74.178, 10.0283, -46.9331, 0.55", "76.988, 10.6386, -49.6062, 0.55", "79.9182, 11.1517, -52.4707, 0.55", "81.3499, 11.2845, -53.8347, 0.83", "82.5259, 11.3104, -55.0489, 0.55", "83.4029, 11.2548, -56.0488, 0.83", "85.5099, 10.8139, -58.611, 0.55", "87.2425, 10.2815, -60.734, 0.55", "89.2369, 9.65454, -63.0734, 0.55", "91.4575, 9.02344, -65.725, 0.55", "92.9456, 8.56338, -67.5422, 0.55", "94.6236, 8.03908, -69.6481, 0.55", "96.0726, 7.64021, -71.5734, 0.55", "96.983, 7.4773, -72.911, 0.55", "98.1183, 7.2115, -75.5922, 0.55", "98.7322, 6.99501, -77.2676, 0.55", "99.2441, 6.6162, -79.4887, 0.55", "99.9298, 5.86599, -83.2401, 0.55", "100.068, 5.66535, -84.0856, 0.28", "101.862, 3.10967, -94.3661, 0.28", "102.479, 2.37875, -97.3854, 0.83", "104.93, -0.408651, -108.097, 0.83", "106.198, -1.90408, -113.073, 0.83", "106.814, -2.59328, -115.088, 0.55", "107.531, -3.27585, -117.055, 0.55", "109.552, -4.63964, -120.706, 0.55", "111.732, -5.87859, -123.918, 0.28", "112.406, -6.11495, -124.112, 0.55", "113.902, -6.52905, -123.999, 0.28", "114.831, -6.71871, -123.794, 0.55", "115.8, -6.92941, -123.497, 0.28", "116.966, -7.12377, -123.087, 0.55", "118.709, -7.32196, -122.66, 0.28", "120.106, -7.52434, -122.363, 0.55", "121.652, -7.645, -122.158, 0.28", "123.752, -7.80195, -122.067, 0.55", "126.105, -7.92306, -122.107, 0.55", "128.173, -8.00485, -122.281, 0.28", "131.033, -8.09164, -122.68, 0.55", "135.971, -8.10395, -123.9, 0.55", "138.15, -7.99522, -124.705, 0.55", "139.086, -7.90907, -125.152, 0.83", "140.866, -7.73213, -126.17, 0.55", "142.101, -7.55848, -126.955, 0.83", "145.425, -7.00232, -129.105, 0.55", "147.451, -6.80488, -130.471, 0.28", "148.305, -6.77575, -130.949, 0.55", "150.645, -6.91596, -131.994, 0.28", "151.464, -7.04159, -132.306, 0.55", "153.155, -7.40777, -132.683, 0.28", "154.877, -7.94962, -132.765, 0.55", "158.363, -9.23258, -132.314, 0.28", "159.972, -9.89552, -131.934, 0.55", "162.364, -11.02, -131.239, 0.28", "165.389, -12.4285, -130.251, 0.55", "167.577, -13.4168, -129.502, 0.55", "171.37, -15.009, -128.141, 0.28", "172.926, -15.5901, -127.712, 0.55", "175.606, -16.4378, -127.269, 0.28", "178.278, -17.0767, -127.015, 0.55", "179.742, -17.2602, -127.082, 0.28", "181.067, -17.2466, -127.247, 0.55", "184.805, -16.9839, -128.069, 0.28", "187.477, -16.6101, -128.7, 0.28", "189.802, -16.1146, -129.283, 0.55", "192.367, -15.4955, -130.058, 0.28", "193.015, -15.2986, -130.231, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "67.4623, 8.16622, -41.1508, 0.55", "68.1763, 5.90572, -42.5837, 0.55", "68.6121, 3.98215, -43.6596, 0.28", "69.0102, 2.22145, -44.4959, 0.55", "70.0435, -1.4979, -46.3062, 0.28", "70.102, -1.73278, -46.453, 0.55", "70.4414, -2.96201, -47.323, 0.28", "70.6291, -3.98691, -48.2021, 0.55", "70.7643, -5.06219, -49.2398, 0.28", "70.9064, -6.53246, -50.7215, 0.55", "71.2612, -10.2238, -54.3733, 0.55", "71.5465, -13.5915, -57.7601, 0.55", "71.7485, -16.285, -60.4704, 0.55", "71.9, -18.9354, -63.0876, 0.55", "71.9371, -19.62, -63.7351, 0.28", "71.9974, -20.3494, -64.3674, 0.55", "72.1737, -21.3524, -65.1524, 0.28", "72.6699, -23.1369, -66.3993, 0.55", "73.9112, -26.5293, -68.2531, 0.55", "74.5955, -28.3507, -69.0867, 0.28", "75.1841, -30.2103, -70.0137, 0.55", "75.8194, -32.828, -71.4069, 0.28", "76.1989, -34.95, -72.5785, 0.55", "76.6339, -38.1315, -74.3344, 0.28", "77.1078, -41.4206, -76.0515, 0.55", "77.734, -46.2007, -78.585, 0.28", "78.0135, -48.7524, -79.9429, 0.55", "78.2578, -51.3659, -81.3918, 0.28", "78.4486, -53.6704, -82.8072, 0.28", "78.7821, -56.5504, -84.8221, 0.55", "79.2712, -59.2078, -86.6271, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "56.9839, 19.5096, -1.20907, 0.55", "59.1998, 19.0032, -0.89412, 0.55", "60.8031, 18.5988, -0.828004, 0.55", "64.3013, 17.7047, -0.874135, 0.55", "65.8652, 17.2942, -1.0415, 0.55", "67.5708, 16.8981, -1.30562, 0.55", "69.8566, 16.4354, -1.81751, 0.55", "72.2513, 15.9226, -2.60075, 0.55", "73.4997, 15.662, -3.16142, 0.55", "76.0192, 15.1933, -4.65748, 0.55", "77.1785, 14.9941, -5.38304, 0.55", "79.8867, 14.4857, -7.16561, 0.55", "81.7151, 14.0616, -8.37048, 0.55", "83.0632, 13.7294, -9.19458, 0.83", "85.2112, 13.1104, -10.5003, 0.55", "87.3099, 12.3813, -11.7119, 0.83", "89.0866, 11.6646, -12.6881, 0.55", "90.6744, 11.0361, -13.4652, 0.55", "91.5838, 10.7112, -13.8475, 0.83", "93.7134, 9.93926, -14.6218, 0.28", "94.7802, 9.58891, -14.929, 0.28", "95.8033, 9.19172, -15.2931, 0.28", "96.912, 8.79413, -15.6865, 0.28", "98.687, 8.1993, -16.3482, 0.28", "99.4032, 7.9653, -16.5907, 0.55", "101.127, 7.39364, -16.9937, 0.55", "104.236, 6.30589, -17.5637, 0.55", "105.096, 5.97472, -17.6868, 0.55", "105.864, 5.64726, -17.7673, 0.83", "107.543, 4.96487, -17.7944, 0.55", "109.005, 4.37047, -17.7936, 0.55", "110.387, 3.81367, -17.7852, 0.55", "111.454, 3.36879, -17.813, 0.55", "113.13, 2.55716, -17.9631, 0.55", "115.083, 1.44026, -18.285, 0.55", "118.072, -0.61443, -19.0719, 0.55", "119.682, -1.98038, -19.6609, 0.55", "121.048, -3.41042, -20.2942, 0.28", "121.445, -3.93184, -20.5274, 0.55", "122.289, -5.37852, -21.1495, 0.28", "122.975, -6.991, -21.7977, 0.55", "123.574, -9.01482, -22.4303, 0.55", "123.986, -10.3567, -22.7842, 0.28", "124.14, -10.835, -22.8869, 0.55", "124.546, -12.0273, -23.1275, 0.28", "125.108, -13.5867, -23.4062, 0.55", "126.61, -17.3676, -23.9964, 0.55", "127.4, -19.2814, -24.2574, 0.55", "128.137, -21.0385, -24.4824, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "56.9839, 19.5096, -1.20907, 0.55", "58.3655, 19.5139, -0.162528, 0.55", "58.8087, 19.5162, 0.148791, 0.55", "60.4578, 19.4544, 1.22866, 0.55", "62.3, 19.4184, 2.46566, 0.55", "64.6603, 19.36, 4.11272, 0.55", "65.3123, 19.3451, 4.56342, 0.55", "66.4806, 19.2752, 5.35514, 0.55", "67.7629, 19.233, 6.17854, 0.55", "69.2558, 19.2327, 7.07441, 0.55", "70.6633, 19.2514, 7.92605, 0.55", "71.437, 19.3004, 8.36208, 0.55", "72.3463, 19.3838, 8.87567, 0.55", "73.4725, 19.5213, 9.49502, 0.83", "75.3185, 19.7637, 10.3188, 0.55", "76.5396, 19.8832, 10.8005, 0.83", "78.2328, 19.9791, 11.4023, 0.55", "78.7517, 19.9815, 11.5763, 0.55", "80.3594, 19.9138, 12.0729, 0.55", "83.2306, 19.6339, 12.8262, 0.55", "85.3293, 19.3187, 13.3156, 0.55", "86.9876, 18.9883, 13.7321, 0.55", "88.6747, 18.5567, 14.2034, 0.55", "89.0292, 18.4563, 14.3031, 0.28", "89.7471, 18.224, 14.5, 0.83", "92.693, 17.2254, 15.3203, 0.55", "94.7542, 16.5338, 15.8543, 0.55", "96.4472, 16.0041, 16.3407, 0.55", "97.4585, 15.6835, 16.6407, 0.83", "98.2552, 15.4425, 16.8798, 0.28", "98.9779, 15.2258, 17.09, 0.55", "104.656, 14.8155, 19.7163, 0.55", "110.634, 13.573, 21.1342, 0.55", "116.615, 13.0493, 22.9388, 0.55", "121.919, 11.5347, 25.9163, 0.55", "126.814, 9.17895, 29.0444, 0.55", "132.135, 6.12416, 30.3299, 0.55", "137.338, 2.63064, 30.4959, 0.55", "143.132, 0.23903, 30.4362, 0.55", "148.857, -2.29244, 30.7778, 0.55", "154.853, -4.12191, 30.8149, 0.55", "160.836, -5.77569, 31.6866, 0.55", "166.387, -8.49098, 32.7389, 0.55", "172.14, -10.2063, 34.5471, 0.55", "177.68, -11.106, 37.338, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.2334, -22.7407, 4.73306, 1.38", "-0.609748, -26.1388, 2.54092, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.2334, -22.7407, 4.73306, 0.55", "-3.55408, -24.1107, 5.28854, 0.55", "-5.04683, -25.8944, 5.9071, 0.55", "-6.17625, -27.0559, 6.39697, 0.55", "-7.18554, -28.0207, 6.67516, 0.55", "-9.45036, -29.9993, 7.10305, 0.55", "-11.0456, -31.3106, 7.36561, 0.55", "-12.4846, -32.4858, 7.55489, 0.55", "-16.1582, -35.3241, 8.04167, 0.55", "-20.5424, -38.5928, 8.65348, 0.55", "-23.951, -41.058, 9.07791, 0.55", "-26.1442, -42.683, 9.32362, 0.55", "-28.6698, -44.6464, 9.61299, 0.55", "-31.9045, -47.5121, 10.019, 0.55", "-33.8323, -49.5926, 10.2938, 0.55", "-36.1962, -52.6358, 10.8033, 0.55", "-38.1121, -55.5261, 11.2747, 0.55", "-40.1275, -59.1827, 11.7866, 0.55", "-42.1113, -63.5259, 12.3421, 0.55", "-43.2832, -66.891, 12.7076, 0.55", "-43.7138, -68.5841, 12.9467, 0.55", "-44.4148, -72.6004, 13.6152, 0.55", "-44.9692, -76.3702, 14.3052, 0.55", "-45.2346, -80.202, 15.1826, 0.55", "-45.36, -82.4016, 15.8055, 0.55", "-45.6102, -89.216, 17.9448, 0.55", "-45.6281, -89.7176, 18.1117, 0.55", "-45.6554, -92.7995, 19.1801, 0.55", "-45.8862, -98.2834, 21.3111, 0.55", "-46.0165, -100.112, 21.9278, 0.55", "-46.4809, -102.945, 22.4681, 0.55", "-46.7256, -103.993, 22.4338, 0.55", "-47.6781, -107.536, 21.6319, 0.55", "-48.3727, -109.83, 20.6079, 0.55", "-49.6877, -113.471, 18.2415, 0.55", "-51.2688, -117.937, 14.9493, 0.28", "-51.7043, -119.037, 13.9885, 0.55", "-52.4193, -120.702, 12.3915, 0.28", "-52.5346, -120.952, 12.1392, 0.55", "-53.1263, -122.325, 10.8722, 0.28", "-53.3131, -122.79, 10.5563, 0.55", "-54.1441, -125.221, 9.37779, 0.28", "-54.4524, -126.045, 8.99968, 0.55", "-55.3165, -128.427, 8.04635, 0.28", "-55.5842, -129.177, 7.74746, 0.55", "-56.5107, -131.766, 6.76461, 0.28", "-56.9336, -132.957, 6.3042, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.59522, -66.5276, 54.4633, 0.55", "-6.52436, -73.4982, 61.0096, 0.55", "-10.5011, -79.6856, 67.7863, 0.55", "-14.149, -86.5041, 74.1285, 0.55", "-17.9626, -93.3741, 80.3157, 0.55", "-20.636, -101.273, 85.8364, 0.55", "-23.246, -108.839, 91.8331, 0.55", "-24.5844, -117.873, 95.9118, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.59522, -66.5276, 54.4633, 0.55", "-2.25738, -73.6641, 61.5395, 0.55", "-0.4347, -81.8922, 67.1756, 0.55", "-0.230592, -90.3271, 72.7972, 0.55", "-0.576278, -99.3028, 77.4991, 0.55", "-0.516649, -108.205, 82.3505, 0.55", "-0.403579, -116.735, 87.8297, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-35.044, 35.706, -17.7178, 0.83", "-34.7673, 37.039, -19.9221, 0.83", "-34.1632, 40.3304, -24.9028, 0.55", "-33.8794, 41.7783, -26.9016, 0.83", "-33.5503, 43.3517, -28.9091, 0.55", "-33.1733, 45.0238, -30.6934, 0.55", "-32.9582, 45.8874, -31.4627, 0.28", "-32.8341, 46.4954, -31.8016, 0.55", "-32.2867, 48.607, -32.4738, 0.28", "-32.0224, 49.5168, -32.7175, 0.55", "-31.1247, 52.7085, -33.4266, 0.28", "-30.4678, 55.261, -33.8923, 0.55", "-29.6176, 59.29, -34.4686, 0.28", "-28.9849, 62.8566, -34.8903, 0.28", "-28.7403, 64.8714, -35.0721, 0.55", "-28.5951, 67.2745, -35.2666, 0.28", "-28.5974, 68.4311, -35.3335, 0.55", "-28.765, 71.1431, -35.5897, 0.28", "-29.0074, 72.9445, -35.8357, 0.28", "-29.2901, 74.7073, -36.1246, 0.28", "-29.405, 75.635, -36.2857, 0.55", "-29.6848, 79.3545, -37.0509, 0.28", "-29.8829, 83.7331, -38.0572, 0.55", "-29.93, 85.2424, -38.4137, 0.55", "-29.9967, 86.7636, -38.7353, 0.55", "-30.3162, 90.0001, -39.4472, 0.55", "-30.6685, 92.1274, -39.941, 0.28", "-30.8959, 92.9382, -40.1258, 0.55", "-31.6574, 95.154, -40.5595, 0.28", "-32.5756, 97.5033, -41.0989, 0.55", "-34.223, 100.881, -41.9599, 0.28", "-35.067, 102.294, -42.343, 0.28", "-36.516, 104.242, -43.0329, 0.55", "-38.1748, 106.262, -43.8384, 0.28", "-38.4848, 106.58, -43.974, 0.55", "-39.6207, 107.596, -44.4276, 0.28", "-43.5631, 110.868, -45.8635, 0.55", "-49.1532, 114.878, -47.9675, 0.28", "-50.2057, 115.541, -48.4046, 0.55", "-53.1193, 117.242, -49.6299, 0.28", "-54.3504, 117.933, -50.1734, 0.28", "-55.4326, 118.497, -50.6903, 0.55", "-58.6913, 119.739, -52.3618, 0.28", "-61.0105, 120.411, -53.4095, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-35.044, 35.706, -17.7178, 0.55", "-35.1759, 37.6807, -18.1958, 0.55", "-35.2735, 38.8618, -18.3663, 0.28", "-35.4914, 39.7443, -18.2698, 0.55", "-35.9919, 41.7711, -18.0481, 0.28", "-36.3434, 43.1946, -17.8924, 0.55", "-36.9914, 45.819, -17.6053, 0.28", "-37.4524, 47.264, -17.208, 0.55", "-39.3945, 50.9133, -15.0553, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-112.23, -37.6195, -31.0511, 0.55", "-118.741, -46.4858, -35.4211, 0.55", "-123.326, -56.3429, -40.1013, 0.55", "-126.447, -65.5188, -46.8952, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-112.23, -37.6195, -31.0511, 0.55", "-117.013, -43.4773, -35.5883, 0.55", "-120.745, -49.4663, -40.8775, 0.55", "-124.102, -55.5964, -46.2555, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-121.897, 14.9805, 31.1298, 0.55", "-129.709, 16.0264, 35.6725, 0.55", "-138.007, 17.752, 38.9762, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-121.897, 14.9805, 31.1298, 0.55", "-133.75, 13.7115, 35.1235, 0.55", "-145.818, 14.4373, 38.5692, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "79.2712, -59.2078, -86.6271, 0.28", "86.6037, -63.5625, -97.7689, 0.28", "87.32, -64.0497, -98.7536, 0.55", "88.5292, -64.8724, -100.417, 0.28", "89.5474, -65.565, -101.816, 0.28", "90.8953, -66.4819, -103.669, 0.55", "92.6723, -67.6908, -106.112, 0.55", "94.8868, -69.7006, -107.258, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "79.2712, -59.2078, -86.6271, 0.55", "79.9421, -60.3151, -88.103, 0.55", "80.1387, -60.7846, -88.7768, 0.28", "80.4289, -61.5706, -89.9604, 0.55", "81.0681, -63.3021, -92.5677, 0.28", "81.5111, -64.502, -94.3746, 0.55", "82.2616, -66.5351, -97.436, 0.28", "83.1447, -68.939, -101.434, 0.28", "83.4965, -70.0211, -103.31, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "128.137, -21.0385, -24.4824, 0.28", "130.659, -25.6209, -25.0512, 0.28", "133.79, -31.8321, -25.3625, 0.28", "135.751, -35.9119, -25.4247, 0.55", "136.959, -38.2149, -25.3596, 0.28", "137.598, -39.4577, -25.3147, 0.28", "140.773, -45.5643, -25.173, 0.55", "141.504, -46.9837, -24.9899, 0.28", "143.173, -50.7787, -24.3094, 0.55", "144.593, -54.0321, -23.8292, 0.28", "145.861, -56.6727, -23.477, 0.55", "147.347, -59.7656, -23.2182, 0.55", "149.737, -64.482, -23.3223, 0.55", "150.311, -65.624, -23.3846, 0.55", "152.347, -69.8608, -23.6626, 0.28", "153.124, -71.5708, -23.8184, 0.55", "154.239, -73.7647, -24.0206, 0.28", "155.815, -76.8299, -24.4347, 0.55", "158.491, -81.4368, -25.7162, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "128.137, -21.0385, -24.4824, 0.55", "124.814, -20.3962, -24.5034, 0.55", "122.115, -19.8746, -24.5206, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.609748, -26.1388, 2.54092, 0.83", "-0.583677, -26.4075, 2.44562, 0.83", "-0.0212782, -28.8427, 1.45086, 0.83", "0.374521, -30.9632, 0.487456, 0.55", "0.690284, -32.6549, -0.281131, 0.55", "1.36145, -36.2508, -1.91479, 0.83", "2.17553, -40.6123, -3.89632, 0.55", "2.67128, -42.9067, -4.94588, 0.83", "3.74291, -46.6045, -6.6963, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.609748, -26.1388, 2.54092, 0.55", "-2.55236, -26.6524, 1.22602, 0.55", "-4.6375, -27.2036, -0.185358, 0.55", "-7.09904, -27.8543, -1.85151, 0.55", "-10.0882, -28.6445, -3.87475, 0.55", "-11.7844, -29.0929, -5.02287, 0.55", "-12.1251, -29.183, -5.25351, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-0.403579, -116.735, 87.8297, 0.55", "0.503696, -125.017, 93.7944, 0.55", "2.71684, -133.792, 98.6017, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.403579, -116.735, 87.8297, 0.55", "-0.397535, -125.802, 93.1208, 0.55", "-0.807933, -134.637, 98.7766, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-39.3945, 50.9133, -15.0553, 0.28", "-40.3476, 53.029, -13.5136, 0.28", "-40.691, 53.8437, -12.8508, 0.55", "-41.6565, 56.2089, -10.8926, 0.28", "-42.1569, 57.3643, -10.0223, 0.55", "-43.5504, 60.4781, -7.75757, 0.28", "-44.9666, 63.6428, -5.45573, 0.55", "-47.3271, 68.6613, -1.56233, 0.28", "-47.8286, 69.7374, -0.733858, 0.55", "-48.9319, 72.2162, 0.991918, 0.28", "-49.3551, 73.2332, 1.66016, 0.55", "-54.958, 80.5482, 7.99101, 0.55", "-61.6351, 88.6835, 11.7612, 0.55", "-66.9031, 97.2259, 16.6863, 0.55", "-70.6536, 106.88, 20.8954, 0.55", "-75.707, 116.118, 24.6511, 0.55", "-81.6387, 123.992, 29.9232, 0.55", "-86.6638, 131.235, 36.7986, 0.55", "-90.5264, 137.539, 45.1845, 0.55", "-94.41, 144.403, 53.1083, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-39.3945, 50.9133, -15.0553, 0.55", "-41.4733, 51.4629, -12.2897, 0.55", "-42.5584, 51.7005, -10.8273, 0.28", "-43.3658, 51.8772, -9.73911, 0.55", "-44.0388, 52.0245, -8.83212, 0.28", "-44.5102, 52.1277, -8.19684, 0.55", "-45.81, 52.4123, -6.44507, 0.28", "-46.7644, 52.4391, -5.3491, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-126.447, -65.5188, -46.8952, 0.55", "-131.548, -75.7207, -47.9591, 0.55", "-136.734, -85.9324, -47.7261, 0.55", "-140.643, -96.5965, -49.2192, 0.55", "-145.98, -106.727, -49.578, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-126.447, -65.5188, -46.8952, 0.55", "-129.955, -73.123, -54.6939, 0.55", "-132.425, -79.6902, -63.7341, 0.55", "-136.316, -87.0322, -71.6026, 0.55", "-142.28, -92.26, -79.8517, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-124.102, -55.5964, -46.2555, 0.55", "-127.767, -60.6887, -54.8747, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-124.102, -55.5964, -46.2555, 0.55", "-128.872, -66.1315, -47.4979, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "94.8868, -69.7006, -107.258, 0.28", "98.0941, -71.3213, -108.832, 0.28", "99.584, -72.074, -109.564, 0.55", "102.426, -73.5096, -110.958, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "94.8868, -69.7006, -107.258, 0.55", "94.4725, -71.1622, -108.708, 0.55", "93.644, -74.0858, -111.607, 0.28", "93.3741, -75.0381, -112.552, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "83.4965, -70.0211, -103.31, 0.28", "84.4819, -72.8199, -106.889, 0.28", "84.9698, -74.2058, -108.661, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "83.4965, -70.0211, -103.31, 0.55", "82.0928, -70.5948, -102.705, 0.55", "78.1782, -72.1944, -101.016, 0.28", "77.2483, -72.5744, -100.615, 0.55", "74.7045, -73.6139, -99.5174, 0.28", "73.0647, -74.284, -98.8101, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "3.74291, -46.6045, -6.6963, 0.83", "3.69461, -46.9075, -6.74477, 0.83", "3.18013, -50.8886, -7.33481, 0.83", "2.72603, -53.8569, -7.461, 0.83", "2.33184, -56.7247, -7.22307, 0.83", "1.89588, -60.5505, -6.59692, 0.83", "1.40945, -64.9578, -5.67079, 0.83", "1.05212, -69.9049, -4.45426, 0.83", "0.851471, -74.7306, -3.10545, 0.83", "0.228224, -80.5939, -1.29867, 0.83", "-0.270563, -83.2548, -0.486687, 0.83", "-0.736072, -85.2433, 0.0316834, 0.83", "-1.74582, -89.0404, 1.01841, 0.83", "-2.71586, -92.4345, 1.70077, 0.83", "-5.02924, -99.6494, 2.25392, 0.83", "-6.60939, -103.553, 2.12038, 0.83", "-8.2481, -107.126, 1.79019, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.74291, -46.6045, -6.6963, 0.55", "2.94586, -48.3199, -5.99308, 0.55", "2.42283, -49.5695, -5.39646, 0.55", "2.16398, -50.3775, -4.96832, 0.55", "1.89423, -51.6593, -4.24781, 0.55", "1.52716, -54.2182, -2.745, 0.55", "1.38994, -56.1681, -1.43578, 0.55", "1.39967, -57.7431, -0.262866, 0.55", "1.46082, -59.3365, 1.03274, 0.55", "1.55218, -60.6614, 2.16613, 0.28", "1.72694, -61.7529, 3.22012, 0.55", "2.2067, -63.7522, 5.37452, 0.55", "2.54463, -64.9779, 6.83814, 0.55", "2.72373, -65.6631, 7.65837, 0.55", "2.87603, -66.4629, 8.62341, 0.83", "3.20033, -68.8206, 11.3828, 0.28", "3.2931, -69.5996, 12.2796, 0.55", "3.46013, -71.0086, 13.8331, 0.28", "3.5344, -71.4451, 14.3353, 0.55", "3.73626, -72.4767, 15.4591, 0.28", "3.82354, -73.0609, 16.0636, 0.55", "3.66058, -74.9107, 17.7359, 0.55", "5.57109, -80.209, 22.8153, 0.55", "7.98476, -85.3343, 27.8581, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-12.1251, -29.183, -5.25351, 0.55", "-14.16, -29.8479, -7.51868, 0.55", "-14.7535, -29.9907, -8.16274, 0.55", "-16.2508, -30.3431, -9.72107, 0.55", "-19.5236, -30.9972, -12.999, 0.28", "-20.0119, -31.0796, -13.4565, 0.55", "-22.0694, -31.4715, -15.278, 0.55", "-24.9162, -31.9797, -17.4989, 0.55", "-26.0014, -32.1378, -18.3257, 0.28", "-26.9449, -32.2074, -19.0025, 0.28", "-28.5702, -32.2718, -19.946, 0.55", "-30.5291, -32.2682, -21.1784, 0.28", "-32.3057, -32.1184, -22.3718, 0.55", "-33.6593, -31.8872, -23.2789, 0.55", "-34.5736, -31.6527, -23.9414, 0.55", "-37.2289, -30.8483, -25.9841, 0.55", "-39.99, -29.7989, -28.0976, 0.55", "-41.1203, -29.2961, -28.9469, 0.28", "-42.1961, -28.8387, -29.7734, 0.55", "-44.4109, -28.0572, -31.4117, 0.28", "-45.1614, -27.8157, -31.9529, 0.83", "-46.5684, -27.3371, -32.8648, 0.28", "-47.6091, -27.0565, -33.3755, 0.55", "-49.1335, -26.6989, -34.0807, 0.28", "-49.7406, -26.5466, -34.342, 0.55", "-50.8745, -26.2793, -34.7629, 0.55", "-52.5581, -25.6998, -35.3493, 0.55", "-53.6481, -25.247, -35.6756, 0.28", "-54.5086, -24.7651, -35.877, 0.55", "-55.4963, -24.0696, -36.1316, 0.28", "-55.6558, -23.9421, -36.1808, 0.55", "-57.108, -22.7563, -36.9205, 0.28", "-58.1517, -21.8846, -37.5854, 0.55", "-59.4981, -20.6552, -38.6874, 0.83", "-60.5942, -19.6277, -39.7423, 0.28", "-60.8762, -19.3678, -40.0475, 0.55", "-63.0388, -17.4248, -42.5269, 0.28", "-63.4164, -17.0963, -43.0043, 0.55", "-64.5073, -16.048, -44.505, 0.28", "-64.789, -15.7785, -44.8948, 0.55", "-65.5138, -15.0722, -45.8355, 0.28", "-66.0284, -14.561, -46.463, 0.55", "-67.1914, -13.3985, -47.6534, 0.28", "-67.8968, -12.7624, -48.3225, 0.55", "-69.4327, -11.5038, -49.6448, 0.28", "-69.8971, -11.1564, -50.0275, 0.55", "-70.6414, -10.6713, -50.591, 0.28", "-71.2743, -10.2588, -51.0337, 0.55", "-72.5984, -9.41295, -51.863, 0.28", "-73.0002, -9.16647, -52.0973, 0.55", "-75.9797, -7.25792, -53.6906, 0.28", "-77.0115, -6.4998, -54.1561, 0.55", "-78.8356, -5.0391, -54.8633, 0.28", "-79.6507, -4.34244, -55.1569, 0.55", "-81.5263, -2.74886, -55.7058, 0.28", "-82.2233, -2.1946, -55.8698, 0.55", "-84.8028, -0.422687, -56.2859, 0.28", "-85.911, 0.173229, -56.4342, 0.55", "-87.5536, 0.756215, -56.5997, 0.55", "-88.5787, 1.05289, -56.67, 0.55", "-90.6796, 1.61814, -56.6439, 0.28", "-92.7486, 2.16468, -56.4834, 0.28", "-94.4693, 2.63025, -56.2991, 0.55", "-96.5217, 3.39698, -55.8559, 0.28", "-97.4987, 3.91505, -55.506, 0.55", "-99.7097, 5.56021, -54.4582, 0.28", "-100.752, 6.67642, -53.631, 0.55", "-101.366, 7.53708, -52.9231, 0.28", "-102.012, 8.51823, -51.896, 0.55", "-102.778, 9.79547, -50.4679, 0.28", "-103.078, 10.2542, -49.9295, 0.55", "-104.764, 12.3857, -47.4061, 0.28", "-105.345, 13.0712, -46.5605, 0.55", "-106.732, 14.626, -44.4922, 0.28", "-107.49, 15.4576, -43.3677, 0.55", "-108.114, 16.1397, -42.445, 0.55", "-108.871, 16.9456, -41.3695, 0.28", "-109.293, 17.356, -40.9009, 0.55", "-110.727, 18.7899, -39.4506, 0.28", "-111.443, 19.6546, -38.6822, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.1251, -29.183, -5.25351, 0.55", "-11.8794, -29.4083, -6.04994, 0.55", "-11.5883, -29.5483, -6.85058, 0.55", "-11.1596, -29.6606, -7.83331, 0.55", "-10.7623, -29.6919, -8.62285, 0.55", "-7.67523, -29.4023, -13.632, 0.55", "-6.95776, -29.2044, -14.7821, 0.55", "-5.89423, -28.7848, -16.5145, 0.55", "-5.13746, -28.4464, -17.749, 0.55", "-4.36571, -28.05, -18.9375, 0.28", "-3.09178, -27.345, -20.7091, 0.55", "-1.07171, -26.2252, -23.2422, 0.28", "-0.944435, -26.1703, -23.5051, 0.55", "-0.586507, -26.0801, -25.4016, 0.28", "-0.570162, -26.0596, -26.7113, 0.55", "-0.701577, -26.1094, -28.1248, 0.55", "-0.997977, -26.3175, -30.6535, 0.55", "-1.57309, -26.7628, -35.6145, 0.55", "-1.9078, -27.1073, -38.9484, 0.55", "-1.995, -27.2422, -40.1002, 0.55", "-2.379, -28.1033, -47.6809, 0.55", "-2.39145, -28.3233, -49.7368, 0.55", "-2.31261, -28.4626, -50.8886, 0.55", "-1.90939, -28.8928, -53.5471, 0.55", "-0.631482, -30.3042, -59.8348, 0.55", "-0.227655, -30.7645, -61.5056, 0.28", "0.0668609, -31.0801, -62.4327, 0.55", "0.518818, -31.6094, -63.7926, 0.28", "0.736205, -31.8909, -64.3297, 0.55", "1.7232, -33.0331, -65.6635, 0.28", "2.71146, -34.3478, -65.9482, 0.55", "3.29275, -35.2488, -66.0559, 0.28", "3.81763, -36.2058, -66.0515, 0.55", "4.25393, -37.2122, -65.9725, 0.28", "4.42485, -37.7203, -65.9408, 0.55", "4.80342, -39.0309, -65.7979, 0.28", "4.87933, -39.4193, -65.8084, 0.55", "5.28319, -41.6498, -65.9841, 0.28", "5.47292, -42.6933, -66.1947, 0.55", "5.90711, -44.9487, -66.8904, 0.28", "6.08197, -45.7898, -67.2374, 0.55", "6.72382, -48.5792, -68.5484, 0.28", "6.87869, -49.2593, -68.8939, 0.55", "7.30256, -51.4053, -70.0479, 0.28", "7.38271, -51.9012, -70.2786, 0.55", "7.55746, -53.203, -70.8703, 0.28", "7.65207, -53.9627, -71.2822, 0.55", "7.75761, -54.716, -71.7455, 0.55", "7.97097, -56.2187, -72.6596, 0.28", "8.16102, -57.1687, -73.3377, 0.55", "8.9486, -59.6471, -75.5928, 0.28", "9.28854, -60.4832, -76.5204, 0.55", "9.54419, -61.0253, -77.1554, 0.28", "9.82567, -61.534, -77.7958, 0.55", "10.7592, -62.9994, -79.7523, 0.28", "11.4816, -64.13, -81.1975, 0.55", "12.759, -66.2239, -83.4778, 0.28", "13.1653, -66.8777, -84.193, 0.55", "14.0148, -68.0948, -85.4539, 0.28", "14.3166, -68.4963, -85.8384, 0.55", "14.8666, -69.1417, -86.3313, 0.28", "15.3796, -69.6928, -86.7118, 0.55", "16.8648, -71.0938, -87.5677, 0.28", "18.6043, -72.6165, -88.5241, 0.28", "19.5234, -73.3392, -88.9386, 0.28", "20.4379, -74.0356, -89.4241, 0.55", "21.7919, -74.9819, -90.1472, 0.28", "22.4021, -75.3922, -90.4551, 0.83", "23.9744, -76.4612, -91.1706, 0.28", "24.6375, -76.9428, -91.522, 0.55", "27.4647, -79.1885, -93.2098, 0.28", "28.8258, -80.3325, -94.1861, 0.28", "29.7866, -81.1646, -94.9753, 0.55", "30.312, -81.6647, -95.5127, 0.55", "31.6404, -83.0173, -97.0822, 0.28", "32.8302, -84.3615, -98.6112, 0.55", "33.8991, -85.6359, -99.9985, 0.28", "34.8279, -86.8091, -101.326, 0.55", "35.6031, -87.7645, -102.418, 0.28", "36.2807, -88.4758, -103.268, 0.55", "38.0012, -90.0577, -105.226, 0.28", "38.8949, -90.8581, -106.17, 0.55", "40.2638, -92.0656, -107.523, 0.28", "41.4108, -93.0108, -108.601, 0.55", "44.1371, -95.0695, -111.145, 0.28", "45.2309, -95.8264, -112.283, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "2.71684, -133.792, 98.6017, 0.55", "3.40434, -139.852, 101.519, 0.55", "4.70957, -146.343, 102.895, 0.55", "5.64324, -152.631, 105.2, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.71684, -133.792, 98.6017, 0.55", "4.25385, -140.582, 104.201, 0.55", "4.15807, -146.681, 110.73, 0.55", "3.50819, -151.366, 118.311, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-0.807933, -134.637, 98.7766, 0.55", "-0.128301, -142.165, 102.972, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.807933, -134.637, 98.7766, 0.55", "-1.78748, -142.981, 104.251, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-8.2481, -107.126, 1.79019, 0.83", "-7.84665, -111.334, 1.51594, 0.83", "-7.21418, -114.923, 1.3109, 0.83", "-6.58549, -118.49, 1.10709, 0.83", "-5.98844, -121.878, 0.913539, 0.83", "-5.06835, -127.098, 0.615256, 0.83", "-4.15491, -132.281, 0.31913, 0.83", "-3.05903, -135.782, 0.166474, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-8.2481, -107.126, 1.79019, 0.55", "-7.49722, -108.657, 1.42881, 0.55", "-6.98827, -109.84, 0.971611, 0.55", "-6.67437, -110.705, 0.570653, 0.55", "-6.48315, -111.695, 0.0375133, 0.83", "-6.37837, -112.803, -0.667455, 0.55", "-6.27587, -113.886, -1.35701, 0.83", "-6.26238, -115.047, -2.18287, 0.55", "-6.27731, -115.717, -2.72029, 0.83", "-6.46891, -117.863, -4.58696, 0.55", "-6.78747, -119.524, -6.10398, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.98476, -85.3343, 27.8581, 0.55", "8.80403, -93.3344, 35.0062, 0.55", "9.2739, -100.078, 43.3772, 0.55", "9.93368, -105.759, 52.4909, 0.55", "10.5389, -110.075, 62.328, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "7.98476, -85.3343, 27.8581, 0.55", "8.46053, -92.6534, 34.5679, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-3.05903, -135.782, 0.166474, 0.55", "-2.77211, -138.21, 0.442111, 0.55", "-2.30157, -141.325, 0.753904, 0.55", "-1.87102, -144.264, 1.04032, 0.55", "-1.60291, -146.349, 1.25112, 0.55", "-1.19238, -150.059, 1.63858, 0.55", "-0.203395, -160.479, 2.47213, 0.55", "0.035364, -164.011, 2.61334, 0.55", "0.0979883, -166.491, 2.64969, 0.55", "-0.0206555, -169.305, 2.57084, 0.55", "-0.299435, -171.457, 2.45733, 0.55", "-1.07246, -176.483, 1.96467, 0.55", "-1.72175, -180.285, 1.70872, 0.55", "-2.05241, -182.795, 1.51259, 0.55", "-2.6206, -189.335, 1.17277, 0.55", "-2.8405, -193.748, 1.05542, 0.55", "-2.82729, -199.472, 1.02024, 0.55", "-2.3337, -206.025, 1.12304, 0.55", "-1.6836, -210.445, 1.13447, 0.55", "-1.21245, -213.071, 1.11577, 0.55", "-0.802752, -215.486, 1.1347, 0.55", "-0.387376, -218.536, 1.05216, 0.55", "0.144418, -225.832, 0.71754, 0.55", "0.298305, -228.655, 0.458818, 0.55", "0.419469, -231.789, 0.227779, 0.55", "0.563755, -236.489, -0.0953989, 0.55", "0.634541, -240.088, -0.179861, 0.55", "0.579349, -243.484, -0.103116, 0.55", "0.466181, -246.707, 0.0994724, 0.55", "0.373682, -249.851, 0.365597, 0.55", "0.293662, -252.089, 0.532989, 0.55", "0.0592349, -255.738, 0.730644, 0.55", "-0.548441, -260.081, 0.875593, 0.55", "-0.963918, -262.18, 0.824998, 0.55", "-1.4474, -264.011, 0.699087, 0.55", "-2.47853, -267.461, 0.221506, 0.55", "-3.19811, -269.639, -0.0884489, 0.55", "-3.97771, -272.338, -0.452104, 0.55", "-4.45137, -274.239, -0.588952, 0.55", "-5.54425, -279.193, -0.774421, 0.55", "-6.15917, -282.92, -0.708515, 0.55", "-6.72267, -288.727, -0.304721, 0.55", "-6.73157, -292.518, 0.0409933, 0.55", "-6.63849, -296.508, 0.489005, 0.28", "-6.55927, -298.114, 0.733974, 0.28", "-6.05999, -302.046, 1.50187, 0.28", "-5.35866, -305.703, 2.36786, 0.28", "-3.80664, -310.63, 3.33782, 0.28", "-2.14882, -321.583, 3.05464, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-3.05903, -135.782, 0.166474, 0.55", "-1.79336, -136.45, -0.118712, 0.55", "0.847245, -138.056, -0.520409, 0.55", "3.14177, -139.588, -0.774195, 0.28", "5.61986, -141.306, -0.975917, 0.55", "7.18311, -142.394, -0.907339, 0.28", "9.97204, -144.344, -0.560656, 0.55", "11.2196, -145.333, -0.116994, 0.28", "11.6951, -145.693, 0.113649, 0.28", "12.5338, -146.228, 0.518827, 0.55", "15.7849, -148.06, 1.87121, 0.28", "17.1643, -148.791, 2.39641, 0.55", "21.2371, -150.933, 3.55727, 0.28", "23.4245, -152.018, 4.04055, 0.28", "26.1071, -153.397, 4.49593, 0.55", "30.0006, -155.507, 4.85283, 0.28", "30.5127, -155.787, 4.84785, 0.55", "32.9847, -157.155, 4.66002, 0.28", "33.2009, -157.28, 4.61926, 0.55", "35.0864, -158.66, 4.32429, 0.28", "35.991, -159.391, 4.2409, 0.55", "43.5294, -164.932, 3.60984, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "10.5389, -110.075, 62.328, 0.55", "13.8618, -115.352, 73.4505, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "10.5389, -110.075, 62.328, 0.55", "9.47168, -117.075, 70.6309, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "axon_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "axon_1", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_BP_31899e6d75_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.75525, 7.94854, 2.77096, 0.83 ) }
    dend_43 { pt3dadd( -5.13479, 9.79288, 3.12983, 1.11 ) }
    dend_43 { pt3dadd( -6.53779, 10.8796, 3.31651, 0.83 ) }
    dend_43 { pt3dadd( -7.90085, 11.9262, 3.48377, 0.83 ) }
    dend_43 { pt3dadd( -8.70788, 12.523, 3.57542, 1.11 ) }
    dend_43 { pt3dadd( -11.2352, 14.388, 3.86917, 1.11 ) }
    dend_43 { pt3dadd( -15.7554, 17.5808, 4.38844, 0.83 ) }
    dend_43 { pt3dadd( -17.3839, 18.6872, 4.55991, 0.83 ) }
    dend_43 { pt3dadd( -18.6735, 19.5373, 4.66642, 0.83 ) }
    dend_43 { pt3dadd( -19.9311, 20.3799, 4.75862, 0.83 ) }
    dend_43 { pt3dadd( -20.9547, 21.0743, 4.80836, 0.55 ) }
    dend_43 { pt3dadd( -21.7242, 21.5445, 4.85884, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.11755, 6.0332, -6.08254, 0.55 ) }
    dend_28 { pt3dadd( 6.09111, 6.46012, -6.52327, 0.55 ) }
    dend_28 { pt3dadd( 7.2363, 6.56789, -7.10645, 0.83 ) }
    dend_28 { pt3dadd( 9.04878, 6.68258, -8.18976, 0.55 ) }
    dend_28 { pt3dadd( 9.9237, 6.73794, -8.71269, 1.38 ) }
    dend_28 { pt3dadd( 12.0749, 6.87407, -9.99844, 0.55 ) }
    dend_28 { pt3dadd( 12.9911, 6.82797, -10.6119, 0.83 ) }
    dend_28 { pt3dadd( 17.7306, 5.9826, -14.0589, 0.55 ) }
    dend_28 { pt3dadd( 18.1891, 5.86892, -14.4381, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.674677, -9.65377, 2.93379, 1.11 ) }
    dend_1 { pt3dadd( -0.705063, -12.3346, 3.89487, 1.11 ) }
    dend_1 { pt3dadd( -0.717436, -13.4264, 4.28628, 0.83 ) }
    dend_1 { pt3dadd( -0.733876, -14.8769, 4.80629, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.998906, 10.6434, -1.42824, 1.11 ) }
    dend_0 { pt3dadd( 1.19124, 13.3271, -1.41412, 1.11 ) }
    dend_0 { pt3dadd( 1.50935, 17.7053, -1.23053, 1.38 ) }
    dend_0 { pt3dadd( 1.53171, 17.949, -1.21636, 1.38 ) }
    dend_0 { pt3dadd( 1.99251, 20.9588, -1.02874, 0.83 ) }
    dend_0 { pt3dadd( 2.62566, 24.1367, -0.673221, 0.83 ) }
    dend_0 { pt3dadd( 3.69043, 27.7136, 0.132054, 0.83 ) }
    dend_0 { pt3dadd( 4.2795, 29.0644, 0.588303, 0.83 ) }
    dend_0 { pt3dadd( 4.84833, 30.0382, 1.00494, 1.11 ) }
    dend_0 { pt3dadd( 6.48296, 32.4026, 2.06232, 0.55 ) }
    dend_0 { pt3dadd( 8.38079, 34.8645, 3.32978, 0.83 ) }
    dend_0 { pt3dadd( 10.8223, 37.3818, 4.7367, 0.55 ) }
    dend_0 { pt3dadd( 12.0516, 38.4208, 5.36074, 0.83 ) }
    dend_0 { pt3dadd( 13.7815, 39.8258, 6.35393, 0.55 ) }
    dend_0 { pt3dadd( 15.9399, 41.6139, 7.71851, 0.55 ) }
    dend_0 { pt3dadd( 18.9818, 44.311, 9.83156, 0.55 ) }
    dend_0 { pt3dadd( 22.3376, 47.3976, 12.1656, 0.55 ) }
    dend_0 { pt3dadd( 24.4883, 49.401, 13.9475, 0.55 ) }
    dend_0 { pt3dadd( 27.1651, 51.9348, 16.502, 0.55 ) }
    dend_0 { pt3dadd( 27.7265, 52.442, 17.0863, 0.83 ) }
    dend_0 { pt3dadd( 29.221, 53.7819, 18.7443, 0.55 ) }
    dend_0 { pt3dadd( 30.4659, 54.824, 20.0378, 0.83 ) }
    dend_0 { pt3dadd( 33.3548, 57.6876, 23.1141, 0.55 ) }
    dend_0 { pt3dadd( 34.4123, 58.7338, 23.9901, 0.83 ) }
    dend_0 { pt3dadd( 35.3701, 59.4998, 24.5577, 0.55 ) }
    dend_0 { pt3dadd( 36.3019, 60.1561, 24.9717, 0.83 ) }
    dend_0 { pt3dadd( 38.34, 61.3674, 25.6831, 0.83 ) }
    dend_0 { pt3dadd( 41.0124, 63.0201, 26.3955, 0.83 ) }
    dend_0 { pt3dadd( 42.6361, 64.1174, 26.6627, 0.55 ) }
    dend_0 { pt3dadd( 43.8781, 65.0718, 26.8733, 0.55 ) }
    dend_0 { pt3dadd( 47.128, 67.5366, 27.3783, 0.83 ) }
    dend_0 { pt3dadd( 49.2179, 69.1172, 27.6225, 0.55 ) }
    dend_0 { pt3dadd( 52.3746, 71.4301, 27.868, 0.55 ) }
    dend_0 { pt3dadd( 55.2495, 73.3626, 27.9796, 0.55 ) }
    dend_0 { pt3dadd( 57.8109, 74.996, 28.0116, 0.55 ) }
    dend_0 { pt3dadd( 61.0274, 76.9036, 27.9072, 0.55 ) }
    dend_0 { pt3dadd( 62.9796, 77.8272, 27.7798, 0.55 ) }
    dend_0 { pt3dadd( 64.2906, 78.3404, 27.5347, 0.55 ) }
    dend_0 { pt3dadd( 66.0067, 78.7025, 27.0607, 0.55 ) }
    dend_0 { pt3dadd( 68.532, 78.819, 26.1389, 0.55 ) }
    dend_0 { pt3dadd( 70.0937, 78.6853, 25.5011, 0.55 ) }
    dend_0 { pt3dadd( 72.3929, 78.4245, 24.7349, 0.55 ) }
    dend_0 { pt3dadd( 76.8223, 78.0697, 23.6791, 0.55 ) }
    dend_0 { pt3dadd( 80.3309, 77.9542, 23.103, 0.55 ) }
    dend_0 { pt3dadd( 84.08, 78.0101, 22.7169, 0.55 ) }
    dend_0 { pt3dadd( 86.5076, 78.1275, 22.6594, 0.55 ) }
    dend_0 { pt3dadd( 92.8771, 78.9989, 22.9231, 0.55 ) }
    dend_0 { pt3dadd( 96.6851, 79.799, 23.3585, 0.55 ) }
    dend_0 { pt3dadd( 99.575, 80.5803, 23.9453, 0.55 ) }
    dend_0 { pt3dadd( 101.347, 81.336, 24.3682, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 103.406, 82.4772, 24.8496, 0.55 ) }
    dend_0 { pt3dadd( 106.867, 84.7459, 25.3698, 0.55 ) }
    dend_0 { pt3dadd( 107.65, 85.2939, 25.3841, 0.55 ) }
    dend_0 { pt3dadd( 109.876, 86.7557, 25.2809, 0.55 ) }
    dend_0 { pt3dadd( 111.927, 88.3222, 25.1792, 0.83 ) }
    dend_0 { pt3dadd( 113.045, 89.1918, 25.1064, 0.55 ) }
    dend_0 { pt3dadd( 114.717, 90.6916, 24.9329, 0.83 ) }
    dend_0 { pt3dadd( 123.781, 98.6928, 26.2922, 0.83 ) }
    dend_0 { pt3dadd( 131.659, 107.946, 26.8872, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -21.7242, 21.5445, 4.85884, 0.55 ) }
    dend_55 { pt3dadd( -22.572, 22.1875, 4.31568, 0.55 ) }
    dend_55 { pt3dadd( -23.494, 22.8868, 3.72504, 0.55 ) }
    dend_55 { pt3dadd( -24.6066, 23.7307, 3.01227, 0.55 ) }
    dend_55 { pt3dadd( -25.5253, 24.4275, 2.42371, 0.83 ) }
    dend_55 { pt3dadd( -26.2951, 25.0114, 1.9305, 0.55 ) }
    dend_55 { pt3dadd( -27.7241, 26.0953, 1.01504, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -21.7242, 21.5445, 4.85884, 0.55 ) }
    dend_44 { pt3dadd( -23.6907, 22.0558, 4.35959, 0.55 ) }
    dend_44 { pt3dadd( -25.8207, 22.4954, 4.02692, 0.55 ) }
    dend_44 { pt3dadd( -28.2461, 22.9795, 3.70753, 0.55 ) }
    dend_44 { pt3dadd( -31.8142, 23.5857, 3.5572, 0.55 ) }
    dend_44 { pt3dadd( -34.837, 23.9704, 3.623, 0.55 ) }
    dend_44 { pt3dadd( -38.0306, 24.3029, 3.814, 0.55 ) }
    dend_44 { pt3dadd( -41.176, 24.3651, 4.28105, 0.55 ) }
    dend_44 { pt3dadd( -43.9305, 24.1237, 4.88491, 0.55 ) }
    dend_44 { pt3dadd( -47.4252, 23.537, 5.93787, 0.55 ) }
    dend_44 { pt3dadd( -48.9796, 23.145, 6.57024, 0.55 ) }
    dend_44 { pt3dadd( -50.6699, 22.6939, 7.31496, 0.55 ) }
    dend_44 { pt3dadd( -53.6347, 21.7175, 8.47253, 0.55 ) }
    dend_44 { pt3dadd( -55.1746, 21.2417, 8.86827, 0.55 ) }
    dend_44 { pt3dadd( -56.787, 20.6992, 9.26595, 0.55 ) }
    dend_44 { pt3dadd( -58.6737, 20.108, 9.56567, 0.55 ) }
    dend_44 { pt3dadd( -60.7144, 19.5148, 9.84655, 0.55 ) }
    dend_44 { pt3dadd( -63.6169, 18.672, 10.1871, 0.55 ) }
    dend_44 { pt3dadd( -67.4337, 17.8489, 10.3609, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 18.1891, 5.86892, -14.4381, 0.55 ) }
    dend_34 { pt3dadd( 22.9202, 6.95826, -15.4298, 0.55 ) }
    dend_34 { pt3dadd( 25.6354, 7.45867, -16.3955, 0.55 ) }
    dend_34 { pt3dadd( 28.3094, 7.8358, -17.3975, 0.55 ) }
    dend_34 { pt3dadd( 30.133, 8.02053, -18.0876, 0.55 ) }
    dend_34 { pt3dadd( 32.7959, 8.22694, -19.0809, 0.55 ) }
    dend_34 { pt3dadd( 38.313, 8.56241, -21.3235, 0.55 ) }
    dend_34 { pt3dadd( 44.5651, 8.93785, -24.2898, 0.55 ) }
    dend_34 { pt3dadd( 47.5856, 8.94712, -25.9552, 0.55 ) }
    dend_34 { pt3dadd( 49.2003, 8.92078, -26.9577, 0.55 ) }
    dend_34 { pt3dadd( 50.9703, 8.90659, -28.1289, 0.55 ) }
    dend_34 { pt3dadd( 54.1249, 8.79108, -30.2138, 0.55 ) }
    dend_34 { pt3dadd( 55.2669, 8.68419, -31.0153, 0.55 ) }
    dend_34 { pt3dadd( 60.1028, 8.38574, -34.7778, 0.55 ) }
    dend_34 { pt3dadd( 63.5253, 8.25147, -37.6939, 0.55 ) }
    dend_34 { pt3dadd( 65.4968, 8.21768, -39.4247, 0.55 ) }
    dend_34 { pt3dadd( 67.4623, 8.16622, -41.1508, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 18.1891, 5.86892, -14.4381, 0.83 ) }
    dend_29 { pt3dadd( 20.0977, 6.90143, -14.4005, 0.83 ) }
    dend_29 { pt3dadd( 21.1878, 7.49528, -14.4274, 0.55 ) }
    dend_29 { pt3dadd( 22.7925, 8.41641, -14.5963, 0.83 ) }
    dend_29 { pt3dadd( 23.8724, 9.06555, -14.739, 0.55 ) }
    dend_29 { pt3dadd( 25.3643, 9.99736, -14.9109, 0.83 ) }
    dend_29 { pt3dadd( 27.1612, 11.1457, -15.0502, 0.55 ) }
    dend_29 { pt3dadd( 28.0622, 11.6555, -15.0902, 0.55 ) }
    dend_29 { pt3dadd( 30.1223, 12.5421, -15.0662, 0.83 ) }
    dend_29 { pt3dadd( 31.9837, 13.1046, -14.8276, 0.55 ) }
    dend_29 { pt3dadd( 33.025, 13.3991, -14.5973, 0.83 ) }
    dend_29 { pt3dadd( 34.5915, 13.8593, -14.0871, 0.55 ) }
    dend_29 { pt3dadd( 36.8477, 14.5327, -13.0687, 0.55 ) }
    dend_29 { pt3dadd( 39.9741, 15.2955, -11.512, 0.55 ) }
    dend_29 { pt3dadd( 42.9522, 15.8991, -9.83555, 0.55 ) }
    dend_29 { pt3dadd( 45.3107, 16.3488, -8.46811, 0.55 ) }
    dend_29 { pt3dadd( 49.2002, 17.1059, -6.19203, 0.55 ) }
    dend_29 { pt3dadd( 52.0512, 17.734, -4.45778, 0.55 ) }
    dend_29 { pt3dadd( 53.7809, 18.2482, -3.33529, 0.55 ) }
    dend_29 { pt3dadd( 56.9839, 19.5096, -1.20907, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.733876, -14.8769, 4.80629, 0.83 ) }
    dend_11 { pt3dadd( -1.14696, -17.0432, 4.78612, 0.83 ) }
    dend_11 { pt3dadd( -1.54942, -19.1537, 4.76646, 0.83 ) }
    dend_11 { pt3dadd( -1.99876, -21.5102, 4.74452, 0.83 ) }
    dend_11 { pt3dadd( -2.2334, -22.7407, 4.73306, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.733876, -14.8769, 4.80629, 0.55 ) }
    dend_2 { pt3dadd( -0.071623, -16.4957, 5.76305, 0.55 ) }
    dend_2 { pt3dadd( 0.567335, -18.4667, 7.05463, 0.55 ) }
    dend_2 { pt3dadd( 1.04671, -21.0263, 8.92208, 0.55 ) }
    dend_2 { pt3dadd( 1.17085, -22.0171, 9.68758, 0.83 ) }
    dend_2 { pt3dadd( 1.31843, -24.5352, 11.9674, 0.55 ) }
    dend_2 { pt3dadd( 1.29544, -25.829, 13.1899, 0.55 ) }
    dend_2 { pt3dadd( 1.21938, -28.3431, 15.6827, 0.83 ) }
    dend_2 { pt3dadd( 1.08044, -30.2048, 17.6716, 0.55 ) }
    dend_2 { pt3dadd( 0.826723, -31.7311, 19.3158, 0.55 ) }
    dend_2 { pt3dadd( 0.27133, -34.6168, 22.3907, 0.55 ) }
    dend_2 { pt3dadd( -0.174359, -36.9165, 24.8142, 0.55 ) }
    dend_2 { pt3dadd( -0.489385, -38.763, 26.7753, 0.55 ) }
    dend_2 { pt3dadd( -0.729035, -40.7297, 28.7745, 0.28 ) }
    dend_2 { pt3dadd( -0.767029, -41.5529, 29.5624, 0.55 ) }
    dend_2 { pt3dadd( -0.815298, -43.0747, 30.9248, 0.28 ) }
    dend_2 { pt3dadd( -0.645613, -45.4659, 32.6246, 0.55 ) }
    dend_2 { pt3dadd( -1.86585, -53.3033, 39.0762, 0.55 ) }
    dend_2 { pt3dadd( -3.12247, -60.5386, 46.1901, 0.55 ) }
    dend_2 { pt3dadd( -3.59522, -66.5276, 54.4633, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -27.7241, 26.0953, 1.01504, 0.55 ) }
    dend_61 { pt3dadd( -30.9567, 26.3141, 2.43318, 0.55 ) }
    dend_61 { pt3dadd( -32.3303, 26.3183, 3.18364, 0.83 ) }
    dend_61 { pt3dadd( -33.9537, 26.2256, 4.25689, 0.55 ) }
    dend_61 { pt3dadd( -35.204, 26.143, 5.1845, 0.83 ) }
    dend_61 { pt3dadd( -38.4765, 26.0386, 7.59955, 0.55 ) }
    dend_61 { pt3dadd( -39.7159, 26.0175, 8.52521, 0.28 ) }
    dend_61 { pt3dadd( -41.7946, 25.9865, 10.235, 0.55 ) }
    dend_61 { pt3dadd( -44.5825, 25.9616, 12.5185, 0.55 ) }
    dend_61 { pt3dadd( -46.6925, 25.9529, 14.1614, 0.55 ) }
    dend_61 { pt3dadd( -49.5049, 25.9496, 16.2716, 0.28 ) }
    dend_61 { pt3dadd( -50.2293, 25.9626, 16.7374, 0.55 ) }
    dend_61 { pt3dadd( -51.7244, 26.012, 17.6494, 0.28 ) }
    dend_61 { pt3dadd( -52.7324, 26.0802, 18.1806, 0.55 ) }
    dend_61 { pt3dadd( -54.7776, 26.2237, 19.0922, 0.28 ) }
    dend_61 { pt3dadd( -55.9749, 26.2504, 19.5604, 0.55 ) }
    dend_61 { pt3dadd( -58.0912, 26.1467, 20.3875, 0.28 ) }
    dend_61 { pt3dadd( -59.5093, 26.0731, 20.8938, 0.55 ) }
    dend_61 { pt3dadd( -68.4388, 24.5671, 27.6282, 0.55 ) }
    dend_61 { pt3dadd( -76.7096, 21.9283, 34.8384, 0.55 ) }
    dend_61 { pt3dadd( -84.6999, 18.2363, 41.9011, 0.55 ) }
    dend_61 { pt3dadd( -92.6223, 13.3254, 48.2631, 0.55 ) }
    dend_61 { pt3dadd( -99.4073, 8.69706, 56.0026, 0.55 ) }
    dend_61 { pt3dadd( -106.972, 4.54832, 63.277, 0.55 ) }
    dend_61 { pt3dadd( -114.673, 2.16821, 71.1753, 0.55 ) }
    dend_61 { pt3dadd( -122.339, -1.07439, 78.7961, 0.55 ) }
    dend_61 { pt3dadd( -129.814, -3.62161, 86.8576, 0.55 ) }
    dend_61 { pt3dadd( -136.808, -6.38284, 95.2733, 0.55 ) }
    dend_61 { pt3dadd( -142.758, -10.4687, 103.948, 0.55 ) }
    dend_61 { pt3dadd( -148.813, -13.5466, 112.96, 0.55 ) }
    dend_61 { pt3dadd( -154.999, -17.6834, 121.444, 0.55 ) }
    dend_61 { pt3dadd( -159.938, -22.382, 130.438, 0.55 ) }
    dend_61 { pt3dadd( -163.076, -26.476, 140.475, 0.55 ) }
    dend_61 { pt3dadd( -166.113, -32.5167, 149.511, 0.55 ) }
    dend_61 { pt3dadd( -167.562, -38.8252, 158.755, 0.55 ) }
    dend_61 { pt3dadd( -169.615, -44.6745, 168.185, 0.55 ) }
    dend_61 { pt3dadd( -172.861, -49.7026, 177.753, 0.55 ) }
    dend_61 { pt3dadd( -178.363, -52.8919, 187.076, 0.55 ) }
    dend_61 { pt3dadd( -182.929, -57.3513, 196.383, 0.55 ) }
    dend_61 { pt3dadd( -185.462, -60.1429, 207.02, 0.55 ) }
    dend_61 { pt3dadd( -189.732, -62.0193, 217.296, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -27.7241, 26.0953, 1.01504, 0.55 ) }
    dend_56 { pt3dadd( -29.2713, 27.1369, -1.2374, 0.55 ) }
    dend_56 { pt3dadd( -30.3735, 28.2687, -3.68282, 0.55 ) }
    dend_56 { pt3dadd( -31.3628, 29.6214, -6.23949, 0.55 ) }
    dend_56 { pt3dadd( -31.9824, 30.4684, -7.84044, 0.55 ) }
    dend_56 { pt3dadd( -33.1125, 32.0135, -10.7608, 0.83 ) }
    dend_56 { pt3dadd( -33.9393, 33.1438, -12.8973, 0.55 ) }
    dend_56 { pt3dadd( -34.8047, 34.6956, -16.0078, 0.83 ) }
    dend_56 { pt3dadd( -35.044, 35.706, -17.7178, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -67.4337, 17.8489, 10.3609, 0.28 ) }
    dend_48 { pt3dadd( -68.298, 16.2642, 9.76965, 0.28 ) }
    dend_48 { pt3dadd( -68.7053, 15.5893, 9.45061, 0.28 ) }
    dend_48 { pt3dadd( -69.2281, 14.6375, 8.97017, 0.55 ) }
    dend_48 { pt3dadd( -69.6584, 13.7993, 8.55956, 0.28 ) }
    dend_48 { pt3dadd( -70.2939, 12.5206, 7.9538, 0.55 ) }
    dend_48 { pt3dadd( -72.0637, 8.75397, 6.25177, 0.28 ) }
    dend_48 { pt3dadd( -72.6247, 7.44235, 5.55315, 0.55 ) }
    dend_48 { pt3dadd( -73.4643, 5.42874, 4.40882, 0.28 ) }
    dend_48 { pt3dadd( -73.9374, 4.22916, 3.67118, 0.55 ) }
    dend_48 { pt3dadd( -74.2616, 3.40443, 3.14195, 0.28 ) }
    dend_48 { pt3dadd( -74.6318, 2.45705, 2.54304, 0.55 ) }
    dend_48 { pt3dadd( -75.7446, -0.714821, 0.644218, 0.28 ) }
    dend_48 { pt3dadd( -76.0921, -1.67071, 0.0324065, 0.55 ) }
    dend_48 { pt3dadd( -76.6919, -3.11592, -1.07344, 0.28 ) }
    dend_48 { pt3dadd( -77.1935, -4.03076, -1.88526, 0.28 ) }
    dend_48 { pt3dadd( -77.6582, -4.63658, -2.47151, 0.55 ) }
    dend_48 { pt3dadd( -79.3209, -6.33341, -4.1182, 0.28 ) }
    dend_48 { pt3dadd( -80.1045, -7.01924, -4.78541, 0.55 ) }
    dend_48 { pt3dadd( -82.0177, -8.56789, -6.432, 0.28 ) }
    dend_48 { pt3dadd( -83.9436, -9.92942, -7.96206, 0.28 ) }
    dend_48 { pt3dadd( -86.0463, -11.2147, -9.53768, 0.28 ) }
    dend_48 { pt3dadd( -87.0198, -11.6941, -10.1644, 0.55 ) }
    dend_48 { pt3dadd( -91.6084, -17.3376, -14.4025, 0.55 ) }
    dend_48 { pt3dadd( -96.9505, -23.2091, -17.2047, 0.55 ) }
    dend_48 { pt3dadd( -102.021, -28.6329, -21.1716, 0.55 ) }
    dend_48 { pt3dadd( -107.137, -33.4633, -25.7927, 0.55 ) }
    dend_48 { pt3dadd( -112.23, -37.6195, -31.0511, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -67.4337, 17.8489, 10.3609, 0.55 ) }
    dend_45 { pt3dadd( -67.9734, 17.7986, 10.3946, 0.55 ) }
    dend_45 { pt3dadd( -69.5118, 17.681, 10.6844, 0.55 ) }
    dend_45 { pt3dadd( -70.0922, 17.6258, 10.8251, 0.55 ) }
    dend_45 { pt3dadd( -71.4581, 17.4581, 11.1812, 0.55 ) }
    dend_45 { pt3dadd( -73.551, 17.2095, 11.6275, 0.55 ) }
    dend_45 { pt3dadd( -74.6375, 17.1108, 11.8367, 0.28 ) }
    dend_45 { pt3dadd( -76.3252, 16.9175, 12.1343, 0.55 ) }
    dend_45 { pt3dadd( -77.5745, 16.7435, 12.3141, 0.55 ) }
    dend_45 { pt3dadd( -78.1021, 16.6667, 12.3916, 0.28 ) }
    dend_45 { pt3dadd( -81.2665, 16.204, 12.8524, 0.55 ) }
    dend_45 { pt3dadd( -82.7372, 15.9103, 12.9869, 0.28 ) }
    dend_45 { pt3dadd( -84.7114, 15.4932, 13.0545, 0.28 ) }
    dend_45 { pt3dadd( -86.4056, 15.1469, 13.011, 0.55 ) }
    dend_45 { pt3dadd( -93.1486, 14.9297, 14.1574, 0.55 ) }
    dend_45 { pt3dadd( -99.7197, 14.6302, 16.0445, 0.55 ) }
    dend_45 { pt3dadd( -105.964, 13.7266, 18.6944, 0.55 ) }
    dend_45 { pt3dadd( -112.088, 14.027, 21.7329, 0.55 ) }
    dend_45 { pt3dadd( -117.448, 14.2538, 25.9816, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -121.897, 14.9805, 31.1298, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 67.4623, 8.16622, -41.1508, 0.55 ) }
    dend_42 { pt3dadd( 71.3886, 9.35721, -44.4351, 0.55 ) }
    dend_42 { pt3dadd( 72.6276, 9.67848, -45.5528, 0.55 ) }
    dend_42 { pt3dadd( 74.178, 10.0283, -46.9331, 0.55 ) }
    dend_42 { pt3dadd( 76.988, 10.6386, -49.6062, 0.55 ) }
    dend_42 { pt3dadd( 79.9182, 11.1517, -52.4707, 0.55 ) }
    dend_42 { pt3dadd( 81.3499, 11.2845, -53.8347, 0.83 ) }
    dend_42 { pt3dadd( 82.5259, 11.3104, -55.0489, 0.55 ) }
    dend_42 { pt3dadd( 83.4029, 11.2548, -56.0488, 0.83 ) }
    dend_42 { pt3dadd( 85.5099, 10.8139, -58.611, 0.55 ) }
    dend_42 { pt3dadd( 87.2425, 10.2815, -60.734, 0.55 ) }
    dend_42 { pt3dadd( 89.2369, 9.65454, -63.0734, 0.55 ) }
    dend_42 { pt3dadd( 91.4575, 9.02344, -65.725, 0.55 ) }
    dend_42 { pt3dadd( 92.9456, 8.56338, -67.5422, 0.55 ) }
    dend_42 { pt3dadd( 94.6236, 8.03908, -69.6481, 0.55 ) }
    dend_42 { pt3dadd( 96.0726, 7.64021, -71.5734, 0.55 ) }
    dend_42 { pt3dadd( 96.983, 7.4773, -72.911, 0.55 ) }
    dend_42 { pt3dadd( 98.1183, 7.2115, -75.5922, 0.55 ) }
    dend_42 { pt3dadd( 98.7322, 6.99501, -77.2676, 0.55 ) }
    dend_42 { pt3dadd( 99.2441, 6.6162, -79.4887, 0.55 ) }
    dend_42 { pt3dadd( 99.9298, 5.86599, -83.2401, 0.55 ) }
    dend_42 { pt3dadd( 100.068, 5.66535, -84.0856, 0.28 ) }
    dend_42 { pt3dadd( 101.862, 3.10967, -94.3661, 0.28 ) }
    dend_42 { pt3dadd( 102.479, 2.37875, -97.3854, 0.83 ) }
    dend_42 { pt3dadd( 104.93, -0.408651, -108.097, 0.83 ) }
    dend_42 { pt3dadd( 106.198, -1.90408, -113.073, 0.83 ) }
    dend_42 { pt3dadd( 106.814, -2.59328, -115.088, 0.55 ) }
    dend_42 { pt3dadd( 107.531, -3.27585, -117.055, 0.55 ) }
    dend_42 { pt3dadd( 109.552, -4.63964, -120.706, 0.55 ) }
    dend_42 { pt3dadd( 111.732, -5.87859, -123.918, 0.28 ) }
    dend_42 { pt3dadd( 112.406, -6.11495, -124.112, 0.55 ) }
    dend_42 { pt3dadd( 113.902, -6.52905, -123.999, 0.28 ) }
    dend_42 { pt3dadd( 114.831, -6.71871, -123.794, 0.55 ) }
    dend_42 { pt3dadd( 115.8, -6.92941, -123.497, 0.28 ) }
    dend_42 { pt3dadd( 116.966, -7.12377, -123.087, 0.55 ) }
    dend_42 { pt3dadd( 118.709, -7.32196, -122.66, 0.28 ) }
    dend_42 { pt3dadd( 120.106, -7.52434, -122.363, 0.55 ) }
    dend_42 { pt3dadd( 121.652, -7.645, -122.158, 0.28 ) }
    dend_42 { pt3dadd( 123.752, -7.80195, -122.067, 0.55 ) }
    dend_42 { pt3dadd( 126.105, -7.92306, -122.107, 0.55 ) }
    dend_42 { pt3dadd( 128.173, -8.00485, -122.281, 0.28 ) }
    dend_42 { pt3dadd( 131.033, -8.09164, -122.68, 0.55 ) }
    dend_42 { pt3dadd( 135.971, -8.10395, -123.9, 0.55 ) }
    dend_42 { pt3dadd( 138.15, -7.99522, -124.705, 0.55 ) }
    dend_42 { pt3dadd( 139.086, -7.90907, -125.152, 0.83 ) }
    dend_42 { pt3dadd( 140.866, -7.73213, -126.17, 0.55 ) }
    dend_42 { pt3dadd( 142.101, -7.55848, -126.955, 0.83 ) }
    dend_42 { pt3dadd( 145.425, -7.00232, -129.105, 0.55 ) }
    dend_42 { pt3dadd( 147.451, -6.80488, -130.471, 0.28 ) }
    dend_42 { pt3dadd( 148.305, -6.77575, -130.949, 0.55 ) }
    dend_42 { pt3dadd( 150.645, -6.91596, -131.994, 0.28 ) }
    dend_42 { pt3dadd( 151.464, -7.04159, -132.306, 0.55 ) }
    dend_42 { pt3dadd( 153.155, -7.40777, -132.683, 0.28 ) }
    dend_42 { pt3dadd( 154.877, -7.94962, -132.765, 0.55 ) }
    dend_42 { pt3dadd( 158.363, -9.23258, -132.314, 0.28 ) }
    dend_42 { pt3dadd( 159.972, -9.89552, -131.934, 0.55 ) }
    dend_42 { pt3dadd( 162.364, -11.02, -131.239, 0.28 ) }
    dend_42 { pt3dadd( 165.389, -12.4285, -130.251, 0.55 ) }
    dend_42 { pt3dadd( 167.577, -13.4168, -129.502, 0.55 ) }
    dend_42 { pt3dadd( 171.37, -15.009, -128.141, 0.28 ) }
    dend_42 { pt3dadd( 172.926, -15.5901, -127.712, 0.55 ) }
    dend_42 { pt3dadd( 175.606, -16.4378, -127.269, 0.28 ) }
    dend_42 { pt3dadd( 178.278, -17.0767, -127.015, 0.55 ) }
    dend_42 { pt3dadd( 179.742, -17.2602, -127.082, 0.28 ) }
    dend_42 { pt3dadd( 181.067, -17.2466, -127.247, 0.55 ) }
    dend_42 { pt3dadd( 184.805, -16.9839, -128.069, 0.28 ) }
    dend_42 { pt3dadd( 187.477, -16.6101, -128.7, 0.28 ) }
    dend_42 { pt3dadd( 189.802, -16.1146, -129.283, 0.55 ) }
    dend_42 { pt3dadd( 192.367, -15.4955, -130.058, 0.28 ) }
    dend_42 { pt3dadd( 193.015, -15.2986, -130.231, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 67.4623, 8.16622, -41.1508, 0.55 ) }
    dend_35 { pt3dadd( 68.1763, 5.90572, -42.5837, 0.55 ) }
    dend_35 { pt3dadd( 68.6121, 3.98215, -43.6596, 0.28 ) }
    dend_35 { pt3dadd( 69.0102, 2.22145, -44.4959, 0.55 ) }
    dend_35 { pt3dadd( 70.0435, -1.4979, -46.3062, 0.28 ) }
    dend_35 { pt3dadd( 70.102, -1.73278, -46.453, 0.55 ) }
    dend_35 { pt3dadd( 70.4414, -2.96201, -47.323, 0.28 ) }
    dend_35 { pt3dadd( 70.6291, -3.98691, -48.2021, 0.55 ) }
    dend_35 { pt3dadd( 70.7643, -5.06219, -49.2398, 0.28 ) }
    dend_35 { pt3dadd( 70.9064, -6.53246, -50.7215, 0.55 ) }
    dend_35 { pt3dadd( 71.2612, -10.2238, -54.3733, 0.55 ) }
    dend_35 { pt3dadd( 71.5465, -13.5915, -57.7601, 0.55 ) }
    dend_35 { pt3dadd( 71.7485, -16.285, -60.4704, 0.55 ) }
    dend_35 { pt3dadd( 71.9, -18.9354, -63.0876, 0.55 ) }
    dend_35 { pt3dadd( 71.9371, -19.62, -63.7351, 0.28 ) }
    dend_35 { pt3dadd( 71.9974, -20.3494, -64.3674, 0.55 ) }
    dend_35 { pt3dadd( 72.1737, -21.3524, -65.1524, 0.28 ) }
    dend_35 { pt3dadd( 72.6699, -23.1369, -66.3993, 0.55 ) }
    dend_35 { pt3dadd( 73.9112, -26.5293, -68.2531, 0.55 ) }
    dend_35 { pt3dadd( 74.5955, -28.3507, -69.0867, 0.28 ) }
    dend_35 { pt3dadd( 75.1841, -30.2103, -70.0137, 0.55 ) }
    dend_35 { pt3dadd( 75.8194, -32.828, -71.4069, 0.28 ) }
    dend_35 { pt3dadd( 76.1989, -34.95, -72.5785, 0.55 ) }
    dend_35 { pt3dadd( 76.6339, -38.1315, -74.3344, 0.28 ) }
    dend_35 { pt3dadd( 77.1078, -41.4206, -76.0515, 0.55 ) }
    dend_35 { pt3dadd( 77.734, -46.2007, -78.585, 0.28 ) }
    dend_35 { pt3dadd( 78.0135, -48.7524, -79.9429, 0.55 ) }
    dend_35 { pt3dadd( 78.2578, -51.3659, -81.3918, 0.28 ) }
    dend_35 { pt3dadd( 78.4486, -53.6704, -82.8072, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 78.7821, -56.5504, -84.8221, 0.55 ) }
    dend_35 { pt3dadd( 79.2712, -59.2078, -86.6271, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 56.9839, 19.5096, -1.20907, 0.55 ) }
    dend_31 { pt3dadd( 59.1998, 19.0032, -0.89412, 0.55 ) }
    dend_31 { pt3dadd( 60.8031, 18.5988, -0.828004, 0.55 ) }
    dend_31 { pt3dadd( 64.3013, 17.7047, -0.874135, 0.55 ) }
    dend_31 { pt3dadd( 65.8652, 17.2942, -1.0415, 0.55 ) }
    dend_31 { pt3dadd( 67.5708, 16.8981, -1.30562, 0.55 ) }
    dend_31 { pt3dadd( 69.8566, 16.4354, -1.81751, 0.55 ) }
    dend_31 { pt3dadd( 72.2513, 15.9226, -2.60075, 0.55 ) }
    dend_31 { pt3dadd( 73.4997, 15.662, -3.16142, 0.55 ) }
    dend_31 { pt3dadd( 76.0192, 15.1933, -4.65748, 0.55 ) }
    dend_31 { pt3dadd( 77.1785, 14.9941, -5.38304, 0.55 ) }
    dend_31 { pt3dadd( 79.8867, 14.4857, -7.16561, 0.55 ) }
    dend_31 { pt3dadd( 81.7151, 14.0616, -8.37048, 0.55 ) }
    dend_31 { pt3dadd( 83.0632, 13.7294, -9.19458, 0.83 ) }
    dend_31 { pt3dadd( 85.2112, 13.1104, -10.5003, 0.55 ) }
    dend_31 { pt3dadd( 87.3099, 12.3813, -11.7119, 0.83 ) }
    dend_31 { pt3dadd( 89.0866, 11.6646, -12.6881, 0.55 ) }
    dend_31 { pt3dadd( 90.6744, 11.0361, -13.4652, 0.55 ) }
    dend_31 { pt3dadd( 91.5838, 10.7112, -13.8475, 0.83 ) }
    dend_31 { pt3dadd( 93.7134, 9.93926, -14.6218, 0.28 ) }
    dend_31 { pt3dadd( 94.7802, 9.58891, -14.929, 0.28 ) }
    dend_31 { pt3dadd( 95.8033, 9.19172, -15.2931, 0.28 ) }
    dend_31 { pt3dadd( 96.912, 8.79413, -15.6865, 0.28 ) }
    dend_31 { pt3dadd( 98.687, 8.1993, -16.3482, 0.28 ) }
    dend_31 { pt3dadd( 99.4032, 7.9653, -16.5907, 0.55 ) }
    dend_31 { pt3dadd( 101.127, 7.39364, -16.9937, 0.55 ) }
    dend_31 { pt3dadd( 104.236, 6.30589, -17.5637, 0.55 ) }
    dend_31 { pt3dadd( 105.096, 5.97472, -17.6868, 0.55 ) }
    dend_31 { pt3dadd( 105.864, 5.64726, -17.7673, 0.83 ) }
    dend_31 { pt3dadd( 107.543, 4.96487, -17.7944, 0.55 ) }
    dend_31 { pt3dadd( 109.005, 4.37047, -17.7936, 0.55 ) }
    dend_31 { pt3dadd( 110.387, 3.81367, -17.7852, 0.55 ) }
    dend_31 { pt3dadd( 111.454, 3.36879, -17.813, 0.55 ) }
    dend_31 { pt3dadd( 113.13, 2.55716, -17.9631, 0.55 ) }
    dend_31 { pt3dadd( 115.083, 1.44026, -18.285, 0.55 ) }
    dend_31 { pt3dadd( 118.072, -0.61443, -19.0719, 0.55 ) }
    dend_31 { pt3dadd( 119.682, -1.98038, -19.6609, 0.55 ) }
    dend_31 { pt3dadd( 121.048, -3.41042, -20.2942, 0.28 ) }
    dend_31 { pt3dadd( 121.445, -3.93184, -20.5274, 0.55 ) }
    dend_31 { pt3dadd( 122.289, -5.37852, -21.1495, 0.28 ) }
    dend_31 { pt3dadd( 122.975, -6.991, -21.7977, 0.55 ) }
    dend_31 { pt3dadd( 123.574, -9.01482, -22.4303, 0.55 ) }
    dend_31 { pt3dadd( 123.986, -10.3567, -22.7842, 0.28 ) }
    dend_31 { pt3dadd( 124.14, -10.835, -22.8869, 0.55 ) }
    dend_31 { pt3dadd( 124.546, -12.0273, -23.1275, 0.28 ) }
    dend_31 { pt3dadd( 125.108, -13.5867, -23.4062, 0.55 ) }
    dend_31 { pt3dadd( 126.61, -17.3676, -23.9964, 0.55 ) }
    dend_31 { pt3dadd( 127.4, -19.2814, -24.2574, 0.55 ) }
    dend_31 { pt3dadd( 128.137, -21.0385, -24.4824, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 56.9839, 19.5096, -1.20907, 0.55 ) }
    dend_30 { pt3dadd( 58.3655, 19.5139, -0.162528, 0.55 ) }
    dend_30 { pt3dadd( 58.8087, 19.5162, 0.148791, 0.55 ) }
    dend_30 { pt3dadd( 60.4578, 19.4544, 1.22866, 0.55 ) }
    dend_30 { pt3dadd( 62.3, 19.4184, 2.46566, 0.55 ) }
    dend_30 { pt3dadd( 64.6603, 19.36, 4.11272, 0.55 ) }
    dend_30 { pt3dadd( 65.3123, 19.3451, 4.56342, 0.55 ) }
    dend_30 { pt3dadd( 66.4806, 19.2752, 5.35514, 0.55 ) }
    dend_30 { pt3dadd( 67.7629, 19.233, 6.17854, 0.55 ) }
    dend_30 { pt3dadd( 69.2558, 19.2327, 7.07441, 0.55 ) }
    dend_30 { pt3dadd( 70.6633, 19.2514, 7.92605, 0.55 ) }
    dend_30 { pt3dadd( 71.437, 19.3004, 8.36208, 0.55 ) }
    dend_30 { pt3dadd( 72.3463, 19.3838, 8.87567, 0.55 ) }
    dend_30 { pt3dadd( 73.4725, 19.5213, 9.49502, 0.83 ) }
    dend_30 { pt3dadd( 75.3185, 19.7637, 10.3188, 0.55 ) }
    dend_30 { pt3dadd( 76.5396, 19.8832, 10.8005, 0.83 ) }
    dend_30 { pt3dadd( 78.2328, 19.9791, 11.4023, 0.55 ) }
    dend_30 { pt3dadd( 78.7517, 19.9815, 11.5763, 0.55 ) }
    dend_30 { pt3dadd( 80.3594, 19.9138, 12.0729, 0.55 ) }
    dend_30 { pt3dadd( 83.2306, 19.6339, 12.8262, 0.55 ) }
    dend_30 { pt3dadd( 85.3293, 19.3187, 13.3156, 0.55 ) }
    dend_30 { pt3dadd( 86.9876, 18.9883, 13.7321, 0.55 ) }
    dend_30 { pt3dadd( 88.6747, 18.5567, 14.2034, 0.55 ) }
    dend_30 { pt3dadd( 89.0292, 18.4563, 14.3031, 0.28 ) }
    dend_30 { pt3dadd( 89.7471, 18.224, 14.5, 0.83 ) }
    dend_30 { pt3dadd( 92.693, 17.2254, 15.3203, 0.55 ) }
    dend_30 { pt3dadd( 94.7542, 16.5338, 15.8543, 0.55 ) }
    dend_30 { pt3dadd( 96.4472, 16.0041, 16.3407, 0.55 ) }
    dend_30 { pt3dadd( 97.4585, 15.6835, 16.6407, 0.83 ) }
    dend_30 { pt3dadd( 98.2552, 15.4425, 16.8798, 0.28 ) }
    dend_30 { pt3dadd( 98.9779, 15.2258, 17.09, 0.55 ) }
    dend_30 { pt3dadd( 104.656, 14.8155, 19.7163, 0.55 ) }
    dend_30 { pt3dadd( 110.634, 13.573, 21.1342, 0.55 ) }
    dend_30 { pt3dadd( 116.615, 13.0493, 22.9388, 0.55 ) }
    dend_30 { pt3dadd( 121.919, 11.5347, 25.9163, 0.55 ) }
    dend_30 { pt3dadd( 126.814, 9.17895, 29.0444, 0.55 ) }
    dend_30 { pt3dadd( 132.135, 6.12416, 30.3299, 0.55 ) }
    dend_30 { pt3dadd( 137.338, 2.63064, 30.4959, 0.55 ) }
    dend_30 { pt3dadd( 143.132, 0.23903, 30.4362, 0.55 ) }
    dend_30 { pt3dadd( 148.857, -2.29244, 30.7778, 0.55 ) }
    dend_30 { pt3dadd( 154.853, -4.12191, 30.8149, 0.55 ) }
    dend_30 { pt3dadd( 160.836, -5.77569, 31.6866, 0.55 ) }
    dend_30 { pt3dadd( 166.387, -8.49098, 32.7389, 0.55 ) }
    dend_30 { pt3dadd( 172.14, -10.2063, 34.5471, 0.55 ) }
    dend_30 { pt3dadd( 177.68, -11.106, 37.338, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.2334, -22.7407, 4.73306, 1.38 ) }
    dend_13 { pt3dadd( -0.609748, -26.1388, 2.54092, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.2334, -22.7407, 4.73306, 0.55 ) }
    dend_12 { pt3dadd( -3.55408, -24.1107, 5.28854, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.04683, -25.8944, 5.9071, 0.55 ) }
    dend_12 { pt3dadd( -6.17625, -27.0559, 6.39697, 0.55 ) }
    dend_12 { pt3dadd( -7.18554, -28.0207, 6.67516, 0.55 ) }
    dend_12 { pt3dadd( -9.45036, -29.9993, 7.10305, 0.55 ) }
    dend_12 { pt3dadd( -11.0456, -31.3106, 7.36561, 0.55 ) }
    dend_12 { pt3dadd( -12.4846, -32.4858, 7.55489, 0.55 ) }
    dend_12 { pt3dadd( -16.1582, -35.3241, 8.04167, 0.55 ) }
    dend_12 { pt3dadd( -20.5424, -38.5928, 8.65348, 0.55 ) }
    dend_12 { pt3dadd( -23.951, -41.058, 9.07791, 0.55 ) }
    dend_12 { pt3dadd( -26.1442, -42.683, 9.32362, 0.55 ) }
    dend_12 { pt3dadd( -28.6698, -44.6464, 9.61299, 0.55 ) }
    dend_12 { pt3dadd( -31.9045, -47.5121, 10.019, 0.55 ) }
    dend_12 { pt3dadd( -33.8323, -49.5926, 10.2938, 0.55 ) }
    dend_12 { pt3dadd( -36.1962, -52.6358, 10.8033, 0.55 ) }
    dend_12 { pt3dadd( -38.1121, -55.5261, 11.2747, 0.55 ) }
    dend_12 { pt3dadd( -40.1275, -59.1827, 11.7866, 0.55 ) }
    dend_12 { pt3dadd( -42.1113, -63.5259, 12.3421, 0.55 ) }
    dend_12 { pt3dadd( -43.2832, -66.891, 12.7076, 0.55 ) }
    dend_12 { pt3dadd( -43.7138, -68.5841, 12.9467, 0.55 ) }
    dend_12 { pt3dadd( -44.4148, -72.6004, 13.6152, 0.55 ) }
    dend_12 { pt3dadd( -44.9692, -76.3702, 14.3052, 0.55 ) }
    dend_12 { pt3dadd( -45.2346, -80.202, 15.1826, 0.55 ) }
    dend_12 { pt3dadd( -45.36, -82.4016, 15.8055, 0.55 ) }
    dend_12 { pt3dadd( -45.6102, -89.216, 17.9448, 0.55 ) }
    dend_12 { pt3dadd( -45.6281, -89.7176, 18.1117, 0.55 ) }
    dend_12 { pt3dadd( -45.6554, -92.7995, 19.1801, 0.55 ) }
    dend_12 { pt3dadd( -45.8862, -98.2834, 21.3111, 0.55 ) }
    dend_12 { pt3dadd( -46.0165, -100.112, 21.9278, 0.55 ) }
    dend_12 { pt3dadd( -46.4809, -102.945, 22.4681, 0.55 ) }
    dend_12 { pt3dadd( -46.7256, -103.993, 22.4338, 0.55 ) }
    dend_12 { pt3dadd( -47.6781, -107.536, 21.6319, 0.55 ) }
    dend_12 { pt3dadd( -48.3727, -109.83, 20.6079, 0.55 ) }
    dend_12 { pt3dadd( -49.6877, -113.471, 18.2415, 0.55 ) }
    dend_12 { pt3dadd( -51.2688, -117.937, 14.9493, 0.28 ) }
    dend_12 { pt3dadd( -51.7043, -119.037, 13.9885, 0.55 ) }
    dend_12 { pt3dadd( -52.4193, -120.702, 12.3915, 0.28 ) }
    dend_12 { pt3dadd( -52.5346, -120.952, 12.1392, 0.55 ) }
    dend_12 { pt3dadd( -53.1263, -122.325, 10.8722, 0.28 ) }
    dend_12 { pt3dadd( -53.3131, -122.79, 10.5563, 0.55 ) }
    dend_12 { pt3dadd( -54.1441, -125.221, 9.37779, 0.28 ) }
    dend_12 { pt3dadd( -54.4524, -126.045, 8.99968, 0.55 ) }
    dend_12 { pt3dadd( -55.3165, -128.427, 8.04635, 0.28 ) }
    dend_12 { pt3dadd( -55.5842, -129.177, 7.74746, 0.55 ) }
    dend_12 { pt3dadd( -56.5107, -131.766, 6.76461, 0.28 ) }
    dend_12 { pt3dadd( -56.9336, -132.957, 6.3042, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.59522, -66.5276, 54.4633, 0.55 ) }
    dend_10 { pt3dadd( -6.52436, -73.4982, 61.0096, 0.55 ) }
    dend_10 { pt3dadd( -10.5011, -79.6856, 67.7863, 0.55 ) }
    dend_10 { pt3dadd( -14.149, -86.5041, 74.1285, 0.55 ) }
    dend_10 { pt3dadd( -17.9626, -93.3741, 80.3157, 0.55 ) }
    dend_10 { pt3dadd( -20.636, -101.273, 85.8364, 0.55 ) }
    dend_10 { pt3dadd( -23.246, -108.839, 91.8331, 0.55 ) }
    dend_10 { pt3dadd( -24.5844, -117.873, 95.9118, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.59522, -66.5276, 54.4633, 0.55 ) }
    dend_3 { pt3dadd( -2.25738, -73.6641, 61.5395, 0.55 ) }
    dend_3 { pt3dadd( -0.4347, -81.8922, 67.1756, 0.55 ) }
    dend_3 { pt3dadd( -0.230592, -90.3271, 72.7972, 0.55 ) }
    dend_3 { pt3dadd( -0.576278, -99.3028, 77.4991, 0.55 ) }
    dend_3 { pt3dadd( -0.516649, -108.205, 82.3505, 0.55 ) }
    dend_3 { pt3dadd( -0.403579, -116.735, 87.8297, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -35.044, 35.706, -17.7178, 0.83 ) }
    dend_60 { pt3dadd( -34.7673, 37.039, -19.9221, 0.83 ) }
    dend_60 { pt3dadd( -34.1632, 40.3304, -24.9028, 0.55 ) }
    dend_60 { pt3dadd( -33.8794, 41.7783, -26.9016, 0.83 ) }
    dend_60 { pt3dadd( -33.5503, 43.3517, -28.9091, 0.55 ) }
    dend_60 { pt3dadd( -33.1733, 45.0238, -30.6934, 0.55 ) }
    dend_60 { pt3dadd( -32.9582, 45.8874, -31.4627, 0.28 ) }
    dend_60 { pt3dadd( -32.8341, 46.4954, -31.8016, 0.55 ) }
    dend_60 { pt3dadd( -32.2867, 48.607, -32.4738, 0.28 ) }
    dend_60 { pt3dadd( -32.0224, 49.5168, -32.7175, 0.55 ) }
    dend_60 { pt3dadd( -31.1247, 52.7085, -33.4266, 0.28 ) }
    dend_60 { pt3dadd( -30.4678, 55.261, -33.8923, 0.55 ) }
    dend_60 { pt3dadd( -29.6176, 59.29, -34.4686, 0.28 ) }
    dend_60 { pt3dadd( -28.9849, 62.8566, -34.8903, 0.28 ) }
    dend_60 { pt3dadd( -28.7403, 64.8714, -35.0721, 0.55 ) }
    dend_60 { pt3dadd( -28.5951, 67.2745, -35.2666, 0.28 ) }
    dend_60 { pt3dadd( -28.5974, 68.4311, -35.3335, 0.55 ) }
    dend_60 { pt3dadd( -28.765, 71.1431, -35.5897, 0.28 ) }
    dend_60 { pt3dadd( -29.0074, 72.9445, -35.8357, 0.28 ) }
    dend_60 { pt3dadd( -29.2901, 74.7073, -36.1246, 0.28 ) }
    dend_60 { pt3dadd( -29.405, 75.635, -36.2857, 0.55 ) }
    dend_60 { pt3dadd( -29.6848, 79.3545, -37.0509, 0.28 ) }
    dend_60 { pt3dadd( -29.8829, 83.7331, -38.0572, 0.55 ) }
    dend_60 { pt3dadd( -29.93, 85.2424, -38.4137, 0.55 ) }
    dend_60 { pt3dadd( -29.9967, 86.7636, -38.7353, 0.55 ) }
    dend_60 { pt3dadd( -30.3162, 90.0001, -39.4472, 0.55 ) }
    dend_60 { pt3dadd( -30.6685, 92.1274, -39.941, 0.28 ) }
    dend_60 { pt3dadd( -30.8959, 92.9382, -40.1258, 0.55 ) }
    dend_60 { pt3dadd( -31.6574, 95.154, -40.5595, 0.28 ) }
    dend_60 { pt3dadd( -32.5756, 97.5033, -41.0989, 0.55 ) }
    dend_60 { pt3dadd( -34.223, 100.881, -41.9599, 0.28 ) }
    dend_60 { pt3dadd( -35.067, 102.294, -42.343, 0.28 ) }
    dend_60 { pt3dadd( -36.516, 104.242, -43.0329, 0.55 ) }
    dend_60 { pt3dadd( -38.1748, 106.262, -43.8384, 0.28 ) }
    dend_60 { pt3dadd( -38.4848, 106.58, -43.974, 0.55 ) }
    dend_60 { pt3dadd( -39.6207, 107.596, -44.4276, 0.28 ) }
    dend_60 { pt3dadd( -43.5631, 110.868, -45.8635, 0.55 ) }
    dend_60 { pt3dadd( -49.1532, 114.878, -47.9675, 0.28 ) }
    dend_60 { pt3dadd( -50.2057, 115.541, -48.4046, 0.55 ) }
    dend_60 { pt3dadd( -53.1193, 117.242, -49.6299, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -54.3504, 117.933, -50.1734, 0.28 ) }
    dend_60 { pt3dadd( -55.4326, 118.497, -50.6903, 0.55 ) }
    dend_60 { pt3dadd( -58.6913, 119.739, -52.3618, 0.28 ) }
    dend_60 { pt3dadd( -61.0105, 120.411, -53.4095, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -35.044, 35.706, -17.7178, 0.55 ) }
    dend_57 { pt3dadd( -35.1759, 37.6807, -18.1958, 0.55 ) }
    dend_57 { pt3dadd( -35.2735, 38.8618, -18.3663, 0.28 ) }
    dend_57 { pt3dadd( -35.4914, 39.7443, -18.2698, 0.55 ) }
    dend_57 { pt3dadd( -35.9919, 41.7711, -18.0481, 0.28 ) }
    dend_57 { pt3dadd( -36.3434, 43.1946, -17.8924, 0.55 ) }
    dend_57 { pt3dadd( -36.9914, 45.819, -17.6053, 0.28 ) }
    dend_57 { pt3dadd( -37.4524, 47.264, -17.208, 0.55 ) }
    dend_57 { pt3dadd( -39.3945, 50.9133, -15.0553, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -112.23, -37.6195, -31.0511, 0.55 ) }
    dend_52 { pt3dadd( -118.741, -46.4858, -35.4211, 0.55 ) }
    dend_52 { pt3dadd( -123.326, -56.3429, -40.1013, 0.55 ) }
    dend_52 { pt3dadd( -126.447, -65.5188, -46.8952, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -112.23, -37.6195, -31.0511, 0.55 ) }
    dend_49 { pt3dadd( -117.013, -43.4773, -35.5883, 0.55 ) }
    dend_49 { pt3dadd( -120.745, -49.4663, -40.8775, 0.55 ) }
    dend_49 { pt3dadd( -124.102, -55.5964, -46.2555, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -121.897, 14.9805, 31.1298, 0.55 ) }
    dend_47 { pt3dadd( -129.709, 16.0264, 35.6725, 0.55 ) }
    dend_47 { pt3dadd( -138.007, 17.752, 38.9762, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -121.897, 14.9805, 31.1298, 0.55 ) }
    dend_46 { pt3dadd( -133.75, 13.7115, 35.1235, 0.55 ) }
    dend_46 { pt3dadd( -145.818, 14.4373, 38.5692, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 79.2712, -59.2078, -86.6271, 0.28 ) }
    dend_39 { pt3dadd( 86.6037, -63.5625, -97.7689, 0.28 ) }
    dend_39 { pt3dadd( 87.32, -64.0497, -98.7536, 0.55 ) }
    dend_39 { pt3dadd( 88.5292, -64.8724, -100.417, 0.28 ) }
    dend_39 { pt3dadd( 89.5474, -65.565, -101.816, 0.28 ) }
    dend_39 { pt3dadd( 90.8953, -66.4819, -103.669, 0.55 ) }
    dend_39 { pt3dadd( 92.6723, -67.6908, -106.112, 0.55 ) }
    dend_39 { pt3dadd( 94.8868, -69.7006, -107.258, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 79.2712, -59.2078, -86.6271, 0.55 ) }
    dend_36 { pt3dadd( 79.9421, -60.3151, -88.103, 0.55 ) }
    dend_36 { pt3dadd( 80.1387, -60.7846, -88.7768, 0.28 ) }
    dend_36 { pt3dadd( 80.4289, -61.5706, -89.9604, 0.55 ) }
    dend_36 { pt3dadd( 81.0681, -63.3021, -92.5677, 0.28 ) }
    dend_36 { pt3dadd( 81.5111, -64.502, -94.3746, 0.55 ) }
    dend_36 { pt3dadd( 82.2616, -66.5351, -97.436, 0.28 ) }
    dend_36 { pt3dadd( 83.1447, -68.939, -101.434, 0.28 ) }
    dend_36 { pt3dadd( 83.4965, -70.0211, -103.31, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 128.137, -21.0385, -24.4824, 0.28 ) }
    dend_33 { pt3dadd( 130.659, -25.6209, -25.0512, 0.28 ) }
    dend_33 { pt3dadd( 133.79, -31.8321, -25.3625, 0.28 ) }
    dend_33 { pt3dadd( 135.751, -35.9119, -25.4247, 0.55 ) }
    dend_33 { pt3dadd( 136.959, -38.2149, -25.3596, 0.28 ) }
    dend_33 { pt3dadd( 137.598, -39.4577, -25.3147, 0.28 ) }
    dend_33 { pt3dadd( 140.773, -45.5643, -25.173, 0.55 ) }
    dend_33 { pt3dadd( 141.504, -46.9837, -24.9899, 0.28 ) }
    dend_33 { pt3dadd( 143.173, -50.7787, -24.3094, 0.55 ) }
    dend_33 { pt3dadd( 144.593, -54.0321, -23.8292, 0.28 ) }
    dend_33 { pt3dadd( 145.861, -56.6727, -23.477, 0.55 ) }
    dend_33 { pt3dadd( 147.347, -59.7656, -23.2182, 0.55 ) }
    dend_33 { pt3dadd( 149.737, -64.482, -23.3223, 0.55 ) }
    dend_33 { pt3dadd( 150.311, -65.624, -23.3846, 0.55 ) }
    dend_33 { pt3dadd( 152.347, -69.8608, -23.6626, 0.28 ) }
    dend_33 { pt3dadd( 153.124, -71.5708, -23.8184, 0.55 ) }
    dend_33 { pt3dadd( 154.239, -73.7647, -24.0206, 0.28 ) }
    dend_33 { pt3dadd( 155.815, -76.8299, -24.4347, 0.55 ) }
    dend_33 { pt3dadd( 158.491, -81.4368, -25.7162, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 128.137, -21.0385, -24.4824, 0.55 ) }
    dend_32 { pt3dadd( 124.814, -20.3962, -24.5034, 0.55 ) }
    dend_32 { pt3dadd( 122.115, -19.8746, -24.5206, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.609748, -26.1388, 2.54092, 0.83 ) }
    dend_17 { pt3dadd( -0.583677, -26.4075, 2.44562, 0.83 ) }
    dend_17 { pt3dadd( -0.0212782, -28.8427, 1.45086, 0.83 ) }
    dend_17 { pt3dadd( 0.374521, -30.9632, 0.487456, 0.55 ) }
    dend_17 { pt3dadd( 0.690284, -32.6549, -0.281131, 0.55 ) }
    dend_17 { pt3dadd( 1.36145, -36.2508, -1.91479, 0.83 ) }
    dend_17 { pt3dadd( 2.17553, -40.6123, -3.89632, 0.55 ) }
    dend_17 { pt3dadd( 2.67128, -42.9067, -4.94588, 0.83 ) }
    dend_17 { pt3dadd( 3.74291, -46.6045, -6.6963, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.609748, -26.1388, 2.54092, 0.55 ) }
    dend_14 { pt3dadd( -2.55236, -26.6524, 1.22602, 0.55 ) }
    dend_14 { pt3dadd( -4.6375, -27.2036, -0.185358, 0.55 ) }
    dend_14 { pt3dadd( -7.09904, -27.8543, -1.85151, 0.55 ) }
    dend_14 { pt3dadd( -10.0882, -28.6445, -3.87475, 0.55 ) }
    dend_14 { pt3dadd( -11.7844, -29.0929, -5.02287, 0.55 ) }
    dend_14 { pt3dadd( -12.1251, -29.183, -5.25351, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -0.403579, -116.735, 87.8297, 0.55 ) }
    dend_7 { pt3dadd( 0.503696, -125.017, 93.7944, 0.55 ) }
    dend_7 { pt3dadd( 2.71684, -133.792, 98.6017, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.403579, -116.735, 87.8297, 0.55 ) }
    dend_4 { pt3dadd( -0.397535, -125.802, 93.1208, 0.55 ) }
    dend_4 { pt3dadd( -0.807933, -134.637, 98.7766, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -39.3945, 50.9133, -15.0553, 0.28 ) }
    dend_59 { pt3dadd( -40.3476, 53.029, -13.5136, 0.28 ) }
    dend_59 { pt3dadd( -40.691, 53.8437, -12.8508, 0.55 ) }
    dend_59 { pt3dadd( -41.6565, 56.2089, -10.8926, 0.28 ) }
    dend_59 { pt3dadd( -42.1569, 57.3643, -10.0223, 0.55 ) }
    dend_59 { pt3dadd( -43.5504, 60.4781, -7.75757, 0.28 ) }
    dend_59 { pt3dadd( -44.9666, 63.6428, -5.45573, 0.55 ) }
    dend_59 { pt3dadd( -47.3271, 68.6613, -1.56233, 0.28 ) }
    dend_59 { pt3dadd( -47.8286, 69.7374, -0.733858, 0.55 ) }
    dend_59 { pt3dadd( -48.9319, 72.2162, 0.991918, 0.28 ) }
    dend_59 { pt3dadd( -49.3551, 73.2332, 1.66016, 0.55 ) }
    dend_59 { pt3dadd( -54.958, 80.5482, 7.99101, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -61.6351, 88.6835, 11.7612, 0.55 ) }
    dend_59 { pt3dadd( -66.9031, 97.2259, 16.6863, 0.55 ) }
    dend_59 { pt3dadd( -70.6536, 106.88, 20.8954, 0.55 ) }
    dend_59 { pt3dadd( -75.707, 116.118, 24.6511, 0.55 ) }
    dend_59 { pt3dadd( -81.6387, 123.992, 29.9232, 0.55 ) }
    dend_59 { pt3dadd( -86.6638, 131.235, 36.7986, 0.55 ) }
    dend_59 { pt3dadd( -90.5264, 137.539, 45.1845, 0.55 ) }
    dend_59 { pt3dadd( -94.41, 144.403, 53.1083, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -39.3945, 50.9133, -15.0553, 0.55 ) }
    dend_58 { pt3dadd( -41.4733, 51.4629, -12.2897, 0.55 ) }
    dend_58 { pt3dadd( -42.5584, 51.7005, -10.8273, 0.28 ) }
    dend_58 { pt3dadd( -43.3658, 51.8772, -9.73911, 0.55 ) }
    dend_58 { pt3dadd( -44.0388, 52.0245, -8.83212, 0.28 ) }
    dend_58 { pt3dadd( -44.5102, 52.1277, -8.19684, 0.55 ) }
    dend_58 { pt3dadd( -45.81, 52.4123, -6.44507, 0.28 ) }
    dend_58 { pt3dadd( -46.7644, 52.4391, -5.3491, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -126.447, -65.5188, -46.8952, 0.55 ) }
    dend_54 { pt3dadd( -131.548, -75.7207, -47.9591, 0.55 ) }
    dend_54 { pt3dadd( -136.734, -85.9324, -47.7261, 0.55 ) }
    dend_54 { pt3dadd( -140.643, -96.5965, -49.2192, 0.55 ) }
    dend_54 { pt3dadd( -145.98, -106.727, -49.578, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -126.447, -65.5188, -46.8952, 0.55 ) }
    dend_53 { pt3dadd( -129.955, -73.123, -54.6939, 0.55 ) }
    dend_53 { pt3dadd( -132.425, -79.6902, -63.7341, 0.55 ) }
    dend_53 { pt3dadd( -136.316, -87.0322, -71.6026, 0.55 ) }
    dend_53 { pt3dadd( -142.28, -92.26, -79.8517, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -124.102, -55.5964, -46.2555, 0.55 ) }
    dend_51 { pt3dadd( -127.767, -60.6887, -54.8747, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -124.102, -55.5964, -46.2555, 0.55 ) }
    dend_50 { pt3dadd( -128.872, -66.1315, -47.4979, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 94.8868, -69.7006, -107.258, 0.28 ) }
    dend_41 { pt3dadd( 98.0941, -71.3213, -108.832, 0.28 ) }
    dend_41 { pt3dadd( 99.584, -72.074, -109.564, 0.55 ) }
    dend_41 { pt3dadd( 102.426, -73.5096, -110.958, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 94.8868, -69.7006, -107.258, 0.55 ) }
    dend_40 { pt3dadd( 94.4725, -71.1622, -108.708, 0.55 ) }
    dend_40 { pt3dadd( 93.644, -74.0858, -111.607, 0.28 ) }
    dend_40 { pt3dadd( 93.3741, -75.0381, -112.552, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 83.4965, -70.0211, -103.31, 0.28 ) }
    dend_38 { pt3dadd( 84.4819, -72.8199, -106.889, 0.28 ) }
    dend_38 { pt3dadd( 84.9698, -74.2058, -108.661, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 83.4965, -70.0211, -103.31, 0.55 ) }
    dend_37 { pt3dadd( 82.0928, -70.5948, -102.705, 0.55 ) }
    dend_37 { pt3dadd( 78.1782, -72.1944, -101.016, 0.28 ) }
    dend_37 { pt3dadd( 77.2483, -72.5744, -100.615, 0.55 ) }
    dend_37 { pt3dadd( 74.7045, -73.6139, -99.5174, 0.28 ) }
    dend_37 { pt3dadd( 73.0647, -74.284, -98.8101, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 3.74291, -46.6045, -6.6963, 0.83 ) }
    dend_23 { pt3dadd( 3.69461, -46.9075, -6.74477, 0.83 ) }
    dend_23 { pt3dadd( 3.18013, -50.8886, -7.33481, 0.83 ) }
    dend_23 { pt3dadd( 2.72603, -53.8569, -7.461, 0.83 ) }
    dend_23 { pt3dadd( 2.33184, -56.7247, -7.22307, 0.83 ) }
    dend_23 { pt3dadd( 1.89588, -60.5505, -6.59692, 0.83 ) }
    dend_23 { pt3dadd( 1.40945, -64.9578, -5.67079, 0.83 ) }
    dend_23 { pt3dadd( 1.05212, -69.9049, -4.45426, 0.83 ) }
    dend_23 { pt3dadd( 0.851471, -74.7306, -3.10545, 0.83 ) }
    dend_23 { pt3dadd( 0.228224, -80.5939, -1.29867, 0.83 ) }
    dend_23 { pt3dadd( -0.270563, -83.2548, -0.486687, 0.83 ) }
    dend_23 { pt3dadd( -0.736072, -85.2433, 0.0316834, 0.83 ) }
    dend_23 { pt3dadd( -1.74582, -89.0404, 1.01841, 0.83 ) }
    dend_23 { pt3dadd( -2.71586, -92.4345, 1.70077, 0.83 ) }
    dend_23 { pt3dadd( -5.02924, -99.6494, 2.25392, 0.83 ) }
    dend_23 { pt3dadd( -6.60939, -103.553, 2.12038, 0.83 ) }
    dend_23 { pt3dadd( -8.2481, -107.126, 1.79019, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.74291, -46.6045, -6.6963, 0.55 ) }
    dend_18 { pt3dadd( 2.94586, -48.3199, -5.99308, 0.55 ) }
    dend_18 { pt3dadd( 2.42283, -49.5695, -5.39646, 0.55 ) }
    dend_18 { pt3dadd( 2.16398, -50.3775, -4.96832, 0.55 ) }
    dend_18 { pt3dadd( 1.89423, -51.6593, -4.24781, 0.55 ) }
    dend_18 { pt3dadd( 1.52716, -54.2182, -2.745, 0.55 ) }
    dend_18 { pt3dadd( 1.38994, -56.1681, -1.43578, 0.55 ) }
    dend_18 { pt3dadd( 1.39967, -57.7431, -0.262866, 0.55 ) }
    dend_18 { pt3dadd( 1.46082, -59.3365, 1.03274, 0.55 ) }
    dend_18 { pt3dadd( 1.55218, -60.6614, 2.16613, 0.28 ) }
    dend_18 { pt3dadd( 1.72694, -61.7529, 3.22012, 0.55 ) }
    dend_18 { pt3dadd( 2.2067, -63.7522, 5.37452, 0.55 ) }
    dend_18 { pt3dadd( 2.54463, -64.9779, 6.83814, 0.55 ) }
    dend_18 { pt3dadd( 2.72373, -65.6631, 7.65837, 0.55 ) }
    dend_18 { pt3dadd( 2.87603, -66.4629, 8.62341, 0.83 ) }
    dend_18 { pt3dadd( 3.20033, -68.8206, 11.3828, 0.28 ) }
    dend_18 { pt3dadd( 3.2931, -69.5996, 12.2796, 0.55 ) }
    dend_18 { pt3dadd( 3.46013, -71.0086, 13.8331, 0.28 ) }
    dend_18 { pt3dadd( 3.5344, -71.4451, 14.3353, 0.55 ) }
    dend_18 { pt3dadd( 3.73626, -72.4767, 15.4591, 0.28 ) }
    dend_18 { pt3dadd( 3.82354, -73.0609, 16.0636, 0.55 ) }
    dend_18 { pt3dadd( 3.66058, -74.9107, 17.7359, 0.55 ) }
    dend_18 { pt3dadd( 5.57109, -80.209, 22.8153, 0.55 ) }
    dend_18 { pt3dadd( 7.98476, -85.3343, 27.8581, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -12.1251, -29.183, -5.25351, 0.55 ) }
    dend_16 { pt3dadd( -14.16, -29.8479, -7.51868, 0.55 ) }
    dend_16 { pt3dadd( -14.7535, -29.9907, -8.16274, 0.55 ) }
    dend_16 { pt3dadd( -16.2508, -30.3431, -9.72107, 0.55 ) }
    dend_16 { pt3dadd( -19.5236, -30.9972, -12.999, 0.28 ) }
    dend_16 { pt3dadd( -20.0119, -31.0796, -13.4565, 0.55 ) }
    dend_16 { pt3dadd( -22.0694, -31.4715, -15.278, 0.55 ) }
    dend_16 { pt3dadd( -24.9162, -31.9797, -17.4989, 0.55 ) }
    dend_16 { pt3dadd( -26.0014, -32.1378, -18.3257, 0.28 ) }
    dend_16 { pt3dadd( -26.9449, -32.2074, -19.0025, 0.28 ) }
    dend_16 { pt3dadd( -28.5702, -32.2718, -19.946, 0.55 ) }
    dend_16 { pt3dadd( -30.5291, -32.2682, -21.1784, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -32.3057, -32.1184, -22.3718, 0.55 ) }
    dend_16 { pt3dadd( -33.6593, -31.8872, -23.2789, 0.55 ) }
    dend_16 { pt3dadd( -34.5736, -31.6527, -23.9414, 0.55 ) }
    dend_16 { pt3dadd( -37.2289, -30.8483, -25.9841, 0.55 ) }
    dend_16 { pt3dadd( -39.99, -29.7989, -28.0976, 0.55 ) }
    dend_16 { pt3dadd( -41.1203, -29.2961, -28.9469, 0.28 ) }
    dend_16 { pt3dadd( -42.1961, -28.8387, -29.7734, 0.55 ) }
    dend_16 { pt3dadd( -44.4109, -28.0572, -31.4117, 0.28 ) }
    dend_16 { pt3dadd( -45.1614, -27.8157, -31.9529, 0.83 ) }
    dend_16 { pt3dadd( -46.5684, -27.3371, -32.8648, 0.28 ) }
    dend_16 { pt3dadd( -47.6091, -27.0565, -33.3755, 0.55 ) }
    dend_16 { pt3dadd( -49.1335, -26.6989, -34.0807, 0.28 ) }
    dend_16 { pt3dadd( -49.7406, -26.5466, -34.342, 0.55 ) }
    dend_16 { pt3dadd( -50.8745, -26.2793, -34.7629, 0.55 ) }
    dend_16 { pt3dadd( -52.5581, -25.6998, -35.3493, 0.55 ) }
    dend_16 { pt3dadd( -53.6481, -25.247, -35.6756, 0.28 ) }
    dend_16 { pt3dadd( -54.5086, -24.7651, -35.877, 0.55 ) }
    dend_16 { pt3dadd( -55.4963, -24.0696, -36.1316, 0.28 ) }
    dend_16 { pt3dadd( -55.6558, -23.9421, -36.1808, 0.55 ) }
    dend_16 { pt3dadd( -57.108, -22.7563, -36.9205, 0.28 ) }
    dend_16 { pt3dadd( -58.1517, -21.8846, -37.5854, 0.55 ) }
    dend_16 { pt3dadd( -59.4981, -20.6552, -38.6874, 0.83 ) }
    dend_16 { pt3dadd( -60.5942, -19.6277, -39.7423, 0.28 ) }
    dend_16 { pt3dadd( -60.8762, -19.3678, -40.0475, 0.55 ) }
    dend_16 { pt3dadd( -63.0388, -17.4248, -42.5269, 0.28 ) }
    dend_16 { pt3dadd( -63.4164, -17.0963, -43.0043, 0.55 ) }
    dend_16 { pt3dadd( -64.5073, -16.048, -44.505, 0.28 ) }
    dend_16 { pt3dadd( -64.789, -15.7785, -44.8948, 0.55 ) }
    dend_16 { pt3dadd( -65.5138, -15.0722, -45.8355, 0.28 ) }
    dend_16 { pt3dadd( -66.0284, -14.561, -46.463, 0.55 ) }
    dend_16 { pt3dadd( -67.1914, -13.3985, -47.6534, 0.28 ) }
    dend_16 { pt3dadd( -67.8968, -12.7624, -48.3225, 0.55 ) }
    dend_16 { pt3dadd( -69.4327, -11.5038, -49.6448, 0.28 ) }
    dend_16 { pt3dadd( -69.8971, -11.1564, -50.0275, 0.55 ) }
    dend_16 { pt3dadd( -70.6414, -10.6713, -50.591, 0.28 ) }
    dend_16 { pt3dadd( -71.2743, -10.2588, -51.0337, 0.55 ) }
    dend_16 { pt3dadd( -72.5984, -9.41295, -51.863, 0.28 ) }
    dend_16 { pt3dadd( -73.0002, -9.16647, -52.0973, 0.55 ) }
    dend_16 { pt3dadd( -75.9797, -7.25792, -53.6906, 0.28 ) }
    dend_16 { pt3dadd( -77.0115, -6.4998, -54.1561, 0.55 ) }
    dend_16 { pt3dadd( -78.8356, -5.0391, -54.8633, 0.28 ) }
    dend_16 { pt3dadd( -79.6507, -4.34244, -55.1569, 0.55 ) }
    dend_16 { pt3dadd( -81.5263, -2.74886, -55.7058, 0.28 ) }
    dend_16 { pt3dadd( -82.2233, -2.1946, -55.8698, 0.55 ) }
    dend_16 { pt3dadd( -84.8028, -0.422687, -56.2859, 0.28 ) }
    dend_16 { pt3dadd( -85.911, 0.173229, -56.4342, 0.55 ) }
    dend_16 { pt3dadd( -87.5536, 0.756215, -56.5997, 0.55 ) }
    dend_16 { pt3dadd( -88.5787, 1.05289, -56.67, 0.55 ) }
    dend_16 { pt3dadd( -90.6796, 1.61814, -56.6439, 0.28 ) }
    dend_16 { pt3dadd( -92.7486, 2.16468, -56.4834, 0.28 ) }
    dend_16 { pt3dadd( -94.4693, 2.63025, -56.2991, 0.55 ) }
    dend_16 { pt3dadd( -96.5217, 3.39698, -55.8559, 0.28 ) }
    dend_16 { pt3dadd( -97.4987, 3.91505, -55.506, 0.55 ) }
    dend_16 { pt3dadd( -99.7097, 5.56021, -54.4582, 0.28 ) }
    dend_16 { pt3dadd( -100.752, 6.67642, -53.631, 0.55 ) }
    dend_16 { pt3dadd( -101.366, 7.53708, -52.9231, 0.28 ) }
    dend_16 { pt3dadd( -102.012, 8.51823, -51.896, 0.55 ) }
    dend_16 { pt3dadd( -102.778, 9.79547, -50.4679, 0.28 ) }
    dend_16 { pt3dadd( -103.078, 10.2542, -49.9295, 0.55 ) }
    dend_16 { pt3dadd( -104.764, 12.3857, -47.4061, 0.28 ) }
    dend_16 { pt3dadd( -105.345, 13.0712, -46.5605, 0.55 ) }
    dend_16 { pt3dadd( -106.732, 14.626, -44.4922, 0.28 ) }
    dend_16 { pt3dadd( -107.49, 15.4576, -43.3677, 0.55 ) }
    dend_16 { pt3dadd( -108.114, 16.1397, -42.445, 0.55 ) }
    dend_16 { pt3dadd( -108.871, 16.9456, -41.3695, 0.28 ) }
    dend_16 { pt3dadd( -109.293, 17.356, -40.9009, 0.55 ) }
    dend_16 { pt3dadd( -110.727, 18.7899, -39.4506, 0.28 ) }
    dend_16 { pt3dadd( -111.443, 19.6546, -38.6822, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.1251, -29.183, -5.25351, 0.55 ) }
    dend_15 { pt3dadd( -11.8794, -29.4083, -6.04994, 0.55 ) }
    dend_15 { pt3dadd( -11.5883, -29.5483, -6.85058, 0.55 ) }
    dend_15 { pt3dadd( -11.1596, -29.6606, -7.83331, 0.55 ) }
    dend_15 { pt3dadd( -10.7623, -29.6919, -8.62285, 0.55 ) }
    dend_15 { pt3dadd( -7.67523, -29.4023, -13.632, 0.55 ) }
    dend_15 { pt3dadd( -6.95776, -29.2044, -14.7821, 0.55 ) }
    dend_15 { pt3dadd( -5.89423, -28.7848, -16.5145, 0.55 ) }
    dend_15 { pt3dadd( -5.13746, -28.4464, -17.749, 0.55 ) }
    dend_15 { pt3dadd( -4.36571, -28.05, -18.9375, 0.28 ) }
    dend_15 { pt3dadd( -3.09178, -27.345, -20.7091, 0.55 ) }
    dend_15 { pt3dadd( -1.07171, -26.2252, -23.2422, 0.28 ) }
    dend_15 { pt3dadd( -0.944435, -26.1703, -23.5051, 0.55 ) }
    dend_15 { pt3dadd( -0.586507, -26.0801, -25.4016, 0.28 ) }
    dend_15 { pt3dadd( -0.570162, -26.0596, -26.7113, 0.55 ) }
    dend_15 { pt3dadd( -0.701577, -26.1094, -28.1248, 0.55 ) }
    dend_15 { pt3dadd( -0.997977, -26.3175, -30.6535, 0.55 ) }
    dend_15 { pt3dadd( -1.57309, -26.7628, -35.6145, 0.55 ) }
    dend_15 { pt3dadd( -1.9078, -27.1073, -38.9484, 0.55 ) }
    dend_15 { pt3dadd( -1.995, -27.2422, -40.1002, 0.55 ) }
    dend_15 { pt3dadd( -2.379, -28.1033, -47.6809, 0.55 ) }
    dend_15 { pt3dadd( -2.39145, -28.3233, -49.7368, 0.55 ) }
    dend_15 { pt3dadd( -2.31261, -28.4626, -50.8886, 0.55 ) }
    dend_15 { pt3dadd( -1.90939, -28.8928, -53.5471, 0.55 ) }
    dend_15 { pt3dadd( -0.631482, -30.3042, -59.8348, 0.55 ) }
    dend_15 { pt3dadd( -0.227655, -30.7645, -61.5056, 0.28 ) }
    dend_15 { pt3dadd( 0.0668609, -31.0801, -62.4327, 0.55 ) }
    dend_15 { pt3dadd( 0.518818, -31.6094, -63.7926, 0.28 ) }
    dend_15 { pt3dadd( 0.736205, -31.8909, -64.3297, 0.55 ) }
    dend_15 { pt3dadd( 1.7232, -33.0331, -65.6635, 0.28 ) }
    dend_15 { pt3dadd( 2.71146, -34.3478, -65.9482, 0.55 ) }
    dend_15 { pt3dadd( 3.29275, -35.2488, -66.0559, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 3.81763, -36.2058, -66.0515, 0.55 ) }
    dend_15 { pt3dadd( 4.25393, -37.2122, -65.9725, 0.28 ) }
    dend_15 { pt3dadd( 4.42485, -37.7203, -65.9408, 0.55 ) }
    dend_15 { pt3dadd( 4.80342, -39.0309, -65.7979, 0.28 ) }
    dend_15 { pt3dadd( 4.87933, -39.4193, -65.8084, 0.55 ) }
    dend_15 { pt3dadd( 5.28319, -41.6498, -65.9841, 0.28 ) }
    dend_15 { pt3dadd( 5.47292, -42.6933, -66.1947, 0.55 ) }
    dend_15 { pt3dadd( 5.90711, -44.9487, -66.8904, 0.28 ) }
    dend_15 { pt3dadd( 6.08197, -45.7898, -67.2374, 0.55 ) }
    dend_15 { pt3dadd( 6.72382, -48.5792, -68.5484, 0.28 ) }
    dend_15 { pt3dadd( 6.87869, -49.2593, -68.8939, 0.55 ) }
    dend_15 { pt3dadd( 7.30256, -51.4053, -70.0479, 0.28 ) }
    dend_15 { pt3dadd( 7.38271, -51.9012, -70.2786, 0.55 ) }
    dend_15 { pt3dadd( 7.55746, -53.203, -70.8703, 0.28 ) }
    dend_15 { pt3dadd( 7.65207, -53.9627, -71.2822, 0.55 ) }
    dend_15 { pt3dadd( 7.75761, -54.716, -71.7455, 0.55 ) }
    dend_15 { pt3dadd( 7.97097, -56.2187, -72.6596, 0.28 ) }
    dend_15 { pt3dadd( 8.16102, -57.1687, -73.3377, 0.55 ) }
    dend_15 { pt3dadd( 8.9486, -59.6471, -75.5928, 0.28 ) }
    dend_15 { pt3dadd( 9.28854, -60.4832, -76.5204, 0.55 ) }
    dend_15 { pt3dadd( 9.54419, -61.0253, -77.1554, 0.28 ) }
    dend_15 { pt3dadd( 9.82567, -61.534, -77.7958, 0.55 ) }
    dend_15 { pt3dadd( 10.7592, -62.9994, -79.7523, 0.28 ) }
    dend_15 { pt3dadd( 11.4816, -64.13, -81.1975, 0.55 ) }
    dend_15 { pt3dadd( 12.759, -66.2239, -83.4778, 0.28 ) }
    dend_15 { pt3dadd( 13.1653, -66.8777, -84.193, 0.55 ) }
    dend_15 { pt3dadd( 14.0148, -68.0948, -85.4539, 0.28 ) }
    dend_15 { pt3dadd( 14.3166, -68.4963, -85.8384, 0.55 ) }
    dend_15 { pt3dadd( 14.8666, -69.1417, -86.3313, 0.28 ) }
    dend_15 { pt3dadd( 15.3796, -69.6928, -86.7118, 0.55 ) }
    dend_15 { pt3dadd( 16.8648, -71.0938, -87.5677, 0.28 ) }
    dend_15 { pt3dadd( 18.6043, -72.6165, -88.5241, 0.28 ) }
    dend_15 { pt3dadd( 19.5234, -73.3392, -88.9386, 0.28 ) }
    dend_15 { pt3dadd( 20.4379, -74.0356, -89.4241, 0.55 ) }
    dend_15 { pt3dadd( 21.7919, -74.9819, -90.1472, 0.28 ) }
    dend_15 { pt3dadd( 22.4021, -75.3922, -90.4551, 0.83 ) }
    dend_15 { pt3dadd( 23.9744, -76.4612, -91.1706, 0.28 ) }
    dend_15 { pt3dadd( 24.6375, -76.9428, -91.522, 0.55 ) }
    dend_15 { pt3dadd( 27.4647, -79.1885, -93.2098, 0.28 ) }
    dend_15 { pt3dadd( 28.8258, -80.3325, -94.1861, 0.28 ) }
    dend_15 { pt3dadd( 29.7866, -81.1646, -94.9753, 0.55 ) }
    dend_15 { pt3dadd( 30.312, -81.6647, -95.5127, 0.55 ) }
    dend_15 { pt3dadd( 31.6404, -83.0173, -97.0822, 0.28 ) }
    dend_15 { pt3dadd( 32.8302, -84.3615, -98.6112, 0.55 ) }
    dend_15 { pt3dadd( 33.8991, -85.6359, -99.9985, 0.28 ) }
    dend_15 { pt3dadd( 34.8279, -86.8091, -101.326, 0.55 ) }
    dend_15 { pt3dadd( 35.6031, -87.7645, -102.418, 0.28 ) }
    dend_15 { pt3dadd( 36.2807, -88.4758, -103.268, 0.55 ) }
    dend_15 { pt3dadd( 38.0012, -90.0577, -105.226, 0.28 ) }
    dend_15 { pt3dadd( 38.8949, -90.8581, -106.17, 0.55 ) }
    dend_15 { pt3dadd( 40.2638, -92.0656, -107.523, 0.28 ) }
    dend_15 { pt3dadd( 41.4108, -93.0108, -108.601, 0.55 ) }
    dend_15 { pt3dadd( 44.1371, -95.0695, -111.145, 0.28 ) }
    dend_15 { pt3dadd( 45.2309, -95.8264, -112.283, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 2.71684, -133.792, 98.6017, 0.55 ) }
    dend_9 { pt3dadd( 3.40434, -139.852, 101.519, 0.55 ) }
    dend_9 { pt3dadd( 4.70957, -146.343, 102.895, 0.55 ) }
    dend_9 { pt3dadd( 5.64324, -152.631, 105.2, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.71684, -133.792, 98.6017, 0.55 ) }
    dend_8 { pt3dadd( 4.25385, -140.582, 104.201, 0.55 ) }
    dend_8 { pt3dadd( 4.15807, -146.681, 110.73, 0.55 ) }
    dend_8 { pt3dadd( 3.50819, -151.366, 118.311, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -0.807933, -134.637, 98.7766, 0.55 ) }
    dend_6 { pt3dadd( -0.128301, -142.165, 102.972, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.807933, -134.637, 98.7766, 0.55 ) }
    dend_5 { pt3dadd( -1.78748, -142.981, 104.251, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -8.2481, -107.126, 1.79019, 0.83 ) }
    dend_25 { pt3dadd( -7.84665, -111.334, 1.51594, 0.83 ) }
    dend_25 { pt3dadd( -7.21418, -114.923, 1.3109, 0.83 ) }
    dend_25 { pt3dadd( -6.58549, -118.49, 1.10709, 0.83 ) }
    dend_25 { pt3dadd( -5.98844, -121.878, 0.913539, 0.83 ) }
    dend_25 { pt3dadd( -5.06835, -127.098, 0.615256, 0.83 ) }
    dend_25 { pt3dadd( -4.15491, -132.281, 0.31913, 0.83 ) }
    dend_25 { pt3dadd( -3.05903, -135.782, 0.166474, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -8.2481, -107.126, 1.79019, 0.55 ) }
    dend_24 { pt3dadd( -7.49722, -108.657, 1.42881, 0.55 ) }
    dend_24 { pt3dadd( -6.98827, -109.84, 0.971611, 0.55 ) }
    dend_24 { pt3dadd( -6.67437, -110.705, 0.570653, 0.55 ) }
    dend_24 { pt3dadd( -6.48315, -111.695, 0.0375133, 0.83 ) }
    dend_24 { pt3dadd( -6.37837, -112.803, -0.667455, 0.55 ) }
    dend_24 { pt3dadd( -6.27587, -113.886, -1.35701, 0.83 ) }
    dend_24 { pt3dadd( -6.26238, -115.047, -2.18287, 0.55 ) }
    dend_24 { pt3dadd( -6.27731, -115.717, -2.72029, 0.83 ) }
    dend_24 { pt3dadd( -6.46891, -117.863, -4.58696, 0.55 ) }
    dend_24 { pt3dadd( -6.78747, -119.524, -6.10398, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.98476, -85.3343, 27.8581, 0.55 ) }
    dend_20 { pt3dadd( 8.80403, -93.3344, 35.0062, 0.55 ) }
    dend_20 { pt3dadd( 9.2739, -100.078, 43.3772, 0.55 ) }
    dend_20 { pt3dadd( 9.93368, -105.759, 52.4909, 0.55 ) }
    dend_20 { pt3dadd( 10.5389, -110.075, 62.328, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 7.98476, -85.3343, 27.8581, 0.55 ) }
    dend_19 { pt3dadd( 8.46053, -92.6534, 34.5679, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -3.05903, -135.782, 0.166474, 0.55 ) }
    dend_27 { pt3dadd( -2.77211, -138.21, 0.442111, 0.55 ) }
    dend_27 { pt3dadd( -2.30157, -141.325, 0.753904, 0.55 ) }
    dend_27 { pt3dadd( -1.87102, -144.264, 1.04032, 0.55 ) }
    dend_27 { pt3dadd( -1.60291, -146.349, 1.25112, 0.55 ) }
    dend_27 { pt3dadd( -1.19238, -150.059, 1.63858, 0.55 ) }
    dend_27 { pt3dadd( -0.203395, -160.479, 2.47213, 0.55 ) }
    dend_27 { pt3dadd( 0.035364, -164.011, 2.61334, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 0.0979883, -166.491, 2.64969, 0.55 ) }
    dend_27 { pt3dadd( -0.0206555, -169.305, 2.57084, 0.55 ) }
    dend_27 { pt3dadd( -0.299435, -171.457, 2.45733, 0.55 ) }
    dend_27 { pt3dadd( -1.07246, -176.483, 1.96467, 0.55 ) }
    dend_27 { pt3dadd( -1.72175, -180.285, 1.70872, 0.55 ) }
    dend_27 { pt3dadd( -2.05241, -182.795, 1.51259, 0.55 ) }
    dend_27 { pt3dadd( -2.6206, -189.335, 1.17277, 0.55 ) }
    dend_27 { pt3dadd( -2.8405, -193.748, 1.05542, 0.55 ) }
    dend_27 { pt3dadd( -2.82729, -199.472, 1.02024, 0.55 ) }
    dend_27 { pt3dadd( -2.3337, -206.025, 1.12304, 0.55 ) }
    dend_27 { pt3dadd( -1.6836, -210.445, 1.13447, 0.55 ) }
    dend_27 { pt3dadd( -1.21245, -213.071, 1.11577, 0.55 ) }
    dend_27 { pt3dadd( -0.802752, -215.486, 1.1347, 0.55 ) }
    dend_27 { pt3dadd( -0.387376, -218.536, 1.05216, 0.55 ) }
    dend_27 { pt3dadd( 0.144418, -225.832, 0.71754, 0.55 ) }
    dend_27 { pt3dadd( 0.298305, -228.655, 0.458818, 0.55 ) }
    dend_27 { pt3dadd( 0.419469, -231.789, 0.227779, 0.55 ) }
    dend_27 { pt3dadd( 0.563755, -236.489, -0.0953989, 0.55 ) }
    dend_27 { pt3dadd( 0.634541, -240.088, -0.179861, 0.55 ) }
    dend_27 { pt3dadd( 0.579349, -243.484, -0.103116, 0.55 ) }
    dend_27 { pt3dadd( 0.466181, -246.707, 0.0994724, 0.55 ) }
    dend_27 { pt3dadd( 0.373682, -249.851, 0.365597, 0.55 ) }
    dend_27 { pt3dadd( 0.293662, -252.089, 0.532989, 0.55 ) }
    dend_27 { pt3dadd( 0.0592349, -255.738, 0.730644, 0.55 ) }
    dend_27 { pt3dadd( -0.548441, -260.081, 0.875593, 0.55 ) }
    dend_27 { pt3dadd( -0.963918, -262.18, 0.824998, 0.55 ) }
    dend_27 { pt3dadd( -1.4474, -264.011, 0.699087, 0.55 ) }
    dend_27 { pt3dadd( -2.47853, -267.461, 0.221506, 0.55 ) }
    dend_27 { pt3dadd( -3.19811, -269.639, -0.0884489, 0.55 ) }
    dend_27 { pt3dadd( -3.97771, -272.338, -0.452104, 0.55 ) }
    dend_27 { pt3dadd( -4.45137, -274.239, -0.588952, 0.55 ) }
    dend_27 { pt3dadd( -5.54425, -279.193, -0.774421, 0.55 ) }
    dend_27 { pt3dadd( -6.15917, -282.92, -0.708515, 0.55 ) }
    dend_27 { pt3dadd( -6.72267, -288.727, -0.304721, 0.55 ) }
    dend_27 { pt3dadd( -6.73157, -292.518, 0.0409933, 0.55 ) }
    dend_27 { pt3dadd( -6.63849, -296.508, 0.489005, 0.28 ) }
    dend_27 { pt3dadd( -6.55927, -298.114, 0.733974, 0.28 ) }
    dend_27 { pt3dadd( -6.05999, -302.046, 1.50187, 0.28 ) }
    dend_27 { pt3dadd( -5.35866, -305.703, 2.36786, 0.28 ) }
    dend_27 { pt3dadd( -3.80664, -310.63, 3.33782, 0.28 ) }
    dend_27 { pt3dadd( -2.14882, -321.583, 3.05464, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -3.05903, -135.782, 0.166474, 0.55 ) }
    dend_26 { pt3dadd( -1.79336, -136.45, -0.118712, 0.55 ) }
    dend_26 { pt3dadd( 0.847245, -138.056, -0.520409, 0.55 ) }
    dend_26 { pt3dadd( 3.14177, -139.588, -0.774195, 0.28 ) }
    dend_26 { pt3dadd( 5.61986, -141.306, -0.975917, 0.55 ) }
    dend_26 { pt3dadd( 7.18311, -142.394, -0.907339, 0.28 ) }
    dend_26 { pt3dadd( 9.97204, -144.344, -0.560656, 0.55 ) }
    dend_26 { pt3dadd( 11.2196, -145.333, -0.116994, 0.28 ) }
    dend_26 { pt3dadd( 11.6951, -145.693, 0.113649, 0.28 ) }
    dend_26 { pt3dadd( 12.5338, -146.228, 0.518827, 0.55 ) }
    dend_26 { pt3dadd( 15.7849, -148.06, 1.87121, 0.28 ) }
    dend_26 { pt3dadd( 17.1643, -148.791, 2.39641, 0.55 ) }
    dend_26 { pt3dadd( 21.2371, -150.933, 3.55727, 0.28 ) }
    dend_26 { pt3dadd( 23.4245, -152.018, 4.04055, 0.28 ) }
    dend_26 { pt3dadd( 26.1071, -153.397, 4.49593, 0.55 ) }
    dend_26 { pt3dadd( 30.0006, -155.507, 4.85283, 0.28 ) }
    dend_26 { pt3dadd( 30.5127, -155.787, 4.84785, 0.55 ) }
    dend_26 { pt3dadd( 32.9847, -157.155, 4.66002, 0.28 ) }
    dend_26 { pt3dadd( 33.2009, -157.28, 4.61926, 0.55 ) }
    dend_26 { pt3dadd( 35.0864, -158.66, 4.32429, 0.28 ) }
    dend_26 { pt3dadd( 35.991, -159.391, 4.2409, 0.55 ) }
    dend_26 { pt3dadd( 43.5294, -164.932, 3.60984, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 10.5389, -110.075, 62.328, 0.55 ) }
    dend_22 { pt3dadd( 13.8618, -115.352, 73.4505, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 10.5389, -110.075, 62.328, 0.55 ) }
    dend_21 { pt3dadd( 9.47168, -117.075, 70.6309, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, axon_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, axon_1, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_5 = new SectionList()
    dend_43 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 9
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 7
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 9
    dend_20 nseg = 3
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_BP_31899e6d75_0_0


