// Cell: dSTUT214_L23_BP_5f35d83447_0_0
/*
{
  "id" : "dSTUT214_L23_BP_5f35d83447_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.645538, -11.2459, 12.662, 1.66", "-1.28518, -13.7472, 14.7346, 1.66", "-2.38368, -18.0428, 18.2939, 1.39", "-6.75242, -35.1266, 32.4494, 1.11", "-7.5188, -38.1235, 34.9326, 1.11", "-8.48943, -41.9191, 38.0776, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.628961, 14.3239, 2.04154, 0.83", "0.632871, 16.4517, 2.96999, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.48943, -41.9191, 38.0776, 0.83", "-9.25169, -46.4389, 36.4955, 0.83", "-9.43318, -47.515, 36.1188, 0.83", "-9.89648, -50.2622, 35.1572, 0.83", "-10.1042, -51.4936, 34.7261, 0.83", "-10.5508, -54.142, 33.7991, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.48943, -41.9191, 38.0776, 0.83", "-8.44784, -43.0406, 38.2728, 0.83", "-8.40946, -44.0566, 38.434, 0.83", "-8.40184, -45.3901, 38.6248, 0.83", "-8.32542, -48.4363, 38.983, 0.83", "-8.22646, -50.949, 39.2426, 0.55", "-8.05392, -55.2123, 39.5888, 0.55", "-7.90931, -57.3288, 39.7834, 0.83", "-7.68833, -59.7461, 40.0124, 0.55", "-7.21669, -63.6862, 40.5125, 0.55", "-7.05958, -64.8099, 40.6707, 0.55", "-6.62491, -67.8561, 41.1177, 0.55", "-6.06981, -71.6947, 41.7804, 0.55", "-5.74183, -73.9927, 42.2036, 0.55", "-5.33668, -77.0542, 42.7942, 0.55", "-4.80647, -82.5769, 43.9065, 0.55", "-4.61094, -85.4977, 44.4774, 0.55", "-4.51119, -87.6813, 44.8695, 0.55", "-4.53056, -89.2024, 45.0713, 0.55", "-4.61609, -90.5389, 45.2161, 0.55", "-4.90735, -93.2241, 45.5585, 0.55", "-5.08479, -94.5695, 45.7394, 0.55", "-5.37167, -96.623, 46.1025, 0.55", "-5.76811, -99.3719, 46.6344, 0.55", "-6.39202, -103.34, 47.4603, 0.55", "-6.93435, -106.909, 48.2584, 0.55", "-7.44053, -110.023, 49.0192, 0.83", "-7.93885, -112.993, 49.8508, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.632871, 16.4517, 2.96999, 0.83", "0.116378, 25.4488, -1.27131, 0.83", "0.0596259, 27.8198, -2.30452, 0.83", "-0.0138016, 30.7258, -3.6001, 0.83", "-0.0339604, 33.1263, -4.60221, 0.83", "-0.0416795, 36.9649, -6.12515, 0.83", "0.0205199, 41.985, -8.00987, 0.83", "0.0499627, 45.5532, -9.0519, 0.83", "0.112096, 49.4141, -10.2498, 0.83", "0.219326, 53.3784, -11.6416, 0.55", "0.252752, 54.6338, -12.0898, 0.55", "0.275184, 56.7817, -12.8681, 0.55", "0.389617, 61.2663, -14.4154, 0.55", "0.442975, 64.5198, -15.4956, 0.55", "0.643472, 72.6729, -18.1962, 0.55", "0.686477, 76.3534, -19.5699, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.632871, 16.4517, 2.96999, 0.83", "1.66611, 19.4625, 4.13277, 0.83", "2.41472, 21.838, 5.13435, 0.83", "3.48783, 25.5853, 6.83966, 0.83", "4.48035, 29.1974, 8.51689, 0.83", "5.60423, 33.7704, 10.4371, 0.83", "6.44939, 37.2178, 11.7893, 0.83", "6.9922, 39.8261, 12.8131, 0.83", "7.55855, 42.6878, 13.8323, 0.83", "7.68062, 43.467, 14.0626, 0.83", "9.09464, 52.4259, 16.218, 0.83", "9.35762, 54.3306, 16.5448, 0.83", "9.69584, 56.9211, 16.849, 0.83", "9.96642, 59.1637, 17.0586, 0.83", "10.2393, 61.7648, 17.2548, 0.83", "10.609, 65.0501, 17.5062, 0.83", "10.9027, 68.436, 17.7467, 0.83", "11.1054, 70.3701, 17.8887, 0.83", "11.5019, 73.3609, 18.1105, 0.83", "11.8418, 76.3022, 18.3318, 0.83", "12.2549, 79.393, 18.5318, 0.83", "12.7916, 83.4325, 18.8375, 0.83", "13.1374, 86.0712, 19.1608, 0.83", "13.2988, 87.5316, 19.3789, 0.83", "13.4443, 89.1836, 19.7093, 0.83", "13.6491, 91.6275, 20.3463, 0.83", "13.7768, 95.2163, 21.5047, 0.55", "13.9564, 99.9232, 23.2221, 0.55", "13.9364, 101.309, 23.7468, 0.55", "13.8829, 104.222, 24.832, 0.55", "13.8294, 105.443, 25.2659, 0.55", "13.6916, 107.734, 26.0713, 0.55", "13.5981, 110.125, 26.8002, 0.55", "13.6261, 113.597, 27.6661, 0.55", "13.654, 115.885, 28.2015, 0.55", "13.6462, 117.968, 28.6173, 0.55", "13.7077, 120.57, 29.1318, 0.55", "13.9346, 123.28, 29.6264, 0.55", "14.3526, 126.975, 30.3649, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.5508, -54.142, 33.7991, 0.83", "-12.2353, -59.666, 36.0124, 0.83", "-13.5367, -64.0416, 37.559, 0.83", "-15.0702, -69.317, 39.1971, 0.83", "-16.3339, -73.6768, 40.4048, 0.83", "-17.1019, -76.3264, 41.1388, 0.83", "-18.0175, -79.4855, 42.0139, 0.83", "-18.581, -81.7678, 42.4916, 0.83", "-19.208, -84.3722, 42.9229, 0.83", "-19.899, -87.6968, 42.9857, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.5508, -54.142, 33.7991, 0.55", "-10.2948, -53.9896, 41.505, 0.55", "-9.78784, -53.7465, 49.7422, 0.55", "-9.53033, -53.623, 53.9265, 0.55", "-9.20599, -53.4674, 59.1967, 0.28", "-9.15241, -53.4417, 60.0674, 0.83", "-8.87133, -53.3069, 64.6347, 0.28", "-8.80331, -53.2313, 65.4129, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "0.686477, 76.3534, -19.5699, 0.55", "1.0335, 79.9341, -19.678, 0.55", "1.44992, 83.7192, -19.8841, 0.55", "1.73269, 86.3797, -20.0048, 0.55", "2.1849, 90.3749, -20.1481, 0.83", "2.50106, 93.2147, -20.2339, 0.55", "2.81517, 95.864, -20.2916, 0.55", "3.08069, 98.3415, -20.28, 1.11", "3.62329, 102.647, -20.3653, 0.55", "3.78089, 104.086, -20.4368, 0.55", "3.98159, 105.9, -20.5493, 1.11", "4.22713, 108.152, -20.7093, 0.55", "4.36246, 109.622, -20.8271, 1.11", "4.71579, 114.105, -21.1631, 0.55", "4.89569, 116.466, -21.5285, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "0.686477, 76.3534, -19.5699, 0.28", "1.33597, 79.0376, -22.2409, 0.28", "1.44462, 79.4401, -22.6236, 0.55", "2.4117, 83.0006, -25.8413, 0.28", "3.45994, 86.3248, -28.9795, 1.11", "4.08662, 88.0559, -30.684, 0.28", "4.08662, 88.0559, -30.684, 0.55", "4.9453, 90.1686, -32.2412, 0.28", "5.31314, 90.9803, -32.7261, 1.11", "7.22045, 94.5952, -33.6224, 0.55", "8.79521, 97.4164, -33.3053, 0.28", "11.348, 101.833, -32.1693, 1.11", "13.5331, 105.58, -30.7471, 0.28", "13.5845, 105.667, -30.6924, 0.55", "15.0516, 108.139, -28.617, 0.28", "15.172, 108.356, -28.3723, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-19.899, -87.6968, 42.9857, 0.83", "-19.6162, -93.5672, 44.873, 0.83", "-19.3928, -98.282, 46.7056, 0.83", "-19.2271, -100.489, 47.5715, 0.83", "-19.1428, -101.759, 48.1786, 0.83", "-18.9953, -105.233, 49.9282, 0.83", "-18.9302, -107.286, 50.8176, 0.83", "-18.791, -111.182, 52.1277, 0.83", "-18.5836, -113.885, 53.0371, 0.83", "-18.0132, -118.499, 54.4182, 0.83", "-17.6055, -120.873, 54.9634, 0.83", "-16.4931, -126.706, 55.7391, 0.83", "-15.5584, -131.908, 56.0959, 0.83", "-14.917, -136.206, 56.028, 0.83", "-14.607, -139.316, 55.8986, 0.83", "-14.5551, -139.943, 55.8528, 0.83", "-14.393, -143.542, 55.7846, 0.28", "-14.4115, -144.496, 55.8382, 0.83", "-14.6277, -146.954, 55.9215, 0.28", "-15.0734, -151.318, 56.0051, 0.28", "-15.1776, -152.255, 56.0586, 0.28", "-15.4872, -155.242, 56.2507, 0.83", "-15.694, -157.886, 56.4521, 0.28", "-15.8448, -160.006, 56.6418, 0.83", "-15.8946, -161.704, 56.8351, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-19.899, -87.6968, 42.9857, 0.55", "-22.2938, -92.2286, 41.5199, 0.55", "-23.3845, -94.1673, 40.9598, 0.55", "-25.7797, -98.2764, 39.894, 0.55", "-26.8468, -100.032, 39.4848, 0.55", "-27.9466, -101.736, 39.1378, 0.28", "-28.4381, -102.498, 38.9827, 0.55", "-29.7294, -104.25, 38.7729, 0.28", "-30.5853, -105.386, 38.6707, 0.55", "-31.6569, -106.704, 38.6912, 0.28", "-33.3592, -108.677, 38.72, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L23_BP_5f35d83447_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.645538, -11.2459, 12.662, 1.66 ) }
    dend_5 { pt3dadd( -1.28518, -13.7472, 14.7346, 1.66 ) }
    dend_5 { pt3dadd( -2.38368, -18.0428, 18.2939, 1.39 ) }
    dend_5 { pt3dadd( -6.75242, -35.1266, 32.4494, 1.11 ) }
    dend_5 { pt3dadd( -7.5188, -38.1235, 34.9326, 1.11 ) }
    dend_5 { pt3dadd( -8.48943, -41.9191, 38.0776, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.628961, 14.3239, 2.04154, 0.83 ) }
    dend_0 { pt3dadd( 0.632871, 16.4517, 2.96999, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.48943, -41.9191, 38.0776, 0.83 ) }
    dend_7 { pt3dadd( -9.25169, -46.4389, 36.4955, 0.83 ) }
    dend_7 { pt3dadd( -9.43318, -47.515, 36.1188, 0.83 ) }
    dend_7 { pt3dadd( -9.89648, -50.2622, 35.1572, 0.83 ) }
    dend_7 { pt3dadd( -10.1042, -51.4936, 34.7261, 0.83 ) }
    dend_7 { pt3dadd( -10.5508, -54.142, 33.7991, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.48943, -41.9191, 38.0776, 0.83 ) }
    dend_6 { pt3dadd( -8.44784, -43.0406, 38.2728, 0.83 ) }
    dend_6 { pt3dadd( -8.40946, -44.0566, 38.434, 0.83 ) }
    dend_6 { pt3dadd( -8.40184, -45.3901, 38.6248, 0.83 ) }
    dend_6 { pt3dadd( -8.32542, -48.4363, 38.983, 0.83 ) }
    dend_6 { pt3dadd( -8.22646, -50.949, 39.2426, 0.55 ) }
    dend_6 { pt3dadd( -8.05392, -55.2123, 39.5888, 0.55 ) }
    dend_6 { pt3dadd( -7.90931, -57.3288, 39.7834, 0.83 ) }
    dend_6 { pt3dadd( -7.68833, -59.7461, 40.0124, 0.55 ) }
    dend_6 { pt3dadd( -7.21669, -63.6862, 40.5125, 0.55 ) }
    dend_6 { pt3dadd( -7.05958, -64.8099, 40.6707, 0.55 ) }
    dend_6 { pt3dadd( -6.62491, -67.8561, 41.1177, 0.55 ) }
    dend_6 { pt3dadd( -6.06981, -71.6947, 41.7804, 0.55 ) }
    dend_6 { pt3dadd( -5.74183, -73.9927, 42.2036, 0.55 ) }
    dend_6 { pt3dadd( -5.33668, -77.0542, 42.7942, 0.55 ) }
    dend_6 { pt3dadd( -4.80647, -82.5769, 43.9065, 0.55 ) }
    dend_6 { pt3dadd( -4.61094, -85.4977, 44.4774, 0.55 ) }
    dend_6 { pt3dadd( -4.51119, -87.6813, 44.8695, 0.55 ) }
    dend_6 { pt3dadd( -4.53056, -89.2024, 45.0713, 0.55 ) }
    dend_6 { pt3dadd( -4.61609, -90.5389, 45.2161, 0.55 ) }
    dend_6 { pt3dadd( -4.90735, -93.2241, 45.5585, 0.55 ) }
    dend_6 { pt3dadd( -5.08479, -94.5695, 45.7394, 0.55 ) }
    dend_6 { pt3dadd( -5.37167, -96.623, 46.1025, 0.55 ) }
    dend_6 { pt3dadd( -5.76811, -99.3719, 46.6344, 0.55 ) }
    dend_6 { pt3dadd( -6.39202, -103.34, 47.4603, 0.55 ) }
    dend_6 { pt3dadd( -6.93435, -106.909, 48.2584, 0.55 ) }
    dend_6 { pt3dadd( -7.44053, -110.023, 49.0192, 0.83 ) }
    dend_6 { pt3dadd( -7.93885, -112.993, 49.8508, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.632871, 16.4517, 2.96999, 0.83 ) }
    dend_2 { pt3dadd( 0.116378, 25.4488, -1.27131, 0.83 ) }
    dend_2 { pt3dadd( 0.0596259, 27.8198, -2.30452, 0.83 ) }
    dend_2 { pt3dadd( -0.0138016, 30.7258, -3.6001, 0.83 ) }
    dend_2 { pt3dadd( -0.0339604, 33.1263, -4.60221, 0.83 ) }
    dend_2 { pt3dadd( -0.0416795, 36.9649, -6.12515, 0.83 ) }
    dend_2 { pt3dadd( 0.0205199, 41.985, -8.00987, 0.83 ) }
    dend_2 { pt3dadd( 0.0499627, 45.5532, -9.0519, 0.83 ) }
    dend_2 { pt3dadd( 0.112096, 49.4141, -10.2498, 0.83 ) }
    dend_2 { pt3dadd( 0.219326, 53.3784, -11.6416, 0.55 ) }
    dend_2 { pt3dadd( 0.252752, 54.6338, -12.0898, 0.55 ) }
    dend_2 { pt3dadd( 0.275184, 56.7817, -12.8681, 0.55 ) }
    dend_2 { pt3dadd( 0.389617, 61.2663, -14.4154, 0.55 ) }
    dend_2 { pt3dadd( 0.442975, 64.5198, -15.4956, 0.55 ) }
    dend_2 { pt3dadd( 0.643472, 72.6729, -18.1962, 0.55 ) }
    dend_2 { pt3dadd( 0.686477, 76.3534, -19.5699, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.632871, 16.4517, 2.96999, 0.83 ) }
    dend_1 { pt3dadd( 1.66611, 19.4625, 4.13277, 0.83 ) }
    dend_1 { pt3dadd( 2.41472, 21.838, 5.13435, 0.83 ) }
    dend_1 { pt3dadd( 3.48783, 25.5853, 6.83966, 0.83 ) }
    dend_1 { pt3dadd( 4.48035, 29.1974, 8.51689, 0.83 ) }
    dend_1 { pt3dadd( 5.60423, 33.7704, 10.4371, 0.83 ) }
    dend_1 { pt3dadd( 6.44939, 37.2178, 11.7893, 0.83 ) }
    dend_1 { pt3dadd( 6.9922, 39.8261, 12.8131, 0.83 ) }
    dend_1 { pt3dadd( 7.55855, 42.6878, 13.8323, 0.83 ) }
    dend_1 { pt3dadd( 7.68062, 43.467, 14.0626, 0.83 ) }
    dend_1 { pt3dadd( 9.09464, 52.4259, 16.218, 0.83 ) }
    dend_1 { pt3dadd( 9.35762, 54.3306, 16.5448, 0.83 ) }
    dend_1 { pt3dadd( 9.69584, 56.9211, 16.849, 0.83 ) }
    dend_1 { pt3dadd( 9.96642, 59.1637, 17.0586, 0.83 ) }
    dend_1 { pt3dadd( 10.2393, 61.7648, 17.2548, 0.83 ) }
    dend_1 { pt3dadd( 10.609, 65.0501, 17.5062, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 10.9027, 68.436, 17.7467, 0.83 ) }
    dend_1 { pt3dadd( 11.1054, 70.3701, 17.8887, 0.83 ) }
    dend_1 { pt3dadd( 11.5019, 73.3609, 18.1105, 0.83 ) }
    dend_1 { pt3dadd( 11.8418, 76.3022, 18.3318, 0.83 ) }
    dend_1 { pt3dadd( 12.2549, 79.393, 18.5318, 0.83 ) }
    dend_1 { pt3dadd( 12.7916, 83.4325, 18.8375, 0.83 ) }
    dend_1 { pt3dadd( 13.1374, 86.0712, 19.1608, 0.83 ) }
    dend_1 { pt3dadd( 13.2988, 87.5316, 19.3789, 0.83 ) }
    dend_1 { pt3dadd( 13.4443, 89.1836, 19.7093, 0.83 ) }
    dend_1 { pt3dadd( 13.6491, 91.6275, 20.3463, 0.83 ) }
    dend_1 { pt3dadd( 13.7768, 95.2163, 21.5047, 0.55 ) }
    dend_1 { pt3dadd( 13.9564, 99.9232, 23.2221, 0.55 ) }
    dend_1 { pt3dadd( 13.9364, 101.309, 23.7468, 0.55 ) }
    dend_1 { pt3dadd( 13.8829, 104.222, 24.832, 0.55 ) }
    dend_1 { pt3dadd( 13.8294, 105.443, 25.2659, 0.55 ) }
    dend_1 { pt3dadd( 13.6916, 107.734, 26.0713, 0.55 ) }
    dend_1 { pt3dadd( 13.5981, 110.125, 26.8002, 0.55 ) }
    dend_1 { pt3dadd( 13.6261, 113.597, 27.6661, 0.55 ) }
    dend_1 { pt3dadd( 13.654, 115.885, 28.2015, 0.55 ) }
    dend_1 { pt3dadd( 13.6462, 117.968, 28.6173, 0.55 ) }
    dend_1 { pt3dadd( 13.7077, 120.57, 29.1318, 0.55 ) }
    dend_1 { pt3dadd( 13.9346, 123.28, 29.6264, 0.55 ) }
    dend_1 { pt3dadd( 14.3526, 126.975, 30.3649, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.5508, -54.142, 33.7991, 0.83 ) }
    dend_9 { pt3dadd( -12.2353, -59.666, 36.0124, 0.83 ) }
    dend_9 { pt3dadd( -13.5367, -64.0416, 37.559, 0.83 ) }
    dend_9 { pt3dadd( -15.0702, -69.317, 39.1971, 0.83 ) }
    dend_9 { pt3dadd( -16.3339, -73.6768, 40.4048, 0.83 ) }
    dend_9 { pt3dadd( -17.1019, -76.3264, 41.1388, 0.83 ) }
    dend_9 { pt3dadd( -18.0175, -79.4855, 42.0139, 0.83 ) }
    dend_9 { pt3dadd( -18.581, -81.7678, 42.4916, 0.83 ) }
    dend_9 { pt3dadd( -19.208, -84.3722, 42.9229, 0.83 ) }
    dend_9 { pt3dadd( -19.899, -87.6968, 42.9857, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.5508, -54.142, 33.7991, 0.55 ) }
    dend_8 { pt3dadd( -10.2948, -53.9896, 41.505, 0.55 ) }
    dend_8 { pt3dadd( -9.78784, -53.7465, 49.7422, 0.55 ) }
    dend_8 { pt3dadd( -9.53033, -53.623, 53.9265, 0.55 ) }
    dend_8 { pt3dadd( -9.20599, -53.4674, 59.1967, 0.28 ) }
    dend_8 { pt3dadd( -9.15241, -53.4417, 60.0674, 0.83 ) }
    dend_8 { pt3dadd( -8.87133, -53.3069, 64.6347, 0.28 ) }
    dend_8 { pt3dadd( -8.80331, -53.2313, 65.4129, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 0.686477, 76.3534, -19.5699, 0.55 ) }
    dend_4 { pt3dadd( 1.0335, 79.9341, -19.678, 0.55 ) }
    dend_4 { pt3dadd( 1.44992, 83.7192, -19.8841, 0.55 ) }
    dend_4 { pt3dadd( 1.73269, 86.3797, -20.0048, 0.55 ) }
    dend_4 { pt3dadd( 2.1849, 90.3749, -20.1481, 0.83 ) }
    dend_4 { pt3dadd( 2.50106, 93.2147, -20.2339, 0.55 ) }
    dend_4 { pt3dadd( 2.81517, 95.864, -20.2916, 0.55 ) }
    dend_4 { pt3dadd( 3.08069, 98.3415, -20.28, 1.11 ) }
    dend_4 { pt3dadd( 3.62329, 102.647, -20.3653, 0.55 ) }
    dend_4 { pt3dadd( 3.78089, 104.086, -20.4368, 0.55 ) }
    dend_4 { pt3dadd( 3.98159, 105.9, -20.5493, 1.11 ) }
    dend_4 { pt3dadd( 4.22713, 108.152, -20.7093, 0.55 ) }
    dend_4 { pt3dadd( 4.36246, 109.622, -20.8271, 1.11 ) }
    dend_4 { pt3dadd( 4.71579, 114.105, -21.1631, 0.55 ) }
    dend_4 { pt3dadd( 4.89569, 116.466, -21.5285, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 0.686477, 76.3534, -19.5699, 0.28 ) }
    dend_3 { pt3dadd( 1.33597, 79.0376, -22.2409, 0.28 ) }
    dend_3 { pt3dadd( 1.44462, 79.4401, -22.6236, 0.55 ) }
    dend_3 { pt3dadd( 2.4117, 83.0006, -25.8413, 0.28 ) }
    dend_3 { pt3dadd( 3.45994, 86.3248, -28.9795, 1.11 ) }
    dend_3 { pt3dadd( 4.08662, 88.0559, -30.684, 0.28 ) }
    dend_3 { pt3dadd( 4.08662, 88.0559, -30.684, 0.55 ) }
    dend_3 { pt3dadd( 4.9453, 90.1686, -32.2412, 0.28 ) }
    dend_3 { pt3dadd( 5.31314, 90.9803, -32.7261, 1.11 ) }
    dend_3 { pt3dadd( 7.22045, 94.5952, -33.6224, 0.55 ) }
    dend_3 { pt3dadd( 8.79521, 97.4164, -33.3053, 0.28 ) }
    dend_3 { pt3dadd( 11.348, 101.833, -32.1693, 1.11 ) }
    dend_3 { pt3dadd( 13.5331, 105.58, -30.7471, 0.28 ) }
    dend_3 { pt3dadd( 13.5845, 105.667, -30.6924, 0.55 ) }
    dend_3 { pt3dadd( 15.0516, 108.139, -28.617, 0.28 ) }
    dend_3 { pt3dadd( 15.172, 108.356, -28.3723, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -19.899, -87.6968, 42.9857, 0.83 ) }
    dend_11 { pt3dadd( -19.6162, -93.5672, 44.873, 0.83 ) }
    dend_11 { pt3dadd( -19.3928, -98.282, 46.7056, 0.83 ) }
    dend_11 { pt3dadd( -19.2271, -100.489, 47.5715, 0.83 ) }
    dend_11 { pt3dadd( -19.1428, -101.759, 48.1786, 0.83 ) }
    dend_11 { pt3dadd( -18.9953, -105.233, 49.9282, 0.83 ) }
    dend_11 { pt3dadd( -18.9302, -107.286, 50.8176, 0.83 ) }
    dend_11 { pt3dadd( -18.791, -111.182, 52.1277, 0.83 ) }
    dend_11 { pt3dadd( -18.5836, -113.885, 53.0371, 0.83 ) }
    dend_11 { pt3dadd( -18.0132, -118.499, 54.4182, 0.83 ) }
    dend_11 { pt3dadd( -17.6055, -120.873, 54.9634, 0.83 ) }
    dend_11 { pt3dadd( -16.4931, -126.706, 55.7391, 0.83 ) }
    dend_11 { pt3dadd( -15.5584, -131.908, 56.0959, 0.83 ) }
    dend_11 { pt3dadd( -14.917, -136.206, 56.028, 0.83 ) }
    dend_11 { pt3dadd( -14.607, -139.316, 55.8986, 0.83 ) }
    dend_11 { pt3dadd( -14.5551, -139.943, 55.8528, 0.83 ) }
    dend_11 { pt3dadd( -14.393, -143.542, 55.7846, 0.28 ) }
    dend_11 { pt3dadd( -14.4115, -144.496, 55.8382, 0.83 ) }
    dend_11 { pt3dadd( -14.6277, -146.954, 55.9215, 0.28 ) }
    dend_11 { pt3dadd( -15.0734, -151.318, 56.0051, 0.28 ) }
    dend_11 { pt3dadd( -15.1776, -152.255, 56.0586, 0.28 ) }
    dend_11 { pt3dadd( -15.4872, -155.242, 56.2507, 0.83 ) }
    dend_11 { pt3dadd( -15.694, -157.886, 56.4521, 0.28 ) }
    dend_11 { pt3dadd( -15.8448, -160.006, 56.6418, 0.83 ) }
    dend_11 { pt3dadd( -15.8946, -161.704, 56.8351, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -19.899, -87.6968, 42.9857, 0.55 ) }
    dend_10 { pt3dadd( -22.2938, -92.2286, 41.5199, 0.55 ) }
    dend_10 { pt3dadd( -23.3845, -94.1673, 40.9598, 0.55 ) }
    dend_10 { pt3dadd( -25.7797, -98.2764, 39.894, 0.55 ) }
    dend_10 { pt3dadd( -26.8468, -100.032, 39.4848, 0.55 ) }
    dend_10 { pt3dadd( -27.9466, -101.736, 39.1378, 0.28 ) }
    dend_10 { pt3dadd( -28.4381, -102.498, 38.9827, 0.55 ) }
    dend_10 { pt3dadd( -29.7294, -104.25, 38.7729, 0.28 ) }
    dend_10 { pt3dadd( -30.5853, -105.386, 38.6707, 0.55 ) }
    dend_10 { pt3dadd( -31.6569, -106.704, 38.6912, 0.28 ) }
    dend_10 { pt3dadd( -33.3592, -108.677, 38.72, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L23_BP_5f35d83447_0_0


