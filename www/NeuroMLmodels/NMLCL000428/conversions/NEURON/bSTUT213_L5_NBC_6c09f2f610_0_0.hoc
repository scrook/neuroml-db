// Cell: bSTUT213_L5_NBC_6c09f2f610_0_0
/*
{
  "id" : "bSTUT213_L5_NBC_6c09f2f610_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "5.06383, -8.03547, 0.0, 2.96232", "4.52136, -7.21896, 0.0, 4.65461", "3.9789, -6.40244, 0.0, 6.41887", "3.43643, -5.58592, 0.0, 7.96069", "2.89397, -4.7694, 0.0, 9.55419", "2.35151, -3.95288, 0.0, 10.983", "1.80904, -3.13637, 0.0, 11.7075", "1.26658, -2.31985, 0.0, 12.5906", "0.724116, -1.50333, 0.0, 13.2278", "0.181652, -0.686812, 0.0, 13.8644", "-0.360812, 0.129707, 0.0, 14.2774", "-0.903275, 0.946225, 0.0, 14.5108", "-1.44574, 1.76274, 0.0, 14.4652", "-1.9882, 2.57926, 0.0, 14.3007", "-2.53067, 3.39578, 0.0, 13.9535", "-3.07313, 4.2123, 0.0, 13.2045", "-3.61559, 5.02882, 0.0, 12.1103", "-4.15806, 5.84533, 0.0, 10.6196", "-4.70052, 6.66185, 0.0, 8.93613", "-5.24299, 7.47837, 0.0, 6.69248", "-5.78545, 8.29489, 0.0, 3.86173" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-6.39245, 3.69195, -5.2, 0.8", "-7.44682, 3.15066, -5.60152, 0.8", "-8.27582, 2.76205, -5.90271, 0.8", "-9.10674, 2.38981, -6.18661, 1.24", "-10.4538, 1.8167, -6.62492, 1.46", "-12.498, 0.99543, -7.28242, 1.17", "-13.6161, 0.593029, -7.63019, 0.95", "-14.5535, 0.337546, -7.90235, 0.95", "-15.4549, 0.179523, -8.15513, 0.95", "-16.029, 0.128069, -8.30448, 0.95", "-17.0715, 0.167086, -8.52464, 0.95", "-18.246, 0.384965, -8.75651, 1.17", "-18.9676, 0.596548, -8.87952, 1.53", "-20.1615, 1.03558, -9.05363, 1.68", "-20.744, 1.27067, -9.1257, 1.68", "-22.484, 1.95268, -9.3004, 0.88", "-23.1963, 2.21113, -9.33924, 0.88", "-23.8152, 2.40628, -9.35487, 0.88", "-24.7323, 2.66023, -9.35555, 0.88", "-25.6589, 2.87487, -9.35014, 0.88", "-27.1725, 3.18369, -9.33243, 1.09", "-28.3637, 3.39001, -9.3115, 1.68", "-29.3287, 3.54802, -9.28894, 1.9", "-30.5254, 3.74387, -9.25057, 2.12", "-31.1644, 3.86317, -9.2277, 2.12", "-32.5517, 4.16251, -9.17232, 1.82", "-33.3271, 4.36107, -9.13806, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-4.28245, 6.11095, -5.85, 0.88", "-4.77541, 5.85912, -6.20075, 0.88", "-5.43336, 5.43582, -6.68516, 0.88", "-5.78981, 5.21839, -6.90909, 0.88", "-6.49427, 4.83864, -7.31094, 0.88", "-7.19013, 4.52866, -7.66196, 0.88", "-8.20023, 4.16123, -8.11936, 0.88", "-8.99322, 3.92555, -8.43367, 0.88", "-10.2358, 3.74502, -8.83794, 1.02", "-11.5797, 3.72435, -9.24208, 0.88", "-12.7389, 3.83475, -9.56762, 1.24", "-13.5704, 3.98731, -9.81933, 1.24", "-14.3031, 4.16537, -10.0688, 1.24", "-16.2461, 4.63861, -10.822, 0.8", "-16.9708, 4.7834, -11.171, 0.8", "-17.5741, 4.83067, -11.5458, 0.8", "-18.4033, 4.6126, -12.2916, 0.8", "-18.9408, 4.27106, -12.9233, 0.8", "-19.4475, 3.76601, -13.6468, 0.58", "-19.7921, 3.19618, -14.2869, 0.58", "-20.2442, 2.21688, -15.2572, 0.8", "-20.6525, 1.03423, -16.3161, 1.17", "-20.705, 0.82546, -16.4785, 1.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "4.76755, 2.40045, -5.1, 0.44", "5.14515, 2.246, -5.42941, 0.44", "6.30895, 2.59606, -6.31193, 0.36", "6.82641, 3.02054, -6.62678, 0.36", "7.16298, 3.38443, -6.78705, 0.36", "7.53348, 3.82316, -6.97149, 0.36", "8.0612, 4.49101, -7.26997, 0.36", "8.68211, 5.36734, -7.66547, 0.66", "9.11131, 5.98589, -7.93027, 1.09", "9.77628, 6.86656, -8.35806, 0.8", "10.429, 7.69743, -8.86551, 0.51", "10.8817, 8.23658, -9.24981, 0.73", "11.5822, 8.98745, -9.85394, 1.24", "12.1018, 9.465, -10.2512, 1.82", "13.2953, 10.4187, -10.9843, 0.36", "14.2504, 11.1175, -11.3575, 0.36", "14.6912, 11.4125, -11.3342, 0.36", "15.2152, 11.732, -11.0388, 0.36", "16.445, 12.4167, -9.94614, 0.58", "17.2209, 12.8167, -9.08815, 0.29", "18.0379, 13.2337, -8.06167, 0.51", "18.9697, 13.7457, -6.84515, 0.73", "19.739, 14.2222, -5.85305, 0.73", "20.0635, 14.4683, -5.43076, 0.73", "20.6874, 15.0745, -4.62852, 0.36", "21.1302, 15.5628, -4.07187, 0.36", "21.646, 16.1922, -3.4408, 0.58", "22.1257, 16.9328, -2.81201, 0.58", "22.6759, 17.9705, -1.96152, 0.58", "22.9438, 18.551, -1.45544, 0.58", "23.1411, 19.0134, -1.01229, 0.58", "23.3901, 18.7707, -0.76157, 0.58", "23.7879, 18.4008, -0.515994, 0.58", "24.4846, 17.8199, -0.105747, 0.58", "25.4691, 17.0763, 0.438889, 0.36", "26.2919, 16.5865, 0.905871, 0.36", "27.2276, 16.2484, 1.42612, 0.36", "28.1125, 16.2114, 1.95402, 0.66", "29.07, 16.6976, 2.64281, 0.29", "29.3382, 17.0117, 2.87768, 0.44", "29.7316, 17.6702, 3.28382, 0.44", "30.1216, 18.4332, 3.69618, 0.95", "30.5325, 19.2405, 4.13622, 0.44", "30.9018, 19.8533, 4.50242, 0.44", "31.5253, 20.6964, 5.02173, 0.29", "31.7956, 21.0245, 5.23187, 0.51", "32.6165, 21.9268, 5.78882, 0.29", "33.4154, 22.7392, 6.32357, 0.73", "34.3452, 23.7057, 6.97962, 1.61", "34.5778, 23.9821, 7.18304, 1.61", "34.9744, 24.4815, 7.55505, 1.61", "35.7506, 25.552, 8.34028, 0.95", "36.3461, 26.5117, 9.04291, 0.66", "36.8298, 27.459, 9.6771, 0.29", "37.246, 28.5689, 10.4192, 0.29", "43.0738, 35.905, 14.2679, 0.29", "48.8194, 42.248, 19.6245, 0.29", "53.9815, 47.8547, 26.2148, 0.29", "58.6939, 54.2304, 32.468, 0.29", "63.5483, 59.0032, 39.8675, 0.29", "68.1962, 62.0481, 48.2085, 0.29", "72.5959, 65.9589, 56.3378, 0.29", "75.6923, 70.7612, 64.612, 0.29", "77.2662, 75.2334, 73.4712, 0.29", "79.2701, 80.2272, 81.9711, 0.29", "82.0218, 84.6743, 90.5503, 0.29", "86.0229, 88.6787, 98.8406, 0.29", "90.6853, 91.8121, 107.142, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.54245, 4.45045, 0.96, 1.24", "-5.78955, 5.01785, 1.28497, 1.24", "-7.23705, 5.60338, 1.58385, 1.09", "-8.43343, 6.0421, 1.74124, 1.24", "-9.76217, 6.52935, 1.91606, 1.39", "-10.7891, 6.90593, 2.05116, 2.12", "-11.7825, 7.27025, 2.18187, 2.34", "-12.7734, 7.56009, 2.21628, 2.04", "-14.0076, 7.84696, 2.14657, 1.75" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.82245, 5.06545, 2.13, 1.46", "-2.36204, 5.90688, 2.59715, 1.46", "-1.56252, 7.05186, 3.4573, 1.68", "-0.963551, 7.87266, 4.16454, 1.68", "-0.499829, 8.47695, 4.78098, 1.68", "0.227551, 9.34125, 5.88669, 0.44", "0.903196, 10.0635, 7.09726, 0.29", "1.27126, 10.2844, 8.02838, 0.29", "1.4278, 10.2681, 8.69579, 0.22", "1.56975, 10.1047, 9.77405, 0.22", "1.59951, 9.83304, 11.0119, 0.22", "1.50112, 9.66574, 11.7581, 0.22", "1.43585, 9.6777, 12.0489, 0.22", "1.33104, 9.87264, 12.5496, 0.22", "1.13841, 10.45, 13.5696, 0.22", "0.973169, 10.9147, 14.2012, 0.58", "0.681146, 11.591, 14.9783, 0.22", "0.418285, 12.0674, 15.5168, 0.22", "0.212029, 12.364, 15.8892, 0.22", "-0.21636, 12.786, 16.5344, 0.22", "-0.606947, 13.0269, 17.0168, 0.22", "-0.868981, 13.1843, 17.3756, 0.22", "-1.00265, 13.5131, 17.9224, 0.15", "-0.958331, 13.7904, 18.286, 0.15", "-0.907691, 14.1079, 18.7006, 0.15", "-0.799981, 14.6047, 19.2997, 0.15", "-0.691157, 15.0023, 19.7962, 0.15", "-0.580122, 15.4176, 20.3878, 0.15", "-0.525283, 15.6517, 20.7663, 0.15", "-0.470706, 15.9628, 21.2656, 0.15", "-0.436558, 16.1919, 21.6544, 0.15", "-0.342593, 16.4033, 22.1091, 0.15", "-0.038058, 16.5061, 22.7948, 0.15", "0.258544, 16.4584, 23.3451, 0.15", "0.70016, 16.277, 24.4125, 0.15", "0.892739, 16.1805, 25.0113, 0.15", "1.01585, 16.148, 25.865, 0.15", "0.952497, 16.3656, 26.433, 0.15", "0.768987, 16.8993, 26.9782, 0.15", "0.554649, 17.4998, 27.5464, 0.15", "0.361376, 18.0411, 28.0475, 0.15", "0.172101, 18.6328, 28.4776, 0.15", "-0.00134301, 19.2191, 28.831, 0.15", "-0.222159, 20.3102, 29.3666, 0.15", "1.68975, 25.692, 37.6597, 0.15" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.85755, -9.83805, 2.2, 2.63", "3.21431, -11.2851, 2.5577, 2.63", "3.40396, -12.0543, 2.74785, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999289980176
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-5.78545, 8.29489, 0.0, 0.545954", "-14.086, 20.7889, 0.0, 0.545954", "-22.3866, 33.2829, 0.0, 0.545954" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-33.3271, 4.36107, -9.13806, 0.36", "-33.3456, 3.67062, -10.2838, 0.36", "-33.2352, 2.19329, -12.3407, 0.36", "-33.198, 1.67293, -12.9959, 0.36", "-33.1822, 1.28701, -13.4402, 0.58", "-33.1782, 0.72497, -14.0374, 0.58", "-33.2287, -0.369639, -15.0849, 0.36", "-33.2721, -0.962204, -15.5558, 0.88", "-33.4961, -2.30818, -16.499, 0.36", "-33.6995, -2.96337, -17.0202, 0.66", "-33.9081, -3.36948, -17.4127, 0.66", "-34.4632, -3.97285, -18.2545, 0.22", "-35.0385, -4.2028, -18.9653, 0.22", "-35.6109, -4.13477, -19.6628, 0.73", "-36.309, -3.86244, -20.4791, 0.88", "-37.0274, -3.51437, -21.3067, 0.36", "-37.6316, -3.26536, -22.0082, 0.36", "-37.9615, -3.18855, -22.3851, 0.36", "-38.7158, -3.23314, -23.3081, 0.36", "-39.2008, -3.3685, -23.9075, 0.73", "-39.4771, -3.49196, -24.2613, 0.88", "-40.3136, -3.98707, -25.438, 0.22", "-40.9652, -4.43563, -26.4296, 1.02", "-42.0367, -5.26424, -28.4117, 0.51", "-42.4216, -5.55797, -29.3096, 0.51", "-42.8064, -5.77956, -30.3379, 0.73", "-43.1326, -5.86549, -31.1719, 0.73", "-43.2766, -5.85343, -31.5126, 0.73", "-43.7833, -5.69572, -32.6972, 0.73", "-44.3367, -5.48076, -33.8695, 0.73", "-44.9286, -5.20025, -35.1773, 1.31", "-45.6706, -4.77473, -36.7572, 0.07", "-46.2519, -4.41254, -38.0112, 0.58", "-47.415, -3.70329, -40.5982, 0.29", "-47.951, -3.40625, -41.8813, 1.09", "-49.0183, -2.88057, -45.0377, 0.8", "-49.5991, -2.61668, -47.5814, 0.58", "-49.7597, -2.57682, -48.6461, 0.58", "-49.8428, -2.5907, -49.2497, 0.58", "-50.1133, -2.74397, -50.941, 0.58", "-50.3431, -2.86614, -51.9004, 0.58", "-50.8355, -3.06332, -53.2162, 0.58", "-51.1819, -3.14053, -53.9621, 0.58", "-51.637, -3.1621, -54.822, 0.58", "-52.2176, -3.09942, -55.8189, 0.58", "-53.1351, -2.88322, -57.2578, 0.88", "-54.07, -2.60718, -58.6569, 0.22", "-55.2518, -2.25056, -60.3635, 0.44", "-56.605, -1.85896, -62.2769, 0.15", "-57.3127, -1.66192, -63.2443, 0.73", "-58.6068, -1.32236, -65.009, 0.07", "-59.3689, -1.14516, -66.0734, 0.29", "-60.4777, -0.981559, -67.6645, 0.58", "-61.2955, -0.977214, -68.7951, 0.07", "-61.5927, -1.02504, -69.2069, 0.07", "-62.3078, -1.25658, -70.2734, 0.07", "-63.031, -1.60256, -71.3812, 0.58", "-63.9565, -2.15228, -72.8078, 0.07", "-64.4894, -2.55359, -73.625, 0.36", "-65.5928, -3.50726, -75.2903, 0.07", "-66.3445, -4.19296, -76.3323, 0.07", "-66.703, -4.52417, -76.7512, 0.07", "-67.0335, -4.84048, -77.0894, 0.29", "-67.8336, -5.5957, -77.8195, 0.07", "-68.9232, -6.56313, -78.906, 0.07", "-69.7391, -7.19353, -79.6536, 0.88", "-70.8731, -7.99261, -80.7158, 0.07", "-72.2564, -8.90826, -82.0338, 1.09", "-74.0907, -10.072, -83.8234, 0.22", "-76.4703, -11.5509, -86.1881, 0.22", "-77.8, -12.3865, -87.5105, 1.17", "-79.2315, -13.3007, -88.9374, 0.22", "-80.0002, -13.8025, -89.6621, 0.22", "-80.9734, -14.4704, -90.4709, 0.22", "-81.9374, -15.1945, -91.1726, 0.36", "-82.6964, -15.7831, -91.5906, 0.07", "-83.503, -16.3908, -92.023, 0.66", "-84.4359, -17.0192, -92.4906, 0.66", "-86.4422, -18.2471, -93.5753, 0.07", "-87.6733, -18.9647, -94.2278, 0.07", "-89.6529, -20.046, -95.3037, 0.66", "-91.2479, -20.858, -96.2318, 0.07", "-92.3219, -21.36, -96.9013, 0.07", "-94.071, -22.101, -98.0723, 1.61" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-33.3271, 4.36107, -9.13806, 0.44", "-33.8694, 5.03796, -8.50221, 0.44", "-34.4313, 5.39551, -7.97206, 0.44", "-34.6336, 5.15278, -7.95584, 0.44", "-34.9439, 4.69366, -7.98475, 0.44", "-35.1264, 4.41955, -8.0269, 0.44", "-35.5484, 3.82637, -8.15904, 0.58", "-36.0098, 3.23529, -8.31607, 0.36", "-37.0075, 2.08822, -8.66856, 0.51", "-37.6403, 1.43931, -8.841, 0.29", "-38.2014, 0.94342, -8.95482, 0.29", "-38.775, 0.509421, -9.01663, 0.44", "-39.9012, -0.19457, -9.02838, 0.73", "-40.8158, -0.649746, -8.95328, 0.88", "-42.1923, -1.16678, -8.71274, 0.58", "-43.4344, -1.51091, -8.41998, 0.51", "-44.3739, -1.67263, -8.15485, 0.51", "-45.2558, -1.68444, -7.8909, 0.36", "-45.8668, -1.58041, -7.71898, 0.36", "-46.5922, -1.34529, -7.53576, 0.95", "-47.2956, -1.03626, -7.39033, 1.17", "-48.3235, -0.541986, -7.20893, 1.31", "-49.9377, 0.19859, -7.02394, 0.51", "-50.9824, 0.584971, -6.99795, 0.29", "-51.6434, 0.71174, -7.03834, 0.22", "-52.1512, 0.661411, -7.11699, 0.22", "-52.8444, 0.339968, -7.31023, 0.22", "-53.6641, -0.237047, -7.65133, 0.29", "-54.741, -1.07905, -8.15925, 1.09", "-55.594, -1.72429, -8.48148, 0.8", "-56.4594, -2.30488, -8.72405, 0.22", "-57.6237, -2.96399, -8.94203, 0.51", "-59.0004, -3.56541, -9.07222, 0.22", "-60.3976, -4.00542, -9.07855, 0.51", "-62.3475, -4.38931, -9.029, 0.29", "-63.5424, -4.5234, -9.04952, 0.29", "-64.1392, -4.56668, -9.08672, 0.95", "-65.0828, -4.63428, -9.19358, 1.53", "-65.943, -4.73407, -9.37078, 1.53", "-67.7602, -5.12011, -10.0349, 0.44", "-68.9447, -5.51312, -10.6817, 0.36", "-69.6249, -5.83004, -11.1212, 0.36", "-70.3434, -6.23206, -11.63, 0.36", "-71.0879, -6.71394, -12.2006, 0.36", "-71.9588, -7.32875, -12.8957, 0.36", "-72.5744, -7.8087, -13.3656, 0.22", "-73.042, -8.10559, -13.6524, 0.22", "-73.775, -8.32389, -13.9716, 0.66", "-74.2992, -8.31412, -14.1044, 0.66", "-75.0652, -8.1999, -14.2506, 0.22", "-75.6605, -8.11568, -14.3476, 0.22", "-76.0804, -8.14908, -14.4344, 0.22", "-76.4522, -8.31209, -14.582, 0.22", "-76.8105, -8.56478, -14.7604, 0.22", "-77.5414, -9.17714, -15.12, 0.22", "-78.0703, -9.63615, -15.3679, 0.73", "-78.9106, -10.2584, -15.7544, 1.24", "-79.7137, -10.6987, -16.0854, 1.24", "-80.3791, -10.9173, -16.3103, 1.24", "-81.7796, -11.1622, -16.729, 0.29", "-82.4858, -11.2125, -16.9208, 0.29", "-83.9945, -11.2386, -17.3539, 0.51", "-85.1973, -11.2274, -17.694, 0.29", "-86.5048, -11.2569, -18.0716, 0.15", "-87.1323, -11.3062, -18.282, 0.15", "-87.6941, -11.405, -18.5015, 0.15", "-88.543, -11.6362, -18.8657, 0.88", "-89.0815, -11.8381, -19.0976, 0.88", "-90.0095, -12.0873, -19.5051, 0.15", "-90.5093, -12.0986, -19.686, 0.15", "-90.9854, -12.0258, -19.8074, 0.15", "-92.7009, -11.6926, -20.2451, 0.15", "-93.4533, -11.5523, -20.4245, 0.15", "-94.4752, -11.3877, -20.6237, 0.15", "-95.2236, -11.3038, -20.7446, 1.31", "-96.2401, -11.3135, -20.8537, 1.31", "-98.0115, -11.5969, -20.9384, 0.66", "-99.3652, -12.0295, -20.8643, 0.22", "-100.404, -12.4456, -20.7312, 0.22", "-101.035, -12.7389, -20.6058, 0.22", "-102.155, -13.2976, -20.3468, 0.22", "-102.965, -13.7049, -20.1611, 0.73", "-104.269, -14.3378, -19.8823, 1.46", "-104.598, -14.4837, -19.849, 1.46", "-105.686, -14.8986, -19.8495, 0.88", "-106.988, -15.3061, -19.9283, 0.29", "-108.096, -15.5855, -20.0678, 0.8", "-109.387, -15.8939, -20.2916, 0.51", "-110.489, -16.1612, -20.5362, 0.36", "-110.854, -16.2654, -20.6291, 0.36", "-111.2, -16.3791, -20.728, 0.36", "-112.008, -16.684, -20.9638, 0.44", "-113.207, -17.1735, -21.3057, 0.66", "-113.735, -17.3978, -21.4573, 0.66", "-115.253, -18.0202, -21.8263, 0.44", "-115.871, -18.2677, -21.9668, 0.58", "-116.501, -18.5091, -22.1063, 0.8", "-117.609, -18.8856, -22.3387, 1.68", "-118.332, -19.092, -22.4706, 1.68", "-120.1, -19.5125, -22.7303, 0.22", "-120.94, -19.6776, -22.8154, 0.22", "-121.826, -19.8516, -22.8986, 0.22", "-122.676, -20.0255, -22.972, 0.22", "-123.627, -20.2431, -23.0419, 0.51", "-124.694, -20.5067, -23.1191, 1.68", "-125.553, -20.7565, -23.2037, 1.68", "-127.897, -21.5292, -23.5174, 0.15", "-128.877, -21.9145, -23.6861, 0.15", "-129.87, -22.3947, -23.8996, 0.58", "-130.267, -22.621, -23.9999, 0.58", "-131.629, -23.5085, -24.4092, 0.15", "-132.579, -24.1863, -24.7469, 0.58", "-133.41, -24.8482, -25.099, 0.22", "-134.178, -25.4976, -25.4508, 0.36", "-134.67, -25.9289, -25.6829, 0.07", "-135.43, -26.643, -26.0206, 0.51", "-136.054, -27.2539, -26.2773, 0.07", "-136.56, -27.7697, -26.502, 0.07", "-137.239, -28.4698, -26.8301, 1.09", "-137.384, -28.6332, -26.9122, 1.09", "-138.098, -29.5066, -27.3478, 0.51", "-139.0, -30.6357, -27.8965, 0.07", "-139.781, -31.5723, -28.3709, 0.88", "-139.947, -31.7493, -28.4732, 0.88", "-140.932, -32.6518, -29.0688, 0.07", "-141.416, -33.0288, -29.3424, 0.15", "-142.201, -33.4667, -29.7643, 0.15", "-142.861, -33.7236, -30.0921, 0.15", "-143.715, -33.9464, -30.5057, 0.15", "-144.699, -34.1657, -30.975, 1.53", "-145.293, -34.2647, -31.246, 1.53", "-146.961, -34.5721, -31.9484, 0.07", "-147.488, -34.6842, -32.1654, 0.07", "-148.192, -34.8343, -32.4339, 0.07", "-149.332, -35.073, -32.824, 0.95", "-149.686, -35.1409, -32.932, 0.95", "-151.461, -35.5158, -33.3965, 0.22", "-152.172, -35.7025, -33.5365, 0.22", "-152.895, -35.9177, -33.6609, 0.51", "-153.734, -36.1647, -33.7818, 0.51", "-154.514, -36.3726, -33.8927, 0.22", "-154.806, -36.4681, -33.9469, 0.22", "-155.286, -36.6642, -34.0466, 0.22", "-156.002, -37.0169, -34.1718, 0.22", "-156.267, -37.1914, -34.2391, 0.22", "-156.842, -37.6023, -34.4428, 0.22", "-157.597, -38.1295, -34.7394, 0.22", "-158.397, -38.6475, -35.05, 0.58", "-158.959, -38.9343, -35.2299, 0.58", "-160.513, -39.604, -35.6674, 0.29", "-161.515, -40.0061, -35.9389, 0.88", "-161.784, -40.1136, -36.0116, 1.17", "-162.468, -40.3849, -36.1846, 1.75", "-164.735, -41.2599, -36.7653, 0.22", "-165.414, -41.523, -36.9568, 0.15", "-166.086, -41.7814, -37.1482, 0.15", "-167.405, -42.3311, -37.559, 0.66", "-167.865, -42.5365, -37.7213, 1.17", "-168.544, -42.8529, -37.9785, 1.17", "-169.924, -43.5544, -38.5275, 0.15", "-170.493, -43.8252, -38.7378, 0.15", "-171.305, -44.187, -38.9999, 0.15", "-171.821, -44.4007, -39.1632, 0.15", "-173.138, -44.9388, -39.5757, 0.66", "-173.694, -45.1708, -39.7338, 0.15", "-174.718, -45.6048, -39.921, 0.58", "-175.573, -45.9808, -40.0405, 0.15", "-176.121, -46.2328, -40.0855, 0.15", "-176.598, -46.4523, -40.0929, 0.15", "-177.624, -46.8977, -40.0485, 0.15", "-179.0, -47.4413, -39.9193, 1.46", "-179.619, -47.6698, -39.83, 1.46", "-181.022, -48.1815, -39.6163, 0.51", "-182.137, -48.613, -39.4441, 0.22", "-182.581, -48.7992, -39.3848, 0.22", "-182.943, -48.9664, -39.3456, 0.22", "-183.644, -49.3115, -39.3017, 0.22", "-185.544, -50.3179, -39.2173, 0.22", "-186.421, -50.7891, -39.1643, 0.22", "-187.214, -51.2121, -39.1126, 0.8", "-187.654, -51.4354, -39.0746, 0.8", "-189.659, -52.3717, -38.8628, 0.15", "-190.376, -52.673, -38.7727, 0.36", "-191.325, -53.0398, -38.6326, 0.15", "-191.934, -53.2851, -38.5411, 0.15", "-192.533, -53.5604, -38.4243, 0.15", "-193.191, -53.8887, -38.2321, 0.15", "-193.687, -54.1307, -38.0618, 0.15", "-194.448, -54.4762, -37.7638, 0.15", "-195.347, -54.8772, -37.4026, 0.15", "-196.654, -55.4715, -36.8459, 0.15", "-197.829, -56.027, -36.331, 1.61", "-199.466, -56.8292, -35.5504, 0.15", "-200.71, -57.5228, -34.957, 0.36", "-201.079, -57.7512, -34.7842, 0.36", "-202.059, -58.417, -34.3589, 0.07", "-202.704, -58.9013, -34.1308, 0.07", "-203.749, -59.7487, -33.8307, 0.8", "-205.358, -61.1626, -33.3676, 0.07", "-205.687, -61.4479, -33.2874, 0.88", "-206.099, -61.7777, -33.1892, 0.88", "-207.338, -62.6231, -32.9215, 0.07", "-207.907, -62.9298, -32.8245, 0.07", "-208.638, -63.2374, -32.7422, 0.07", "-209.28, -63.4343, -32.6706, 0.07", "-209.923, -63.6043, -32.6093, 0.07", "-210.853, -63.8386, -32.527, 0.58", "-211.87, -64.071, -32.4565, 0.22", "-212.172, -64.1311, -32.4429, 0.22", "-212.819, -64.2168, -32.4429, 0.51", "-213.985, -64.3141, -32.4429, 0.07" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-20.705, 0.82546, -16.4785, 0.58", "-20.3678, 0.83342, -17.778, 0.58", "-19.916, 1.06302, -19.9958, 0.58", "-19.5954, 1.37672, -21.7726, 0.58", "-19.3013, 1.7287, -23.2055, 0.73", "-18.9055, 2.18943, -24.8381, 0.88", "-18.3202, 2.75602, -27.0469, 0.58", "-17.6085, 3.29494, -29.3393, 0.66", "-17.2173, 3.49985, -30.5283, 0.66", "-16.6911, 3.62361, -32.415, 0.66", "-16.3216, 3.53256, -33.9359, 0.51", "-15.8264, 3.16968, -36.0354, 0.73", "-15.2446, 2.60474, -38.3119, 0.44", "-14.7042, 2.01333, -40.2215, 0.44", "-13.8968, 1.02977, -42.942, 0.44", "-13.2499, 0.191398, -45.0558, 0.44", "-12.3975, -0.908962, -47.8602, 0.44", "-12.0766, -1.26741, -48.8528, 0.66", "-11.3189, -1.98603, -50.9862, 0.44", "-10.3467, -2.77634, -53.2191, 0.29", "-9.32428, -3.55095, -55.0656, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-20.705, 0.82546, -16.4785, 2.63", "-21.3709, 1.04412, -16.7134, 2.63", "-24.1982, 2.14477, -17.9499, 0.44", "-25.0612, 2.53392, -18.3636, 0.88", "-26.3551, 3.23602, -18.9876, 0.73", "-27.244, 3.7689, -19.4406, 0.51", "-28.4409, 4.51196, -20.0855, 0.51", "-29.4928, 5.21978, -20.706, 1.02", "-30.3562, 5.82188, -21.2393, 1.02", "-31.8143, 6.64601, -22.0769, 0.29", "-32.5106, 6.93117, -22.4338, 0.29", "-33.834, 7.29286, -23.0267, 0.29", "-34.9307, 7.42956, -23.44, 0.88", "-36.3293, 7.38046, -23.8491, 0.36", "-37.6134, 7.16907, -24.1918, 0.22", "-38.0524, 7.05747, -24.3216, 0.22", "-38.5695, 6.93496, -24.4864, 0.22", "-39.2476, 6.79534, -24.7301, 0.22", "-40.3356, 6.64756, -25.2135, 2.12", "-41.3012, 6.63758, -25.7911, 2.48", "-42.7292, 6.7997, -26.8147, 1.46", "-44.0167, 7.00483, -27.8443, 0.29", "-44.5011, 7.08996, -28.2584, 0.29", "-44.8941, 7.13719, -28.6078, 0.29", "-46.084, 7.18143, -29.6499, 0.29", "-46.6376, 7.1659, -30.0446, 0.29", "-47.4636, 7.08779, -30.485, 0.8", "-48.0604, 7.01215, -30.7739, 0.8", "-49.235, 6.93636, -31.3314, 0.22", "-49.747, 6.93803, -31.5569, 0.22", "-50.2313, 6.97199, -31.7561, 0.22", "-50.9775, 7.05189, -32.1534, 0.22", "-51.7306, 7.15319, -32.646, 0.22", "-52.6612, 7.27809, -33.3343, 0.22", "-53.4883, 7.38379, -33.9591, 1.61", "-54.4978, 7.47319, -34.6877, 1.61", "-56.3285, 7.56037, -35.8934, 0.36", "-57.3814, 7.59007, -36.5518, 0.15", "-58.8155, 7.63891, -37.3821, 0.15", "-59.458, 7.68525, -37.7255, 1.24", "-60.2922, 7.79003, -38.174, 1.24", "-61.6576, 8.09277, -38.9382, 0.07", "-62.4743, 8.35398, -39.3976, 0.58", "-63.1455, 8.6493, -39.811, 0.8", "-64.5547, 9.44354, -40.7853, 0.44", "-65.501, 10.0832, -41.6202, 0.73", "-66.3967, 10.8022, -42.5834, 1.75", "-66.5961, 10.9882, -42.8279, 1.75", "-67.6816, 12.1327, -44.3596, 0.22", "-68.3281, 12.9531, -45.4839, 1.75", "-69.3256, 14.5001, -47.5694, 0.29", "-69.7231, 15.1749, -48.4506, 0.95", "-69.8886, 15.482, -48.8663, 0.95", "-70.3094, 16.3301, -50.024, 0.44", "-70.6895, 17.1219, -51.1779, 0.73", "-70.839, 17.4402, -51.6567, 0.73", "-71.28, 18.2119, -53.0581, 0.36", "-71.5505, 18.62, -54.0332, 0.36", "-71.865, 19.0673, -55.3624, 1.75", "-72.4665, 19.9594, -58.7684, 0.15", "-72.5984, 20.1996, -60.0427, 1.53", "-72.7621, 20.6926, -63.4246, 0.15", "-72.7828, 20.9435, -65.6403, 0.07", "-72.7806, 21.0503, -66.7553, 0.29", "-72.7902, 21.2809, -69.5422, 0.29", "-72.8245, 21.4279, -71.3839, 0.07", "-72.9983, 21.7897, -73.7345, 0.07", "-73.1678, 22.0787, -74.7393, 0.07", "-73.4971, 22.5123, -75.8201, 0.36", "-74.2452, 23.4298, -77.6489, 0.07", "-74.783, 24.1077, -78.7646, 0.58", "-75.7552, 25.4708, -80.7137, 0.07", "-76.1338, 26.0952, -81.5583, 0.29", "-76.6759, 27.1036, -82.9524, 0.07", "-77.3203, 28.4165, -84.7524, 0.73", "-77.656, 29.1032, -85.6471, 0.36", "-77.8679, 29.503, -86.149, 0.58", "-78.4318, 30.4003, -87.3641, 0.15", "-79.2797, 31.5285, -89.0314, 0.73", "-79.9504, 32.2986, -90.1244, 0.07", "-80.3584, 32.7003, -90.6722, 0.07", "-82.0364, 34.2342, -92.732, 0.36", "-83.4984, 35.4982, -94.3678, 0.07", "-85.3125, 36.987, -96.2209, 0.58", "-86.5255, 37.9411, -97.3963, 0.07", "-87.3967, 38.5855, -98.2109, 0.66", "-88.7355, 39.5019, -99.4134, 0.22", "-89.7688, 40.1591, -100.269, 0.44", "-90.8642, 40.8385, -101.115, 0.15", "-91.5926, 41.2661, -101.654, 0.66", "-92.0191, 41.5023, -101.993, 0.66", "-93.9041, 42.5172, -103.619, 0.07", "-95.0359, 43.1143, -104.649, 0.36", "-95.8609, 43.563, -105.469, 0.66", "-97.1876, 44.312, -106.79, 0.07", "-98.4809, 45.0855, -108.063, 1.24", "-100.312, 46.2412, -109.841, 0.36", "-101.064, 46.735, -110.568, 0.36", "-101.943, 47.3077, -111.41, 0.95", "-102.658, 47.7838, -112.078, 0.95", "-104.019, 48.6741, -113.192, 0.07", "-104.488, 48.9669, -113.5, 0.36", "-106.107, 49.9688, -114.335, 0.07", "-106.578, 50.2537, -114.582, 0.07", "-107.485, 50.8039, -115.073, 0.88", "-108.391, 51.3011, -115.589, 0.88", "-109.974, 52.0082, -116.522, 0.07", "-110.73, 52.2604, -117.04, 1.24", "-112.97, 52.7854, -118.628, 0.07", "-113.771, 52.9106, -119.198, 0.66", "-115.241, 53.0542, -120.225, 0.07", "-116.91, 53.1322, -121.33, 1.31", "-119.903, 53.1589, -123.094, 0.22", "-121.069, 53.1385, -123.716, 0.51", "-122.688, 53.0509, -124.471, 0.15", "-123.737, 52.9745, -124.924, 1.09", "-124.562, 52.9299, -125.228, 1.68", "-126.999, 52.8829, -125.933, 0.15", "-128.26, 52.9087, -126.192, 0.15", "-129.464, 52.9945, -126.457, 0.44", "-130.293, 53.1071, -126.647, 0.22", "-131.026, 53.2581, -126.811, 0.22", "-132.017, 53.5566, -127.006, 0.51", "-132.765, 53.8347, -127.106, 0.51", "-134.261, 54.4416, -127.283, 0.15", "-134.904, 54.7075, -127.354, 0.15", "-136.073, 55.1709, -127.538, 0.73", "-136.719, 55.3859, -127.654, 0.73", "-137.965, 55.7256, -127.892, 0.07", "-138.744, 55.9308, -128.011, 1.24", "-139.679, 56.2125, -128.106, 1.24", "-141.351, 56.8352, -128.182, 0.15", "-142.346, 57.3428, -128.158, 0.15", "-142.821, 57.6431, -128.123, 0.15", "-143.903, 58.4793, -127.982, 0.15", "-144.589, 59.0689, -127.851, 0.88", "-144.98, 59.4303, -127.775, 0.88", "-146.058, 60.4445, -127.636, 0.22", "-146.577, 60.913, -127.637, 0.51", "-147.214, 61.4007, -127.779, 0.51", "-147.61, 61.6541, -127.933, 0.51", "-148.592, 62.1855, -128.369, 0.15", "-149.695, 62.7006, -128.883, 0.73", "-150.39, 62.9728, -129.213, 1.09", "-152.193, 63.6151, -130.016, 0.22", "-153.552, 64.0522, -130.567, 1.31", "-153.953, 64.169, -130.724, 1.17", "-154.685, 64.3554, -130.989, 1.17", "-156.666, 64.78, -131.656, 0.22", "-157.776, 64.9791, -132.018, 1.24", "-158.746, 65.1219, -132.301, 1.24", "-160.374, 65.3284, -132.797, 0.07", "-161.031, 65.431, -133.031, 0.07", "-161.327, 65.4822, -133.149, 0.07", "-161.636, 65.5433, -133.275, 0.07", "-162.139, 65.6858, -133.441, 0.07", "-162.764, 65.9172, -133.588, 0.07", "-164.072, 66.4344, -133.79, 0.36", "-164.816, 66.7229, -133.896, 0.95", "-165.795, 67.0828, -134.049, 1.24", "-168.149, 67.8675, -134.413, 0.07", "-169.728, 68.3404, -134.675, 0.29", "-171.08, 68.6756, -134.902, 0.07", "-171.696, 68.7942, -134.971, 0.95", "-173.673, 69.0714, -135.197, 0.22", "-174.541, 69.1169, -135.336, 0.22", "-175.24, 69.0973, -135.48, 0.22", "-176.782, 68.9335, -135.853, 0.51", "-178.986, 68.5397, -136.417, 0.29", "-180.582, 68.181, -136.831, 1.39", "-183.551, 67.4137, -137.695, 0.29", "-184.102, 67.2716, -137.878, 0.29", "-185.124, 67.0113, -138.298, 0.88", "-186.191, 66.6985, -138.884, 0.29", "-186.597, 66.5431, -139.184, 0.29", "-187.565, 65.9881, -140.035, 0.66", "-188.124, 65.6123, -140.592, 0.66", "-189.147, 64.9002, -141.682, 0.36", "-190.105, 64.184, -142.823, 0.36", "-190.839, 63.5268, -143.83, 0.95", "-191.834, 62.3587, -145.319, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-14.0076, 7.84696, 2.14657, 0.58", "-14.7936, 7.84995, 2.54856, 0.58", "-16.0035, 7.85456, 3.16731, 0.58", "-17.1493, 7.85892, 3.75335, 0.58", "-18.4861, 7.86401, 4.43704, 1.17", "-19.317, 7.86718, 4.86196, 1.02" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-14.0076, 7.84696, 2.14657, 0.88", "-14.4962, 8.51476, 1.33381, 0.88", "-15.2336, 9.52256, 0.107239, 0.95", "-15.816, 10.3186, -0.861594, 1.61" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.68975, 25.692, 37.6597, 0.07", "3.14757, 31.0272, 46.073, 0.07", "6.38195, 35.2593, 54.5871, 0.07", "7.68064, 41.3065, 62.5562, 0.07", "9.66796, 48.441, 69.4557, 0.07", "13.3663, 56.484, 74.4306, 0.07", "15.6016, 65.3228, 78.9741, 0.07", "17.3588, 73.8484, 84.24, 0.07", "18.7787, 81.3444, 90.9108, 0.07", "21.0717, 88.6807, 97.5074, 0.07", "23.0067, 95.8934, 104.344, 0.07", "25.586, 102.256, 111.747, 0.07", "29.1768, 108.821, 118.536, 0.07", "31.8251, 115.226, 125.88, 0.07", "34.4565, 121.197, 133.57, 0.07", "37.9639, 128.019, 140.158, 0.07", "40.4122, 134.905, 147.15, 0.07", "43.3856, 142.461, 153.217, 0.07", "46.344, 149.024, 160.306, 0.07" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "1.68975, 25.692, 37.6597, 0.07", "2.3437, 30.309, 46.5638, 0.07", "3.64709, 32.9081, 56.1488, 0.07", "3.48142, 34.2649, 66.0594, 0.07", "4.82855, 36.8542, 75.6408, 0.07", "5.36642, 37.7376, 85.5891, 0.07", "5.88783, 37.6716, 95.5753, 0.07", "7.15475, 39.6252, 105.31, 0.07", "9.71314, 43.6856, 114.128, 0.07", "12.1181, 47.6821, 123.017, 0.07", "14.7896, 51.5906, 131.867, 0.07", "18.5107, 53.4768, 140.965, 0.07", "23.3219, 56.56, 149.199, 0.07", "29.9947, 58.2802, 156.456, 0.07", "36.6008, 59.8963, 163.796, 0.07", "41.585, 60.8627, 172.413, 0.07", "44.8665, 62.9217, 181.644, 0.07", "47.9461, 64.7507, 190.989, 0.07", "49.3321, 68.246, 200.287, 0.07", "51.4252, 71.5906, 209.505, 0.07", "52.4335, 73.9528, 219.183, 0.07", "51.9538, 77.2805, 228.629, 0.07" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "3.40396, -12.0543, 2.74785, 2.77", "4.29396, -12.4028, 2.74785, 2.77" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.40396, -12.0543, 2.74785, 2.63", "3.28056, -13.4778, 2.60421, 2.63", "3.14882, -14.9974, 2.45086, 2.34", "2.93231, -17.4949, 2.19885, 2.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-22.3866, 33.2829, 0.0, 0.153181", "-30.6871, 45.777, 0.0, 0.153181", "-38.9877, 58.271, 0.0, 0.153181" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-94.071, -22.101, -98.0723, 0.07", "-95.4262, -22.9929, -98.5677, 0.07", "-96.6924, -23.7602, -99.0743, 0.51", "-98.0103, -24.5013, -99.6441, 0.22", "-99.4243, -25.2308, -100.326, 0.07", "-100.71, -25.8633, -101.007, 0.29", "-101.397, -26.1907, -101.374, 0.07", "-102.624, -26.7202, -102.024, 1.02", "-104.086, -27.3266, -102.845, 0.07", "-105.307, -27.8851, -103.56, 0.51", "-106.679, -28.5897, -104.418, 0.15", "-107.582, -29.1324, -104.972, 0.36", "-108.661, -29.8977, -105.639, 0.07", "-109.578, -30.6739, -106.188, 0.51", "-110.925, -32.0328, -106.977, 0.07", "-111.599, -32.8391, -107.352, 0.73", "-112.663, -34.311, -107.926, 0.07", "-113.021, -34.8455, -108.128, 0.22", "-113.343, -35.3278, -108.314, 0.07", "-113.637, -35.7714, -108.454, 0.36", "-114.002, -36.3088, -108.608, 0.07", "-114.479, -36.9649, -108.826, 0.44", "-115.203, -37.7895, -109.137, 0.15", "-116.008, -38.4744, -109.512, 0.88" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-94.071, -22.101, -98.0723, 0.07", "-95.1287, -22.7191, -99.2788, 0.07", "-95.9557, -23.2517, -100.43, 0.51", "-96.2608, -23.4748, -100.898, 0.15", "-96.9631, -24.0391, -102.075, 0.44", "-97.5004, -24.4643, -103.048, 0.07", "-98.5257, -25.2451, -105.141, 0.07", "-98.7645, -25.425, -105.775, 0.51", "-98.9295, -25.5464, -106.259, 0.36", "-99.337, -25.8443, -107.56, 0.66", "-99.7684, -26.1338, -109.099, 0.36", "-100.154, -26.3958, -110.469, 0.07", "-100.375, -26.5359, -111.226, 0.36", "-100.767, -26.7691, -112.531, 0.36", "-100.978, -26.8889, -113.234, 0.51", "-101.83, -27.4825, -116.174, 0.07", "-102.244, -27.8984, -117.605, 0.07" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-19.317, 7.86718, 4.86196, 0.22", "-18.7885, 6.90462, 5.10714, 0.22", "-18.1332, 5.06708, 5.42745, 0.22", "-17.8384, 3.98109, 5.56258, 0.22", "-17.6307, 3.04725, 5.65107, 0.22", "-17.4026, 1.85208, 5.74792, 0.22", "-17.2409, 0.79161, 5.83642, 0.44", "-17.1603, -0.892035, 5.8958, 0.07", "-17.2479, -1.57118, 5.93348, 0.07", "-17.413, -2.16068, 6.01648, 0.22", "-17.5681, -2.58962, 6.09722, 0.07", "-17.8189, -3.176, 6.26212, 0.07", "-18.004, -3.54781, 6.41986, 0.07", "-18.8066, -4.94347, 7.23394, 0.22", "-19.213, -5.51074, 7.62376, 0.22", "-18.3719, -15.7114, 8.12756, 0.22", "-17.2091, -25.8513, 9.01364, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-19.317, 7.86718, 4.86196, 0.15", "-19.6813, 8.68635, 5.63338, 0.15", "-19.875, 9.60489, 6.7637, 0.29", "-19.7827, 9.98544, 7.48124, 0.29", "-19.342, 10.2984, 8.79451, 0.29", "-19.1305, 10.3149, 9.30823, 0.22", "-18.7836, 10.1818, 10.1142, 0.22", "-18.2202, 9.77224, 11.2917, 0.22", "-17.6635, 9.18953, 12.4608, 0.22", "-17.1558, 8.54291, 13.4796, 0.22", "-16.7539, 7.91816, 14.2806, 0.22", "-16.291, 6.97703, 15.3865, 0.51", "-16.1299, 6.4725, 15.902, 0.95", "-16.074, 5.61408, 16.63, 1.17" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-15.816, 10.3186, -0.861594, 0.88", "-16.2406, 11.8665, -0.421254, 0.88", "-16.7319, 13.6628, 0.0639853, 0.88", "-16.9504, 14.4037, 0.251701, 0.88", "-17.3825, 15.7534, 0.54471, 0.73", "-17.7201, 16.808, 0.773633, 0.73", "-18.0422, 17.8139, 0.991986, 1.61", "-18.1957, 18.2478, 1.0596, 1.97", "-18.4942, 19.0321, 1.15964, 1.46", "-18.9817, 20.3083, 1.30245, 0.8" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.816, 10.3186, -0.861594, 0.36", "-17.0981, 11.3269, -0.599789, 0.36", "-17.7105, 11.7827, -0.397309, 0.8", "-18.5687, 12.3856, -0.0468933, 0.8", "-19.7412, 13.147, 0.482985, 0.66", "-20.7729, 13.7143, 0.985384, 0.8", "-21.6489, 14.1363, 1.40658, 0.95", "-22.3783, 14.4062, 1.76975, 1.09", "-23.1729, 14.611, 2.11582, 1.53", "-24.18, 14.7632, 2.41741, 1.09", "-25.857, 14.9051, 2.61024, 0.73", "-26.4425, 14.9479, 2.58559, 0.73", "-28.0985, 15.1282, 2.2895, 0.73", "-28.7854, 15.2592, 2.06953, 0.73", "-30.0133, 15.5872, 1.53843, 0.73", "-30.9274, 15.9118, 1.06527, 1.17", "-31.8114, 16.2966, 0.564801, 1.61", "-32.6542, 16.7117, 0.0671951, 1.61", "-33.9878, 17.4736, -0.738471, 1.02", "-35.0519, 18.1056, -1.36492, 1.02", "-36.1343, 18.785, -1.9702, 1.02", "-37.2902, 19.5448, -2.56835, 1.02", "-38.3576, 20.2685, -3.06781, 1.02", "-39.5146, 21.0532, -3.56425, 0.95", "-40.2085, 21.5424, -3.82722, 0.95", "-40.8764, 22.0616, -4.05731, 1.46", "-41.7028, 22.7662, -4.28057, 1.82", "-42.3922, 23.4213, -4.36652, 1.82" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.29396, -12.4028, 2.74785, 0.51", "4.57354, -12.4047, 2.91736, 0.51", "5.73858, -12.1692, 3.73815, 0.29", "6.28722, -11.9165, 4.28451, 0.29", "6.65837, -11.6291, 4.77619, 0.15", "7.02672, -11.1569, 5.44062, 0.15", "7.20409, -10.8181, 5.89699, 0.44", "7.38744, -10.1763, 6.64281, 0.66", "7.52586, -9.23686, 7.63164, 0.15", "7.5863, -8.95465, 7.92953, 0.15", "7.73505, -8.56075, 8.32385, 0.36", "8.24598, -7.84319, 8.97752, 0.36", "8.71082, -7.47818, 9.29233, 0.8", "9.61282, -7.02781, 9.63866, 0.8", "10.7615, -6.60688, 9.99027, 0.15", "11.8359, -6.3269, 10.2806, 0.15", "12.2692, -6.26235, 10.3716, 0.15", "12.7902, -6.25414, 10.477, 0.15", "13.0881, -6.33124, 10.6019, 0.15", "13.7953, -6.81125, 11.0231, 0.15", "14.1542, -7.01176, 11.2113, 0.15", "14.4118, -7.19829, 11.4089, 0.15", "15.3886, -7.86692, 12.1673, 0.15", "15.8169, -8.03551, 12.4017, 0.15", "16.8557, -8.13828, 12.6488, 0.15", "18.8811, -8.10959, 12.8432, 0.15", "26.3165, -5.44782, 19.0053, 0.15", "33.6124, -1.20273, 24.4474, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "4.29396, -12.4028, 2.74785, 0.51", "4.09769, -11.8463, 3.38284, 0.51", "3.38369, -10.596, 4.86107, 0.73", "2.79058, -9.80877, 5.88407, 0.73", "2.27719, -9.25168, 6.66153, 0.73", "1.59892, -8.62739, 7.57037, 0.73", "0.600565, -7.86056, 8.77108, 0.73", "-0.316625, -7.35577, 9.68258, 0.73", "-1.24139, -7.01805, 10.4803, 0.73", "-2.19815, -6.81333, 11.3125, 0.73", "-2.85828, -6.73601, 11.8917, 0.73", "-3.79888, -6.71983, 12.7352, 0.73", "-4.3746, -6.78611, 13.2191, 0.73", "-3.64112, -6.76258, 13.1993, 0.73", "-2.78956, -6.76092, 13.4624, 0.73", "-1.18951, -6.76753, 13.9994, 0.58", "-0.393557, -6.78385, 14.2369, 0.88", "0.498472, -6.79135, 14.453, 0.88", "1.42386, -6.76029, 14.6547, 0.22", "1.92754, -6.71656, 14.7595, 0.22", "2.9279, -6.6186, 14.9469, 0.22", "3.80288, -6.54151, 15.126, 0.22", "4.44973, -6.52071, 15.2554, 0.22", "5.47134, -6.56815, 15.4799, 0.22", "6.13136, -6.63972, 15.6285, 0.22", "6.1197, -2.70267, 24.8615, 0.22", "8.18422, 0.0855308, 34.2603, 0.22" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.93231, -17.4949, 2.19885, 1.9", "3.72106, -18.875, 3.50527, 1.9", "4.25062, -20.2357, 4.60861, 0.88", "4.33409, -20.6303, 4.91633, 0.8", "4.37149, -21.1186, 5.28914, 0.8", "4.34642, -21.4685, 5.56556, 0.8", "4.18394, -22.1466, 6.13232, 0.73", "3.613, -22.2281, 6.38494, 0.58", "2.8659, -22.0485, 6.69903, 0.58", "2.61419, -21.9339, 6.79464, 0.58", "1.67168, -21.4291, 7.16788, 1.17", "1.03581, -21.0801, 7.46206, 1.17", "-0.244366, -20.4294, 8.18, 1.17", "-1.05398, -20.0688, 8.7058, 0.8", "-1.94022, -19.7892, 9.37735, 0.51", "-2.91659, -19.6133, 10.1818, 0.51", "-3.81638, -19.6006, 10.9885, 0.51", "-4.91062, -19.7712, 12.079, 1.39", "-5.31026, -19.9188, 12.54, 1.39", "-6.20525, -20.4766, 13.7849, 1.39", "-6.63808, -20.9217, 14.603, 1.09", "-6.83272, -21.3474, 15.2563, 0.88", "-6.91488, -21.968, 16.0987, 0.66", "-6.53698, -22.8225, 17.0011, 0.36", "-5.85528, -23.6448, 17.6781, 0.29", "-5.427, -24.0314, 17.9413, 0.29", "-4.75727, -24.5556, 18.2769, 0.29", "-7.99004, -28.5983, 26.8789, 0.29", "-9.36008, -30.7961, 36.5498, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "2.93231, -17.4949, 2.19885, 1.53", "2.91219, -18.9692, 1.53688, 1.53", "2.89487, -20.2384, 0.967058, 1.53", "2.87806, -21.4706, 0.413803, 1.97", "2.86281, -22.5877, -0.0877817, 2.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-17.2091, -25.8513, 9.01364, 0.07", "-15.9161, -35.5844, 11.87, 0.07", "-14.0269, -45.1136, 15.0325, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-17.2091, -25.8513, 9.01364, 0.07", "-16.9798, -36.095, 9.27964, 0.07", "-18.1141, -46.2714, 9.65905, 0.07", "-18.7852, -56.3588, 11.3009, 0.07", "-21.4831, -66.2094, 11.9034, 0.07", "-25.6593, -75.5211, 11.7279, 0.07", "-28.2977, -85.3459, 12.8065, 0.07", "-32.1153, -94.5925, 14.8179, 0.07", "-34.5637, -104.492, 15.6754, 0.07", "-36.3017, -114.478, 17.1142, 0.07", "-37.0832, -124.654, 18.0244, 0.07", "-38.0283, -134.851, 18.3889, 0.07", "-40.3267, -144.698, 16.8298, 0.07", "-42.8986, -154.59, 16.3406, 0.07", "-44.9297, -164.555, 17.5061, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-16.074, 5.61408, 16.63, 0.44", "-15.885, 6.7106, 17.0719, 0.44", "-15.6828, 8.16037, 17.5727, 0.58", "-15.5914, 8.91419, 17.789, 0.44", "-15.503, 9.71124, 17.9738, 0.22", "-15.4393, 10.3568, 18.0957, 0.22", "-15.3514, 11.2481, 18.2641, 0.22", "-15.2964, 11.865, 18.3378, 0.22", "-15.22, 12.9384, 18.3929, 1.02", "-15.1604, 14.1636, 18.4523, 0.36", "-15.1253, 15.2999, 18.4956, 0.15", "-14.6205, 25.2315, 20.9165, 0.15" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-16.074, 5.61408, 16.63, 0.15", "-16.6897, 6.18211, 16.594, 0.15", "-17.5435, 7.23702, 16.7348, 0.15", "-17.8831, 7.84248, 16.879, 0.15", "-18.2485, 8.62824, 17.1135, 0.15", "-18.7883, 9.73974, 17.5619, 0.15", "-19.1621, 10.4111, 17.8714, 0.15", "-19.3934, 10.817, 18.1209, 0.15", "-19.8107, 11.4176, 18.5901, 0.44", "-20.3937, 11.9324, 19.1397, 0.29", "-21.3401, 12.2197, 19.7761, 0.15", "-22.006, 12.1874, 20.0735, 0.15", "-22.7026, 12.0739, 20.3157, 0.15", "-23.9109, 11.8388, 20.6716, 0.15", "-24.5927, 11.691, 20.8561, 0.15", "-25.1928, 11.5658, 21.0025, 0.15", "-25.7381, 11.5191, 21.1189, 0.15", "-26.4233, 11.6407, 21.3242, 0.15", "-27.0558, 11.9858, 21.5608, 0.15", "-27.5529, 12.3893, 21.7662, 0.15", "-28.0178, 12.7994, 21.933, 0.15", "-28.3355, 13.0909, 22.0325, 0.15", "-29.0116, 13.6829, 22.2187, 0.22", "-29.4265, 14.0028, 22.3194, 0.22", "-29.9763, 14.3569, 22.4474, 0.22", "-30.8301, 14.8263, 22.6554, 0.15", "-31.8941, 15.3598, 22.9745, 0.15", "-32.5355, 15.6915, 23.2154, 0.15", "-33.0875, 16.0128, 23.4604, 0.36", "-33.7973, 16.4317, 23.8046, 0.15", "-34.5507, 16.8412, 24.1572, 0.15", "-35.4204, 17.2486, 24.5127, 0.15", "-36.0623, 17.5, 24.7342, 0.15", "-36.6559, 17.6694, 24.9038, 0.15", "-37.6966, 17.9591, 25.1703, 0.15", "-39.3981, 18.4106, 25.5169, 0.15", "-40.7552, 18.7321, 25.7189, 1.09", "-41.9377, 18.9435, 25.8293, 1.09", "-43.4627, 19.1053, 25.9367, 0.22", "-51.7718, 24.222, 28.3939, 0.22", "-59.2855, 30.7295, 30.1931, 0.22", "-67.6597, 36.329, 30.0208, 0.22", "-74.4992, 43.7028, 31.2329, 0.22", "-81.3755, 50.772, 33.5026, 0.22", "-87.9906, 58.4398, 34.0285, 0.22", "-92.7078, 67.3657, 35.4126, 0.22", "-97.6137, 76.1108, 37.1847, 0.22", "-102.504, 84.849, 39.0302, 0.22", "-106.611, 94.1364, 40.048, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-18.9817, 20.3083, 1.30245, 0.29", "-18.375, 21.3025, 2.01303, 0.29", "-17.7709, 22.007, 2.56772, 0.29", "-17.3133, 22.451, 2.94812, 0.73", "-16.8492, 22.8978, 3.30181, 1.17", "-16.5199, 23.2284, 3.54758, 1.17", "-15.6581, 24.1855, 4.1939, 0.36", "-15.0076, 24.9378, 4.61298, 0.58", "-14.612, 25.492, 4.90967, 0.36", "-14.2334, 26.3659, 5.36524, 0.22", "-14.156, 26.9796, 5.66073, 0.22", "-14.2432, 27.7771, 5.98261, 0.22", "-14.4173, 28.4851, 6.22072, 0.22", "-14.7262, 29.6701, 6.59432, 0.66", "-15.0148, 30.8955, 7.00162, 0.22", "-15.1551, 31.6805, 7.28792, 0.22", "-15.2743, 32.6596, 7.68152, 0.22", "-15.3438, 33.6213, 8.0927, 0.22", "-15.3951, 34.7894, 8.59387, 0.07", "-15.3743, 35.677, 8.97036, 0.44", "-15.2935, 36.5882, 9.39532, 0.22", "-15.1994, 37.4762, 9.83646, 0.07", "-15.152, 38.1672, 10.2257, 0.51", "-15.1889, 38.8227, 10.6118, 0.15", "-14.6925, 47.0432, 16.5644, 0.15", "-12.7375, 55.5186, 21.8375, 0.15", "-10.1161, 64.697, 25.4354, 0.15", "-7.26802, 73.2841, 30.0941, 0.15", "-5.4931, 81.7892, 35.3855, 0.15", "-5.13016, 90.5804, 40.5145, 0.15", "-3.37441, 98.7586, 46.2814, 0.15", "-1.49137, 106.876, 52.0887, 0.15", "1.20542, 115.159, 57.3266, 0.15", "2.3448, 124.114, 62.0558, 0.15", "2.89714, 132.773, 67.3789, 0.15", "3.82115, 140.792, 73.5382, 0.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-18.9817, 20.3083, 1.30245, 0.44", "-19.8687, 20.7729, 1.71472, 0.44", "-20.559, 21.3099, 2.16592, 0.44", "-20.9888, 21.7387, 2.47955, 0.44", "-21.5248, 22.3519, 2.87166, 0.44", "-22.0561, 22.9728, 3.20351, 0.44", "-22.8357, 23.8953, 3.65341, 0.66", "-23.309, 24.5291, 3.94666, 0.88", "-23.7081, 25.0647, 4.17425, 1.09", "-24.1, 25.5479, 4.3514, 1.24", "-25.0817, 26.563, 4.6627, 0.36", "-25.7585, 27.0933, 4.80158, 0.22", "-26.3121, 27.3926, 4.87472, 0.22", "-27.1152, 27.6813, 4.94966, 0.22", "-27.6886, 27.8293, 4.97252, 0.22", "-28.3795, 27.9838, 4.96112, 0.22", "-29.2326, 28.1972, 4.88526, 0.66", "-29.7802, 28.3845, 4.79553, 0.88", "-30.53, 28.8005, 4.66451, 0.44", "-31.1007, 29.3403, 4.61255, 0.29", "-31.5821, 30.0165, 4.63424, 0.29", "-32.0471, 30.8361, 4.73588, 0.66", "-32.2548, 31.2501, 4.82213, 0.66", "-32.6489, 32.0892, 5.07087, 0.36", "-33.1107, 33.1, 5.44876, 0.22", "-33.27, 33.4391, 5.59473, 0.22", "-33.6277, 34.1136, 5.91419, 0.22", "-34.1346, 34.8967, 6.29804, 0.22", "-34.6004, 35.4121, 6.57268, 0.22", "-35.0821, 35.859, 6.79464, 0.15", "-35.401, 36.1101, 6.91, 0.15", "-35.8919, 36.4494, 7.08284, 0.51", "-36.8039, 36.9642, 7.40581, 0.29", "-37.9953, 37.2926, 7.80667, 0.07", "-46.464, 42.2705, 9.97348, 0.07", "-54.9279, 47.3873, 11.829, 0.07", "-63.3516, 52.8954, 12.233, 0.07", "-72.2919, 57.3388, 13.3645, 0.07", "-81.42, 61.5245, 13.3245, 0.07", "-90.0629, 66.6264, 12.5997, 0.07", "-98.2727, 72.4771, 12.7349, 0.07", "-106.61, 77.921, 11.227, 0.07", "-113.76, 84.3228, 8.08431, 0.07", "-121.105, 90.739, 5.46438, 0.07", "-128.15, 97.2924, 2.38322, 0.07", "-136.431, 102.886, 1.10593, 0.07", "-144.341, 108.531, -1.5588, 0.07", "-150.819, 116.13, -3.3145, 0.07", "-157.649, 123.341, -5.2757, 0.07", "-162.75, 132.143, -5.77948, 0.07", "-166.8, 141.415, -7.10405, 0.07", "-169.03, 151.327, -8.33591, 0.07" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-42.3922, 23.4213, -4.36652, 0.51", "-43.4643, 23.5446, -3.29697, 0.51", "-44.2634, 23.635, -2.62905, 0.51", "-45.735, 23.9034, -1.51996, 0.51", "-46.3698, 24.0701, -1.06098, 0.51", "-47.6878, 24.5319, -0.165777, 0.66", "-48.5638, 24.9476, 0.34467, 0.58", "-49.602, 25.5454, 0.722515, 0.51", "-50.457, 26.1563, 0.91058, 0.51", "-51.1914, 26.7657, 0.983976, 0.51", "-52.0071, 27.5331, 1.02544, 0.51", "-53.6429, 29.1428, 0.962257, 0.51", "-54.855, 30.2569, 0.797547, 0.51", "-55.452, 30.7307, 0.67275, 0.51", "-56.3053, 31.2608, 0.462118, 0.88", "-56.6784, 31.427, 0.369483, 1.09", "-58.4876, 31.8814, 0.0504006, 0.51", "-59.5721, 31.9685, 0.00267753, 0.51", "-60.219, 31.9749, 0.0469026, 0.51", "-61.0145, 31.9859, 0.121753, 0.51", "-62.157, 32.0618, 0.235372, 0.51", "-63.4476, 32.2522, 0.358803, 0.66", "-65.081, 32.7037, 0.528087, 1.02", "-66.6869, 33.406, 0.666184, 0.66", "-67.9253, 34.144, 0.709702, 0.51", "-69.3843, 35.2578, 0.660531, 0.44", "-70.3442, 36.1283, 0.550001, 0.88", "-71.3534, 37.1293, 0.361598, 0.66", "-72.3811, 38.1925, 0.139317, 0.51", "-73.0625, 38.861, -0.0106339, 0.51", "-73.8617, 39.5242, -0.183577, 0.36", "-74.8006, 40.0879, -0.407529, 0.58", "-76.0982, 40.5421, -0.770917, 0.95", "-77.0607, 40.7117, -1.06516, 1.17", "-78.7063, 40.8422, -1.54636, 0.51", "-79.3998, 40.8704, -1.72573, 0.51", "-80.5314, 40.9021, -1.97173, 0.44", "-81.7385, 40.9758, -2.15813, 0.44", "-82.4281, 41.0631, -2.19337, 0.44", "-83.5738, 41.3069, -2.1338, 0.44", "-85.1583, 41.782, -1.88816, 0.51", "-85.9846, 42.0756, -1.70801, 0.51", "-87.1153, 42.5366, -1.40968, 1.61", "-88.0782, 42.9448, -1.1349, 2.12", "-89.0467, 43.352, -0.857083, 2.12", "-90.5121, 43.9565, -0.461301, 0.88", "-91.3263, 44.292, -0.235619, 0.58", "-91.7526, 44.457, -0.126146, 0.73", "-93.4384, 45.0442, 0.281448, 0.51", "-94.601, 45.4126, 0.55197, 0.8", "-95.313, 45.6235, 0.730551, 1.02", "-96.2463, 45.8924, 0.978487, 0.73", "-97.5715, 46.26, 1.29378, 0.51", "-98.9536, 46.6326, 1.58216, 0.44", "-99.884, 46.8842, 1.74254, 0.8", "-100.971, 47.1822, 1.94394, 1.02", "-102.723, 47.6927, 2.32355, 0.51", "-103.982, 48.094, 2.66744, 0.66", "-104.902, 48.4372, 3.02875, 0.44", "-105.651, 48.7833, 3.46401, 0.44", "-106.811, 49.5064, 4.49846, 0.22", "-107.284, 50.0076, 5.22638, 0.15", "-107.661, 50.7567, 6.28306, 0.15", "-107.859, 51.4088, 7.09919, 0.15", "-107.94, 51.9111, 7.62371, 0.36", "-108.008, 52.5004, 8.17807, 0.36", "-108.154, 53.446, 8.86321, 0.07", "-108.317, 54.0795, 9.24703, 0.07", "-108.537, 54.8086, 9.56588, 0.36", "-108.812, 55.7813, 9.89893, 0.07", "-117.235, 60.2005, 13.1344, 0.07", "-125.853, 63.4873, 17.0636, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-42.3922, 23.4213, -4.36652, 0.44", "-42.826, 24.1567, -4.2379, 0.44", "-43.1763, 24.758, -4.18119, 0.44", "-43.7215, 25.8349, -4.17971, 0.44", "-44.1276, 26.7738, -4.24904, 0.44", "-44.4754, 27.7825, -4.43818, 0.88", "-44.7039, 28.6148, -4.64939, 0.88", "-44.9049, 29.6667, -5.07308, 0.36", "-45.0396, 30.6771, -5.62784, 0.36", "-45.0925, 31.2648, -6.09321, 0.36", "-45.1784, 32.2923, -7.18534, 0.36", "-45.233, 32.6666, -7.73822, 0.36", "-45.4123, 33.0984, -8.64778, 0.36", "-45.64, 33.3265, -9.25614, 0.58", "-46.1207, 33.6743, -10.1828, 0.58", "-46.4842, 34.0029, -10.8179, 0.29", "-46.6658, 34.2289, -11.1284, 0.29", "-46.9708, 34.818, -11.6982, 0.29", "-47.3826, 36.0633, -12.5705, 0.29", "-47.6289, 37.0202, -13.127, 0.29", "-47.9014, 38.0863, -13.6739, 1.09", "-48.0427, 38.5835, -13.9247, 1.09", "-48.3613, 39.4748, -14.3684, 0.22", "-48.6277, 40.0065, -14.6301, 0.22", "-48.962, 40.4591, -14.8671, 0.22", "-49.5797, 41.0873, -15.2339, 0.22", "-50.2433, 41.6453, -15.6348, 0.51", "-50.8818, 42.1652, -16.0258, 1.02", "-51.5773, 42.7596, -16.4796, 1.24", "-52.1241, 43.2731, -16.8545, 1.24", "-53.3499, 44.6194, -17.7811, 0.22", "-54.1536, 45.7852, -18.5223, 0.22", "-54.5285, 46.5117, -18.9377, 0.36", "-54.8362, 47.2394, -19.3298, 0.66", "-55.015, 47.7273, -19.5841, 0.88", "-55.245, 48.422, -19.9102, 0.88", "-55.6474, 49.6251, -20.3984, 0.15", "-55.9474, 50.1488, -20.5757, 0.58", "-56.8851, 51.2724, -20.8197, 0.15", "-57.8715, 52.1872, -20.9271, 0.66", "-58.4113, 52.6225, -20.9465, 1.68", "-59.4714, 53.4106, -20.925, 2.41", "-61.4228, 54.8113, -20.8302, 0.58", "-62.7614, 55.8251, -20.7536, 0.36", "-63.4947, 56.4814, -20.6972, 0.15", "-63.7542, 56.7458, -20.6834, 0.15", "-64.2083, 57.2741, -20.6805, 0.15", "-64.7939, 58.1121, -20.7398, 0.73", "-65.1206, 58.6912, -20.8216, 0.73", "-65.727, 59.7574, -21.0033, 0.29", "-66.1011, 60.4027, -21.0792, 0.29", "-66.8769, 61.5846, -21.2102, 1.02", "-67.3836, 62.2635, -21.3129, 1.17", "-68.47, 63.5303, -21.5456, 0.15", "-68.9558, 64.0262, -21.6677, 0.36", "-69.2888, 64.3186, -21.7905, 0.36", "-70.2311, 65.1076, -22.2568, 0.07", "-71.0235, 65.7776, -22.8005, 0.66", "-71.4775, 66.1591, -23.1553, 1.24", "-71.7667, 66.3922, -23.3966, 1.24", "-72.5915, 66.9918, -24.0524, 0.15", "-72.9227, 67.1983, -24.3033, 0.15", "-73.4301, 67.4795, -24.637, 0.15", "-73.9889, 67.7324, -24.9209, 0.15", "-74.5892, 67.9372, -25.2162, 0.15", "-75.5175, 68.1996, -25.6574, 0.66", "-76.5444, 68.4552, -26.1209, 1.53", "-77.1606, 68.6086, -26.4069, 2.04", "-78.4378, 68.9577, -27.032, 1.61", "-80.0316, 69.5072, -27.8554, 0.15", "-80.368, 69.6882, -28.0278, 0.15", "-80.6894, 69.952, -28.1831, 0.15", "-81.1509, 70.4775, -28.3964, 0.15", "-81.6154, 71.1556, -28.6437, 0.95", "-81.9256, 71.7203, -28.8237, 1.09", "-82.6619, 73.1862, -29.1923, 0.22", "-82.848, 73.5077, -29.2858, 0.22", "-83.0347, 73.7568, -29.3719, 0.22", "-83.5271, 74.1198, -29.5705, 0.22", "-84.1704, 74.1467, -29.8445, 0.44", "-84.7245, 74.0159, -30.1151, 0.44", "-85.4738, 73.8592, -30.5904, 0.15", "-85.7274, 73.8796, -30.7463, 0.15", "-86.1244, 73.9914, -30.9733, 0.15", "-86.615, 74.2338, -31.2614, 0.44", "-87.2395, 74.652, -31.7032, 0.22", "-88.1336, 75.4011, -32.4056, 0.73", "-88.8045, 76.0581, -32.9469, 1.53", "-89.0894, 76.3506, -33.1783, 1.53", "-90.0419, 77.3642, -33.9142, 0.07", "-90.6817, 78.056, -34.3863, 0.07", "-91.0422, 78.4709, -34.6454, 0.88", "-91.5567, 79.1256, -34.9605, 1.46", "-91.9938, 79.7398, -35.2305, 1.46", "-93.0073, 81.2219, -35.7932, 0.15", "-93.4885, 81.89, -35.9865, 0.15", "-94.0444, 82.6118, -36.1848, 0.66", "-94.9141, 83.7351, -36.5089, 0.07", "-95.7516, 84.9689, -36.9026, 0.36", "-95.9569, 85.3181, -37.0287, 0.36", "-96.5749, 86.4559, -37.4801, 0.07", "-97.0037, 87.1888, -37.7824, 0.58", "-97.4794, 87.9201, -38.1439, 0.88", "-98.2494, 88.9793, -38.749, 0.07", "-98.6965, 89.5515, -39.0677, 0.73", "-98.8927, 89.7806, -39.1959, 0.73", "-99.91, 90.8115, -39.8542, 0.07", "-100.837, 91.5383, -40.3679, 1.02", "-101.457, 91.9051, -40.6745, 1.61", "-101.855, 92.0793, -40.8446, 1.61", "-102.87, 92.4369, -41.2427, 0.73", "-104.174, 92.8329, -41.8289, 0.07", "-104.944, 93.041, -42.207, 0.07", "-105.265, 93.1242, -42.358, 0.07", "-105.712, 93.2501, -42.5956, 0.58", "-106.272, 93.4314, -42.906, 0.8", "-107.728, 93.9789, -43.7113, 0.29", "-108.503, 94.3086, -44.136, 0.51", "-108.945, 94.5135, -44.4069, 0.51", "-110.084, 95.0426, -45.1106, 0.07", "-110.782, 95.3521, -45.5328, 0.8", "-111.262, 95.5365, -45.8273, 0.8", "-112.875, 96.0759, -46.8299, 0.07", "-114.096, 96.5001, -47.6187, 0.66", "-114.763, 96.7484, -48.0668, 1.46", "-115.107, 96.8756, -48.3025, 1.46", "-116.397, 97.3309, -49.2562, 0.29", "-117.158, 97.6028, -49.8223, 0.29", "-118.228, 98.0377, -50.612, 0.07", "-119.094, 98.435, -51.2478, 0.66", "-119.958, 98.9041, -51.9235, 1.82", "-121.173, 99.6796, -52.9401, 0.29", "-121.838, 100.168, -53.5042, 0.8", "-122.977, 100.994, -54.4871, 0.15", "-123.355, 101.259, -54.818, 0.36", "-124.048, 101.736, -55.3699, 0.73", "-124.705, 102.184, -55.8422, 0.07", "-125.263, 102.516, -56.1793, 0.88", "-126.393, 103.007, -56.7239, 0.07", "-127.069, 103.222, -56.9138, 0.29", "-128.115, 103.524, -57.1425, 0.07", "-128.612, 103.687, -57.2486, 0.66", "-129.174, 103.927, -57.3674, 0.95", "-130.302, 104.52, -57.6267, 0.07", "-131.292, 105.162, -57.8597, 0.07", "-132.748, 106.275, -58.2785, 0.07", "-133.916, 107.32, -58.6897, 0.07", "-134.898, 108.328, -59.1401, 0.44", "-135.237, 108.737, -59.3256, 0.29", "-135.594, 109.229, -59.5488, 1.09", "-136.039, 109.931, -59.845, 1.09", "-136.844, 111.393, -60.341, 0.07", "-137.77, 113.18, -60.883, 0.07", "-138.297, 114.261, -61.2131, 1.17", "-138.5, 114.683, -61.3404, 0.95", "-139.121, 115.961, -61.705, 0.22", "-139.381, 116.487, -61.8339, 0.07", "-139.531, 116.782, -61.8733, 0.07", "-139.891, 117.43, -61.9007, 0.29", "-140.391, 118.246, -61.9259, 0.07", "-140.762, 118.838, -62.0065, 0.51", "-141.025, 119.262, -62.1108, 0.51", "-141.691, 120.422, -62.5733, 0.07", "-142.056, 121.095, -62.9545, 0.95", "-142.25, 121.437, -63.2226, 1.17", "-143.318, 123.17, -64.9418, 0.07", "-143.709, 123.727, -65.632, 0.88", "-144.497, 124.806, -67.1352, 0.22", "-145.158, 125.671, -68.5227, 0.44", "-145.804, 126.449, -69.9136, 0.44", "-146.106, 126.769, -70.6009, 1.09", "-146.406, 126.958, -71.3123, 1.09" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "33.6124, -1.20273, 24.4474, 0.07", "41.5491, 1.69227, 29.8355, 0.07", "48.9873, 5.34338, 35.491, 0.07", "56.9417, 8.70785, 40.5854, 0.07", "65.2143, 12.0814, 45.1387, 0.07", "73.8844, 15.9378, 48.4058, 0.07", "83.4221, 18.3799, 50.2378, 0.07", "92.9358, 19.9815, 52.8927, 0.07", "102.776, 21.495, 53.8892, 0.07", "112.256, 24.6356, 53.0274, 0.07", "121.356, 28.8566, 52.5468, 0.07", "130.051, 33.6103, 50.8478, 0.07", "138.142, 38.5978, 47.5516, 0.07", "146.44, 44.167, 46.2777, 0.07", "153.637, 51.2697, 46.7067, 0.07", "160.797, 58.2072, 48.4167, 0.07", "168.931, 64.1558, 48.7994, 0.07", "177.846, 68.1883, 51.0477, 0.07", "186.359, 73.0999, 53.1844, 0.07", "195.216, 77.1278, 55.6558, 0.07", "204.091, 81.5762, 57.2079, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "33.6124, -1.20273, 24.4474, 0.07", "41.1633, 1.76458, 30.3299, 0.07", "48.3086, 3.50207, 37.1174, 0.07", "56.5467, 7.07723, 41.586, 0.07", "64.8593, 9.72934, 46.506, 0.07", "72.7675, 12.0626, 52.1874, 0.07", "80.2481, 14.558, 58.361, 0.07", "87.0916, 17.7043, 64.975, 0.07", "92.5266, 22.9084, 71.6595, 0.07", "98.4327, 28.035, 77.9921, 0.07", "105.13, 33.0797, 83.5531, 0.07", "111.373, 37.1443, 90.2837, 0.07" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.18422, 0.0855308, 34.2603, 0.07", "9.5277, 3.78117, 43.4904, 0.07", "10.2085, 5.56927, 53.3135, 0.07" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.18422, 0.0855308, 34.2603, 0.07", "9.04394, 3.7215, 43.5704, 0.07", "9.71429, 6.09909, 53.2745, 0.07", "11.6219, 8.68624, 62.7608, 0.07", "12.389, 10.7223, 72.5315, 0.07", "13.8991, 11.5558, 82.3833, 0.07", "17.509, 10.1946, 91.614, 0.07", "20.533, 9.53387, 101.124, 0.07", "24.0132, 7.08691, 110.19, 0.07", "27.51, 3.52381, 118.89, 0.07", "31.6701, -1.83281, 126.332, 0.07", "37.266, -6.23148, 133.422, 0.07", "43.4579, -11.5667, 139.301, 0.07", "50.5569, -16.2191, 144.687, 0.07" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.36008, -30.7961, 36.5498, 0.07", "-12.0403, -34.1364, 45.616, 0.07" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.36008, -30.7961, 36.5498, 0.07", "-13.0928, -34.3276, 45.1635, 0.07", "-17.1381, -36.1067, 54.1425, 0.07", "-19.4193, -39.249, 63.3836, 0.07", "-20.8419, -41.0212, 73.1297, 0.07", "-20.3956, -43.5615, 82.8074, 0.07", "-19.6331, -45.9022, 92.5133, 0.07", "-19.4562, -47.3942, 102.405, 0.07", "-18.7355, -47.3838, 112.379, 0.07", "-19.2013, -46.7954, 122.352, 0.07", "-19.2796, -47.9799, 132.285, 0.07" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "2.86281, -22.5877, -0.0877817, 0.88", "2.98847, -23.981, -1.1439, 0.88", "3.07228, -24.6157, -1.67949, 0.88", "3.21877, -25.7291, -2.80787, 0.73", "3.29654, -26.5684, -3.82425, 0.73", "3.31399, -27.2237, -4.69605, 0.73", "3.30918, -27.4165, -4.95272, 0.73", "3.27772, -27.7003, -5.35774, 0.73", "3.29067, -28.3887, -6.18802, 0.73", "3.3886, -28.9623, -6.62778, 0.73", "3.6046, -29.6809, -6.91922, 0.73", "3.95134, -30.6493, -7.07483, 0.73", "4.51032, -32.1385, -7.0526, 0.73", "4.96333, -33.3786, -6.89761, 0.73", "5.31069, -34.3858, -6.68692, 0.73", "5.68664, -35.649, -6.33887, 0.88", "5.91859, -36.6529, -5.99392, 0.66", "6.08314, -37.8667, -5.51256, 0.66", "6.09008, -38.5639, -5.23654, 0.66", "6.0342, -39.4353, -4.95073, 0.51", "5.96403, -40.6723, -4.65807, 0.66", "5.95966, -41.5549, -4.51888, 0.66", "6.00355, -42.0827, -4.46158, 0.66", "6.27415, -43.5041, -4.35408, 0.66", "6.89831, -45.4627, -4.14654, 0.58", "7.50501, -46.7631, -3.97627, 0.58", "8.11182, -47.7517, -3.81997, 0.58", "8.45732, -48.22, -3.73257, 0.88", "8.92232, -48.744, -3.59048, 0.88", "9.88206, -49.5556, -3.22813, 0.88", "10.4805, -49.9306, -2.92913, 0.88", "10.7337, -50.1418, -2.75651, 0.88", "11.0297, -50.6478, -2.48015, 0.88", "11.1645, -51.1546, -2.29097, 0.88", "11.2656, -51.8471, -2.11609, 0.88", "11.3595, -52.8386, -1.92347, 0.88", "11.4935, -54.5612, -1.69415, 0.58", "11.5845, -55.7955, -1.60304, 0.95", "11.6618, -56.8664, -1.53905, 1.09", "11.7762, -58.7386, -1.42037, 0.88", "11.7997, -59.8181, -1.3108, 0.88", "11.7644, -61.1998, -1.12663, 0.88", "11.5858, -63.6499, -0.643342, 0.66", "11.4094, -64.9918, -0.277753, 0.88", "11.2424, -65.8014, 0.0249152, 1.24", "10.6925, -67.4761, 0.883488, 0.66", "10.4084, -68.152, 1.34499, 0.66", "9.95435, -69.1326, 2.19635, 0.51", "9.66871, -69.7753, 2.85911, 0.51", "9.51402, -70.3672, 3.43172, 0.51", "9.69167, -70.7863, 3.69205, 0.51", "10.4709, -71.5082, 3.97222, 0.51", "11.6287, -72.4413, 4.28925, 0.29", "12.8276, -73.3537, 4.53486, 0.51", "14.0981, -74.3865, 4.76255, 0.44", "15.1527, -75.3299, 4.9948, 0.44", "16.2453, -76.3805, 5.35942, 0.66", "16.5912, -76.7421, 5.51273, 0.88", "17.0914, -77.2978, 5.82639, 0.88", "18.0642, -78.4376, 6.63767, 0.36", "18.9589, -79.4749, 7.55262, 0.36", "19.7972, -80.5241, 8.53514, 0.22", "19.9358, -80.6889, 8.69585, 0.22", "20.5859, -81.3679, 9.49504, 0.29", "21.0088, -81.6652, 10.0514, 0.07", "21.6093, -81.4821, 10.6294, 0.15", "25.8233, -90.4661, 12.9572, 0.15", "29.9436, -99.2545, 16.0409, 0.15", "35.117, -106.884, 20.2638, 0.15", "40.8058, -114.773, 23.1632, 0.15", "47.9363, -120.979, 26.6989, 0.15", "54.9761, -126.957, 30.7517, 0.15", "61.4432, -133.641, 34.7073, 0.15", "67.9981, -139.597, 39.5317, 0.15", "73.4962, -146.18, 44.8722, 0.15", "79.4467, -152.426, 50.1121, 0.15", "84.5075, -159.777, 54.9027, 0.15", "88.1021, -167.278, 60.6933, 0.15", "91.9397, -174.827, 66.2635, 0.15", "93.8082, -183.123, 71.8319, 0.15", "94.4932, -191.632, 77.3648, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "2.86281, -22.5877, -0.0877817, 1.53", "2.03914, -23.3136, -0.567605, 1.53", "0.832886, -24.3065, -1.21569, 1.24", "-0.24817, -25.1963, -1.79652, 1.09", "-1.24157, -26.014, -2.33025, 0.88", "-2.45101, -27.0095, -2.98005, 1.09", "-3.06655, -27.5162, -3.31076, 1.31", "-3.86062, -28.1852, -3.7768, 1.68" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-14.0269, -45.1136, 15.0325, 0.07", "-11.0758, -52.864, 20.8734, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-14.0269, -45.1136, 15.0325, 0.07", "-13.0021, -55.1336, 16.873, 0.07", "-11.3964, -65.1404, 18.3254, 0.07", "-8.6788, -74.7208, 20.6177, 0.07", "-7.94046, -84.5543, 23.3409, 0.07", "-6.64294, -94.1811, 26.5201, 0.07", "-7.29547, -104.186, 28.595, 0.07", "-6.59785, -114.334, 29.8156, 0.07", "-4.27936, -124.29, 30.3417, 0.07", "-3.32289, -134.481, 30.8288, 0.07", "-1.3695, -144.511, 30.1674, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-14.6205, 25.2315, 20.9165, 0.07", "-14.6627, 35.399, 22.1824, 0.07", "-15.2524, 45.5072, 23.7312, 0.07", "-15.0628, 55.5564, 25.6919, 0.07", "-15.5564, 65.5995, 27.6294, 0.07", "-15.0744, 75.8375, 27.615, 0.07", "-13.5601, 85.8574, 29.08, 0.07", "-10.6519, 95.2341, 31.883, 0.07", "-6.38052, 104.152, 34.3445, 0.07", "-1.6321, 113.165, 34.7073, 0.07", "2.0938, 122.648, 33.9874, 0.07", "5.33035, 132.162, 32.1497, 0.07", "9.48304, 141.373, 30.7357, 0.07", "15.451, 149.503, 29.5231, 0.07", "22.7357, 156.376, 28.1186, 0.07", "30.7232, 162.232, 26.2328, 0.07" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-14.6205, 25.2315, 20.9165, 0.07", "-13.3835, 35.004, 23.6679, 0.07", "-13.5327, 44.8009, 26.6044, 0.07", "-13.1883, 54.1107, 30.774, 0.07", "-13.0332, 63.6879, 34.334, 0.07", "-12.6237, 73.6166, 36.784, 0.07", "-13.9906, 83.3488, 39.609, 0.07", "-13.5067, 93.0771, 42.7213, 0.07", "-11.9247, 102.874, 45.198, 0.07", "-9.74976, 112.779, 46.5724, 0.07", "-9.12495, 123.009, 46.4867, 0.07", "-7.24429, 132.928, 48.1614, 0.07", "-4.96826, 142.868, 49.0442, 0.07", "-2.10788, 152.322, 51.643, 0.07", "2.43223, 161.321, 53.1593, 0.07", "6.11855, 170.818, 53.9179, 0.07", "10.6551, 179.784, 55.6209, 0.07", "13.5071, 189.602, 55.9584, 0.07", "14.6629, 199.67, 54.4815, 0.07", "13.9578, 209.893, 54.3265, 0.07", "11.7153, 219.863, 53.7188, 0.07" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-106.611, 94.1364, 40.048, 0.07", "-113.644, 101.149, 41.9786, 0.07", "-119.714, 109.13, 43.566, 0.07" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-106.611, 94.1364, 40.048, 0.07", "-113.833, 101.005, 41.7588, 0.07" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-125.853, 63.4873, 17.0636, 0.07", "-134.53, 68.003, 19.3656, 0.07", "-143.394, 71.5854, 22.4017, 0.07", "-152.419, 73.3717, 26.3397, 0.07", "-162.122, 73.592, 28.7494, 0.07", "-171.617, 72.7139, 31.7696, 0.07", "-180.795, 71.0103, 35.3749, 0.07", "-190.364, 71.2591, 38.2699, 0.07", "-199.947, 72.6206, 40.7987, 0.07", "-209.311, 73.2533, 44.253, 0.07" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-125.853, 63.4873, 17.0636, 0.07", "-134.775, 67.5108, 19.2996, 0.07", "-143.324, 71.1981, 23.037, 0.07" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-146.406, 126.958, -71.3123, 0.36", "-146.496, 126.888, -71.9759, 0.36", "-146.719, 126.737, -72.9255, 0.36", "-146.915, 126.663, -73.6601, 0.58", "-147.282, 126.581, -75.1292, 0.58", "-147.586, 126.487, -76.4843, 0.36", "-147.944, 126.373, -78.0429, 0.36", "-148.457, 126.265, -79.9298, 0.36", "-148.841, 126.257, -81.1592, 0.51", "-149.151, 126.336, -82.052, 0.36", "-149.551, 126.585, -83.01, 0.58", "-150.25, 127.196, -84.285, 0.36", "-150.826, 127.763, -85.1405, 0.88", "-151.716, 128.673, -86.2966, 0.22", "-152.245, 129.182, -86.8827, 0.73", "-153.044, 129.943, -87.6446, 0.07", "-153.568, 130.473, -88.0963, 0.29", "-154.885, 131.821, -89.1363, 0.07" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-146.406, 126.958, -71.3123, 0.07", "-146.204, 125.574, -72.6487, 0.07", "-145.97, 124.555, -73.5441, 0.73", "-145.623, 123.313, -74.5986, 0.15", "-145.438, 122.68, -75.1103, 0.15", "-145.197, 121.817, -75.7889, 0.36", "-144.933, 120.836, -76.5624, 0.07", "-144.607, 119.662, -77.4471, 0.8", "-144.329, 118.72, -78.1394, 0.15", "-144.221, 118.312, -78.4557, 0.44", "-143.874, 116.628, -79.7937, 0.15", "-143.705, 115.556, -80.6373, 0.44", "-143.54, 114.147, -81.7078, 0.15", "-143.431, 112.765, -82.6841, 0.29", "-143.358, 111.587, -83.5013, 0.07", "-143.309, 110.717, -84.0971, 0.07", "-143.29, 110.191, -84.4243, 0.29", "-143.28, 108.81, -85.1731, 0.07", "-143.31, 107.906, -85.5772, 0.51" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "111.373, 37.1443, 90.2837, 0.07", "118.462, 40.6319, 96.4622, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "111.373, 37.1443, 90.2837, 0.07", "118.603, 40.7172, 96.2477, 0.07" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-19.2796, -47.9799, 132.285, 0.07", "-24.0757, -47.0803, 141.015, 0.07" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-19.2796, -47.9799, 132.285, 0.07", "-17.1423, -51.5705, 141.404, 0.07", "-16.9629, -53.5272, 151.218, 0.07" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-3.86062, -28.1852, -3.7768, 0.22", "-4.71751, -29.7986, -4.17461, 0.22", "-5.25693, -30.8487, -4.36751, 0.88", "-5.87584, -32.1076, -4.42117, 0.44", "-6.2103, -32.7992, -4.40022, 0.44", "-6.69227, -33.8924, -4.27481, 0.44", "-7.22591, -35.1403, -4.05566, 0.22", "-7.59387, -36.1281, -3.80766, 0.22", "-8.14481, -37.593, -3.36355, 1.09", "-8.31789, -38.0682, -3.18243, 1.31", "-8.76527, -39.5231, -2.59019, 0.22", "-8.95949, -40.3332, -2.25881, 0.22", "-9.14783, -41.4732, -1.83352, 0.22", "-9.2166, -42.1641, -1.63787, 0.44", "-9.26178, -43.2542, -1.41757, 0.22", "-9.24046, -44.1943, -1.26133, 0.22", "-9.18064, -44.9449, -1.17347, 0.22", "-8.97948, -46.5447, -1.02777, 0.15", "-8.79679, -47.7476, -0.925287, 0.15", "-8.62273, -48.8891, -0.825604, 0.15", "-8.46228, -50.097, -0.720155, 0.15", "-8.26007, -51.6815, -0.59257, 0.15", "-8.08855, -52.8139, -0.524729, 0.22", "-9.60204, -62.5835, 2.09507, 0.22", "-12.2976, -72.1593, 4.43069, 0.22", "-15.1457, -81.8751, 5.85941, 0.22", "-18.0272, -91.6203, 7.00127, 0.22", "-22.0285, -100.966, 6.07388, 0.22", "-24.7598, -110.521, 3.69838, 0.22", "-26.3605, -120.37, 1.43721, 0.22", "-27.0571, -130.354, -0.715187, 0.22", "-26.4244, -140.001, -4.03513, 0.22", "-26.6015, -149.953, -6.42125, 0.22", "-28.2468, -159.818, -8.58153, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.86062, -28.1852, -3.7768, 0.73", "-3.63999, -30.2929, -5.51824, 0.73", "-3.40794, -31.3194, -6.29315, 0.73", "-3.24568, -32.12, -6.84832, 0.73", "-3.11394, -32.98, -7.40507, 0.73", "-3.03854, -33.7046, -7.85615, 0.73", "-2.99706, -34.3616, -8.26698, 0.73", "-2.95249, -35.2324, -8.6822, 0.73", "-2.93573, -36.6245, -9.37526, 0.73", "-2.97946, -37.139, -9.76343, 0.73", "-3.03052, -37.4118, -10.1101, 0.73", "-3.08225, -37.5528, -10.5331, 0.73", "-3.15136, -37.583, -11.0654, 0.73", "-3.22931, -37.4867, -11.5285, 0.73", "-3.28471, -37.1526, -12.5765, 0.73", "-3.2779, -36.8234, -13.5564, 0.73", "-3.23585, -36.5379, -14.4469, 0.58", "-3.20236, -36.299, -15.2587, 0.58", "-3.25067, -36.0188, -16.3275, 0.44" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-1.3695, -144.511, 30.1674, 0.07", "-0.139331, -154.572, 31.6325, 0.07", "2.70719, -164.257, 33.2493, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-1.3695, -144.511, 30.1674, 0.07", "-0.0318675, -154.534, 31.7738, 0.07", "2.70818, -164.355, 32.6097, 0.07" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_52", "dend_51", "dend_24", "dend_21", "dend_0", "dend_57", "dend_56", "dend_54", "dend_53", "dend_36", "dend_25", "dend_23", "dend_22", "dend_12", "dend_1", "dend_59", "dend_58", "dend_44", "dend_37", "dend_33", "dend_26", "dend_16", "dend_13", "dend_7", "dend_2", "dend_46", "dend_45", "dend_41", "dend_38", "dend_35", "dend_34", "dend_30", "dend_27", "dend_20", "dend_17", "dend_15", "dend_14", "dend_11", "dend_8", "dend_6", "dend_3", "dend_50", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_10", "dend_9", "dend_5", "dend_4", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_52", "dend_51", "dend_24", "dend_21", "dend_0", "dend_57", "dend_56", "dend_54", "dend_53", "dend_36", "dend_25", "dend_23", "dend_22", "dend_12", "dend_1", "dend_59", "dend_58", "dend_44", "dend_37", "dend_33", "dend_26", "dend_16", "dend_13", "dend_7", "dend_2", "dend_46", "dend_45", "dend_41", "dend_38", "dend_35", "dend_34", "dend_30", "dend_27", "dend_20", "dend_17", "dend_15", "dend_14", "dend_11", "dend_8", "dend_6", "dend_3", "dend_50", "dend_47", "dend_43", "dend_42", "dend_40", "dend_39", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_10", "dend_9", "dend_5", "dend_4", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_12", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_39", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_18", "dend_10", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_49", "dend_49", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L5_NBC_6c09f2f610_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: soma_0
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_37
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_16
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_18, dend_10, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_49, dend_49, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.4999999289980176)
    connect dend_52(0), soma_0(0.4999999289980176)
    connect dend_51(0), soma_0(0.4999999289980176)
    connect dend_24(0), soma_0(0.4999999289980176)
    connect dend_21(0), soma_0(0.4999999289980176)
    connect dend_0(0), soma_0(0.4999999289980176)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 5.06383, -8.03547, 0.0, 2.96232 ) }
    soma_0 { pt3dadd( 4.52136, -7.21896, 0.0, 4.65461 ) }
    soma_0 { pt3dadd( 3.9789, -6.40244, 0.0, 6.41887 ) }
    soma_0 { pt3dadd( 3.43643, -5.58592, 0.0, 7.96069 ) }
    soma_0 { pt3dadd( 2.89397, -4.7694, 0.0, 9.55419 ) }
    soma_0 { pt3dadd( 2.35151, -3.95288, 0.0, 10.983 ) }
    soma_0 { pt3dadd( 1.80904, -3.13637, 0.0, 11.7075 ) }
    soma_0 { pt3dadd( 1.26658, -2.31985, 0.0, 12.5906 ) }
    soma_0 { pt3dadd( 0.724116, -1.50333, 0.0, 13.2278 ) }
    soma_0 { pt3dadd( 0.181652, -0.686812, 0.0, 13.8644 ) }
    soma_0 { pt3dadd( -0.360812, 0.129707, 0.0, 14.2774 ) }
    soma_0 { pt3dadd( -0.903275, 0.946225, 0.0, 14.5108 ) }
    soma_0 { pt3dadd( -1.44574, 1.76274, 0.0, 14.4652 ) }
    soma_0 { pt3dadd( -1.9882, 2.57926, 0.0, 14.3007 ) }
    soma_0 { pt3dadd( -2.53067, 3.39578, 0.0, 13.9535 ) }
    soma_0 { pt3dadd( -3.07313, 4.2123, 0.0, 13.2045 ) }
    soma_0 { pt3dadd( -3.61559, 5.02882, 0.0, 12.1103 ) }
    soma_0 { pt3dadd( -4.15806, 5.84533, 0.0, 10.6196 ) }
    soma_0 { pt3dadd( -4.70052, 6.66185, 0.0, 8.93613 ) }
    soma_0 { pt3dadd( -5.24299, 7.47837, 0.0, 6.69248 ) }
    soma_0 { pt3dadd( -5.78545, 8.29489, 0.0, 3.86173 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -6.39245, 3.69195, -5.2, 0.8 ) }
    dend_55 { pt3dadd( -7.44682, 3.15066, -5.60152, 0.8 ) }
    dend_55 { pt3dadd( -8.27582, 2.76205, -5.90271, 0.8 ) }
    dend_55 { pt3dadd( -9.10674, 2.38981, -6.18661, 1.24 ) }
    dend_55 { pt3dadd( -10.4538, 1.8167, -6.62492, 1.46 ) }
    dend_55 { pt3dadd( -12.498, 0.99543, -7.28242, 1.17 ) }
    dend_55 { pt3dadd( -13.6161, 0.593029, -7.63019, 0.95 ) }
    dend_55 { pt3dadd( -14.5535, 0.337546, -7.90235, 0.95 ) }
    dend_55 { pt3dadd( -15.4549, 0.179523, -8.15513, 0.95 ) }
    dend_55 { pt3dadd( -16.029, 0.128069, -8.30448, 0.95 ) }
    dend_55 { pt3dadd( -17.0715, 0.167086, -8.52464, 0.95 ) }
    dend_55 { pt3dadd( -18.246, 0.384965, -8.75651, 1.17 ) }
    dend_55 { pt3dadd( -18.9676, 0.596548, -8.87952, 1.53 ) }
    dend_55 { pt3dadd( -20.1615, 1.03558, -9.05363, 1.68 ) }
    dend_55 { pt3dadd( -20.744, 1.27067, -9.1257, 1.68 ) }
    dend_55 { pt3dadd( -22.484, 1.95268, -9.3004, 0.88 ) }
    dend_55 { pt3dadd( -23.1963, 2.21113, -9.33924, 0.88 ) }
    dend_55 { pt3dadd( -23.8152, 2.40628, -9.35487, 0.88 ) }
    dend_55 { pt3dadd( -24.7323, 2.66023, -9.35555, 0.88 ) }
    dend_55 { pt3dadd( -25.6589, 2.87487, -9.35014, 0.88 ) }
    dend_55 { pt3dadd( -27.1725, 3.18369, -9.33243, 1.09 ) }
    dend_55 { pt3dadd( -28.3637, 3.39001, -9.3115, 1.68 ) }
    dend_55 { pt3dadd( -29.3287, 3.54802, -9.28894, 1.9 ) }
    dend_55 { pt3dadd( -30.5254, 3.74387, -9.25057, 2.12 ) }
    dend_55 { pt3dadd( -31.1644, 3.86317, -9.2277, 2.12 ) }
    dend_55 { pt3dadd( -32.5517, 4.16251, -9.17232, 1.82 ) }
    dend_55 { pt3dadd( -33.3271, 4.36107, -9.13806, 1.68 ) }
    // Section: dend_52, id: dend_52, parent: soma_0 (entry count 48/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -4.28245, 6.11095, -5.85, 0.88 ) }
    dend_52 { pt3dadd( -4.77541, 5.85912, -6.20075, 0.88 ) }
    dend_52 { pt3dadd( -5.43336, 5.43582, -6.68516, 0.88 ) }
    dend_52 { pt3dadd( -5.78981, 5.21839, -6.90909, 0.88 ) }
    dend_52 { pt3dadd( -6.49427, 4.83864, -7.31094, 0.88 ) }
    dend_52 { pt3dadd( -7.19013, 4.52866, -7.66196, 0.88 ) }
    dend_52 { pt3dadd( -8.20023, 4.16123, -8.11936, 0.88 ) }
    dend_52 { pt3dadd( -8.99322, 3.92555, -8.43367, 0.88 ) }
    dend_52 { pt3dadd( -10.2358, 3.74502, -8.83794, 1.02 ) }
    dend_52 { pt3dadd( -11.5797, 3.72435, -9.24208, 0.88 ) }
    dend_52 { pt3dadd( -12.7389, 3.83475, -9.56762, 1.24 ) }
    dend_52 { pt3dadd( -13.5704, 3.98731, -9.81933, 1.24 ) }
    dend_52 { pt3dadd( -14.3031, 4.16537, -10.0688, 1.24 ) }
    dend_52 { pt3dadd( -16.2461, 4.63861, -10.822, 0.8 ) }
    dend_52 { pt3dadd( -16.9708, 4.7834, -11.171, 0.8 ) }
    dend_52 { pt3dadd( -17.5741, 4.83067, -11.5458, 0.8 ) }
    dend_52 { pt3dadd( -18.4033, 4.6126, -12.2916, 0.8 ) }
    dend_52 { pt3dadd( -18.9408, 4.27106, -12.9233, 0.8 ) }
    dend_52 { pt3dadd( -19.4475, 3.76601, -13.6468, 0.58 ) }
    dend_52 { pt3dadd( -19.7921, 3.19618, -14.2869, 0.58 ) }
    dend_52 { pt3dadd( -20.2442, 2.21688, -15.2572, 0.8 ) }
    dend_52 { pt3dadd( -20.6525, 1.03423, -16.3161, 1.17 ) }
    dend_52 { pt3dadd( -20.705, 0.82546, -16.4785, 1.17 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 71/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 4.76755, 2.40045, -5.1, 0.44 ) }
    dend_51 { pt3dadd( 5.14515, 2.246, -5.42941, 0.44 ) }
    dend_51 { pt3dadd( 6.30895, 2.59606, -6.31193, 0.36 ) }
    dend_51 { pt3dadd( 6.82641, 3.02054, -6.62678, 0.36 ) }
    dend_51 { pt3dadd( 7.16298, 3.38443, -6.78705, 0.36 ) }
    dend_51 { pt3dadd( 7.53348, 3.82316, -6.97149, 0.36 ) }
    dend_51 { pt3dadd( 8.0612, 4.49101, -7.26997, 0.36 ) }
    dend_51 { pt3dadd( 8.68211, 5.36734, -7.66547, 0.66 ) }
    dend_51 { pt3dadd( 9.11131, 5.98589, -7.93027, 1.09 ) }
    dend_51 { pt3dadd( 9.77628, 6.86656, -8.35806, 0.8 ) }
    dend_51 { pt3dadd( 10.429, 7.69743, -8.86551, 0.51 ) }
    dend_51 { pt3dadd( 10.8817, 8.23658, -9.24981, 0.73 ) }
    dend_51 { pt3dadd( 11.5822, 8.98745, -9.85394, 1.24 ) }
    dend_51 { pt3dadd( 12.1018, 9.465, -10.2512, 1.82 ) }
    dend_51 { pt3dadd( 13.2953, 10.4187, -10.9843, 0.36 ) }
    dend_51 { pt3dadd( 14.2504, 11.1175, -11.3575, 0.36 ) }
    dend_51 { pt3dadd( 14.6912, 11.4125, -11.3342, 0.36 ) }
    dend_51 { pt3dadd( 15.2152, 11.732, -11.0388, 0.36 ) }
    dend_51 { pt3dadd( 16.445, 12.4167, -9.94614, 0.58 ) }
    dend_51 { pt3dadd( 17.2209, 12.8167, -9.08815, 0.29 ) }
    dend_51 { pt3dadd( 18.0379, 13.2337, -8.06167, 0.51 ) }
    dend_51 { pt3dadd( 18.9697, 13.7457, -6.84515, 0.73 ) }
    dend_51 { pt3dadd( 19.739, 14.2222, -5.85305, 0.73 ) }
    dend_51 { pt3dadd( 20.0635, 14.4683, -5.43076, 0.73 ) }
    dend_51 { pt3dadd( 20.6874, 15.0745, -4.62852, 0.36 ) }
    dend_51 { pt3dadd( 21.1302, 15.5628, -4.07187, 0.36 ) }
    dend_51 { pt3dadd( 21.646, 16.1922, -3.4408, 0.58 ) }
    dend_51 { pt3dadd( 22.1257, 16.9328, -2.81201, 0.58 ) }
    dend_51 { pt3dadd( 22.6759, 17.9705, -1.96152, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_51 { pt3dadd( 22.9438, 18.551, -1.45544, 0.58 ) }
    dend_51 { pt3dadd( 23.1411, 19.0134, -1.01229, 0.58 ) }
    dend_51 { pt3dadd( 23.3901, 18.7707, -0.76157, 0.58 ) }
    dend_51 { pt3dadd( 23.7879, 18.4008, -0.515994, 0.58 ) }
    dend_51 { pt3dadd( 24.4846, 17.8199, -0.105747, 0.58 ) }
    dend_51 { pt3dadd( 25.4691, 17.0763, 0.438889, 0.36 ) }
    dend_51 { pt3dadd( 26.2919, 16.5865, 0.905871, 0.36 ) }
    dend_51 { pt3dadd( 27.2276, 16.2484, 1.42612, 0.36 ) }
    dend_51 { pt3dadd( 28.1125, 16.2114, 1.95402, 0.66 ) }
    dend_51 { pt3dadd( 29.07, 16.6976, 2.64281, 0.29 ) }
    dend_51 { pt3dadd( 29.3382, 17.0117, 2.87768, 0.44 ) }
    dend_51 { pt3dadd( 29.7316, 17.6702, 3.28382, 0.44 ) }
    dend_51 { pt3dadd( 30.1216, 18.4332, 3.69618, 0.95 ) }
    dend_51 { pt3dadd( 30.5325, 19.2405, 4.13622, 0.44 ) }
    dend_51 { pt3dadd( 30.9018, 19.8533, 4.50242, 0.44 ) }
    dend_51 { pt3dadd( 31.5253, 20.6964, 5.02173, 0.29 ) }
    dend_51 { pt3dadd( 31.7956, 21.0245, 5.23187, 0.51 ) }
    dend_51 { pt3dadd( 32.6165, 21.9268, 5.78882, 0.29 ) }
    dend_51 { pt3dadd( 33.4154, 22.7392, 6.32357, 0.73 ) }
    dend_51 { pt3dadd( 34.3452, 23.7057, 6.97962, 1.61 ) }
    dend_51 { pt3dadd( 34.5778, 23.9821, 7.18304, 1.61 ) }
    dend_51 { pt3dadd( 34.9744, 24.4815, 7.55505, 1.61 ) }
    dend_51 { pt3dadd( 35.7506, 25.552, 8.34028, 0.95 ) }
    dend_51 { pt3dadd( 36.3461, 26.5117, 9.04291, 0.66 ) }
    dend_51 { pt3dadd( 36.8298, 27.459, 9.6771, 0.29 ) }
    dend_51 { pt3dadd( 37.246, 28.5689, 10.4192, 0.29 ) }
    dend_51 { pt3dadd( 43.0738, 35.905, 14.2679, 0.29 ) }
    dend_51 { pt3dadd( 48.8194, 42.248, 19.6245, 0.29 ) }
    dend_51 { pt3dadd( 53.9815, 47.8547, 26.2148, 0.29 ) }
    dend_51 { pt3dadd( 58.6939, 54.2304, 32.468, 0.29 ) }
    dend_51 { pt3dadd( 63.5483, 59.0032, 39.8675, 0.29 ) }
    dend_51 { pt3dadd( 68.1962, 62.0481, 48.2085, 0.29 ) }
    dend_51 { pt3dadd( 72.5959, 65.9589, 56.3378, 0.29 ) }
    dend_51 { pt3dadd( 75.6923, 70.7612, 64.612, 0.29 ) }
    dend_51 { pt3dadd( 77.2662, 75.2334, 73.4712, 0.29 ) }
    dend_51 { pt3dadd( 79.2701, 80.2272, 81.9711, 0.29 ) }
    dend_51 { pt3dadd( 82.0218, 84.6743, 90.5503, 0.29 ) }
    dend_51 { pt3dadd( 86.0229, 88.6787, 98.8406, 0.29 ) }
    dend_51 { pt3dadd( 90.6853, 91.8121, 107.142, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 39/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.54245, 4.45045, 0.96, 1.24 ) }
    dend_24 { pt3dadd( -5.78955, 5.01785, 1.28497, 1.24 ) }
    dend_24 { pt3dadd( -7.23705, 5.60338, 1.58385, 1.09 ) }
    dend_24 { pt3dadd( -8.43343, 6.0421, 1.74124, 1.24 ) }
    dend_24 { pt3dadd( -9.76217, 6.52935, 1.91606, 1.39 ) }
    dend_24 { pt3dadd( -10.7891, 6.90593, 2.05116, 2.12 ) }
    dend_24 { pt3dadd( -11.7825, 7.27025, 2.18187, 2.34 ) }
    dend_24 { pt3dadd( -12.7734, 7.56009, 2.21628, 2.04 ) }
    dend_24 { pt3dadd( -14.0076, 7.84696, 2.14657, 1.75 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 48/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.82245, 5.06545, 2.13, 1.46 ) }
    dend_21 { pt3dadd( -2.36204, 5.90688, 2.59715, 1.46 ) }
    dend_21 { pt3dadd( -1.56252, 7.05186, 3.4573, 1.68 ) }
    dend_21 { pt3dadd( -0.963551, 7.87266, 4.16454, 1.68 ) }
    dend_21 { pt3dadd( -0.499829, 8.47695, 4.78098, 1.68 ) }
    dend_21 { pt3dadd( 0.227551, 9.34125, 5.88669, 0.44 ) }
    dend_21 { pt3dadd( 0.903196, 10.0635, 7.09726, 0.29 ) }
    dend_21 { pt3dadd( 1.27126, 10.2844, 8.02838, 0.29 ) }
    dend_21 { pt3dadd( 1.4278, 10.2681, 8.69579, 0.22 ) }
    dend_21 { pt3dadd( 1.56975, 10.1047, 9.77405, 0.22 ) }
    dend_21 { pt3dadd( 1.59951, 9.83304, 11.0119, 0.22 ) }
    dend_21 { pt3dadd( 1.50112, 9.66574, 11.7581, 0.22 ) }
    dend_21 { pt3dadd( 1.43585, 9.6777, 12.0489, 0.22 ) }
    dend_21 { pt3dadd( 1.33104, 9.87264, 12.5496, 0.22 ) }
    dend_21 { pt3dadd( 1.13841, 10.45, 13.5696, 0.22 ) }
    dend_21 { pt3dadd( 0.973169, 10.9147, 14.2012, 0.58 ) }
    dend_21 { pt3dadd( 0.681146, 11.591, 14.9783, 0.22 ) }
    dend_21 { pt3dadd( 0.418285, 12.0674, 15.5168, 0.22 ) }
    dend_21 { pt3dadd( 0.212029, 12.364, 15.8892, 0.22 ) }
    dend_21 { pt3dadd( -0.21636, 12.786, 16.5344, 0.22 ) }
    dend_21 { pt3dadd( -0.606947, 13.0269, 17.0168, 0.22 ) }
    dend_21 { pt3dadd( -0.868981, 13.1843, 17.3756, 0.22 ) }
    dend_21 { pt3dadd( -1.00265, 13.5131, 17.9224, 0.15 ) }
    dend_21 { pt3dadd( -0.958331, 13.7904, 18.286, 0.15 ) }
    dend_21 { pt3dadd( -0.907691, 14.1079, 18.7006, 0.15 ) }
    dend_21 { pt3dadd( -0.799981, 14.6047, 19.2997, 0.15 ) }
    dend_21 { pt3dadd( -0.691157, 15.0023, 19.7962, 0.15 ) }
    dend_21 { pt3dadd( -0.580122, 15.4176, 20.3878, 0.15 ) }
    dend_21 { pt3dadd( -0.525283, 15.6517, 20.7663, 0.15 ) }
    dend_21 { pt3dadd( -0.470706, 15.9628, 21.2656, 0.15 ) }
    dend_21 { pt3dadd( -0.436558, 16.1919, 21.6544, 0.15 ) }
    dend_21 { pt3dadd( -0.342593, 16.4033, 22.1091, 0.15 ) }
    dend_21 { pt3dadd( -0.038058, 16.5061, 22.7948, 0.15 ) }
    dend_21 { pt3dadd( 0.258544, 16.4584, 23.3451, 0.15 ) }
    dend_21 { pt3dadd( 0.70016, 16.277, 24.4125, 0.15 ) }
    dend_21 { pt3dadd( 0.892739, 16.1805, 25.0113, 0.15 ) }
    dend_21 { pt3dadd( 1.01585, 16.148, 25.865, 0.15 ) }
    dend_21 { pt3dadd( 0.952497, 16.3656, 26.433, 0.15 ) }
    dend_21 { pt3dadd( 0.768987, 16.8993, 26.9782, 0.15 ) }
    dend_21 { pt3dadd( 0.554649, 17.4998, 27.5464, 0.15 ) }
    dend_21 { pt3dadd( 0.361376, 18.0411, 28.0475, 0.15 ) }
    dend_21 { pt3dadd( 0.172101, 18.6328, 28.4776, 0.15 ) }
    dend_21 { pt3dadd( -0.00134301, 19.2191, 28.831, 0.15 ) }
    dend_21 { pt3dadd( -0.222159, 20.3102, 29.3666, 0.15 ) }
    dend_21 { pt3dadd( 1.68975, 25.692, 37.6597, 0.15 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 93/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.85755, -9.83805, 2.2, 2.63 ) }
    dend_0 { pt3dadd( 3.21431, -11.2851, 2.5577, 2.63 ) }
    dend_0 { pt3dadd( 3.40396, -12.0543, 2.74785, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 96/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -5.78545, 8.29489, 0.0, 0.545954 ) }
    axon_0 { pt3dadd( -14.086, 20.7889, 0.0, 0.545954 ) }
    axon_0 { pt3dadd( -22.3866, 33.2829, 0.0, 0.545954 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 99/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -33.3271, 4.36107, -9.13806, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_57 { pt3dadd( -33.3456, 3.67062, -10.2838, 0.36 ) }
    dend_57 { pt3dadd( -33.2352, 2.19329, -12.3407, 0.36 ) }
    dend_57 { pt3dadd( -33.198, 1.67293, -12.9959, 0.36 ) }
    dend_57 { pt3dadd( -33.1822, 1.28701, -13.4402, 0.58 ) }
    dend_57 { pt3dadd( -33.1782, 0.72497, -14.0374, 0.58 ) }
    dend_57 { pt3dadd( -33.2287, -0.369639, -15.0849, 0.36 ) }
    dend_57 { pt3dadd( -33.2721, -0.962204, -15.5558, 0.88 ) }
    dend_57 { pt3dadd( -33.4961, -2.30818, -16.499, 0.36 ) }
    dend_57 { pt3dadd( -33.6995, -2.96337, -17.0202, 0.66 ) }
    dend_57 { pt3dadd( -33.9081, -3.36948, -17.4127, 0.66 ) }
    dend_57 { pt3dadd( -34.4632, -3.97285, -18.2545, 0.22 ) }
    dend_57 { pt3dadd( -35.0385, -4.2028, -18.9653, 0.22 ) }
    dend_57 { pt3dadd( -35.6109, -4.13477, -19.6628, 0.73 ) }
    dend_57 { pt3dadd( -36.309, -3.86244, -20.4791, 0.88 ) }
    dend_57 { pt3dadd( -37.0274, -3.51437, -21.3067, 0.36 ) }
    dend_57 { pt3dadd( -37.6316, -3.26536, -22.0082, 0.36 ) }
    dend_57 { pt3dadd( -37.9615, -3.18855, -22.3851, 0.36 ) }
    dend_57 { pt3dadd( -38.7158, -3.23314, -23.3081, 0.36 ) }
    dend_57 { pt3dadd( -39.2008, -3.3685, -23.9075, 0.73 ) }
    dend_57 { pt3dadd( -39.4771, -3.49196, -24.2613, 0.88 ) }
    dend_57 { pt3dadd( -40.3136, -3.98707, -25.438, 0.22 ) }
    dend_57 { pt3dadd( -40.9652, -4.43563, -26.4296, 1.02 ) }
    dend_57 { pt3dadd( -42.0367, -5.26424, -28.4117, 0.51 ) }
    dend_57 { pt3dadd( -42.4216, -5.55797, -29.3096, 0.51 ) }
    dend_57 { pt3dadd( -42.8064, -5.77956, -30.3379, 0.73 ) }
    dend_57 { pt3dadd( -43.1326, -5.86549, -31.1719, 0.73 ) }
    dend_57 { pt3dadd( -43.2766, -5.85343, -31.5126, 0.73 ) }
    dend_57 { pt3dadd( -43.7833, -5.69572, -32.6972, 0.73 ) }
    dend_57 { pt3dadd( -44.3367, -5.48076, -33.8695, 0.73 ) }
    dend_57 { pt3dadd( -44.9286, -5.20025, -35.1773, 1.31 ) }
    dend_57 { pt3dadd( -45.6706, -4.77473, -36.7572, 0.07 ) }
    dend_57 { pt3dadd( -46.2519, -4.41254, -38.0112, 0.58 ) }
    dend_57 { pt3dadd( -47.415, -3.70329, -40.5982, 0.29 ) }
    dend_57 { pt3dadd( -47.951, -3.40625, -41.8813, 1.09 ) }
    dend_57 { pt3dadd( -49.0183, -2.88057, -45.0377, 0.8 ) }
    dend_57 { pt3dadd( -49.5991, -2.61668, -47.5814, 0.58 ) }
    dend_57 { pt3dadd( -49.7597, -2.57682, -48.6461, 0.58 ) }
    dend_57 { pt3dadd( -49.8428, -2.5907, -49.2497, 0.58 ) }
    dend_57 { pt3dadd( -50.1133, -2.74397, -50.941, 0.58 ) }
    dend_57 { pt3dadd( -50.3431, -2.86614, -51.9004, 0.58 ) }
    dend_57 { pt3dadd( -50.8355, -3.06332, -53.2162, 0.58 ) }
    dend_57 { pt3dadd( -51.1819, -3.14053, -53.9621, 0.58 ) }
    dend_57 { pt3dadd( -51.637, -3.1621, -54.822, 0.58 ) }
    dend_57 { pt3dadd( -52.2176, -3.09942, -55.8189, 0.58 ) }
    dend_57 { pt3dadd( -53.1351, -2.88322, -57.2578, 0.88 ) }
    dend_57 { pt3dadd( -54.07, -2.60718, -58.6569, 0.22 ) }
    dend_57 { pt3dadd( -55.2518, -2.25056, -60.3635, 0.44 ) }
    dend_57 { pt3dadd( -56.605, -1.85896, -62.2769, 0.15 ) }
    dend_57 { pt3dadd( -57.3127, -1.66192, -63.2443, 0.73 ) }
    dend_57 { pt3dadd( -58.6068, -1.32236, -65.009, 0.07 ) }
    dend_57 { pt3dadd( -59.3689, -1.14516, -66.0734, 0.29 ) }
    dend_57 { pt3dadd( -60.4777, -0.981559, -67.6645, 0.58 ) }
    dend_57 { pt3dadd( -61.2955, -0.977214, -68.7951, 0.07 ) }
    dend_57 { pt3dadd( -61.5927, -1.02504, -69.2069, 0.07 ) }
    dend_57 { pt3dadd( -62.3078, -1.25658, -70.2734, 0.07 ) }
    dend_57 { pt3dadd( -63.031, -1.60256, -71.3812, 0.58 ) }
    dend_57 { pt3dadd( -63.9565, -2.15228, -72.8078, 0.07 ) }
    dend_57 { pt3dadd( -64.4894, -2.55359, -73.625, 0.36 ) }
    dend_57 { pt3dadd( -65.5928, -3.50726, -75.2903, 0.07 ) }
    dend_57 { pt3dadd( -66.3445, -4.19296, -76.3323, 0.07 ) }
    dend_57 { pt3dadd( -66.703, -4.52417, -76.7512, 0.07 ) }
    dend_57 { pt3dadd( -67.0335, -4.84048, -77.0894, 0.29 ) }
    dend_57 { pt3dadd( -67.8336, -5.5957, -77.8195, 0.07 ) }
    dend_57 { pt3dadd( -68.9232, -6.56313, -78.906, 0.07 ) }
    dend_57 { pt3dadd( -69.7391, -7.19353, -79.6536, 0.88 ) }
    dend_57 { pt3dadd( -70.8731, -7.99261, -80.7158, 0.07 ) }
    dend_57 { pt3dadd( -72.2564, -8.90826, -82.0338, 1.09 ) }
    dend_57 { pt3dadd( -74.0907, -10.072, -83.8234, 0.22 ) }
    dend_57 { pt3dadd( -76.4703, -11.5509, -86.1881, 0.22 ) }
    dend_57 { pt3dadd( -77.8, -12.3865, -87.5105, 1.17 ) }
    dend_57 { pt3dadd( -79.2315, -13.3007, -88.9374, 0.22 ) }
    dend_57 { pt3dadd( -80.0002, -13.8025, -89.6621, 0.22 ) }
    dend_57 { pt3dadd( -80.9734, -14.4704, -90.4709, 0.22 ) }
    dend_57 { pt3dadd( -81.9374, -15.1945, -91.1726, 0.36 ) }
    dend_57 { pt3dadd( -82.6964, -15.7831, -91.5906, 0.07 ) }
    dend_57 { pt3dadd( -83.503, -16.3908, -92.023, 0.66 ) }
    dend_57 { pt3dadd( -84.4359, -17.0192, -92.4906, 0.66 ) }
    dend_57 { pt3dadd( -86.4422, -18.2471, -93.5753, 0.07 ) }
    dend_57 { pt3dadd( -87.6733, -18.9647, -94.2278, 0.07 ) }
    dend_57 { pt3dadd( -89.6529, -20.046, -95.3037, 0.66 ) }
    dend_57 { pt3dadd( -91.2479, -20.858, -96.2318, 0.07 ) }
    dend_57 { pt3dadd( -92.3219, -21.36, -96.9013, 0.07 ) }
    dend_57 { pt3dadd( -94.071, -22.101, -98.0723, 1.61 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -33.3271, 4.36107, -9.13806, 0.44 ) }
    dend_56 { pt3dadd( -33.8694, 5.03796, -8.50221, 0.44 ) }
    dend_56 { pt3dadd( -34.4313, 5.39551, -7.97206, 0.44 ) }
    dend_56 { pt3dadd( -34.6336, 5.15278, -7.95584, 0.44 ) }
    dend_56 { pt3dadd( -34.9439, 4.69366, -7.98475, 0.44 ) }
    dend_56 { pt3dadd( -35.1264, 4.41955, -8.0269, 0.44 ) }
    dend_56 { pt3dadd( -35.5484, 3.82637, -8.15904, 0.58 ) }
    dend_56 { pt3dadd( -36.0098, 3.23529, -8.31607, 0.36 ) }
    dend_56 { pt3dadd( -37.0075, 2.08822, -8.66856, 0.51 ) }
    dend_56 { pt3dadd( -37.6403, 1.43931, -8.841, 0.29 ) }
    dend_56 { pt3dadd( -38.2014, 0.94342, -8.95482, 0.29 ) }
    dend_56 { pt3dadd( -38.775, 0.509421, -9.01663, 0.44 ) }
    dend_56 { pt3dadd( -39.9012, -0.19457, -9.02838, 0.73 ) }
    dend_56 { pt3dadd( -40.8158, -0.649746, -8.95328, 0.88 ) }
    dend_56 { pt3dadd( -42.1923, -1.16678, -8.71274, 0.58 ) }
    dend_56 { pt3dadd( -43.4344, -1.51091, -8.41998, 0.51 ) }
    dend_56 { pt3dadd( -44.3739, -1.67263, -8.15485, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_56 { pt3dadd( -45.2558, -1.68444, -7.8909, 0.36 ) }
    dend_56 { pt3dadd( -45.8668, -1.58041, -7.71898, 0.36 ) }
    dend_56 { pt3dadd( -46.5922, -1.34529, -7.53576, 0.95 ) }
    dend_56 { pt3dadd( -47.2956, -1.03626, -7.39033, 1.17 ) }
    dend_56 { pt3dadd( -48.3235, -0.541986, -7.20893, 1.31 ) }
    dend_56 { pt3dadd( -49.9377, 0.19859, -7.02394, 0.51 ) }
    dend_56 { pt3dadd( -50.9824, 0.584971, -6.99795, 0.29 ) }
    dend_56 { pt3dadd( -51.6434, 0.71174, -7.03834, 0.22 ) }
    dend_56 { pt3dadd( -52.1512, 0.661411, -7.11699, 0.22 ) }
    dend_56 { pt3dadd( -52.8444, 0.339968, -7.31023, 0.22 ) }
    dend_56 { pt3dadd( -53.6641, -0.237047, -7.65133, 0.29 ) }
    dend_56 { pt3dadd( -54.741, -1.07905, -8.15925, 1.09 ) }
    dend_56 { pt3dadd( -55.594, -1.72429, -8.48148, 0.8 ) }
    dend_56 { pt3dadd( -56.4594, -2.30488, -8.72405, 0.22 ) }
    dend_56 { pt3dadd( -57.6237, -2.96399, -8.94203, 0.51 ) }
    dend_56 { pt3dadd( -59.0004, -3.56541, -9.07222, 0.22 ) }
    dend_56 { pt3dadd( -60.3976, -4.00542, -9.07855, 0.51 ) }
    dend_56 { pt3dadd( -62.3475, -4.38931, -9.029, 0.29 ) }
    dend_56 { pt3dadd( -63.5424, -4.5234, -9.04952, 0.29 ) }
    dend_56 { pt3dadd( -64.1392, -4.56668, -9.08672, 0.95 ) }
    dend_56 { pt3dadd( -65.0828, -4.63428, -9.19358, 1.53 ) }
    dend_56 { pt3dadd( -65.943, -4.73407, -9.37078, 1.53 ) }
    dend_56 { pt3dadd( -67.7602, -5.12011, -10.0349, 0.44 ) }
    dend_56 { pt3dadd( -68.9447, -5.51312, -10.6817, 0.36 ) }
    dend_56 { pt3dadd( -69.6249, -5.83004, -11.1212, 0.36 ) }
    dend_56 { pt3dadd( -70.3434, -6.23206, -11.63, 0.36 ) }
    dend_56 { pt3dadd( -71.0879, -6.71394, -12.2006, 0.36 ) }
    dend_56 { pt3dadd( -71.9588, -7.32875, -12.8957, 0.36 ) }
    dend_56 { pt3dadd( -72.5744, -7.8087, -13.3656, 0.22 ) }
    dend_56 { pt3dadd( -73.042, -8.10559, -13.6524, 0.22 ) }
    dend_56 { pt3dadd( -73.775, -8.32389, -13.9716, 0.66 ) }
    dend_56 { pt3dadd( -74.2992, -8.31412, -14.1044, 0.66 ) }
    dend_56 { pt3dadd( -75.0652, -8.1999, -14.2506, 0.22 ) }
    dend_56 { pt3dadd( -75.6605, -8.11568, -14.3476, 0.22 ) }
    dend_56 { pt3dadd( -76.0804, -8.14908, -14.4344, 0.22 ) }
    dend_56 { pt3dadd( -76.4522, -8.31209, -14.582, 0.22 ) }
    dend_56 { pt3dadd( -76.8105, -8.56478, -14.7604, 0.22 ) }
    dend_56 { pt3dadd( -77.5414, -9.17714, -15.12, 0.22 ) }
    dend_56 { pt3dadd( -78.0703, -9.63615, -15.3679, 0.73 ) }
    dend_56 { pt3dadd( -78.9106, -10.2584, -15.7544, 1.24 ) }
    dend_56 { pt3dadd( -79.7137, -10.6987, -16.0854, 1.24 ) }
    dend_56 { pt3dadd( -80.3791, -10.9173, -16.3103, 1.24 ) }
    dend_56 { pt3dadd( -81.7796, -11.1622, -16.729, 0.29 ) }
    dend_56 { pt3dadd( -82.4858, -11.2125, -16.9208, 0.29 ) }
    dend_56 { pt3dadd( -83.9945, -11.2386, -17.3539, 0.51 ) }
    dend_56 { pt3dadd( -85.1973, -11.2274, -17.694, 0.29 ) }
    dend_56 { pt3dadd( -86.5048, -11.2569, -18.0716, 0.15 ) }
    dend_56 { pt3dadd( -87.1323, -11.3062, -18.282, 0.15 ) }
    dend_56 { pt3dadd( -87.6941, -11.405, -18.5015, 0.15 ) }
    dend_56 { pt3dadd( -88.543, -11.6362, -18.8657, 0.88 ) }
    dend_56 { pt3dadd( -89.0815, -11.8381, -19.0976, 0.88 ) }
    dend_56 { pt3dadd( -90.0095, -12.0873, -19.5051, 0.15 ) }
    dend_56 { pt3dadd( -90.5093, -12.0986, -19.686, 0.15 ) }
    dend_56 { pt3dadd( -90.9854, -12.0258, -19.8074, 0.15 ) }
    dend_56 { pt3dadd( -92.7009, -11.6926, -20.2451, 0.15 ) }
    dend_56 { pt3dadd( -93.4533, -11.5523, -20.4245, 0.15 ) }
    dend_56 { pt3dadd( -94.4752, -11.3877, -20.6237, 0.15 ) }
    dend_56 { pt3dadd( -95.2236, -11.3038, -20.7446, 1.31 ) }
    dend_56 { pt3dadd( -96.2401, -11.3135, -20.8537, 1.31 ) }
    dend_56 { pt3dadd( -98.0115, -11.5969, -20.9384, 0.66 ) }
    dend_56 { pt3dadd( -99.3652, -12.0295, -20.8643, 0.22 ) }
    dend_56 { pt3dadd( -100.404, -12.4456, -20.7312, 0.22 ) }
    dend_56 { pt3dadd( -101.035, -12.7389, -20.6058, 0.22 ) }
    dend_56 { pt3dadd( -102.155, -13.2976, -20.3468, 0.22 ) }
    dend_56 { pt3dadd( -102.965, -13.7049, -20.1611, 0.73 ) }
    dend_56 { pt3dadd( -104.269, -14.3378, -19.8823, 1.46 ) }
    dend_56 { pt3dadd( -104.598, -14.4837, -19.849, 1.46 ) }
    dend_56 { pt3dadd( -105.686, -14.8986, -19.8495, 0.88 ) }
    dend_56 { pt3dadd( -106.988, -15.3061, -19.9283, 0.29 ) }
    dend_56 { pt3dadd( -108.096, -15.5855, -20.0678, 0.8 ) }
    dend_56 { pt3dadd( -109.387, -15.8939, -20.2916, 0.51 ) }
    dend_56 { pt3dadd( -110.489, -16.1612, -20.5362, 0.36 ) }
    dend_56 { pt3dadd( -110.854, -16.2654, -20.6291, 0.36 ) }
    dend_56 { pt3dadd( -111.2, -16.3791, -20.728, 0.36 ) }
    dend_56 { pt3dadd( -112.008, -16.684, -20.9638, 0.44 ) }
    dend_56 { pt3dadd( -113.207, -17.1735, -21.3057, 0.66 ) }
    dend_56 { pt3dadd( -113.735, -17.3978, -21.4573, 0.66 ) }
    dend_56 { pt3dadd( -115.253, -18.0202, -21.8263, 0.44 ) }
    dend_56 { pt3dadd( -115.871, -18.2677, -21.9668, 0.58 ) }
    dend_56 { pt3dadd( -116.501, -18.5091, -22.1063, 0.8 ) }
    dend_56 { pt3dadd( -117.609, -18.8856, -22.3387, 1.68 ) }
    dend_56 { pt3dadd( -118.332, -19.092, -22.4706, 1.68 ) }
    dend_56 { pt3dadd( -120.1, -19.5125, -22.7303, 0.22 ) }
    dend_56 { pt3dadd( -120.94, -19.6776, -22.8154, 0.22 ) }
    dend_56 { pt3dadd( -121.826, -19.8516, -22.8986, 0.22 ) }
    dend_56 { pt3dadd( -122.676, -20.0255, -22.972, 0.22 ) }
    dend_56 { pt3dadd( -123.627, -20.2431, -23.0419, 0.51 ) }
    dend_56 { pt3dadd( -124.694, -20.5067, -23.1191, 1.68 ) }
    dend_56 { pt3dadd( -125.553, -20.7565, -23.2037, 1.68 ) }
    dend_56 { pt3dadd( -127.897, -21.5292, -23.5174, 0.15 ) }
    dend_56 { pt3dadd( -128.877, -21.9145, -23.6861, 0.15 ) }
    dend_56 { pt3dadd( -129.87, -22.3947, -23.8996, 0.58 ) }
    dend_56 { pt3dadd( -130.267, -22.621, -23.9999, 0.58 ) }
    dend_56 { pt3dadd( -131.629, -23.5085, -24.4092, 0.15 ) }
    dend_56 { pt3dadd( -132.579, -24.1863, -24.7469, 0.58 ) }
    dend_56 { pt3dadd( -133.41, -24.8482, -25.099, 0.22 ) }
    dend_56 { pt3dadd( -134.178, -25.4976, -25.4508, 0.36 ) }
    dend_56 { pt3dadd( -134.67, -25.9289, -25.6829, 0.07 ) }
    dend_56 { pt3dadd( -135.43, -26.643, -26.0206, 0.51 ) }
    dend_56 { pt3dadd( -136.054, -27.2539, -26.2773, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_56 { pt3dadd( -136.56, -27.7697, -26.502, 0.07 ) }
    dend_56 { pt3dadd( -137.239, -28.4698, -26.8301, 1.09 ) }
    dend_56 { pt3dadd( -137.384, -28.6332, -26.9122, 1.09 ) }
    dend_56 { pt3dadd( -138.098, -29.5066, -27.3478, 0.51 ) }
    dend_56 { pt3dadd( -139.0, -30.6357, -27.8965, 0.07 ) }
    dend_56 { pt3dadd( -139.781, -31.5723, -28.3709, 0.88 ) }
    dend_56 { pt3dadd( -139.947, -31.7493, -28.4732, 0.88 ) }
    dend_56 { pt3dadd( -140.932, -32.6518, -29.0688, 0.07 ) }
    dend_56 { pt3dadd( -141.416, -33.0288, -29.3424, 0.15 ) }
    dend_56 { pt3dadd( -142.201, -33.4667, -29.7643, 0.15 ) }
    dend_56 { pt3dadd( -142.861, -33.7236, -30.0921, 0.15 ) }
    dend_56 { pt3dadd( -143.715, -33.9464, -30.5057, 0.15 ) }
    dend_56 { pt3dadd( -144.699, -34.1657, -30.975, 1.53 ) }
    dend_56 { pt3dadd( -145.293, -34.2647, -31.246, 1.53 ) }
    dend_56 { pt3dadd( -146.961, -34.5721, -31.9484, 0.07 ) }
    dend_56 { pt3dadd( -147.488, -34.6842, -32.1654, 0.07 ) }
    dend_56 { pt3dadd( -148.192, -34.8343, -32.4339, 0.07 ) }
    dend_56 { pt3dadd( -149.332, -35.073, -32.824, 0.95 ) }
    dend_56 { pt3dadd( -149.686, -35.1409, -32.932, 0.95 ) }
    dend_56 { pt3dadd( -151.461, -35.5158, -33.3965, 0.22 ) }
    dend_56 { pt3dadd( -152.172, -35.7025, -33.5365, 0.22 ) }
    dend_56 { pt3dadd( -152.895, -35.9177, -33.6609, 0.51 ) }
    dend_56 { pt3dadd( -153.734, -36.1647, -33.7818, 0.51 ) }
    dend_56 { pt3dadd( -154.514, -36.3726, -33.8927, 0.22 ) }
    dend_56 { pt3dadd( -154.806, -36.4681, -33.9469, 0.22 ) }
    dend_56 { pt3dadd( -155.286, -36.6642, -34.0466, 0.22 ) }
    dend_56 { pt3dadd( -156.002, -37.0169, -34.1718, 0.22 ) }
    dend_56 { pt3dadd( -156.267, -37.1914, -34.2391, 0.22 ) }
    dend_56 { pt3dadd( -156.842, -37.6023, -34.4428, 0.22 ) }
    dend_56 { pt3dadd( -157.597, -38.1295, -34.7394, 0.22 ) }
    dend_56 { pt3dadd( -158.397, -38.6475, -35.05, 0.58 ) }
    dend_56 { pt3dadd( -158.959, -38.9343, -35.2299, 0.58 ) }
    dend_56 { pt3dadd( -160.513, -39.604, -35.6674, 0.29 ) }
    dend_56 { pt3dadd( -161.515, -40.0061, -35.9389, 0.88 ) }
    dend_56 { pt3dadd( -161.784, -40.1136, -36.0116, 1.17 ) }
    dend_56 { pt3dadd( -162.468, -40.3849, -36.1846, 1.75 ) }
    dend_56 { pt3dadd( -164.735, -41.2599, -36.7653, 0.22 ) }
    dend_56 { pt3dadd( -165.414, -41.523, -36.9568, 0.15 ) }
    dend_56 { pt3dadd( -166.086, -41.7814, -37.1482, 0.15 ) }
    dend_56 { pt3dadd( -167.405, -42.3311, -37.559, 0.66 ) }
    dend_56 { pt3dadd( -167.865, -42.5365, -37.7213, 1.17 ) }
    dend_56 { pt3dadd( -168.544, -42.8529, -37.9785, 1.17 ) }
    dend_56 { pt3dadd( -169.924, -43.5544, -38.5275, 0.15 ) }
    dend_56 { pt3dadd( -170.493, -43.8252, -38.7378, 0.15 ) }
    dend_56 { pt3dadd( -171.305, -44.187, -38.9999, 0.15 ) }
    dend_56 { pt3dadd( -171.821, -44.4007, -39.1632, 0.15 ) }
    dend_56 { pt3dadd( -173.138, -44.9388, -39.5757, 0.66 ) }
    dend_56 { pt3dadd( -173.694, -45.1708, -39.7338, 0.15 ) }
    dend_56 { pt3dadd( -174.718, -45.6048, -39.921, 0.58 ) }
    dend_56 { pt3dadd( -175.573, -45.9808, -40.0405, 0.15 ) }
    dend_56 { pt3dadd( -176.121, -46.2328, -40.0855, 0.15 ) }
    dend_56 { pt3dadd( -176.598, -46.4523, -40.0929, 0.15 ) }
    dend_56 { pt3dadd( -177.624, -46.8977, -40.0485, 0.15 ) }
    dend_56 { pt3dadd( -179.0, -47.4413, -39.9193, 1.46 ) }
    dend_56 { pt3dadd( -179.619, -47.6698, -39.83, 1.46 ) }
    dend_56 { pt3dadd( -181.022, -48.1815, -39.6163, 0.51 ) }
    dend_56 { pt3dadd( -182.137, -48.613, -39.4441, 0.22 ) }
    dend_56 { pt3dadd( -182.581, -48.7992, -39.3848, 0.22 ) }
    dend_56 { pt3dadd( -182.943, -48.9664, -39.3456, 0.22 ) }
    dend_56 { pt3dadd( -183.644, -49.3115, -39.3017, 0.22 ) }
    dend_56 { pt3dadd( -185.544, -50.3179, -39.2173, 0.22 ) }
    dend_56 { pt3dadd( -186.421, -50.7891, -39.1643, 0.22 ) }
    dend_56 { pt3dadd( -187.214, -51.2121, -39.1126, 0.8 ) }
    dend_56 { pt3dadd( -187.654, -51.4354, -39.0746, 0.8 ) }
    dend_56 { pt3dadd( -189.659, -52.3717, -38.8628, 0.15 ) }
    dend_56 { pt3dadd( -190.376, -52.673, -38.7727, 0.36 ) }
    dend_56 { pt3dadd( -191.325, -53.0398, -38.6326, 0.15 ) }
    dend_56 { pt3dadd( -191.934, -53.2851, -38.5411, 0.15 ) }
    dend_56 { pt3dadd( -192.533, -53.5604, -38.4243, 0.15 ) }
    dend_56 { pt3dadd( -193.191, -53.8887, -38.2321, 0.15 ) }
    dend_56 { pt3dadd( -193.687, -54.1307, -38.0618, 0.15 ) }
    dend_56 { pt3dadd( -194.448, -54.4762, -37.7638, 0.15 ) }
    dend_56 { pt3dadd( -195.347, -54.8772, -37.4026, 0.15 ) }
    dend_56 { pt3dadd( -196.654, -55.4715, -36.8459, 0.15 ) }
    dend_56 { pt3dadd( -197.829, -56.027, -36.331, 1.61 ) }
    dend_56 { pt3dadd( -199.466, -56.8292, -35.5504, 0.15 ) }
    dend_56 { pt3dadd( -200.71, -57.5228, -34.957, 0.36 ) }
    dend_56 { pt3dadd( -201.079, -57.7512, -34.7842, 0.36 ) }
    dend_56 { pt3dadd( -202.059, -58.417, -34.3589, 0.07 ) }
    dend_56 { pt3dadd( -202.704, -58.9013, -34.1308, 0.07 ) }
    dend_56 { pt3dadd( -203.749, -59.7487, -33.8307, 0.8 ) }
    dend_56 { pt3dadd( -205.358, -61.1626, -33.3676, 0.07 ) }
    dend_56 { pt3dadd( -205.687, -61.4479, -33.2874, 0.88 ) }
    dend_56 { pt3dadd( -206.099, -61.7777, -33.1892, 0.88 ) }
    dend_56 { pt3dadd( -207.338, -62.6231, -32.9215, 0.07 ) }
    dend_56 { pt3dadd( -207.907, -62.9298, -32.8245, 0.07 ) }
    dend_56 { pt3dadd( -208.638, -63.2374, -32.7422, 0.07 ) }
    dend_56 { pt3dadd( -209.28, -63.4343, -32.6706, 0.07 ) }
    dend_56 { pt3dadd( -209.923, -63.6043, -32.6093, 0.07 ) }
    dend_56 { pt3dadd( -210.853, -63.8386, -32.527, 0.58 ) }
    dend_56 { pt3dadd( -211.87, -64.071, -32.4565, 0.22 ) }
    dend_56 { pt3dadd( -212.172, -64.1311, -32.4429, 0.22 ) }
    dend_56 { pt3dadd( -212.819, -64.2168, -32.4429, 0.51 ) }
    dend_56 { pt3dadd( -213.985, -64.3141, -32.4429, 0.07 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -20.705, 0.82546, -16.4785, 0.58 ) }
    dend_54 { pt3dadd( -20.3678, 0.83342, -17.778, 0.58 ) }
    dend_54 { pt3dadd( -19.916, 1.06302, -19.9958, 0.58 ) }
    dend_54 { pt3dadd( -19.5954, 1.37672, -21.7726, 0.58 ) }
    dend_54 { pt3dadd( -19.3013, 1.7287, -23.2055, 0.73 ) }
    dend_54 { pt3dadd( -18.9055, 2.18943, -24.8381, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( -18.3202, 2.75602, -27.0469, 0.58 ) }
    dend_54 { pt3dadd( -17.6085, 3.29494, -29.3393, 0.66 ) }
    dend_54 { pt3dadd( -17.2173, 3.49985, -30.5283, 0.66 ) }
    dend_54 { pt3dadd( -16.6911, 3.62361, -32.415, 0.66 ) }
    dend_54 { pt3dadd( -16.3216, 3.53256, -33.9359, 0.51 ) }
    dend_54 { pt3dadd( -15.8264, 3.16968, -36.0354, 0.73 ) }
    dend_54 { pt3dadd( -15.2446, 2.60474, -38.3119, 0.44 ) }
    dend_54 { pt3dadd( -14.7042, 2.01333, -40.2215, 0.44 ) }
    dend_54 { pt3dadd( -13.8968, 1.02977, -42.942, 0.44 ) }
    dend_54 { pt3dadd( -13.2499, 0.191398, -45.0558, 0.44 ) }
    dend_54 { pt3dadd( -12.3975, -0.908962, -47.8602, 0.44 ) }
    dend_54 { pt3dadd( -12.0766, -1.26741, -48.8528, 0.66 ) }
    dend_54 { pt3dadd( -11.3189, -1.98603, -50.9862, 0.44 ) }
    dend_54 { pt3dadd( -10.3467, -2.77634, -53.2191, 0.29 ) }
    dend_54 { pt3dadd( -9.32428, -3.55095, -55.0656, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 15/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -20.705, 0.82546, -16.4785, 2.63 ) }
    dend_53 { pt3dadd( -21.3709, 1.04412, -16.7134, 2.63 ) }
    dend_53 { pt3dadd( -24.1982, 2.14477, -17.9499, 0.44 ) }
    dend_53 { pt3dadd( -25.0612, 2.53392, -18.3636, 0.88 ) }
    dend_53 { pt3dadd( -26.3551, 3.23602, -18.9876, 0.73 ) }
    dend_53 { pt3dadd( -27.244, 3.7689, -19.4406, 0.51 ) }
    dend_53 { pt3dadd( -28.4409, 4.51196, -20.0855, 0.51 ) }
    dend_53 { pt3dadd( -29.4928, 5.21978, -20.706, 1.02 ) }
    dend_53 { pt3dadd( -30.3562, 5.82188, -21.2393, 1.02 ) }
    dend_53 { pt3dadd( -31.8143, 6.64601, -22.0769, 0.29 ) }
    dend_53 { pt3dadd( -32.5106, 6.93117, -22.4338, 0.29 ) }
    dend_53 { pt3dadd( -33.834, 7.29286, -23.0267, 0.29 ) }
    dend_53 { pt3dadd( -34.9307, 7.42956, -23.44, 0.88 ) }
    dend_53 { pt3dadd( -36.3293, 7.38046, -23.8491, 0.36 ) }
    dend_53 { pt3dadd( -37.6134, 7.16907, -24.1918, 0.22 ) }
    dend_53 { pt3dadd( -38.0524, 7.05747, -24.3216, 0.22 ) }
    dend_53 { pt3dadd( -38.5695, 6.93496, -24.4864, 0.22 ) }
    dend_53 { pt3dadd( -39.2476, 6.79534, -24.7301, 0.22 ) }
    dend_53 { pt3dadd( -40.3356, 6.64756, -25.2135, 2.12 ) }
    dend_53 { pt3dadd( -41.3012, 6.63758, -25.7911, 2.48 ) }
    dend_53 { pt3dadd( -42.7292, 6.7997, -26.8147, 1.46 ) }
    dend_53 { pt3dadd( -44.0167, 7.00483, -27.8443, 0.29 ) }
    dend_53 { pt3dadd( -44.5011, 7.08996, -28.2584, 0.29 ) }
    dend_53 { pt3dadd( -44.8941, 7.13719, -28.6078, 0.29 ) }
    dend_53 { pt3dadd( -46.084, 7.18143, -29.6499, 0.29 ) }
    dend_53 { pt3dadd( -46.6376, 7.1659, -30.0446, 0.29 ) }
    dend_53 { pt3dadd( -47.4636, 7.08779, -30.485, 0.8 ) }
    dend_53 { pt3dadd( -48.0604, 7.01215, -30.7739, 0.8 ) }
    dend_53 { pt3dadd( -49.235, 6.93636, -31.3314, 0.22 ) }
    dend_53 { pt3dadd( -49.747, 6.93803, -31.5569, 0.22 ) }
    dend_53 { pt3dadd( -50.2313, 6.97199, -31.7561, 0.22 ) }
    dend_53 { pt3dadd( -50.9775, 7.05189, -32.1534, 0.22 ) }
    dend_53 { pt3dadd( -51.7306, 7.15319, -32.646, 0.22 ) }
    dend_53 { pt3dadd( -52.6612, 7.27809, -33.3343, 0.22 ) }
    dend_53 { pt3dadd( -53.4883, 7.38379, -33.9591, 1.61 ) }
    dend_53 { pt3dadd( -54.4978, 7.47319, -34.6877, 1.61 ) }
    dend_53 { pt3dadd( -56.3285, 7.56037, -35.8934, 0.36 ) }
    dend_53 { pt3dadd( -57.3814, 7.59007, -36.5518, 0.15 ) }
    dend_53 { pt3dadd( -58.8155, 7.63891, -37.3821, 0.15 ) }
    dend_53 { pt3dadd( -59.458, 7.68525, -37.7255, 1.24 ) }
    dend_53 { pt3dadd( -60.2922, 7.79003, -38.174, 1.24 ) }
    dend_53 { pt3dadd( -61.6576, 8.09277, -38.9382, 0.07 ) }
    dend_53 { pt3dadd( -62.4743, 8.35398, -39.3976, 0.58 ) }
    dend_53 { pt3dadd( -63.1455, 8.6493, -39.811, 0.8 ) }
    dend_53 { pt3dadd( -64.5547, 9.44354, -40.7853, 0.44 ) }
    dend_53 { pt3dadd( -65.501, 10.0832, -41.6202, 0.73 ) }
    dend_53 { pt3dadd( -66.3967, 10.8022, -42.5834, 1.75 ) }
    dend_53 { pt3dadd( -66.5961, 10.9882, -42.8279, 1.75 ) }
    dend_53 { pt3dadd( -67.6816, 12.1327, -44.3596, 0.22 ) }
    dend_53 { pt3dadd( -68.3281, 12.9531, -45.4839, 1.75 ) }
    dend_53 { pt3dadd( -69.3256, 14.5001, -47.5694, 0.29 ) }
    dend_53 { pt3dadd( -69.7231, 15.1749, -48.4506, 0.95 ) }
    dend_53 { pt3dadd( -69.8886, 15.482, -48.8663, 0.95 ) }
    dend_53 { pt3dadd( -70.3094, 16.3301, -50.024, 0.44 ) }
    dend_53 { pt3dadd( -70.6895, 17.1219, -51.1779, 0.73 ) }
    dend_53 { pt3dadd( -70.839, 17.4402, -51.6567, 0.73 ) }
    dend_53 { pt3dadd( -71.28, 18.2119, -53.0581, 0.36 ) }
    dend_53 { pt3dadd( -71.5505, 18.62, -54.0332, 0.36 ) }
    dend_53 { pt3dadd( -71.865, 19.0673, -55.3624, 1.75 ) }
    dend_53 { pt3dadd( -72.4665, 19.9594, -58.7684, 0.15 ) }
    dend_53 { pt3dadd( -72.5984, 20.1996, -60.0427, 1.53 ) }
    dend_53 { pt3dadd( -72.7621, 20.6926, -63.4246, 0.15 ) }
    dend_53 { pt3dadd( -72.7828, 20.9435, -65.6403, 0.07 ) }
    dend_53 { pt3dadd( -72.7806, 21.0503, -66.7553, 0.29 ) }
    dend_53 { pt3dadd( -72.7902, 21.2809, -69.5422, 0.29 ) }
    dend_53 { pt3dadd( -72.8245, 21.4279, -71.3839, 0.07 ) }
    dend_53 { pt3dadd( -72.9983, 21.7897, -73.7345, 0.07 ) }
    dend_53 { pt3dadd( -73.1678, 22.0787, -74.7393, 0.07 ) }
    dend_53 { pt3dadd( -73.4971, 22.5123, -75.8201, 0.36 ) }
    dend_53 { pt3dadd( -74.2452, 23.4298, -77.6489, 0.07 ) }
    dend_53 { pt3dadd( -74.783, 24.1077, -78.7646, 0.58 ) }
    dend_53 { pt3dadd( -75.7552, 25.4708, -80.7137, 0.07 ) }
    dend_53 { pt3dadd( -76.1338, 26.0952, -81.5583, 0.29 ) }
    dend_53 { pt3dadd( -76.6759, 27.1036, -82.9524, 0.07 ) }
    dend_53 { pt3dadd( -77.3203, 28.4165, -84.7524, 0.73 ) }
    dend_53 { pt3dadd( -77.656, 29.1032, -85.6471, 0.36 ) }
    dend_53 { pt3dadd( -77.8679, 29.503, -86.149, 0.58 ) }
    dend_53 { pt3dadd( -78.4318, 30.4003, -87.3641, 0.15 ) }
    dend_53 { pt3dadd( -79.2797, 31.5285, -89.0314, 0.73 ) }
    dend_53 { pt3dadd( -79.9504, 32.2986, -90.1244, 0.07 ) }
    dend_53 { pt3dadd( -80.3584, 32.7003, -90.6722, 0.07 ) }
    dend_53 { pt3dadd( -82.0364, 34.2342, -92.732, 0.36 ) }
    dend_53 { pt3dadd( -83.4984, 35.4982, -94.3678, 0.07 ) }
    dend_53 { pt3dadd( -85.3125, 36.987, -96.2209, 0.58 ) }
    dend_53 { pt3dadd( -86.5255, 37.9411, -97.3963, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -87.3967, 38.5855, -98.2109, 0.66 ) }
    dend_53 { pt3dadd( -88.7355, 39.5019, -99.4134, 0.22 ) }
    dend_53 { pt3dadd( -89.7688, 40.1591, -100.269, 0.44 ) }
    dend_53 { pt3dadd( -90.8642, 40.8385, -101.115, 0.15 ) }
    dend_53 { pt3dadd( -91.5926, 41.2661, -101.654, 0.66 ) }
    dend_53 { pt3dadd( -92.0191, 41.5023, -101.993, 0.66 ) }
    dend_53 { pt3dadd( -93.9041, 42.5172, -103.619, 0.07 ) }
    dend_53 { pt3dadd( -95.0359, 43.1143, -104.649, 0.36 ) }
    dend_53 { pt3dadd( -95.8609, 43.563, -105.469, 0.66 ) }
    dend_53 { pt3dadd( -97.1876, 44.312, -106.79, 0.07 ) }
    dend_53 { pt3dadd( -98.4809, 45.0855, -108.063, 1.24 ) }
    dend_53 { pt3dadd( -100.312, 46.2412, -109.841, 0.36 ) }
    dend_53 { pt3dadd( -101.064, 46.735, -110.568, 0.36 ) }
    dend_53 { pt3dadd( -101.943, 47.3077, -111.41, 0.95 ) }
    dend_53 { pt3dadd( -102.658, 47.7838, -112.078, 0.95 ) }
    dend_53 { pt3dadd( -104.019, 48.6741, -113.192, 0.07 ) }
    dend_53 { pt3dadd( -104.488, 48.9669, -113.5, 0.36 ) }
    dend_53 { pt3dadd( -106.107, 49.9688, -114.335, 0.07 ) }
    dend_53 { pt3dadd( -106.578, 50.2537, -114.582, 0.07 ) }
    dend_53 { pt3dadd( -107.485, 50.8039, -115.073, 0.88 ) }
    dend_53 { pt3dadd( -108.391, 51.3011, -115.589, 0.88 ) }
    dend_53 { pt3dadd( -109.974, 52.0082, -116.522, 0.07 ) }
    dend_53 { pt3dadd( -110.73, 52.2604, -117.04, 1.24 ) }
    dend_53 { pt3dadd( -112.97, 52.7854, -118.628, 0.07 ) }
    dend_53 { pt3dadd( -113.771, 52.9106, -119.198, 0.66 ) }
    dend_53 { pt3dadd( -115.241, 53.0542, -120.225, 0.07 ) }
    dend_53 { pt3dadd( -116.91, 53.1322, -121.33, 1.31 ) }
    dend_53 { pt3dadd( -119.903, 53.1589, -123.094, 0.22 ) }
    dend_53 { pt3dadd( -121.069, 53.1385, -123.716, 0.51 ) }
    dend_53 { pt3dadd( -122.688, 53.0509, -124.471, 0.15 ) }
    dend_53 { pt3dadd( -123.737, 52.9745, -124.924, 1.09 ) }
    dend_53 { pt3dadd( -124.562, 52.9299, -125.228, 1.68 ) }
    dend_53 { pt3dadd( -126.999, 52.8829, -125.933, 0.15 ) }
    dend_53 { pt3dadd( -128.26, 52.9087, -126.192, 0.15 ) }
    dend_53 { pt3dadd( -129.464, 52.9945, -126.457, 0.44 ) }
    dend_53 { pt3dadd( -130.293, 53.1071, -126.647, 0.22 ) }
    dend_53 { pt3dadd( -131.026, 53.2581, -126.811, 0.22 ) }
    dend_53 { pt3dadd( -132.017, 53.5566, -127.006, 0.51 ) }
    dend_53 { pt3dadd( -132.765, 53.8347, -127.106, 0.51 ) }
    dend_53 { pt3dadd( -134.261, 54.4416, -127.283, 0.15 ) }
    dend_53 { pt3dadd( -134.904, 54.7075, -127.354, 0.15 ) }
    dend_53 { pt3dadd( -136.073, 55.1709, -127.538, 0.73 ) }
    dend_53 { pt3dadd( -136.719, 55.3859, -127.654, 0.73 ) }
    dend_53 { pt3dadd( -137.965, 55.7256, -127.892, 0.07 ) }
    dend_53 { pt3dadd( -138.744, 55.9308, -128.011, 1.24 ) }
    dend_53 { pt3dadd( -139.679, 56.2125, -128.106, 1.24 ) }
    dend_53 { pt3dadd( -141.351, 56.8352, -128.182, 0.15 ) }
    dend_53 { pt3dadd( -142.346, 57.3428, -128.158, 0.15 ) }
    dend_53 { pt3dadd( -142.821, 57.6431, -128.123, 0.15 ) }
    dend_53 { pt3dadd( -143.903, 58.4793, -127.982, 0.15 ) }
    dend_53 { pt3dadd( -144.589, 59.0689, -127.851, 0.88 ) }
    dend_53 { pt3dadd( -144.98, 59.4303, -127.775, 0.88 ) }
    dend_53 { pt3dadd( -146.058, 60.4445, -127.636, 0.22 ) }
    dend_53 { pt3dadd( -146.577, 60.913, -127.637, 0.51 ) }
    dend_53 { pt3dadd( -147.214, 61.4007, -127.779, 0.51 ) }
    dend_53 { pt3dadd( -147.61, 61.6541, -127.933, 0.51 ) }
    dend_53 { pt3dadd( -148.592, 62.1855, -128.369, 0.15 ) }
    dend_53 { pt3dadd( -149.695, 62.7006, -128.883, 0.73 ) }
    dend_53 { pt3dadd( -150.39, 62.9728, -129.213, 1.09 ) }
    dend_53 { pt3dadd( -152.193, 63.6151, -130.016, 0.22 ) }
    dend_53 { pt3dadd( -153.552, 64.0522, -130.567, 1.31 ) }
    dend_53 { pt3dadd( -153.953, 64.169, -130.724, 1.17 ) }
    dend_53 { pt3dadd( -154.685, 64.3554, -130.989, 1.17 ) }
    dend_53 { pt3dadd( -156.666, 64.78, -131.656, 0.22 ) }
    dend_53 { pt3dadd( -157.776, 64.9791, -132.018, 1.24 ) }
    dend_53 { pt3dadd( -158.746, 65.1219, -132.301, 1.24 ) }
    dend_53 { pt3dadd( -160.374, 65.3284, -132.797, 0.07 ) }
    dend_53 { pt3dadd( -161.031, 65.431, -133.031, 0.07 ) }
    dend_53 { pt3dadd( -161.327, 65.4822, -133.149, 0.07 ) }
    dend_53 { pt3dadd( -161.636, 65.5433, -133.275, 0.07 ) }
    dend_53 { pt3dadd( -162.139, 65.6858, -133.441, 0.07 ) }
    dend_53 { pt3dadd( -162.764, 65.9172, -133.588, 0.07 ) }
    dend_53 { pt3dadd( -164.072, 66.4344, -133.79, 0.36 ) }
    dend_53 { pt3dadd( -164.816, 66.7229, -133.896, 0.95 ) }
    dend_53 { pt3dadd( -165.795, 67.0828, -134.049, 1.24 ) }
    dend_53 { pt3dadd( -168.149, 67.8675, -134.413, 0.07 ) }
    dend_53 { pt3dadd( -169.728, 68.3404, -134.675, 0.29 ) }
    dend_53 { pt3dadd( -171.08, 68.6756, -134.902, 0.07 ) }
    dend_53 { pt3dadd( -171.696, 68.7942, -134.971, 0.95 ) }
    dend_53 { pt3dadd( -173.673, 69.0714, -135.197, 0.22 ) }
    dend_53 { pt3dadd( -174.541, 69.1169, -135.336, 0.22 ) }
    dend_53 { pt3dadd( -175.24, 69.0973, -135.48, 0.22 ) }
    dend_53 { pt3dadd( -176.782, 68.9335, -135.853, 0.51 ) }
    dend_53 { pt3dadd( -178.986, 68.5397, -136.417, 0.29 ) }
    dend_53 { pt3dadd( -180.582, 68.181, -136.831, 1.39 ) }
    dend_53 { pt3dadd( -183.551, 67.4137, -137.695, 0.29 ) }
    dend_53 { pt3dadd( -184.102, 67.2716, -137.878, 0.29 ) }
    dend_53 { pt3dadd( -185.124, 67.0113, -138.298, 0.88 ) }
    dend_53 { pt3dadd( -186.191, 66.6985, -138.884, 0.29 ) }
    dend_53 { pt3dadd( -186.597, 66.5431, -139.184, 0.29 ) }
    dend_53 { pt3dadd( -187.565, 65.9881, -140.035, 0.66 ) }
    dend_53 { pt3dadd( -188.124, 65.6123, -140.592, 0.66 ) }
    dend_53 { pt3dadd( -189.147, 64.9002, -141.682, 0.36 ) }
    dend_53 { pt3dadd( -190.105, 64.184, -142.823, 0.36 ) }
    dend_53 { pt3dadd( -190.839, 63.5268, -143.83, 0.95 ) }
    dend_53 { pt3dadd( -191.834, 62.3587, -145.319, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 96/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -14.0076, 7.84696, 2.14657, 0.58 ) }
    dend_36 { pt3dadd( -14.7936, 7.84995, 2.54856, 0.58 ) }
    dend_36 { pt3dadd( -16.0035, 7.85456, 3.16731, 0.58 ) }
    dend_36 { pt3dadd( -17.1493, 7.85892, 3.75335, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( -18.4861, 7.86401, 4.43704, 1.17 ) }
    dend_36 { pt3dadd( -19.317, 7.86718, 4.86196, 1.02 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 2/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -14.0076, 7.84696, 2.14657, 0.88 ) }
    dend_25 { pt3dadd( -14.4962, 8.51476, 1.33381, 0.88 ) }
    dend_25 { pt3dadd( -15.2336, 9.52256, 0.107239, 0.95 ) }
    dend_25 { pt3dadd( -15.816, 10.3186, -0.861594, 1.61 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 6/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.68975, 25.692, 37.6597, 0.07 ) }
    dend_23 { pt3dadd( 3.14757, 31.0272, 46.073, 0.07 ) }
    dend_23 { pt3dadd( 6.38195, 35.2593, 54.5871, 0.07 ) }
    dend_23 { pt3dadd( 7.68064, 41.3065, 62.5562, 0.07 ) }
    dend_23 { pt3dadd( 9.66796, 48.441, 69.4557, 0.07 ) }
    dend_23 { pt3dadd( 13.3663, 56.484, 74.4306, 0.07 ) }
    dend_23 { pt3dadd( 15.6016, 65.3228, 78.9741, 0.07 ) }
    dend_23 { pt3dadd( 17.3588, 73.8484, 84.24, 0.07 ) }
    dend_23 { pt3dadd( 18.7787, 81.3444, 90.9108, 0.07 ) }
    dend_23 { pt3dadd( 21.0717, 88.6807, 97.5074, 0.07 ) }
    dend_23 { pt3dadd( 23.0067, 95.8934, 104.344, 0.07 ) }
    dend_23 { pt3dadd( 25.586, 102.256, 111.747, 0.07 ) }
    dend_23 { pt3dadd( 29.1768, 108.821, 118.536, 0.07 ) }
    dend_23 { pt3dadd( 31.8251, 115.226, 125.88, 0.07 ) }
    dend_23 { pt3dadd( 34.4565, 121.197, 133.57, 0.07 ) }
    dend_23 { pt3dadd( 37.9639, 128.019, 140.158, 0.07 ) }
    dend_23 { pt3dadd( 40.4122, 134.905, 147.15, 0.07 ) }
    dend_23 { pt3dadd( 43.3856, 142.461, 153.217, 0.07 ) }
    dend_23 { pt3dadd( 46.344, 149.024, 160.306, 0.07 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 25/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 1.68975, 25.692, 37.6597, 0.07 ) }
    dend_22 { pt3dadd( 2.3437, 30.309, 46.5638, 0.07 ) }
    dend_22 { pt3dadd( 3.64709, 32.9081, 56.1488, 0.07 ) }
    dend_22 { pt3dadd( 3.48142, 34.2649, 66.0594, 0.07 ) }
    dend_22 { pt3dadd( 4.82855, 36.8542, 75.6408, 0.07 ) }
    dend_22 { pt3dadd( 5.36642, 37.7376, 85.5891, 0.07 ) }
    dend_22 { pt3dadd( 5.88783, 37.6716, 95.5753, 0.07 ) }
    dend_22 { pt3dadd( 7.15475, 39.6252, 105.31, 0.07 ) }
    dend_22 { pt3dadd( 9.71314, 43.6856, 114.128, 0.07 ) }
    dend_22 { pt3dadd( 12.1181, 47.6821, 123.017, 0.07 ) }
    dend_22 { pt3dadd( 14.7896, 51.5906, 131.867, 0.07 ) }
    dend_22 { pt3dadd( 18.5107, 53.4768, 140.965, 0.07 ) }
    dend_22 { pt3dadd( 23.3219, 56.56, 149.199, 0.07 ) }
    dend_22 { pt3dadd( 29.9947, 58.2802, 156.456, 0.07 ) }
    dend_22 { pt3dadd( 36.6008, 59.8963, 163.796, 0.07 ) }
    dend_22 { pt3dadd( 41.585, 60.8627, 172.413, 0.07 ) }
    dend_22 { pt3dadd( 44.8665, 62.9217, 181.644, 0.07 ) }
    dend_22 { pt3dadd( 47.9461, 64.7507, 190.989, 0.07 ) }
    dend_22 { pt3dadd( 49.3321, 68.246, 200.287, 0.07 ) }
    dend_22 { pt3dadd( 51.4252, 71.5906, 209.505, 0.07 ) }
    dend_22 { pt3dadd( 52.4335, 73.9528, 219.183, 0.07 ) }
    dend_22 { pt3dadd( 51.9538, 77.2805, 228.629, 0.07 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 47/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 3.40396, -12.0543, 2.74785, 2.77 ) }
    dend_12 { pt3dadd( 4.29396, -12.4028, 2.74785, 2.77 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 49/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.40396, -12.0543, 2.74785, 2.63 ) }
    dend_1 { pt3dadd( 3.28056, -13.4778, 2.60421, 2.63 ) }
    dend_1 { pt3dadd( 3.14882, -14.9974, 2.45086, 2.34 ) }
    dend_1 { pt3dadd( 2.93231, -17.4949, 2.19885, 2.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 53/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -22.3866, 33.2829, 0.0, 0.153181 ) }
    axon_1 { pt3dadd( -30.6871, 45.777, 0.0, 0.153181 ) }
    axon_1 { pt3dadd( -38.9877, 58.271, 0.0, 0.153181 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 56/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -94.071, -22.101, -98.0723, 0.07 ) }
    dend_59 { pt3dadd( -95.4262, -22.9929, -98.5677, 0.07 ) }
    dend_59 { pt3dadd( -96.6924, -23.7602, -99.0743, 0.51 ) }
    dend_59 { pt3dadd( -98.0103, -24.5013, -99.6441, 0.22 ) }
    dend_59 { pt3dadd( -99.4243, -25.2308, -100.326, 0.07 ) }
    dend_59 { pt3dadd( -100.71, -25.8633, -101.007, 0.29 ) }
    dend_59 { pt3dadd( -101.397, -26.1907, -101.374, 0.07 ) }
    dend_59 { pt3dadd( -102.624, -26.7202, -102.024, 1.02 ) }
    dend_59 { pt3dadd( -104.086, -27.3266, -102.845, 0.07 ) }
    dend_59 { pt3dadd( -105.307, -27.8851, -103.56, 0.51 ) }
    dend_59 { pt3dadd( -106.679, -28.5897, -104.418, 0.15 ) }
    dend_59 { pt3dadd( -107.582, -29.1324, -104.972, 0.36 ) }
    dend_59 { pt3dadd( -108.661, -29.8977, -105.639, 0.07 ) }
    dend_59 { pt3dadd( -109.578, -30.6739, -106.188, 0.51 ) }
    dend_59 { pt3dadd( -110.925, -32.0328, -106.977, 0.07 ) }
    dend_59 { pt3dadd( -111.599, -32.8391, -107.352, 0.73 ) }
    dend_59 { pt3dadd( -112.663, -34.311, -107.926, 0.07 ) }
    dend_59 { pt3dadd( -113.021, -34.8455, -108.128, 0.22 ) }
    dend_59 { pt3dadd( -113.343, -35.3278, -108.314, 0.07 ) }
    dend_59 { pt3dadd( -113.637, -35.7714, -108.454, 0.36 ) }
    dend_59 { pt3dadd( -114.002, -36.3088, -108.608, 0.07 ) }
    dend_59 { pt3dadd( -114.479, -36.9649, -108.826, 0.44 ) }
    dend_59 { pt3dadd( -115.203, -37.7895, -109.137, 0.15 ) }
    dend_59 { pt3dadd( -116.008, -38.4744, -109.512, 0.88 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -94.071, -22.101, -98.0723, 0.07 ) }
    dend_58 { pt3dadd( -95.1287, -22.7191, -99.2788, 0.07 ) }
    dend_58 { pt3dadd( -95.9557, -23.2517, -100.43, 0.51 ) }
    dend_58 { pt3dadd( -96.2608, -23.4748, -100.898, 0.15 ) }
    dend_58 { pt3dadd( -96.9631, -24.0391, -102.075, 0.44 ) }
    dend_58 { pt3dadd( -97.5004, -24.4643, -103.048, 0.07 ) }
    dend_58 { pt3dadd( -98.5257, -25.2451, -105.141, 0.07 ) }
    dend_58 { pt3dadd( -98.7645, -25.425, -105.775, 0.51 ) }
    dend_58 { pt3dadd( -98.9295, -25.5464, -106.259, 0.36 ) }
    dend_58 { pt3dadd( -99.337, -25.8443, -107.56, 0.66 ) }
    dend_58 { pt3dadd( -99.7684, -26.1338, -109.099, 0.36 ) }
    dend_58 { pt3dadd( -100.154, -26.3958, -110.469, 0.07 ) }
    dend_58 { pt3dadd( -100.375, -26.5359, -111.226, 0.36 ) }
    dend_58 { pt3dadd( -100.767, -26.7691, -112.531, 0.36 ) }
    dend_58 { pt3dadd( -100.978, -26.8889, -113.234, 0.51 ) }
    dend_58 { pt3dadd( -101.83, -27.4825, -116.174, 0.07 ) }
    dend_58 { pt3dadd( -102.244, -27.8984, -117.605, 0.07 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 97/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -19.317, 7.86718, 4.86196, 0.22 ) }
    dend_44 { pt3dadd( -18.7885, 6.90462, 5.10714, 0.22 ) }
    dend_44 { pt3dadd( -18.1332, 5.06708, 5.42745, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_44 { pt3dadd( -17.8384, 3.98109, 5.56258, 0.22 ) }
    dend_44 { pt3dadd( -17.6307, 3.04725, 5.65107, 0.22 ) }
    dend_44 { pt3dadd( -17.4026, 1.85208, 5.74792, 0.22 ) }
    dend_44 { pt3dadd( -17.2409, 0.79161, 5.83642, 0.44 ) }
    dend_44 { pt3dadd( -17.1603, -0.892035, 5.8958, 0.07 ) }
    dend_44 { pt3dadd( -17.2479, -1.57118, 5.93348, 0.07 ) }
    dend_44 { pt3dadd( -17.413, -2.16068, 6.01648, 0.22 ) }
    dend_44 { pt3dadd( -17.5681, -2.58962, 6.09722, 0.07 ) }
    dend_44 { pt3dadd( -17.8189, -3.176, 6.26212, 0.07 ) }
    dend_44 { pt3dadd( -18.004, -3.54781, 6.41986, 0.07 ) }
    dend_44 { pt3dadd( -18.8066, -4.94347, 7.23394, 0.22 ) }
    dend_44 { pt3dadd( -19.213, -5.51074, 7.62376, 0.22 ) }
    dend_44 { pt3dadd( -18.3719, -15.7114, 8.12756, 0.22 ) }
    dend_44 { pt3dadd( -17.2091, -25.8513, 9.01364, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 14/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -19.317, 7.86718, 4.86196, 0.15 ) }
    dend_37 { pt3dadd( -19.6813, 8.68635, 5.63338, 0.15 ) }
    dend_37 { pt3dadd( -19.875, 9.60489, 6.7637, 0.29 ) }
    dend_37 { pt3dadd( -19.7827, 9.98544, 7.48124, 0.29 ) }
    dend_37 { pt3dadd( -19.342, 10.2984, 8.79451, 0.29 ) }
    dend_37 { pt3dadd( -19.1305, 10.3149, 9.30823, 0.22 ) }
    dend_37 { pt3dadd( -18.7836, 10.1818, 10.1142, 0.22 ) }
    dend_37 { pt3dadd( -18.2202, 9.77224, 11.2917, 0.22 ) }
    dend_37 { pt3dadd( -17.6635, 9.18953, 12.4608, 0.22 ) }
    dend_37 { pt3dadd( -17.1558, 8.54291, 13.4796, 0.22 ) }
    dend_37 { pt3dadd( -16.7539, 7.91816, 14.2806, 0.22 ) }
    dend_37 { pt3dadd( -16.291, 6.97703, 15.3865, 0.51 ) }
    dend_37 { pt3dadd( -16.1299, 6.4725, 15.902, 0.95 ) }
    dend_37 { pt3dadd( -16.074, 5.61408, 16.63, 1.17 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 28/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -15.816, 10.3186, -0.861594, 0.88 ) }
    dend_33 { pt3dadd( -16.2406, 11.8665, -0.421254, 0.88 ) }
    dend_33 { pt3dadd( -16.7319, 13.6628, 0.0639853, 0.88 ) }
    dend_33 { pt3dadd( -16.9504, 14.4037, 0.251701, 0.88 ) }
    dend_33 { pt3dadd( -17.3825, 15.7534, 0.54471, 0.73 ) }
    dend_33 { pt3dadd( -17.7201, 16.808, 0.773633, 0.73 ) }
    dend_33 { pt3dadd( -18.0422, 17.8139, 0.991986, 1.61 ) }
    dend_33 { pt3dadd( -18.1957, 18.2478, 1.0596, 1.97 ) }
    dend_33 { pt3dadd( -18.4942, 19.0321, 1.15964, 1.46 ) }
    dend_33 { pt3dadd( -18.9817, 20.3083, 1.30245, 0.8 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 38/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.816, 10.3186, -0.861594, 0.36 ) }
    dend_26 { pt3dadd( -17.0981, 11.3269, -0.599789, 0.36 ) }
    dend_26 { pt3dadd( -17.7105, 11.7827, -0.397309, 0.8 ) }
    dend_26 { pt3dadd( -18.5687, 12.3856, -0.0468933, 0.8 ) }
    dend_26 { pt3dadd( -19.7412, 13.147, 0.482985, 0.66 ) }
    dend_26 { pt3dadd( -20.7729, 13.7143, 0.985384, 0.8 ) }
    dend_26 { pt3dadd( -21.6489, 14.1363, 1.40658, 0.95 ) }
    dend_26 { pt3dadd( -22.3783, 14.4062, 1.76975, 1.09 ) }
    dend_26 { pt3dadd( -23.1729, 14.611, 2.11582, 1.53 ) }
    dend_26 { pt3dadd( -24.18, 14.7632, 2.41741, 1.09 ) }
    dend_26 { pt3dadd( -25.857, 14.9051, 2.61024, 0.73 ) }
    dend_26 { pt3dadd( -26.4425, 14.9479, 2.58559, 0.73 ) }
    dend_26 { pt3dadd( -28.0985, 15.1282, 2.2895, 0.73 ) }
    dend_26 { pt3dadd( -28.7854, 15.2592, 2.06953, 0.73 ) }
    dend_26 { pt3dadd( -30.0133, 15.5872, 1.53843, 0.73 ) }
    dend_26 { pt3dadd( -30.9274, 15.9118, 1.06527, 1.17 ) }
    dend_26 { pt3dadd( -31.8114, 16.2966, 0.564801, 1.61 ) }
    dend_26 { pt3dadd( -32.6542, 16.7117, 0.0671951, 1.61 ) }
    dend_26 { pt3dadd( -33.9878, 17.4736, -0.738471, 1.02 ) }
    dend_26 { pt3dadd( -35.0519, 18.1056, -1.36492, 1.02 ) }
    dend_26 { pt3dadd( -36.1343, 18.785, -1.9702, 1.02 ) }
    dend_26 { pt3dadd( -37.2902, 19.5448, -2.56835, 1.02 ) }
    dend_26 { pt3dadd( -38.3576, 20.2685, -3.06781, 1.02 ) }
    dend_26 { pt3dadd( -39.5146, 21.0532, -3.56425, 0.95 ) }
    dend_26 { pt3dadd( -40.2085, 21.5424, -3.82722, 0.95 ) }
    dend_26 { pt3dadd( -40.8764, 22.0616, -4.05731, 1.46 ) }
    dend_26 { pt3dadd( -41.7028, 22.7662, -4.28057, 1.82 ) }
    dend_26 { pt3dadd( -42.3922, 23.4213, -4.36652, 1.82 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.29396, -12.4028, 2.74785, 0.51 ) }
    dend_16 { pt3dadd( 4.57354, -12.4047, 2.91736, 0.51 ) }
    dend_16 { pt3dadd( 5.73858, -12.1692, 3.73815, 0.29 ) }
    dend_16 { pt3dadd( 6.28722, -11.9165, 4.28451, 0.29 ) }
    dend_16 { pt3dadd( 6.65837, -11.6291, 4.77619, 0.15 ) }
    dend_16 { pt3dadd( 7.02672, -11.1569, 5.44062, 0.15 ) }
    dend_16 { pt3dadd( 7.20409, -10.8181, 5.89699, 0.44 ) }
    dend_16 { pt3dadd( 7.38744, -10.1763, 6.64281, 0.66 ) }
    dend_16 { pt3dadd( 7.52586, -9.23686, 7.63164, 0.15 ) }
    dend_16 { pt3dadd( 7.5863, -8.95465, 7.92953, 0.15 ) }
    dend_16 { pt3dadd( 7.73505, -8.56075, 8.32385, 0.36 ) }
    dend_16 { pt3dadd( 8.24598, -7.84319, 8.97752, 0.36 ) }
    dend_16 { pt3dadd( 8.71082, -7.47818, 9.29233, 0.8 ) }
    dend_16 { pt3dadd( 9.61282, -7.02781, 9.63866, 0.8 ) }
    dend_16 { pt3dadd( 10.7615, -6.60688, 9.99027, 0.15 ) }
    dend_16 { pt3dadd( 11.8359, -6.3269, 10.2806, 0.15 ) }
    dend_16 { pt3dadd( 12.2692, -6.26235, 10.3716, 0.15 ) }
    dend_16 { pt3dadd( 12.7902, -6.25414, 10.477, 0.15 ) }
    dend_16 { pt3dadd( 13.0881, -6.33124, 10.6019, 0.15 ) }
    dend_16 { pt3dadd( 13.7953, -6.81125, 11.0231, 0.15 ) }
    dend_16 { pt3dadd( 14.1542, -7.01176, 11.2113, 0.15 ) }
    dend_16 { pt3dadd( 14.4118, -7.19829, 11.4089, 0.15 ) }
    dend_16 { pt3dadd( 15.3886, -7.86692, 12.1673, 0.15 ) }
    dend_16 { pt3dadd( 15.8169, -8.03551, 12.4017, 0.15 ) }
    dend_16 { pt3dadd( 16.8557, -8.13828, 12.6488, 0.15 ) }
    dend_16 { pt3dadd( 18.8811, -8.10959, 12.8432, 0.15 ) }
    dend_16 { pt3dadd( 26.3165, -5.44782, 19.0053, 0.15 ) }
    dend_16 { pt3dadd( 33.6124, -1.20273, 24.4474, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 94/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 4.29396, -12.4028, 2.74785, 0.51 ) }
    dend_13 { pt3dadd( 4.09769, -11.8463, 3.38284, 0.51 ) }
    dend_13 { pt3dadd( 3.38369, -10.596, 4.86107, 0.73 ) }
    dend_13 { pt3dadd( 2.79058, -9.80877, 5.88407, 0.73 ) }
    dend_13 { pt3dadd( 2.27719, -9.25168, 6.66153, 0.73 ) }
    dend_13 { pt3dadd( 1.59892, -8.62739, 7.57037, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 0.600565, -7.86056, 8.77108, 0.73 ) }
    dend_13 { pt3dadd( -0.316625, -7.35577, 9.68258, 0.73 ) }
    dend_13 { pt3dadd( -1.24139, -7.01805, 10.4803, 0.73 ) }
    dend_13 { pt3dadd( -2.19815, -6.81333, 11.3125, 0.73 ) }
    dend_13 { pt3dadd( -2.85828, -6.73601, 11.8917, 0.73 ) }
    dend_13 { pt3dadd( -3.79888, -6.71983, 12.7352, 0.73 ) }
    dend_13 { pt3dadd( -4.3746, -6.78611, 13.2191, 0.73 ) }
    dend_13 { pt3dadd( -3.64112, -6.76258, 13.1993, 0.73 ) }
    dend_13 { pt3dadd( -2.78956, -6.76092, 13.4624, 0.73 ) }
    dend_13 { pt3dadd( -1.18951, -6.76753, 13.9994, 0.58 ) }
    dend_13 { pt3dadd( -0.393557, -6.78385, 14.2369, 0.88 ) }
    dend_13 { pt3dadd( 0.498472, -6.79135, 14.453, 0.88 ) }
    dend_13 { pt3dadd( 1.42386, -6.76029, 14.6547, 0.22 ) }
    dend_13 { pt3dadd( 1.92754, -6.71656, 14.7595, 0.22 ) }
    dend_13 { pt3dadd( 2.9279, -6.6186, 14.9469, 0.22 ) }
    dend_13 { pt3dadd( 3.80288, -6.54151, 15.126, 0.22 ) }
    dend_13 { pt3dadd( 4.44973, -6.52071, 15.2554, 0.22 ) }
    dend_13 { pt3dadd( 5.47134, -6.56815, 15.4799, 0.22 ) }
    dend_13 { pt3dadd( 6.13136, -6.63972, 15.6285, 0.22 ) }
    dend_13 { pt3dadd( 6.1197, -2.70267, 24.8615, 0.22 ) }
    dend_13 { pt3dadd( 8.18422, 0.0855308, 34.2603, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 21/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.93231, -17.4949, 2.19885, 1.9 ) }
    dend_7 { pt3dadd( 3.72106, -18.875, 3.50527, 1.9 ) }
    dend_7 { pt3dadd( 4.25062, -20.2357, 4.60861, 0.88 ) }
    dend_7 { pt3dadd( 4.33409, -20.6303, 4.91633, 0.8 ) }
    dend_7 { pt3dadd( 4.37149, -21.1186, 5.28914, 0.8 ) }
    dend_7 { pt3dadd( 4.34642, -21.4685, 5.56556, 0.8 ) }
    dend_7 { pt3dadd( 4.18394, -22.1466, 6.13232, 0.73 ) }
    dend_7 { pt3dadd( 3.613, -22.2281, 6.38494, 0.58 ) }
    dend_7 { pt3dadd( 2.8659, -22.0485, 6.69903, 0.58 ) }
    dend_7 { pt3dadd( 2.61419, -21.9339, 6.79464, 0.58 ) }
    dend_7 { pt3dadd( 1.67168, -21.4291, 7.16788, 1.17 ) }
    dend_7 { pt3dadd( 1.03581, -21.0801, 7.46206, 1.17 ) }
    dend_7 { pt3dadd( -0.244366, -20.4294, 8.18, 1.17 ) }
    dend_7 { pt3dadd( -1.05398, -20.0688, 8.7058, 0.8 ) }
    dend_7 { pt3dadd( -1.94022, -19.7892, 9.37735, 0.51 ) }
    dend_7 { pt3dadd( -2.91659, -19.6133, 10.1818, 0.51 ) }
    dend_7 { pt3dadd( -3.81638, -19.6006, 10.9885, 0.51 ) }
    dend_7 { pt3dadd( -4.91062, -19.7712, 12.079, 1.39 ) }
    dend_7 { pt3dadd( -5.31026, -19.9188, 12.54, 1.39 ) }
    dend_7 { pt3dadd( -6.20525, -20.4766, 13.7849, 1.39 ) }
    dend_7 { pt3dadd( -6.63808, -20.9217, 14.603, 1.09 ) }
    dend_7 { pt3dadd( -6.83272, -21.3474, 15.2563, 0.88 ) }
    dend_7 { pt3dadd( -6.91488, -21.968, 16.0987, 0.66 ) }
    dend_7 { pt3dadd( -6.53698, -22.8225, 17.0011, 0.36 ) }
    dend_7 { pt3dadd( -5.85528, -23.6448, 17.6781, 0.29 ) }
    dend_7 { pt3dadd( -5.427, -24.0314, 17.9413, 0.29 ) }
    dend_7 { pt3dadd( -4.75727, -24.5556, 18.2769, 0.29 ) }
    dend_7 { pt3dadd( -7.99004, -28.5983, 26.8789, 0.29 ) }
    dend_7 { pt3dadd( -9.36008, -30.7961, 36.5498, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 50/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 2.93231, -17.4949, 2.19885, 1.53 ) }
    dend_2 { pt3dadd( 2.91219, -18.9692, 1.53688, 1.53 ) }
    dend_2 { pt3dadd( 2.89487, -20.2384, 0.967058, 1.53 ) }
    dend_2 { pt3dadd( 2.87806, -21.4706, 0.413803, 1.97 ) }
    dend_2 { pt3dadd( 2.86281, -22.5877, -0.0877817, 2.48 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 55/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -17.2091, -25.8513, 9.01364, 0.07 ) }
    dend_46 { pt3dadd( -15.9161, -35.5844, 11.87, 0.07 ) }
    dend_46 { pt3dadd( -14.0269, -45.1136, 15.0325, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 58/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -17.2091, -25.8513, 9.01364, 0.07 ) }
    dend_45 { pt3dadd( -16.9798, -36.095, 9.27964, 0.07 ) }
    dend_45 { pt3dadd( -18.1141, -46.2714, 9.65905, 0.07 ) }
    dend_45 { pt3dadd( -18.7852, -56.3588, 11.3009, 0.07 ) }
    dend_45 { pt3dadd( -21.4831, -66.2094, 11.9034, 0.07 ) }
    dend_45 { pt3dadd( -25.6593, -75.5211, 11.7279, 0.07 ) }
    dend_45 { pt3dadd( -28.2977, -85.3459, 12.8065, 0.07 ) }
    dend_45 { pt3dadd( -32.1153, -94.5925, 14.8179, 0.07 ) }
    dend_45 { pt3dadd( -34.5637, -104.492, 15.6754, 0.07 ) }
    dend_45 { pt3dadd( -36.3017, -114.478, 17.1142, 0.07 ) }
    dend_45 { pt3dadd( -37.0832, -124.654, 18.0244, 0.07 ) }
    dend_45 { pt3dadd( -38.0283, -134.851, 18.3889, 0.07 ) }
    dend_45 { pt3dadd( -40.3267, -144.698, 16.8298, 0.07 ) }
    dend_45 { pt3dadd( -42.8986, -154.59, 16.3406, 0.07 ) }
    dend_45 { pt3dadd( -44.9297, -164.555, 17.5061, 0.07 ) }
    // Section: dend_41, id: dend_41, parent: dend_37 (entry count 73/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -16.074, 5.61408, 16.63, 0.44 ) }
    dend_41 { pt3dadd( -15.885, 6.7106, 17.0719, 0.44 ) }
    dend_41 { pt3dadd( -15.6828, 8.16037, 17.5727, 0.58 ) }
    dend_41 { pt3dadd( -15.5914, 8.91419, 17.789, 0.44 ) }
    dend_41 { pt3dadd( -15.503, 9.71124, 17.9738, 0.22 ) }
    dend_41 { pt3dadd( -15.4393, 10.3568, 18.0957, 0.22 ) }
    dend_41 { pt3dadd( -15.3514, 11.2481, 18.2641, 0.22 ) }
    dend_41 { pt3dadd( -15.2964, 11.865, 18.3378, 0.22 ) }
    dend_41 { pt3dadd( -15.22, 12.9384, 18.3929, 1.02 ) }
    dend_41 { pt3dadd( -15.1604, 14.1636, 18.4523, 0.36 ) }
    dend_41 { pt3dadd( -15.1253, 15.2999, 18.4956, 0.15 ) }
    dend_41 { pt3dadd( -14.6205, 25.2315, 20.9165, 0.15 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 85/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -16.074, 5.61408, 16.63, 0.15 ) }
    dend_38 { pt3dadd( -16.6897, 6.18211, 16.594, 0.15 ) }
    dend_38 { pt3dadd( -17.5435, 7.23702, 16.7348, 0.15 ) }
    dend_38 { pt3dadd( -17.8831, 7.84248, 16.879, 0.15 ) }
    dend_38 { pt3dadd( -18.2485, 8.62824, 17.1135, 0.15 ) }
    dend_38 { pt3dadd( -18.7883, 9.73974, 17.5619, 0.15 ) }
    dend_38 { pt3dadd( -19.1621, 10.4111, 17.8714, 0.15 ) }
    dend_38 { pt3dadd( -19.3934, 10.817, 18.1209, 0.15 ) }
    dend_38 { pt3dadd( -19.8107, 11.4176, 18.5901, 0.44 ) }
    dend_38 { pt3dadd( -20.3937, 11.9324, 19.1397, 0.29 ) }
    dend_38 { pt3dadd( -21.3401, 12.2197, 19.7761, 0.15 ) }
    dend_38 { pt3dadd( -22.006, 12.1874, 20.0735, 0.15 ) }
    dend_38 { pt3dadd( -22.7026, 12.0739, 20.3157, 0.15 ) }
    dend_38 { pt3dadd( -23.9109, 11.8388, 20.6716, 0.15 ) }
    dend_38 { pt3dadd( -24.5927, 11.691, 20.8561, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_38 { pt3dadd( -25.1928, 11.5658, 21.0025, 0.15 ) }
    dend_38 { pt3dadd( -25.7381, 11.5191, 21.1189, 0.15 ) }
    dend_38 { pt3dadd( -26.4233, 11.6407, 21.3242, 0.15 ) }
    dend_38 { pt3dadd( -27.0558, 11.9858, 21.5608, 0.15 ) }
    dend_38 { pt3dadd( -27.5529, 12.3893, 21.7662, 0.15 ) }
    dend_38 { pt3dadd( -28.0178, 12.7994, 21.933, 0.15 ) }
    dend_38 { pt3dadd( -28.3355, 13.0909, 22.0325, 0.15 ) }
    dend_38 { pt3dadd( -29.0116, 13.6829, 22.2187, 0.22 ) }
    dend_38 { pt3dadd( -29.4265, 14.0028, 22.3194, 0.22 ) }
    dend_38 { pt3dadd( -29.9763, 14.3569, 22.4474, 0.22 ) }
    dend_38 { pt3dadd( -30.8301, 14.8263, 22.6554, 0.15 ) }
    dend_38 { pt3dadd( -31.8941, 15.3598, 22.9745, 0.15 ) }
    dend_38 { pt3dadd( -32.5355, 15.6915, 23.2154, 0.15 ) }
    dend_38 { pt3dadd( -33.0875, 16.0128, 23.4604, 0.36 ) }
    dend_38 { pt3dadd( -33.7973, 16.4317, 23.8046, 0.15 ) }
    dend_38 { pt3dadd( -34.5507, 16.8412, 24.1572, 0.15 ) }
    dend_38 { pt3dadd( -35.4204, 17.2486, 24.5127, 0.15 ) }
    dend_38 { pt3dadd( -36.0623, 17.5, 24.7342, 0.15 ) }
    dend_38 { pt3dadd( -36.6559, 17.6694, 24.9038, 0.15 ) }
    dend_38 { pt3dadd( -37.6966, 17.9591, 25.1703, 0.15 ) }
    dend_38 { pt3dadd( -39.3981, 18.4106, 25.5169, 0.15 ) }
    dend_38 { pt3dadd( -40.7552, 18.7321, 25.7189, 1.09 ) }
    dend_38 { pt3dadd( -41.9377, 18.9435, 25.8293, 1.09 ) }
    dend_38 { pt3dadd( -43.4627, 19.1053, 25.9367, 0.22 ) }
    dend_38 { pt3dadd( -51.7718, 24.222, 28.3939, 0.22 ) }
    dend_38 { pt3dadd( -59.2855, 30.7295, 30.1931, 0.22 ) }
    dend_38 { pt3dadd( -67.6597, 36.329, 30.0208, 0.22 ) }
    dend_38 { pt3dadd( -74.4992, 43.7028, 31.2329, 0.22 ) }
    dend_38 { pt3dadd( -81.3755, 50.772, 33.5026, 0.22 ) }
    dend_38 { pt3dadd( -87.9906, 58.4398, 34.0285, 0.22 ) }
    dend_38 { pt3dadd( -92.7078, 67.3657, 35.4126, 0.22 ) }
    dend_38 { pt3dadd( -97.6137, 76.1108, 37.1847, 0.22 ) }
    dend_38 { pt3dadd( -102.504, 84.849, 39.0302, 0.22 ) }
    dend_38 { pt3dadd( -106.611, 94.1364, 40.048, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 34/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -18.9817, 20.3083, 1.30245, 0.29 ) }
    dend_35 { pt3dadd( -18.375, 21.3025, 2.01303, 0.29 ) }
    dend_35 { pt3dadd( -17.7709, 22.007, 2.56772, 0.29 ) }
    dend_35 { pt3dadd( -17.3133, 22.451, 2.94812, 0.73 ) }
    dend_35 { pt3dadd( -16.8492, 22.8978, 3.30181, 1.17 ) }
    dend_35 { pt3dadd( -16.5199, 23.2284, 3.54758, 1.17 ) }
    dend_35 { pt3dadd( -15.6581, 24.1855, 4.1939, 0.36 ) }
    dend_35 { pt3dadd( -15.0076, 24.9378, 4.61298, 0.58 ) }
    dend_35 { pt3dadd( -14.612, 25.492, 4.90967, 0.36 ) }
    dend_35 { pt3dadd( -14.2334, 26.3659, 5.36524, 0.22 ) }
    dend_35 { pt3dadd( -14.156, 26.9796, 5.66073, 0.22 ) }
    dend_35 { pt3dadd( -14.2432, 27.7771, 5.98261, 0.22 ) }
    dend_35 { pt3dadd( -14.4173, 28.4851, 6.22072, 0.22 ) }
    dend_35 { pt3dadd( -14.7262, 29.6701, 6.59432, 0.66 ) }
    dend_35 { pt3dadd( -15.0148, 30.8955, 7.00162, 0.22 ) }
    dend_35 { pt3dadd( -15.1551, 31.6805, 7.28792, 0.22 ) }
    dend_35 { pt3dadd( -15.2743, 32.6596, 7.68152, 0.22 ) }
    dend_35 { pt3dadd( -15.3438, 33.6213, 8.0927, 0.22 ) }
    dend_35 { pt3dadd( -15.3951, 34.7894, 8.59387, 0.07 ) }
    dend_35 { pt3dadd( -15.3743, 35.677, 8.97036, 0.44 ) }
    dend_35 { pt3dadd( -15.2935, 36.5882, 9.39532, 0.22 ) }
    dend_35 { pt3dadd( -15.1994, 37.4762, 9.83646, 0.07 ) }
    dend_35 { pt3dadd( -15.152, 38.1672, 10.2257, 0.51 ) }
    dend_35 { pt3dadd( -15.1889, 38.8227, 10.6118, 0.15 ) }
    dend_35 { pt3dadd( -14.6925, 47.0432, 16.5644, 0.15 ) }
    dend_35 { pt3dadd( -12.7375, 55.5186, 21.8375, 0.15 ) }
    dend_35 { pt3dadd( -10.1161, 64.697, 25.4354, 0.15 ) }
    dend_35 { pt3dadd( -7.26802, 73.2841, 30.0941, 0.15 ) }
    dend_35 { pt3dadd( -5.4931, 81.7892, 35.3855, 0.15 ) }
    dend_35 { pt3dadd( -5.13016, 90.5804, 40.5145, 0.15 ) }
    dend_35 { pt3dadd( -3.37441, 98.7586, 46.2814, 0.15 ) }
    dend_35 { pt3dadd( -1.49137, 106.876, 52.0887, 0.15 ) }
    dend_35 { pt3dadd( 1.20542, 115.159, 57.3266, 0.15 ) }
    dend_35 { pt3dadd( 2.3448, 124.114, 62.0558, 0.15 ) }
    dend_35 { pt3dadd( 2.89714, 132.773, 67.3789, 0.15 ) }
    dend_35 { pt3dadd( 3.82115, 140.792, 73.5382, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 70/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -18.9817, 20.3083, 1.30245, 0.44 ) }
    dend_34 { pt3dadd( -19.8687, 20.7729, 1.71472, 0.44 ) }
    dend_34 { pt3dadd( -20.559, 21.3099, 2.16592, 0.44 ) }
    dend_34 { pt3dadd( -20.9888, 21.7387, 2.47955, 0.44 ) }
    dend_34 { pt3dadd( -21.5248, 22.3519, 2.87166, 0.44 ) }
    dend_34 { pt3dadd( -22.0561, 22.9728, 3.20351, 0.44 ) }
    dend_34 { pt3dadd( -22.8357, 23.8953, 3.65341, 0.66 ) }
    dend_34 { pt3dadd( -23.309, 24.5291, 3.94666, 0.88 ) }
    dend_34 { pt3dadd( -23.7081, 25.0647, 4.17425, 1.09 ) }
    dend_34 { pt3dadd( -24.1, 25.5479, 4.3514, 1.24 ) }
    dend_34 { pt3dadd( -25.0817, 26.563, 4.6627, 0.36 ) }
    dend_34 { pt3dadd( -25.7585, 27.0933, 4.80158, 0.22 ) }
    dend_34 { pt3dadd( -26.3121, 27.3926, 4.87472, 0.22 ) }
    dend_34 { pt3dadd( -27.1152, 27.6813, 4.94966, 0.22 ) }
    dend_34 { pt3dadd( -27.6886, 27.8293, 4.97252, 0.22 ) }
    dend_34 { pt3dadd( -28.3795, 27.9838, 4.96112, 0.22 ) }
    dend_34 { pt3dadd( -29.2326, 28.1972, 4.88526, 0.66 ) }
    dend_34 { pt3dadd( -29.7802, 28.3845, 4.79553, 0.88 ) }
    dend_34 { pt3dadd( -30.53, 28.8005, 4.66451, 0.44 ) }
    dend_34 { pt3dadd( -31.1007, 29.3403, 4.61255, 0.29 ) }
    dend_34 { pt3dadd( -31.5821, 30.0165, 4.63424, 0.29 ) }
    dend_34 { pt3dadd( -32.0471, 30.8361, 4.73588, 0.66 ) }
    dend_34 { pt3dadd( -32.2548, 31.2501, 4.82213, 0.66 ) }
    dend_34 { pt3dadd( -32.6489, 32.0892, 5.07087, 0.36 ) }
    dend_34 { pt3dadd( -33.1107, 33.1, 5.44876, 0.22 ) }
    dend_34 { pt3dadd( -33.27, 33.4391, 5.59473, 0.22 ) }
    dend_34 { pt3dadd( -33.6277, 34.1136, 5.91419, 0.22 ) }
    dend_34 { pt3dadd( -34.1346, 34.8967, 6.29804, 0.22 ) }
    dend_34 { pt3dadd( -34.6004, 35.4121, 6.57268, 0.22 ) }
    dend_34 { pt3dadd( -35.0821, 35.859, 6.79464, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -35.401, 36.1101, 6.91, 0.15 ) }
    dend_34 { pt3dadd( -35.8919, 36.4494, 7.08284, 0.51 ) }
    dend_34 { pt3dadd( -36.8039, 36.9642, 7.40581, 0.29 ) }
    dend_34 { pt3dadd( -37.9953, 37.2926, 7.80667, 0.07 ) }
    dend_34 { pt3dadd( -46.464, 42.2705, 9.97348, 0.07 ) }
    dend_34 { pt3dadd( -54.9279, 47.3873, 11.829, 0.07 ) }
    dend_34 { pt3dadd( -63.3516, 52.8954, 12.233, 0.07 ) }
    dend_34 { pt3dadd( -72.2919, 57.3388, 13.3645, 0.07 ) }
    dend_34 { pt3dadd( -81.42, 61.5245, 13.3245, 0.07 ) }
    dend_34 { pt3dadd( -90.0629, 66.6264, 12.5997, 0.07 ) }
    dend_34 { pt3dadd( -98.2727, 72.4771, 12.7349, 0.07 ) }
    dend_34 { pt3dadd( -106.61, 77.921, 11.227, 0.07 ) }
    dend_34 { pt3dadd( -113.76, 84.3228, 8.08431, 0.07 ) }
    dend_34 { pt3dadd( -121.105, 90.739, 5.46438, 0.07 ) }
    dend_34 { pt3dadd( -128.15, 97.2924, 2.38322, 0.07 ) }
    dend_34 { pt3dadd( -136.431, 102.886, 1.10593, 0.07 ) }
    dend_34 { pt3dadd( -144.341, 108.531, -1.5588, 0.07 ) }
    dend_34 { pt3dadd( -150.819, 116.13, -3.3145, 0.07 ) }
    dend_34 { pt3dadd( -157.649, 123.341, -5.2757, 0.07 ) }
    dend_34 { pt3dadd( -162.75, 132.143, -5.77948, 0.07 ) }
    dend_34 { pt3dadd( -166.8, 141.415, -7.10405, 0.07 ) }
    dend_34 { pt3dadd( -169.03, 151.327, -8.33591, 0.07 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 22/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -42.3922, 23.4213, -4.36652, 0.51 ) }
    dend_30 { pt3dadd( -43.4643, 23.5446, -3.29697, 0.51 ) }
    dend_30 { pt3dadd( -44.2634, 23.635, -2.62905, 0.51 ) }
    dend_30 { pt3dadd( -45.735, 23.9034, -1.51996, 0.51 ) }
    dend_30 { pt3dadd( -46.3698, 24.0701, -1.06098, 0.51 ) }
    dend_30 { pt3dadd( -47.6878, 24.5319, -0.165777, 0.66 ) }
    dend_30 { pt3dadd( -48.5638, 24.9476, 0.34467, 0.58 ) }
    dend_30 { pt3dadd( -49.602, 25.5454, 0.722515, 0.51 ) }
    dend_30 { pt3dadd( -50.457, 26.1563, 0.91058, 0.51 ) }
    dend_30 { pt3dadd( -51.1914, 26.7657, 0.983976, 0.51 ) }
    dend_30 { pt3dadd( -52.0071, 27.5331, 1.02544, 0.51 ) }
    dend_30 { pt3dadd( -53.6429, 29.1428, 0.962257, 0.51 ) }
    dend_30 { pt3dadd( -54.855, 30.2569, 0.797547, 0.51 ) }
    dend_30 { pt3dadd( -55.452, 30.7307, 0.67275, 0.51 ) }
    dend_30 { pt3dadd( -56.3053, 31.2608, 0.462118, 0.88 ) }
    dend_30 { pt3dadd( -56.6784, 31.427, 0.369483, 1.09 ) }
    dend_30 { pt3dadd( -58.4876, 31.8814, 0.0504006, 0.51 ) }
    dend_30 { pt3dadd( -59.5721, 31.9685, 0.00267753, 0.51 ) }
    dend_30 { pt3dadd( -60.219, 31.9749, 0.0469026, 0.51 ) }
    dend_30 { pt3dadd( -61.0145, 31.9859, 0.121753, 0.51 ) }
    dend_30 { pt3dadd( -62.157, 32.0618, 0.235372, 0.51 ) }
    dend_30 { pt3dadd( -63.4476, 32.2522, 0.358803, 0.66 ) }
    dend_30 { pt3dadd( -65.081, 32.7037, 0.528087, 1.02 ) }
    dend_30 { pt3dadd( -66.6869, 33.406, 0.666184, 0.66 ) }
    dend_30 { pt3dadd( -67.9253, 34.144, 0.709702, 0.51 ) }
    dend_30 { pt3dadd( -69.3843, 35.2578, 0.660531, 0.44 ) }
    dend_30 { pt3dadd( -70.3442, 36.1283, 0.550001, 0.88 ) }
    dend_30 { pt3dadd( -71.3534, 37.1293, 0.361598, 0.66 ) }
    dend_30 { pt3dadd( -72.3811, 38.1925, 0.139317, 0.51 ) }
    dend_30 { pt3dadd( -73.0625, 38.861, -0.0106339, 0.51 ) }
    dend_30 { pt3dadd( -73.8617, 39.5242, -0.183577, 0.36 ) }
    dend_30 { pt3dadd( -74.8006, 40.0879, -0.407529, 0.58 ) }
    dend_30 { pt3dadd( -76.0982, 40.5421, -0.770917, 0.95 ) }
    dend_30 { pt3dadd( -77.0607, 40.7117, -1.06516, 1.17 ) }
    dend_30 { pt3dadd( -78.7063, 40.8422, -1.54636, 0.51 ) }
    dend_30 { pt3dadd( -79.3998, 40.8704, -1.72573, 0.51 ) }
    dend_30 { pt3dadd( -80.5314, 40.9021, -1.97173, 0.44 ) }
    dend_30 { pt3dadd( -81.7385, 40.9758, -2.15813, 0.44 ) }
    dend_30 { pt3dadd( -82.4281, 41.0631, -2.19337, 0.44 ) }
    dend_30 { pt3dadd( -83.5738, 41.3069, -2.1338, 0.44 ) }
    dend_30 { pt3dadd( -85.1583, 41.782, -1.88816, 0.51 ) }
    dend_30 { pt3dadd( -85.9846, 42.0756, -1.70801, 0.51 ) }
    dend_30 { pt3dadd( -87.1153, 42.5366, -1.40968, 1.61 ) }
    dend_30 { pt3dadd( -88.0782, 42.9448, -1.1349, 2.12 ) }
    dend_30 { pt3dadd( -89.0467, 43.352, -0.857083, 2.12 ) }
    dend_30 { pt3dadd( -90.5121, 43.9565, -0.461301, 0.88 ) }
    dend_30 { pt3dadd( -91.3263, 44.292, -0.235619, 0.58 ) }
    dend_30 { pt3dadd( -91.7526, 44.457, -0.126146, 0.73 ) }
    dend_30 { pt3dadd( -93.4384, 45.0442, 0.281448, 0.51 ) }
    dend_30 { pt3dadd( -94.601, 45.4126, 0.55197, 0.8 ) }
    dend_30 { pt3dadd( -95.313, 45.6235, 0.730551, 1.02 ) }
    dend_30 { pt3dadd( -96.2463, 45.8924, 0.978487, 0.73 ) }
    dend_30 { pt3dadd( -97.5715, 46.26, 1.29378, 0.51 ) }
    dend_30 { pt3dadd( -98.9536, 46.6326, 1.58216, 0.44 ) }
    dend_30 { pt3dadd( -99.884, 46.8842, 1.74254, 0.8 ) }
    dend_30 { pt3dadd( -100.971, 47.1822, 1.94394, 1.02 ) }
    dend_30 { pt3dadd( -102.723, 47.6927, 2.32355, 0.51 ) }
    dend_30 { pt3dadd( -103.982, 48.094, 2.66744, 0.66 ) }
    dend_30 { pt3dadd( -104.902, 48.4372, 3.02875, 0.44 ) }
    dend_30 { pt3dadd( -105.651, 48.7833, 3.46401, 0.44 ) }
    dend_30 { pt3dadd( -106.811, 49.5064, 4.49846, 0.22 ) }
    dend_30 { pt3dadd( -107.284, 50.0076, 5.22638, 0.15 ) }
    dend_30 { pt3dadd( -107.661, 50.7567, 6.28306, 0.15 ) }
    dend_30 { pt3dadd( -107.859, 51.4088, 7.09919, 0.15 ) }
    dend_30 { pt3dadd( -107.94, 51.9111, 7.62371, 0.36 ) }
    dend_30 { pt3dadd( -108.008, 52.5004, 8.17807, 0.36 ) }
    dend_30 { pt3dadd( -108.154, 53.446, 8.86321, 0.07 ) }
    dend_30 { pt3dadd( -108.317, 54.0795, 9.24703, 0.07 ) }
    dend_30 { pt3dadd( -108.537, 54.8086, 9.56588, 0.36 ) }
    dend_30 { pt3dadd( -108.812, 55.7813, 9.89893, 0.07 ) }
    dend_30 { pt3dadd( -117.235, 60.2005, 13.1344, 0.07 ) }
    dend_30 { pt3dadd( -125.853, 63.4873, 17.0636, 0.07 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 94/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -42.3922, 23.4213, -4.36652, 0.44 ) }
    dend_27 { pt3dadd( -42.826, 24.1567, -4.2379, 0.44 ) }
    dend_27 { pt3dadd( -43.1763, 24.758, -4.18119, 0.44 ) }
    dend_27 { pt3dadd( -43.7215, 25.8349, -4.17971, 0.44 ) }
    dend_27 { pt3dadd( -44.1276, 26.7738, -4.24904, 0.44 ) }
    dend_27 { pt3dadd( -44.4754, 27.7825, -4.43818, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -44.7039, 28.6148, -4.64939, 0.88 ) }
    dend_27 { pt3dadd( -44.9049, 29.6667, -5.07308, 0.36 ) }
    dend_27 { pt3dadd( -45.0396, 30.6771, -5.62784, 0.36 ) }
    dend_27 { pt3dadd( -45.0925, 31.2648, -6.09321, 0.36 ) }
    dend_27 { pt3dadd( -45.1784, 32.2923, -7.18534, 0.36 ) }
    dend_27 { pt3dadd( -45.233, 32.6666, -7.73822, 0.36 ) }
    dend_27 { pt3dadd( -45.4123, 33.0984, -8.64778, 0.36 ) }
    dend_27 { pt3dadd( -45.64, 33.3265, -9.25614, 0.58 ) }
    dend_27 { pt3dadd( -46.1207, 33.6743, -10.1828, 0.58 ) }
    dend_27 { pt3dadd( -46.4842, 34.0029, -10.8179, 0.29 ) }
    dend_27 { pt3dadd( -46.6658, 34.2289, -11.1284, 0.29 ) }
    dend_27 { pt3dadd( -46.9708, 34.818, -11.6982, 0.29 ) }
    dend_27 { pt3dadd( -47.3826, 36.0633, -12.5705, 0.29 ) }
    dend_27 { pt3dadd( -47.6289, 37.0202, -13.127, 0.29 ) }
    dend_27 { pt3dadd( -47.9014, 38.0863, -13.6739, 1.09 ) }
    dend_27 { pt3dadd( -48.0427, 38.5835, -13.9247, 1.09 ) }
    dend_27 { pt3dadd( -48.3613, 39.4748, -14.3684, 0.22 ) }
    dend_27 { pt3dadd( -48.6277, 40.0065, -14.6301, 0.22 ) }
    dend_27 { pt3dadd( -48.962, 40.4591, -14.8671, 0.22 ) }
    dend_27 { pt3dadd( -49.5797, 41.0873, -15.2339, 0.22 ) }
    dend_27 { pt3dadd( -50.2433, 41.6453, -15.6348, 0.51 ) }
    dend_27 { pt3dadd( -50.8818, 42.1652, -16.0258, 1.02 ) }
    dend_27 { pt3dadd( -51.5773, 42.7596, -16.4796, 1.24 ) }
    dend_27 { pt3dadd( -52.1241, 43.2731, -16.8545, 1.24 ) }
    dend_27 { pt3dadd( -53.3499, 44.6194, -17.7811, 0.22 ) }
    dend_27 { pt3dadd( -54.1536, 45.7852, -18.5223, 0.22 ) }
    dend_27 { pt3dadd( -54.5285, 46.5117, -18.9377, 0.36 ) }
    dend_27 { pt3dadd( -54.8362, 47.2394, -19.3298, 0.66 ) }
    dend_27 { pt3dadd( -55.015, 47.7273, -19.5841, 0.88 ) }
    dend_27 { pt3dadd( -55.245, 48.422, -19.9102, 0.88 ) }
    dend_27 { pt3dadd( -55.6474, 49.6251, -20.3984, 0.15 ) }
    dend_27 { pt3dadd( -55.9474, 50.1488, -20.5757, 0.58 ) }
    dend_27 { pt3dadd( -56.8851, 51.2724, -20.8197, 0.15 ) }
    dend_27 { pt3dadd( -57.8715, 52.1872, -20.9271, 0.66 ) }
    dend_27 { pt3dadd( -58.4113, 52.6225, -20.9465, 1.68 ) }
    dend_27 { pt3dadd( -59.4714, 53.4106, -20.925, 2.41 ) }
    dend_27 { pt3dadd( -61.4228, 54.8113, -20.8302, 0.58 ) }
    dend_27 { pt3dadd( -62.7614, 55.8251, -20.7536, 0.36 ) }
    dend_27 { pt3dadd( -63.4947, 56.4814, -20.6972, 0.15 ) }
    dend_27 { pt3dadd( -63.7542, 56.7458, -20.6834, 0.15 ) }
    dend_27 { pt3dadd( -64.2083, 57.2741, -20.6805, 0.15 ) }
    dend_27 { pt3dadd( -64.7939, 58.1121, -20.7398, 0.73 ) }
    dend_27 { pt3dadd( -65.1206, 58.6912, -20.8216, 0.73 ) }
    dend_27 { pt3dadd( -65.727, 59.7574, -21.0033, 0.29 ) }
    dend_27 { pt3dadd( -66.1011, 60.4027, -21.0792, 0.29 ) }
    dend_27 { pt3dadd( -66.8769, 61.5846, -21.2102, 1.02 ) }
    dend_27 { pt3dadd( -67.3836, 62.2635, -21.3129, 1.17 ) }
    dend_27 { pt3dadd( -68.47, 63.5303, -21.5456, 0.15 ) }
    dend_27 { pt3dadd( -68.9558, 64.0262, -21.6677, 0.36 ) }
    dend_27 { pt3dadd( -69.2888, 64.3186, -21.7905, 0.36 ) }
    dend_27 { pt3dadd( -70.2311, 65.1076, -22.2568, 0.07 ) }
    dend_27 { pt3dadd( -71.0235, 65.7776, -22.8005, 0.66 ) }
    dend_27 { pt3dadd( -71.4775, 66.1591, -23.1553, 1.24 ) }
    dend_27 { pt3dadd( -71.7667, 66.3922, -23.3966, 1.24 ) }
    dend_27 { pt3dadd( -72.5915, 66.9918, -24.0524, 0.15 ) }
    dend_27 { pt3dadd( -72.9227, 67.1983, -24.3033, 0.15 ) }
    dend_27 { pt3dadd( -73.4301, 67.4795, -24.637, 0.15 ) }
    dend_27 { pt3dadd( -73.9889, 67.7324, -24.9209, 0.15 ) }
    dend_27 { pt3dadd( -74.5892, 67.9372, -25.2162, 0.15 ) }
    dend_27 { pt3dadd( -75.5175, 68.1996, -25.6574, 0.66 ) }
    dend_27 { pt3dadd( -76.5444, 68.4552, -26.1209, 1.53 ) }
    dend_27 { pt3dadd( -77.1606, 68.6086, -26.4069, 2.04 ) }
    dend_27 { pt3dadd( -78.4378, 68.9577, -27.032, 1.61 ) }
    dend_27 { pt3dadd( -80.0316, 69.5072, -27.8554, 0.15 ) }
    dend_27 { pt3dadd( -80.368, 69.6882, -28.0278, 0.15 ) }
    dend_27 { pt3dadd( -80.6894, 69.952, -28.1831, 0.15 ) }
    dend_27 { pt3dadd( -81.1509, 70.4775, -28.3964, 0.15 ) }
    dend_27 { pt3dadd( -81.6154, 71.1556, -28.6437, 0.95 ) }
    dend_27 { pt3dadd( -81.9256, 71.7203, -28.8237, 1.09 ) }
    dend_27 { pt3dadd( -82.6619, 73.1862, -29.1923, 0.22 ) }
    dend_27 { pt3dadd( -82.848, 73.5077, -29.2858, 0.22 ) }
    dend_27 { pt3dadd( -83.0347, 73.7568, -29.3719, 0.22 ) }
    dend_27 { pt3dadd( -83.5271, 74.1198, -29.5705, 0.22 ) }
    dend_27 { pt3dadd( -84.1704, 74.1467, -29.8445, 0.44 ) }
    dend_27 { pt3dadd( -84.7245, 74.0159, -30.1151, 0.44 ) }
    dend_27 { pt3dadd( -85.4738, 73.8592, -30.5904, 0.15 ) }
    dend_27 { pt3dadd( -85.7274, 73.8796, -30.7463, 0.15 ) }
    dend_27 { pt3dadd( -86.1244, 73.9914, -30.9733, 0.15 ) }
    dend_27 { pt3dadd( -86.615, 74.2338, -31.2614, 0.44 ) }
    dend_27 { pt3dadd( -87.2395, 74.652, -31.7032, 0.22 ) }
    dend_27 { pt3dadd( -88.1336, 75.4011, -32.4056, 0.73 ) }
    dend_27 { pt3dadd( -88.8045, 76.0581, -32.9469, 1.53 ) }
    dend_27 { pt3dadd( -89.0894, 76.3506, -33.1783, 1.53 ) }
    dend_27 { pt3dadd( -90.0419, 77.3642, -33.9142, 0.07 ) }
    dend_27 { pt3dadd( -90.6817, 78.056, -34.3863, 0.07 ) }
    dend_27 { pt3dadd( -91.0422, 78.4709, -34.6454, 0.88 ) }
    dend_27 { pt3dadd( -91.5567, 79.1256, -34.9605, 1.46 ) }
    dend_27 { pt3dadd( -91.9938, 79.7398, -35.2305, 1.46 ) }
    dend_27 { pt3dadd( -93.0073, 81.2219, -35.7932, 0.15 ) }
    dend_27 { pt3dadd( -93.4885, 81.89, -35.9865, 0.15 ) }
    dend_27 { pt3dadd( -94.0444, 82.6118, -36.1848, 0.66 ) }
    dend_27 { pt3dadd( -94.9141, 83.7351, -36.5089, 0.07 ) }
    dend_27 { pt3dadd( -95.7516, 84.9689, -36.9026, 0.36 ) }
    dend_27 { pt3dadd( -95.9569, 85.3181, -37.0287, 0.36 ) }
    dend_27 { pt3dadd( -96.5749, 86.4559, -37.4801, 0.07 ) }
    dend_27 { pt3dadd( -97.0037, 87.1888, -37.7824, 0.58 ) }
    dend_27 { pt3dadd( -97.4794, 87.9201, -38.1439, 0.88 ) }
    dend_27 { pt3dadd( -98.2494, 88.9793, -38.749, 0.07 ) }
    dend_27 { pt3dadd( -98.6965, 89.5515, -39.0677, 0.73 ) }
    dend_27 { pt3dadd( -98.8927, 89.7806, -39.1959, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_27 { pt3dadd( -99.91, 90.8115, -39.8542, 0.07 ) }
    dend_27 { pt3dadd( -100.837, 91.5383, -40.3679, 1.02 ) }
    dend_27 { pt3dadd( -101.457, 91.9051, -40.6745, 1.61 ) }
    dend_27 { pt3dadd( -101.855, 92.0793, -40.8446, 1.61 ) }
    dend_27 { pt3dadd( -102.87, 92.4369, -41.2427, 0.73 ) }
    dend_27 { pt3dadd( -104.174, 92.8329, -41.8289, 0.07 ) }
    dend_27 { pt3dadd( -104.944, 93.041, -42.207, 0.07 ) }
    dend_27 { pt3dadd( -105.265, 93.1242, -42.358, 0.07 ) }
    dend_27 { pt3dadd( -105.712, 93.2501, -42.5956, 0.58 ) }
    dend_27 { pt3dadd( -106.272, 93.4314, -42.906, 0.8 ) }
    dend_27 { pt3dadd( -107.728, 93.9789, -43.7113, 0.29 ) }
    dend_27 { pt3dadd( -108.503, 94.3086, -44.136, 0.51 ) }
    dend_27 { pt3dadd( -108.945, 94.5135, -44.4069, 0.51 ) }
    dend_27 { pt3dadd( -110.084, 95.0426, -45.1106, 0.07 ) }
    dend_27 { pt3dadd( -110.782, 95.3521, -45.5328, 0.8 ) }
    dend_27 { pt3dadd( -111.262, 95.5365, -45.8273, 0.8 ) }
    dend_27 { pt3dadd( -112.875, 96.0759, -46.8299, 0.07 ) }
    dend_27 { pt3dadd( -114.096, 96.5001, -47.6187, 0.66 ) }
    dend_27 { pt3dadd( -114.763, 96.7484, -48.0668, 1.46 ) }
    dend_27 { pt3dadd( -115.107, 96.8756, -48.3025, 1.46 ) }
    dend_27 { pt3dadd( -116.397, 97.3309, -49.2562, 0.29 ) }
    dend_27 { pt3dadd( -117.158, 97.6028, -49.8223, 0.29 ) }
    dend_27 { pt3dadd( -118.228, 98.0377, -50.612, 0.07 ) }
    dend_27 { pt3dadd( -119.094, 98.435, -51.2478, 0.66 ) }
    dend_27 { pt3dadd( -119.958, 98.9041, -51.9235, 1.82 ) }
    dend_27 { pt3dadd( -121.173, 99.6796, -52.9401, 0.29 ) }
    dend_27 { pt3dadd( -121.838, 100.168, -53.5042, 0.8 ) }
    dend_27 { pt3dadd( -122.977, 100.994, -54.4871, 0.15 ) }
    dend_27 { pt3dadd( -123.355, 101.259, -54.818, 0.36 ) }
    dend_27 { pt3dadd( -124.048, 101.736, -55.3699, 0.73 ) }
    dend_27 { pt3dadd( -124.705, 102.184, -55.8422, 0.07 ) }
    dend_27 { pt3dadd( -125.263, 102.516, -56.1793, 0.88 ) }
    dend_27 { pt3dadd( -126.393, 103.007, -56.7239, 0.07 ) }
    dend_27 { pt3dadd( -127.069, 103.222, -56.9138, 0.29 ) }
    dend_27 { pt3dadd( -128.115, 103.524, -57.1425, 0.07 ) }
    dend_27 { pt3dadd( -128.612, 103.687, -57.2486, 0.66 ) }
    dend_27 { pt3dadd( -129.174, 103.927, -57.3674, 0.95 ) }
    dend_27 { pt3dadd( -130.302, 104.52, -57.6267, 0.07 ) }
    dend_27 { pt3dadd( -131.292, 105.162, -57.8597, 0.07 ) }
    dend_27 { pt3dadd( -132.748, 106.275, -58.2785, 0.07 ) }
    dend_27 { pt3dadd( -133.916, 107.32, -58.6897, 0.07 ) }
    dend_27 { pt3dadd( -134.898, 108.328, -59.1401, 0.44 ) }
    dend_27 { pt3dadd( -135.237, 108.737, -59.3256, 0.29 ) }
    dend_27 { pt3dadd( -135.594, 109.229, -59.5488, 1.09 ) }
    dend_27 { pt3dadd( -136.039, 109.931, -59.845, 1.09 ) }
    dend_27 { pt3dadd( -136.844, 111.393, -60.341, 0.07 ) }
    dend_27 { pt3dadd( -137.77, 113.18, -60.883, 0.07 ) }
    dend_27 { pt3dadd( -138.297, 114.261, -61.2131, 1.17 ) }
    dend_27 { pt3dadd( -138.5, 114.683, -61.3404, 0.95 ) }
    dend_27 { pt3dadd( -139.121, 115.961, -61.705, 0.22 ) }
    dend_27 { pt3dadd( -139.381, 116.487, -61.8339, 0.07 ) }
    dend_27 { pt3dadd( -139.531, 116.782, -61.8733, 0.07 ) }
    dend_27 { pt3dadd( -139.891, 117.43, -61.9007, 0.29 ) }
    dend_27 { pt3dadd( -140.391, 118.246, -61.9259, 0.07 ) }
    dend_27 { pt3dadd( -140.762, 118.838, -62.0065, 0.51 ) }
    dend_27 { pt3dadd( -141.025, 119.262, -62.1108, 0.51 ) }
    dend_27 { pt3dadd( -141.691, 120.422, -62.5733, 0.07 ) }
    dend_27 { pt3dadd( -142.056, 121.095, -62.9545, 0.95 ) }
    dend_27 { pt3dadd( -142.25, 121.437, -63.2226, 1.17 ) }
    dend_27 { pt3dadd( -143.318, 123.17, -64.9418, 0.07 ) }
    dend_27 { pt3dadd( -143.709, 123.727, -65.632, 0.88 ) }
    dend_27 { pt3dadd( -144.497, 124.806, -67.1352, 0.22 ) }
    dend_27 { pt3dadd( -145.158, 125.671, -68.5227, 0.44 ) }
    dend_27 { pt3dadd( -145.804, 126.449, -69.9136, 0.44 ) }
    dend_27 { pt3dadd( -146.106, 126.769, -70.6009, 1.09 ) }
    dend_27 { pt3dadd( -146.406, 126.958, -71.3123, 1.09 ) }
    // Section: dend_20, id: dend_20, parent: dend_16 (entry count 66/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 33.6124, -1.20273, 24.4474, 0.07 ) }
    dend_20 { pt3dadd( 41.5491, 1.69227, 29.8355, 0.07 ) }
    dend_20 { pt3dadd( 48.9873, 5.34338, 35.491, 0.07 ) }
    dend_20 { pt3dadd( 56.9417, 8.70785, 40.5854, 0.07 ) }
    dend_20 { pt3dadd( 65.2143, 12.0814, 45.1387, 0.07 ) }
    dend_20 { pt3dadd( 73.8844, 15.9378, 48.4058, 0.07 ) }
    dend_20 { pt3dadd( 83.4221, 18.3799, 50.2378, 0.07 ) }
    dend_20 { pt3dadd( 92.9358, 19.9815, 52.8927, 0.07 ) }
    dend_20 { pt3dadd( 102.776, 21.495, 53.8892, 0.07 ) }
    dend_20 { pt3dadd( 112.256, 24.6356, 53.0274, 0.07 ) }
    dend_20 { pt3dadd( 121.356, 28.8566, 52.5468, 0.07 ) }
    dend_20 { pt3dadd( 130.051, 33.6103, 50.8478, 0.07 ) }
    dend_20 { pt3dadd( 138.142, 38.5978, 47.5516, 0.07 ) }
    dend_20 { pt3dadd( 146.44, 44.167, 46.2777, 0.07 ) }
    dend_20 { pt3dadd( 153.637, 51.2697, 46.7067, 0.07 ) }
    dend_20 { pt3dadd( 160.797, 58.2072, 48.4167, 0.07 ) }
    dend_20 { pt3dadd( 168.931, 64.1558, 48.7994, 0.07 ) }
    dend_20 { pt3dadd( 177.846, 68.1883, 51.0477, 0.07 ) }
    dend_20 { pt3dadd( 186.359, 73.0999, 53.1844, 0.07 ) }
    dend_20 { pt3dadd( 195.216, 77.1278, 55.6558, 0.07 ) }
    dend_20 { pt3dadd( 204.091, 81.5762, 57.2079, 0.07 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 87/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 33.6124, -1.20273, 24.4474, 0.07 ) }
    dend_17 { pt3dadd( 41.1633, 1.76458, 30.3299, 0.07 ) }
    dend_17 { pt3dadd( 48.3086, 3.50207, 37.1174, 0.07 ) }
    dend_17 { pt3dadd( 56.5467, 7.07723, 41.586, 0.07 ) }
    dend_17 { pt3dadd( 64.8593, 9.72934, 46.506, 0.07 ) }
    dend_17 { pt3dadd( 72.7675, 12.0626, 52.1874, 0.07 ) }
    dend_17 { pt3dadd( 80.2481, 14.558, 58.361, 0.07 ) }
    dend_17 { pt3dadd( 87.0916, 17.7043, 64.975, 0.07 ) }
    dend_17 { pt3dadd( 92.5266, 22.9084, 71.6595, 0.07 ) }
    dend_17 { pt3dadd( 98.4327, 28.035, 77.9921, 0.07 ) }
    dend_17 { pt3dadd( 105.13, 33.0797, 83.5531, 0.07 ) }
    dend_17 { pt3dadd( 111.373, 37.1443, 90.2837, 0.07 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.18422, 0.0855308, 34.2603, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( 9.5277, 3.78117, 43.4904, 0.07 ) }
    dend_15 { pt3dadd( 10.2085, 5.56927, 53.3135, 0.07 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 2/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.18422, 0.0855308, 34.2603, 0.07 ) }
    dend_14 { pt3dadd( 9.04394, 3.7215, 43.5704, 0.07 ) }
    dend_14 { pt3dadd( 9.71429, 6.09909, 53.2745, 0.07 ) }
    dend_14 { pt3dadd( 11.6219, 8.68624, 62.7608, 0.07 ) }
    dend_14 { pt3dadd( 12.389, 10.7223, 72.5315, 0.07 ) }
    dend_14 { pt3dadd( 13.8991, 11.5558, 82.3833, 0.07 ) }
    dend_14 { pt3dadd( 17.509, 10.1946, 91.614, 0.07 ) }
    dend_14 { pt3dadd( 20.533, 9.53387, 101.124, 0.07 ) }
    dend_14 { pt3dadd( 24.0132, 7.08691, 110.19, 0.07 ) }
    dend_14 { pt3dadd( 27.51, 3.52381, 118.89, 0.07 ) }
    dend_14 { pt3dadd( 31.6701, -1.83281, 126.332, 0.07 ) }
    dend_14 { pt3dadd( 37.266, -6.23148, 133.422, 0.07 ) }
    dend_14 { pt3dadd( 43.4579, -11.5667, 139.301, 0.07 ) }
    dend_14 { pt3dadd( 50.5569, -16.2191, 144.687, 0.07 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 16/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.36008, -30.7961, 36.5498, 0.07 ) }
    dend_11 { pt3dadd( -12.0403, -34.1364, 45.616, 0.07 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 18/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.36008, -30.7961, 36.5498, 0.07 ) }
    dend_8 { pt3dadd( -13.0928, -34.3276, 45.1635, 0.07 ) }
    dend_8 { pt3dadd( -17.1381, -36.1067, 54.1425, 0.07 ) }
    dend_8 { pt3dadd( -19.4193, -39.249, 63.3836, 0.07 ) }
    dend_8 { pt3dadd( -20.8419, -41.0212, 73.1297, 0.07 ) }
    dend_8 { pt3dadd( -20.3956, -43.5615, 82.8074, 0.07 ) }
    dend_8 { pt3dadd( -19.6331, -45.9022, 92.5133, 0.07 ) }
    dend_8 { pt3dadd( -19.4562, -47.3942, 102.405, 0.07 ) }
    dend_8 { pt3dadd( -18.7355, -47.3838, 112.379, 0.07 ) }
    dend_8 { pt3dadd( -19.2013, -46.7954, 122.352, 0.07 ) }
    dend_8 { pt3dadd( -19.2796, -47.9799, 132.285, 0.07 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 29/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 2.86281, -22.5877, -0.0877817, 0.88 ) }
    dend_6 { pt3dadd( 2.98847, -23.981, -1.1439, 0.88 ) }
    dend_6 { pt3dadd( 3.07228, -24.6157, -1.67949, 0.88 ) }
    dend_6 { pt3dadd( 3.21877, -25.7291, -2.80787, 0.73 ) }
    dend_6 { pt3dadd( 3.29654, -26.5684, -3.82425, 0.73 ) }
    dend_6 { pt3dadd( 3.31399, -27.2237, -4.69605, 0.73 ) }
    dend_6 { pt3dadd( 3.30918, -27.4165, -4.95272, 0.73 ) }
    dend_6 { pt3dadd( 3.27772, -27.7003, -5.35774, 0.73 ) }
    dend_6 { pt3dadd( 3.29067, -28.3887, -6.18802, 0.73 ) }
    dend_6 { pt3dadd( 3.3886, -28.9623, -6.62778, 0.73 ) }
    dend_6 { pt3dadd( 3.6046, -29.6809, -6.91922, 0.73 ) }
    dend_6 { pt3dadd( 3.95134, -30.6493, -7.07483, 0.73 ) }
    dend_6 { pt3dadd( 4.51032, -32.1385, -7.0526, 0.73 ) }
    dend_6 { pt3dadd( 4.96333, -33.3786, -6.89761, 0.73 ) }
    dend_6 { pt3dadd( 5.31069, -34.3858, -6.68692, 0.73 ) }
    dend_6 { pt3dadd( 5.68664, -35.649, -6.33887, 0.88 ) }
    dend_6 { pt3dadd( 5.91859, -36.6529, -5.99392, 0.66 ) }
    dend_6 { pt3dadd( 6.08314, -37.8667, -5.51256, 0.66 ) }
    dend_6 { pt3dadd( 6.09008, -38.5639, -5.23654, 0.66 ) }
    dend_6 { pt3dadd( 6.0342, -39.4353, -4.95073, 0.51 ) }
    dend_6 { pt3dadd( 5.96403, -40.6723, -4.65807, 0.66 ) }
    dend_6 { pt3dadd( 5.95966, -41.5549, -4.51888, 0.66 ) }
    dend_6 { pt3dadd( 6.00355, -42.0827, -4.46158, 0.66 ) }
    dend_6 { pt3dadd( 6.27415, -43.5041, -4.35408, 0.66 ) }
    dend_6 { pt3dadd( 6.89831, -45.4627, -4.14654, 0.58 ) }
    dend_6 { pt3dadd( 7.50501, -46.7631, -3.97627, 0.58 ) }
    dend_6 { pt3dadd( 8.11182, -47.7517, -3.81997, 0.58 ) }
    dend_6 { pt3dadd( 8.45732, -48.22, -3.73257, 0.88 ) }
    dend_6 { pt3dadd( 8.92232, -48.744, -3.59048, 0.88 ) }
    dend_6 { pt3dadd( 9.88206, -49.5556, -3.22813, 0.88 ) }
    dend_6 { pt3dadd( 10.4805, -49.9306, -2.92913, 0.88 ) }
    dend_6 { pt3dadd( 10.7337, -50.1418, -2.75651, 0.88 ) }
    dend_6 { pt3dadd( 11.0297, -50.6478, -2.48015, 0.88 ) }
    dend_6 { pt3dadd( 11.1645, -51.1546, -2.29097, 0.88 ) }
    dend_6 { pt3dadd( 11.2656, -51.8471, -2.11609, 0.88 ) }
    dend_6 { pt3dadd( 11.3595, -52.8386, -1.92347, 0.88 ) }
    dend_6 { pt3dadd( 11.4935, -54.5612, -1.69415, 0.58 ) }
    dend_6 { pt3dadd( 11.5845, -55.7955, -1.60304, 0.95 ) }
    dend_6 { pt3dadd( 11.6618, -56.8664, -1.53905, 1.09 ) }
    dend_6 { pt3dadd( 11.7762, -58.7386, -1.42037, 0.88 ) }
    dend_6 { pt3dadd( 11.7997, -59.8181, -1.3108, 0.88 ) }
    dend_6 { pt3dadd( 11.7644, -61.1998, -1.12663, 0.88 ) }
    dend_6 { pt3dadd( 11.5858, -63.6499, -0.643342, 0.66 ) }
    dend_6 { pt3dadd( 11.4094, -64.9918, -0.277753, 0.88 ) }
    dend_6 { pt3dadd( 11.2424, -65.8014, 0.0249152, 1.24 ) }
    dend_6 { pt3dadd( 10.6925, -67.4761, 0.883488, 0.66 ) }
    dend_6 { pt3dadd( 10.4084, -68.152, 1.34499, 0.66 ) }
    dend_6 { pt3dadd( 9.95435, -69.1326, 2.19635, 0.51 ) }
    dend_6 { pt3dadd( 9.66871, -69.7753, 2.85911, 0.51 ) }
    dend_6 { pt3dadd( 9.51402, -70.3672, 3.43172, 0.51 ) }
    dend_6 { pt3dadd( 9.69167, -70.7863, 3.69205, 0.51 ) }
    dend_6 { pt3dadd( 10.4709, -71.5082, 3.97222, 0.51 ) }
    dend_6 { pt3dadd( 11.6287, -72.4413, 4.28925, 0.29 ) }
    dend_6 { pt3dadd( 12.8276, -73.3537, 4.53486, 0.51 ) }
    dend_6 { pt3dadd( 14.0981, -74.3865, 4.76255, 0.44 ) }
    dend_6 { pt3dadd( 15.1527, -75.3299, 4.9948, 0.44 ) }
    dend_6 { pt3dadd( 16.2453, -76.3805, 5.35942, 0.66 ) }
    dend_6 { pt3dadd( 16.5912, -76.7421, 5.51273, 0.88 ) }
    dend_6 { pt3dadd( 17.0914, -77.2978, 5.82639, 0.88 ) }
    dend_6 { pt3dadd( 18.0642, -78.4376, 6.63767, 0.36 ) }
    dend_6 { pt3dadd( 18.9589, -79.4749, 7.55262, 0.36 ) }
    dend_6 { pt3dadd( 19.7972, -80.5241, 8.53514, 0.22 ) }
    dend_6 { pt3dadd( 19.9358, -80.6889, 8.69585, 0.22 ) }
    dend_6 { pt3dadd( 20.5859, -81.3679, 9.49504, 0.29 ) }
    dend_6 { pt3dadd( 21.0088, -81.6652, 10.0514, 0.07 ) }
    dend_6 { pt3dadd( 21.6093, -81.4821, 10.6294, 0.15 ) }
    dend_6 { pt3dadd( 25.8233, -90.4661, 12.9572, 0.15 ) }
    dend_6 { pt3dadd( 29.9436, -99.2545, 16.0409, 0.15 ) }
    dend_6 { pt3dadd( 35.117, -106.884, 20.2638, 0.15 ) }
    dend_6 { pt3dadd( 40.8058, -114.773, 23.1632, 0.15 ) }
    dend_6 { pt3dadd( 47.9363, -120.979, 26.6989, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_6 { pt3dadd( 54.9761, -126.957, 30.7517, 0.15 ) }
    dend_6 { pt3dadd( 61.4432, -133.641, 34.7073, 0.15 ) }
    dend_6 { pt3dadd( 67.9981, -139.597, 39.5317, 0.15 ) }
    dend_6 { pt3dadd( 73.4962, -146.18, 44.8722, 0.15 ) }
    dend_6 { pt3dadd( 79.4467, -152.426, 50.1121, 0.15 ) }
    dend_6 { pt3dadd( 84.5075, -159.777, 54.9027, 0.15 ) }
    dend_6 { pt3dadd( 88.1021, -167.278, 60.6933, 0.15 ) }
    dend_6 { pt3dadd( 91.9397, -174.827, 66.2635, 0.15 ) }
    dend_6 { pt3dadd( 93.8082, -183.123, 71.8319, 0.15 ) }
    dend_6 { pt3dadd( 94.4932, -191.632, 77.3648, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 10/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 2.86281, -22.5877, -0.0877817, 1.53 ) }
    dend_3 { pt3dadd( 2.03914, -23.3136, -0.567605, 1.53 ) }
    dend_3 { pt3dadd( 0.832886, -24.3065, -1.21569, 1.24 ) }
    dend_3 { pt3dadd( -0.24817, -25.1963, -1.79652, 1.09 ) }
    dend_3 { pt3dadd( -1.24157, -26.014, -2.33025, 0.88 ) }
    dend_3 { pt3dadd( -2.45101, -27.0095, -2.98005, 1.09 ) }
    dend_3 { pt3dadd( -3.06655, -27.5162, -3.31076, 1.31 ) }
    dend_3 { pt3dadd( -3.86062, -28.1852, -3.7768, 1.68 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 18/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -14.0269, -45.1136, 15.0325, 0.07 ) }
    dend_50 { pt3dadd( -11.0758, -52.864, 20.8734, 0.07 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -14.0269, -45.1136, 15.0325, 0.07 ) }
    dend_47 { pt3dadd( -13.0021, -55.1336, 16.873, 0.07 ) }
    dend_47 { pt3dadd( -11.3964, -65.1404, 18.3254, 0.07 ) }
    dend_47 { pt3dadd( -8.6788, -74.7208, 20.6177, 0.07 ) }
    dend_47 { pt3dadd( -7.94046, -84.5543, 23.3409, 0.07 ) }
    dend_47 { pt3dadd( -6.64294, -94.1811, 26.5201, 0.07 ) }
    dend_47 { pt3dadd( -7.29547, -104.186, 28.595, 0.07 ) }
    dend_47 { pt3dadd( -6.59785, -114.334, 29.8156, 0.07 ) }
    dend_47 { pt3dadd( -4.27936, -124.29, 30.3417, 0.07 ) }
    dend_47 { pt3dadd( -3.32289, -134.481, 30.8288, 0.07 ) }
    dend_47 { pt3dadd( -1.3695, -144.511, 30.1674, 0.07 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 31/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -14.6205, 25.2315, 20.9165, 0.07 ) }
    dend_43 { pt3dadd( -14.6627, 35.399, 22.1824, 0.07 ) }
    dend_43 { pt3dadd( -15.2524, 45.5072, 23.7312, 0.07 ) }
    dend_43 { pt3dadd( -15.0628, 55.5564, 25.6919, 0.07 ) }
    dend_43 { pt3dadd( -15.5564, 65.5995, 27.6294, 0.07 ) }
    dend_43 { pt3dadd( -15.0744, 75.8375, 27.615, 0.07 ) }
    dend_43 { pt3dadd( -13.5601, 85.8574, 29.08, 0.07 ) }
    dend_43 { pt3dadd( -10.6519, 95.2341, 31.883, 0.07 ) }
    dend_43 { pt3dadd( -6.38052, 104.152, 34.3445, 0.07 ) }
    dend_43 { pt3dadd( -1.6321, 113.165, 34.7073, 0.07 ) }
    dend_43 { pt3dadd( 2.0938, 122.648, 33.9874, 0.07 ) }
    dend_43 { pt3dadd( 5.33035, 132.162, 32.1497, 0.07 ) }
    dend_43 { pt3dadd( 9.48304, 141.373, 30.7357, 0.07 ) }
    dend_43 { pt3dadd( 15.451, 149.503, 29.5231, 0.07 ) }
    dend_43 { pt3dadd( 22.7357, 156.376, 28.1186, 0.07 ) }
    dend_43 { pt3dadd( 30.7232, 162.232, 26.2328, 0.07 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 47/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -14.6205, 25.2315, 20.9165, 0.07 ) }
    dend_42 { pt3dadd( -13.3835, 35.004, 23.6679, 0.07 ) }
    dend_42 { pt3dadd( -13.5327, 44.8009, 26.6044, 0.07 ) }
    dend_42 { pt3dadd( -13.1883, 54.1107, 30.774, 0.07 ) }
    dend_42 { pt3dadd( -13.0332, 63.6879, 34.334, 0.07 ) }
    dend_42 { pt3dadd( -12.6237, 73.6166, 36.784, 0.07 ) }
    dend_42 { pt3dadd( -13.9906, 83.3488, 39.609, 0.07 ) }
    dend_42 { pt3dadd( -13.5067, 93.0771, 42.7213, 0.07 ) }
    dend_42 { pt3dadd( -11.9247, 102.874, 45.198, 0.07 ) }
    dend_42 { pt3dadd( -9.74976, 112.779, 46.5724, 0.07 ) }
    dend_42 { pt3dadd( -9.12495, 123.009, 46.4867, 0.07 ) }
    dend_42 { pt3dadd( -7.24429, 132.928, 48.1614, 0.07 ) }
    dend_42 { pt3dadd( -4.96826, 142.868, 49.0442, 0.07 ) }
    dend_42 { pt3dadd( -2.10788, 152.322, 51.643, 0.07 ) }
    dend_42 { pt3dadd( 2.43223, 161.321, 53.1593, 0.07 ) }
    dend_42 { pt3dadd( 6.11855, 170.818, 53.9179, 0.07 ) }
    dend_42 { pt3dadd( 10.6551, 179.784, 55.6209, 0.07 ) }
    dend_42 { pt3dadd( 13.5071, 189.602, 55.9584, 0.07 ) }
    dend_42 { pt3dadd( 14.6629, 199.67, 54.4815, 0.07 ) }
    dend_42 { pt3dadd( 13.9578, 209.893, 54.3265, 0.07 ) }
    dend_42 { pt3dadd( 11.7153, 219.863, 53.7188, 0.07 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 68/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -106.611, 94.1364, 40.048, 0.07 ) }
    dend_40 { pt3dadd( -113.644, 101.149, 41.9786, 0.07 ) }
    dend_40 { pt3dadd( -119.714, 109.13, 43.566, 0.07 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -106.611, 94.1364, 40.048, 0.07 ) }
    dend_39 { pt3dadd( -113.833, 101.005, 41.7588, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 73/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -125.853, 63.4873, 17.0636, 0.07 ) }
    dend_32 { pt3dadd( -134.53, 68.003, 19.3656, 0.07 ) }
    dend_32 { pt3dadd( -143.394, 71.5854, 22.4017, 0.07 ) }
    dend_32 { pt3dadd( -152.419, 73.3717, 26.3397, 0.07 ) }
    dend_32 { pt3dadd( -162.122, 73.592, 28.7494, 0.07 ) }
    dend_32 { pt3dadd( -171.617, 72.7139, 31.7696, 0.07 ) }
    dend_32 { pt3dadd( -180.795, 71.0103, 35.3749, 0.07 ) }
    dend_32 { pt3dadd( -190.364, 71.2591, 38.2699, 0.07 ) }
    dend_32 { pt3dadd( -199.947, 72.6206, 40.7987, 0.07 ) }
    dend_32 { pt3dadd( -209.311, 73.2533, 44.253, 0.07 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -125.853, 63.4873, 17.0636, 0.07 ) }
    dend_31 { pt3dadd( -134.775, 67.5108, 19.2996, 0.07 ) }
    dend_31 { pt3dadd( -143.324, 71.1981, 23.037, 0.07 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 86/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -146.406, 126.958, -71.3123, 0.36 ) }
    dend_29 { pt3dadd( -146.496, 126.888, -71.9759, 0.36 ) }
    dend_29 { pt3dadd( -146.719, 126.737, -72.9255, 0.36 ) }
    dend_29 { pt3dadd( -146.915, 126.663, -73.6601, 0.58 ) }
    dend_29 { pt3dadd( -147.282, 126.581, -75.1292, 0.58 ) }
    dend_29 { pt3dadd( -147.586, 126.487, -76.4843, 0.36 ) }
    dend_29 { pt3dadd( -147.944, 126.373, -78.0429, 0.36 ) }
    dend_29 { pt3dadd( -148.457, 126.265, -79.9298, 0.36 ) }
    dend_29 { pt3dadd( -148.841, 126.257, -81.1592, 0.51 ) }
    dend_29 { pt3dadd( -149.151, 126.336, -82.052, 0.36 ) }
    dend_29 { pt3dadd( -149.551, 126.585, -83.01, 0.58 ) }
    dend_29 { pt3dadd( -150.25, 127.196, -84.285, 0.36 ) }
    dend_29 { pt3dadd( -150.826, 127.763, -85.1405, 0.88 ) }
    dend_29 { pt3dadd( -151.716, 128.673, -86.2966, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_29 { pt3dadd( -152.245, 129.182, -86.8827, 0.73 ) }
    dend_29 { pt3dadd( -153.044, 129.943, -87.6446, 0.07 ) }
    dend_29 { pt3dadd( -153.568, 130.473, -88.0963, 0.29 ) }
    dend_29 { pt3dadd( -154.885, 131.821, -89.1363, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 4/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -146.406, 126.958, -71.3123, 0.07 ) }
    dend_28 { pt3dadd( -146.204, 125.574, -72.6487, 0.07 ) }
    dend_28 { pt3dadd( -145.97, 124.555, -73.5441, 0.73 ) }
    dend_28 { pt3dadd( -145.623, 123.313, -74.5986, 0.15 ) }
    dend_28 { pt3dadd( -145.438, 122.68, -75.1103, 0.15 ) }
    dend_28 { pt3dadd( -145.197, 121.817, -75.7889, 0.36 ) }
    dend_28 { pt3dadd( -144.933, 120.836, -76.5624, 0.07 ) }
    dend_28 { pt3dadd( -144.607, 119.662, -77.4471, 0.8 ) }
    dend_28 { pt3dadd( -144.329, 118.72, -78.1394, 0.15 ) }
    dend_28 { pt3dadd( -144.221, 118.312, -78.4557, 0.44 ) }
    dend_28 { pt3dadd( -143.874, 116.628, -79.7937, 0.15 ) }
    dend_28 { pt3dadd( -143.705, 115.556, -80.6373, 0.44 ) }
    dend_28 { pt3dadd( -143.54, 114.147, -81.7078, 0.15 ) }
    dend_28 { pt3dadd( -143.431, 112.765, -82.6841, 0.29 ) }
    dend_28 { pt3dadd( -143.358, 111.587, -83.5013, 0.07 ) }
    dend_28 { pt3dadd( -143.309, 110.717, -84.0971, 0.07 ) }
    dend_28 { pt3dadd( -143.29, 110.191, -84.4243, 0.29 ) }
    dend_28 { pt3dadd( -143.28, 108.81, -85.1731, 0.07 ) }
    dend_28 { pt3dadd( -143.31, 107.906, -85.5772, 0.51 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 23/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 111.373, 37.1443, 90.2837, 0.07 ) }
    dend_19 { pt3dadd( 118.462, 40.6319, 96.4622, 0.07 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 25/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 111.373, 37.1443, 90.2837, 0.07 ) }
    dend_18 { pt3dadd( 118.603, 40.7172, 96.2477, 0.07 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 27/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -19.2796, -47.9799, 132.285, 0.07 ) }
    dend_10 { pt3dadd( -24.0757, -47.0803, 141.015, 0.07 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 29/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -19.2796, -47.9799, 132.285, 0.07 ) }
    dend_9 { pt3dadd( -17.1423, -51.5705, 141.404, 0.07 ) }
    dend_9 { pt3dadd( -16.9629, -53.5272, 151.218, 0.07 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -3.86062, -28.1852, -3.7768, 0.22 ) }
    dend_5 { pt3dadd( -4.71751, -29.7986, -4.17461, 0.22 ) }
    dend_5 { pt3dadd( -5.25693, -30.8487, -4.36751, 0.88 ) }
    dend_5 { pt3dadd( -5.87584, -32.1076, -4.42117, 0.44 ) }
    dend_5 { pt3dadd( -6.2103, -32.7992, -4.40022, 0.44 ) }
    dend_5 { pt3dadd( -6.69227, -33.8924, -4.27481, 0.44 ) }
    dend_5 { pt3dadd( -7.22591, -35.1403, -4.05566, 0.22 ) }
    dend_5 { pt3dadd( -7.59387, -36.1281, -3.80766, 0.22 ) }
    dend_5 { pt3dadd( -8.14481, -37.593, -3.36355, 1.09 ) }
    dend_5 { pt3dadd( -8.31789, -38.0682, -3.18243, 1.31 ) }
    dend_5 { pt3dadd( -8.76527, -39.5231, -2.59019, 0.22 ) }
    dend_5 { pt3dadd( -8.95949, -40.3332, -2.25881, 0.22 ) }
    dend_5 { pt3dadd( -9.14783, -41.4732, -1.83352, 0.22 ) }
    dend_5 { pt3dadd( -9.2166, -42.1641, -1.63787, 0.44 ) }
    dend_5 { pt3dadd( -9.26178, -43.2542, -1.41757, 0.22 ) }
    dend_5 { pt3dadd( -9.24046, -44.1943, -1.26133, 0.22 ) }
    dend_5 { pt3dadd( -9.18064, -44.9449, -1.17347, 0.22 ) }
    dend_5 { pt3dadd( -8.97948, -46.5447, -1.02777, 0.15 ) }
    dend_5 { pt3dadd( -8.79679, -47.7476, -0.925287, 0.15 ) }
    dend_5 { pt3dadd( -8.62273, -48.8891, -0.825604, 0.15 ) }
    dend_5 { pt3dadd( -8.46228, -50.097, -0.720155, 0.15 ) }
    dend_5 { pt3dadd( -8.26007, -51.6815, -0.59257, 0.15 ) }
    dend_5 { pt3dadd( -8.08855, -52.8139, -0.524729, 0.22 ) }
    dend_5 { pt3dadd( -9.60204, -62.5835, 2.09507, 0.22 ) }
    dend_5 { pt3dadd( -12.2976, -72.1593, 4.43069, 0.22 ) }
    dend_5 { pt3dadd( -15.1457, -81.8751, 5.85941, 0.22 ) }
    dend_5 { pt3dadd( -18.0272, -91.6203, 7.00127, 0.22 ) }
    dend_5 { pt3dadd( -22.0285, -100.966, 6.07388, 0.22 ) }
    dend_5 { pt3dadd( -24.7598, -110.521, 3.69838, 0.22 ) }
    dend_5 { pt3dadd( -26.3605, -120.37, 1.43721, 0.22 ) }
    dend_5 { pt3dadd( -27.0571, -130.354, -0.715187, 0.22 ) }
    dend_5 { pt3dadd( -26.4244, -140.001, -4.03513, 0.22 ) }
    dend_5 { pt3dadd( -26.6015, -149.953, -6.42125, 0.22 ) }
    dend_5 { pt3dadd( -28.2468, -159.818, -8.58153, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 66/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.86062, -28.1852, -3.7768, 0.73 ) }
    dend_4 { pt3dadd( -3.63999, -30.2929, -5.51824, 0.73 ) }
    dend_4 { pt3dadd( -3.40794, -31.3194, -6.29315, 0.73 ) }
    dend_4 { pt3dadd( -3.24568, -32.12, -6.84832, 0.73 ) }
    dend_4 { pt3dadd( -3.11394, -32.98, -7.40507, 0.73 ) }
    dend_4 { pt3dadd( -3.03854, -33.7046, -7.85615, 0.73 ) }
    dend_4 { pt3dadd( -2.99706, -34.3616, -8.26698, 0.73 ) }
    dend_4 { pt3dadd( -2.95249, -35.2324, -8.6822, 0.73 ) }
    dend_4 { pt3dadd( -2.93573, -36.6245, -9.37526, 0.73 ) }
    dend_4 { pt3dadd( -2.97946, -37.139, -9.76343, 0.73 ) }
    dend_4 { pt3dadd( -3.03052, -37.4118, -10.1101, 0.73 ) }
    dend_4 { pt3dadd( -3.08225, -37.5528, -10.5331, 0.73 ) }
    dend_4 { pt3dadd( -3.15136, -37.583, -11.0654, 0.73 ) }
    dend_4 { pt3dadd( -3.22931, -37.4867, -11.5285, 0.73 ) }
    dend_4 { pt3dadd( -3.28471, -37.1526, -12.5765, 0.73 ) }
    dend_4 { pt3dadd( -3.2779, -36.8234, -13.5564, 0.73 ) }
    dend_4 { pt3dadd( -3.23585, -36.5379, -14.4469, 0.58 ) }
    dend_4 { pt3dadd( -3.20236, -36.299, -15.2587, 0.58 ) }
    dend_4 { pt3dadd( -3.25067, -36.0188, -16.3275, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 85/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -1.3695, -144.511, 30.1674, 0.07 ) }
    dend_49 { pt3dadd( -0.139331, -154.572, 31.6325, 0.07 ) }
    dend_49 { pt3dadd( 2.70719, -164.257, 33.2493, 0.07 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 88/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -1.3695, -144.511, 30.1674, 0.07 ) }
    dend_48 { pt3dadd( -0.0318675, -154.534, 31.7738, 0.07 ) }
    dend_48 { pt3dadd( 2.70818, -164.355, 32.6097, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_52, dend_51, dend_24, dend_21, dend_0, dend_57, dend_56, dend_54, dend_53, dend_36, dend_25, dend_23, dend_22, dend_12, dend_1, dend_59, dend_58, dend_44, dend_37, dend_33, dend_26, dend_16, dend_13, dend_7, dend_2, dend_46, dend_45, dend_41, dend_38, dend_35, dend_34, dend_30, dend_27, dend_20, dend_17, dend_15, dend_14, dend_11, dend_8, dend_6, dend_3, dend_50, dend_47, dend_43, dend_42, dend_40, dend_39, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_10, dend_9, dend_5, dend_4, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_21 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_57 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_56 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_54 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_53 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_16 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_7 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_45 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_38 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_35 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_30 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_17 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_47 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_43 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_42 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_32 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_5 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_12 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_24 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_25 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_52 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_37 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_4 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_26 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_44 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_15 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_46 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_50 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_10 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_19 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_18 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_39 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_59 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_40 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_49 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_48 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_29 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_12, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_18, dend_10, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_49, dend_49, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_51 nseg = 9
    dend_21 nseg = 3
    dend_57 nseg = 7
    dend_56 nseg = 11
    dend_54 nseg = 3
    dend_53 nseg = 13
    dend_23 nseg = 9
    dend_22 nseg = 11
    dend_16 nseg = 3
    dend_13 nseg = 3
    dend_7 nseg = 3
    dend_45 nseg = 7
    dend_38 nseg = 7
    dend_35 nseg = 7
    dend_34 nseg = 11
    dend_30 nseg = 5
    dend_27 nseg = 9
    dend_20 nseg = 11
    dend_17 nseg = 5
    dend_14 nseg = 7
    dend_8 nseg = 5
    dend_6 nseg = 11
    dend_47 nseg = 5
    dend_43 nseg = 7
    dend_42 nseg = 11
    dend_32 nseg = 5
    dend_5 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L5_NBC_6c09f2f610_0_0


