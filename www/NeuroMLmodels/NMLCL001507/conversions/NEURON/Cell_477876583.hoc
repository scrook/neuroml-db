// Cell: Cell_477876583
/*
{
  "id" : "Cell_477876583",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "491.947, 577.491, 22.96, 11.6138", "497.754, 577.491, 22.96, 11.6138", "503.561, 577.491, 22.96, 11.6138" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "497.754, 577.491, 22.96, 1.0", "503.595, 591.307, 22.96, 1.0", "509.437, 605.123, 22.96, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "494.417, 572.686, 23.6043, 1.9448", "494.171, 571.607, 23.8659, 1.9448", "493.612, 570.615, 24.0893, 1.9448", "492.796, 569.813, 24.2847, 1.9448", "491.943, 569.091, 24.799, 1.9448" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "499.991, 573.596, 21.144, 0.2288", "499.912, 572.478, 19.6941, 0.2828" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "502.986, 575.717, 23.0541, 0.9152", "504.126, 575.678, 23.0914, 0.7892", "505.133, 575.136, 23.1456, 0.7896", "506.014, 574.407, 23.2207, 0.6154", "506.995, 573.818, 23.3186, 0.6834", "508.02, 573.316, 23.4476, 0.5138", "509.086, 572.986, 23.6682, 0.4914", "510.129, 572.827, 24.016, 0.4054", "511.203, 572.472, 24.338, 0.4604", "512.221, 571.978, 24.522, 0.4384", "513.232, 571.5, 24.5791, 0.5392", "514.223, 570.944, 24.622, 0.496", "514.658, 569.902, 24.6711, 0.3922", "514.365, 568.835, 24.7785, 0.3134", "514.71, 567.858, 25.0437, 0.2998", "515.544, 567.151, 25.3933, 0.3212", "516.036, 566.12, 25.6636, 0.3616", "516.76, 565.247, 25.8485, 0.4332" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "493.311, 580.236, 24.9357, 0.4576", "492.394, 580.338, 25.7337, 1.0998", "491.348, 580.674, 27.44, 1.1406" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "509.437, 605.123, 22.96, 1.0", "515.278, 618.939, 22.96, 1.0", "521.119, 632.755, 22.96, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "491.943, 569.091, 24.799, 1.9448", "491.127, 568.961, 24.4481, 0.2288", "490.056, 568.68, 24.2717, 0.4078", "488.984, 568.371, 24.0059, 0.3998", "487.905, 568.018, 23.7229, 0.4118", "486.866, 567.589, 23.4052, 0.5326", "485.803, 567.18, 23.1191, 0.5066", "484.678, 567.161, 22.8829, 0.5278", "483.676, 567.662, 22.6887, 0.6868", "482.685, 568.229, 22.5088, 0.8602", "481.749, 568.843, 22.2616, 0.8546", "480.927, 569.607, 21.9694, 0.8326", "480.121, 570.408, 21.6678, 0.616", "479.317, 571.175, 21.3185, 0.613", "478.429, 571.885, 21.0143, 0.502", "477.449, 572.474, 20.7825, 0.5778", "476.558, 573.185, 20.6143, 0.4962", "475.868, 574.081, 20.4525, 0.5086", "474.966, 574.712, 20.2515, 0.6518", "473.94, 575.203, 20.1177, 0.7918", "473.173, 575.985, 20.1173, 0.745", "472.541, 576.93, 20.1412, 0.5452", "471.952, 577.91, 20.1443, 0.4938", "471.115, 578.679, 20.0909, 0.4516", "470.027, 578.863, 19.6294, 0.5726" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "491.943, 569.091, 24.799, 1.9448", "491.239, 567.959, 25.0036, 1.3728", "490.561, 567.039, 25.0744, 1.3728", "489.91, 566.097, 25.1288, 1.3728", "489.394, 565.076, 25.168, 1.3728", "488.891, 564.049, 25.1931, 1.3728", "488.49, 562.978, 25.2059, 1.3728", "488.025, 561.933, 25.2134, 1.3728" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "499.912, 572.478, 19.6941, 0.2828", "499.242, 571.401, 18.8191, 0.6864", "498.747, 570.374, 18.51, 0.4444", "499.412, 569.712, 17.9998, 0.326", "500.399, 569.865, 17.3171, 0.2758", "501.387, 570.017, 16.528, 0.2766", "502.474, 569.901, 15.8269, 0.2782", "503.599, 569.69, 15.2618, 0.2814", "504.723, 569.48, 14.8086, 0.287", "505.847, 569.269, 14.4488, 0.2988", "506.972, 569.058, 14.1404, 0.3142", "507.639, 568.387, 13.7347, 0.3734", "508.042, 567.451, 13.1733, 0.334", "508.415, 566.415, 12.5832, 0.3002", "508.815, 565.396, 12.0025, 0.2748", "509.753, 564.749, 11.5225, 0.275", "510.691, 564.103, 11.1444, 0.2752", "511.646, 563.481, 10.8795, 0.276", "512.563, 562.901, 10.7269, 0.2768", "511.727, 562.119, 10.644, 0.2796", "510.639, 562.038, 10.6049, 0.2796", "509.997, 561.102, 10.5874, 0.305", "509.447, 560.102, 10.5826, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "499.912, 572.478, 19.6941, 0.2828", "500.286, 572.272, 19.3327, 0.2896", "500.793, 571.322, 19.2044, 0.3038", "501.644, 571.314, 19.2528, 0.3236", "502.737, 571.314, 19.343, 0.3908", "503.6, 571.081, 19.5921, 0.3672", "504.542, 570.698, 19.6239, 0.3564", "505.556, 570.215, 19.6028, 0.4056", "506.447, 569.6, 19.6311, 0.3888", "507.004, 568.914, 19.4992, 0.4268", "507.671, 568.319, 19.4889, 0.387", "508.599, 567.969, 19.4771, 0.3926", "509.213, 567.248, 19.3953, 0.4734", "509.091, 566.453, 19.324, 0.512", "509.812, 565.841, 19.202, 0.6662", "510.227, 564.893, 19.154, 0.779", "511.084, 564.522, 18.9154, 0.6838", "511.885, 564.195, 18.6169, 0.6128", "512.583, 563.767, 18.2858, 0.4278", "513.427, 563.425, 17.9785, 0.3426", "513.554, 562.348, 17.7431, 0.3056", "514.435, 561.76, 17.5391, 0.3346", "515.346, 561.58, 17.2462, 0.375", "515.922, 562.394, 16.9998, 0.5132", "516.745, 562.382, 16.8162, 0.4636", "517.295, 562.226, 16.5255, 0.4826", "518.196, 561.831, 16.0889, 0.4364", "518.742, 560.904, 15.7576, 0.517", "519.068, 559.835, 15.4369, 0.5448", "520.026, 559.454, 15.0814, 0.7308", "520.893, 558.979, 14.6707, 0.8808", "520.678, 557.86, 14.377, 0.961", "520.843, 556.749, 14.1801, 0.6972", "521.636, 555.973, 14.0628, 0.6082", "522.67, 555.548, 13.9362, 0.5604", "523.399, 554.68, 13.8214, 0.8172", "523.95, 553.687, 13.7078, 0.7606", "524.749, 552.877, 13.5565, 0.7262", "525.658, 552.21, 13.3338, 0.7758", "526.605, 551.614, 13.0521, 0.777", "527.421, 550.836, 12.7708, 0.5334", "528.042, 549.905, 12.4828, 0.3592", "528.708, 548.985, 12.3091, 0.2902", "529.449, 548.146, 12.1806, 0.3034", "530.181, 547.414, 11.928, 0.3278", "531.103, 546.889, 11.6878, 0.373", "532.054, 546.357, 11.6187, 0.4604", "532.811, 545.614, 11.7254, 0.6018", "533.692, 544.944, 11.8385, 0.9662", "534.6, 544.321, 11.8283, 1.144", "535.455, 543.584, 11.7535, 1.145", "536.484, 543.1, 11.6424, 0.912", "537.502, 542.693, 11.4144, 0.7032", "538.455, 542.201, 11.1016, 0.6082", "539.205, 541.397, 11.0015, 0.6146", "539.697, 540.387, 11.0552, 0.655", "539.865, 539.316, 11.2613, 0.821", "539.938, 538.222, 11.5456, 0.6866", "540.398, 537.178, 11.7478, 0.5234", "541.167, 536.391, 11.7422, 0.4904", "542.008, 535.633, 11.6014, 0.4944", "542.929, 535.015, 11.3357, 0.6404", "543.84, 534.33, 11.0578, 0.6994", "544.903, 533.907, 10.8304, 0.6908", "545.938, 533.427, 10.6726, 0.5608", "546.825, 532.708, 10.5921, 0.4174", "547.748, 532.073, 10.537, 0.3624", "548.287, 531.179, 10.3475, 0.3796", "548.972, 530.292, 10.2262, 0.5216", "549.699, 529.459, 10.0326, 0.4788", "550.529, 528.708, 9.8876, 0.5118", "551.585, 528.275, 9.7973, 0.4868", "552.491, 527.61, 9.7655, 0.6296", "553.171, 526.71, 9.8193, 0.6626", "553.92, 525.892, 9.9473, 0.7048", "554.715, 525.071, 10.0465, 0.8742", "555.486, 524.255, 10.0505, 0.7448", "556.288, 523.547, 9.9004, 0.8294", "557.317, 523.049, 9.7577, 0.7822", "558.347, 522.589, 9.5966, 0.7696", "559.264, 521.977, 9.4144, 0.613", "560.319, 521.659, 9.4041, 0.7408", "561.387, 521.544, 9.5446, 0.5488", "562.386, 521.084, 9.6435, 0.4444", "563.164, 520.253, 9.7108, 0.4042", "564.107, 519.716, 9.7881, 0.4988", "565.229, 519.795, 9.902, 0.7704", "566.325, 519.924, 10.0519, 0.8044", "567.358, 519.564, 10.1603, 1.0884", "568.255, 518.861, 10.2338, 1.2308", "569.201, 518.226, 10.2856, 1.298", "570.174, 517.662, 10.2472, 1.2326", "571.15, 517.111, 10.1415, 1.1208", "572.134, 516.531, 10.0653, 0.867", "572.99, 515.801, 10.0601, 0.6234", "573.846, 515.169, 10.1752, 0.4406", "574.94, 514.996, 10.3492, 0.4004", "576.05, 514.805, 10.5407, 0.4766", "577.062, 514.317, 10.7679, 0.571", "577.988, 513.698, 11.0361, 0.5176", "579.008, 513.271, 11.2928, 0.3848", "580.122, 513.014, 11.4735, 0.3", "581.252, 513.002, 11.5924, 0.2746", "582.354, 512.846, 11.66, 0.2748", "583.423, 512.438, 11.6813, 0.2748", "584.527, 512.167, 11.6656, 0.275", "585.571, 511.747, 11.628, 0.2758", "586.642, 511.378, 11.5782, 0.2766", "587.719, 511.005, 11.5145, 0.2782", "588.516, 510.254, 11.4013, 0.2814", "589.239, 509.399, 11.2225, 0.287", "590.078, 508.636, 11.0576, 0.2986", "590.855, 507.803, 10.9461, 0.314", "591.631, 506.988, 10.9347, 0.373", "592.352, 506.111, 10.9676, 0.333", "592.34, 505.067, 10.9204, 0.2982", "592.353, 503.935, 10.8701, 0.2712", "592.173, 502.812, 10.8383, 0.2684", "591.716, 501.787, 10.8687, 0.2626", "591.275, 500.742, 10.8476, 0.2542", "590.575, 499.859, 10.8676, 0.2288", "589.503, 499.928, 10.64, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "516.76, 565.247, 25.8485, 0.4332", "516.981, 563.943, 24.5601, 0.9152", "517.017, 562.841, 24.0634, 0.7732", "517.244, 561.728, 23.6888, 0.8898", "517.625, 560.656, 23.4496, 0.8558", "518.216, 559.718, 23.3687, 0.6368", "519.073, 558.995, 23.3718, 0.529", "519.939, 558.283, 23.3545, 0.4834", "520.509, 557.357, 23.3156, 0.5654", "520.634, 556.224, 23.2987, 0.8234", "520.634, 555.08, 23.308, 1.0174", "520.637, 553.936, 23.3535, 0.9262", "520.652, 552.793, 23.4616, 0.887", "520.74, 551.689, 23.7007, 1.098", "521.117, 550.624, 23.9716, 1.2582", "521.563, 549.58, 24.2501, 1.3024", "522.02, 548.565, 24.5674, 1.2378", "522.771, 547.715, 24.8205, 1.1438", "523.666, 547.004, 24.993, 0.8456", "524.525, 546.249, 25.0942, 0.893", "525.485, 545.628, 25.1453, 0.8136", "526.449, 545.014, 25.1606, 0.5638", "527.233, 544.184, 25.153, 0.3684", "527.671, 543.132, 25.1394, 0.3072", "528.176, 542.107, 25.11, 0.3346", "528.812, 541.181, 25.017, 0.3902", "529.516, 540.316, 25.0396, 0.4672", "530.378, 539.565, 25.0788, 0.7358", "531.332, 538.935, 25.1158, 0.6246", "532.299, 538.324, 25.1497, 0.6308", "533.225, 537.653, 25.1797, 0.5254", "533.563, 536.563, 25.2026, 0.4408", "534.068, 535.537, 25.212, 0.4308" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "516.76, 565.247, 25.8485, 0.4332", "517.972, 564.539, 26.1922, 0.5816", "519.047, 564.145, 26.3139, 0.7816", "520.131, 563.781, 26.4253, 0.8296", "521.233, 563.505, 26.5444, 0.6562", "522.325, 563.648, 26.7335, 0.464", "523.338, 564.15, 26.896, 0.3956", "524.447, 564.144, 26.9618, 0.4714", "525.384, 563.555, 26.9226, 0.5454", "526.219, 562.775, 26.8947, 0.547", "527.064, 562.009, 26.9088, 0.7512", "527.985, 561.367, 27.0078, 0.6112", "528.975, 560.853, 27.1981, 0.5798", "529.955, 560.303, 27.4401, 0.5578", "530.768, 559.573, 27.6348, 0.5706", "531.432, 559.256, 27.5588, 0.7908", "532.104, 558.508, 27.5356, 0.7036", "533.16, 558.574, 27.6034, 0.6598", "533.78, 557.964, 27.8229, 0.4624", "534.416, 557.663, 28.1212, 0.4322", "535.107, 557.94, 28.2803, 0.3486", "535.973, 558.52, 28.5429, 0.327", "536.775, 559.283, 28.7787, 0.3264", "537.758, 559.3, 28.8361, 0.3604", "538.359, 558.572, 28.9461, 0.4848", "538.72, 557.642, 29.0987, 0.4166", "539.306, 556.795, 29.2356, 0.3682", "540.327, 556.556, 29.328, 0.3572", "541.323, 556.437, 29.5336, 0.4118", "542.037, 556.675, 29.8892, 0.6068", "542.605, 557.5, 30.0989, 0.5132", "543.55, 558.036, 30.3439, 0.4898", "544.313, 557.597, 30.3789, 0.403", "545.264, 557.471, 30.5113, 0.4548", "545.633, 558.283, 30.7796, 0.4318", "545.926, 559.105, 31.2959, 0.51", "546.644, 559.051, 31.89, 0.5258", "547.389, 558.757, 32.5634, 0.724", "548.379, 558.616, 33.089, 0.7294", "548.995, 559.073, 33.3544, 0.6672", "549.983, 559.447, 33.6076, 0.4444", "550.25, 560.339, 33.9685, 0.3258", "551.065, 560.522, 34.9068, 0.2752" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "491.348, 580.674, 27.44, 1.1406", "490.223, 580.931, 27.4389, 0.9858", "489.174, 581.388, 27.4385, 0.673", "488.052, 581.61, 27.4366, 0.4476" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "491.348, 580.674, 27.44, 1.1406", "491.071, 580.963, 27.6891, 0.2288", "490.165, 581.661, 27.7851, 1.143", "489.261, 582.362, 27.9117, 1.0546", "488.483, 583.193, 28.0935, 0.947", "488.634, 584.049, 28.4841, 0.7016", "489.448, 584.735, 28.7451, 0.4702", "489.34, 585.763, 29.0646, 0.327", "488.65, 586.655, 29.3208, 0.2774", "488.005, 587.557, 29.4778, 0.2796", "487.388, 588.513, 29.6618, 0.284", "486.586, 589.218, 29.9631, 0.292", "485.66, 589.672, 30.471, 0.3064", "485.08, 590.448, 31.0808, 0.3356", "485.175, 591.541, 31.7061, 0.3782", "485.649, 592.574, 32.2815, 0.5126", "486.191, 593.576, 32.816, 0.4932", "486.332, 594.563, 33.4309, 0.3872", "485.743, 595.359, 34.1407, 0.3044", "485.025, 595.981, 34.9521, 0.2826", "485.135, 596.839, 35.8123, 0.2892", "485.265, 597.928, 36.5691, 0.3028", "485.682, 598.716, 37.3394, 0.3214", "486.519, 599.352, 38.1102, 0.3872", "486.773, 600.419, 38.8142, 0.3588", "486.863, 601.538, 39.3218, 0.3482", "487.673, 602.124, 39.6567, 0.3538", "488.29, 601.87, 40.2979, 0.4722", "488.858, 601.126, 41.0609, 0.3934", "489.831, 601.197, 41.8928, 0.3254", "490.212, 601.976, 42.8666, 0.2746", "490.122, 602.999, 43.9113, 0.2746", "490.404, 604.019, 44.938, 0.2746", "491.223, 604.427, 45.978, 0.2746", "492.262, 604.713, 46.9706, 0.2746", "493.366, 604.925, 47.9046, 0.2746", "494.24, 604.984, 48.991, 0.2746", "494.865, 605.295, 50.3034, 0.2746", "494.516, 605.583, 51.7143, 0.2746", "493.598, 605.842, 53.1485, 0.2746", "492.681, 606.102, 54.5793, 0.2746", "491.762, 606.36, 55.9692, 0.2746", "490.833, 606.164, 57.2132, 0.2746", "489.894, 605.57, 58.2747, 0.2746", "488.956, 604.976, 59.2116, 0.2746", "488.017, 604.381, 60.0656, 0.2746", "487.027, 603.958, 60.9059, 0.2746", "486.027, 603.571, 61.7585, 0.2746", "485.027, 603.184, 62.6346, 0.2746", "484.026, 602.764, 63.5197, 0.2746", "483.026, 602.321, 64.3989, 0.2744", "482.027, 601.877, 65.2728, 0.2744", "481.027, 601.433, 66.1424, 0.2742", "480.104, 601.333, 66.9847, 0.2736", "479.297, 602.015, 67.8135, 0.2728", "478.369, 602.446, 68.7607, 0.2712", "477.441, 602.878, 69.7782, 0.2684", "476.514, 603.309, 70.8212, 0.2626", "475.587, 603.74, 71.8511, 0.2542", "474.659, 604.172, 72.8347, 0.2288", "473.732, 604.603, 74.7844, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "470.027, 578.863, 19.6294, 0.5726", "469.485, 578.874, 18.3782, 0.2288", "468.357, 578.811, 17.893, 0.4724", "467.229, 578.747, 17.3943, 0.3936", "466.667, 579.248, 16.9185, 0.326", "467.129, 580.239, 16.4928, 0.2758", "467.85, 581.128, 16.0989, 0.2768", "467.526, 581.456, 15.6415, 0.279", "466.453, 581.381, 15.0411, 0.2826", "465.47, 581.058, 14.3065, 0.2894", "464.518, 580.646, 13.4704, 0.302", "463.566, 580.233, 12.582, 0.326", "462.614, 579.82, 11.6934, 0.367", "461.527, 579.589, 10.9388, 0.4608", "460.415, 579.39, 10.3333, 0.548", "459.303, 579.192, 9.858, 0.4434", "458.624, 579.83, 9.5323, 0.3984", "458.155, 580.873, 9.3387, 0.2796", "457.686, 581.916, 9.1717, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "470.027, 578.863, 19.6294, 0.5726", "469.054, 578.859, 19.6859, 0.5164", "467.94, 578.814, 19.6405, 0.6304", "466.888, 579.213, 19.6466, 0.4678", "466.316, 579.971, 19.9072, 0.3802", "465.362, 580.58, 20.1992, 0.324", "464.351, 581.109, 20.4476, 0.3918", "463.22, 581.285, 20.6582, 0.3672", "462.083, 581.269, 20.8366, 0.364", "461.014, 580.89, 20.9852, 0.3826", "459.889, 581.018, 21.0941, 0.5264", "458.892, 581.563, 21.2071, 0.4906", "457.947, 582.121, 21.4129, 0.5206", "456.882, 582.473, 21.6052, 0.5646", "455.889, 582.416, 21.7441, 0.4744", "454.885, 582.41, 21.7567, 0.4554", "453.808, 582.597, 21.8372, 0.3862", "452.699, 582.645, 21.9093, 0.4224", "451.977, 583.212, 21.8718, 0.3786", "451.642, 583.052, 22.1353, 0.3784", "450.788, 583.337, 22.4316, 0.4416", "450.079, 583.37, 22.4259, 0.4804", "449.573, 583.896, 22.1143, 0.473", "448.593, 584.267, 21.8172, 0.3878", "448.12, 584.86, 21.6631, 0.3476", "447.422, 585.324, 21.6024, 0.3886", "446.667, 585.288, 21.5622, 0.3616", "445.905, 585.614, 21.0714, 0.3532" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "488.025, 561.933, 25.2134, 1.3728", "487.398, 560.912, 25.5571, 0.8276", "487.109, 559.826, 25.7278, 0.626", "486.653, 558.8, 25.961, 0.5372", "485.97, 557.884, 26.1667, 0.5914", "485.283, 556.969, 26.3398, 0.7716", "484.571, 556.073, 26.4827, 0.95", "483.784, 555.244, 26.6043, 0.891", "483.068, 554.367, 26.7514, 0.614", "482.307, 553.522, 27.1146, 0.456" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "488.025, 561.933, 25.2134, 1.3728", "488.142, 560.457, 24.897, 0.6864", "488.141, 559.313, 24.7773, 0.6864", "488.121, 558.201, 24.5532, 0.6864", "487.996, 557.074, 24.2982, 0.6864", "487.454, 556.074, 24.0716, 0.6864", "486.994, 555.028, 23.861, 0.6864", "487.129, 553.937, 23.5926, 0.6864", "487.849, 553.059, 23.3566, 0.6864", "488.626, 552.22, 23.1962, 0.6864", "489.276, 551.279, 23.0895, 0.6864", "489.912, 550.327, 23.0241, 0.6864", "490.421, 549.303, 23.0093, 0.6864" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "534.068, 535.537, 25.212, 0.4308", "533.995, 535.226, 25.7812, 0.2288", "533.447, 534.334, 25.9154, 0.3144", "533.687, 533.452, 26.18, 0.3738", "534.248, 532.799, 26.5783, 0.3348", "534.412, 532.745, 27.3163, 0.3018", "535.303, 532.23, 27.9276, 0.2778", "536.263, 531.8, 28.4004, 0.2808", "537.024, 531.826, 29.008, 0.286", "537.814, 531.189, 29.3132, 0.2954", "538.214, 530.243, 29.673, 0.3144", "538.857, 529.77, 29.8332, 0.343", "539.51, 529.577, 30.1809, 0.428", "540.238, 530.015, 30.6396, 0.4302", "541.227, 530.331, 31.031, 0.503", "541.873, 529.903, 31.2802, 0.5326", "542.49, 529.463, 31.5423, 0.639", "543.199, 529.014, 31.8892, 1.0472", "544.011, 528.401, 32.0048, 1.008", "544.735, 527.872, 32.1507, 0.9092", "545.67, 527.429, 32.2689, 0.8536", "546.146, 526.484, 32.2944, 0.589", "546.924, 526.15, 32.5119, 0.4258", "547.873, 526.035, 32.8065, 0.362", "548.777, 525.859, 32.8692, 0.4576", "549.661, 525.868, 32.8059, 0.5114", "550.344, 525.383, 32.9546, 0.5256", "551.168, 524.761, 33.1153, 0.5096", "551.982, 524.312, 33.2618, 0.4548", "552.887, 523.718, 33.3791, 0.4762", "553.615, 522.927, 33.5096, 0.6066", "554.223, 522.095, 33.8288, 0.8632", "554.865, 521.466, 34.2331, 0.8094", "555.65, 521.128, 34.6324, 0.764", "556.412, 520.613, 35.0826, 0.876", "557.189, 520.106, 35.3259, 0.815", "557.946, 520.013, 35.6182, 0.635", "558.902, 520.399, 35.9204, 0.6254", "559.59, 519.938, 36.0385, 0.6344", "560.1, 519.268, 36.0858, 0.5198", "560.229, 518.931, 36.5282, 0.4908", "560.237, 519.33, 37.1272, 0.4612", "561.0, 519.937, 37.8577, 0.5162", "561.942, 520.147, 38.6602, 0.7716", "562.601, 520.607, 39.6068, 0.7298", "563.412, 521.206, 40.3749, 0.6352", "564.548, 521.24, 40.9802, 0.7744", "565.491, 521.318, 41.7113, 0.6484", "565.462, 520.335, 42.4726, 0.6772", "565.55, 520.52, 43.4076, 0.6008", "565.502, 519.653, 44.2459, 0.6322", "565.711, 519.05, 44.9876, 0.5364", "565.692, 518.237, 45.684, 0.4192", "566.521, 517.535, 46.2218, 0.3658", "566.738, 516.5, 46.6085, 0.3872", "566.509, 515.864, 46.5802, 0.5292", "566.838, 514.855, 46.604, 0.5242", "567.435, 514.132, 46.6505, 0.445", "567.855, 513.21, 46.5198, 0.4084", "567.903, 512.224, 46.524, 0.4914", "568.12, 511.323, 46.4853, 0.5988", "568.216, 510.31, 46.4274, 0.5676", "568.483, 509.602, 46.1527, 0.483", "569.254, 509.423, 45.08, 0.4576" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "534.068, 535.537, 25.212, 0.4308", "534.497, 535.235, 25.5037, 0.388", "535.621, 535.049, 25.6003, 0.4256", "536.593, 534.508, 26.0554, 0.3846" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "551.065, 560.522, 34.9068, 0.2752", "550.869, 560.841, 35.9304, 0.2288", "550.384, 561.648, 36.433, 0.388", "549.829, 562.419, 37.0499, 0.538", "550.264, 563.198, 37.5603, 0.5054", "550.071, 563.705, 38.3337, 0.5796", "551.082, 563.966, 39.0312, 0.5226", "551.567, 564.673, 39.8031, 0.4436", "551.99, 565.642, 40.4751, 0.3988", "552.298, 566.471, 41.0018, 0.5084", "551.942, 567.488, 41.4646, 0.4626", "552.078, 568.22, 41.7844, 0.4432", "552.688, 568.953, 42.1431, 0.5456", "553.564, 569.435, 42.429, 0.5208", "554.039, 570.258, 42.6112, 0.6024", "554.497, 571.15, 42.7638, 0.5912", "554.885, 571.852, 43.0634, 0.4446", "555.077, 572.746, 43.23, 0.3264", "555.81, 573.258, 43.4347, 0.2766", "556.58, 573.709, 43.797, 0.2784", "556.937, 574.623, 44.2098, 0.2818", "557.916, 574.974, 44.7521, 0.2878", "558.706, 575.546, 45.3944, 0.3002", "559.503, 575.701, 46.1611, 0.3166", "560.11, 575.5, 46.8972, 0.3784", "561.026, 575.609, 47.4286, 0.343", "561.709, 576.118, 47.9279, 0.3172", "562.576, 576.24, 48.5139, 0.3056", "563.135, 576.463, 49.2352, 0.3342", "564.022, 576.805, 49.7871, 0.376", "565.164, 576.805, 50.2723, 0.5084", "566.155, 576.969, 50.864, 0.4858", "566.939, 577.643, 51.4018, 0.373", "567.804, 577.72, 51.9663, 0.2796", "568.777, 577.314, 52.4034, 0.2288", "569.483, 576.919, 53.48, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "551.065, 560.522, 34.9068, 0.2752", "551.376, 560.289, 36.1175, 0.2758", "551.728, 559.916, 36.7573, 0.2766", "551.294, 559.209, 37.5203, 0.2784", "551.552, 558.416, 38.162, 0.2818", "550.926, 557.605, 38.701, 0.2882", "550.512, 556.718, 39.1863, 0.3", "550.666, 556.531, 39.9386, 0.3224", "550.71, 555.444, 40.5964, 0.3588", "550.622, 554.48, 41.0446, 0.4524", "551.292, 553.653, 41.4994, 0.5", "552.351, 553.362, 41.9684, 0.5116", "552.983, 552.781, 42.3828, 0.4478", "554.084, 552.628, 42.726, 0.515", "554.952, 552.287, 43.2345, 0.4248", "555.982, 551.98, 43.6243, 0.3862", "557.009, 551.98, 43.9569, 0.3766", "557.82, 552.329, 44.3806, 0.5158", "558.821, 552.797, 44.7406, 0.4694", "559.775, 552.487, 45.1573, 0.4882", "560.395, 551.757, 45.4065, 0.473", "561.347, 551.52, 45.6002, 0.4592", "562.295, 551.321, 45.8534, 0.361", "563.192, 551.331, 45.8466, 0.3034", "564.285, 551.455, 45.8402, 0.2808", "565.227, 551.421, 45.7321, 0.2862", "566.245, 551.283, 45.8111, 0.2958", "566.807, 550.741, 45.8987, 0.315", "567.424, 550.416, 46.0079, 0.3454", "567.866, 550.035, 46.2949, 0.426", "568.857, 549.758, 46.4736, 0.458", "569.816, 549.806, 46.7121, 0.4008", "570.405, 550.009, 46.9924, 0.4026", "570.668, 549.153, 47.3864, 0.341", "571.649, 548.651, 47.6552, 0.3128", "572.494, 547.934, 47.8005, 0.2994", "573.413, 547.291, 47.985, 0.3156", "574.343, 547.308, 48.2306, 0.3762", "574.977, 547.045, 48.2628, 0.3388", "575.705, 546.381, 48.209, 0.3094", "576.553, 546.146, 48.3983, 0.292", "577.476, 545.618, 48.5654, 0.3064", "578.468, 545.31, 48.6548, 0.3354", "579.447, 545.129, 48.9023, 0.3778", "580.295, 544.825, 49.0302, 0.5118", "581.223, 544.335, 49.0512, 0.4922", "582.121, 544.086, 49.1798, 0.3846", "583.098, 544.251, 49.3623, 0.3", "584.213, 544.091, 49.4942, 0.2746", "585.34, 543.906, 49.5676, 0.2746", "586.228, 543.314, 49.6101, 0.2746", "587.143, 542.828, 49.6042, 0.2746", "588.286, 542.803, 49.5323, 0.2746", "589.394, 542.607, 49.4063, 0.2746", "590.223, 541.841, 49.2285, 0.2746", "591.252, 541.406, 48.9927, 0.2746", "592.385, 541.341, 48.697, 0.2746", "593.05, 540.797, 48.2079, 0.2746", "593.411, 540.547, 47.3668, 0.2746", "594.33, 540.426, 46.478, 0.2746", "595.469, 540.426, 45.7279, 0.2746", "596.613, 540.426, 45.1352, 0.2746", "597.754, 540.4, 44.6869, 0.2746", "598.102, 539.854, 44.2092, 0.2746", "598.749, 539.722, 43.7388, 0.2744", "599.829, 539.434, 43.3681, 0.2744", "600.951, 539.325, 43.0856, 0.2742", "602.033, 539.056, 42.8803, 0.2736", "603.031, 538.559, 42.7414, 0.2728", "604.058, 538.154, 42.6294, 0.2712", "605.199, 538.138, 42.5384, 0.2684", "606.343, 538.138, 42.4581, 0.2626", "606.781, 537.346, 42.3847, 0.2542", "607.486, 536.728, 42.2038, 0.2288", "608.494, 536.765, 42.0, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "488.052, 581.61, 27.4366, 0.4476", "486.948, 581.609, 27.2695, 0.3652", "485.805, 581.599, 27.2061, 0.4158", "484.699, 581.541, 27.0497, 0.438", "483.612, 581.195, 26.9085, 0.3688", "482.654, 580.603, 26.899, 0.3178" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "488.052, 581.61, 27.4366, 0.4476", "487.104, 581.618, 29.1416, 0.6198", "486.663, 580.716, 29.8262, 0.5116", "486.408, 581.055, 30.6692, 0.612", "486.428, 582.076, 31.334, 0.4808", "486.321, 582.868, 31.7153, 0.4054", "486.085, 583.582, 32.158, 0.3652", "485.643, 584.44, 32.3694, 0.4938", "485.169, 585.355, 32.3672, 0.4336", "484.87, 586.14, 32.4775, 0.3962", "485.216, 586.538, 32.9291, 0.426", "485.388, 587.618, 33.283, 0.458", "485.042, 588.564, 33.649, 0.4008", "485.366, 589.284, 34.0718, 0.4026", "486.062, 589.971, 34.2891, 0.3412", "486.305, 590.627, 34.3809, 0.3132", "486.123, 591.395, 34.2098, 0.3", "486.387, 592.499, 34.0558, 0.3164", "486.79, 593.472, 33.9951, 0.378", "486.832, 594.477, 33.8654, 0.3422", "485.897, 594.891, 33.8542, 0.3156", "485.327, 595.526, 33.8862, 0.303", "484.942, 596.347, 33.712, 0.329", "484.484, 596.933, 33.6722, 0.3652", "484.297, 597.839, 33.6045, 0.4936", "484.225, 598.78, 33.5608, 0.4336", "484.783, 599.562, 33.4662, 0.396", "484.904, 600.486, 33.1332, 0.4254" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "445.905, 585.614, 21.0714, 0.3532", "445.359, 586.191, 21.76, 0.3626", "445.196, 587.188, 22.0474, 0.489", "444.787, 588.021, 22.3063, 0.4252", "444.81, 588.97, 22.5462, 0.3792", "444.596, 589.857, 22.7664, 0.4006", "444.457, 590.723, 22.8745, 0.3792", "444.622, 591.589, 22.9327, 0.4094", "444.356, 592.568, 22.9176, 0.3532", "443.872, 593.469, 22.9114, 0.3366", "443.355, 594.314, 22.8157, 0.3384", "442.749, 595.137, 22.8446, 0.413", "442.108, 595.32, 23.14, 0.4328", "441.469, 595.761, 23.5885, 0.3596", "441.098, 596.431, 24.1866, 0.3006", "440.478, 596.787, 24.8742, 0.2758", "439.688, 596.476, 25.3646, 0.2766", "438.877, 597.051, 25.655, 0.2784", "439.486, 597.409, 25.9945, 0.2818", "440.394, 597.809, 26.3094, 0.2878", "441.002, 598.609, 26.6765, 0.3002", "441.507, 599.571, 27.0896, 0.3166", "441.47, 600.595, 27.5356, 0.3782", "441.036, 601.549, 28.0008, 0.3428", "440.958, 602.496, 28.2808, 0.3164", "440.327, 603.222, 28.6387, 0.3062", "440.371, 604.27, 28.861, 0.3278", "439.483, 604.731, 29.0718, 0.3984", "439.278, 605.51, 29.3404, 0.3824", "439.557, 606.05, 29.8466, 0.3794", "438.842, 606.311, 30.4326, 0.4728", "438.043, 606.112, 30.9002, 0.3938", "437.349, 606.418, 31.2564, 0.3264", "436.387, 606.518, 31.4885, 0.2766", "435.367, 606.965, 31.6711, 0.2782", "434.426, 607.244, 31.9782, 0.2816", "434.227, 608.204, 32.1647, 0.2874", "434.137, 609.29, 32.4243, 0.2992", "434.125, 610.114, 32.8191, 0.3152", "433.54, 611.016, 33.3099, 0.3754", "433.074, 611.78, 33.742, 0.3374", "433.118, 612.764, 34.1379, 0.3068", "432.52, 613.433, 34.6548, 0.2872", "431.638, 613.928, 35.2268, 0.2988", "431.016, 614.698, 35.7848, 0.3144", "430.716, 615.686, 36.2667, 0.3738", "430.602, 616.808, 36.6195, 0.3346", "430.487, 617.884, 36.7545, 0.3012", "430.699, 618.871, 36.7427, 0.2768", "431.265, 619.629, 36.8934, 0.2786", "431.447, 620.518, 36.885, 0.2822", "431.974, 621.214, 36.7133, 0.2888", "432.443, 621.993, 36.6974, 0.3004", "432.903, 621.935, 37.0944, 0.3238", "433.347, 622.532, 37.4422, 0.3602", "433.441, 623.016, 37.4819, 0.4604", "433.472, 623.626, 37.6466, 0.4862", "433.674, 624.601, 37.6589, 0.6254", "433.932, 625.221, 37.8638, 0.6704", "434.145, 625.635, 37.9716, 0.6422", "434.305, 626.295, 38.2298, 0.445", "434.036, 626.711, 38.1758, 0.3274", "434.262, 627.211, 37.8848, 0.2782", "434.034, 627.61, 37.9448, 0.2814", "434.722, 627.959, 38.2295, 0.2872", "435.178, 628.642, 38.3872, 0.2976", "435.292, 629.454, 38.7246, 0.3194", "435.684, 630.203, 39.0107, 0.3476", "436.372, 631.006, 39.2655, 0.4604", "436.74, 631.748, 39.6301, 0.373", "437.661, 632.214, 40.1069, 0.2796", "438.038, 631.717, 41.72, 0.2288" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "445.905, 585.614, 21.0714, 0.3532", "445.587, 585.654, 21.6517, 0.2288", "444.537, 586.061, 21.8703, 0.3446", "443.539, 586.403, 22.1682, 0.4304", "442.668, 587.021, 22.5315, 0.4364", "441.773, 587.66, 22.843, 0.5062", "441.082, 588.439, 22.9776, 0.5784", "440.366, 589.123, 23.1026, 0.5308", "439.45, 589.591, 23.1367, 0.4104", "438.614, 589.495, 23.0854, 0.3428", "437.666, 589.656, 23.0822, 0.3792", "436.714, 589.539, 23.0915, 0.3446", "435.9, 589.474, 23.2364, 0.3196", "434.917, 589.072, 23.2925, 0.3124", "434.081, 588.716, 23.2739, 0.3388", "433.176, 588.384, 23.3186, 0.4204", "432.121, 588.208, 23.45, 0.4168", "431.193, 587.769, 23.4476, 0.4736", "430.169, 587.562, 23.4707, 0.5", "429.138, 587.613, 23.634, 0.4746", "428.275, 587.628, 23.8787, 0.5592", "427.148, 587.668, 24.0295, 0.5338", "426.19, 587.362, 24.0307, 0.4566", "425.348, 586.786, 24.1977, 0.4598", "424.284, 586.414, 24.2954, 0.4436", "423.37, 586.358, 24.1376, 0.5196", "422.352, 586.166, 24.1398, 0.6032", "421.234, 586.07, 24.1758, 0.5788", "420.168, 586.434, 24.1926, 0.488", "419.049, 586.533, 24.2224, 0.542", "418.031, 586.753, 24.182, 0.4786", "417.125, 586.674, 24.3963, 0.469", "416.448, 586.479, 24.6104, 0.612", "415.587, 586.232, 24.9391, 0.554", "414.681, 585.98, 25.0576, 0.4148", "413.662, 585.941, 25.2874, 0.3088", "412.6, 585.736, 25.4868, 0.2906", "411.553, 585.616, 25.566, 0.3054", "410.673, 585.27, 25.6525, 0.3268", "410.053, 584.744, 25.6066, 0.3966", "409.018, 584.828, 25.6663, 0.3788", "408.293, 584.416, 25.8988, 0.373", "407.39, 584.903, 26.0543, 0.4604", "406.621, 584.706, 26.1294, 0.373", "405.876, 585.247, 26.0282, 0.2796", "404.976, 585.27, 25.76, 0.2288" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "482.307, 553.522, 27.1146, 0.456", "482.251, 553.151, 27.3204, 0.4976", "481.96, 552.051, 27.5433, 0.5516" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "482.307, 553.522, 27.1146, 0.456", "481.229, 553.784, 26.5429, 0.2288", "480.178, 554.144, 26.3253, 0.324", "479.086, 554.364, 26.2478, 0.362", "477.969, 554.552, 26.2093, 0.458", "476.835, 554.434, 26.1916, 0.5102", "475.721, 554.352, 26.196, 0.532", "474.601, 554.561, 26.2205, 0.4802", "473.48, 554.623, 26.1755, 0.6008", "472.377, 554.682, 26.0581, 0.4606", "471.293, 554.952, 26.0164, 0.3656", "470.301, 555.5, 26.0131, 0.3032", "469.31, 556.062, 25.9915, 0.3224", "468.243, 556.366, 25.914, 0.389", "467.131, 556.351, 25.7981, 0.3624", "466.013, 556.127, 25.7177, 0.3532", "464.909, 555.83, 25.6784, 0.3722", "463.796, 555.603, 25.7118, 0.4614", "462.678, 555.492, 25.8475, 0.5926", "461.556, 555.378, 26.2867, 1.0016" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "490.421, 549.303, 23.0093, 0.6864", "491.087, 548.566, 22.9377, 0.3004", "491.163, 547.619, 23.0051, 0.3236", "491.577, 546.656, 23.1192, 0.3608", "491.594, 545.595, 23.1799, 0.4556", "491.828, 544.811, 23.2942, 0.5078", "492.378, 544.364, 23.172, 0.5184", "492.789, 543.584, 23.1412, 0.4974", "493.113, 542.575, 23.1706, 0.4278", "493.522, 542.001, 23.2932, 0.4476", "494.107, 541.353, 23.3763, 0.4494", "494.429, 540.37, 23.3579, 0.3914", "494.439, 539.406, 23.4282, 0.354", "495.106, 538.639, 23.4382, 0.4014", "496.009, 538.247, 23.4373, 0.3804", "496.811, 537.65, 23.4617, 0.4116", "497.41, 536.779, 23.6094, 0.3586", "497.791, 536.121, 23.8828, 0.3404", "498.124, 535.188, 24.1525, 0.3752", "497.97, 534.354, 24.4999, 0.337", "497.744, 533.617, 24.5814, 0.306", "497.872, 532.554, 24.4904, 0.2856", "498.06, 531.462, 24.3902, 0.295", "498.433, 530.562, 24.4561, 0.312", "498.784, 529.77, 24.4763, 0.3462", "499.005, 528.695, 24.3823, 0.3968", "499.404, 527.75, 24.3714, 0.5524", "499.756, 526.726, 24.2904, 0.5406", "499.814, 525.631, 24.2772, 0.6028", "500.053, 524.588, 24.3055, 0.7684", "500.35, 523.583, 24.3825, 0.6042", "501.226, 522.928, 24.389, 0.5266", "501.832, 522.008, 24.4808, 0.4262", "502.329, 521.34, 24.5287, 0.4862", "503.273, 520.854, 24.6456, 0.547", "504.02, 520.057, 24.6706, 0.447", "504.467, 519.139, 24.7671, 0.38", "504.844, 518.098, 24.7979, 0.3654", "505.221, 517.255, 24.9433, 0.4942", "505.837, 516.856, 25.2737, 0.4338", "505.991, 516.173, 25.4769, 0.401", "506.791, 515.944, 25.5269, 0.4128", "507.88, 515.75, 25.5816, 0.5414", "508.872, 515.944, 25.7707, 0.7186", "509.951, 516.095, 26.0032, 0.6566", "510.963, 515.959, 26.2216, 0.6092", "511.661, 515.347, 26.4424, 0.4212", "512.295, 514.609, 26.5779, 0.3304", "512.593, 513.656, 26.799, 0.2838", "512.817, 512.868, 26.9602, 0.2914", "512.936, 511.699, 26.9525, 0.3054", "513.218, 510.645, 27.0567, 0.3342", "513.447, 509.772, 27.2026, 0.3744", "513.968, 509.057, 27.3472, 0.5118", "514.435, 508.196, 27.4685, 0.461", "514.916, 507.458, 27.7208, 0.4766", "515.555, 506.696, 28.093, 0.4324", "516.238, 505.332, 28.3217, 0.475", "517.011, 504.496, 28.4558, 0.6356", "517.869, 503.742, 28.539, 0.767", "518.68, 502.949, 28.5762, 0.674", "518.956, 501.943, 28.5715, 0.5324", "518.494, 500.927, 28.5502, 0.5786", "517.931, 499.945, 28.5412, 0.5392", "517.817, 498.848, 28.5328, 0.6158", "518.048, 497.728, 28.5163, 0.7188", "518.264, 496.607, 28.4953, 0.8678", "518.331, 495.479, 28.506, 0.6626", "518.2, 494.362, 28.5015, 0.5604", "517.955, 493.333, 28.3352, 0.6224", "517.738, 492.268, 28.1103, 0.8878", "517.552, 491.154, 27.9793, 0.8788", "517.647, 490.043, 27.901, 0.7772", "517.665, 488.932, 27.7758, 0.7732", "517.483, 487.813, 27.6625, 0.7862", "517.361, 486.677, 27.601, 0.9396", "517.125, 485.563, 27.5642, 1.053", "517.054, 484.432, 27.5389, 0.9512", "517.287, 483.321, 27.5401, 0.9038", "517.412, 482.193, 27.5975, 0.5874", "517.458, 481.07, 27.6472, 0.423", "517.602, 479.974, 27.6314, 0.3554", "517.923, 478.92, 27.7017, 0.4532", "518.111, 477.899, 27.9443, 0.4662", "517.781, 476.866, 28.264, 0.6216", "517.194, 475.907, 28.5916, 0.501", "516.863, 474.871, 28.8747, 0.4304", "517.078, 473.765, 29.0324, 0.4732", "517.364, 472.673, 29.057, 0.3946", "517.375, 471.549, 28.9607, 0.328", "517.32, 470.43, 28.7703, 0.2798", "517.229, 469.325, 28.5312, 0.2842", "517.049, 468.227, 28.301, 0.2922", "516.967, 467.124, 28.2414, 0.3082", "516.926, 466.015, 28.3234, 0.3316", "516.714, 464.901, 28.4533, 0.407", "516.366, 463.824, 28.6387, 0.3908", "516.034, 462.757, 28.7834, 0.4308", "515.738, 461.667, 28.8467, 0.394", "515.587, 460.54, 28.8831, 0.408", "515.407, 459.436, 28.9646, 0.491", "515.188, 458.331, 29.0864, 0.5976", "514.984, 457.211, 29.1637, 0.5676", "514.791, 456.095, 29.2552, 0.4722", "514.992, 455.031, 29.2732, 0.4894", "515.425, 453.983, 29.2527, 0.493", "515.979, 453.018, 29.3168, 0.6378", "516.724, 452.171, 29.4126, 0.6938", "517.572, 451.406, 29.4902, 0.6852", "518.558, 450.894, 29.5, 0.5266", "519.504, 450.313, 29.5918, 0.47", "520.171, 449.417, 29.748, 0.5844", "520.862, 448.512, 29.925, 0.6466", "521.332, 447.744, 30.0656, 0.573", "521.658, 447.409, 30.4718, 0.44", "522.171, 446.73, 30.655, 0.404", "522.576, 445.872, 30.7975, 0.4598", "522.401, 444.936, 30.9828, 0.6556", "522.352, 443.917, 31.2122, 0.7998", "522.958, 443.078, 31.3723, 0.7534", "523.62, 442.777, 31.5484, 0.592", "524.412, 442.607, 31.8839, 0.4292", "525.15, 442.059, 32.06, 0.3782", "526.104, 441.65, 32.2708, 0.4406", "526.924, 441.241, 32.6413, 0.4792", "527.57, 440.774, 32.6978, 0.4704", "528.178, 439.987, 32.7102, 0.3832", "528.638, 439.111, 32.7054, 0.339", "529.554, 438.599, 32.8894, 0.3724", "530.229, 438.08, 33.2206, 0.332", "530.96, 437.429, 33.6566, 0.2966", "531.479, 436.547, 34.1326, 0.2684", "531.936, 435.911, 34.2773, 0.2626", "532.418, 435.077, 34.4473, 0.2542", "532.866, 434.483, 34.6102, 0.2288", "533.562, 433.919, 35.28, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "490.421, 549.303, 23.0093, 0.6864", "490.715, 547.939, 22.2465, 0.3594", "490.145, 547.164, 21.8562, 0.3004", "489.77, 546.37, 21.3417, 0.2752", "489.982, 545.27, 20.8075, 0.276", "490.366, 544.214, 20.2929, 0.277", "490.707, 543.144, 19.8827, 0.2794", "490.419, 542.331, 19.4396, 0.2834", "490.354, 541.517, 18.9145, 0.291", "490.479, 540.439, 18.5971, 0.3062", "490.793, 539.349, 18.4895, 0.3278", "491.46, 538.446, 18.5698, 0.3986", "491.863, 537.751, 19.0026, 0.3828", "492.426, 536.984, 19.6212, 0.38", "493.265, 536.26, 20.2068, 0.474", "494.187, 535.601, 20.5681, 0.3962", "495.072, 534.896, 20.7327, 0.331", "495.82, 534.065, 20.7873, 0.2854", "496.262, 533.017, 20.7553, 0.2942", "496.971, 532.127, 20.6898, 0.3118", "497.878, 531.448, 20.6249, 0.3396", "498.913, 530.966, 20.571, 0.4156", "499.822, 530.3, 20.5149, 0.4372", "500.473, 529.361, 20.4382, 0.3676", "501.095, 528.426, 20.3074, 0.3152", "501.857, 527.619, 20.1132, 0.304", "502.651, 526.795, 19.9628, 0.324", "503.376, 525.915, 19.8633, 0.3918", "503.985, 524.948, 19.812, 0.3674", "504.735, 524.132, 19.8229, 0.3644", "505.704, 523.565, 19.914, 0.3834", "506.551, 522.825, 20.0181, 0.5286", "507.295, 521.96, 20.0483, 0.4928", "508.188, 521.352, 19.9641, 0.5328", "509.284, 521.237, 19.7598, 0.5496", "510.377, 521.427, 19.4946, 0.6294", "511.426, 521.769, 19.2355, 0.5418", "512.506, 521.718, 19.0926, 0.6068", "513.575, 521.38, 18.9529, 0.5384", "514.673, 521.339, 18.7866, 0.6426", "515.793, 521.326, 18.66, 0.6292", "516.881, 520.989, 18.5586, 0.6944", "517.96, 520.623, 18.4595, 0.6048", "519.065, 520.371, 18.4193, 0.774", "520.192, 520.241, 18.4471, 0.6048", "521.3, 520.003, 18.4899, 0.5756", "522.355, 519.566, 18.5411, 0.5116", "523.052, 518.925, 18.61, 0.672", "523.954, 518.518, 18.7658, 0.759", "524.876, 518.021, 18.7706, 0.7966", "525.787, 517.889, 18.5613, 0.7788", "526.583, 517.456, 18.4094, 0.7148", "526.822, 516.745, 18.5033, 0.747", "527.63, 516.302, 18.3872, 0.76", "528.429, 515.57, 18.2031, 0.7818", "528.552, 514.647, 18.26, 0.6052", "529.158, 514.686, 18.5031, 0.4158", "529.672, 515.163, 18.4775, 0.3102", "529.769, 514.666, 18.1823, 0.2936", "529.737, 513.725, 18.1297, 0.3098", "530.466, 513.165, 18.1323, 0.3404", "531.063, 512.704, 17.9905, 0.3936", "531.667, 511.916, 17.7209, 0.51", "532.07, 511.324, 17.7682, 0.6398", "532.854, 510.915, 17.8522, 0.6114", "533.193, 510.828, 17.6252, 0.7212", "533.762, 509.995, 17.4981, 0.8212", "534.373, 509.705, 17.1432, 0.8236", "534.814, 509.259, 17.0965, 0.572", "535.3, 508.765, 17.2553, 0.4342", "535.411, 507.919, 17.2982, 0.4134", "535.592, 507.051, 17.4049, 0.6084", "536.104, 506.275, 17.5444, 0.5234", "537.159, 505.991, 17.6061, 0.473", "537.043, 505.33, 17.5663, 0.5478", "537.357, 504.501, 17.408, 0.5534", "538.139, 503.784, 17.2267, 0.5234", "538.71, 503.805, 16.6252, 0.4354", "538.824, 503.288, 15.7654, 0.4312", "538.554, 502.604, 14.7669, 0.565", "538.479, 501.673, 14.0138, 0.5848", "539.293, 501.186, 13.2779, 0.5848", "540.261, 501.072, 12.887, 0.5338", "540.629, 501.301, 12.1022, 0.6864" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "536.593, 534.508, 26.0554, 0.3846", "537.115, 534.094, 25.5188, 0.4576", "538.153, 533.685, 25.258, 0.5624", "539.245, 534.004, 25.0018, 0.4288", "540.164, 533.389, 24.7018, 0.3438", "540.45, 532.324, 24.3306, 0.3098", "541.136, 531.427, 24.0033, 0.3346", "542.119, 530.845, 23.7102, 0.4122", "543.055, 530.247, 23.3846, 0.4004", "543.979, 529.888, 22.9297, 0.4496", "545.082, 529.685, 22.6013, 0.4252", "545.98, 529.039, 22.3528, 0.484", "546.625, 528.124, 22.0666, 0.543", "547.521, 527.534, 21.685, 0.4392", "548.476, 527.1, 21.2301, 0.365", "548.906, 526.224, 20.7143, 0.3422", "549.023, 525.114, 20.2423, 0.427", "549.528, 524.12, 19.8875, 0.4274", "550.4, 523.441, 19.6698, 0.5016", "551.462, 523.174, 19.4941, 0.511", "552.544, 523.363, 19.2537, 0.694", "553.555, 523.865, 18.9585, 0.685", "554.236, 524.642, 18.6162, 0.5288", "554.726, 525.0, 18.0597, 0.4612", "555.294, 525.501, 17.5036, 0.4016", "555.954, 526.065, 16.9759, 0.4296", "556.795, 526.023, 16.6687, 0.4944", "557.819, 525.796, 16.4577, 0.7812", "558.789, 525.454, 16.3768, 0.7342", "559.893, 525.325, 16.3874, 0.71", "560.793, 524.874, 16.3235, 0.5882", "561.863, 524.652, 16.1381, 0.5066", "562.888, 524.821, 15.8613, 0.572", "563.8, 524.638, 15.513, 0.5558", "564.78, 524.264, 15.3201, 0.5058", "565.497, 523.596, 15.1359, 0.5106", "566.317, 523.161, 15.1126, 0.7322", "567.3, 523.037, 15.3332, 0.798", "568.338, 522.676, 15.5813, 0.7626", "569.415, 522.321, 15.8545, 0.7768", "570.482, 522.021, 16.156, 0.8728", "571.544, 521.957, 16.3947, 0.7118", "572.343, 522.236, 16.8, 0.4576" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "536.593, 534.508, 26.0554, 0.3846", "536.631, 534.116, 25.718, 0.3886", "536.653, 533.006, 25.5647, 0.466", "536.672, 531.873, 25.4858, 0.497", "536.823, 530.75, 25.4607, 0.645", "536.849, 529.622, 25.3828, 0.707", "537.489, 528.872, 25.1819, 0.71", "538.339, 528.148, 24.9747, 0.5732", "539.102, 527.3, 24.8341, 0.5512", "539.63, 526.305, 24.8019, 0.7582", "539.833, 525.261, 24.9505, 0.856", "539.882, 524.146, 25.1747, 0.8234", "540.053, 523.055, 25.2787, 1.115", "540.539, 522.035, 25.3245, 1.0916", "541.326, 521.261, 25.4053, 0.811", "542.376, 520.838, 25.4248, 0.5264", "543.284, 520.279, 25.2386, 0.4586", "544.324, 519.818, 25.0637, 0.6162", "545.205, 519.128, 24.8944, 0.6766", "545.701, 518.159, 24.6534, 0.7704", "546.089, 517.193, 24.3597, 0.8042", "545.809, 516.39, 24.1188, 0.8596", "546.386, 515.584, 24.0456, 0.7694", "546.814, 514.766, 23.8435, 0.6238", "547.276, 513.893, 23.7929, 0.477", "547.879, 513.208, 23.8776, 0.5218", "548.209, 512.308, 24.0707, 0.4392", "548.737, 511.551, 24.0957, 0.4052", "549.713, 511.248, 24.0607, 0.4502", "550.38, 510.963, 24.1775, 0.4666", "550.523, 510.154, 24.0284, 0.594", "550.827, 509.075, 23.8162, 0.5866", "551.542, 508.267, 23.535, 0.6108", "552.22, 507.783, 23.3666, 0.472", "552.971, 507.257, 23.1109, 0.4214", "553.447, 506.656, 22.7341, 0.4676", "554.159, 505.839, 22.5381, 0.5594", "554.736, 505.013, 22.4871, 0.4724", "555.324, 504.117, 22.4276, 0.4146", "556.148, 503.561, 22.3679, 0.4912", "556.579, 502.72, 22.2266, 0.4276", "557.158, 501.796, 22.0032, 0.3918", "557.714, 500.827, 21.8157, 0.3864", "558.13, 499.784, 21.6656, 0.5352", "558.74, 499.216, 21.4794, 0.5004", "559.64, 498.995, 21.1448, 0.5702", "560.558, 498.48, 20.8379, 0.5056", "561.476, 498.37, 20.473, 0.4112", "562.328, 497.648, 20.15, 0.3436", "562.873, 497.129, 19.6675, 0.3812", "563.723, 496.839, 19.3836, 0.3482", "564.352, 496.231, 19.0013, 0.3262", "564.564, 495.402, 18.5841, 0.3254", "564.819, 494.874, 18.2988, 0.3584", "565.294, 494.465, 17.8713, 0.4804", "566.02, 494.06, 17.841, 0.4096", "566.714, 493.857, 18.0859, 0.3502", "567.396, 493.984, 18.5131, 0.3476", "567.709, 494.583, 19.0191, 0.2796", "568.568, 494.666, 19.88, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "482.654, 580.603, 26.899, 0.3178", "481.196, 579.84, 26.6501, 0.6584", "480.173, 579.33, 26.5527, 0.4544", "479.167, 578.787, 26.482, 0.4454", "478.251, 578.102, 26.4397, 0.4654", "477.427, 577.309, 26.4251, 0.5532", "476.602, 576.516, 26.4353, 0.6988", "475.724, 575.783, 26.4628, 0.5952", "474.72, 575.258, 26.5353, 0.6138", "473.685, 574.844, 26.6704, 0.5396", "472.545, 574.747, 26.752, 0.4744", "471.417, 574.745, 26.7219, 0.4574", "470.299, 574.742, 26.3169, 0.6092" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "482.654, 580.603, 26.899, 0.3178", "481.664, 581.372, 27.0654, 0.307", "480.708, 581.867, 27.0859, 0.337", "479.686, 581.844, 26.9128, 0.3798", "478.807, 582.461, 26.7384, 0.5206", "478.299, 583.451, 26.6481, 0.4832", "477.518, 584.235, 26.4828, 0.4884", "476.407, 584.328, 26.2993, 0.5958", "475.31, 584.011, 26.1519, 0.7786", "474.205, 584.273, 26.0261, 0.9682", "473.371, 585.049, 25.8796, 0.8988", "472.771, 585.981, 25.6471, 0.756", "472.16, 586.941, 25.135, 0.7876" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "484.904, 600.486, 33.1332, 0.4254", "484.95, 600.611, 34.5156, 0.2288", "485.463, 601.037, 35.2024, 0.3146", "485.857, 601.434, 35.9206, 0.3744", "485.699, 602.055, 36.5515, 0.3356", "486.449, 601.702, 37.2378, 0.3034", "486.771, 602.164, 37.9747, 0.2808", "486.543, 602.732, 38.67, 0.2862", "487.203, 602.932, 39.1717, 0.296", "487.573, 602.332, 39.3716, 0.315", "488.05, 602.895, 39.2179, 0.3454", "488.433, 603.553, 38.8962, 0.4264", "488.386, 604.38, 38.8814, 0.4576", "488.9, 605.12, 39.1056, 0.4064", "489.822, 605.398, 39.5917, 0.383", "490.299, 605.814, 40.3598, 0.4496", "491.081, 606.531, 41.0855, 0.4964", "491.707, 607.117, 41.8216, 0.4976", "492.601, 607.472, 42.5244, 0.458", "493.184, 608.291, 43.0329, 0.3592", "493.979, 608.773, 43.3446, 0.3", "494.208, 609.877, 43.5523, 0.2746", "494.873, 610.438, 43.7156, 0.2746", "496.016, 610.443, 43.8525, 0.2746", "497.089, 610.724, 43.995, 0.2746", "497.945, 611.105, 44.2585, 0.2748", "498.675, 611.771, 44.6676, 0.275", "499.525, 612.265, 45.0811, 0.2752", "499.947, 613.242, 45.5353, 0.2758", "500.476, 614.241, 45.9217, 0.2768", "500.929, 615.291, 46.2546, 0.2786", "501.733, 616.093, 46.5483, 0.2822", "502.569, 616.849, 46.8692, 0.2886", "503.511, 617.074, 47.3382, 0.3002", "504.49, 617.201, 47.9424, 0.324", "505.04, 617.998, 48.4994, 0.3558", "505.601, 618.843, 49.1355, 0.4764", "506.543, 619.421, 49.695, 0.4008", "507.417, 620.114, 50.1441, 0.3396", "508.485, 620.511, 50.461, 0.3006", "509.252, 621.159, 50.7937, 0.3236", "509.745, 622.133, 51.079, 0.3624", "510.48, 622.99, 51.2658, 0.4524", "511.175, 623.887, 51.3906, 0.5312", "511.923, 624.743, 51.469, 0.418", "512.32, 625.68, 51.5108, 0.3244", "513.004, 626.523, 51.52, 0.2728", "514.014, 626.798, 51.52, 0.2712", "515.158, 626.798, 51.52, 0.2684", "516.293, 626.912, 51.52, 0.2626", "517.437, 626.912, 51.52, 0.2542", "518.581, 626.923, 51.52, 0.2288", "519.719, 627.026, 51.52, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "484.904, 600.486, 33.1332, 0.4254", "484.618, 600.801, 33.3553, 0.457", "484.112, 601.519, 33.462, 0.3988", "483.084, 601.926, 33.6636, 0.399", "482.074, 602.201, 33.9273, 0.334", "481.377, 602.896, 34.237, 0.3002", "480.546, 603.452, 34.5979, 0.275", "479.815, 604.225, 34.986, 0.2754", "478.876, 604.738, 35.3626, 0.2762", "477.825, 605.01, 35.6843, 0.2774", "477.022, 605.621, 36.001, 0.2798", "476.045, 605.859, 36.1382, 0.2842", "474.973, 605.656, 36.2835, 0.2924", "473.965, 606.001, 36.4241, 0.3072", "473.117, 606.612, 36.5392, 0.3372", "472.521, 607.48, 36.6604, 0.3814", "472.018, 608.211, 36.8833, 0.5186", "471.557, 609.004, 37.011, 0.5046", "471.071, 609.58, 37.1647, 0.4088", "470.284, 610.215, 37.3887, 0.3396", "469.256, 610.389, 37.6208, 0.3736", "468.198, 610.407, 37.7922, 0.3342", "467.356, 611.061, 38.0027, 0.3006", "466.583, 611.697, 38.2239, 0.2758", "465.605, 612.16, 38.4468, 0.2766", "465.608, 613.191, 38.7246, 0.2784", "465.608, 614.335, 38.9738, 0.2818", "465.608, 615.479, 39.2084, 0.288", "465.608, 616.623, 39.4257, 0.3008", "465.608, 617.762, 39.6536, 0.318", "465.918, 618.262, 40.143, 0.3804", "465.947, 619.278, 40.607, 0.3468", "465.264, 619.998, 41.008, 0.3252", "464.942, 620.88, 41.2345, 0.316", "464.504, 621.745, 41.3622, 0.3766", "464.156, 622.646, 41.5906, 0.34", "463.895, 623.692, 41.82, 0.3112", "463.253, 624.296, 42.2192, 0.2954", "462.832, 625.143, 42.4547, 0.3142", "462.405, 625.885, 42.5748, 0.3426", "462.316, 626.333, 43.08, 0.426", "462.483, 627.224, 43.7164, 0.4326", "462.677, 628.279, 44.2226, 0.477", "462.823, 629.321, 44.6589, 0.6326", "462.921, 629.664, 44.7801, 0.7928", "463.399, 630.6, 44.8804, 0.5704", "463.759, 631.313, 45.1114, 0.3904", "463.551, 632.351, 45.4182, 0.3008", "463.091, 633.085, 45.4843, 0.3226", "463.174, 634.018, 45.5988, 0.3668", "463.206, 634.826, 45.995, 0.4302", "462.678, 635.658, 46.3204, 0.6386", "462.664, 636.479, 46.5209, 0.5816", "462.642, 637.555, 46.6357, 0.5704", "462.93, 638.513, 46.7802, 0.7788", "463.164, 639.448, 46.8829, 0.7372", "462.519, 640.205, 46.9403, 0.6796", "462.096, 641.094, 46.8779, 0.707", "461.873, 641.872, 47.1145, 0.5622", "462.062, 642.808, 47.476, 0.5582", "461.588, 643.521, 47.6384, 0.411", "461.032, 643.843, 47.973, 0.3594", "460.913, 643.918, 48.6175, 0.3324", "460.421, 644.454, 49.3438, 0.4068", "459.766, 645.178, 49.8845, 0.3976", "459.454, 645.945, 50.1698, 0.4088", "459.77, 646.927, 50.3527, 0.5226", "459.441, 647.904, 50.3857, 0.5116", "459.227, 648.571, 50.5674, 0.422", "458.884, 649.587, 50.7276, 0.3648", "458.616, 650.294, 50.832, 0.415", "457.992, 651.066, 50.8194, 0.4366", "457.198, 651.699, 50.8502, 0.3664", "456.57, 652.186, 50.8721, 0.3126", "456.237, 653.205, 50.815, 0.299", "455.67, 654.079, 50.8012, 0.3146", "455.263, 655.083, 50.8292, 0.374", "454.648, 655.98, 50.8351, 0.3352", "453.951, 656.785, 50.7284, 0.3024", "453.571, 657.436, 50.4703, 0.2792", "452.977, 657.707, 50.5851, 0.2832", "452.405, 658.433, 50.5406, 0.2906", "451.591, 658.677, 50.3322, 0.304", "450.746, 658.847, 50.0797, 0.331", "450.395, 658.874, 50.295, 0.37", "450.927, 659.263, 50.7928, 0.4972", "450.036, 659.658, 51.2033, 0.466", "449.109, 660.011, 51.4601, 0.3304", "449.134, 659.516, 52.36, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "481.96, 552.051, 27.5433, 0.5516", "482.082, 551.154, 26.7562, 0.2288", "482.713, 550.679, 26.3317, 0.3072", "483.688, 550.233, 25.9186, 0.337", "483.588, 549.343, 25.4518, 0.3812", "483.65, 548.467, 24.9224, 0.5178", "484.44, 547.836, 24.4217, 0.5034", "484.494, 547.04, 23.9599, 0.4054", "484.788, 546.213, 23.8116, 0.3396", "485.623, 545.608, 23.6424, 0.3422", "485.999, 544.831, 23.3908, 0.4264", "486.769, 544.599, 22.9584, 0.428", "487.424, 543.811, 22.6749, 0.4954", "487.795, 543.013, 22.2771, 0.5354", "488.148, 541.944, 21.9891, 0.5646", "488.374, 541.084, 21.8348, 0.6084", "488.569, 540.119, 21.6963, 0.5106", "489.544, 539.763, 21.4838, 0.5114", "490.406, 539.398, 21.3438, 0.5462", "491.279, 538.776, 21.1112, 0.4468", "491.979, 538.265, 20.6963, 0.3722", "492.204, 537.27, 20.2157, 0.3872", "492.487, 536.442, 19.5526, 0.359", "492.415, 536.316, 18.5581, 0.3486", "492.976, 535.735, 17.4831, 0.3544", "493.439, 535.957, 16.3055, 0.4736", "493.911, 535.219, 15.238, 0.3956", "493.628, 534.42, 14.6155, 0.3298", "493.522, 533.376, 14.0795, 0.2826", "494.048, 533.104, 13.5626, 0.2894", "494.795, 532.851, 13.1144, 0.302", "495.109, 531.985, 12.6259, 0.326", "494.909, 531.179, 12.2509, 0.367", "494.354, 530.467, 12.1235, 0.4608", "494.122, 529.808, 12.1914, 0.5468", "493.815, 529.14, 11.9912, 0.4478", "493.957, 528.327, 11.6746, 0.3744", "494.161, 527.505, 11.5119, 0.3906", "494.384, 526.911, 11.1058, 0.3666", "494.958, 526.074, 10.7696, 0.355", "494.894, 524.995, 10.5584, 0.4036", "495.322, 524.394, 10.2446, 0.3842", "495.025, 523.871, 9.9261, 0.421", "494.802, 523.125, 9.8708, 0.3644", "495.498, 522.471, 9.7764, 0.4068", "496.038, 521.55, 9.8, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "481.96, 552.051, 27.5433, 0.5516", "481.617, 551.044, 27.8865, 0.7638", "481.129, 550.025, 28.0669, 0.8424", "480.473, 549.09, 28.1977, 0.6864", "479.895, 548.161, 28.1879, 0.7186", "479.481, 547.096, 28.1803, 0.5888", "479.041, 546.045, 28.2234, 0.5838", "478.777, 545.015, 28.7689, 0.8006" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "461.556, 555.378, 26.2867, 1.0016", "460.142, 554.871, 25.9192, 0.9556", "459.075, 554.625, 25.7296, 0.6578", "457.933, 554.612, 25.5999, 0.4502", "456.795, 554.617, 25.5132, 0.45", "455.659, 554.651, 25.4469, 0.6438", "454.539, 554.816, 25.4421, 0.7462", "453.427, 555.025, 25.4301, 0.8102", "452.294, 555.04, 25.4094, 0.6228", "451.175, 554.882, 25.3952, 0.6192", "450.09, 554.538, 25.3479, 0.5446", "449.059, 554.053, 25.2942, 0.5074", "448.117, 553.582, 25.2826, 0.4046", "447.034, 553.254, 25.2661, 0.3784", "445.891, 553.273, 25.2424, 0.4474", "444.756, 553.158, 25.2109, 0.4624", "443.743, 552.677, 25.1611, 0.5788", "442.784, 552.057, 25.0881, 0.5946", "442.023, 551.743, 24.7811, 0.451" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "461.556, 555.378, 26.2867, 1.0016", "460.633, 555.894, 24.8896, 0.4102", "459.671, 556.372, 24.3074, 0.3836", "458.872, 557.186, 23.8311, 0.4812", "457.905, 557.785, 23.4616, 0.4096", "457.004, 558.423, 23.2645, 0.3556", "456.227, 559.108, 23.1347, 0.3308", "456.32, 559.772, 22.7605, 0.3762", "455.662, 560.167, 22.2602, 0.4776", "454.667, 560.188, 21.6951, 0.579", "453.768, 560.461, 21.2311, 0.5022", "452.934, 560.989, 20.8483, 0.5018", "452.35, 561.563, 20.7628, 0.4974", "451.859, 562.06, 20.6673, 0.5068", "451.546, 562.888, 20.6488, 0.439", "450.758, 563.601, 20.74, 0.499", "450.068, 563.992, 20.9527, 0.3956", "449.611, 564.096, 21.0492, 0.3298", "448.624, 564.575, 21.1652, 0.2824", "448.448, 564.954, 21.4241, 0.2892", "447.76, 565.341, 21.8059, 0.3016", "446.75, 565.614, 22.0833, 0.3252", "446.064, 566.156, 22.0682, 0.3652", "445.305, 566.647, 21.8907, 0.4576", "444.783, 567.266, 21.5921, 0.5412", "444.215, 568.212, 21.3552, 0.436", "443.419, 568.901, 21.4233, 0.359", "442.337, 569.121, 21.5222, 0.3316", "441.759, 569.745, 21.6619, 0.4054", "441.587, 570.604, 21.6147, 0.3954", "441.136, 571.466, 21.6896, 0.4032", "440.69, 572.072, 21.4972, 0.518", "439.701, 572.01, 21.3923, 0.4724", "438.822, 572.46, 21.3777, 0.4994", "437.884, 572.92, 21.4291, 0.4652", "437.127, 573.382, 21.3819, 0.5838", "436.616, 573.861, 21.2391, 0.6038", "435.873, 574.187, 20.9931, 0.4692", "435.185, 574.032, 20.9617, 0.3668", "434.225, 574.056, 21.0621, 0.3768", "433.466, 574.56, 21.3117, 0.3402", "432.462, 574.8, 21.5456, 0.3116", "431.974, 575.074, 21.5441, 0.296", "431.264, 574.929, 21.53, 0.3152", "430.417, 575.053, 21.3022, 0.346", "429.691, 575.351, 21.2114, 0.4268", "428.616, 575.617, 21.0608, 0.4594", "427.793, 576.233, 20.8713, 0.4036", "426.902, 576.486, 20.5621, 0.4074", "425.918, 576.591, 20.2367, 0.3498", "425.275, 576.957, 19.8422, 0.3298", "424.327, 577.069, 19.6151, 0.3304", "423.379, 577.186, 19.4816, 0.3736", "422.374, 577.516, 19.3697, 0.4796", "421.72, 578.044, 19.1208, 0.5514", "421.11, 578.628, 18.8079, 0.6022", "420.506, 579.174, 18.7802, 0.6384", "419.544, 579.688, 18.785, 0.7604", "418.434, 579.509, 18.7584, 0.7176", "417.446, 578.966, 18.6562, 0.5724", "416.378, 578.826, 18.428, 0.3924", "415.31, 579.158, 18.1028, 0.3142", "414.28, 578.974, 17.6084, 0.3018", "413.18, 578.983, 17.0733, 0.32", "412.116, 579.386, 16.6326, 0.3844", "411.164, 579.862, 16.354, 0.354", "410.102, 579.632, 16.0521, 0.3384", "409.173, 579.018, 15.7287, 0.34", "408.191, 578.599, 15.3336, 0.4236", "407.104, 578.436, 14.9454, 0.4162", "405.974, 578.422, 14.6912, 0.5038", "404.859, 578.548, 14.5139, 0.4046", "403.786, 578.755, 14.2926, 0.3462", "402.73, 578.625, 14.008, 0.3142", "401.681, 578.44, 13.8549, 0.3436", "401.346, 579.394, 13.7038, 0.4228", "400.68, 580.293, 13.5365, 0.4512", "399.658, 580.68, 13.5167, 0.393", "398.656, 581.217, 13.5629, 0.365", "397.661, 581.73, 13.5547, 0.384", "396.807, 582.317, 13.5651, 0.5306", "396.295, 583.028, 13.4497, 0.4906", "395.683, 583.537, 13.438, 0.5578", "394.934, 584.134, 13.4803, 0.4524", "394.248, 584.355, 13.4628, 0.4612", "393.483, 584.698, 13.6551, 0.3984", "392.709, 585.054, 13.614, 0.4406", "392.418, 585.614, 13.5673, 0.4322", "391.325, 585.672, 13.5877, 0.3814", "390.218, 585.842, 13.72, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "470.299, 574.742, 26.3169, 0.6092", "469.18, 574.72, 25.9597, 0.2288", "468.047, 574.568, 25.8529, 0.401", "467.192, 573.911, 25.2753, 0.38" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "470.299, 574.742, 26.3169, 0.6092", "469.252, 575.474, 26.7857, 0.6878", "468.364, 576.176, 26.9849, 0.6748", "467.448, 576.86, 27.1398, 0.5048", "466.379, 577.254, 27.2446, 0.4406", "465.258, 577.473, 27.3013, 0.4756", "464.115, 577.5, 27.314, 0.7082", "462.973, 577.56, 27.2883, 0.784", "461.872, 577.85, 27.2321, 0.5882", "460.787, 578.054, 27.0886, 0.4866", "459.708, 578.417, 26.9755, 0.402", "458.618, 578.755, 26.9456, 0.428", "457.523, 578.864, 27.0672, 0.5038", "456.384, 578.905, 27.2149, 0.7388", "455.266, 579.143, 27.3554, 0.9458", "454.138, 579.32, 27.4975, 1.0652", "453.034, 579.371, 27.6928, 0.9694", "451.922, 579.629, 27.8109, 0.7312", "450.823, 579.753, 27.7545, 0.5816", "449.691, 579.63, 27.6492, 0.49", "448.639, 579.184, 27.5482, 0.5608", "447.533, 578.891, 27.452, 0.6694", "446.395, 578.975, 27.2446, 0.751" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "472.16, 586.941, 25.135, 0.7876", "471.562, 587.458, 24.6324, 0.551", "470.559, 587.709, 24.3807, 0.401", "469.49, 587.595, 24.0352, 0.3228", "468.363, 587.54, 23.7332, 0.3538", "467.251, 587.371, 23.5678, 0.4724", "466.151, 587.15, 23.5312, 0.3934", "465.017, 587.149, 23.5207, 0.3258", "463.903, 587.381, 23.4892, 0.2752", "462.806, 587.547, 23.3593, 0.2758", "461.683, 587.641, 23.1678, 0.2766", "460.592, 587.945, 22.9624, 0.2786", "459.523, 588.356, 22.7563, 0.2818", "458.42, 588.645, 22.5578, 0.2886", "457.348, 588.416, 22.3522, 0.2998", "456.511, 587.735, 22.0564, 0.3236", "455.559, 587.466, 21.6202, 0.3548", "454.447, 587.547, 21.2531, 0.4746", "453.305, 587.593, 20.9359, 0.3974", "452.191, 587.793, 20.6939, 0.3332", "451.166, 587.868, 20.3092, 0.2888", "450.273, 587.844, 19.7371, 0.3006", "449.177, 588.125, 19.2519, 0.3238", "448.037, 588.215, 18.8636, 0.3626", "446.927, 587.94, 18.5672, 0.4528", "445.84, 587.581, 18.3554, 0.5322", "444.788, 587.132, 18.2229, 0.4198", "443.699, 586.8, 18.1, 0.3274", "442.604, 586.676, 17.8875, 0.2784", "441.475, 586.838, 17.719, 0.2816", "440.512, 587.45, 17.6256, 0.288", "439.576, 588.01, 17.6023, 0.2992", "439.23, 588.359, 17.3581, 0.3212", "438.381, 588.156, 17.3684, 0.3566", "437.718, 588.237, 17.5377, 0.448", "436.846, 587.881, 17.5381, 0.4924", "435.874, 587.445, 17.451, 0.4962", "435.177, 587.787, 17.1909, 0.4248", "434.514, 588.105, 16.9863, 0.4468", "434.153, 588.974, 16.6188, 0.4246", "433.991, 589.723, 16.1287, 0.4596", "433.326, 590.429, 15.727, 0.612", "432.836, 590.994, 15.4232, 0.6988", "432.454, 591.789, 15.2403, 0.666", "431.669, 592.464, 15.1018, 0.6298", "431.06, 592.935, 14.8258, 0.6724", "430.568, 593.222, 14.6716, 0.6782", "429.802, 593.386, 14.5521, 0.585", "428.992, 593.278, 14.7092, 0.4586", "427.946, 593.405, 14.7963, 0.4574", "426.956, 593.628, 14.8758, 0.4674", "425.919, 593.503, 14.9724, 0.4256", "424.883, 593.622, 15.0931, 0.4136", "423.783, 593.472, 15.1935, 0.5308", "423.079, 593.257, 15.3949, 0.5282", "422.016, 593.185, 15.6453, 0.4464", "421.118, 593.333, 15.8511, 0.4412", "420.188, 593.572, 16.0159, 0.407", "419.265, 594.223, 16.0915, 0.4618", "418.237, 594.503, 16.0014, 0.4474", "417.339, 594.938, 15.8911, 0.5248", "416.274, 595.32, 15.7601, 0.6208", "415.378, 595.669, 15.6795, 0.5738", "414.35, 595.566, 15.6306, 0.661", "413.43, 595.491, 15.6901, 0.6656", "412.52, 596.029, 15.7583, 0.7486", "411.624, 596.392, 15.7567, 0.7694", "410.853, 597.101, 15.8319, 0.7692", "410.078, 597.87, 15.9257, 0.7272", "409.267, 598.427, 15.937, 0.6234", "408.513, 599.242, 15.9029, 0.5556", "407.731, 599.867, 15.882, 0.513", "406.962, 600.447, 15.8793, 0.4862", "405.976, 600.908, 15.8754, 0.4132", "404.974, 600.982, 15.8371, 0.3894", "404.319, 600.404, 16.0719, 0.4916", "403.655, 599.756, 16.1715, 0.4286", "402.656, 599.591, 16.4358, 0.393", "401.772, 599.544, 16.8663, 0.3906", "400.869, 599.342, 17.1932, 0.5364", "399.739, 599.349, 17.4395, 0.5324", "399.015, 599.735, 17.7113, 0.485", "398.294, 600.284, 18.0358, 0.362", "397.769, 600.679, 18.1495, 0.3048", "397.041, 601.163, 18.2406, 0.2834", "396.036, 601.508, 18.2642, 0.291", "395.355, 602.146, 18.3378, 0.3062", "394.472, 602.316, 18.6224, 0.3276", "393.542, 602.545, 18.8288, 0.3994", "392.612, 602.661, 19.134, 0.377", "391.646, 602.768, 19.3838, 0.4056", "390.957, 603.396, 19.6349, 0.3464", "390.343, 604.181, 19.8084, 0.3242", "389.617, 604.821, 19.9552, 0.3142", "388.651, 605.39, 20.061, 0.3736", "387.853, 606.05, 20.1611, 0.334", "387.155, 606.866, 20.1942, 0.3004", "386.211, 607.485, 20.1988, 0.2752", "385.461, 608.338, 20.1917, 0.276", "384.473, 608.828, 20.206, 0.2774", "383.329, 608.837, 20.2496, 0.2796", "382.216, 609.012, 20.3548, 0.284", "381.293, 609.295, 20.5967, 0.292", "380.397, 609.842, 20.819, 0.3064", "379.837, 610.661, 21.0442, 0.3354", "379.092, 611.158, 21.2442, 0.378", "378.336, 612.007, 21.3944, 0.5122", "377.258, 612.274, 21.5366, 0.4928", "376.425, 612.893, 21.6592, 0.3862", "375.584, 613.421, 21.7696, 0.3028", "374.694, 613.992, 21.9128, 0.2796", "373.905, 614.704, 21.9722, 0.284", "373.533, 615.657, 22.1151, 0.292", "373.418, 616.332, 22.1744, 0.3078", "372.616, 617.01, 22.2728, 0.3308", "371.655, 617.207, 22.4246, 0.404", "370.959, 617.598, 22.6774, 0.3914", "370.325, 618.078, 22.6467, 0.4036", "369.696, 618.706, 22.7121, 0.4814", "369.19, 619.355, 22.8479, 0.5874", "368.242, 619.755, 23.0833, 0.5112", "367.297, 620.395, 23.2521, 0.5492", "366.456, 621.044, 23.2962, 0.436", "365.875, 621.567, 23.2801, 0.4306", "365.209, 621.85, 23.4168, 0.3458", "364.277, 621.341, 23.4221, 0.3222", "363.472, 621.346, 23.5952, 0.315", "362.753, 620.842, 23.761, 0.3516", "362.002, 620.685, 23.6008, 0.408", "361.012, 620.62, 23.2635, 0.5688", "359.9, 620.621, 22.9557, 0.5932", "358.809, 620.858, 22.6974, 0.5946", "358.082, 621.588, 22.4296, 0.58", "357.088, 621.221, 22.2324, 0.6382", "356.364, 621.242, 21.8907, 0.5604", "355.822, 621.984, 21.6826, 0.6296", "355.313, 622.997, 21.4984, 0.6368", "354.9, 623.972, 21.2008, 0.5544", "354.394, 624.968, 20.9193, 0.4058", "353.744, 625.608, 20.6933, 0.3402", "352.943, 626.102, 20.4835, 0.3438", "352.299, 626.621, 20.4041, 0.4294", "351.762, 626.303, 20.082, 0.4332", "350.977, 625.686, 19.7741, 0.5064", "349.911, 625.708, 19.5283, 0.5494", "348.823, 625.539, 19.3508, 0.6214", "347.807, 625.753, 19.3054, 0.5634", "346.944, 625.887, 19.1112, 0.4702", "346.177, 626.265, 18.7471, 0.4562", "345.465, 626.817, 18.5499, 0.5746", "345.195, 627.823, 18.446, 0.7812", "344.635, 628.554, 18.3829, 0.769", "343.605, 628.914, 18.3424, 0.8338", "342.748, 629.34, 18.2402, 0.759", "342.01, 629.91, 18.264, 0.6512", "341.411, 630.716, 18.2035, 0.53", "340.986, 631.44, 18.3477, 0.6092", "340.26, 632.125, 18.4272, 0.653", "339.945, 632.594, 18.3046, 0.5498", "339.232, 632.832, 18.0897, 0.5674", "338.975, 633.716, 17.7769, 0.5006", "338.677, 634.397, 17.6272, 0.4008", "338.214, 635.019, 17.7712, 0.3292", "337.879, 636.075, 17.9287, 0.331", "337.469, 636.985, 18.0083, 0.3686", "336.702, 637.439, 18.2315, 0.501", "336.417, 638.32, 18.5859, 0.4414", "336.222, 639.064, 18.9522, 0.4398", "335.812, 639.822, 19.164, 0.3638", "335.602, 640.52, 19.1428, 0.3502", "335.494, 641.07, 18.8069, 0.393", "335.098, 641.825, 18.3044, 0.3712", "334.729, 642.596, 17.8087, 0.365", "334.506, 643.591, 17.4915, 0.4156", "334.483, 644.662, 17.4219, 0.4372", "334.178, 645.67, 17.5578, 0.368", "334.63, 646.676, 17.8082, 0.3158", "334.849, 647.668, 17.9364, 0.3048", "334.605, 648.594, 17.8916, 0.3248", "334.28, 649.619, 17.7438, 0.3954", "334.002, 650.644, 17.6883, 0.3644", "333.557, 651.546, 17.5968, 0.4068", "333.59, 652.652, 17.64, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "472.16, 586.941, 25.135, 0.7876", "471.581, 587.511, 25.5006, 0.9152", "470.509, 587.787, 25.6859, 0.6678", "469.463, 587.902, 25.7581, 0.5102", "468.424, 587.791, 25.9398, 0.3616", "467.331, 587.902, 26.0272, 0.3038", "466.242, 587.835, 26.1685, 0.2818", "465.165, 587.902, 26.2247, 0.2878", "464.151, 587.568, 26.3111, 0.3002", "463.284, 587.301, 26.5719, 0.3168", "462.503, 587.128, 26.7959, 0.3784", "461.427, 586.973, 27.0849, 0.3432", "460.368, 586.586, 27.3049, 0.3174", "459.339, 586.309, 27.539, 0.3068", "458.255, 586.215, 27.6373, 0.335", "457.185, 585.936, 27.6735, 0.383", "456.332, 585.854, 27.6128, 0.4916", "455.323, 586.071, 27.5978, 0.6002", "454.56, 585.928, 27.4266, 0.5658", "453.607, 585.351, 27.3677, 0.5", "452.514, 585.143, 27.3767, 0.3894", "451.442, 585.251, 27.2996, 0.3564", "450.396, 585.472, 27.2656, 0.376", "449.339, 585.262, 27.3403, 0.4786", "448.287, 585.156, 27.3214, 0.5748", "447.473, 584.961, 27.2908, 0.5244", "446.615, 585.497, 27.2503, 0.3972", "445.952, 585.137, 27.1016, 0.3244", "445.151, 585.691, 27.0361, 0.3144", "444.256, 585.86, 26.9777, 0.374", "443.286, 585.783, 26.8824, 0.3352", "442.22, 585.728, 26.8617, 0.3022", "441.544, 585.468, 27.1475, 0.2786", "440.705, 585.725, 27.4324, 0.2822", "440.821, 586.3, 27.9234, 0.2888", "440.3, 586.737, 28.5726, 0.3006", "439.259, 586.424, 29.1211, 0.3248", "438.279, 586.871, 29.4784, 0.3574", "437.311, 586.993, 29.5674, 0.4792", "436.704, 587.608, 29.4832, 0.4056", "436.207, 587.828, 29.6108, 0.3498", "435.5, 587.902, 29.8738, 0.3144", "434.552, 588.05, 30.1361, 0.374", "433.673, 588.59, 30.3377, 0.335", "432.882, 589.383, 30.5144, 0.302", "432.181, 590.259, 30.6664, 0.2782", "431.882, 591.345, 30.7541, 0.2814", "431.199, 591.906, 30.8652, 0.2872", "430.319, 591.933, 30.9336, 0.299", "429.533, 592.478, 30.9686, 0.3146", "428.884, 593.192, 31.2262, 0.3744", "428.509, 594.139, 31.4082, 0.3354", "427.727, 594.652, 31.5938, 0.3028", "426.847, 594.848, 31.8749, 0.2796", "426.498, 595.573, 32.1314, 0.284", "426.48, 596.7, 32.3817, 0.2918", "425.742, 597.397, 32.5354, 0.3072", "424.807, 597.527, 32.8415, 0.3302", "424.184, 598.473, 33.0915, 0.4026", "423.733, 599.345, 33.2086, 0.3902", "423.072, 600.185, 33.4029, 0.3938", "422.296, 600.851, 33.5532, 0.4994", "421.867, 601.644, 33.7977, 0.4444", "422.376, 602.568, 33.8979, 0.4168", "422.46, 603.538, 33.9475, 0.4594", "422.022, 604.518, 34.069, 0.544", "421.506, 605.406, 34.3123, 0.4428", "421.397, 606.516, 34.5876, 0.365", "421.45, 607.617, 34.8774, 0.3734", "421.554, 608.638, 35.2066, 0.334", "421.382, 609.653, 35.4704, 0.3002", "420.436, 610.131, 35.635, 0.275", "419.498, 610.579, 35.777, 0.2752", "419.138, 611.63, 35.954, 0.276", "418.463, 612.508, 36.1838, 0.277", "417.814, 613.174, 36.5898, 0.2794", "417.018, 613.869, 37.0098, 0.2834", "416.246, 614.473, 37.3607, 0.291", "416.187, 615.56, 37.6096, 0.3062", "416.116, 616.698, 37.8361, 0.3278", "416.144, 617.808, 38.1072, 0.3984", "416.51, 618.839, 38.3608, 0.3824", "417.217, 619.366, 38.7598, 0.3792", "417.085, 619.764, 39.4447, 0.4724", "416.938, 620.506, 40.1282, 0.3936", "416.533, 621.215, 40.8769, 0.3258", "415.739, 621.981, 41.4968, 0.2754", "415.615, 623.05, 41.9854, 0.2762", "415.519, 623.709, 42.3332, 0.2776", "415.061, 624.346, 42.4273, 0.2802", "414.814, 625.061, 42.7773, 0.285", "414.814, 625.991, 43.0206, 0.294", "414.419, 626.454, 43.4972, 0.311", "414.311, 627.406, 43.8368, 0.3412", "413.839, 628.367, 44.1162, 0.4026", "413.319, 629.137, 44.322, 0.49", "413.435, 629.944, 44.6914, 0.7806", "413.565, 630.81, 45.0621, 0.697", "412.97, 631.42, 45.4726, 0.8164", "412.833, 631.967, 46.0732, 0.6202", "413.429, 632.609, 46.7373, 0.4532", "412.913, 633.419, 47.117, 0.3334", "412.386, 633.666, 47.0324, 0.3334", "411.834, 634.456, 46.7718, 0.3984", "411.688, 635.277, 46.5228, 0.4322", "411.84, 636.178, 45.92, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "478.777, 545.015, 28.7689, 0.8006", "478.542, 544.098, 29.157, 0.7946", "478.501, 542.969, 29.3415, 0.7036", "478.316, 541.841, 29.4941, 0.4644", "477.575, 540.975, 29.6148, 0.3634", "476.645, 540.31, 29.7077, 0.3438", "475.827, 539.511, 29.7794, 0.407", "475.077, 538.648, 29.8424, 0.5006", "474.57, 537.623, 29.9071, 0.7894", "474.419, 536.49, 29.9849, 0.7642", "474.413, 535.347, 30.0877, 0.693", "474.395, 534.24, 30.2876, 0.9098", "474.291, 533.104, 30.7392, 0.7636" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "478.777, 545.015, 28.7689, 0.8006", "479.151, 543.88, 30.0468, 0.4576", "479.917, 543.099, 30.5718, 0.4372", "480.74, 542.67, 31.1374, 0.4702", "481.668, 543.017, 31.7248, 0.4644", "482.674, 542.78, 32.1028, 0.5512", "483.648, 542.227, 32.3509, 0.6954", "484.711, 541.866, 32.7746, 0.5874" ],
    "parent" : "apic_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "442.023, 551.743, 24.7811, 0.451", "441.442, 552.335, 25.5135, 0.2288", "440.321, 552.445, 25.7484, 0.3404", "439.265, 552.871, 25.9721, 0.4168", "438.193, 553.246, 26.1509, 0.44", "437.057, 553.322, 26.2814, 0.3724", "435.917, 553.242, 26.3705, 0.3256", "434.784, 553.135, 26.4259, 0.3166", "433.672, 552.888, 26.4749, 0.378", "432.542, 552.836, 26.5159, 0.3426", "431.434, 552.998, 26.6522, 0.3158", "430.354, 553.202, 26.853, 0.305", "429.259, 553.387, 27.0253, 0.3256", "428.268, 553.908, 27.2527, 0.395", "427.318, 554.538, 27.4726, 0.3732", "426.261, 554.93, 27.673, 0.375", "425.137, 554.93, 27.8678, 0.4024", "424.053, 554.652, 28.1226, 0.5658", "423.005, 554.557, 28.4774, 0.5518", "422.119, 555.103, 28.7865, 0.6912", "421.459, 556.001, 29.0405, 0.6058", "420.704, 556.818, 29.2603, 0.5126", "419.786, 557.484, 29.456, 0.4836", "418.945, 558.223, 29.7038, 0.6452", "418.185, 558.962, 30.0686, 0.8162", "417.48, 559.72, 30.5474, 0.6134", "416.475, 560.131, 30.9571, 0.4722", "415.37, 560.303, 31.178, 0.4434", "414.31, 560.014, 31.3541, 0.6312", "413.188, 559.971, 31.432, 0.7232", "412.129, 560.211, 31.3317, 0.7658", "411.034, 560.362, 31.3132, 0.5512", "409.914, 560.221, 31.3278, 0.4338", "409.363, 560.536, 31.2273, 0.4572", "408.249, 560.675, 31.2161, 0.473", "407.43, 560.793, 31.439, 0.6356", "406.512, 561.209, 31.6814, 0.5192", "405.538, 561.361, 32.0314, 0.5022", "404.588, 561.542, 32.5898, 0.4208", "404.22, 561.553, 33.409, 0.5122", "403.271, 561.59, 34.1214, 0.4204", "402.265, 561.378, 34.6668, 0.3752", "401.298, 561.766, 34.937, 0.3688", "400.246, 562.14, 34.9866, 0.4402", "399.367, 562.18, 34.7578, 0.6256", "398.459, 562.33, 34.4784, 0.7128", "397.47, 561.968, 34.3252, 0.7466", "396.618, 561.814, 34.4299, 0.5144", "396.278, 561.256, 34.8888, 0.3706", "395.599, 561.053, 35.4536, 0.3134", "394.621, 561.018, 35.6933, 0.3362", "394.087, 561.503, 35.6485, 0.4406", "393.645, 561.704, 35.3402, 0.3304", "392.85, 561.818, 35.28, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "442.023, 551.743, 24.7811, 0.451", "441.479, 551.177, 24.6397, 0.3384", "440.638, 550.437, 24.6397, 0.2986", "439.679, 549.901, 24.568, 0.3198", "438.589, 549.621, 24.4681, 0.3542", "437.451, 549.57, 24.3992, 0.4434", "436.308, 549.519, 24.3676, 0.4842", "435.195, 549.273, 24.3771, 0.4802", "434.083, 549.189, 24.4788, 0.3994", "432.983, 549.421, 24.6396, 0.3776", "431.855, 549.591, 24.7638, 0.4026", "430.757, 549.792, 24.7729, 0.5888", "429.765, 550.326, 24.7336, 0.485", "428.725, 550.763, 24.7667, 0.4104", "427.618, 550.679, 24.8751, 0.389", "426.499, 550.566, 24.9108, 0.467", "425.442, 550.883, 25.0392, 0.728", "424.538, 551.326, 25.1367, 0.646", "423.964, 551.573, 25.5, 0.4954", "423.274, 552.161, 25.6211, 0.4374", "422.993, 552.464, 25.3028, 0.4002", "422.079, 552.888, 25.0737, 0.4482", "421.213, 553.567, 24.8384, 0.427", "420.111, 553.669, 24.7533, 0.4652", "419.173, 553.995, 24.7405, 0.6162", "418.084, 554.312, 24.7698, 0.736", "416.965, 554.497, 24.828, 0.5926", "416.067, 554.921, 24.9312, 0.5004", "415.333, 555.219, 25.0828, 0.6278", "414.43, 555.119, 25.2947, 0.5606", "413.971, 555.024, 25.6461, 0.5376", "413.32, 555.36, 25.8039, 0.6866", "412.471, 555.716, 25.7963, 0.72", "411.615, 556.287, 25.7621, 0.5878", "411.157, 556.883, 25.6868, 0.5978", "410.165, 556.942, 25.5288, 0.5232", "409.696, 557.647, 25.2148, 0.607", "409.181, 558.158, 24.7634, 0.5996", "408.387, 558.505, 24.2379, 0.4602", "407.377, 558.512, 23.7511, 0.3564", "406.589, 558.386, 23.4483, 0.3268", "405.625, 558.158, 23.3336, 0.3978", "404.608, 558.274, 23.4451, 0.3738", "403.49, 558.406, 23.4342, 0.3998", "402.52, 558.925, 23.2499, 0.3356", "401.547, 559.004, 22.8045, 0.3032", "400.534, 558.849, 22.2032, 0.2806", "399.505, 559.33, 21.7219, 0.2858", "398.557, 559.941, 21.3293, 0.2954", "397.473, 560.149, 20.9271, 0.3124", "396.354, 560.168, 20.5469, 0.348", "395.235, 560.2, 20.2435, 0.3946", "394.171, 560.522, 19.9536, 0.574", "393.207, 561.111, 19.6622, 0.4578", "392.142, 561.172, 19.4154, 0.3608", "391.024, 561.146, 19.1496, 0.293", "390.125, 561.723, 18.853, 0.31", "389.339, 562.549, 18.5775, 0.3348", "388.532, 563.359, 18.3358, 0.4126", "387.623, 564.049, 18.1062, 0.4022", "386.732, 564.684, 17.7875, 0.447", "386.134, 565.166, 17.541, 0.4484", "385.026, 565.159, 17.2411, 0.3896", "383.96, 565.255, 16.8332, 0.351", "383.051, 565.858, 16.4042, 0.3944", "382.049, 566.351, 16.1133, 0.374", "380.93, 566.489, 15.8708, 0.369", "379.807, 566.47, 15.6024, 0.429", "378.713, 566.255, 15.4607, 0.4324", "377.633, 566.063, 15.2583, 0.5038", "376.632, 566.049, 15.0174, 0.5504", "376.381, 565.144, 14.7896, 0.5948", "375.474, 564.602, 14.544, 0.6534", "374.751, 563.968, 14.2968, 0.6482", "374.308, 563.338, 14.0755, 0.5038", "373.534, 562.631, 13.8674, 0.4328", "372.929, 562.426, 13.741, 0.4896", "372.226, 562.394, 13.722, 0.5962", "371.676, 562.39, 13.5859, 0.5588", "370.912, 561.903, 13.3885, 0.4866", "370.656, 561.145, 13.0227, 0.3652", "369.975, 560.869, 12.5343, 0.3108", "369.416, 560.547, 12.1279, 0.2954", "368.556, 560.56, 11.9623, 0.308", "367.843, 560.56, 12.1379, 0.3616", "366.758, 560.451, 12.2646, 0.3134", "366.429, 560.043, 12.0194, 0.2542", "365.851, 559.53, 10.64, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "467.192, 573.911, 25.2753, 0.38", "466.966, 574.288, 25.4794, 0.4112", "466.065, 573.953, 25.6811, 0.3564", "465.261, 573.329, 25.8185, 0.3432", "464.719, 572.709, 25.7099, 0.349", "464.046, 572.029, 25.4347, 0.44", "463.303, 571.418, 25.295, 0.448", "462.463, 570.782, 25.0556, 0.5574", "461.493, 570.23, 24.7856, 0.5302", "460.634, 569.707, 24.5377, 0.4512", "459.863, 569.201, 24.5161, 0.4434", "458.889, 568.859, 24.3884, 0.4422", "458.433, 568.121, 24.0922, 0.3768", "458.145, 567.49, 24.0617, 0.3336", "457.556, 566.995, 23.8147, 0.3314", "457.043, 566.026, 23.571, 0.4066", "456.467, 565.154, 23.3744, 0.3896", "455.855, 564.3, 23.2905, 0.4302", "455.242, 563.62, 23.2897, 0.3866", "454.621, 562.729, 23.2378, 0.4232", "454.131, 561.993, 23.297, 0.3804", "453.698, 561.475, 23.2126, 0.3804", "452.995, 560.887, 23.0916, 0.4528", "452.359, 560.302, 23.1495, 0.4654", "451.352, 559.966, 23.0959, 0.6202", "450.543, 559.308, 23.053, 0.4962", "449.784, 558.732, 23.01, 0.4338", "449.014, 558.386, 23.0732, 0.4184", "448.279, 557.774, 23.0369, 0.5904", "447.512, 557.038, 23.1159, 0.6222", "447.075, 556.285, 23.1718, 0.7022", "446.646, 555.341, 23.1728, 0.5174", "446.574, 554.244, 23.227, 0.4196", "446.276, 553.243, 23.2368, 0.4224", "445.593, 552.535, 23.2575, 0.45", "445.24, 551.581, 23.4085, 0.3926", "444.999, 550.772, 23.5287, 0.3562", "444.483, 549.806, 23.6608, 0.4054", "444.087, 548.749, 23.7318, 0.3878", "443.944, 547.726, 23.857, 0.4264", "443.458, 546.74, 23.9463, 0.3798", "442.75, 546.062, 23.9729, 0.411", "442.3, 545.141, 24.0006, 0.356", "442.294, 544.316, 24.0401, 0.3412", "442.404, 543.308, 24.0217, 0.351", "442.335, 542.238, 24.0738, 0.4156", "442.156, 541.294, 24.0968, 0.5402", "441.566, 540.428, 24.0165, 0.7452", "441.122, 539.586, 24.0494, 0.5676", "440.339, 538.813, 24.0917, 0.4276", "439.686, 537.999, 24.1117, 0.3952", "439.211, 536.975, 24.109, 0.3748", "438.336, 536.422, 24.1527, 0.3716", "437.864, 536.076, 24.4797, 0.4278", "436.909, 535.844, 24.7758, 0.4598", "436.53, 534.88, 24.9609, 0.4116", "435.792, 534.18, 25.1834, 0.3866", "435.003, 533.414, 25.44, 0.4862", "434.197, 532.983, 25.7601, 0.4188", "433.614, 532.175, 25.9707, 0.375", "432.913, 531.767, 26.383, 0.3558", "432.136, 530.998, 26.6883, 0.4764", "431.265, 530.366, 26.8701, 0.4006", "430.576, 529.683, 26.8409, 0.339", "430.142, 528.96, 26.8015, 0.3002", "430.012, 528.253, 26.7034, 0.3214", "430.127, 527.22, 26.6452, 0.3636", "429.664, 526.408, 26.3982, 0.4306", "428.81, 525.81, 26.3235, 0.6068", "428.371, 524.897, 26.3026, 0.683", "427.715, 524.145, 26.3532, 0.667", "427.389, 523.125, 26.3593, 0.4852", "426.855, 522.364, 26.6053, 0.4274", "427.008, 521.708, 27.1236, 0.3398", "426.288, 520.892, 27.6802, 0.311", "425.562, 520.406, 28.327, 0.2946", "424.87, 520.257, 29.0886, 0.3132", "424.479, 519.346, 29.8161, 0.3406", "423.979, 518.422, 30.1871, 0.4246", "424.424, 518.118, 30.0762, 0.4184", "424.328, 517.325, 29.7903, 0.508", "423.72, 516.422, 29.5963, 0.412", "423.222, 515.515, 29.4904, 0.3604", "422.844, 514.483, 29.4888, 0.3394", "422.594, 513.539, 29.4736, 0.396", "422.321, 512.61, 29.2995, 0.492", "421.952, 511.572, 29.1276, 0.7156", "421.554, 510.662, 29.0777, 0.9074", "421.121, 509.763, 29.1427, 0.9738", "420.777, 508.863, 29.0265, 0.8982", "420.205, 508.105, 28.9999, 0.8068", "419.664, 507.777, 29.2286, 0.8596", "419.472, 506.887, 29.33, 1.022", "418.999, 505.983, 29.2334, 1.009", "418.593, 505.159, 28.9164, 0.909", "418.475, 504.347, 28.5272, 0.6336", "418.132, 503.345, 28.2383, 0.5612", "417.964, 502.327, 28.1137, 0.5864", "417.678, 501.32, 28.1904, 0.5468", "417.86, 500.589, 28.5144, 0.434", "417.5, 499.657, 28.7101, 0.4168", "417.513, 498.75, 28.6899, 0.367", "417.629, 497.945, 28.4379, 0.3626", "417.126, 497.012, 28.2156, 0.3858", "416.637, 496.174, 28.1019, 0.5042", "416.374, 495.095, 27.9835, 0.5862", "416.413, 494.271, 28.0272, 0.721", "416.513, 493.257, 28.1282, 0.5952", "416.302, 492.609, 28.3819, 0.585", "416.214, 492.163, 28.2156, 0.6256", "415.947, 491.132, 28.1016, 0.6438", "415.684, 490.319, 28.2262, 0.4956", "415.237, 489.461, 28.2654, 0.418", "414.401, 489.289, 28.357, 0.4604", "413.957, 488.509, 28.2506, 0.5508", "413.708, 487.671, 27.9744, 0.4322", "413.251, 486.899, 27.2222, 0.4576" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "467.192, 573.911, 25.2753, 0.38", "467.221, 573.333, 24.278, 0.4576", "467.025, 572.263, 23.8905, 0.3612", "466.524, 571.306, 23.4018, 0.3038", "465.999, 570.395, 22.7517, 0.2816", "466.008, 569.408, 21.9903, 0.2874", "466.289, 568.38, 21.1849, 0.2994", "466.104, 567.406, 20.3579, 0.3158", "465.189, 567.065, 19.5705, 0.3764", "464.416, 566.313, 18.9527, 0.3394", "464.201, 565.203, 18.5065, 0.31", "463.765, 564.152, 18.1655, 0.293", "462.817, 563.667, 17.8065, 0.3098", "461.786, 563.179, 17.5283, 0.3346", "461.206, 562.202, 17.3122, 0.4126", "461.36, 561.069, 17.1252, 0.4008", "461.203, 559.943, 16.9299, 0.4508", "460.789, 558.962, 16.6232, 0.4254", "460.539, 557.849, 16.3933, 0.492", "460.119, 556.808, 16.2655, 0.5216", "459.5, 555.879, 16.0877, 0.5748", "458.58, 555.255, 15.8637, 0.4528", "458.117, 554.308, 15.6273, 0.3834", "458.428, 553.209, 15.4662, 0.4072", "458.793, 552.134, 15.3766, 0.3986", "459.197, 551.099, 15.3642, 0.4104", "459.676, 550.084, 15.2916, 0.525", "459.929, 548.996, 15.1368, 0.5178", "460.325, 547.927, 14.9668, 0.4272", "460.767, 546.894, 14.7396, 0.4042", "461.109, 545.836, 14.465, 0.3442", "461.628, 544.816, 14.2425, 0.319", "461.975, 543.758, 14.0861, 0.3096", "461.784, 542.651, 13.9787, 0.3402", "461.302, 541.614, 13.8982, 0.3918", "460.888, 540.548, 13.8331, 0.5146", "460.439, 539.498, 13.7668, 0.6076", "459.859, 538.513, 13.6787, 0.7498", "459.236, 537.56, 13.5467, 0.7026", "458.575, 536.649, 13.339, 0.5216", "457.827, 535.804, 13.098, 0.4114", "456.921, 535.13, 12.8758, 0.4852", "455.995, 534.552, 12.6413, 0.4174", "455.593, 533.539, 12.4472, 0.3696", "455.275, 532.51, 12.3254, 0.3594", "454.5, 531.732, 12.173, 0.4172", "453.533, 531.128, 12.0438, 0.6102", "452.579, 530.533, 11.9092, 0.5504", "451.712, 529.88, 11.8501, 0.4084", "450.815, 529.888, 11.9692, 0.2966", "449.988, 530.624, 12.165, 0.2684", "449.141, 531.309, 12.2765, 0.2626", "448.435, 530.871, 12.2312, 0.2542", "447.799, 529.991, 12.3268, 0.2288", "447.751, 528.928, 12.8946, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "446.395, 578.975, 27.2446, 0.751", "445.826, 579.318, 26.7229, 0.5688", "444.932, 579.994, 26.4989, 0.4766", "444.078, 580.749, 26.2825, 0.4872", "443.182, 581.416, 26.0307, 0.7678", "442.302, 582.122, 25.8015, 0.7082", "441.465, 582.881, 25.6933, 0.667", "441.323, 583.218, 25.7098, 0.483", "440.38, 583.346, 25.6332, 0.4352", "439.536, 583.544, 25.5368, 0.524", "438.719, 583.802, 25.5517, 0.5144", "437.756, 584.231, 25.6255, 0.4274", "436.97, 584.686, 25.3243, 0.3732" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "446.395, 578.975, 27.2446, 0.751", "445.694, 579.176, 27.597, 0.2288", "444.676, 579.223, 27.6664, 0.405", "443.845, 579.474, 27.8765, 0.3872", "442.967, 580.001, 28.054, 0.4244", "442.006, 580.294, 28.2738, 0.3804", "440.942, 580.423, 28.5144, 0.3894", "440.161, 580.572, 28.9766, 0.4258", "439.398, 579.906, 29.3815, 0.6264", "438.384, 579.628, 29.6349, 0.58", "437.843, 578.869, 29.9258, 0.4656", "436.819, 579.052, 30.0874, 0.3922", "435.82, 579.247, 30.2224, 0.4974", "434.942, 579.102, 30.5603, 0.4348", "434.007, 579.064, 31.0453, 0.4278", "433.114, 578.435, 31.5151, 0.3406", "432.059, 578.068, 31.8444, 0.3126", "431.089, 577.563, 32.1322, 0.2976", "430.425, 577.593, 32.1605, 0.3182", "429.755, 576.871, 32.2823, 0.3506", "428.878, 576.462, 32.249, 0.44", "428.076, 576.268, 32.1465, 0.4614", "427.139, 575.823, 31.9931, 0.5164", "426.364, 575.368, 32.0737, 0.7744", "425.568, 574.796, 32.2403, 0.7218", "424.886, 574.47, 32.5013, 0.6874", "424.104, 573.953, 32.6768, 0.5444", "423.845, 573.198, 33.0716, 0.4352", "423.128, 572.645, 33.2875, 0.3896", "422.243, 572.527, 33.2072, 0.4608", "421.594, 572.158, 33.012, 0.5222", "420.731, 571.55, 32.9638, 0.5212", "420.195, 570.592, 32.923, 0.618", "419.419, 570.221, 32.8432, 0.7786", "418.755, 569.787, 32.7342, 0.9388", "417.87, 569.075, 32.7174, 0.987", "416.94, 568.686, 32.8628, 0.9118", "416.016, 568.227, 32.893, 0.8864", "414.967, 568.125, 32.9672, 0.7432", "413.948, 567.915, 33.245, 0.7132", "412.878, 568.146, 33.6249, 0.6598", "411.872, 567.907, 34.0628, 0.55", "411.322, 567.424, 34.6934, 0.3982", "410.348, 567.077, 35.1985, 0.3244", "409.663, 566.728, 35.3388, 0.3212", "408.979, 566.192, 35.3265, 0.3554", "408.304, 565.605, 35.4491, 0.4518", "407.706, 564.873, 35.5659, 0.4694", "407.176, 564.005, 35.5838, 0.5994", "406.586, 563.331, 35.8098, 0.5968", "406.645, 562.552, 35.9584, 0.6296", "406.393, 561.543, 36.2746, 0.508", "406.039, 560.781, 36.4246, 0.4824", "406.12, 559.851, 36.7836, 0.608", "405.9, 559.045, 37.38, 0.6864", "405.421, 558.858, 38.0929, 0.6668", "404.448, 558.73, 38.7612, 0.5168", "403.499, 558.988, 39.2017, 0.3304", "403.146, 559.874, 40.04, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "474.291, 533.104, 30.7392, 0.7636", "474.029, 532.365, 30.5228, 0.8628", "473.617, 531.317, 30.401, 0.6232", "473.116, 530.3, 30.2952, 0.6338", "472.509, 529.337, 30.27, 0.5042", "471.87, 528.411, 30.357, 0.5296", "471.201, 527.504, 30.5124, 0.6622", "470.588, 526.545, 30.6712, 0.9502", "470.121, 525.503, 30.8193, 1.0492", "469.881, 524.398, 30.9616, 0.8284", "469.84, 523.256, 31.0932, 0.7816", "469.832, 522.114, 31.199, 0.993", "469.777, 520.973, 31.309, 1.0808", "469.519, 519.871, 31.4678, 1.118", "469.152, 518.934, 31.7878, 0.8828", "468.628, 517.923, 32.1107, 1.0068", "468.041, 516.979, 32.4906, 1.0342", "467.289, 516.124, 32.8507, 0.9252", "466.5, 515.294, 33.1565, 0.582", "465.779, 514.411, 33.4216, 0.4046", "465.235, 513.406, 33.6734, 0.3636", "464.703, 512.415, 33.987, 0.4908", "464.096, 511.502, 34.3888, 0.427", "463.426, 510.656, 34.8701, 0.3904", "462.582, 509.97, 35.383, 0.3842", "461.747, 509.195, 35.8016, 0.5296", "460.983, 508.346, 36.0968, 0.4954", "460.303, 507.426, 36.2824, 0.5342", "459.561, 506.555, 36.3824, 0.5678", "458.794, 505.709, 36.4269, 0.5882", "458.123, 504.782, 36.4454, 0.8292", "457.457, 503.853, 36.4633, 0.7472", "456.913, 502.85, 36.4882, 0.8728", "456.496, 501.784, 36.5238, 0.9036", "456.056, 500.729, 36.5742, 0.7982", "455.669, 499.652, 36.6425, 0.9326", "455.195, 498.617, 36.7338, 0.9544", "454.544, 497.684, 36.8668, 0.7264", "454.012, 496.692, 37.0821, 0.4612", "453.397, 495.748, 37.3495, 0.3486", "452.731, 494.818, 37.5984, 0.3606", "452.187, 493.828, 37.8512, 0.4546", "451.871, 492.755, 38.1492, 0.509", "451.457, 491.721, 38.428, 0.5048", "450.689, 490.878, 38.6534, 0.5502", "449.887, 490.087, 38.8741, 0.8328", "449.219, 489.192, 39.0855, 0.8532", "448.665, 488.192, 39.1938, 0.8168", "448.154, 487.187, 39.1751, 0.6528", "447.654, 486.192, 39.0578, 0.8178", "446.97, 485.278, 38.9458, 0.6768", "446.241, 484.398, 38.8553, 0.753", "445.571, 483.472, 38.7993, 0.6288", "444.926, 482.53, 38.7898, 0.5428", "444.379, 481.526, 38.8256, 0.5974", "443.811, 480.533, 38.8982, 0.5766", "443.224, 479.551, 38.9981, 0.672", "442.588, 478.605, 39.1339, 0.8852", "441.905, 477.714, 39.3431, 0.8764", "441.303, 476.794, 39.6519, 0.7614", "440.651, 475.886, 39.9944, 0.7976", "439.931, 475.009, 40.2808, 0.5698", "439.082, 474.301, 40.4992, 0.4356", "438.267, 473.53, 40.6638, 0.389", "437.529, 472.656, 40.7551, 0.4666", "436.652, 471.929, 40.7896, 0.7274", "435.814, 471.153, 40.7896, 0.6438", "435.008, 470.34, 40.7702, 0.4962", "434.237, 469.496, 40.7313, 0.4166", "433.64, 468.539, 40.6717, 0.47", "433.285, 467.453, 40.591, 0.7382", "433.061, 466.333, 40.4835, 0.6426", "432.917, 465.216, 40.3094, 0.5974", "432.631, 464.147, 40.061, 0.788", "432.244, 463.104, 39.769, 0.7246", "432.016, 462.008, 39.4915, 0.8004", "431.725, 460.913, 39.3039, 0.9166", "431.215, 459.894, 39.2272, 0.793", "430.528, 458.987, 39.2624, 0.8368", "429.816, 458.127, 39.4411, 0.966", "429.069, 457.349, 39.7684, 0.971", "428.283, 456.569, 40.1358, 0.7478", "427.594, 455.662, 40.4379, 0.7766", "426.993, 454.69, 40.6552, 0.7386", "426.449, 453.684, 40.796, 0.6544", "425.928, 452.665, 40.871, 0.5642", "425.364, 451.671, 40.9007, 0.5366", "424.751, 450.705, 40.9136, 0.4942", "424.106, 449.76, 40.9268, 0.6018", "423.433, 448.835, 40.9452, 0.583", "422.69, 447.969, 40.9718, 0.6914", "421.909, 447.131, 41.0094, 0.8852", "421.232, 446.216, 41.0598, 1.0508", "420.767, 445.18, 41.1258, 0.9238", "420.448, 444.084, 41.2219, 0.9662", "420.145, 443.009, 41.3966, 0.8406", "419.84, 441.925, 41.5923, 0.683", "419.626, 440.804, 41.7474, 0.7114", "419.274, 439.726, 41.8572, 0.8092", "418.855, 438.662, 41.9247, 0.771", "418.441, 437.596, 41.956, 0.624", "418.048, 436.522, 41.9605, 0.4912", "417.839, 435.405, 41.9496, 0.4808", "417.584, 434.312, 41.8902, 0.6908", "417.386, 433.198, 41.8494, 0.653", "417.1, 432.114, 41.9104, 0.8266", "416.733, 431.039, 42.0171, 0.651", "416.352, 429.96, 42.1361, 0.6822", "415.843, 428.943, 42.2831, 0.6088", "415.161, 428.072, 42.5079, 0.653", "414.435, 427.206, 42.7196, 0.546", "413.747, 426.293, 42.87, 0.5786", "413.009, 425.419, 42.9713, 0.6604", "412.336, 424.497, 43.0282, 0.7102", "411.743, 423.528, 43.0153, 0.6096", "411.164, 422.549, 43.0086, 0.6748", "410.586, 421.566, 43.038, 0.7156", "409.989, 420.594, 43.0578, 0.722", "409.34, 419.672, 43.08, 0.613", "408.902, 418.629, 43.1315, 0.5422", "408.815, 417.505, 43.197, 0.4574", "409.093, 416.406, 43.297, 0.534", "409.571, 415.371, 43.4246, 0.4554", "409.908, 414.329, 43.6556, 0.467", "410.428, 413.327, 43.8782, 0.4074", "410.957, 412.314, 44.0521, 0.464", "411.253, 411.211, 44.182, 0.4454", "411.04, 410.092, 44.2733, 0.5528", "410.95, 408.953, 44.3369, 0.5206", "410.59, 407.868, 44.385, 0.4384", "410.116, 406.827, 44.4444, 0.3944", "409.416, 405.923, 44.5253, 0.4752", "408.985, 404.866, 44.6351, 0.5226", "408.471, 403.846, 44.7854, 0.6498", "407.932, 402.862, 45.0344, 0.9236", "407.589, 401.807, 45.3631, 0.7886", "406.827, 400.974, 45.7069, 0.6846", "405.866, 400.455, 46.1093, 0.4688", "405.312, 399.503, 46.471, 0.408", "405.494, 398.414, 46.8541, 0.4786", "405.436, 397.323, 47.1909, 0.405", "405.035, 396.316, 47.3463, 0.3468", "404.306, 395.478, 47.4012, 0.3158", "403.582, 394.623, 47.5124, 0.345", "403.015, 393.666, 47.6963, 0.4332", "402.568, 392.636, 47.9156, 0.434", "402.246, 391.592, 48.2213, 0.5364", "401.964, 390.525, 48.5044, 0.4668", "401.599, 389.452, 48.6536, 0.4524", "401.2, 388.381, 48.7175, 0.5566", "400.77, 387.322, 48.7295, 0.5698", "400.351, 386.258, 48.7071, 0.5552", "399.952, 385.186, 48.6646, 0.4876", "399.398, 384.196, 48.6254, 0.561", "398.743, 383.261, 48.5892, 0.646", "398.159, 382.297, 48.5106, 0.8242", "397.535, 381.363, 48.4098, 0.825", "396.962, 380.395, 48.3913, 0.8228", "396.536, 379.356, 48.487, 0.6102", "396.077, 378.321, 48.6343, 0.5408", "395.506, 377.351, 48.8228, 0.6656", "394.82, 376.457, 49.0325, 0.8126", "394.052, 375.619, 49.1655, 0.8076", "393.3, 374.787, 49.1562, 0.5432", "392.729, 373.827, 49.0756, 0.3772", "392.175, 372.832, 49.0025, 0.3256", "391.548, 371.874, 48.9493, 0.3588", "390.905, 370.928, 48.9272, 0.4818", "390.557, 369.876, 48.9538, 0.4112", "390.581, 368.755, 49.0708, 0.3584", "390.184, 367.782, 49.21, 0.3374", "389.344, 367.036, 49.2831, 0.3808", "388.699, 366.141, 49.3833, 0.523", "388.27, 365.107, 49.5673, 0.4842", "387.841, 364.054, 49.7599, 0.5094", "387.336, 363.029, 49.9324, 0.5424", "386.884, 361.979, 50.1035, 0.4386", "386.408, 360.956, 50.3236, 0.3636", "385.907, 359.948, 50.5803, 0.34", "385.37, 358.944, 50.8043, 0.4222", "384.74, 357.991, 50.9922, 0.42", "384.115, 357.033, 51.1636, 0.481", "383.532, 356.075, 51.371, 0.5072", "383.022, 355.063, 51.5175, 0.5176", "382.46, 354.079, 51.665, 0.4962", "381.857, 353.113, 51.8168, 0.4242", "381.381, 352.076, 51.9355, 0.448", "381.04, 350.985, 52.0167, 0.4144", "380.418, 350.038, 52.0677, 0.5004", "379.807, 349.071, 52.1041, 0.3982", "379.357, 348.022, 52.1279, 0.3348", "378.752, 347.055, 52.1483, 0.2918", "378.09, 346.123, 52.1752, 0.3076", "377.455, 345.171, 52.2141, 0.3302", "377.023, 344.115, 52.269, 0.4032", "376.569, 343.066, 52.341, 0.3898", "376.243, 341.971, 52.4342, 0.4004", "375.94, 340.879, 52.5904, 0.4768", "375.702, 339.799, 52.8335, 0.5714", "375.164, 338.828, 53.1143, 0.5176", "374.606, 337.851, 53.27, 0.3848", "374.104, 336.826, 53.3786, 0.3004", "373.537, 335.91, 53.5881, 0.2752", "373.466, 335.485, 53.3814, 0.2758", "373.485, 335.133, 53.3229, 0.2766", "373.287, 334.304, 53.5273, 0.2784", "373.294, 333.198, 53.8269, 0.2818", "373.287, 332.094, 54.1394, 0.288", "372.717, 331.246, 54.4264, 0.2994", "372.111, 330.616, 54.8162, 0.3214", "371.58, 329.843, 54.9198, 0.3572", "371.185, 328.89, 54.9682, 0.4492", "370.643, 327.939, 55.0631, 0.4946", "370.03, 327.123, 55.081, 0.499", "369.407, 326.339, 55.0248, 0.4382", "369.409, 325.397, 55.0077, 0.4306", "369.385, 324.49, 54.9578, 0.593", "368.97, 323.537, 55.0435, 0.4944", "368.826, 322.578, 55.1544, 0.4232", "368.385, 321.757, 55.2863, 0.434", "367.853, 320.899, 55.3095, 0.4478", "367.605, 319.833, 55.435, 0.5032", "367.081, 318.955, 55.538, 0.6896", "366.391, 318.456, 55.7488, 0.858", "366.276, 317.682, 56.1557, 0.8876", "365.851, 316.878, 56.3508, 0.7122", "365.509, 315.912, 56.5074, 0.588", "365.258, 315.725, 56.7658, 0.5272", "364.65, 314.926, 56.8753, 0.5072", "364.144, 314.075, 56.9229, 0.476", "363.672, 313.086, 56.957, 0.392", "363.524, 311.963, 57.0332, 0.3626", "363.329, 310.912, 56.9982, 0.3802", "362.639, 310.169, 56.9775, 0.5214", "362.069, 309.223, 56.9176, 0.485", "361.397, 308.325, 56.8478, 0.492", "360.747, 307.539, 56.7053, 0.6024", "360.342, 306.649, 56.7434, 0.79", "359.563, 306.14, 56.6882, 0.9926", "359.056, 305.334, 56.8282, 0.9296", "358.56, 304.623, 56.9299, 0.8822", "357.775, 303.901, 57.1533, 0.6866", "357.225, 303.1, 57.531, 0.618", "356.713, 302.525, 57.6761, 0.4372", "355.965, 301.685, 57.7534, 0.36", "355.369, 300.734, 57.8684, 0.338", "354.764, 299.934, 58.1235, 0.3946", "353.989, 299.15, 58.326, 0.4836", "353.459, 298.244, 58.4811, 0.7292", "352.778, 297.502, 58.8557, 0.7932", "352.22, 296.685, 59.3788, 0.75", "351.767, 295.667, 59.7747, 0.7716", "351.095, 294.888, 59.9306, 0.7752", "350.884, 293.862, 60.1423, 0.957", "350.547, 293.001, 60.5192, 0.9026", "349.879, 292.143, 60.8731, 0.8718", "349.621, 291.039, 61.1397, 0.7032", "349.071, 290.21, 61.318, 0.4734", "348.461, 289.453, 61.5348, 0.3326", "348.119, 288.491, 61.6062, 0.2876", "348.015, 287.389, 61.7411, 0.3", "347.89, 286.297, 61.9497, 0.3164", "347.776, 285.456, 62.1527, 0.378", "347.961, 284.485, 62.2714, 0.3422", "348.084, 283.492, 62.5131, 0.3156", "347.432, 282.613, 62.6004, 0.303", "346.704, 281.941, 62.634, 0.3292", "346.101, 281.016, 62.62, 0.3654", "345.808, 280.215, 62.606, 0.4938", "345.394, 279.428, 62.6273, 0.4342", "345.246, 278.801, 62.902, 0.3956", "344.695, 277.935, 63.0375, 0.4324", "344.354, 276.885, 63.1896, 0.4326", "343.581, 276.201, 63.2397, 0.5354", "343.005, 275.241, 63.3195, 0.4576", "342.498, 274.253, 63.4388, 0.4702", "342.17, 273.351, 63.4774, 0.4208", "341.853, 272.397, 63.6908, 0.4528", "341.336, 271.659, 64.0545, 0.5978", "340.284, 271.321, 64.3552, 0.679", "339.628, 270.413, 64.5924, 0.5988", "339.569, 269.362, 64.7937, 0.6536", "338.967, 268.634, 64.9001, 0.6832", "338.63, 267.757, 65.0835, 0.6302", "338.395, 266.76, 65.4273, 0.5976", "338.176, 265.798, 65.6678, 0.4462", "337.808, 264.853, 65.8325, 0.3784", "337.579, 263.971, 66.1058, 0.3626", "337.176, 262.968, 66.4513, 0.4884", "336.454, 262.177, 66.8007, 0.4244", "335.642, 261.554, 67.1829, 0.378", "335.137, 260.62, 67.5948, 0.3986", "334.75, 259.553, 67.9664, 0.3754", "334.059, 258.694, 68.3245, 0.4024", "333.414, 257.861, 68.7344, 0.3406", "332.815, 256.977, 69.0718, 0.3126", "332.592, 255.864, 69.361, 0.2988", "332.218, 254.998, 69.6139, 0.3142", "332.047, 254.667, 69.89, 0.3734", "331.535, 253.673, 70.2481, 0.3338", "331.023, 252.68, 70.6773, 0.3", "330.511, 251.687, 71.1746, 0.2746", "329.999, 250.694, 71.717, 0.2746", "329.487, 249.701, 72.2834, 0.2746", "328.975, 248.708, 72.8518, 0.2746", "328.463, 247.715, 73.4059, 0.2746", "327.952, 246.722, 73.9407, 0.2746", "327.439, 245.729, 74.45, 0.2746", "326.928, 244.735, 74.9291, 0.2746", "326.498, 243.718, 75.3606, 0.2746", "326.447, 242.581, 75.6762, 0.2746", "325.922, 241.58, 75.9066, 0.2746", "325.827, 240.439, 76.0833, 0.2746", "325.811, 239.296, 76.2345, 0.2746", "325.808, 238.152, 76.3832, 0.2746", "325.358, 237.157, 76.5918, 0.2746", "324.878, 236.292, 76.904, 0.2746", "324.656, 235.305, 77.3497, 0.2746", "323.905, 234.482, 77.7714, 0.2748", "323.014, 233.795, 78.1497, 0.2748", "322.112, 233.389, 78.6134, 0.2752", "321.693, 232.384, 79.0558, 0.2758", "321.628, 231.266, 79.4979, 0.2766", "321.377, 230.184, 79.891, 0.2782", "320.966, 229.507, 80.4538, 0.2814", "320.734, 228.405, 80.9082, 0.287", "319.93, 227.619, 81.2672, 0.2988", "319.385, 226.633, 81.5654, 0.3142", "319.29, 225.615, 81.8885, 0.3734", "319.29, 224.739, 82.2914, 0.3338", "319.29, 223.607, 82.6302, 0.3", "319.29, 222.497, 82.9928, 0.2746", "319.29, 221.41, 83.3801, 0.2746", "319.159, 220.276, 83.669, 0.2746", "318.96, 219.149, 83.8608, 0.2748", "318.994, 218.014, 83.9964, 0.275", "319.191, 216.892, 84.0946, 0.2752", "319.727, 215.94, 84.138, 0.2758", "320.32, 215.166, 84.1436, 0.2768", "320.32, 214.022, 84.124, 0.2786", "320.389, 212.882, 84.0846, 0.2826", "320.799, 211.847, 83.9902, 0.288", "321.45, 210.908, 83.8975, 0.305", "321.693, 209.814, 83.8113, 0.305", "322.15, 208.894, 83.44, 0.4576" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "474.291, 533.104, 30.7392, 0.7636", "474.724, 532.756, 30.5262, 0.2288", "475.723, 532.236, 30.4035, 0.4014", "476.513, 531.841, 30.4072, 0.3804", "477.261, 531.23, 30.3806, 0.4116", "477.849, 530.703, 30.4702, 0.3588", "478.433, 530.167, 30.4049, 0.341", "479.365, 530.436, 30.3433, 0.376", "479.834, 530.243, 30.6284, 0.3384", "480.584, 530.088, 30.7829, 0.3086", "481.544, 529.611, 30.8781, 0.2904", "482.609, 529.558, 30.945, 0.3048", "483.612, 529.573, 31.1615, 0.3254", "484.418, 529.791, 31.6397, 0.3942", "485.222, 529.985, 32.3274, 0.3734", "485.943, 529.674, 32.8874, 0.369", "486.983, 529.817, 33.5426, 0.4228", "487.21, 529.702, 34.3025, 0.451", "487.102, 528.635, 34.9734, 0.394", "487.234, 527.763, 35.3665, 0.359", "487.28, 526.948, 35.9181, 0.4104", "487.993, 526.115, 36.4109, 0.3972", "487.916, 525.057, 36.8326, 0.4442", "488.538, 524.294, 37.1095, 0.4126", "489.32, 523.703, 37.5234, 0.4718", "489.736, 522.972, 37.9308, 0.4658", "489.465, 521.995, 38.3051, 0.5612", "489.518, 520.982, 38.5034, 0.6778", "489.624, 519.914, 38.5904, 0.731", "489.789, 519.37, 38.8646, 0.7026", "490.466, 518.684, 39.1471, 0.582", "491.212, 518.015, 39.4223, 0.459", "491.741, 517.17, 39.5794, 0.4294", "492.426, 516.414, 39.8608, 0.555", "493.124, 515.576, 40.0341, 0.5978", "493.761, 514.846, 40.2388, 0.4566", "494.445, 514.075, 40.5, 0.3498", "495.324, 513.618, 40.7711, 0.3144", "495.947, 512.886, 41.0701, 0.374", "496.138, 511.875, 41.3927, 0.335", "496.501, 510.917, 41.6735, 0.302", "497.306, 510.295, 41.813, 0.2782", "498.18, 509.957, 42.0627, 0.2814", "498.116, 508.889, 42.2722, 0.287", "498.408, 507.791, 42.4572, 0.2986", "498.562, 506.664, 42.6188, 0.314", "498.659, 505.877, 42.8798, 0.373", "498.615, 504.909, 43.1855, 0.333", "499.003, 503.879, 43.4902, 0.2982", "498.817, 502.817, 43.8035, 0.2712", "499.356, 501.994, 44.212, 0.2684", "499.041, 501.556, 44.6597, 0.2626", "499.032, 500.661, 44.8451, 0.2542", "498.898, 499.762, 45.103, 0.2288", "499.356, 499.47, 46.2, 0.2288" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "484.711, 541.866, 32.7746, 0.5874", "485.55, 541.609, 32.4282, 0.607", "486.662, 541.381, 32.2692, 0.4908", "487.788, 541.35, 32.179, 0.5582", "488.914, 541.407, 32.149, 0.453", "489.953, 541.764, 32.0116, 0.4628", "491.017, 542.113, 31.7892, 0.4014", "492.109, 542.24, 31.4846, 0.445", "493.245, 542.233, 31.192, 0.4452", "494.382, 542.108, 30.94, 0.3824", "495.394, 541.599, 30.7367, 0.3436", "496.498, 541.319, 30.588, 0.351", "497.6, 541.017, 30.4601, 0.4374", "498.485, 540.392, 30.2417, 0.473", "498.838, 539.322, 30.044, 0.4596", "499.73, 538.63, 29.8928, 0.362", "500.865, 538.586, 29.8245, 0.3048", "502.0, 538.527, 29.7276, 0.2834", "503.053, 538.106, 29.6394, 0.2908", "503.636, 537.121, 29.5672, 0.3056", "504.152, 536.109, 29.4851, 0.3268", "505.122, 535.506, 29.3857, 0.3982", "506.189, 535.109, 29.248, 0.374", "507.083, 534.476, 29.0192, 0.4002", "507.571, 533.445, 28.7904, 0.3366", "508.09, 532.426, 28.5984, 0.3048", "508.689, 531.453, 28.4332, 0.2834", "509.18, 530.433, 28.2624, 0.291", "509.917, 529.606, 28.0437, 0.3062", "510.69, 528.773, 27.927, 0.3278", "511.539, 528.038, 27.8812, 0.3986", "512.445, 527.371, 27.7537, 0.3818", "513.251, 526.59, 27.5815, 0.3836", "513.75, 525.578, 27.43, 0.4544", "513.91, 524.451, 27.2896, 0.4878", "514.371, 523.421, 27.135, 0.5684", "515.174, 522.627, 26.9436, 0.8542", "516.09, 522.016, 26.692, 0.9502", "517.113, 521.507, 26.477, 0.7184", "517.99, 520.828, 26.2787, 0.4468", "518.446, 519.792, 26.1, 0.3208", "519.034, 519.019, 26.0054, 0.3134", "519.644, 518.516, 25.8695, 0.3454", "519.527, 517.475, 25.5857, 0.4118", "520.226, 516.606, 25.2179, 0.5022", "520.981, 515.794, 24.8301, 0.8264", "521.389, 514.828, 24.316, 0.6672", "522.075, 513.95, 23.8723, 0.6318", "522.294, 513.315, 23.417, 0.4478", "522.352, 512.804, 23.0176, 0.4532", "523.012, 511.871, 22.6659, 0.3824", "523.573, 510.909, 22.2826, 0.4156", "524.305, 510.05, 21.9055, 0.3648", "525.189, 509.333, 21.5392, 0.3578", "526.268, 509.071, 21.1433, 0.3772", "527.376, 508.93, 20.8728, 0.4874", "528.241, 508.281, 20.5145, 0.5622", "528.161, 507.254, 20.0393, 0.6398", "528.383, 506.25, 19.5443, 0.623", "529.038, 505.341, 19.115, 0.4562", "529.38, 504.27, 18.8215, 0.3482", "529.611, 503.17, 18.6205, 0.3164", "530.026, 502.111, 18.4292, 0.3542", "530.535, 501.096, 18.2474, 0.4126", "531.104, 500.107, 18.0741, 0.5768", "531.528, 499.089, 17.8254, 0.6092", "530.846, 498.138, 17.4298, 0.6552", "530.299, 497.451, 17.0433, 0.6212", "529.475, 496.954, 16.7927, 0.6008", "528.757, 496.565, 16.7584, 0.5862", "528.942, 495.575, 16.5848, 0.6734", "529.129, 494.579, 16.503, 0.51", "529.675, 493.992, 16.3396, 0.4126", "530.162, 493.09, 16.0331, 0.3782", "529.909, 492.705, 15.5109, 0.5186", "529.23, 492.709, 14.9139, 0.4752", "528.758, 491.998, 14.5508, 0.4972", "528.56, 491.007, 14.1601, 0.4972", "528.082, 490.433, 13.8912, 0.466", "527.723, 489.601, 13.8183, 0.5592", "527.155, 488.946, 14.28, 0.4576" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "484.711, 541.866, 32.7746, 0.5874", "484.384, 542.424, 33.8842, 0.2288", "485.125, 543.249, 34.2992, 0.327", "485.794, 543.37, 34.5999, 0.3612", "485.976, 543.065, 35.18, 0.4864", "486.724, 542.599, 35.8333, 0.4204", "487.628, 542.749, 36.2202, 0.3704", "488.488, 542.714, 36.407, 0.3834", "488.871, 543.346, 36.4515, 0.3524", "489.449, 543.972, 36.7408, 0.3354", "489.518, 543.627, 37.3173, 0.3352", "489.047, 543.824, 38.1259, 0.4118", "488.059, 544.263, 38.7979, 0.4072", "487.756, 544.751, 39.2064, 0.4264", "486.74, 544.881, 39.5422, 0.5546", "486.481, 544.915, 40.112, 0.5732", "486.543, 545.503, 40.9307, 0.527", "485.948, 546.044, 41.8205, 0.6036", "485.498, 546.949, 42.6364, 0.643", "485.382, 548.07, 43.37, 0.53", "485.285, 549.201, 43.965, 0.5358", "485.721, 550.185, 44.4494, 0.4168", "486.143, 550.937, 44.737, 0.3684", "485.895, 551.995, 45.0531, 0.3576", "485.885, 552.046, 45.7811, 0.4128", "485.67, 552.979, 46.4716, 0.6074", "485.421, 553.972, 47.0408, 0.5202", "484.847, 554.266, 47.8304, 0.4746", "484.01, 554.698, 48.3932, 0.5134", "483.34, 555.425, 49.0048, 0.6708", "483.051, 556.197, 49.331, 0.5484", "482.882, 556.683, 49.9705, 0.5016", "483.207, 557.337, 50.7679, 0.457", "482.534, 557.905, 51.5889, 0.3988", "481.693, 558.043, 52.5193, 0.3986", "481.116, 558.688, 53.4926, 0.3334", "481.798, 559.462, 54.4474, 0.299", "482.528, 560.251, 55.2698, 0.2728", "483.242, 560.922, 55.9829, 0.2712", "483.753, 560.703, 56.8002, 0.2684", "484.317, 561.596, 57.4501, 0.2626", "484.032, 562.517, 58.1708, 0.2542", "483.473, 562.52, 59.0839, 0.2288", "483.226, 563.42, 61.04, 0.2288" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "436.97, 584.686, 25.3243, 0.3732", "435.64, 585.163, 26.0079, 0.4382", "434.664, 585.609, 26.3156, 0.443", "433.643, 585.88, 26.7227, 0.5542", "432.537, 585.98, 27.0626, 0.4946", "431.424, 585.769, 27.2679, 0.5294", "430.289, 585.663, 27.3885, 0.5748", "429.182, 585.391, 27.4408, 0.5244", "428.052, 585.222, 27.4439, 0.3974", "426.944, 584.943, 27.421, 0.3236", "425.816, 584.76, 27.3993, 0.3178", "424.726, 584.422, 27.3817, 0.3564", "423.688, 583.941, 27.3577, 0.4178", "422.652, 583.458, 27.3235, 0.581", "421.578, 583.067, 27.2783, 0.6454", "420.443, 582.985, 27.2217, 0.5468", "419.3, 582.971, 27.139, 0.507", "418.193, 582.909, 26.9637, 0.654", "417.122, 582.541, 26.7867, 0.772", "416.267, 581.795, 26.6728, 0.823", "415.303, 581.198, 26.6402, 0.8178", "414.184, 581.288, 26.5558, 0.8362", "413.079, 581.584, 26.5133, 0.7326", "411.937, 581.605, 26.5212, 0.5228", "410.796, 581.57, 26.5518, 0.4494", "409.703, 581.349, 26.6365, 0.3828", "408.617, 581.586, 26.6077, 0.38", "407.485, 581.486, 26.6007, 0.474", "406.449, 581.344, 26.6408, 0.3966", "405.525, 581.907, 26.5599, 0.3316", "404.406, 582.087, 26.4798, 0.2858", "403.303, 582.229, 26.3772, 0.2956", "402.324, 582.724, 26.3803, 0.313", "401.305, 583.04, 26.2361, 0.3478", "400.221, 583.35, 26.0331, 0.4008", "399.088, 583.466, 25.8842, 0.5552", "397.993, 583.652, 25.657, 0.5684", "396.874, 583.882, 25.4624, 0.5472", "395.733, 583.833, 25.31, 0.4976", "394.642, 583.49, 25.2239, 0.4582", "393.704, 582.866, 25.2311, 0.3594", "392.91, 582.127, 25.1179, 0.3002", "391.882, 582.114, 24.8936, 0.275", "390.817, 582.193, 24.8403, 0.2754", "389.827, 581.669, 24.8808, 0.2762", "388.822, 581.125, 24.9157, 0.2774", "387.798, 580.628, 24.9221, 0.2798", "386.768, 580.214, 24.8931, 0.2842", "385.648, 580.06, 24.927, 0.2924", "384.506, 580.01, 24.9378, 0.307", "383.416, 579.743, 24.9425, 0.337", "382.357, 579.372, 24.9595, 0.3798", "381.219, 579.263, 24.9609, 0.5214", "380.118, 579.038, 24.9113, 0.4814", "379.086, 578.586, 24.788, 0.504", "378.068, 578.103, 24.6975, 0.5326", "377.005, 577.784, 24.6932, 0.4206", "375.869, 577.715, 24.6966, 0.329", "374.743, 577.832, 24.6466, 0.2814", "373.688, 578.193, 24.5133, 0.2872", "372.658, 578.663, 24.3464, 0.299", "371.6, 579.091, 24.2067, 0.3146", "370.554, 579.544, 24.0937, 0.3744", "369.541, 579.913, 23.8951, 0.3356", "368.464, 579.887, 23.6746, 0.3032", "367.342, 579.915, 23.5322, 0.2802", "366.26, 580.199, 23.3586, 0.2854", "365.189, 580.562, 23.1469, 0.2944", "364.087, 580.859, 22.9551, 0.3124", "362.971, 580.782, 22.7946, 0.3404", "361.883, 580.439, 22.6333, 0.4172", "360.866, 579.96, 22.4119, 0.4404", "359.926, 579.324, 22.1902, 0.3732", "359.299, 578.403, 21.9461, 0.327", "358.581, 577.526, 21.7096, 0.3192", "357.689, 576.816, 21.48, 0.3828", "356.738, 576.252, 21.184, 0.351", "355.673, 576.06, 20.8292, 0.3326", "354.59, 575.789, 20.6045, 0.33", "353.462, 575.674, 20.4154, 0.4022", "352.352, 575.672, 20.1811, 0.3896", "351.215, 575.733, 20.0042, 0.3924", "350.135, 576.074, 19.9361, 0.4984", "349.161, 576.64, 19.9646, 0.436", "348.199, 577.206, 19.9097, 0.4306", "347.181, 577.695, 19.8235, 0.3452", "346.1, 578.001, 19.7152, 0.3224", "345.037, 578.338, 19.7444, 0.3108", "343.966, 578.735, 19.8155, 0.3672", "342.829, 578.706, 19.9274, 0.322", "341.793, 578.349, 20.1671, 0.2796", "340.764, 577.975, 20.4866, 0.2288", "339.654, 577.949, 20.72, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "436.97, 584.686, 25.3243, 0.3732", "437.122, 585.249, 25.6367, 0.2288", "437.249, 586.032, 25.8561, 0.3856", "437.23, 586.724, 26.1565, 0.5258", "436.661, 587.68, 26.3917, 0.519", "436.207, 588.027, 26.3659, 0.4292", "436.082, 591.037, 26.044, 0.4082", "436.118, 592.073, 25.7729, 0.3514", "435.736, 592.822, 25.604, 0.332", "435.254, 593.426, 25.2546, 0.3362", "435.06, 594.302, 24.9031, 0.3778", "435.295, 595.214, 24.6735, 0.518", "435.326, 595.974, 24.3601, 0.4736", "435.178, 596.778, 23.9631, 0.4958", "434.834, 597.512, 23.5986, 0.4864", "434.861, 598.525, 23.3103, 0.4856", "435.059, 599.453, 22.939, 0.4048", "434.527, 600.409, 22.5801, 0.4096", "434.148, 601.284, 22.3024, 0.3538", "434.362, 602.352, 22.0174, 0.3378", "434.262, 603.327, 21.7443, 0.3402", "434.373, 604.461, 21.5478, 0.4166", "434.308, 605.544, 21.2913, 0.4398", "434.129, 606.668, 21.0783, 0.372", "434.259, 607.737, 21.0295, 0.3244", "434.185, 608.733, 20.8631, 0.3148", "433.869, 609.609, 20.7416, 0.3748", "433.82, 610.401, 20.6282, 0.3364", "433.919, 611.423, 20.5827, 0.3048", "433.726, 612.436, 20.5287, 0.2834", "433.828, 613.516, 20.5523, 0.2908", "434.206, 614.578, 20.6442, 0.3056", "434.647, 615.632, 20.7309, 0.3268", "434.965, 616.725, 20.848, 0.397", "435.156, 617.624, 20.9117, 0.3776", "435.305, 618.586, 21.1086, 0.3804", "435.406, 619.196, 21.1746, 0.4264", "435.406, 620.284, 21.1194, 0.543", "434.882, 621.207, 21.1737, 0.8362", "434.476, 622.241, 21.2493, 1.0042", "434.491, 623.366, 21.2876, 1.0826", "434.484, 624.496, 21.2987, 0.984", "434.186, 625.551, 21.2134, 0.6148", "433.972, 626.481, 21.1976, 0.3784", "433.835, 627.366, 21.0066, 0.2784", "433.579, 628.264, 20.6789, 0.2818", "433.031, 628.85, 20.3151, 0.288", "432.546, 629.455, 20.1943, 0.3006", "431.648, 629.658, 20.2842, 0.3178", "430.979, 629.484, 20.1982, 0.3802", "430.631, 629.729, 20.464, 0.3466", "430.159, 630.001, 20.4208, 0.3244", "429.74, 629.543, 20.3239, 0.3148", "429.436, 629.954, 20.5058, 0.3748", "428.817, 629.988, 20.8443, 0.3366", "427.968, 629.658, 21.1369, 0.3048", "427.344, 629.886, 21.0659, 0.2834", "426.352, 629.543, 20.9465, 0.291", "425.853, 629.67, 20.4349, 0.305", "424.916, 629.886, 19.881, 0.3304", "424.895, 630.6, 19.3047, 0.3814", "424.767, 631.145, 19.32, 0.4576" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_154",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_155",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_28", "dend_19", "dend_0", "apic_20", "apic_1", "dend_30", "dend_29", "dend_23", "dend_20", "dend_2", "dend_1", "apic_24", "apic_21", "apic_5", "apic_2", "dend_27", "dend_24", "dend_22", "dend_21", "dend_6", "dend_3", "apic_23", "apic_22", "apic_11", "apic_6", "apic_4", "apic_3", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_4", "apic_19", "apic_12", "apic_8", "apic_7", "dend_16", "dend_11", "dend_9", "dend_8", "apic_16", "apic_13", "apic_10", "apic_9", "dend_18", "dend_17", "dend_13", "dend_12", "apic_18", "apic_17", "apic_15", "apic_14", "dend_15", "dend_14" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_19", "dend_0", "dend_30", "dend_29", "dend_23", "dend_20", "dend_2", "dend_1", "dend_27", "dend_24", "dend_22", "dend_21", "dend_6", "dend_3", "dend_26", "dend_25", "dend_10", "dend_7", "dend_5", "dend_4", "dend_16", "dend_11", "dend_9", "dend_8", "dend_18", "dend_17", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_20", "apic_1", "apic_24", "apic_21", "apic_5", "apic_2", "apic_23", "apic_22", "apic_11", "apic_6", "apic_4", "apic_3", "apic_19", "apic_12", "apic_8", "apic_7", "apic_16", "apic_13", "apic_10", "apic_9", "apic_18", "apic_17", "apic_15", "apic_14" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5889",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "dend_0", "axon_1", "axon_1", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_11", "apic_11", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.38545"
  }, {
    "group" : "apic",
    "value" : "2.38545"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "145.56277"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0013761353",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "1.3075868E-10",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.5381915",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "4.162199E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0019769801",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.6438072E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.1770866E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.11582955",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "5.2411207E-7",
    "erev" : "-89.19244"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "8.4515224E-4",
    "erev" : "-89.19244"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.6272228E-5",
    "erev" : "-89.19244"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "3.230802E-5",
    "erev" : "-89.19244"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.083535E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0019721945",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_477876583",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_477876583

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_20, id: apic_20, parent: apic_0
create apic_20
public apic_20
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_24, id: apic_24, parent: apic_20
create apic_24
public apic_24
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_5, id: apic_5, parent: apic_1
create apic_5
public apic_5
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_23, id: apic_23, parent: apic_21
create apic_23
public apic_23
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_11, id: apic_11, parent: apic_5
create apic_11
public apic_11
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_19, id: apic_19, parent: apic_11
create apic_19
public apic_19
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: apic_16, id: apic_16, parent: apic_12
create apic_16
public apic_16
// Section: apic_13, id: apic_13, parent: apic_12
create apic_13
public apic_13
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: apic_18, id: apic_18, parent: apic_16
create apic_18
public apic_18
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_154, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_154
// Group: {name=ModelViewParmSubset_155, groups=[], sections=[apic_0, dend_28, dend_19, dend_0, apic_20, apic_1, dend_30, dend_29, dend_23, dend_20, dend_2, dend_1, apic_24, apic_21, apic_5, apic_2, dend_27, dend_24, dend_22, dend_21, dend_6, dend_3, apic_23, apic_22, apic_11, apic_6, apic_4, apic_3, dend_26, dend_25, dend_10, dend_7, dend_5, dend_4, apic_19, apic_12, apic_8, apic_7, dend_16, dend_11, dend_9, dend_8, apic_16, apic_13, apic_10, apic_9, dend_18, dend_17, dend_13, dend_12, apic_18, apic_17, apic_15, apic_14, dend_15, dend_14]}
objref ModelViewParmSubset_155
// Group: {name=dend, groups=[], sections=[dend_28, dend_19, dend_0, dend_30, dend_29, dend_23, dend_20, dend_2, dend_1, dend_27, dend_24, dend_22, dend_21, dend_6, dend_3, dend_26, dend_25, dend_10, dend_7, dend_5, dend_4, dend_16, dend_11, dend_9, dend_8, dend_18, dend_17, dend_13, dend_12, dend_15, dend_14]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_24, apic_21, apic_5, apic_2, apic_23, apic_22, apic_11, apic_6, apic_4, apic_3, apic_19, apic_12, apic_8, apic_7, apic_16, apic_13, apic_10, apic_9, apic_18, apic_17, apic_15, apic_14]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_5889, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_5889
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_1, axon_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_477876583
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000024)
    connect apic_0(0), soma_0(0.5000000000000024)
    connect dend_28(0), soma_0(0.5000000000000024)
    connect dend_19(0), soma_0(0.5000000000000024)
    connect dend_0(0), soma_0(0.5000000000000024)
    connect axon_1(0), axon_0(1.0)
    connect apic_20(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_24(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_5(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_23(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_11(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_19(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect apic_16(0), apic_12(1.0)
    connect apic_13(0), apic_12(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect apic_18(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 491.947, 577.491, 22.96, 11.6138 ) }
    soma_0 { pt3dadd( 497.754, 577.491, 22.96, 11.6138 ) }
    soma_0 { pt3dadd( 503.561, 577.491, 22.96, 11.6138 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 497.754, 577.491, 22.96, 1.0 ) }
    axon_0 { pt3dadd( 503.595, 591.307, 22.96, 1.0 ) }
    axon_0 { pt3dadd( 509.437, 605.123, 22.96, 1.0 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 6/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 494.417, 572.686, 23.6043, 1.9448 ) }
    apic_0 { pt3dadd( 494.171, 571.607, 23.8659, 1.9448 ) }
    apic_0 { pt3dadd( 493.612, 570.615, 24.0893, 1.9448 ) }
    apic_0 { pt3dadd( 492.796, 569.813, 24.2847, 1.9448 ) }
    apic_0 { pt3dadd( 491.943, 569.091, 24.799, 1.9448 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 11/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 499.991, 573.596, 21.144, 0.2288 ) }
    dend_28 { pt3dadd( 499.912, 572.478, 19.6941, 0.2828 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 13/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 502.986, 575.717, 23.0541, 0.9152 ) }
    dend_19 { pt3dadd( 504.126, 575.678, 23.0914, 0.7892 ) }
    dend_19 { pt3dadd( 505.133, 575.136, 23.1456, 0.7896 ) }
    dend_19 { pt3dadd( 506.014, 574.407, 23.2207, 0.6154 ) }
    dend_19 { pt3dadd( 506.995, 573.818, 23.3186, 0.6834 ) }
    dend_19 { pt3dadd( 508.02, 573.316, 23.4476, 0.5138 ) }
    dend_19 { pt3dadd( 509.086, 572.986, 23.6682, 0.4914 ) }
    dend_19 { pt3dadd( 510.129, 572.827, 24.016, 0.4054 ) }
    dend_19 { pt3dadd( 511.203, 572.472, 24.338, 0.4604 ) }
    dend_19 { pt3dadd( 512.221, 571.978, 24.522, 0.4384 ) }
    dend_19 { pt3dadd( 513.232, 571.5, 24.5791, 0.5392 ) }
    dend_19 { pt3dadd( 514.223, 570.944, 24.622, 0.496 ) }
    dend_19 { pt3dadd( 514.658, 569.902, 24.6711, 0.3922 ) }
    dend_19 { pt3dadd( 514.365, 568.835, 24.7785, 0.3134 ) }
    dend_19 { pt3dadd( 514.71, 567.858, 25.0437, 0.2998 ) }
    dend_19 { pt3dadd( 515.544, 567.151, 25.3933, 0.3212 ) }
    dend_19 { pt3dadd( 516.036, 566.12, 25.6636, 0.3616 ) }
    dend_19 { pt3dadd( 516.76, 565.247, 25.8485, 0.4332 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 493.311, 580.236, 24.9357, 0.4576 ) }
    dend_0 { pt3dadd( 492.394, 580.338, 25.7337, 1.0998 ) }
    dend_0 { pt3dadd( 491.348, 580.674, 27.44, 1.1406 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 34/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 509.437, 605.123, 22.96, 1.0 ) }
    axon_1 { pt3dadd( 515.278, 618.939, 22.96, 1.0 ) }
    axon_1 { pt3dadd( 521.119, 632.755, 22.96, 1.0 ) }
    // Section: apic_20, id: apic_20, parent: apic_0 (entry count 37/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 491.943, 569.091, 24.799, 1.9448 ) }
    apic_20 { pt3dadd( 491.127, 568.961, 24.4481, 0.2288 ) }
    apic_20 { pt3dadd( 490.056, 568.68, 24.2717, 0.4078 ) }
    apic_20 { pt3dadd( 488.984, 568.371, 24.0059, 0.3998 ) }
    apic_20 { pt3dadd( 487.905, 568.018, 23.7229, 0.4118 ) }
    apic_20 { pt3dadd( 486.866, 567.589, 23.4052, 0.5326 ) }
    apic_20 { pt3dadd( 485.803, 567.18, 23.1191, 0.5066 ) }
    apic_20 { pt3dadd( 484.678, 567.161, 22.8829, 0.5278 ) }
    apic_20 { pt3dadd( 483.676, 567.662, 22.6887, 0.6868 ) }
    apic_20 { pt3dadd( 482.685, 568.229, 22.5088, 0.8602 ) }
    apic_20 { pt3dadd( 481.749, 568.843, 22.2616, 0.8546 ) }
    apic_20 { pt3dadd( 480.927, 569.607, 21.9694, 0.8326 ) }
    apic_20 { pt3dadd( 480.121, 570.408, 21.6678, 0.616 ) }
    apic_20 { pt3dadd( 479.317, 571.175, 21.3185, 0.613 ) }
    apic_20 { pt3dadd( 478.429, 571.885, 21.0143, 0.502 ) }
    apic_20 { pt3dadd( 477.449, 572.474, 20.7825, 0.5778 ) }
    apic_20 { pt3dadd( 476.558, 573.185, 20.6143, 0.4962 ) }
    apic_20 { pt3dadd( 475.868, 574.081, 20.4525, 0.5086 ) }
    apic_20 { pt3dadd( 474.966, 574.712, 20.2515, 0.6518 ) }
    apic_20 { pt3dadd( 473.94, 575.203, 20.1177, 0.7918 ) }
    apic_20 { pt3dadd( 473.173, 575.985, 20.1173, 0.745 ) }
    apic_20 { pt3dadd( 472.541, 576.93, 20.1412, 0.5452 ) }
    apic_20 { pt3dadd( 471.952, 577.91, 20.1443, 0.4938 ) }
    apic_20 { pt3dadd( 471.115, 578.679, 20.0909, 0.4516 ) }
    apic_20 { pt3dadd( 470.027, 578.863, 19.6294, 0.5726 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 62/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 491.943, 569.091, 24.799, 1.9448 ) }
    apic_1 { pt3dadd( 491.239, 567.959, 25.0036, 1.3728 ) }
    apic_1 { pt3dadd( 490.561, 567.039, 25.0744, 1.3728 ) }
    apic_1 { pt3dadd( 489.91, 566.097, 25.1288, 1.3728 ) }
    apic_1 { pt3dadd( 489.394, 565.076, 25.168, 1.3728 ) }
    apic_1 { pt3dadd( 488.891, 564.049, 25.1931, 1.3728 ) }
    apic_1 { pt3dadd( 488.49, 562.978, 25.2059, 1.3728 ) }
    apic_1 { pt3dadd( 488.025, 561.933, 25.2134, 1.3728 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 70/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 499.912, 572.478, 19.6941, 0.2828 ) }
    dend_30 { pt3dadd( 499.242, 571.401, 18.8191, 0.6864 ) }
    dend_30 { pt3dadd( 498.747, 570.374, 18.51, 0.4444 ) }
    dend_30 { pt3dadd( 499.412, 569.712, 17.9998, 0.326 ) }
    dend_30 { pt3dadd( 500.399, 569.865, 17.3171, 0.2758 ) }
    dend_30 { pt3dadd( 501.387, 570.017, 16.528, 0.2766 ) }
    dend_30 { pt3dadd( 502.474, 569.901, 15.8269, 0.2782 ) }
    dend_30 { pt3dadd( 503.599, 569.69, 15.2618, 0.2814 ) }
    dend_30 { pt3dadd( 504.723, 569.48, 14.8086, 0.287 ) }
    dend_30 { pt3dadd( 505.847, 569.269, 14.4488, 0.2988 ) }
    dend_30 { pt3dadd( 506.972, 569.058, 14.1404, 0.3142 ) }
    dend_30 { pt3dadd( 507.639, 568.387, 13.7347, 0.3734 ) }
    dend_30 { pt3dadd( 508.042, 567.451, 13.1733, 0.334 ) }
    dend_30 { pt3dadd( 508.415, 566.415, 12.5832, 0.3002 ) }
    dend_30 { pt3dadd( 508.815, 565.396, 12.0025, 0.2748 ) }
    dend_30 { pt3dadd( 509.753, 564.749, 11.5225, 0.275 ) }
    dend_30 { pt3dadd( 510.691, 564.103, 11.1444, 0.2752 ) }
    dend_30 { pt3dadd( 511.646, 563.481, 10.8795, 0.276 ) }
    dend_30 { pt3dadd( 512.563, 562.901, 10.7269, 0.2768 ) }
    dend_30 { pt3dadd( 511.727, 562.119, 10.644, 0.2796 ) }
    dend_30 { pt3dadd( 510.639, 562.038, 10.6049, 0.2796 ) }
    dend_30 { pt3dadd( 509.997, 561.102, 10.5874, 0.305 ) }
    dend_30 { pt3dadd( 509.447, 560.102, 10.5826, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 93/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 499.912, 572.478, 19.6941, 0.2828 ) }
    dend_29 { pt3dadd( 500.286, 572.272, 19.3327, 0.2896 ) }
    dend_29 { pt3dadd( 500.793, 571.322, 19.2044, 0.3038 ) }
    dend_29 { pt3dadd( 501.644, 571.314, 19.2528, 0.3236 ) }
    dend_29 { pt3dadd( 502.737, 571.314, 19.343, 0.3908 ) }
    dend_29 { pt3dadd( 503.6, 571.081, 19.5921, 0.3672 ) }
    dend_29 { pt3dadd( 504.542, 570.698, 19.6239, 0.3564 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_29 { pt3dadd( 505.556, 570.215, 19.6028, 0.4056 ) }
    dend_29 { pt3dadd( 506.447, 569.6, 19.6311, 0.3888 ) }
    dend_29 { pt3dadd( 507.004, 568.914, 19.4992, 0.4268 ) }
    dend_29 { pt3dadd( 507.671, 568.319, 19.4889, 0.387 ) }
    dend_29 { pt3dadd( 508.599, 567.969, 19.4771, 0.3926 ) }
    dend_29 { pt3dadd( 509.213, 567.248, 19.3953, 0.4734 ) }
    dend_29 { pt3dadd( 509.091, 566.453, 19.324, 0.512 ) }
    dend_29 { pt3dadd( 509.812, 565.841, 19.202, 0.6662 ) }
    dend_29 { pt3dadd( 510.227, 564.893, 19.154, 0.779 ) }
    dend_29 { pt3dadd( 511.084, 564.522, 18.9154, 0.6838 ) }
    dend_29 { pt3dadd( 511.885, 564.195, 18.6169, 0.6128 ) }
    dend_29 { pt3dadd( 512.583, 563.767, 18.2858, 0.4278 ) }
    dend_29 { pt3dadd( 513.427, 563.425, 17.9785, 0.3426 ) }
    dend_29 { pt3dadd( 513.554, 562.348, 17.7431, 0.3056 ) }
    dend_29 { pt3dadd( 514.435, 561.76, 17.5391, 0.3346 ) }
    dend_29 { pt3dadd( 515.346, 561.58, 17.2462, 0.375 ) }
    dend_29 { pt3dadd( 515.922, 562.394, 16.9998, 0.5132 ) }
    dend_29 { pt3dadd( 516.745, 562.382, 16.8162, 0.4636 ) }
    dend_29 { pt3dadd( 517.295, 562.226, 16.5255, 0.4826 ) }
    dend_29 { pt3dadd( 518.196, 561.831, 16.0889, 0.4364 ) }
    dend_29 { pt3dadd( 518.742, 560.904, 15.7576, 0.517 ) }
    dend_29 { pt3dadd( 519.068, 559.835, 15.4369, 0.5448 ) }
    dend_29 { pt3dadd( 520.026, 559.454, 15.0814, 0.7308 ) }
    dend_29 { pt3dadd( 520.893, 558.979, 14.6707, 0.8808 ) }
    dend_29 { pt3dadd( 520.678, 557.86, 14.377, 0.961 ) }
    dend_29 { pt3dadd( 520.843, 556.749, 14.1801, 0.6972 ) }
    dend_29 { pt3dadd( 521.636, 555.973, 14.0628, 0.6082 ) }
    dend_29 { pt3dadd( 522.67, 555.548, 13.9362, 0.5604 ) }
    dend_29 { pt3dadd( 523.399, 554.68, 13.8214, 0.8172 ) }
    dend_29 { pt3dadd( 523.95, 553.687, 13.7078, 0.7606 ) }
    dend_29 { pt3dadd( 524.749, 552.877, 13.5565, 0.7262 ) }
    dend_29 { pt3dadd( 525.658, 552.21, 13.3338, 0.7758 ) }
    dend_29 { pt3dadd( 526.605, 551.614, 13.0521, 0.777 ) }
    dend_29 { pt3dadd( 527.421, 550.836, 12.7708, 0.5334 ) }
    dend_29 { pt3dadd( 528.042, 549.905, 12.4828, 0.3592 ) }
    dend_29 { pt3dadd( 528.708, 548.985, 12.3091, 0.2902 ) }
    dend_29 { pt3dadd( 529.449, 548.146, 12.1806, 0.3034 ) }
    dend_29 { pt3dadd( 530.181, 547.414, 11.928, 0.3278 ) }
    dend_29 { pt3dadd( 531.103, 546.889, 11.6878, 0.373 ) }
    dend_29 { pt3dadd( 532.054, 546.357, 11.6187, 0.4604 ) }
    dend_29 { pt3dadd( 532.811, 545.614, 11.7254, 0.6018 ) }
    dend_29 { pt3dadd( 533.692, 544.944, 11.8385, 0.9662 ) }
    dend_29 { pt3dadd( 534.6, 544.321, 11.8283, 1.144 ) }
    dend_29 { pt3dadd( 535.455, 543.584, 11.7535, 1.145 ) }
    dend_29 { pt3dadd( 536.484, 543.1, 11.6424, 0.912 ) }
    dend_29 { pt3dadd( 537.502, 542.693, 11.4144, 0.7032 ) }
    dend_29 { pt3dadd( 538.455, 542.201, 11.1016, 0.6082 ) }
    dend_29 { pt3dadd( 539.205, 541.397, 11.0015, 0.6146 ) }
    dend_29 { pt3dadd( 539.697, 540.387, 11.0552, 0.655 ) }
    dend_29 { pt3dadd( 539.865, 539.316, 11.2613, 0.821 ) }
    dend_29 { pt3dadd( 539.938, 538.222, 11.5456, 0.6866 ) }
    dend_29 { pt3dadd( 540.398, 537.178, 11.7478, 0.5234 ) }
    dend_29 { pt3dadd( 541.167, 536.391, 11.7422, 0.4904 ) }
    dend_29 { pt3dadd( 542.008, 535.633, 11.6014, 0.4944 ) }
    dend_29 { pt3dadd( 542.929, 535.015, 11.3357, 0.6404 ) }
    dend_29 { pt3dadd( 543.84, 534.33, 11.0578, 0.6994 ) }
    dend_29 { pt3dadd( 544.903, 533.907, 10.8304, 0.6908 ) }
    dend_29 { pt3dadd( 545.938, 533.427, 10.6726, 0.5608 ) }
    dend_29 { pt3dadd( 546.825, 532.708, 10.5921, 0.4174 ) }
    dend_29 { pt3dadd( 547.748, 532.073, 10.537, 0.3624 ) }
    dend_29 { pt3dadd( 548.287, 531.179, 10.3475, 0.3796 ) }
    dend_29 { pt3dadd( 548.972, 530.292, 10.2262, 0.5216 ) }
    dend_29 { pt3dadd( 549.699, 529.459, 10.0326, 0.4788 ) }
    dend_29 { pt3dadd( 550.529, 528.708, 9.8876, 0.5118 ) }
    dend_29 { pt3dadd( 551.585, 528.275, 9.7973, 0.4868 ) }
    dend_29 { pt3dadd( 552.491, 527.61, 9.7655, 0.6296 ) }
    dend_29 { pt3dadd( 553.171, 526.71, 9.8193, 0.6626 ) }
    dend_29 { pt3dadd( 553.92, 525.892, 9.9473, 0.7048 ) }
    dend_29 { pt3dadd( 554.715, 525.071, 10.0465, 0.8742 ) }
    dend_29 { pt3dadd( 555.486, 524.255, 10.0505, 0.7448 ) }
    dend_29 { pt3dadd( 556.288, 523.547, 9.9004, 0.8294 ) }
    dend_29 { pt3dadd( 557.317, 523.049, 9.7577, 0.7822 ) }
    dend_29 { pt3dadd( 558.347, 522.589, 9.5966, 0.7696 ) }
    dend_29 { pt3dadd( 559.264, 521.977, 9.4144, 0.613 ) }
    dend_29 { pt3dadd( 560.319, 521.659, 9.4041, 0.7408 ) }
    dend_29 { pt3dadd( 561.387, 521.544, 9.5446, 0.5488 ) }
    dend_29 { pt3dadd( 562.386, 521.084, 9.6435, 0.4444 ) }
    dend_29 { pt3dadd( 563.164, 520.253, 9.7108, 0.4042 ) }
    dend_29 { pt3dadd( 564.107, 519.716, 9.7881, 0.4988 ) }
    dend_29 { pt3dadd( 565.229, 519.795, 9.902, 0.7704 ) }
    dend_29 { pt3dadd( 566.325, 519.924, 10.0519, 0.8044 ) }
    dend_29 { pt3dadd( 567.358, 519.564, 10.1603, 1.0884 ) }
    dend_29 { pt3dadd( 568.255, 518.861, 10.2338, 1.2308 ) }
    dend_29 { pt3dadd( 569.201, 518.226, 10.2856, 1.298 ) }
    dend_29 { pt3dadd( 570.174, 517.662, 10.2472, 1.2326 ) }
    dend_29 { pt3dadd( 571.15, 517.111, 10.1415, 1.1208 ) }
    dend_29 { pt3dadd( 572.134, 516.531, 10.0653, 0.867 ) }
    dend_29 { pt3dadd( 572.99, 515.801, 10.0601, 0.6234 ) }
    dend_29 { pt3dadd( 573.846, 515.169, 10.1752, 0.4406 ) }
    dend_29 { pt3dadd( 574.94, 514.996, 10.3492, 0.4004 ) }
    dend_29 { pt3dadd( 576.05, 514.805, 10.5407, 0.4766 ) }
    dend_29 { pt3dadd( 577.062, 514.317, 10.7679, 0.571 ) }
    dend_29 { pt3dadd( 577.988, 513.698, 11.0361, 0.5176 ) }
    dend_29 { pt3dadd( 579.008, 513.271, 11.2928, 0.3848 ) }
    dend_29 { pt3dadd( 580.122, 513.014, 11.4735, 0.3 ) }
    dend_29 { pt3dadd( 581.252, 513.002, 11.5924, 0.2746 ) }
    dend_29 { pt3dadd( 582.354, 512.846, 11.66, 0.2748 ) }
    dend_29 { pt3dadd( 583.423, 512.438, 11.6813, 0.2748 ) }
    dend_29 { pt3dadd( 584.527, 512.167, 11.6656, 0.275 ) }
    dend_29 { pt3dadd( 585.571, 511.747, 11.628, 0.2758 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( 586.642, 511.378, 11.5782, 0.2766 ) }
    dend_29 { pt3dadd( 587.719, 511.005, 11.5145, 0.2782 ) }
    dend_29 { pt3dadd( 588.516, 510.254, 11.4013, 0.2814 ) }
    dend_29 { pt3dadd( 589.239, 509.399, 11.2225, 0.287 ) }
    dend_29 { pt3dadd( 590.078, 508.636, 11.0576, 0.2986 ) }
    dend_29 { pt3dadd( 590.855, 507.803, 10.9461, 0.314 ) }
    dend_29 { pt3dadd( 591.631, 506.988, 10.9347, 0.373 ) }
    dend_29 { pt3dadd( 592.352, 506.111, 10.9676, 0.333 ) }
    dend_29 { pt3dadd( 592.34, 505.067, 10.9204, 0.2982 ) }
    dend_29 { pt3dadd( 592.353, 503.935, 10.8701, 0.2712 ) }
    dend_29 { pt3dadd( 592.173, 502.812, 10.8383, 0.2684 ) }
    dend_29 { pt3dadd( 591.716, 501.787, 10.8687, 0.2626 ) }
    dend_29 { pt3dadd( 591.275, 500.742, 10.8476, 0.2542 ) }
    dend_29 { pt3dadd( 590.575, 499.859, 10.8676, 0.2288 ) }
    dend_29 { pt3dadd( 589.503, 499.928, 10.64, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 15/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 516.76, 565.247, 25.8485, 0.4332 ) }
    dend_23 { pt3dadd( 516.981, 563.943, 24.5601, 0.9152 ) }
    dend_23 { pt3dadd( 517.017, 562.841, 24.0634, 0.7732 ) }
    dend_23 { pt3dadd( 517.244, 561.728, 23.6888, 0.8898 ) }
    dend_23 { pt3dadd( 517.625, 560.656, 23.4496, 0.8558 ) }
    dend_23 { pt3dadd( 518.216, 559.718, 23.3687, 0.6368 ) }
    dend_23 { pt3dadd( 519.073, 558.995, 23.3718, 0.529 ) }
    dend_23 { pt3dadd( 519.939, 558.283, 23.3545, 0.4834 ) }
    dend_23 { pt3dadd( 520.509, 557.357, 23.3156, 0.5654 ) }
    dend_23 { pt3dadd( 520.634, 556.224, 23.2987, 0.8234 ) }
    dend_23 { pt3dadd( 520.634, 555.08, 23.308, 1.0174 ) }
    dend_23 { pt3dadd( 520.637, 553.936, 23.3535, 0.9262 ) }
    dend_23 { pt3dadd( 520.652, 552.793, 23.4616, 0.887 ) }
    dend_23 { pt3dadd( 520.74, 551.689, 23.7007, 1.098 ) }
    dend_23 { pt3dadd( 521.117, 550.624, 23.9716, 1.2582 ) }
    dend_23 { pt3dadd( 521.563, 549.58, 24.2501, 1.3024 ) }
    dend_23 { pt3dadd( 522.02, 548.565, 24.5674, 1.2378 ) }
    dend_23 { pt3dadd( 522.771, 547.715, 24.8205, 1.1438 ) }
    dend_23 { pt3dadd( 523.666, 547.004, 24.993, 0.8456 ) }
    dend_23 { pt3dadd( 524.525, 546.249, 25.0942, 0.893 ) }
    dend_23 { pt3dadd( 525.485, 545.628, 25.1453, 0.8136 ) }
    dend_23 { pt3dadd( 526.449, 545.014, 25.1606, 0.5638 ) }
    dend_23 { pt3dadd( 527.233, 544.184, 25.153, 0.3684 ) }
    dend_23 { pt3dadd( 527.671, 543.132, 25.1394, 0.3072 ) }
    dend_23 { pt3dadd( 528.176, 542.107, 25.11, 0.3346 ) }
    dend_23 { pt3dadd( 528.812, 541.181, 25.017, 0.3902 ) }
    dend_23 { pt3dadd( 529.516, 540.316, 25.0396, 0.4672 ) }
    dend_23 { pt3dadd( 530.378, 539.565, 25.0788, 0.7358 ) }
    dend_23 { pt3dadd( 531.332, 538.935, 25.1158, 0.6246 ) }
    dend_23 { pt3dadd( 532.299, 538.324, 25.1497, 0.6308 ) }
    dend_23 { pt3dadd( 533.225, 537.653, 25.1797, 0.5254 ) }
    dend_23 { pt3dadd( 533.563, 536.563, 25.2026, 0.4408 ) }
    dend_23 { pt3dadd( 534.068, 535.537, 25.212, 0.4308 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 48/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 516.76, 565.247, 25.8485, 0.4332 ) }
    dend_20 { pt3dadd( 517.972, 564.539, 26.1922, 0.5816 ) }
    dend_20 { pt3dadd( 519.047, 564.145, 26.3139, 0.7816 ) }
    dend_20 { pt3dadd( 520.131, 563.781, 26.4253, 0.8296 ) }
    dend_20 { pt3dadd( 521.233, 563.505, 26.5444, 0.6562 ) }
    dend_20 { pt3dadd( 522.325, 563.648, 26.7335, 0.464 ) }
    dend_20 { pt3dadd( 523.338, 564.15, 26.896, 0.3956 ) }
    dend_20 { pt3dadd( 524.447, 564.144, 26.9618, 0.4714 ) }
    dend_20 { pt3dadd( 525.384, 563.555, 26.9226, 0.5454 ) }
    dend_20 { pt3dadd( 526.219, 562.775, 26.8947, 0.547 ) }
    dend_20 { pt3dadd( 527.064, 562.009, 26.9088, 0.7512 ) }
    dend_20 { pt3dadd( 527.985, 561.367, 27.0078, 0.6112 ) }
    dend_20 { pt3dadd( 528.975, 560.853, 27.1981, 0.5798 ) }
    dend_20 { pt3dadd( 529.955, 560.303, 27.4401, 0.5578 ) }
    dend_20 { pt3dadd( 530.768, 559.573, 27.6348, 0.5706 ) }
    dend_20 { pt3dadd( 531.432, 559.256, 27.5588, 0.7908 ) }
    dend_20 { pt3dadd( 532.104, 558.508, 27.5356, 0.7036 ) }
    dend_20 { pt3dadd( 533.16, 558.574, 27.6034, 0.6598 ) }
    dend_20 { pt3dadd( 533.78, 557.964, 27.8229, 0.4624 ) }
    dend_20 { pt3dadd( 534.416, 557.663, 28.1212, 0.4322 ) }
    dend_20 { pt3dadd( 535.107, 557.94, 28.2803, 0.3486 ) }
    dend_20 { pt3dadd( 535.973, 558.52, 28.5429, 0.327 ) }
    dend_20 { pt3dadd( 536.775, 559.283, 28.7787, 0.3264 ) }
    dend_20 { pt3dadd( 537.758, 559.3, 28.8361, 0.3604 ) }
    dend_20 { pt3dadd( 538.359, 558.572, 28.9461, 0.4848 ) }
    dend_20 { pt3dadd( 538.72, 557.642, 29.0987, 0.4166 ) }
    dend_20 { pt3dadd( 539.306, 556.795, 29.2356, 0.3682 ) }
    dend_20 { pt3dadd( 540.327, 556.556, 29.328, 0.3572 ) }
    dend_20 { pt3dadd( 541.323, 556.437, 29.5336, 0.4118 ) }
    dend_20 { pt3dadd( 542.037, 556.675, 29.8892, 0.6068 ) }
    dend_20 { pt3dadd( 542.605, 557.5, 30.0989, 0.5132 ) }
    dend_20 { pt3dadd( 543.55, 558.036, 30.3439, 0.4898 ) }
    dend_20 { pt3dadd( 544.313, 557.597, 30.3789, 0.403 ) }
    dend_20 { pt3dadd( 545.264, 557.471, 30.5113, 0.4548 ) }
    dend_20 { pt3dadd( 545.633, 558.283, 30.7796, 0.4318 ) }
    dend_20 { pt3dadd( 545.926, 559.105, 31.2959, 0.51 ) }
    dend_20 { pt3dadd( 546.644, 559.051, 31.89, 0.5258 ) }
    dend_20 { pt3dadd( 547.389, 558.757, 32.5634, 0.724 ) }
    dend_20 { pt3dadd( 548.379, 558.616, 33.089, 0.7294 ) }
    dend_20 { pt3dadd( 548.995, 559.073, 33.3544, 0.6672 ) }
    dend_20 { pt3dadd( 549.983, 559.447, 33.6076, 0.4444 ) }
    dend_20 { pt3dadd( 550.25, 560.339, 33.9685, 0.3258 ) }
    dend_20 { pt3dadd( 551.065, 560.522, 34.9068, 0.2752 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 491.348, 580.674, 27.44, 1.1406 ) }
    dend_2 { pt3dadd( 490.223, 580.931, 27.4389, 0.9858 ) }
    dend_2 { pt3dadd( 489.174, 581.388, 27.4385, 0.673 ) }
    dend_2 { pt3dadd( 488.052, 581.61, 27.4366, 0.4476 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 95/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 491.348, 580.674, 27.44, 1.1406 ) }
    dend_1 { pt3dadd( 491.071, 580.963, 27.6891, 0.2288 ) }
    dend_1 { pt3dadd( 490.165, 581.661, 27.7851, 1.143 ) }
    dend_1 { pt3dadd( 489.261, 582.362, 27.9117, 1.0546 ) }
    dend_1 { pt3dadd( 488.483, 583.193, 28.0935, 0.947 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 488.634, 584.049, 28.4841, 0.7016 ) }
    dend_1 { pt3dadd( 489.448, 584.735, 28.7451, 0.4702 ) }
    dend_1 { pt3dadd( 489.34, 585.763, 29.0646, 0.327 ) }
    dend_1 { pt3dadd( 488.65, 586.655, 29.3208, 0.2774 ) }
    dend_1 { pt3dadd( 488.005, 587.557, 29.4778, 0.2796 ) }
    dend_1 { pt3dadd( 487.388, 588.513, 29.6618, 0.284 ) }
    dend_1 { pt3dadd( 486.586, 589.218, 29.9631, 0.292 ) }
    dend_1 { pt3dadd( 485.66, 589.672, 30.471, 0.3064 ) }
    dend_1 { pt3dadd( 485.08, 590.448, 31.0808, 0.3356 ) }
    dend_1 { pt3dadd( 485.175, 591.541, 31.7061, 0.3782 ) }
    dend_1 { pt3dadd( 485.649, 592.574, 32.2815, 0.5126 ) }
    dend_1 { pt3dadd( 486.191, 593.576, 32.816, 0.4932 ) }
    dend_1 { pt3dadd( 486.332, 594.563, 33.4309, 0.3872 ) }
    dend_1 { pt3dadd( 485.743, 595.359, 34.1407, 0.3044 ) }
    dend_1 { pt3dadd( 485.025, 595.981, 34.9521, 0.2826 ) }
    dend_1 { pt3dadd( 485.135, 596.839, 35.8123, 0.2892 ) }
    dend_1 { pt3dadd( 485.265, 597.928, 36.5691, 0.3028 ) }
    dend_1 { pt3dadd( 485.682, 598.716, 37.3394, 0.3214 ) }
    dend_1 { pt3dadd( 486.519, 599.352, 38.1102, 0.3872 ) }
    dend_1 { pt3dadd( 486.773, 600.419, 38.8142, 0.3588 ) }
    dend_1 { pt3dadd( 486.863, 601.538, 39.3218, 0.3482 ) }
    dend_1 { pt3dadd( 487.673, 602.124, 39.6567, 0.3538 ) }
    dend_1 { pt3dadd( 488.29, 601.87, 40.2979, 0.4722 ) }
    dend_1 { pt3dadd( 488.858, 601.126, 41.0609, 0.3934 ) }
    dend_1 { pt3dadd( 489.831, 601.197, 41.8928, 0.3254 ) }
    dend_1 { pt3dadd( 490.212, 601.976, 42.8666, 0.2746 ) }
    dend_1 { pt3dadd( 490.122, 602.999, 43.9113, 0.2746 ) }
    dend_1 { pt3dadd( 490.404, 604.019, 44.938, 0.2746 ) }
    dend_1 { pt3dadd( 491.223, 604.427, 45.978, 0.2746 ) }
    dend_1 { pt3dadd( 492.262, 604.713, 46.9706, 0.2746 ) }
    dend_1 { pt3dadd( 493.366, 604.925, 47.9046, 0.2746 ) }
    dend_1 { pt3dadd( 494.24, 604.984, 48.991, 0.2746 ) }
    dend_1 { pt3dadd( 494.865, 605.295, 50.3034, 0.2746 ) }
    dend_1 { pt3dadd( 494.516, 605.583, 51.7143, 0.2746 ) }
    dend_1 { pt3dadd( 493.598, 605.842, 53.1485, 0.2746 ) }
    dend_1 { pt3dadd( 492.681, 606.102, 54.5793, 0.2746 ) }
    dend_1 { pt3dadd( 491.762, 606.36, 55.9692, 0.2746 ) }
    dend_1 { pt3dadd( 490.833, 606.164, 57.2132, 0.2746 ) }
    dend_1 { pt3dadd( 489.894, 605.57, 58.2747, 0.2746 ) }
    dend_1 { pt3dadd( 488.956, 604.976, 59.2116, 0.2746 ) }
    dend_1 { pt3dadd( 488.017, 604.381, 60.0656, 0.2746 ) }
    dend_1 { pt3dadd( 487.027, 603.958, 60.9059, 0.2746 ) }
    dend_1 { pt3dadd( 486.027, 603.571, 61.7585, 0.2746 ) }
    dend_1 { pt3dadd( 485.027, 603.184, 62.6346, 0.2746 ) }
    dend_1 { pt3dadd( 484.026, 602.764, 63.5197, 0.2746 ) }
    dend_1 { pt3dadd( 483.026, 602.321, 64.3989, 0.2744 ) }
    dend_1 { pt3dadd( 482.027, 601.877, 65.2728, 0.2744 ) }
    dend_1 { pt3dadd( 481.027, 601.433, 66.1424, 0.2742 ) }
    dend_1 { pt3dadd( 480.104, 601.333, 66.9847, 0.2736 ) }
    dend_1 { pt3dadd( 479.297, 602.015, 67.8135, 0.2728 ) }
    dend_1 { pt3dadd( 478.369, 602.446, 68.7607, 0.2712 ) }
    dend_1 { pt3dadd( 477.441, 602.878, 69.7782, 0.2684 ) }
    dend_1 { pt3dadd( 476.514, 603.309, 70.8212, 0.2626 ) }
    dend_1 { pt3dadd( 475.587, 603.74, 71.8511, 0.2542 ) }
    dend_1 { pt3dadd( 474.659, 604.172, 72.8347, 0.2288 ) }
    dend_1 { pt3dadd( 473.732, 604.603, 74.7844, 0.2288 ) }
    // Section: apic_24, id: apic_24, parent: apic_20 (entry count 56/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 470.027, 578.863, 19.6294, 0.5726 ) }
    apic_24 { pt3dadd( 469.485, 578.874, 18.3782, 0.2288 ) }
    apic_24 { pt3dadd( 468.357, 578.811, 17.893, 0.4724 ) }
    apic_24 { pt3dadd( 467.229, 578.747, 17.3943, 0.3936 ) }
    apic_24 { pt3dadd( 466.667, 579.248, 16.9185, 0.326 ) }
    apic_24 { pt3dadd( 467.129, 580.239, 16.4928, 0.2758 ) }
    apic_24 { pt3dadd( 467.85, 581.128, 16.0989, 0.2768 ) }
    apic_24 { pt3dadd( 467.526, 581.456, 15.6415, 0.279 ) }
    apic_24 { pt3dadd( 466.453, 581.381, 15.0411, 0.2826 ) }
    apic_24 { pt3dadd( 465.47, 581.058, 14.3065, 0.2894 ) }
    apic_24 { pt3dadd( 464.518, 580.646, 13.4704, 0.302 ) }
    apic_24 { pt3dadd( 463.566, 580.233, 12.582, 0.326 ) }
    apic_24 { pt3dadd( 462.614, 579.82, 11.6934, 0.367 ) }
    apic_24 { pt3dadd( 461.527, 579.589, 10.9388, 0.4608 ) }
    apic_24 { pt3dadd( 460.415, 579.39, 10.3333, 0.548 ) }
    apic_24 { pt3dadd( 459.303, 579.192, 9.858, 0.4434 ) }
    apic_24 { pt3dadd( 458.624, 579.83, 9.5323, 0.3984 ) }
    apic_24 { pt3dadd( 458.155, 580.873, 9.3387, 0.2796 ) }
    apic_24 { pt3dadd( 457.686, 581.916, 9.1717, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 75/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 470.027, 578.863, 19.6294, 0.5726 ) }
    apic_21 { pt3dadd( 469.054, 578.859, 19.6859, 0.5164 ) }
    apic_21 { pt3dadd( 467.94, 578.814, 19.6405, 0.6304 ) }
    apic_21 { pt3dadd( 466.888, 579.213, 19.6466, 0.4678 ) }
    apic_21 { pt3dadd( 466.316, 579.971, 19.9072, 0.3802 ) }
    apic_21 { pt3dadd( 465.362, 580.58, 20.1992, 0.324 ) }
    apic_21 { pt3dadd( 464.351, 581.109, 20.4476, 0.3918 ) }
    apic_21 { pt3dadd( 463.22, 581.285, 20.6582, 0.3672 ) }
    apic_21 { pt3dadd( 462.083, 581.269, 20.8366, 0.364 ) }
    apic_21 { pt3dadd( 461.014, 580.89, 20.9852, 0.3826 ) }
    apic_21 { pt3dadd( 459.889, 581.018, 21.0941, 0.5264 ) }
    apic_21 { pt3dadd( 458.892, 581.563, 21.2071, 0.4906 ) }
    apic_21 { pt3dadd( 457.947, 582.121, 21.4129, 0.5206 ) }
    apic_21 { pt3dadd( 456.882, 582.473, 21.6052, 0.5646 ) }
    apic_21 { pt3dadd( 455.889, 582.416, 21.7441, 0.4744 ) }
    apic_21 { pt3dadd( 454.885, 582.41, 21.7567, 0.4554 ) }
    apic_21 { pt3dadd( 453.808, 582.597, 21.8372, 0.3862 ) }
    apic_21 { pt3dadd( 452.699, 582.645, 21.9093, 0.4224 ) }
    apic_21 { pt3dadd( 451.977, 583.212, 21.8718, 0.3786 ) }
    apic_21 { pt3dadd( 451.642, 583.052, 22.1353, 0.3784 ) }
    apic_21 { pt3dadd( 450.788, 583.337, 22.4316, 0.4416 ) }
    apic_21 { pt3dadd( 450.079, 583.37, 22.4259, 0.4804 ) }
    apic_21 { pt3dadd( 449.573, 583.896, 22.1143, 0.473 ) }
    apic_21 { pt3dadd( 448.593, 584.267, 21.8172, 0.3878 ) }
    apic_21 { pt3dadd( 448.12, 584.86, 21.6631, 0.3476 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_21 { pt3dadd( 447.422, 585.324, 21.6024, 0.3886 ) }
    apic_21 { pt3dadd( 446.667, 585.288, 21.5622, 0.3616 ) }
    apic_21 { pt3dadd( 445.905, 585.614, 21.0714, 0.3532 ) }
    // Section: apic_5, id: apic_5, parent: apic_1 (entry count 3/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 488.025, 561.933, 25.2134, 1.3728 ) }
    apic_5 { pt3dadd( 487.398, 560.912, 25.5571, 0.8276 ) }
    apic_5 { pt3dadd( 487.109, 559.826, 25.7278, 0.626 ) }
    apic_5 { pt3dadd( 486.653, 558.8, 25.961, 0.5372 ) }
    apic_5 { pt3dadd( 485.97, 557.884, 26.1667, 0.5914 ) }
    apic_5 { pt3dadd( 485.283, 556.969, 26.3398, 0.7716 ) }
    apic_5 { pt3dadd( 484.571, 556.073, 26.4827, 0.95 ) }
    apic_5 { pt3dadd( 483.784, 555.244, 26.6043, 0.891 ) }
    apic_5 { pt3dadd( 483.068, 554.367, 26.7514, 0.614 ) }
    apic_5 { pt3dadd( 482.307, 553.522, 27.1146, 0.456 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 13/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 488.025, 561.933, 25.2134, 1.3728 ) }
    apic_2 { pt3dadd( 488.142, 560.457, 24.897, 0.6864 ) }
    apic_2 { pt3dadd( 488.141, 559.313, 24.7773, 0.6864 ) }
    apic_2 { pt3dadd( 488.121, 558.201, 24.5532, 0.6864 ) }
    apic_2 { pt3dadd( 487.996, 557.074, 24.2982, 0.6864 ) }
    apic_2 { pt3dadd( 487.454, 556.074, 24.0716, 0.6864 ) }
    apic_2 { pt3dadd( 486.994, 555.028, 23.861, 0.6864 ) }
    apic_2 { pt3dadd( 487.129, 553.937, 23.5926, 0.6864 ) }
    apic_2 { pt3dadd( 487.849, 553.059, 23.3566, 0.6864 ) }
    apic_2 { pt3dadd( 488.626, 552.22, 23.1962, 0.6864 ) }
    apic_2 { pt3dadd( 489.276, 551.279, 23.0895, 0.6864 ) }
    apic_2 { pt3dadd( 489.912, 550.327, 23.0241, 0.6864 ) }
    apic_2 { pt3dadd( 490.421, 549.303, 23.0093, 0.6864 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 26/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 534.068, 535.537, 25.212, 0.4308 ) }
    dend_27 { pt3dadd( 533.995, 535.226, 25.7812, 0.2288 ) }
    dend_27 { pt3dadd( 533.447, 534.334, 25.9154, 0.3144 ) }
    dend_27 { pt3dadd( 533.687, 533.452, 26.18, 0.3738 ) }
    dend_27 { pt3dadd( 534.248, 532.799, 26.5783, 0.3348 ) }
    dend_27 { pt3dadd( 534.412, 532.745, 27.3163, 0.3018 ) }
    dend_27 { pt3dadd( 535.303, 532.23, 27.9276, 0.2778 ) }
    dend_27 { pt3dadd( 536.263, 531.8, 28.4004, 0.2808 ) }
    dend_27 { pt3dadd( 537.024, 531.826, 29.008, 0.286 ) }
    dend_27 { pt3dadd( 537.814, 531.189, 29.3132, 0.2954 ) }
    dend_27 { pt3dadd( 538.214, 530.243, 29.673, 0.3144 ) }
    dend_27 { pt3dadd( 538.857, 529.77, 29.8332, 0.343 ) }
    dend_27 { pt3dadd( 539.51, 529.577, 30.1809, 0.428 ) }
    dend_27 { pt3dadd( 540.238, 530.015, 30.6396, 0.4302 ) }
    dend_27 { pt3dadd( 541.227, 530.331, 31.031, 0.503 ) }
    dend_27 { pt3dadd( 541.873, 529.903, 31.2802, 0.5326 ) }
    dend_27 { pt3dadd( 542.49, 529.463, 31.5423, 0.639 ) }
    dend_27 { pt3dadd( 543.199, 529.014, 31.8892, 1.0472 ) }
    dend_27 { pt3dadd( 544.011, 528.401, 32.0048, 1.008 ) }
    dend_27 { pt3dadd( 544.735, 527.872, 32.1507, 0.9092 ) }
    dend_27 { pt3dadd( 545.67, 527.429, 32.2689, 0.8536 ) }
    dend_27 { pt3dadd( 546.146, 526.484, 32.2944, 0.589 ) }
    dend_27 { pt3dadd( 546.924, 526.15, 32.5119, 0.4258 ) }
    dend_27 { pt3dadd( 547.873, 526.035, 32.8065, 0.362 ) }
    dend_27 { pt3dadd( 548.777, 525.859, 32.8692, 0.4576 ) }
    dend_27 { pt3dadd( 549.661, 525.868, 32.8059, 0.5114 ) }
    dend_27 { pt3dadd( 550.344, 525.383, 32.9546, 0.5256 ) }
    dend_27 { pt3dadd( 551.168, 524.761, 33.1153, 0.5096 ) }
    dend_27 { pt3dadd( 551.982, 524.312, 33.2618, 0.4548 ) }
    dend_27 { pt3dadd( 552.887, 523.718, 33.3791, 0.4762 ) }
    dend_27 { pt3dadd( 553.615, 522.927, 33.5096, 0.6066 ) }
    dend_27 { pt3dadd( 554.223, 522.095, 33.8288, 0.8632 ) }
    dend_27 { pt3dadd( 554.865, 521.466, 34.2331, 0.8094 ) }
    dend_27 { pt3dadd( 555.65, 521.128, 34.6324, 0.764 ) }
    dend_27 { pt3dadd( 556.412, 520.613, 35.0826, 0.876 ) }
    dend_27 { pt3dadd( 557.189, 520.106, 35.3259, 0.815 ) }
    dend_27 { pt3dadd( 557.946, 520.013, 35.6182, 0.635 ) }
    dend_27 { pt3dadd( 558.902, 520.399, 35.9204, 0.6254 ) }
    dend_27 { pt3dadd( 559.59, 519.938, 36.0385, 0.6344 ) }
    dend_27 { pt3dadd( 560.1, 519.268, 36.0858, 0.5198 ) }
    dend_27 { pt3dadd( 560.229, 518.931, 36.5282, 0.4908 ) }
    dend_27 { pt3dadd( 560.237, 519.33, 37.1272, 0.4612 ) }
    dend_27 { pt3dadd( 561.0, 519.937, 37.8577, 0.5162 ) }
    dend_27 { pt3dadd( 561.942, 520.147, 38.6602, 0.7716 ) }
    dend_27 { pt3dadd( 562.601, 520.607, 39.6068, 0.7298 ) }
    dend_27 { pt3dadd( 563.412, 521.206, 40.3749, 0.6352 ) }
    dend_27 { pt3dadd( 564.548, 521.24, 40.9802, 0.7744 ) }
    dend_27 { pt3dadd( 565.491, 521.318, 41.7113, 0.6484 ) }
    dend_27 { pt3dadd( 565.462, 520.335, 42.4726, 0.6772 ) }
    dend_27 { pt3dadd( 565.55, 520.52, 43.4076, 0.6008 ) }
    dend_27 { pt3dadd( 565.502, 519.653, 44.2459, 0.6322 ) }
    dend_27 { pt3dadd( 565.711, 519.05, 44.9876, 0.5364 ) }
    dend_27 { pt3dadd( 565.692, 518.237, 45.684, 0.4192 ) }
    dend_27 { pt3dadd( 566.521, 517.535, 46.2218, 0.3658 ) }
    dend_27 { pt3dadd( 566.738, 516.5, 46.6085, 0.3872 ) }
    dend_27 { pt3dadd( 566.509, 515.864, 46.5802, 0.5292 ) }
    dend_27 { pt3dadd( 566.838, 514.855, 46.604, 0.5242 ) }
    dend_27 { pt3dadd( 567.435, 514.132, 46.6505, 0.445 ) }
    dend_27 { pt3dadd( 567.855, 513.21, 46.5198, 0.4084 ) }
    dend_27 { pt3dadd( 567.903, 512.224, 46.524, 0.4914 ) }
    dend_27 { pt3dadd( 568.12, 511.323, 46.4853, 0.5988 ) }
    dend_27 { pt3dadd( 568.216, 510.31, 46.4274, 0.5676 ) }
    dend_27 { pt3dadd( 568.483, 509.602, 46.1527, 0.483 ) }
    dend_27 { pt3dadd( 569.254, 509.423, 45.08, 0.4576 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 90/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 534.068, 535.537, 25.212, 0.4308 ) }
    dend_24 { pt3dadd( 534.497, 535.235, 25.5037, 0.388 ) }
    dend_24 { pt3dadd( 535.621, 535.049, 25.6003, 0.4256 ) }
    dend_24 { pt3dadd( 536.593, 534.508, 26.0554, 0.3846 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 94/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 551.065, 560.522, 34.9068, 0.2752 ) }
    dend_22 { pt3dadd( 550.869, 560.841, 35.9304, 0.2288 ) }
    dend_22 { pt3dadd( 550.384, 561.648, 36.433, 0.388 ) }
    dend_22 { pt3dadd( 549.829, 562.419, 37.0499, 0.538 ) }
    dend_22 { pt3dadd( 550.264, 563.198, 37.5603, 0.5054 ) }
    dend_22 { pt3dadd( 550.071, 563.705, 38.3337, 0.5796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 551.082, 563.966, 39.0312, 0.5226 ) }
    dend_22 { pt3dadd( 551.567, 564.673, 39.8031, 0.4436 ) }
    dend_22 { pt3dadd( 551.99, 565.642, 40.4751, 0.3988 ) }
    dend_22 { pt3dadd( 552.298, 566.471, 41.0018, 0.5084 ) }
    dend_22 { pt3dadd( 551.942, 567.488, 41.4646, 0.4626 ) }
    dend_22 { pt3dadd( 552.078, 568.22, 41.7844, 0.4432 ) }
    dend_22 { pt3dadd( 552.688, 568.953, 42.1431, 0.5456 ) }
    dend_22 { pt3dadd( 553.564, 569.435, 42.429, 0.5208 ) }
    dend_22 { pt3dadd( 554.039, 570.258, 42.6112, 0.6024 ) }
    dend_22 { pt3dadd( 554.497, 571.15, 42.7638, 0.5912 ) }
    dend_22 { pt3dadd( 554.885, 571.852, 43.0634, 0.4446 ) }
    dend_22 { pt3dadd( 555.077, 572.746, 43.23, 0.3264 ) }
    dend_22 { pt3dadd( 555.81, 573.258, 43.4347, 0.2766 ) }
    dend_22 { pt3dadd( 556.58, 573.709, 43.797, 0.2784 ) }
    dend_22 { pt3dadd( 556.937, 574.623, 44.2098, 0.2818 ) }
    dend_22 { pt3dadd( 557.916, 574.974, 44.7521, 0.2878 ) }
    dend_22 { pt3dadd( 558.706, 575.546, 45.3944, 0.3002 ) }
    dend_22 { pt3dadd( 559.503, 575.701, 46.1611, 0.3166 ) }
    dend_22 { pt3dadd( 560.11, 575.5, 46.8972, 0.3784 ) }
    dend_22 { pt3dadd( 561.026, 575.609, 47.4286, 0.343 ) }
    dend_22 { pt3dadd( 561.709, 576.118, 47.9279, 0.3172 ) }
    dend_22 { pt3dadd( 562.576, 576.24, 48.5139, 0.3056 ) }
    dend_22 { pt3dadd( 563.135, 576.463, 49.2352, 0.3342 ) }
    dend_22 { pt3dadd( 564.022, 576.805, 49.7871, 0.376 ) }
    dend_22 { pt3dadd( 565.164, 576.805, 50.2723, 0.5084 ) }
    dend_22 { pt3dadd( 566.155, 576.969, 50.864, 0.4858 ) }
    dend_22 { pt3dadd( 566.939, 577.643, 51.4018, 0.373 ) }
    dend_22 { pt3dadd( 567.804, 577.72, 51.9663, 0.2796 ) }
    dend_22 { pt3dadd( 568.777, 577.314, 52.4034, 0.2288 ) }
    dend_22 { pt3dadd( 569.483, 576.919, 53.48, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 30/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 551.065, 560.522, 34.9068, 0.2752 ) }
    dend_21 { pt3dadd( 551.376, 560.289, 36.1175, 0.2758 ) }
    dend_21 { pt3dadd( 551.728, 559.916, 36.7573, 0.2766 ) }
    dend_21 { pt3dadd( 551.294, 559.209, 37.5203, 0.2784 ) }
    dend_21 { pt3dadd( 551.552, 558.416, 38.162, 0.2818 ) }
    dend_21 { pt3dadd( 550.926, 557.605, 38.701, 0.2882 ) }
    dend_21 { pt3dadd( 550.512, 556.718, 39.1863, 0.3 ) }
    dend_21 { pt3dadd( 550.666, 556.531, 39.9386, 0.3224 ) }
    dend_21 { pt3dadd( 550.71, 555.444, 40.5964, 0.3588 ) }
    dend_21 { pt3dadd( 550.622, 554.48, 41.0446, 0.4524 ) }
    dend_21 { pt3dadd( 551.292, 553.653, 41.4994, 0.5 ) }
    dend_21 { pt3dadd( 552.351, 553.362, 41.9684, 0.5116 ) }
    dend_21 { pt3dadd( 552.983, 552.781, 42.3828, 0.4478 ) }
    dend_21 { pt3dadd( 554.084, 552.628, 42.726, 0.515 ) }
    dend_21 { pt3dadd( 554.952, 552.287, 43.2345, 0.4248 ) }
    dend_21 { pt3dadd( 555.982, 551.98, 43.6243, 0.3862 ) }
    dend_21 { pt3dadd( 557.009, 551.98, 43.9569, 0.3766 ) }
    dend_21 { pt3dadd( 557.82, 552.329, 44.3806, 0.5158 ) }
    dend_21 { pt3dadd( 558.821, 552.797, 44.7406, 0.4694 ) }
    dend_21 { pt3dadd( 559.775, 552.487, 45.1573, 0.4882 ) }
    dend_21 { pt3dadd( 560.395, 551.757, 45.4065, 0.473 ) }
    dend_21 { pt3dadd( 561.347, 551.52, 45.6002, 0.4592 ) }
    dend_21 { pt3dadd( 562.295, 551.321, 45.8534, 0.361 ) }
    dend_21 { pt3dadd( 563.192, 551.331, 45.8466, 0.3034 ) }
    dend_21 { pt3dadd( 564.285, 551.455, 45.8402, 0.2808 ) }
    dend_21 { pt3dadd( 565.227, 551.421, 45.7321, 0.2862 ) }
    dend_21 { pt3dadd( 566.245, 551.283, 45.8111, 0.2958 ) }
    dend_21 { pt3dadd( 566.807, 550.741, 45.8987, 0.315 ) }
    dend_21 { pt3dadd( 567.424, 550.416, 46.0079, 0.3454 ) }
    dend_21 { pt3dadd( 567.866, 550.035, 46.2949, 0.426 ) }
    dend_21 { pt3dadd( 568.857, 549.758, 46.4736, 0.458 ) }
    dend_21 { pt3dadd( 569.816, 549.806, 46.7121, 0.4008 ) }
    dend_21 { pt3dadd( 570.405, 550.009, 46.9924, 0.4026 ) }
    dend_21 { pt3dadd( 570.668, 549.153, 47.3864, 0.341 ) }
    dend_21 { pt3dadd( 571.649, 548.651, 47.6552, 0.3128 ) }
    dend_21 { pt3dadd( 572.494, 547.934, 47.8005, 0.2994 ) }
    dend_21 { pt3dadd( 573.413, 547.291, 47.985, 0.3156 ) }
    dend_21 { pt3dadd( 574.343, 547.308, 48.2306, 0.3762 ) }
    dend_21 { pt3dadd( 574.977, 547.045, 48.2628, 0.3388 ) }
    dend_21 { pt3dadd( 575.705, 546.381, 48.209, 0.3094 ) }
    dend_21 { pt3dadd( 576.553, 546.146, 48.3983, 0.292 ) }
    dend_21 { pt3dadd( 577.476, 545.618, 48.5654, 0.3064 ) }
    dend_21 { pt3dadd( 578.468, 545.31, 48.6548, 0.3354 ) }
    dend_21 { pt3dadd( 579.447, 545.129, 48.9023, 0.3778 ) }
    dend_21 { pt3dadd( 580.295, 544.825, 49.0302, 0.5118 ) }
    dend_21 { pt3dadd( 581.223, 544.335, 49.0512, 0.4922 ) }
    dend_21 { pt3dadd( 582.121, 544.086, 49.1798, 0.3846 ) }
    dend_21 { pt3dadd( 583.098, 544.251, 49.3623, 0.3 ) }
    dend_21 { pt3dadd( 584.213, 544.091, 49.4942, 0.2746 ) }
    dend_21 { pt3dadd( 585.34, 543.906, 49.5676, 0.2746 ) }
    dend_21 { pt3dadd( 586.228, 543.314, 49.6101, 0.2746 ) }
    dend_21 { pt3dadd( 587.143, 542.828, 49.6042, 0.2746 ) }
    dend_21 { pt3dadd( 588.286, 542.803, 49.5323, 0.2746 ) }
    dend_21 { pt3dadd( 589.394, 542.607, 49.4063, 0.2746 ) }
    dend_21 { pt3dadd( 590.223, 541.841, 49.2285, 0.2746 ) }
    dend_21 { pt3dadd( 591.252, 541.406, 48.9927, 0.2746 ) }
    dend_21 { pt3dadd( 592.385, 541.341, 48.697, 0.2746 ) }
    dend_21 { pt3dadd( 593.05, 540.797, 48.2079, 0.2746 ) }
    dend_21 { pt3dadd( 593.411, 540.547, 47.3668, 0.2746 ) }
    dend_21 { pt3dadd( 594.33, 540.426, 46.478, 0.2746 ) }
    dend_21 { pt3dadd( 595.469, 540.426, 45.7279, 0.2746 ) }
    dend_21 { pt3dadd( 596.613, 540.426, 45.1352, 0.2746 ) }
    dend_21 { pt3dadd( 597.754, 540.4, 44.6869, 0.2746 ) }
    dend_21 { pt3dadd( 598.102, 539.854, 44.2092, 0.2746 ) }
    dend_21 { pt3dadd( 598.749, 539.722, 43.7388, 0.2744 ) }
    dend_21 { pt3dadd( 599.829, 539.434, 43.3681, 0.2744 ) }
    dend_21 { pt3dadd( 600.951, 539.325, 43.0856, 0.2742 ) }
    dend_21 { pt3dadd( 602.033, 539.056, 42.8803, 0.2736 ) }
    dend_21 { pt3dadd( 603.031, 538.559, 42.7414, 0.2728 ) }
    dend_21 { pt3dadd( 604.058, 538.154, 42.6294, 0.2712 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( 605.199, 538.138, 42.5384, 0.2684 ) }
    dend_21 { pt3dadd( 606.343, 538.138, 42.4581, 0.2626 ) }
    dend_21 { pt3dadd( 606.781, 537.346, 42.3847, 0.2542 ) }
    dend_21 { pt3dadd( 607.486, 536.728, 42.2038, 0.2288 ) }
    dend_21 { pt3dadd( 608.494, 536.765, 42.0, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 5/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 488.052, 581.61, 27.4366, 0.4476 ) }
    dend_6 { pt3dadd( 486.948, 581.609, 27.2695, 0.3652 ) }
    dend_6 { pt3dadd( 485.805, 581.599, 27.2061, 0.4158 ) }
    dend_6 { pt3dadd( 484.699, 581.541, 27.0497, 0.438 ) }
    dend_6 { pt3dadd( 483.612, 581.195, 26.9085, 0.3688 ) }
    dend_6 { pt3dadd( 482.654, 580.603, 26.899, 0.3178 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 11/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 488.052, 581.61, 27.4366, 0.4476 ) }
    dend_3 { pt3dadd( 487.104, 581.618, 29.1416, 0.6198 ) }
    dend_3 { pt3dadd( 486.663, 580.716, 29.8262, 0.5116 ) }
    dend_3 { pt3dadd( 486.408, 581.055, 30.6692, 0.612 ) }
    dend_3 { pt3dadd( 486.428, 582.076, 31.334, 0.4808 ) }
    dend_3 { pt3dadd( 486.321, 582.868, 31.7153, 0.4054 ) }
    dend_3 { pt3dadd( 486.085, 583.582, 32.158, 0.3652 ) }
    dend_3 { pt3dadd( 485.643, 584.44, 32.3694, 0.4938 ) }
    dend_3 { pt3dadd( 485.169, 585.355, 32.3672, 0.4336 ) }
    dend_3 { pt3dadd( 484.87, 586.14, 32.4775, 0.3962 ) }
    dend_3 { pt3dadd( 485.216, 586.538, 32.9291, 0.426 ) }
    dend_3 { pt3dadd( 485.388, 587.618, 33.283, 0.458 ) }
    dend_3 { pt3dadd( 485.042, 588.564, 33.649, 0.4008 ) }
    dend_3 { pt3dadd( 485.366, 589.284, 34.0718, 0.4026 ) }
    dend_3 { pt3dadd( 486.062, 589.971, 34.2891, 0.3412 ) }
    dend_3 { pt3dadd( 486.305, 590.627, 34.3809, 0.3132 ) }
    dend_3 { pt3dadd( 486.123, 591.395, 34.2098, 0.3 ) }
    dend_3 { pt3dadd( 486.387, 592.499, 34.0558, 0.3164 ) }
    dend_3 { pt3dadd( 486.79, 593.472, 33.9951, 0.378 ) }
    dend_3 { pt3dadd( 486.832, 594.477, 33.8654, 0.3422 ) }
    dend_3 { pt3dadd( 485.897, 594.891, 33.8542, 0.3156 ) }
    dend_3 { pt3dadd( 485.327, 595.526, 33.8862, 0.303 ) }
    dend_3 { pt3dadd( 484.942, 596.347, 33.712, 0.329 ) }
    dend_3 { pt3dadd( 484.484, 596.933, 33.6722, 0.3652 ) }
    dend_3 { pt3dadd( 484.297, 597.839, 33.6045, 0.4936 ) }
    dend_3 { pt3dadd( 484.225, 598.78, 33.5608, 0.4336 ) }
    dend_3 { pt3dadd( 484.783, 599.562, 33.4662, 0.396 ) }
    dend_3 { pt3dadd( 484.904, 600.486, 33.1332, 0.4254 ) }
    // Section: apic_23, id: apic_23, parent: apic_21 (entry count 39/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 445.905, 585.614, 21.0714, 0.3532 ) }
    apic_23 { pt3dadd( 445.359, 586.191, 21.76, 0.3626 ) }
    apic_23 { pt3dadd( 445.196, 587.188, 22.0474, 0.489 ) }
    apic_23 { pt3dadd( 444.787, 588.021, 22.3063, 0.4252 ) }
    apic_23 { pt3dadd( 444.81, 588.97, 22.5462, 0.3792 ) }
    apic_23 { pt3dadd( 444.596, 589.857, 22.7664, 0.4006 ) }
    apic_23 { pt3dadd( 444.457, 590.723, 22.8745, 0.3792 ) }
    apic_23 { pt3dadd( 444.622, 591.589, 22.9327, 0.4094 ) }
    apic_23 { pt3dadd( 444.356, 592.568, 22.9176, 0.3532 ) }
    apic_23 { pt3dadd( 443.872, 593.469, 22.9114, 0.3366 ) }
    apic_23 { pt3dadd( 443.355, 594.314, 22.8157, 0.3384 ) }
    apic_23 { pt3dadd( 442.749, 595.137, 22.8446, 0.413 ) }
    apic_23 { pt3dadd( 442.108, 595.32, 23.14, 0.4328 ) }
    apic_23 { pt3dadd( 441.469, 595.761, 23.5885, 0.3596 ) }
    apic_23 { pt3dadd( 441.098, 596.431, 24.1866, 0.3006 ) }
    apic_23 { pt3dadd( 440.478, 596.787, 24.8742, 0.2758 ) }
    apic_23 { pt3dadd( 439.688, 596.476, 25.3646, 0.2766 ) }
    apic_23 { pt3dadd( 438.877, 597.051, 25.655, 0.2784 ) }
    apic_23 { pt3dadd( 439.486, 597.409, 25.9945, 0.2818 ) }
    apic_23 { pt3dadd( 440.394, 597.809, 26.3094, 0.2878 ) }
    apic_23 { pt3dadd( 441.002, 598.609, 26.6765, 0.3002 ) }
    apic_23 { pt3dadd( 441.507, 599.571, 27.0896, 0.3166 ) }
    apic_23 { pt3dadd( 441.47, 600.595, 27.5356, 0.3782 ) }
    apic_23 { pt3dadd( 441.036, 601.549, 28.0008, 0.3428 ) }
    apic_23 { pt3dadd( 440.958, 602.496, 28.2808, 0.3164 ) }
    apic_23 { pt3dadd( 440.327, 603.222, 28.6387, 0.3062 ) }
    apic_23 { pt3dadd( 440.371, 604.27, 28.861, 0.3278 ) }
    apic_23 { pt3dadd( 439.483, 604.731, 29.0718, 0.3984 ) }
    apic_23 { pt3dadd( 439.278, 605.51, 29.3404, 0.3824 ) }
    apic_23 { pt3dadd( 439.557, 606.05, 29.8466, 0.3794 ) }
    apic_23 { pt3dadd( 438.842, 606.311, 30.4326, 0.4728 ) }
    apic_23 { pt3dadd( 438.043, 606.112, 30.9002, 0.3938 ) }
    apic_23 { pt3dadd( 437.349, 606.418, 31.2564, 0.3264 ) }
    apic_23 { pt3dadd( 436.387, 606.518, 31.4885, 0.2766 ) }
    apic_23 { pt3dadd( 435.367, 606.965, 31.6711, 0.2782 ) }
    apic_23 { pt3dadd( 434.426, 607.244, 31.9782, 0.2816 ) }
    apic_23 { pt3dadd( 434.227, 608.204, 32.1647, 0.2874 ) }
    apic_23 { pt3dadd( 434.137, 609.29, 32.4243, 0.2992 ) }
    apic_23 { pt3dadd( 434.125, 610.114, 32.8191, 0.3152 ) }
    apic_23 { pt3dadd( 433.54, 611.016, 33.3099, 0.3754 ) }
    apic_23 { pt3dadd( 433.074, 611.78, 33.742, 0.3374 ) }
    apic_23 { pt3dadd( 433.118, 612.764, 34.1379, 0.3068 ) }
    apic_23 { pt3dadd( 432.52, 613.433, 34.6548, 0.2872 ) }
    apic_23 { pt3dadd( 431.638, 613.928, 35.2268, 0.2988 ) }
    apic_23 { pt3dadd( 431.016, 614.698, 35.7848, 0.3144 ) }
    apic_23 { pt3dadd( 430.716, 615.686, 36.2667, 0.3738 ) }
    apic_23 { pt3dadd( 430.602, 616.808, 36.6195, 0.3346 ) }
    apic_23 { pt3dadd( 430.487, 617.884, 36.7545, 0.3012 ) }
    apic_23 { pt3dadd( 430.699, 618.871, 36.7427, 0.2768 ) }
    apic_23 { pt3dadd( 431.265, 619.629, 36.8934, 0.2786 ) }
    apic_23 { pt3dadd( 431.447, 620.518, 36.885, 0.2822 ) }
    apic_23 { pt3dadd( 431.974, 621.214, 36.7133, 0.2888 ) }
    apic_23 { pt3dadd( 432.443, 621.993, 36.6974, 0.3004 ) }
    apic_23 { pt3dadd( 432.903, 621.935, 37.0944, 0.3238 ) }
    apic_23 { pt3dadd( 433.347, 622.532, 37.4422, 0.3602 ) }
    apic_23 { pt3dadd( 433.441, 623.016, 37.4819, 0.4604 ) }
    apic_23 { pt3dadd( 433.472, 623.626, 37.6466, 0.4862 ) }
    apic_23 { pt3dadd( 433.674, 624.601, 37.6589, 0.6254 ) }
    apic_23 { pt3dadd( 433.932, 625.221, 37.8638, 0.6704 ) }
    apic_23 { pt3dadd( 434.145, 625.635, 37.9716, 0.6422 ) }
    apic_23 { pt3dadd( 434.305, 626.295, 38.2298, 0.445 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_23 { pt3dadd( 434.036, 626.711, 38.1758, 0.3274 ) }
    apic_23 { pt3dadd( 434.262, 627.211, 37.8848, 0.2782 ) }
    apic_23 { pt3dadd( 434.034, 627.61, 37.9448, 0.2814 ) }
    apic_23 { pt3dadd( 434.722, 627.959, 38.2295, 0.2872 ) }
    apic_23 { pt3dadd( 435.178, 628.642, 38.3872, 0.2976 ) }
    apic_23 { pt3dadd( 435.292, 629.454, 38.7246, 0.3194 ) }
    apic_23 { pt3dadd( 435.684, 630.203, 39.0107, 0.3476 ) }
    apic_23 { pt3dadd( 436.372, 631.006, 39.2655, 0.4604 ) }
    apic_23 { pt3dadd( 436.74, 631.748, 39.6301, 0.373 ) }
    apic_23 { pt3dadd( 437.661, 632.214, 40.1069, 0.2796 ) }
    apic_23 { pt3dadd( 438.038, 631.717, 41.72, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 11/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 445.905, 585.614, 21.0714, 0.3532 ) }
    apic_22 { pt3dadd( 445.587, 585.654, 21.6517, 0.2288 ) }
    apic_22 { pt3dadd( 444.537, 586.061, 21.8703, 0.3446 ) }
    apic_22 { pt3dadd( 443.539, 586.403, 22.1682, 0.4304 ) }
    apic_22 { pt3dadd( 442.668, 587.021, 22.5315, 0.4364 ) }
    apic_22 { pt3dadd( 441.773, 587.66, 22.843, 0.5062 ) }
    apic_22 { pt3dadd( 441.082, 588.439, 22.9776, 0.5784 ) }
    apic_22 { pt3dadd( 440.366, 589.123, 23.1026, 0.5308 ) }
    apic_22 { pt3dadd( 439.45, 589.591, 23.1367, 0.4104 ) }
    apic_22 { pt3dadd( 438.614, 589.495, 23.0854, 0.3428 ) }
    apic_22 { pt3dadd( 437.666, 589.656, 23.0822, 0.3792 ) }
    apic_22 { pt3dadd( 436.714, 589.539, 23.0915, 0.3446 ) }
    apic_22 { pt3dadd( 435.9, 589.474, 23.2364, 0.3196 ) }
    apic_22 { pt3dadd( 434.917, 589.072, 23.2925, 0.3124 ) }
    apic_22 { pt3dadd( 434.081, 588.716, 23.2739, 0.3388 ) }
    apic_22 { pt3dadd( 433.176, 588.384, 23.3186, 0.4204 ) }
    apic_22 { pt3dadd( 432.121, 588.208, 23.45, 0.4168 ) }
    apic_22 { pt3dadd( 431.193, 587.769, 23.4476, 0.4736 ) }
    apic_22 { pt3dadd( 430.169, 587.562, 23.4707, 0.5 ) }
    apic_22 { pt3dadd( 429.138, 587.613, 23.634, 0.4746 ) }
    apic_22 { pt3dadd( 428.275, 587.628, 23.8787, 0.5592 ) }
    apic_22 { pt3dadd( 427.148, 587.668, 24.0295, 0.5338 ) }
    apic_22 { pt3dadd( 426.19, 587.362, 24.0307, 0.4566 ) }
    apic_22 { pt3dadd( 425.348, 586.786, 24.1977, 0.4598 ) }
    apic_22 { pt3dadd( 424.284, 586.414, 24.2954, 0.4436 ) }
    apic_22 { pt3dadd( 423.37, 586.358, 24.1376, 0.5196 ) }
    apic_22 { pt3dadd( 422.352, 586.166, 24.1398, 0.6032 ) }
    apic_22 { pt3dadd( 421.234, 586.07, 24.1758, 0.5788 ) }
    apic_22 { pt3dadd( 420.168, 586.434, 24.1926, 0.488 ) }
    apic_22 { pt3dadd( 419.049, 586.533, 24.2224, 0.542 ) }
    apic_22 { pt3dadd( 418.031, 586.753, 24.182, 0.4786 ) }
    apic_22 { pt3dadd( 417.125, 586.674, 24.3963, 0.469 ) }
    apic_22 { pt3dadd( 416.448, 586.479, 24.6104, 0.612 ) }
    apic_22 { pt3dadd( 415.587, 586.232, 24.9391, 0.554 ) }
    apic_22 { pt3dadd( 414.681, 585.98, 25.0576, 0.4148 ) }
    apic_22 { pt3dadd( 413.662, 585.941, 25.2874, 0.3088 ) }
    apic_22 { pt3dadd( 412.6, 585.736, 25.4868, 0.2906 ) }
    apic_22 { pt3dadd( 411.553, 585.616, 25.566, 0.3054 ) }
    apic_22 { pt3dadd( 410.673, 585.27, 25.6525, 0.3268 ) }
    apic_22 { pt3dadd( 410.053, 584.744, 25.6066, 0.3966 ) }
    apic_22 { pt3dadd( 409.018, 584.828, 25.6663, 0.3788 ) }
    apic_22 { pt3dadd( 408.293, 584.416, 25.8988, 0.373 ) }
    apic_22 { pt3dadd( 407.39, 584.903, 26.0543, 0.4604 ) }
    apic_22 { pt3dadd( 406.621, 584.706, 26.1294, 0.373 ) }
    apic_22 { pt3dadd( 405.876, 585.247, 26.0282, 0.2796 ) }
    apic_22 { pt3dadd( 404.976, 585.27, 25.76, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_5 (entry count 57/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 482.307, 553.522, 27.1146, 0.456 ) }
    apic_11 { pt3dadd( 482.251, 553.151, 27.3204, 0.4976 ) }
    apic_11 { pt3dadd( 481.96, 552.051, 27.5433, 0.5516 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 60/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 482.307, 553.522, 27.1146, 0.456 ) }
    apic_6 { pt3dadd( 481.229, 553.784, 26.5429, 0.2288 ) }
    apic_6 { pt3dadd( 480.178, 554.144, 26.3253, 0.324 ) }
    apic_6 { pt3dadd( 479.086, 554.364, 26.2478, 0.362 ) }
    apic_6 { pt3dadd( 477.969, 554.552, 26.2093, 0.458 ) }
    apic_6 { pt3dadd( 476.835, 554.434, 26.1916, 0.5102 ) }
    apic_6 { pt3dadd( 475.721, 554.352, 26.196, 0.532 ) }
    apic_6 { pt3dadd( 474.601, 554.561, 26.2205, 0.4802 ) }
    apic_6 { pt3dadd( 473.48, 554.623, 26.1755, 0.6008 ) }
    apic_6 { pt3dadd( 472.377, 554.682, 26.0581, 0.4606 ) }
    apic_6 { pt3dadd( 471.293, 554.952, 26.0164, 0.3656 ) }
    apic_6 { pt3dadd( 470.301, 555.5, 26.0131, 0.3032 ) }
    apic_6 { pt3dadd( 469.31, 556.062, 25.9915, 0.3224 ) }
    apic_6 { pt3dadd( 468.243, 556.366, 25.914, 0.389 ) }
    apic_6 { pt3dadd( 467.131, 556.351, 25.7981, 0.3624 ) }
    apic_6 { pt3dadd( 466.013, 556.127, 25.7177, 0.3532 ) }
    apic_6 { pt3dadd( 464.909, 555.83, 25.6784, 0.3722 ) }
    apic_6 { pt3dadd( 463.796, 555.603, 25.7118, 0.4614 ) }
    apic_6 { pt3dadd( 462.678, 555.492, 25.8475, 0.5926 ) }
    apic_6 { pt3dadd( 461.556, 555.378, 26.2867, 1.0016 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 80/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 490.421, 549.303, 23.0093, 0.6864 ) }
    apic_4 { pt3dadd( 491.087, 548.566, 22.9377, 0.3004 ) }
    apic_4 { pt3dadd( 491.163, 547.619, 23.0051, 0.3236 ) }
    apic_4 { pt3dadd( 491.577, 546.656, 23.1192, 0.3608 ) }
    apic_4 { pt3dadd( 491.594, 545.595, 23.1799, 0.4556 ) }
    apic_4 { pt3dadd( 491.828, 544.811, 23.2942, 0.5078 ) }
    apic_4 { pt3dadd( 492.378, 544.364, 23.172, 0.5184 ) }
    apic_4 { pt3dadd( 492.789, 543.584, 23.1412, 0.4974 ) }
    apic_4 { pt3dadd( 493.113, 542.575, 23.1706, 0.4278 ) }
    apic_4 { pt3dadd( 493.522, 542.001, 23.2932, 0.4476 ) }
    apic_4 { pt3dadd( 494.107, 541.353, 23.3763, 0.4494 ) }
    apic_4 { pt3dadd( 494.429, 540.37, 23.3579, 0.3914 ) }
    apic_4 { pt3dadd( 494.439, 539.406, 23.4282, 0.354 ) }
    apic_4 { pt3dadd( 495.106, 538.639, 23.4382, 0.4014 ) }
    apic_4 { pt3dadd( 496.009, 538.247, 23.4373, 0.3804 ) }
    apic_4 { pt3dadd( 496.811, 537.65, 23.4617, 0.4116 ) }
    apic_4 { pt3dadd( 497.41, 536.779, 23.6094, 0.3586 ) }
    apic_4 { pt3dadd( 497.791, 536.121, 23.8828, 0.3404 ) }
    apic_4 { pt3dadd( 498.124, 535.188, 24.1525, 0.3752 ) }
    apic_4 { pt3dadd( 497.97, 534.354, 24.4999, 0.337 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_4 { pt3dadd( 497.744, 533.617, 24.5814, 0.306 ) }
    apic_4 { pt3dadd( 497.872, 532.554, 24.4904, 0.2856 ) }
    apic_4 { pt3dadd( 498.06, 531.462, 24.3902, 0.295 ) }
    apic_4 { pt3dadd( 498.433, 530.562, 24.4561, 0.312 ) }
    apic_4 { pt3dadd( 498.784, 529.77, 24.4763, 0.3462 ) }
    apic_4 { pt3dadd( 499.005, 528.695, 24.3823, 0.3968 ) }
    apic_4 { pt3dadd( 499.404, 527.75, 24.3714, 0.5524 ) }
    apic_4 { pt3dadd( 499.756, 526.726, 24.2904, 0.5406 ) }
    apic_4 { pt3dadd( 499.814, 525.631, 24.2772, 0.6028 ) }
    apic_4 { pt3dadd( 500.053, 524.588, 24.3055, 0.7684 ) }
    apic_4 { pt3dadd( 500.35, 523.583, 24.3825, 0.6042 ) }
    apic_4 { pt3dadd( 501.226, 522.928, 24.389, 0.5266 ) }
    apic_4 { pt3dadd( 501.832, 522.008, 24.4808, 0.4262 ) }
    apic_4 { pt3dadd( 502.329, 521.34, 24.5287, 0.4862 ) }
    apic_4 { pt3dadd( 503.273, 520.854, 24.6456, 0.547 ) }
    apic_4 { pt3dadd( 504.02, 520.057, 24.6706, 0.447 ) }
    apic_4 { pt3dadd( 504.467, 519.139, 24.7671, 0.38 ) }
    apic_4 { pt3dadd( 504.844, 518.098, 24.7979, 0.3654 ) }
    apic_4 { pt3dadd( 505.221, 517.255, 24.9433, 0.4942 ) }
    apic_4 { pt3dadd( 505.837, 516.856, 25.2737, 0.4338 ) }
    apic_4 { pt3dadd( 505.991, 516.173, 25.4769, 0.401 ) }
    apic_4 { pt3dadd( 506.791, 515.944, 25.5269, 0.4128 ) }
    apic_4 { pt3dadd( 507.88, 515.75, 25.5816, 0.5414 ) }
    apic_4 { pt3dadd( 508.872, 515.944, 25.7707, 0.7186 ) }
    apic_4 { pt3dadd( 509.951, 516.095, 26.0032, 0.6566 ) }
    apic_4 { pt3dadd( 510.963, 515.959, 26.2216, 0.6092 ) }
    apic_4 { pt3dadd( 511.661, 515.347, 26.4424, 0.4212 ) }
    apic_4 { pt3dadd( 512.295, 514.609, 26.5779, 0.3304 ) }
    apic_4 { pt3dadd( 512.593, 513.656, 26.799, 0.2838 ) }
    apic_4 { pt3dadd( 512.817, 512.868, 26.9602, 0.2914 ) }
    apic_4 { pt3dadd( 512.936, 511.699, 26.9525, 0.3054 ) }
    apic_4 { pt3dadd( 513.218, 510.645, 27.0567, 0.3342 ) }
    apic_4 { pt3dadd( 513.447, 509.772, 27.2026, 0.3744 ) }
    apic_4 { pt3dadd( 513.968, 509.057, 27.3472, 0.5118 ) }
    apic_4 { pt3dadd( 514.435, 508.196, 27.4685, 0.461 ) }
    apic_4 { pt3dadd( 514.916, 507.458, 27.7208, 0.4766 ) }
    apic_4 { pt3dadd( 515.555, 506.696, 28.093, 0.4324 ) }
    apic_4 { pt3dadd( 516.238, 505.332, 28.3217, 0.475 ) }
    apic_4 { pt3dadd( 517.011, 504.496, 28.4558, 0.6356 ) }
    apic_4 { pt3dadd( 517.869, 503.742, 28.539, 0.767 ) }
    apic_4 { pt3dadd( 518.68, 502.949, 28.5762, 0.674 ) }
    apic_4 { pt3dadd( 518.956, 501.943, 28.5715, 0.5324 ) }
    apic_4 { pt3dadd( 518.494, 500.927, 28.5502, 0.5786 ) }
    apic_4 { pt3dadd( 517.931, 499.945, 28.5412, 0.5392 ) }
    apic_4 { pt3dadd( 517.817, 498.848, 28.5328, 0.6158 ) }
    apic_4 { pt3dadd( 518.048, 497.728, 28.5163, 0.7188 ) }
    apic_4 { pt3dadd( 518.264, 496.607, 28.4953, 0.8678 ) }
    apic_4 { pt3dadd( 518.331, 495.479, 28.506, 0.6626 ) }
    apic_4 { pt3dadd( 518.2, 494.362, 28.5015, 0.5604 ) }
    apic_4 { pt3dadd( 517.955, 493.333, 28.3352, 0.6224 ) }
    apic_4 { pt3dadd( 517.738, 492.268, 28.1103, 0.8878 ) }
    apic_4 { pt3dadd( 517.552, 491.154, 27.9793, 0.8788 ) }
    apic_4 { pt3dadd( 517.647, 490.043, 27.901, 0.7772 ) }
    apic_4 { pt3dadd( 517.665, 488.932, 27.7758, 0.7732 ) }
    apic_4 { pt3dadd( 517.483, 487.813, 27.6625, 0.7862 ) }
    apic_4 { pt3dadd( 517.361, 486.677, 27.601, 0.9396 ) }
    apic_4 { pt3dadd( 517.125, 485.563, 27.5642, 1.053 ) }
    apic_4 { pt3dadd( 517.054, 484.432, 27.5389, 0.9512 ) }
    apic_4 { pt3dadd( 517.287, 483.321, 27.5401, 0.9038 ) }
    apic_4 { pt3dadd( 517.412, 482.193, 27.5975, 0.5874 ) }
    apic_4 { pt3dadd( 517.458, 481.07, 27.6472, 0.423 ) }
    apic_4 { pt3dadd( 517.602, 479.974, 27.6314, 0.3554 ) }
    apic_4 { pt3dadd( 517.923, 478.92, 27.7017, 0.4532 ) }
    apic_4 { pt3dadd( 518.111, 477.899, 27.9443, 0.4662 ) }
    apic_4 { pt3dadd( 517.781, 476.866, 28.264, 0.6216 ) }
    apic_4 { pt3dadd( 517.194, 475.907, 28.5916, 0.501 ) }
    apic_4 { pt3dadd( 516.863, 474.871, 28.8747, 0.4304 ) }
    apic_4 { pt3dadd( 517.078, 473.765, 29.0324, 0.4732 ) }
    apic_4 { pt3dadd( 517.364, 472.673, 29.057, 0.3946 ) }
    apic_4 { pt3dadd( 517.375, 471.549, 28.9607, 0.328 ) }
    apic_4 { pt3dadd( 517.32, 470.43, 28.7703, 0.2798 ) }
    apic_4 { pt3dadd( 517.229, 469.325, 28.5312, 0.2842 ) }
    apic_4 { pt3dadd( 517.049, 468.227, 28.301, 0.2922 ) }
    apic_4 { pt3dadd( 516.967, 467.124, 28.2414, 0.3082 ) }
    apic_4 { pt3dadd( 516.926, 466.015, 28.3234, 0.3316 ) }
    apic_4 { pt3dadd( 516.714, 464.901, 28.4533, 0.407 ) }
    apic_4 { pt3dadd( 516.366, 463.824, 28.6387, 0.3908 ) }
    apic_4 { pt3dadd( 516.034, 462.757, 28.7834, 0.4308 ) }
    apic_4 { pt3dadd( 515.738, 461.667, 28.8467, 0.394 ) }
    apic_4 { pt3dadd( 515.587, 460.54, 28.8831, 0.408 ) }
    apic_4 { pt3dadd( 515.407, 459.436, 28.9646, 0.491 ) }
    apic_4 { pt3dadd( 515.188, 458.331, 29.0864, 0.5976 ) }
    apic_4 { pt3dadd( 514.984, 457.211, 29.1637, 0.5676 ) }
    apic_4 { pt3dadd( 514.791, 456.095, 29.2552, 0.4722 ) }
    apic_4 { pt3dadd( 514.992, 455.031, 29.2732, 0.4894 ) }
    apic_4 { pt3dadd( 515.425, 453.983, 29.2527, 0.493 ) }
    apic_4 { pt3dadd( 515.979, 453.018, 29.3168, 0.6378 ) }
    apic_4 { pt3dadd( 516.724, 452.171, 29.4126, 0.6938 ) }
    apic_4 { pt3dadd( 517.572, 451.406, 29.4902, 0.6852 ) }
    apic_4 { pt3dadd( 518.558, 450.894, 29.5, 0.5266 ) }
    apic_4 { pt3dadd( 519.504, 450.313, 29.5918, 0.47 ) }
    apic_4 { pt3dadd( 520.171, 449.417, 29.748, 0.5844 ) }
    apic_4 { pt3dadd( 520.862, 448.512, 29.925, 0.6466 ) }
    apic_4 { pt3dadd( 521.332, 447.744, 30.0656, 0.573 ) }
    apic_4 { pt3dadd( 521.658, 447.409, 30.4718, 0.44 ) }
    apic_4 { pt3dadd( 522.171, 446.73, 30.655, 0.404 ) }
    apic_4 { pt3dadd( 522.576, 445.872, 30.7975, 0.4598 ) }
    apic_4 { pt3dadd( 522.401, 444.936, 30.9828, 0.6556 ) }
    apic_4 { pt3dadd( 522.352, 443.917, 31.2122, 0.7998 ) }
    apic_4 { pt3dadd( 522.958, 443.078, 31.3723, 0.7534 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_4 { pt3dadd( 523.62, 442.777, 31.5484, 0.592 ) }
    apic_4 { pt3dadd( 524.412, 442.607, 31.8839, 0.4292 ) }
    apic_4 { pt3dadd( 525.15, 442.059, 32.06, 0.3782 ) }
    apic_4 { pt3dadd( 526.104, 441.65, 32.2708, 0.4406 ) }
    apic_4 { pt3dadd( 526.924, 441.241, 32.6413, 0.4792 ) }
    apic_4 { pt3dadd( 527.57, 440.774, 32.6978, 0.4704 ) }
    apic_4 { pt3dadd( 528.178, 439.987, 32.7102, 0.3832 ) }
    apic_4 { pt3dadd( 528.638, 439.111, 32.7054, 0.339 ) }
    apic_4 { pt3dadd( 529.554, 438.599, 32.8894, 0.3724 ) }
    apic_4 { pt3dadd( 530.229, 438.08, 33.2206, 0.332 ) }
    apic_4 { pt3dadd( 530.96, 437.429, 33.6566, 0.2966 ) }
    apic_4 { pt3dadd( 531.479, 436.547, 34.1326, 0.2684 ) }
    apic_4 { pt3dadd( 531.936, 435.911, 34.2773, 0.2626 ) }
    apic_4 { pt3dadd( 532.418, 435.077, 34.4473, 0.2542 ) }
    apic_4 { pt3dadd( 532.866, 434.483, 34.6102, 0.2288 ) }
    apic_4 { pt3dadd( 533.562, 433.919, 35.28, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 16/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 490.421, 549.303, 23.0093, 0.6864 ) }
    apic_3 { pt3dadd( 490.715, 547.939, 22.2465, 0.3594 ) }
    apic_3 { pt3dadd( 490.145, 547.164, 21.8562, 0.3004 ) }
    apic_3 { pt3dadd( 489.77, 546.37, 21.3417, 0.2752 ) }
    apic_3 { pt3dadd( 489.982, 545.27, 20.8075, 0.276 ) }
    apic_3 { pt3dadd( 490.366, 544.214, 20.2929, 0.277 ) }
    apic_3 { pt3dadd( 490.707, 543.144, 19.8827, 0.2794 ) }
    apic_3 { pt3dadd( 490.419, 542.331, 19.4396, 0.2834 ) }
    apic_3 { pt3dadd( 490.354, 541.517, 18.9145, 0.291 ) }
    apic_3 { pt3dadd( 490.479, 540.439, 18.5971, 0.3062 ) }
    apic_3 { pt3dadd( 490.793, 539.349, 18.4895, 0.3278 ) }
    apic_3 { pt3dadd( 491.46, 538.446, 18.5698, 0.3986 ) }
    apic_3 { pt3dadd( 491.863, 537.751, 19.0026, 0.3828 ) }
    apic_3 { pt3dadd( 492.426, 536.984, 19.6212, 0.38 ) }
    apic_3 { pt3dadd( 493.265, 536.26, 20.2068, 0.474 ) }
    apic_3 { pt3dadd( 494.187, 535.601, 20.5681, 0.3962 ) }
    apic_3 { pt3dadd( 495.072, 534.896, 20.7327, 0.331 ) }
    apic_3 { pt3dadd( 495.82, 534.065, 20.7873, 0.2854 ) }
    apic_3 { pt3dadd( 496.262, 533.017, 20.7553, 0.2942 ) }
    apic_3 { pt3dadd( 496.971, 532.127, 20.6898, 0.3118 ) }
    apic_3 { pt3dadd( 497.878, 531.448, 20.6249, 0.3396 ) }
    apic_3 { pt3dadd( 498.913, 530.966, 20.571, 0.4156 ) }
    apic_3 { pt3dadd( 499.822, 530.3, 20.5149, 0.4372 ) }
    apic_3 { pt3dadd( 500.473, 529.361, 20.4382, 0.3676 ) }
    apic_3 { pt3dadd( 501.095, 528.426, 20.3074, 0.3152 ) }
    apic_3 { pt3dadd( 501.857, 527.619, 20.1132, 0.304 ) }
    apic_3 { pt3dadd( 502.651, 526.795, 19.9628, 0.324 ) }
    apic_3 { pt3dadd( 503.376, 525.915, 19.8633, 0.3918 ) }
    apic_3 { pt3dadd( 503.985, 524.948, 19.812, 0.3674 ) }
    apic_3 { pt3dadd( 504.735, 524.132, 19.8229, 0.3644 ) }
    apic_3 { pt3dadd( 505.704, 523.565, 19.914, 0.3834 ) }
    apic_3 { pt3dadd( 506.551, 522.825, 20.0181, 0.5286 ) }
    apic_3 { pt3dadd( 507.295, 521.96, 20.0483, 0.4928 ) }
    apic_3 { pt3dadd( 508.188, 521.352, 19.9641, 0.5328 ) }
    apic_3 { pt3dadd( 509.284, 521.237, 19.7598, 0.5496 ) }
    apic_3 { pt3dadd( 510.377, 521.427, 19.4946, 0.6294 ) }
    apic_3 { pt3dadd( 511.426, 521.769, 19.2355, 0.5418 ) }
    apic_3 { pt3dadd( 512.506, 521.718, 19.0926, 0.6068 ) }
    apic_3 { pt3dadd( 513.575, 521.38, 18.9529, 0.5384 ) }
    apic_3 { pt3dadd( 514.673, 521.339, 18.7866, 0.6426 ) }
    apic_3 { pt3dadd( 515.793, 521.326, 18.66, 0.6292 ) }
    apic_3 { pt3dadd( 516.881, 520.989, 18.5586, 0.6944 ) }
    apic_3 { pt3dadd( 517.96, 520.623, 18.4595, 0.6048 ) }
    apic_3 { pt3dadd( 519.065, 520.371, 18.4193, 0.774 ) }
    apic_3 { pt3dadd( 520.192, 520.241, 18.4471, 0.6048 ) }
    apic_3 { pt3dadd( 521.3, 520.003, 18.4899, 0.5756 ) }
    apic_3 { pt3dadd( 522.355, 519.566, 18.5411, 0.5116 ) }
    apic_3 { pt3dadd( 523.052, 518.925, 18.61, 0.672 ) }
    apic_3 { pt3dadd( 523.954, 518.518, 18.7658, 0.759 ) }
    apic_3 { pt3dadd( 524.876, 518.021, 18.7706, 0.7966 ) }
    apic_3 { pt3dadd( 525.787, 517.889, 18.5613, 0.7788 ) }
    apic_3 { pt3dadd( 526.583, 517.456, 18.4094, 0.7148 ) }
    apic_3 { pt3dadd( 526.822, 516.745, 18.5033, 0.747 ) }
    apic_3 { pt3dadd( 527.63, 516.302, 18.3872, 0.76 ) }
    apic_3 { pt3dadd( 528.429, 515.57, 18.2031, 0.7818 ) }
    apic_3 { pt3dadd( 528.552, 514.647, 18.26, 0.6052 ) }
    apic_3 { pt3dadd( 529.158, 514.686, 18.5031, 0.4158 ) }
    apic_3 { pt3dadd( 529.672, 515.163, 18.4775, 0.3102 ) }
    apic_3 { pt3dadd( 529.769, 514.666, 18.1823, 0.2936 ) }
    apic_3 { pt3dadd( 529.737, 513.725, 18.1297, 0.3098 ) }
    apic_3 { pt3dadd( 530.466, 513.165, 18.1323, 0.3404 ) }
    apic_3 { pt3dadd( 531.063, 512.704, 17.9905, 0.3936 ) }
    apic_3 { pt3dadd( 531.667, 511.916, 17.7209, 0.51 ) }
    apic_3 { pt3dadd( 532.07, 511.324, 17.7682, 0.6398 ) }
    apic_3 { pt3dadd( 532.854, 510.915, 17.8522, 0.6114 ) }
    apic_3 { pt3dadd( 533.193, 510.828, 17.6252, 0.7212 ) }
    apic_3 { pt3dadd( 533.762, 509.995, 17.4981, 0.8212 ) }
    apic_3 { pt3dadd( 534.373, 509.705, 17.1432, 0.8236 ) }
    apic_3 { pt3dadd( 534.814, 509.259, 17.0965, 0.572 ) }
    apic_3 { pt3dadd( 535.3, 508.765, 17.2553, 0.4342 ) }
    apic_3 { pt3dadd( 535.411, 507.919, 17.2982, 0.4134 ) }
    apic_3 { pt3dadd( 535.592, 507.051, 17.4049, 0.6084 ) }
    apic_3 { pt3dadd( 536.104, 506.275, 17.5444, 0.5234 ) }
    apic_3 { pt3dadd( 537.159, 505.991, 17.6061, 0.473 ) }
    apic_3 { pt3dadd( 537.043, 505.33, 17.5663, 0.5478 ) }
    apic_3 { pt3dadd( 537.357, 504.501, 17.408, 0.5534 ) }
    apic_3 { pt3dadd( 538.139, 503.784, 17.2267, 0.5234 ) }
    apic_3 { pt3dadd( 538.71, 503.805, 16.6252, 0.4354 ) }
    apic_3 { pt3dadd( 538.824, 503.288, 15.7654, 0.4312 ) }
    apic_3 { pt3dadd( 538.554, 502.604, 14.7669, 0.565 ) }
    apic_3 { pt3dadd( 538.479, 501.673, 14.0138, 0.5848 ) }
    apic_3 { pt3dadd( 539.293, 501.186, 13.2779, 0.5848 ) }
    apic_3 { pt3dadd( 540.261, 501.072, 12.887, 0.5338 ) }
    apic_3 { pt3dadd( 540.629, 501.301, 12.1022, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 0/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 536.593, 534.508, 26.0554, 0.3846 ) }
    dend_26 { pt3dadd( 537.115, 534.094, 25.5188, 0.4576 ) }
    dend_26 { pt3dadd( 538.153, 533.685, 25.258, 0.5624 ) }
    dend_26 { pt3dadd( 539.245, 534.004, 25.0018, 0.4288 ) }
    dend_26 { pt3dadd( 540.164, 533.389, 24.7018, 0.3438 ) }
    dend_26 { pt3dadd( 540.45, 532.324, 24.3306, 0.3098 ) }
    dend_26 { pt3dadd( 541.136, 531.427, 24.0033, 0.3346 ) }
    dend_26 { pt3dadd( 542.119, 530.845, 23.7102, 0.4122 ) }
    dend_26 { pt3dadd( 543.055, 530.247, 23.3846, 0.4004 ) }
    dend_26 { pt3dadd( 543.979, 529.888, 22.9297, 0.4496 ) }
    dend_26 { pt3dadd( 545.082, 529.685, 22.6013, 0.4252 ) }
    dend_26 { pt3dadd( 545.98, 529.039, 22.3528, 0.484 ) }
    dend_26 { pt3dadd( 546.625, 528.124, 22.0666, 0.543 ) }
    dend_26 { pt3dadd( 547.521, 527.534, 21.685, 0.4392 ) }
    dend_26 { pt3dadd( 548.476, 527.1, 21.2301, 0.365 ) }
    dend_26 { pt3dadd( 548.906, 526.224, 20.7143, 0.3422 ) }
    dend_26 { pt3dadd( 549.023, 525.114, 20.2423, 0.427 ) }
    dend_26 { pt3dadd( 549.528, 524.12, 19.8875, 0.4274 ) }
    dend_26 { pt3dadd( 550.4, 523.441, 19.6698, 0.5016 ) }
    dend_26 { pt3dadd( 551.462, 523.174, 19.4941, 0.511 ) }
    dend_26 { pt3dadd( 552.544, 523.363, 19.2537, 0.694 ) }
    dend_26 { pt3dadd( 553.555, 523.865, 18.9585, 0.685 ) }
    dend_26 { pt3dadd( 554.236, 524.642, 18.6162, 0.5288 ) }
    dend_26 { pt3dadd( 554.726, 525.0, 18.0597, 0.4612 ) }
    dend_26 { pt3dadd( 555.294, 525.501, 17.5036, 0.4016 ) }
    dend_26 { pt3dadd( 555.954, 526.065, 16.9759, 0.4296 ) }
    dend_26 { pt3dadd( 556.795, 526.023, 16.6687, 0.4944 ) }
    dend_26 { pt3dadd( 557.819, 525.796, 16.4577, 0.7812 ) }
    dend_26 { pt3dadd( 558.789, 525.454, 16.3768, 0.7342 ) }
    dend_26 { pt3dadd( 559.893, 525.325, 16.3874, 0.71 ) }
    dend_26 { pt3dadd( 560.793, 524.874, 16.3235, 0.5882 ) }
    dend_26 { pt3dadd( 561.863, 524.652, 16.1381, 0.5066 ) }
    dend_26 { pt3dadd( 562.888, 524.821, 15.8613, 0.572 ) }
    dend_26 { pt3dadd( 563.8, 524.638, 15.513, 0.5558 ) }
    dend_26 { pt3dadd( 564.78, 524.264, 15.3201, 0.5058 ) }
    dend_26 { pt3dadd( 565.497, 523.596, 15.1359, 0.5106 ) }
    dend_26 { pt3dadd( 566.317, 523.161, 15.1126, 0.7322 ) }
    dend_26 { pt3dadd( 567.3, 523.037, 15.3332, 0.798 ) }
    dend_26 { pt3dadd( 568.338, 522.676, 15.5813, 0.7626 ) }
    dend_26 { pt3dadd( 569.415, 522.321, 15.8545, 0.7768 ) }
    dend_26 { pt3dadd( 570.482, 522.021, 16.156, 0.8728 ) }
    dend_26 { pt3dadd( 571.544, 521.957, 16.3947, 0.7118 ) }
    dend_26 { pt3dadd( 572.343, 522.236, 16.8, 0.4576 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 43/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 536.593, 534.508, 26.0554, 0.3846 ) }
    dend_25 { pt3dadd( 536.631, 534.116, 25.718, 0.3886 ) }
    dend_25 { pt3dadd( 536.653, 533.006, 25.5647, 0.466 ) }
    dend_25 { pt3dadd( 536.672, 531.873, 25.4858, 0.497 ) }
    dend_25 { pt3dadd( 536.823, 530.75, 25.4607, 0.645 ) }
    dend_25 { pt3dadd( 536.849, 529.622, 25.3828, 0.707 ) }
    dend_25 { pt3dadd( 537.489, 528.872, 25.1819, 0.71 ) }
    dend_25 { pt3dadd( 538.339, 528.148, 24.9747, 0.5732 ) }
    dend_25 { pt3dadd( 539.102, 527.3, 24.8341, 0.5512 ) }
    dend_25 { pt3dadd( 539.63, 526.305, 24.8019, 0.7582 ) }
    dend_25 { pt3dadd( 539.833, 525.261, 24.9505, 0.856 ) }
    dend_25 { pt3dadd( 539.882, 524.146, 25.1747, 0.8234 ) }
    dend_25 { pt3dadd( 540.053, 523.055, 25.2787, 1.115 ) }
    dend_25 { pt3dadd( 540.539, 522.035, 25.3245, 1.0916 ) }
    dend_25 { pt3dadd( 541.326, 521.261, 25.4053, 0.811 ) }
    dend_25 { pt3dadd( 542.376, 520.838, 25.4248, 0.5264 ) }
    dend_25 { pt3dadd( 543.284, 520.279, 25.2386, 0.4586 ) }
    dend_25 { pt3dadd( 544.324, 519.818, 25.0637, 0.6162 ) }
    dend_25 { pt3dadd( 545.205, 519.128, 24.8944, 0.6766 ) }
    dend_25 { pt3dadd( 545.701, 518.159, 24.6534, 0.7704 ) }
    dend_25 { pt3dadd( 546.089, 517.193, 24.3597, 0.8042 ) }
    dend_25 { pt3dadd( 545.809, 516.39, 24.1188, 0.8596 ) }
    dend_25 { pt3dadd( 546.386, 515.584, 24.0456, 0.7694 ) }
    dend_25 { pt3dadd( 546.814, 514.766, 23.8435, 0.6238 ) }
    dend_25 { pt3dadd( 547.276, 513.893, 23.7929, 0.477 ) }
    dend_25 { pt3dadd( 547.879, 513.208, 23.8776, 0.5218 ) }
    dend_25 { pt3dadd( 548.209, 512.308, 24.0707, 0.4392 ) }
    dend_25 { pt3dadd( 548.737, 511.551, 24.0957, 0.4052 ) }
    dend_25 { pt3dadd( 549.713, 511.248, 24.0607, 0.4502 ) }
    dend_25 { pt3dadd( 550.38, 510.963, 24.1775, 0.4666 ) }
    dend_25 { pt3dadd( 550.523, 510.154, 24.0284, 0.594 ) }
    dend_25 { pt3dadd( 550.827, 509.075, 23.8162, 0.5866 ) }
    dend_25 { pt3dadd( 551.542, 508.267, 23.535, 0.6108 ) }
    dend_25 { pt3dadd( 552.22, 507.783, 23.3666, 0.472 ) }
    dend_25 { pt3dadd( 552.971, 507.257, 23.1109, 0.4214 ) }
    dend_25 { pt3dadd( 553.447, 506.656, 22.7341, 0.4676 ) }
    dend_25 { pt3dadd( 554.159, 505.839, 22.5381, 0.5594 ) }
    dend_25 { pt3dadd( 554.736, 505.013, 22.4871, 0.4724 ) }
    dend_25 { pt3dadd( 555.324, 504.117, 22.4276, 0.4146 ) }
    dend_25 { pt3dadd( 556.148, 503.561, 22.3679, 0.4912 ) }
    dend_25 { pt3dadd( 556.579, 502.72, 22.2266, 0.4276 ) }
    dend_25 { pt3dadd( 557.158, 501.796, 22.0032, 0.3918 ) }
    dend_25 { pt3dadd( 557.714, 500.827, 21.8157, 0.3864 ) }
    dend_25 { pt3dadd( 558.13, 499.784, 21.6656, 0.5352 ) }
    dend_25 { pt3dadd( 558.74, 499.216, 21.4794, 0.5004 ) }
    dend_25 { pt3dadd( 559.64, 498.995, 21.1448, 0.5702 ) }
    dend_25 { pt3dadd( 560.558, 498.48, 20.8379, 0.5056 ) }
    dend_25 { pt3dadd( 561.476, 498.37, 20.473, 0.4112 ) }
    dend_25 { pt3dadd( 562.328, 497.648, 20.15, 0.3436 ) }
    dend_25 { pt3dadd( 562.873, 497.129, 19.6675, 0.3812 ) }
    dend_25 { pt3dadd( 563.723, 496.839, 19.3836, 0.3482 ) }
    dend_25 { pt3dadd( 564.352, 496.231, 19.0013, 0.3262 ) }
    dend_25 { pt3dadd( 564.564, 495.402, 18.5841, 0.3254 ) }
    dend_25 { pt3dadd( 564.819, 494.874, 18.2988, 0.3584 ) }
    dend_25 { pt3dadd( 565.294, 494.465, 17.8713, 0.4804 ) }
    dend_25 { pt3dadd( 566.02, 494.06, 17.841, 0.4096 ) }
    dend_25 { pt3dadd( 566.714, 493.857, 18.0859, 0.3502 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_25 { pt3dadd( 567.396, 493.984, 18.5131, 0.3476 ) }
    dend_25 { pt3dadd( 567.709, 494.583, 19.0191, 0.2796 ) }
    dend_25 { pt3dadd( 568.568, 494.666, 19.88, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 3/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 482.654, 580.603, 26.899, 0.3178 ) }
    dend_10 { pt3dadd( 481.196, 579.84, 26.6501, 0.6584 ) }
    dend_10 { pt3dadd( 480.173, 579.33, 26.5527, 0.4544 ) }
    dend_10 { pt3dadd( 479.167, 578.787, 26.482, 0.4454 ) }
    dend_10 { pt3dadd( 478.251, 578.102, 26.4397, 0.4654 ) }
    dend_10 { pt3dadd( 477.427, 577.309, 26.4251, 0.5532 ) }
    dend_10 { pt3dadd( 476.602, 576.516, 26.4353, 0.6988 ) }
    dend_10 { pt3dadd( 475.724, 575.783, 26.4628, 0.5952 ) }
    dend_10 { pt3dadd( 474.72, 575.258, 26.5353, 0.6138 ) }
    dend_10 { pt3dadd( 473.685, 574.844, 26.6704, 0.5396 ) }
    dend_10 { pt3dadd( 472.545, 574.747, 26.752, 0.4744 ) }
    dend_10 { pt3dadd( 471.417, 574.745, 26.7219, 0.4574 ) }
    dend_10 { pt3dadd( 470.299, 574.742, 26.3169, 0.6092 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 16/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 482.654, 580.603, 26.899, 0.3178 ) }
    dend_7 { pt3dadd( 481.664, 581.372, 27.0654, 0.307 ) }
    dend_7 { pt3dadd( 480.708, 581.867, 27.0859, 0.337 ) }
    dend_7 { pt3dadd( 479.686, 581.844, 26.9128, 0.3798 ) }
    dend_7 { pt3dadd( 478.807, 582.461, 26.7384, 0.5206 ) }
    dend_7 { pt3dadd( 478.299, 583.451, 26.6481, 0.4832 ) }
    dend_7 { pt3dadd( 477.518, 584.235, 26.4828, 0.4884 ) }
    dend_7 { pt3dadd( 476.407, 584.328, 26.2993, 0.5958 ) }
    dend_7 { pt3dadd( 475.31, 584.011, 26.1519, 0.7786 ) }
    dend_7 { pt3dadd( 474.205, 584.273, 26.0261, 0.9682 ) }
    dend_7 { pt3dadd( 473.371, 585.049, 25.8796, 0.8988 ) }
    dend_7 { pt3dadd( 472.771, 585.981, 25.6471, 0.756 ) }
    dend_7 { pt3dadd( 472.16, 586.941, 25.135, 0.7876 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 29/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 484.904, 600.486, 33.1332, 0.4254 ) }
    dend_5 { pt3dadd( 484.95, 600.611, 34.5156, 0.2288 ) }
    dend_5 { pt3dadd( 485.463, 601.037, 35.2024, 0.3146 ) }
    dend_5 { pt3dadd( 485.857, 601.434, 35.9206, 0.3744 ) }
    dend_5 { pt3dadd( 485.699, 602.055, 36.5515, 0.3356 ) }
    dend_5 { pt3dadd( 486.449, 601.702, 37.2378, 0.3034 ) }
    dend_5 { pt3dadd( 486.771, 602.164, 37.9747, 0.2808 ) }
    dend_5 { pt3dadd( 486.543, 602.732, 38.67, 0.2862 ) }
    dend_5 { pt3dadd( 487.203, 602.932, 39.1717, 0.296 ) }
    dend_5 { pt3dadd( 487.573, 602.332, 39.3716, 0.315 ) }
    dend_5 { pt3dadd( 488.05, 602.895, 39.2179, 0.3454 ) }
    dend_5 { pt3dadd( 488.433, 603.553, 38.8962, 0.4264 ) }
    dend_5 { pt3dadd( 488.386, 604.38, 38.8814, 0.4576 ) }
    dend_5 { pt3dadd( 488.9, 605.12, 39.1056, 0.4064 ) }
    dend_5 { pt3dadd( 489.822, 605.398, 39.5917, 0.383 ) }
    dend_5 { pt3dadd( 490.299, 605.814, 40.3598, 0.4496 ) }
    dend_5 { pt3dadd( 491.081, 606.531, 41.0855, 0.4964 ) }
    dend_5 { pt3dadd( 491.707, 607.117, 41.8216, 0.4976 ) }
    dend_5 { pt3dadd( 492.601, 607.472, 42.5244, 0.458 ) }
    dend_5 { pt3dadd( 493.184, 608.291, 43.0329, 0.3592 ) }
    dend_5 { pt3dadd( 493.979, 608.773, 43.3446, 0.3 ) }
    dend_5 { pt3dadd( 494.208, 609.877, 43.5523, 0.2746 ) }
    dend_5 { pt3dadd( 494.873, 610.438, 43.7156, 0.2746 ) }
    dend_5 { pt3dadd( 496.016, 610.443, 43.8525, 0.2746 ) }
    dend_5 { pt3dadd( 497.089, 610.724, 43.995, 0.2746 ) }
    dend_5 { pt3dadd( 497.945, 611.105, 44.2585, 0.2748 ) }
    dend_5 { pt3dadd( 498.675, 611.771, 44.6676, 0.275 ) }
    dend_5 { pt3dadd( 499.525, 612.265, 45.0811, 0.2752 ) }
    dend_5 { pt3dadd( 499.947, 613.242, 45.5353, 0.2758 ) }
    dend_5 { pt3dadd( 500.476, 614.241, 45.9217, 0.2768 ) }
    dend_5 { pt3dadd( 500.929, 615.291, 46.2546, 0.2786 ) }
    dend_5 { pt3dadd( 501.733, 616.093, 46.5483, 0.2822 ) }
    dend_5 { pt3dadd( 502.569, 616.849, 46.8692, 0.2886 ) }
    dend_5 { pt3dadd( 503.511, 617.074, 47.3382, 0.3002 ) }
    dend_5 { pt3dadd( 504.49, 617.201, 47.9424, 0.324 ) }
    dend_5 { pt3dadd( 505.04, 617.998, 48.4994, 0.3558 ) }
    dend_5 { pt3dadd( 505.601, 618.843, 49.1355, 0.4764 ) }
    dend_5 { pt3dadd( 506.543, 619.421, 49.695, 0.4008 ) }
    dend_5 { pt3dadd( 507.417, 620.114, 50.1441, 0.3396 ) }
    dend_5 { pt3dadd( 508.485, 620.511, 50.461, 0.3006 ) }
    dend_5 { pt3dadd( 509.252, 621.159, 50.7937, 0.3236 ) }
    dend_5 { pt3dadd( 509.745, 622.133, 51.079, 0.3624 ) }
    dend_5 { pt3dadd( 510.48, 622.99, 51.2658, 0.4524 ) }
    dend_5 { pt3dadd( 511.175, 623.887, 51.3906, 0.5312 ) }
    dend_5 { pt3dadd( 511.923, 624.743, 51.469, 0.418 ) }
    dend_5 { pt3dadd( 512.32, 625.68, 51.5108, 0.3244 ) }
    dend_5 { pt3dadd( 513.004, 626.523, 51.52, 0.2728 ) }
    dend_5 { pt3dadd( 514.014, 626.798, 51.52, 0.2712 ) }
    dend_5 { pt3dadd( 515.158, 626.798, 51.52, 0.2684 ) }
    dend_5 { pt3dadd( 516.293, 626.912, 51.52, 0.2626 ) }
    dend_5 { pt3dadd( 517.437, 626.912, 51.52, 0.2542 ) }
    dend_5 { pt3dadd( 518.581, 626.923, 51.52, 0.2288 ) }
    dend_5 { pt3dadd( 519.719, 627.026, 51.52, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 82/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 484.904, 600.486, 33.1332, 0.4254 ) }
    dend_4 { pt3dadd( 484.618, 600.801, 33.3553, 0.457 ) }
    dend_4 { pt3dadd( 484.112, 601.519, 33.462, 0.3988 ) }
    dend_4 { pt3dadd( 483.084, 601.926, 33.6636, 0.399 ) }
    dend_4 { pt3dadd( 482.074, 602.201, 33.9273, 0.334 ) }
    dend_4 { pt3dadd( 481.377, 602.896, 34.237, 0.3002 ) }
    dend_4 { pt3dadd( 480.546, 603.452, 34.5979, 0.275 ) }
    dend_4 { pt3dadd( 479.815, 604.225, 34.986, 0.2754 ) }
    dend_4 { pt3dadd( 478.876, 604.738, 35.3626, 0.2762 ) }
    dend_4 { pt3dadd( 477.825, 605.01, 35.6843, 0.2774 ) }
    dend_4 { pt3dadd( 477.022, 605.621, 36.001, 0.2798 ) }
    dend_4 { pt3dadd( 476.045, 605.859, 36.1382, 0.2842 ) }
    dend_4 { pt3dadd( 474.973, 605.656, 36.2835, 0.2924 ) }
    dend_4 { pt3dadd( 473.965, 606.001, 36.4241, 0.3072 ) }
    dend_4 { pt3dadd( 473.117, 606.612, 36.5392, 0.3372 ) }
    dend_4 { pt3dadd( 472.521, 607.48, 36.6604, 0.3814 ) }
    dend_4 { pt3dadd( 472.018, 608.211, 36.8833, 0.5186 ) }
    dend_4 { pt3dadd( 471.557, 609.004, 37.011, 0.5046 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( 471.071, 609.58, 37.1647, 0.4088 ) }
    dend_4 { pt3dadd( 470.284, 610.215, 37.3887, 0.3396 ) }
    dend_4 { pt3dadd( 469.256, 610.389, 37.6208, 0.3736 ) }
    dend_4 { pt3dadd( 468.198, 610.407, 37.7922, 0.3342 ) }
    dend_4 { pt3dadd( 467.356, 611.061, 38.0027, 0.3006 ) }
    dend_4 { pt3dadd( 466.583, 611.697, 38.2239, 0.2758 ) }
    dend_4 { pt3dadd( 465.605, 612.16, 38.4468, 0.2766 ) }
    dend_4 { pt3dadd( 465.608, 613.191, 38.7246, 0.2784 ) }
    dend_4 { pt3dadd( 465.608, 614.335, 38.9738, 0.2818 ) }
    dend_4 { pt3dadd( 465.608, 615.479, 39.2084, 0.288 ) }
    dend_4 { pt3dadd( 465.608, 616.623, 39.4257, 0.3008 ) }
    dend_4 { pt3dadd( 465.608, 617.762, 39.6536, 0.318 ) }
    dend_4 { pt3dadd( 465.918, 618.262, 40.143, 0.3804 ) }
    dend_4 { pt3dadd( 465.947, 619.278, 40.607, 0.3468 ) }
    dend_4 { pt3dadd( 465.264, 619.998, 41.008, 0.3252 ) }
    dend_4 { pt3dadd( 464.942, 620.88, 41.2345, 0.316 ) }
    dend_4 { pt3dadd( 464.504, 621.745, 41.3622, 0.3766 ) }
    dend_4 { pt3dadd( 464.156, 622.646, 41.5906, 0.34 ) }
    dend_4 { pt3dadd( 463.895, 623.692, 41.82, 0.3112 ) }
    dend_4 { pt3dadd( 463.253, 624.296, 42.2192, 0.2954 ) }
    dend_4 { pt3dadd( 462.832, 625.143, 42.4547, 0.3142 ) }
    dend_4 { pt3dadd( 462.405, 625.885, 42.5748, 0.3426 ) }
    dend_4 { pt3dadd( 462.316, 626.333, 43.08, 0.426 ) }
    dend_4 { pt3dadd( 462.483, 627.224, 43.7164, 0.4326 ) }
    dend_4 { pt3dadd( 462.677, 628.279, 44.2226, 0.477 ) }
    dend_4 { pt3dadd( 462.823, 629.321, 44.6589, 0.6326 ) }
    dend_4 { pt3dadd( 462.921, 629.664, 44.7801, 0.7928 ) }
    dend_4 { pt3dadd( 463.399, 630.6, 44.8804, 0.5704 ) }
    dend_4 { pt3dadd( 463.759, 631.313, 45.1114, 0.3904 ) }
    dend_4 { pt3dadd( 463.551, 632.351, 45.4182, 0.3008 ) }
    dend_4 { pt3dadd( 463.091, 633.085, 45.4843, 0.3226 ) }
    dend_4 { pt3dadd( 463.174, 634.018, 45.5988, 0.3668 ) }
    dend_4 { pt3dadd( 463.206, 634.826, 45.995, 0.4302 ) }
    dend_4 { pt3dadd( 462.678, 635.658, 46.3204, 0.6386 ) }
    dend_4 { pt3dadd( 462.664, 636.479, 46.5209, 0.5816 ) }
    dend_4 { pt3dadd( 462.642, 637.555, 46.6357, 0.5704 ) }
    dend_4 { pt3dadd( 462.93, 638.513, 46.7802, 0.7788 ) }
    dend_4 { pt3dadd( 463.164, 639.448, 46.8829, 0.7372 ) }
    dend_4 { pt3dadd( 462.519, 640.205, 46.9403, 0.6796 ) }
    dend_4 { pt3dadd( 462.096, 641.094, 46.8779, 0.707 ) }
    dend_4 { pt3dadd( 461.873, 641.872, 47.1145, 0.5622 ) }
    dend_4 { pt3dadd( 462.062, 642.808, 47.476, 0.5582 ) }
    dend_4 { pt3dadd( 461.588, 643.521, 47.6384, 0.411 ) }
    dend_4 { pt3dadd( 461.032, 643.843, 47.973, 0.3594 ) }
    dend_4 { pt3dadd( 460.913, 643.918, 48.6175, 0.3324 ) }
    dend_4 { pt3dadd( 460.421, 644.454, 49.3438, 0.4068 ) }
    dend_4 { pt3dadd( 459.766, 645.178, 49.8845, 0.3976 ) }
    dend_4 { pt3dadd( 459.454, 645.945, 50.1698, 0.4088 ) }
    dend_4 { pt3dadd( 459.77, 646.927, 50.3527, 0.5226 ) }
    dend_4 { pt3dadd( 459.441, 647.904, 50.3857, 0.5116 ) }
    dend_4 { pt3dadd( 459.227, 648.571, 50.5674, 0.422 ) }
    dend_4 { pt3dadd( 458.884, 649.587, 50.7276, 0.3648 ) }
    dend_4 { pt3dadd( 458.616, 650.294, 50.832, 0.415 ) }
    dend_4 { pt3dadd( 457.992, 651.066, 50.8194, 0.4366 ) }
    dend_4 { pt3dadd( 457.198, 651.699, 50.8502, 0.3664 ) }
    dend_4 { pt3dadd( 456.57, 652.186, 50.8721, 0.3126 ) }
    dend_4 { pt3dadd( 456.237, 653.205, 50.815, 0.299 ) }
    dend_4 { pt3dadd( 455.67, 654.079, 50.8012, 0.3146 ) }
    dend_4 { pt3dadd( 455.263, 655.083, 50.8292, 0.374 ) }
    dend_4 { pt3dadd( 454.648, 655.98, 50.8351, 0.3352 ) }
    dend_4 { pt3dadd( 453.951, 656.785, 50.7284, 0.3024 ) }
    dend_4 { pt3dadd( 453.571, 657.436, 50.4703, 0.2792 ) }
    dend_4 { pt3dadd( 452.977, 657.707, 50.5851, 0.2832 ) }
    dend_4 { pt3dadd( 452.405, 658.433, 50.5406, 0.2906 ) }
    dend_4 { pt3dadd( 451.591, 658.677, 50.3322, 0.304 ) }
    dend_4 { pt3dadd( 450.746, 658.847, 50.0797, 0.331 ) }
    dend_4 { pt3dadd( 450.395, 658.874, 50.295, 0.37 ) }
    dend_4 { pt3dadd( 450.927, 659.263, 50.7928, 0.4972 ) }
    dend_4 { pt3dadd( 450.036, 659.658, 51.2033, 0.466 ) }
    dend_4 { pt3dadd( 449.109, 660.011, 51.4601, 0.3304 ) }
    dend_4 { pt3dadd( 449.134, 659.516, 52.36, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_11 (entry count 71/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 481.96, 552.051, 27.5433, 0.5516 ) }
    apic_19 { pt3dadd( 482.082, 551.154, 26.7562, 0.2288 ) }
    apic_19 { pt3dadd( 482.713, 550.679, 26.3317, 0.3072 ) }
    apic_19 { pt3dadd( 483.688, 550.233, 25.9186, 0.337 ) }
    apic_19 { pt3dadd( 483.588, 549.343, 25.4518, 0.3812 ) }
    apic_19 { pt3dadd( 483.65, 548.467, 24.9224, 0.5178 ) }
    apic_19 { pt3dadd( 484.44, 547.836, 24.4217, 0.5034 ) }
    apic_19 { pt3dadd( 484.494, 547.04, 23.9599, 0.4054 ) }
    apic_19 { pt3dadd( 484.788, 546.213, 23.8116, 0.3396 ) }
    apic_19 { pt3dadd( 485.623, 545.608, 23.6424, 0.3422 ) }
    apic_19 { pt3dadd( 485.999, 544.831, 23.3908, 0.4264 ) }
    apic_19 { pt3dadd( 486.769, 544.599, 22.9584, 0.428 ) }
    apic_19 { pt3dadd( 487.424, 543.811, 22.6749, 0.4954 ) }
    apic_19 { pt3dadd( 487.795, 543.013, 22.2771, 0.5354 ) }
    apic_19 { pt3dadd( 488.148, 541.944, 21.9891, 0.5646 ) }
    apic_19 { pt3dadd( 488.374, 541.084, 21.8348, 0.6084 ) }
    apic_19 { pt3dadd( 488.569, 540.119, 21.6963, 0.5106 ) }
    apic_19 { pt3dadd( 489.544, 539.763, 21.4838, 0.5114 ) }
    apic_19 { pt3dadd( 490.406, 539.398, 21.3438, 0.5462 ) }
    apic_19 { pt3dadd( 491.279, 538.776, 21.1112, 0.4468 ) }
    apic_19 { pt3dadd( 491.979, 538.265, 20.6963, 0.3722 ) }
    apic_19 { pt3dadd( 492.204, 537.27, 20.2157, 0.3872 ) }
    apic_19 { pt3dadd( 492.487, 536.442, 19.5526, 0.359 ) }
    apic_19 { pt3dadd( 492.415, 536.316, 18.5581, 0.3486 ) }
    apic_19 { pt3dadd( 492.976, 535.735, 17.4831, 0.3544 ) }
    apic_19 { pt3dadd( 493.439, 535.957, 16.3055, 0.4736 ) }
    apic_19 { pt3dadd( 493.911, 535.219, 15.238, 0.3956 ) }
    apic_19 { pt3dadd( 493.628, 534.42, 14.6155, 0.3298 ) }
    apic_19 { pt3dadd( 493.522, 533.376, 14.0795, 0.2826 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_19 { pt3dadd( 494.048, 533.104, 13.5626, 0.2894 ) }
    apic_19 { pt3dadd( 494.795, 532.851, 13.1144, 0.302 ) }
    apic_19 { pt3dadd( 495.109, 531.985, 12.6259, 0.326 ) }
    apic_19 { pt3dadd( 494.909, 531.179, 12.2509, 0.367 ) }
    apic_19 { pt3dadd( 494.354, 530.467, 12.1235, 0.4608 ) }
    apic_19 { pt3dadd( 494.122, 529.808, 12.1914, 0.5468 ) }
    apic_19 { pt3dadd( 493.815, 529.14, 11.9912, 0.4478 ) }
    apic_19 { pt3dadd( 493.957, 528.327, 11.6746, 0.3744 ) }
    apic_19 { pt3dadd( 494.161, 527.505, 11.5119, 0.3906 ) }
    apic_19 { pt3dadd( 494.384, 526.911, 11.1058, 0.3666 ) }
    apic_19 { pt3dadd( 494.958, 526.074, 10.7696, 0.355 ) }
    apic_19 { pt3dadd( 494.894, 524.995, 10.5584, 0.4036 ) }
    apic_19 { pt3dadd( 495.322, 524.394, 10.2446, 0.3842 ) }
    apic_19 { pt3dadd( 495.025, 523.871, 9.9261, 0.421 ) }
    apic_19 { pt3dadd( 494.802, 523.125, 9.8708, 0.3644 ) }
    apic_19 { pt3dadd( 495.498, 522.471, 9.7764, 0.4068 ) }
    apic_19 { pt3dadd( 496.038, 521.55, 9.8, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 17/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 481.96, 552.051, 27.5433, 0.5516 ) }
    apic_12 { pt3dadd( 481.617, 551.044, 27.8865, 0.7638 ) }
    apic_12 { pt3dadd( 481.129, 550.025, 28.0669, 0.8424 ) }
    apic_12 { pt3dadd( 480.473, 549.09, 28.1977, 0.6864 ) }
    apic_12 { pt3dadd( 479.895, 548.161, 28.1879, 0.7186 ) }
    apic_12 { pt3dadd( 479.481, 547.096, 28.1803, 0.5888 ) }
    apic_12 { pt3dadd( 479.041, 546.045, 28.2234, 0.5838 ) }
    apic_12 { pt3dadd( 478.777, 545.015, 28.7689, 0.8006 ) }
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 25/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 461.556, 555.378, 26.2867, 1.0016 ) }
    apic_8 { pt3dadd( 460.142, 554.871, 25.9192, 0.9556 ) }
    apic_8 { pt3dadd( 459.075, 554.625, 25.7296, 0.6578 ) }
    apic_8 { pt3dadd( 457.933, 554.612, 25.5999, 0.4502 ) }
    apic_8 { pt3dadd( 456.795, 554.617, 25.5132, 0.45 ) }
    apic_8 { pt3dadd( 455.659, 554.651, 25.4469, 0.6438 ) }
    apic_8 { pt3dadd( 454.539, 554.816, 25.4421, 0.7462 ) }
    apic_8 { pt3dadd( 453.427, 555.025, 25.4301, 0.8102 ) }
    apic_8 { pt3dadd( 452.294, 555.04, 25.4094, 0.6228 ) }
    apic_8 { pt3dadd( 451.175, 554.882, 25.3952, 0.6192 ) }
    apic_8 { pt3dadd( 450.09, 554.538, 25.3479, 0.5446 ) }
    apic_8 { pt3dadd( 449.059, 554.053, 25.2942, 0.5074 ) }
    apic_8 { pt3dadd( 448.117, 553.582, 25.2826, 0.4046 ) }
    apic_8 { pt3dadd( 447.034, 553.254, 25.2661, 0.3784 ) }
    apic_8 { pt3dadd( 445.891, 553.273, 25.2424, 0.4474 ) }
    apic_8 { pt3dadd( 444.756, 553.158, 25.2109, 0.4624 ) }
    apic_8 { pt3dadd( 443.743, 552.677, 25.1611, 0.5788 ) }
    apic_8 { pt3dadd( 442.784, 552.057, 25.0881, 0.5946 ) }
    apic_8 { pt3dadd( 442.023, 551.743, 24.7811, 0.451 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 44/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 461.556, 555.378, 26.2867, 1.0016 ) }
    apic_7 { pt3dadd( 460.633, 555.894, 24.8896, 0.4102 ) }
    apic_7 { pt3dadd( 459.671, 556.372, 24.3074, 0.3836 ) }
    apic_7 { pt3dadd( 458.872, 557.186, 23.8311, 0.4812 ) }
    apic_7 { pt3dadd( 457.905, 557.785, 23.4616, 0.4096 ) }
    apic_7 { pt3dadd( 457.004, 558.423, 23.2645, 0.3556 ) }
    apic_7 { pt3dadd( 456.227, 559.108, 23.1347, 0.3308 ) }
    apic_7 { pt3dadd( 456.32, 559.772, 22.7605, 0.3762 ) }
    apic_7 { pt3dadd( 455.662, 560.167, 22.2602, 0.4776 ) }
    apic_7 { pt3dadd( 454.667, 560.188, 21.6951, 0.579 ) }
    apic_7 { pt3dadd( 453.768, 560.461, 21.2311, 0.5022 ) }
    apic_7 { pt3dadd( 452.934, 560.989, 20.8483, 0.5018 ) }
    apic_7 { pt3dadd( 452.35, 561.563, 20.7628, 0.4974 ) }
    apic_7 { pt3dadd( 451.859, 562.06, 20.6673, 0.5068 ) }
    apic_7 { pt3dadd( 451.546, 562.888, 20.6488, 0.439 ) }
    apic_7 { pt3dadd( 450.758, 563.601, 20.74, 0.499 ) }
    apic_7 { pt3dadd( 450.068, 563.992, 20.9527, 0.3956 ) }
    apic_7 { pt3dadd( 449.611, 564.096, 21.0492, 0.3298 ) }
    apic_7 { pt3dadd( 448.624, 564.575, 21.1652, 0.2824 ) }
    apic_7 { pt3dadd( 448.448, 564.954, 21.4241, 0.2892 ) }
    apic_7 { pt3dadd( 447.76, 565.341, 21.8059, 0.3016 ) }
    apic_7 { pt3dadd( 446.75, 565.614, 22.0833, 0.3252 ) }
    apic_7 { pt3dadd( 446.064, 566.156, 22.0682, 0.3652 ) }
    apic_7 { pt3dadd( 445.305, 566.647, 21.8907, 0.4576 ) }
    apic_7 { pt3dadd( 444.783, 567.266, 21.5921, 0.5412 ) }
    apic_7 { pt3dadd( 444.215, 568.212, 21.3552, 0.436 ) }
    apic_7 { pt3dadd( 443.419, 568.901, 21.4233, 0.359 ) }
    apic_7 { pt3dadd( 442.337, 569.121, 21.5222, 0.3316 ) }
    apic_7 { pt3dadd( 441.759, 569.745, 21.6619, 0.4054 ) }
    apic_7 { pt3dadd( 441.587, 570.604, 21.6147, 0.3954 ) }
    apic_7 { pt3dadd( 441.136, 571.466, 21.6896, 0.4032 ) }
    apic_7 { pt3dadd( 440.69, 572.072, 21.4972, 0.518 ) }
    apic_7 { pt3dadd( 439.701, 572.01, 21.3923, 0.4724 ) }
    apic_7 { pt3dadd( 438.822, 572.46, 21.3777, 0.4994 ) }
    apic_7 { pt3dadd( 437.884, 572.92, 21.4291, 0.4652 ) }
    apic_7 { pt3dadd( 437.127, 573.382, 21.3819, 0.5838 ) }
    apic_7 { pt3dadd( 436.616, 573.861, 21.2391, 0.6038 ) }
    apic_7 { pt3dadd( 435.873, 574.187, 20.9931, 0.4692 ) }
    apic_7 { pt3dadd( 435.185, 574.032, 20.9617, 0.3668 ) }
    apic_7 { pt3dadd( 434.225, 574.056, 21.0621, 0.3768 ) }
    apic_7 { pt3dadd( 433.466, 574.56, 21.3117, 0.3402 ) }
    apic_7 { pt3dadd( 432.462, 574.8, 21.5456, 0.3116 ) }
    apic_7 { pt3dadd( 431.974, 575.074, 21.5441, 0.296 ) }
    apic_7 { pt3dadd( 431.264, 574.929, 21.53, 0.3152 ) }
    apic_7 { pt3dadd( 430.417, 575.053, 21.3022, 0.346 ) }
    apic_7 { pt3dadd( 429.691, 575.351, 21.2114, 0.4268 ) }
    apic_7 { pt3dadd( 428.616, 575.617, 21.0608, 0.4594 ) }
    apic_7 { pt3dadd( 427.793, 576.233, 20.8713, 0.4036 ) }
    apic_7 { pt3dadd( 426.902, 576.486, 20.5621, 0.4074 ) }
    apic_7 { pt3dadd( 425.918, 576.591, 20.2367, 0.3498 ) }
    apic_7 { pt3dadd( 425.275, 576.957, 19.8422, 0.3298 ) }
    apic_7 { pt3dadd( 424.327, 577.069, 19.6151, 0.3304 ) }
    apic_7 { pt3dadd( 423.379, 577.186, 19.4816, 0.3736 ) }
    apic_7 { pt3dadd( 422.374, 577.516, 19.3697, 0.4796 ) }
    apic_7 { pt3dadd( 421.72, 578.044, 19.1208, 0.5514 ) }
    apic_7 { pt3dadd( 421.11, 578.628, 18.8079, 0.6022 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_7 { pt3dadd( 420.506, 579.174, 18.7802, 0.6384 ) }
    apic_7 { pt3dadd( 419.544, 579.688, 18.785, 0.7604 ) }
    apic_7 { pt3dadd( 418.434, 579.509, 18.7584, 0.7176 ) }
    apic_7 { pt3dadd( 417.446, 578.966, 18.6562, 0.5724 ) }
    apic_7 { pt3dadd( 416.378, 578.826, 18.428, 0.3924 ) }
    apic_7 { pt3dadd( 415.31, 579.158, 18.1028, 0.3142 ) }
    apic_7 { pt3dadd( 414.28, 578.974, 17.6084, 0.3018 ) }
    apic_7 { pt3dadd( 413.18, 578.983, 17.0733, 0.32 ) }
    apic_7 { pt3dadd( 412.116, 579.386, 16.6326, 0.3844 ) }
    apic_7 { pt3dadd( 411.164, 579.862, 16.354, 0.354 ) }
    apic_7 { pt3dadd( 410.102, 579.632, 16.0521, 0.3384 ) }
    apic_7 { pt3dadd( 409.173, 579.018, 15.7287, 0.34 ) }
    apic_7 { pt3dadd( 408.191, 578.599, 15.3336, 0.4236 ) }
    apic_7 { pt3dadd( 407.104, 578.436, 14.9454, 0.4162 ) }
    apic_7 { pt3dadd( 405.974, 578.422, 14.6912, 0.5038 ) }
    apic_7 { pt3dadd( 404.859, 578.548, 14.5139, 0.4046 ) }
    apic_7 { pt3dadd( 403.786, 578.755, 14.2926, 0.3462 ) }
    apic_7 { pt3dadd( 402.73, 578.625, 14.008, 0.3142 ) }
    apic_7 { pt3dadd( 401.681, 578.44, 13.8549, 0.3436 ) }
    apic_7 { pt3dadd( 401.346, 579.394, 13.7038, 0.4228 ) }
    apic_7 { pt3dadd( 400.68, 580.293, 13.5365, 0.4512 ) }
    apic_7 { pt3dadd( 399.658, 580.68, 13.5167, 0.393 ) }
    apic_7 { pt3dadd( 398.656, 581.217, 13.5629, 0.365 ) }
    apic_7 { pt3dadd( 397.661, 581.73, 13.5547, 0.384 ) }
    apic_7 { pt3dadd( 396.807, 582.317, 13.5651, 0.5306 ) }
    apic_7 { pt3dadd( 396.295, 583.028, 13.4497, 0.4906 ) }
    apic_7 { pt3dadd( 395.683, 583.537, 13.438, 0.5578 ) }
    apic_7 { pt3dadd( 394.934, 584.134, 13.4803, 0.4524 ) }
    apic_7 { pt3dadd( 394.248, 584.355, 13.4628, 0.4612 ) }
    apic_7 { pt3dadd( 393.483, 584.698, 13.6551, 0.3984 ) }
    apic_7 { pt3dadd( 392.709, 585.054, 13.614, 0.4406 ) }
    apic_7 { pt3dadd( 392.418, 585.614, 13.5673, 0.4322 ) }
    apic_7 { pt3dadd( 391.325, 585.672, 13.5877, 0.3814 ) }
    apic_7 { pt3dadd( 390.218, 585.842, 13.72, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 34/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 470.299, 574.742, 26.3169, 0.6092 ) }
    dend_16 { pt3dadd( 469.18, 574.72, 25.9597, 0.2288 ) }
    dend_16 { pt3dadd( 468.047, 574.568, 25.8529, 0.401 ) }
    dend_16 { pt3dadd( 467.192, 573.911, 25.2753, 0.38 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 38/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 470.299, 574.742, 26.3169, 0.6092 ) }
    dend_11 { pt3dadd( 469.252, 575.474, 26.7857, 0.6878 ) }
    dend_11 { pt3dadd( 468.364, 576.176, 26.9849, 0.6748 ) }
    dend_11 { pt3dadd( 467.448, 576.86, 27.1398, 0.5048 ) }
    dend_11 { pt3dadd( 466.379, 577.254, 27.2446, 0.4406 ) }
    dend_11 { pt3dadd( 465.258, 577.473, 27.3013, 0.4756 ) }
    dend_11 { pt3dadd( 464.115, 577.5, 27.314, 0.7082 ) }
    dend_11 { pt3dadd( 462.973, 577.56, 27.2883, 0.784 ) }
    dend_11 { pt3dadd( 461.872, 577.85, 27.2321, 0.5882 ) }
    dend_11 { pt3dadd( 460.787, 578.054, 27.0886, 0.4866 ) }
    dend_11 { pt3dadd( 459.708, 578.417, 26.9755, 0.402 ) }
    dend_11 { pt3dadd( 458.618, 578.755, 26.9456, 0.428 ) }
    dend_11 { pt3dadd( 457.523, 578.864, 27.0672, 0.5038 ) }
    dend_11 { pt3dadd( 456.384, 578.905, 27.2149, 0.7388 ) }
    dend_11 { pt3dadd( 455.266, 579.143, 27.3554, 0.9458 ) }
    dend_11 { pt3dadd( 454.138, 579.32, 27.4975, 1.0652 ) }
    dend_11 { pt3dadd( 453.034, 579.371, 27.6928, 0.9694 ) }
    dend_11 { pt3dadd( 451.922, 579.629, 27.8109, 0.7312 ) }
    dend_11 { pt3dadd( 450.823, 579.753, 27.7545, 0.5816 ) }
    dend_11 { pt3dadd( 449.691, 579.63, 27.6492, 0.49 ) }
    dend_11 { pt3dadd( 448.639, 579.184, 27.5482, 0.5608 ) }
    dend_11 { pt3dadd( 447.533, 578.891, 27.452, 0.6694 ) }
    dend_11 { pt3dadd( 446.395, 578.975, 27.2446, 0.751 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 472.16, 586.941, 25.135, 0.7876 ) }
    dend_9 { pt3dadd( 471.562, 587.458, 24.6324, 0.551 ) }
    dend_9 { pt3dadd( 470.559, 587.709, 24.3807, 0.401 ) }
    dend_9 { pt3dadd( 469.49, 587.595, 24.0352, 0.3228 ) }
    dend_9 { pt3dadd( 468.363, 587.54, 23.7332, 0.3538 ) }
    dend_9 { pt3dadd( 467.251, 587.371, 23.5678, 0.4724 ) }
    dend_9 { pt3dadd( 466.151, 587.15, 23.5312, 0.3934 ) }
    dend_9 { pt3dadd( 465.017, 587.149, 23.5207, 0.3258 ) }
    dend_9 { pt3dadd( 463.903, 587.381, 23.4892, 0.2752 ) }
    dend_9 { pt3dadd( 462.806, 587.547, 23.3593, 0.2758 ) }
    dend_9 { pt3dadd( 461.683, 587.641, 23.1678, 0.2766 ) }
    dend_9 { pt3dadd( 460.592, 587.945, 22.9624, 0.2786 ) }
    dend_9 { pt3dadd( 459.523, 588.356, 22.7563, 0.2818 ) }
    dend_9 { pt3dadd( 458.42, 588.645, 22.5578, 0.2886 ) }
    dend_9 { pt3dadd( 457.348, 588.416, 22.3522, 0.2998 ) }
    dend_9 { pt3dadd( 456.511, 587.735, 22.0564, 0.3236 ) }
    dend_9 { pt3dadd( 455.559, 587.466, 21.6202, 0.3548 ) }
    dend_9 { pt3dadd( 454.447, 587.547, 21.2531, 0.4746 ) }
    dend_9 { pt3dadd( 453.305, 587.593, 20.9359, 0.3974 ) }
    dend_9 { pt3dadd( 452.191, 587.793, 20.6939, 0.3332 ) }
    dend_9 { pt3dadd( 451.166, 587.868, 20.3092, 0.2888 ) }
    dend_9 { pt3dadd( 450.273, 587.844, 19.7371, 0.3006 ) }
    dend_9 { pt3dadd( 449.177, 588.125, 19.2519, 0.3238 ) }
    dend_9 { pt3dadd( 448.037, 588.215, 18.8636, 0.3626 ) }
    dend_9 { pt3dadd( 446.927, 587.94, 18.5672, 0.4528 ) }
    dend_9 { pt3dadd( 445.84, 587.581, 18.3554, 0.5322 ) }
    dend_9 { pt3dadd( 444.788, 587.132, 18.2229, 0.4198 ) }
    dend_9 { pt3dadd( 443.699, 586.8, 18.1, 0.3274 ) }
    dend_9 { pt3dadd( 442.604, 586.676, 17.8875, 0.2784 ) }
    dend_9 { pt3dadd( 441.475, 586.838, 17.719, 0.2816 ) }
    dend_9 { pt3dadd( 440.512, 587.45, 17.6256, 0.288 ) }
    dend_9 { pt3dadd( 439.576, 588.01, 17.6023, 0.2992 ) }
    dend_9 { pt3dadd( 439.23, 588.359, 17.3581, 0.3212 ) }
    dend_9 { pt3dadd( 438.381, 588.156, 17.3684, 0.3566 ) }
    dend_9 { pt3dadd( 437.718, 588.237, 17.5377, 0.448 ) }
    dend_9 { pt3dadd( 436.846, 587.881, 17.5381, 0.4924 ) }
    dend_9 { pt3dadd( 435.874, 587.445, 17.451, 0.4962 ) }
    dend_9 { pt3dadd( 435.177, 587.787, 17.1909, 0.4248 ) }
    dend_9 { pt3dadd( 434.514, 588.105, 16.9863, 0.4468 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 434.153, 588.974, 16.6188, 0.4246 ) }
    dend_9 { pt3dadd( 433.991, 589.723, 16.1287, 0.4596 ) }
    dend_9 { pt3dadd( 433.326, 590.429, 15.727, 0.612 ) }
    dend_9 { pt3dadd( 432.836, 590.994, 15.4232, 0.6988 ) }
    dend_9 { pt3dadd( 432.454, 591.789, 15.2403, 0.666 ) }
    dend_9 { pt3dadd( 431.669, 592.464, 15.1018, 0.6298 ) }
    dend_9 { pt3dadd( 431.06, 592.935, 14.8258, 0.6724 ) }
    dend_9 { pt3dadd( 430.568, 593.222, 14.6716, 0.6782 ) }
    dend_9 { pt3dadd( 429.802, 593.386, 14.5521, 0.585 ) }
    dend_9 { pt3dadd( 428.992, 593.278, 14.7092, 0.4586 ) }
    dend_9 { pt3dadd( 427.946, 593.405, 14.7963, 0.4574 ) }
    dend_9 { pt3dadd( 426.956, 593.628, 14.8758, 0.4674 ) }
    dend_9 { pt3dadd( 425.919, 593.503, 14.9724, 0.4256 ) }
    dend_9 { pt3dadd( 424.883, 593.622, 15.0931, 0.4136 ) }
    dend_9 { pt3dadd( 423.783, 593.472, 15.1935, 0.5308 ) }
    dend_9 { pt3dadd( 423.079, 593.257, 15.3949, 0.5282 ) }
    dend_9 { pt3dadd( 422.016, 593.185, 15.6453, 0.4464 ) }
    dend_9 { pt3dadd( 421.118, 593.333, 15.8511, 0.4412 ) }
    dend_9 { pt3dadd( 420.188, 593.572, 16.0159, 0.407 ) }
    dend_9 { pt3dadd( 419.265, 594.223, 16.0915, 0.4618 ) }
    dend_9 { pt3dadd( 418.237, 594.503, 16.0014, 0.4474 ) }
    dend_9 { pt3dadd( 417.339, 594.938, 15.8911, 0.5248 ) }
    dend_9 { pt3dadd( 416.274, 595.32, 15.7601, 0.6208 ) }
    dend_9 { pt3dadd( 415.378, 595.669, 15.6795, 0.5738 ) }
    dend_9 { pt3dadd( 414.35, 595.566, 15.6306, 0.661 ) }
    dend_9 { pt3dadd( 413.43, 595.491, 15.6901, 0.6656 ) }
    dend_9 { pt3dadd( 412.52, 596.029, 15.7583, 0.7486 ) }
    dend_9 { pt3dadd( 411.624, 596.392, 15.7567, 0.7694 ) }
    dend_9 { pt3dadd( 410.853, 597.101, 15.8319, 0.7692 ) }
    dend_9 { pt3dadd( 410.078, 597.87, 15.9257, 0.7272 ) }
    dend_9 { pt3dadd( 409.267, 598.427, 15.937, 0.6234 ) }
    dend_9 { pt3dadd( 408.513, 599.242, 15.9029, 0.5556 ) }
    dend_9 { pt3dadd( 407.731, 599.867, 15.882, 0.513 ) }
    dend_9 { pt3dadd( 406.962, 600.447, 15.8793, 0.4862 ) }
    dend_9 { pt3dadd( 405.976, 600.908, 15.8754, 0.4132 ) }
    dend_9 { pt3dadd( 404.974, 600.982, 15.8371, 0.3894 ) }
    dend_9 { pt3dadd( 404.319, 600.404, 16.0719, 0.4916 ) }
    dend_9 { pt3dadd( 403.655, 599.756, 16.1715, 0.4286 ) }
    dend_9 { pt3dadd( 402.656, 599.591, 16.4358, 0.393 ) }
    dend_9 { pt3dadd( 401.772, 599.544, 16.8663, 0.3906 ) }
    dend_9 { pt3dadd( 400.869, 599.342, 17.1932, 0.5364 ) }
    dend_9 { pt3dadd( 399.739, 599.349, 17.4395, 0.5324 ) }
    dend_9 { pt3dadd( 399.015, 599.735, 17.7113, 0.485 ) }
    dend_9 { pt3dadd( 398.294, 600.284, 18.0358, 0.362 ) }
    dend_9 { pt3dadd( 397.769, 600.679, 18.1495, 0.3048 ) }
    dend_9 { pt3dadd( 397.041, 601.163, 18.2406, 0.2834 ) }
    dend_9 { pt3dadd( 396.036, 601.508, 18.2642, 0.291 ) }
    dend_9 { pt3dadd( 395.355, 602.146, 18.3378, 0.3062 ) }
    dend_9 { pt3dadd( 394.472, 602.316, 18.6224, 0.3276 ) }
    dend_9 { pt3dadd( 393.542, 602.545, 18.8288, 0.3994 ) }
    dend_9 { pt3dadd( 392.612, 602.661, 19.134, 0.377 ) }
    dend_9 { pt3dadd( 391.646, 602.768, 19.3838, 0.4056 ) }
    dend_9 { pt3dadd( 390.957, 603.396, 19.6349, 0.3464 ) }
    dend_9 { pt3dadd( 390.343, 604.181, 19.8084, 0.3242 ) }
    dend_9 { pt3dadd( 389.617, 604.821, 19.9552, 0.3142 ) }
    dend_9 { pt3dadd( 388.651, 605.39, 20.061, 0.3736 ) }
    dend_9 { pt3dadd( 387.853, 606.05, 20.1611, 0.334 ) }
    dend_9 { pt3dadd( 387.155, 606.866, 20.1942, 0.3004 ) }
    dend_9 { pt3dadd( 386.211, 607.485, 20.1988, 0.2752 ) }
    dend_9 { pt3dadd( 385.461, 608.338, 20.1917, 0.276 ) }
    dend_9 { pt3dadd( 384.473, 608.828, 20.206, 0.2774 ) }
    dend_9 { pt3dadd( 383.329, 608.837, 20.2496, 0.2796 ) }
    dend_9 { pt3dadd( 382.216, 609.012, 20.3548, 0.284 ) }
    dend_9 { pt3dadd( 381.293, 609.295, 20.5967, 0.292 ) }
    dend_9 { pt3dadd( 380.397, 609.842, 20.819, 0.3064 ) }
    dend_9 { pt3dadd( 379.837, 610.661, 21.0442, 0.3354 ) }
    dend_9 { pt3dadd( 379.092, 611.158, 21.2442, 0.378 ) }
    dend_9 { pt3dadd( 378.336, 612.007, 21.3944, 0.5122 ) }
    dend_9 { pt3dadd( 377.258, 612.274, 21.5366, 0.4928 ) }
    dend_9 { pt3dadd( 376.425, 612.893, 21.6592, 0.3862 ) }
    dend_9 { pt3dadd( 375.584, 613.421, 21.7696, 0.3028 ) }
    dend_9 { pt3dadd( 374.694, 613.992, 21.9128, 0.2796 ) }
    dend_9 { pt3dadd( 373.905, 614.704, 21.9722, 0.284 ) }
    dend_9 { pt3dadd( 373.533, 615.657, 22.1151, 0.292 ) }
    dend_9 { pt3dadd( 373.418, 616.332, 22.1744, 0.3078 ) }
    dend_9 { pt3dadd( 372.616, 617.01, 22.2728, 0.3308 ) }
    dend_9 { pt3dadd( 371.655, 617.207, 22.4246, 0.404 ) }
    dend_9 { pt3dadd( 370.959, 617.598, 22.6774, 0.3914 ) }
    dend_9 { pt3dadd( 370.325, 618.078, 22.6467, 0.4036 ) }
    dend_9 { pt3dadd( 369.696, 618.706, 22.7121, 0.4814 ) }
    dend_9 { pt3dadd( 369.19, 619.355, 22.8479, 0.5874 ) }
    dend_9 { pt3dadd( 368.242, 619.755, 23.0833, 0.5112 ) }
    dend_9 { pt3dadd( 367.297, 620.395, 23.2521, 0.5492 ) }
    dend_9 { pt3dadd( 366.456, 621.044, 23.2962, 0.436 ) }
    dend_9 { pt3dadd( 365.875, 621.567, 23.2801, 0.4306 ) }
    dend_9 { pt3dadd( 365.209, 621.85, 23.4168, 0.3458 ) }
    dend_9 { pt3dadd( 364.277, 621.341, 23.4221, 0.3222 ) }
    dend_9 { pt3dadd( 363.472, 621.346, 23.5952, 0.315 ) }
    dend_9 { pt3dadd( 362.753, 620.842, 23.761, 0.3516 ) }
    dend_9 { pt3dadd( 362.002, 620.685, 23.6008, 0.408 ) }
    dend_9 { pt3dadd( 361.012, 620.62, 23.2635, 0.5688 ) }
    dend_9 { pt3dadd( 359.9, 620.621, 22.9557, 0.5932 ) }
    dend_9 { pt3dadd( 358.809, 620.858, 22.6974, 0.5946 ) }
    dend_9 { pt3dadd( 358.082, 621.588, 22.4296, 0.58 ) }
    dend_9 { pt3dadd( 357.088, 621.221, 22.2324, 0.6382 ) }
    dend_9 { pt3dadd( 356.364, 621.242, 21.8907, 0.5604 ) }
    dend_9 { pt3dadd( 355.822, 621.984, 21.6826, 0.6296 ) }
    dend_9 { pt3dadd( 355.313, 622.997, 21.4984, 0.6368 ) }
    dend_9 { pt3dadd( 354.9, 623.972, 21.2008, 0.5544 ) }
    dend_9 { pt3dadd( 354.394, 624.968, 20.9193, 0.4058 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_9 { pt3dadd( 353.744, 625.608, 20.6933, 0.3402 ) }
    dend_9 { pt3dadd( 352.943, 626.102, 20.4835, 0.3438 ) }
    dend_9 { pt3dadd( 352.299, 626.621, 20.4041, 0.4294 ) }
    dend_9 { pt3dadd( 351.762, 626.303, 20.082, 0.4332 ) }
    dend_9 { pt3dadd( 350.977, 625.686, 19.7741, 0.5064 ) }
    dend_9 { pt3dadd( 349.911, 625.708, 19.5283, 0.5494 ) }
    dend_9 { pt3dadd( 348.823, 625.539, 19.3508, 0.6214 ) }
    dend_9 { pt3dadd( 347.807, 625.753, 19.3054, 0.5634 ) }
    dend_9 { pt3dadd( 346.944, 625.887, 19.1112, 0.4702 ) }
    dend_9 { pt3dadd( 346.177, 626.265, 18.7471, 0.4562 ) }
    dend_9 { pt3dadd( 345.465, 626.817, 18.5499, 0.5746 ) }
    dend_9 { pt3dadd( 345.195, 627.823, 18.446, 0.7812 ) }
    dend_9 { pt3dadd( 344.635, 628.554, 18.3829, 0.769 ) }
    dend_9 { pt3dadd( 343.605, 628.914, 18.3424, 0.8338 ) }
    dend_9 { pt3dadd( 342.748, 629.34, 18.2402, 0.759 ) }
    dend_9 { pt3dadd( 342.01, 629.91, 18.264, 0.6512 ) }
    dend_9 { pt3dadd( 341.411, 630.716, 18.2035, 0.53 ) }
    dend_9 { pt3dadd( 340.986, 631.44, 18.3477, 0.6092 ) }
    dend_9 { pt3dadd( 340.26, 632.125, 18.4272, 0.653 ) }
    dend_9 { pt3dadd( 339.945, 632.594, 18.3046, 0.5498 ) }
    dend_9 { pt3dadd( 339.232, 632.832, 18.0897, 0.5674 ) }
    dend_9 { pt3dadd( 338.975, 633.716, 17.7769, 0.5006 ) }
    dend_9 { pt3dadd( 338.677, 634.397, 17.6272, 0.4008 ) }
    dend_9 { pt3dadd( 338.214, 635.019, 17.7712, 0.3292 ) }
    dend_9 { pt3dadd( 337.879, 636.075, 17.9287, 0.331 ) }
    dend_9 { pt3dadd( 337.469, 636.985, 18.0083, 0.3686 ) }
    dend_9 { pt3dadd( 336.702, 637.439, 18.2315, 0.501 ) }
    dend_9 { pt3dadd( 336.417, 638.32, 18.5859, 0.4414 ) }
    dend_9 { pt3dadd( 336.222, 639.064, 18.9522, 0.4398 ) }
    dend_9 { pt3dadd( 335.812, 639.822, 19.164, 0.3638 ) }
    dend_9 { pt3dadd( 335.602, 640.52, 19.1428, 0.3502 ) }
    dend_9 { pt3dadd( 335.494, 641.07, 18.8069, 0.393 ) }
    dend_9 { pt3dadd( 335.098, 641.825, 18.3044, 0.3712 ) }
    dend_9 { pt3dadd( 334.729, 642.596, 17.8087, 0.365 ) }
    dend_9 { pt3dadd( 334.506, 643.591, 17.4915, 0.4156 ) }
    dend_9 { pt3dadd( 334.483, 644.662, 17.4219, 0.4372 ) }
    dend_9 { pt3dadd( 334.178, 645.67, 17.5578, 0.368 ) }
    dend_9 { pt3dadd( 334.63, 646.676, 17.8082, 0.3158 ) }
    dend_9 { pt3dadd( 334.849, 647.668, 17.9364, 0.3048 ) }
    dend_9 { pt3dadd( 334.605, 648.594, 17.8916, 0.3248 ) }
    dend_9 { pt3dadd( 334.28, 649.619, 17.7438, 0.3954 ) }
    dend_9 { pt3dadd( 334.002, 650.644, 17.6883, 0.3644 ) }
    dend_9 { pt3dadd( 333.557, 651.546, 17.5968, 0.4068 ) }
    dend_9 { pt3dadd( 333.59, 652.652, 17.64, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 44/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 472.16, 586.941, 25.135, 0.7876 ) }
    dend_8 { pt3dadd( 471.581, 587.511, 25.5006, 0.9152 ) }
    dend_8 { pt3dadd( 470.509, 587.787, 25.6859, 0.6678 ) }
    dend_8 { pt3dadd( 469.463, 587.902, 25.7581, 0.5102 ) }
    dend_8 { pt3dadd( 468.424, 587.791, 25.9398, 0.3616 ) }
    dend_8 { pt3dadd( 467.331, 587.902, 26.0272, 0.3038 ) }
    dend_8 { pt3dadd( 466.242, 587.835, 26.1685, 0.2818 ) }
    dend_8 { pt3dadd( 465.165, 587.902, 26.2247, 0.2878 ) }
    dend_8 { pt3dadd( 464.151, 587.568, 26.3111, 0.3002 ) }
    dend_8 { pt3dadd( 463.284, 587.301, 26.5719, 0.3168 ) }
    dend_8 { pt3dadd( 462.503, 587.128, 26.7959, 0.3784 ) }
    dend_8 { pt3dadd( 461.427, 586.973, 27.0849, 0.3432 ) }
    dend_8 { pt3dadd( 460.368, 586.586, 27.3049, 0.3174 ) }
    dend_8 { pt3dadd( 459.339, 586.309, 27.539, 0.3068 ) }
    dend_8 { pt3dadd( 458.255, 586.215, 27.6373, 0.335 ) }
    dend_8 { pt3dadd( 457.185, 585.936, 27.6735, 0.383 ) }
    dend_8 { pt3dadd( 456.332, 585.854, 27.6128, 0.4916 ) }
    dend_8 { pt3dadd( 455.323, 586.071, 27.5978, 0.6002 ) }
    dend_8 { pt3dadd( 454.56, 585.928, 27.4266, 0.5658 ) }
    dend_8 { pt3dadd( 453.607, 585.351, 27.3677, 0.5 ) }
    dend_8 { pt3dadd( 452.514, 585.143, 27.3767, 0.3894 ) }
    dend_8 { pt3dadd( 451.442, 585.251, 27.2996, 0.3564 ) }
    dend_8 { pt3dadd( 450.396, 585.472, 27.2656, 0.376 ) }
    dend_8 { pt3dadd( 449.339, 585.262, 27.3403, 0.4786 ) }
    dend_8 { pt3dadd( 448.287, 585.156, 27.3214, 0.5748 ) }
    dend_8 { pt3dadd( 447.473, 584.961, 27.2908, 0.5244 ) }
    dend_8 { pt3dadd( 446.615, 585.497, 27.2503, 0.3972 ) }
    dend_8 { pt3dadd( 445.952, 585.137, 27.1016, 0.3244 ) }
    dend_8 { pt3dadd( 445.151, 585.691, 27.0361, 0.3144 ) }
    dend_8 { pt3dadd( 444.256, 585.86, 26.9777, 0.374 ) }
    dend_8 { pt3dadd( 443.286, 585.783, 26.8824, 0.3352 ) }
    dend_8 { pt3dadd( 442.22, 585.728, 26.8617, 0.3022 ) }
    dend_8 { pt3dadd( 441.544, 585.468, 27.1475, 0.2786 ) }
    dend_8 { pt3dadd( 440.705, 585.725, 27.4324, 0.2822 ) }
    dend_8 { pt3dadd( 440.821, 586.3, 27.9234, 0.2888 ) }
    dend_8 { pt3dadd( 440.3, 586.737, 28.5726, 0.3006 ) }
    dend_8 { pt3dadd( 439.259, 586.424, 29.1211, 0.3248 ) }
    dend_8 { pt3dadd( 438.279, 586.871, 29.4784, 0.3574 ) }
    dend_8 { pt3dadd( 437.311, 586.993, 29.5674, 0.4792 ) }
    dend_8 { pt3dadd( 436.704, 587.608, 29.4832, 0.4056 ) }
    dend_8 { pt3dadd( 436.207, 587.828, 29.6108, 0.3498 ) }
    dend_8 { pt3dadd( 435.5, 587.902, 29.8738, 0.3144 ) }
    dend_8 { pt3dadd( 434.552, 588.05, 30.1361, 0.374 ) }
    dend_8 { pt3dadd( 433.673, 588.59, 30.3377, 0.335 ) }
    dend_8 { pt3dadd( 432.882, 589.383, 30.5144, 0.302 ) }
    dend_8 { pt3dadd( 432.181, 590.259, 30.6664, 0.2782 ) }
    dend_8 { pt3dadd( 431.882, 591.345, 30.7541, 0.2814 ) }
    dend_8 { pt3dadd( 431.199, 591.906, 30.8652, 0.2872 ) }
    dend_8 { pt3dadd( 430.319, 591.933, 30.9336, 0.299 ) }
    dend_8 { pt3dadd( 429.533, 592.478, 30.9686, 0.3146 ) }
    dend_8 { pt3dadd( 428.884, 593.192, 31.2262, 0.3744 ) }
    dend_8 { pt3dadd( 428.509, 594.139, 31.4082, 0.3354 ) }
    dend_8 { pt3dadd( 427.727, 594.652, 31.5938, 0.3028 ) }
    dend_8 { pt3dadd( 426.847, 594.848, 31.8749, 0.2796 ) }
    dend_8 { pt3dadd( 426.498, 595.573, 32.1314, 0.284 ) }
    dend_8 { pt3dadd( 426.48, 596.7, 32.3817, 0.2918 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_8 { pt3dadd( 425.742, 597.397, 32.5354, 0.3072 ) }
    dend_8 { pt3dadd( 424.807, 597.527, 32.8415, 0.3302 ) }
    dend_8 { pt3dadd( 424.184, 598.473, 33.0915, 0.4026 ) }
    dend_8 { pt3dadd( 423.733, 599.345, 33.2086, 0.3902 ) }
    dend_8 { pt3dadd( 423.072, 600.185, 33.4029, 0.3938 ) }
    dend_8 { pt3dadd( 422.296, 600.851, 33.5532, 0.4994 ) }
    dend_8 { pt3dadd( 421.867, 601.644, 33.7977, 0.4444 ) }
    dend_8 { pt3dadd( 422.376, 602.568, 33.8979, 0.4168 ) }
    dend_8 { pt3dadd( 422.46, 603.538, 33.9475, 0.4594 ) }
    dend_8 { pt3dadd( 422.022, 604.518, 34.069, 0.544 ) }
    dend_8 { pt3dadd( 421.506, 605.406, 34.3123, 0.4428 ) }
    dend_8 { pt3dadd( 421.397, 606.516, 34.5876, 0.365 ) }
    dend_8 { pt3dadd( 421.45, 607.617, 34.8774, 0.3734 ) }
    dend_8 { pt3dadd( 421.554, 608.638, 35.2066, 0.334 ) }
    dend_8 { pt3dadd( 421.382, 609.653, 35.4704, 0.3002 ) }
    dend_8 { pt3dadd( 420.436, 610.131, 35.635, 0.275 ) }
    dend_8 { pt3dadd( 419.498, 610.579, 35.777, 0.2752 ) }
    dend_8 { pt3dadd( 419.138, 611.63, 35.954, 0.276 ) }
    dend_8 { pt3dadd( 418.463, 612.508, 36.1838, 0.277 ) }
    dend_8 { pt3dadd( 417.814, 613.174, 36.5898, 0.2794 ) }
    dend_8 { pt3dadd( 417.018, 613.869, 37.0098, 0.2834 ) }
    dend_8 { pt3dadd( 416.246, 614.473, 37.3607, 0.291 ) }
    dend_8 { pt3dadd( 416.187, 615.56, 37.6096, 0.3062 ) }
    dend_8 { pt3dadd( 416.116, 616.698, 37.8361, 0.3278 ) }
    dend_8 { pt3dadd( 416.144, 617.808, 38.1072, 0.3984 ) }
    dend_8 { pt3dadd( 416.51, 618.839, 38.3608, 0.3824 ) }
    dend_8 { pt3dadd( 417.217, 619.366, 38.7598, 0.3792 ) }
    dend_8 { pt3dadd( 417.085, 619.764, 39.4447, 0.4724 ) }
    dend_8 { pt3dadd( 416.938, 620.506, 40.1282, 0.3936 ) }
    dend_8 { pt3dadd( 416.533, 621.215, 40.8769, 0.3258 ) }
    dend_8 { pt3dadd( 415.739, 621.981, 41.4968, 0.2754 ) }
    dend_8 { pt3dadd( 415.615, 623.05, 41.9854, 0.2762 ) }
    dend_8 { pt3dadd( 415.519, 623.709, 42.3332, 0.2776 ) }
    dend_8 { pt3dadd( 415.061, 624.346, 42.4273, 0.2802 ) }
    dend_8 { pt3dadd( 414.814, 625.061, 42.7773, 0.285 ) }
    dend_8 { pt3dadd( 414.814, 625.991, 43.0206, 0.294 ) }
    dend_8 { pt3dadd( 414.419, 626.454, 43.4972, 0.311 ) }
    dend_8 { pt3dadd( 414.311, 627.406, 43.8368, 0.3412 ) }
    dend_8 { pt3dadd( 413.839, 628.367, 44.1162, 0.4026 ) }
    dend_8 { pt3dadd( 413.319, 629.137, 44.322, 0.49 ) }
    dend_8 { pt3dadd( 413.435, 629.944, 44.6914, 0.7806 ) }
    dend_8 { pt3dadd( 413.565, 630.81, 45.0621, 0.697 ) }
    dend_8 { pt3dadd( 412.97, 631.42, 45.4726, 0.8164 ) }
    dend_8 { pt3dadd( 412.833, 631.967, 46.0732, 0.6202 ) }
    dend_8 { pt3dadd( 413.429, 632.609, 46.7373, 0.4532 ) }
    dend_8 { pt3dadd( 412.913, 633.419, 47.117, 0.3334 ) }
    dend_8 { pt3dadd( 412.386, 633.666, 47.0324, 0.3334 ) }
    dend_8 { pt3dadd( 411.834, 634.456, 46.7718, 0.3984 ) }
    dend_8 { pt3dadd( 411.688, 635.277, 46.5228, 0.4322 ) }
    dend_8 { pt3dadd( 411.84, 636.178, 45.92, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_12 (entry count 50/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 478.777, 545.015, 28.7689, 0.8006 ) }
    apic_16 { pt3dadd( 478.542, 544.098, 29.157, 0.7946 ) }
    apic_16 { pt3dadd( 478.501, 542.969, 29.3415, 0.7036 ) }
    apic_16 { pt3dadd( 478.316, 541.841, 29.4941, 0.4644 ) }
    apic_16 { pt3dadd( 477.575, 540.975, 29.6148, 0.3634 ) }
    apic_16 { pt3dadd( 476.645, 540.31, 29.7077, 0.3438 ) }
    apic_16 { pt3dadd( 475.827, 539.511, 29.7794, 0.407 ) }
    apic_16 { pt3dadd( 475.077, 538.648, 29.8424, 0.5006 ) }
    apic_16 { pt3dadd( 474.57, 537.623, 29.9071, 0.7894 ) }
    apic_16 { pt3dadd( 474.419, 536.49, 29.9849, 0.7642 ) }
    apic_16 { pt3dadd( 474.413, 535.347, 30.0877, 0.693 ) }
    apic_16 { pt3dadd( 474.395, 534.24, 30.2876, 0.9098 ) }
    apic_16 { pt3dadd( 474.291, 533.104, 30.7392, 0.7636 ) }
    // Section: apic_13, id: apic_13, parent: apic_12 (entry count 63/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 478.777, 545.015, 28.7689, 0.8006 ) }
    apic_13 { pt3dadd( 479.151, 543.88, 30.0468, 0.4576 ) }
    apic_13 { pt3dadd( 479.917, 543.099, 30.5718, 0.4372 ) }
    apic_13 { pt3dadd( 480.74, 542.67, 31.1374, 0.4702 ) }
    apic_13 { pt3dadd( 481.668, 543.017, 31.7248, 0.4644 ) }
    apic_13 { pt3dadd( 482.674, 542.78, 32.1028, 0.5512 ) }
    apic_13 { pt3dadd( 483.648, 542.227, 32.3509, 0.6954 ) }
    apic_13 { pt3dadd( 484.711, 541.866, 32.7746, 0.5874 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 71/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 442.023, 551.743, 24.7811, 0.451 ) }
    apic_10 { pt3dadd( 441.442, 552.335, 25.5135, 0.2288 ) }
    apic_10 { pt3dadd( 440.321, 552.445, 25.7484, 0.3404 ) }
    apic_10 { pt3dadd( 439.265, 552.871, 25.9721, 0.4168 ) }
    apic_10 { pt3dadd( 438.193, 553.246, 26.1509, 0.44 ) }
    apic_10 { pt3dadd( 437.057, 553.322, 26.2814, 0.3724 ) }
    apic_10 { pt3dadd( 435.917, 553.242, 26.3705, 0.3256 ) }
    apic_10 { pt3dadd( 434.784, 553.135, 26.4259, 0.3166 ) }
    apic_10 { pt3dadd( 433.672, 552.888, 26.4749, 0.378 ) }
    apic_10 { pt3dadd( 432.542, 552.836, 26.5159, 0.3426 ) }
    apic_10 { pt3dadd( 431.434, 552.998, 26.6522, 0.3158 ) }
    apic_10 { pt3dadd( 430.354, 553.202, 26.853, 0.305 ) }
    apic_10 { pt3dadd( 429.259, 553.387, 27.0253, 0.3256 ) }
    apic_10 { pt3dadd( 428.268, 553.908, 27.2527, 0.395 ) }
    apic_10 { pt3dadd( 427.318, 554.538, 27.4726, 0.3732 ) }
    apic_10 { pt3dadd( 426.261, 554.93, 27.673, 0.375 ) }
    apic_10 { pt3dadd( 425.137, 554.93, 27.8678, 0.4024 ) }
    apic_10 { pt3dadd( 424.053, 554.652, 28.1226, 0.5658 ) }
    apic_10 { pt3dadd( 423.005, 554.557, 28.4774, 0.5518 ) }
    apic_10 { pt3dadd( 422.119, 555.103, 28.7865, 0.6912 ) }
    apic_10 { pt3dadd( 421.459, 556.001, 29.0405, 0.6058 ) }
    apic_10 { pt3dadd( 420.704, 556.818, 29.2603, 0.5126 ) }
    apic_10 { pt3dadd( 419.786, 557.484, 29.456, 0.4836 ) }
    apic_10 { pt3dadd( 418.945, 558.223, 29.7038, 0.6452 ) }
    apic_10 { pt3dadd( 418.185, 558.962, 30.0686, 0.8162 ) }
    apic_10 { pt3dadd( 417.48, 559.72, 30.5474, 0.6134 ) }
    apic_10 { pt3dadd( 416.475, 560.131, 30.9571, 0.4722 ) }
    apic_10 { pt3dadd( 415.37, 560.303, 31.178, 0.4434 ) }
    apic_10 { pt3dadd( 414.31, 560.014, 31.3541, 0.6312 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_10 { pt3dadd( 413.188, 559.971, 31.432, 0.7232 ) }
    apic_10 { pt3dadd( 412.129, 560.211, 31.3317, 0.7658 ) }
    apic_10 { pt3dadd( 411.034, 560.362, 31.3132, 0.5512 ) }
    apic_10 { pt3dadd( 409.914, 560.221, 31.3278, 0.4338 ) }
    apic_10 { pt3dadd( 409.363, 560.536, 31.2273, 0.4572 ) }
    apic_10 { pt3dadd( 408.249, 560.675, 31.2161, 0.473 ) }
    apic_10 { pt3dadd( 407.43, 560.793, 31.439, 0.6356 ) }
    apic_10 { pt3dadd( 406.512, 561.209, 31.6814, 0.5192 ) }
    apic_10 { pt3dadd( 405.538, 561.361, 32.0314, 0.5022 ) }
    apic_10 { pt3dadd( 404.588, 561.542, 32.5898, 0.4208 ) }
    apic_10 { pt3dadd( 404.22, 561.553, 33.409, 0.5122 ) }
    apic_10 { pt3dadd( 403.271, 561.59, 34.1214, 0.4204 ) }
    apic_10 { pt3dadd( 402.265, 561.378, 34.6668, 0.3752 ) }
    apic_10 { pt3dadd( 401.298, 561.766, 34.937, 0.3688 ) }
    apic_10 { pt3dadd( 400.246, 562.14, 34.9866, 0.4402 ) }
    apic_10 { pt3dadd( 399.367, 562.18, 34.7578, 0.6256 ) }
    apic_10 { pt3dadd( 398.459, 562.33, 34.4784, 0.7128 ) }
    apic_10 { pt3dadd( 397.47, 561.968, 34.3252, 0.7466 ) }
    apic_10 { pt3dadd( 396.618, 561.814, 34.4299, 0.5144 ) }
    apic_10 { pt3dadd( 396.278, 561.256, 34.8888, 0.3706 ) }
    apic_10 { pt3dadd( 395.599, 561.053, 35.4536, 0.3134 ) }
    apic_10 { pt3dadd( 394.621, 561.018, 35.6933, 0.3362 ) }
    apic_10 { pt3dadd( 394.087, 561.503, 35.6485, 0.4406 ) }
    apic_10 { pt3dadd( 393.645, 561.704, 35.3402, 0.3304 ) }
    apic_10 { pt3dadd( 392.85, 561.818, 35.28, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 25/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 442.023, 551.743, 24.7811, 0.451 ) }
    apic_9 { pt3dadd( 441.479, 551.177, 24.6397, 0.3384 ) }
    apic_9 { pt3dadd( 440.638, 550.437, 24.6397, 0.2986 ) }
    apic_9 { pt3dadd( 439.679, 549.901, 24.568, 0.3198 ) }
    apic_9 { pt3dadd( 438.589, 549.621, 24.4681, 0.3542 ) }
    apic_9 { pt3dadd( 437.451, 549.57, 24.3992, 0.4434 ) }
    apic_9 { pt3dadd( 436.308, 549.519, 24.3676, 0.4842 ) }
    apic_9 { pt3dadd( 435.195, 549.273, 24.3771, 0.4802 ) }
    apic_9 { pt3dadd( 434.083, 549.189, 24.4788, 0.3994 ) }
    apic_9 { pt3dadd( 432.983, 549.421, 24.6396, 0.3776 ) }
    apic_9 { pt3dadd( 431.855, 549.591, 24.7638, 0.4026 ) }
    apic_9 { pt3dadd( 430.757, 549.792, 24.7729, 0.5888 ) }
    apic_9 { pt3dadd( 429.765, 550.326, 24.7336, 0.485 ) }
    apic_9 { pt3dadd( 428.725, 550.763, 24.7667, 0.4104 ) }
    apic_9 { pt3dadd( 427.618, 550.679, 24.8751, 0.389 ) }
    apic_9 { pt3dadd( 426.499, 550.566, 24.9108, 0.467 ) }
    apic_9 { pt3dadd( 425.442, 550.883, 25.0392, 0.728 ) }
    apic_9 { pt3dadd( 424.538, 551.326, 25.1367, 0.646 ) }
    apic_9 { pt3dadd( 423.964, 551.573, 25.5, 0.4954 ) }
    apic_9 { pt3dadd( 423.274, 552.161, 25.6211, 0.4374 ) }
    apic_9 { pt3dadd( 422.993, 552.464, 25.3028, 0.4002 ) }
    apic_9 { pt3dadd( 422.079, 552.888, 25.0737, 0.4482 ) }
    apic_9 { pt3dadd( 421.213, 553.567, 24.8384, 0.427 ) }
    apic_9 { pt3dadd( 420.111, 553.669, 24.7533, 0.4652 ) }
    apic_9 { pt3dadd( 419.173, 553.995, 24.7405, 0.6162 ) }
    apic_9 { pt3dadd( 418.084, 554.312, 24.7698, 0.736 ) }
    apic_9 { pt3dadd( 416.965, 554.497, 24.828, 0.5926 ) }
    apic_9 { pt3dadd( 416.067, 554.921, 24.9312, 0.5004 ) }
    apic_9 { pt3dadd( 415.333, 555.219, 25.0828, 0.6278 ) }
    apic_9 { pt3dadd( 414.43, 555.119, 25.2947, 0.5606 ) }
    apic_9 { pt3dadd( 413.971, 555.024, 25.6461, 0.5376 ) }
    apic_9 { pt3dadd( 413.32, 555.36, 25.8039, 0.6866 ) }
    apic_9 { pt3dadd( 412.471, 555.716, 25.7963, 0.72 ) }
    apic_9 { pt3dadd( 411.615, 556.287, 25.7621, 0.5878 ) }
    apic_9 { pt3dadd( 411.157, 556.883, 25.6868, 0.5978 ) }
    apic_9 { pt3dadd( 410.165, 556.942, 25.5288, 0.5232 ) }
    apic_9 { pt3dadd( 409.696, 557.647, 25.2148, 0.607 ) }
    apic_9 { pt3dadd( 409.181, 558.158, 24.7634, 0.5996 ) }
    apic_9 { pt3dadd( 408.387, 558.505, 24.2379, 0.4602 ) }
    apic_9 { pt3dadd( 407.377, 558.512, 23.7511, 0.3564 ) }
    apic_9 { pt3dadd( 406.589, 558.386, 23.4483, 0.3268 ) }
    apic_9 { pt3dadd( 405.625, 558.158, 23.3336, 0.3978 ) }
    apic_9 { pt3dadd( 404.608, 558.274, 23.4451, 0.3738 ) }
    apic_9 { pt3dadd( 403.49, 558.406, 23.4342, 0.3998 ) }
    apic_9 { pt3dadd( 402.52, 558.925, 23.2499, 0.3356 ) }
    apic_9 { pt3dadd( 401.547, 559.004, 22.8045, 0.3032 ) }
    apic_9 { pt3dadd( 400.534, 558.849, 22.2032, 0.2806 ) }
    apic_9 { pt3dadd( 399.505, 559.33, 21.7219, 0.2858 ) }
    apic_9 { pt3dadd( 398.557, 559.941, 21.3293, 0.2954 ) }
    apic_9 { pt3dadd( 397.473, 560.149, 20.9271, 0.3124 ) }
    apic_9 { pt3dadd( 396.354, 560.168, 20.5469, 0.348 ) }
    apic_9 { pt3dadd( 395.235, 560.2, 20.2435, 0.3946 ) }
    apic_9 { pt3dadd( 394.171, 560.522, 19.9536, 0.574 ) }
    apic_9 { pt3dadd( 393.207, 561.111, 19.6622, 0.4578 ) }
    apic_9 { pt3dadd( 392.142, 561.172, 19.4154, 0.3608 ) }
    apic_9 { pt3dadd( 391.024, 561.146, 19.1496, 0.293 ) }
    apic_9 { pt3dadd( 390.125, 561.723, 18.853, 0.31 ) }
    apic_9 { pt3dadd( 389.339, 562.549, 18.5775, 0.3348 ) }
    apic_9 { pt3dadd( 388.532, 563.359, 18.3358, 0.4126 ) }
    apic_9 { pt3dadd( 387.623, 564.049, 18.1062, 0.4022 ) }
    apic_9 { pt3dadd( 386.732, 564.684, 17.7875, 0.447 ) }
    apic_9 { pt3dadd( 386.134, 565.166, 17.541, 0.4484 ) }
    apic_9 { pt3dadd( 385.026, 565.159, 17.2411, 0.3896 ) }
    apic_9 { pt3dadd( 383.96, 565.255, 16.8332, 0.351 ) }
    apic_9 { pt3dadd( 383.051, 565.858, 16.4042, 0.3944 ) }
    apic_9 { pt3dadd( 382.049, 566.351, 16.1133, 0.374 ) }
    apic_9 { pt3dadd( 380.93, 566.489, 15.8708, 0.369 ) }
    apic_9 { pt3dadd( 379.807, 566.47, 15.6024, 0.429 ) }
    apic_9 { pt3dadd( 378.713, 566.255, 15.4607, 0.4324 ) }
    apic_9 { pt3dadd( 377.633, 566.063, 15.2583, 0.5038 ) }
    apic_9 { pt3dadd( 376.632, 566.049, 15.0174, 0.5504 ) }
    apic_9 { pt3dadd( 376.381, 565.144, 14.7896, 0.5948 ) }
    apic_9 { pt3dadd( 375.474, 564.602, 14.544, 0.6534 ) }
    apic_9 { pt3dadd( 374.751, 563.968, 14.2968, 0.6482 ) }
    apic_9 { pt3dadd( 374.308, 563.338, 14.0755, 0.5038 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_9 { pt3dadd( 373.534, 562.631, 13.8674, 0.4328 ) }
    apic_9 { pt3dadd( 372.929, 562.426, 13.741, 0.4896 ) }
    apic_9 { pt3dadd( 372.226, 562.394, 13.722, 0.5962 ) }
    apic_9 { pt3dadd( 371.676, 562.39, 13.5859, 0.5588 ) }
    apic_9 { pt3dadd( 370.912, 561.903, 13.3885, 0.4866 ) }
    apic_9 { pt3dadd( 370.656, 561.145, 13.0227, 0.3652 ) }
    apic_9 { pt3dadd( 369.975, 560.869, 12.5343, 0.3108 ) }
    apic_9 { pt3dadd( 369.416, 560.547, 12.1279, 0.2954 ) }
    apic_9 { pt3dadd( 368.556, 560.56, 11.9623, 0.308 ) }
    apic_9 { pt3dadd( 367.843, 560.56, 12.1379, 0.3616 ) }
    apic_9 { pt3dadd( 366.758, 560.451, 12.2646, 0.3134 ) }
    apic_9 { pt3dadd( 366.429, 560.043, 12.0194, 0.2542 ) }
    apic_9 { pt3dadd( 365.851, 559.53, 10.64, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 13/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 467.192, 573.911, 25.2753, 0.38 ) }
    dend_18 { pt3dadd( 466.966, 574.288, 25.4794, 0.4112 ) }
    dend_18 { pt3dadd( 466.065, 573.953, 25.6811, 0.3564 ) }
    dend_18 { pt3dadd( 465.261, 573.329, 25.8185, 0.3432 ) }
    dend_18 { pt3dadd( 464.719, 572.709, 25.7099, 0.349 ) }
    dend_18 { pt3dadd( 464.046, 572.029, 25.4347, 0.44 ) }
    dend_18 { pt3dadd( 463.303, 571.418, 25.295, 0.448 ) }
    dend_18 { pt3dadd( 462.463, 570.782, 25.0556, 0.5574 ) }
    dend_18 { pt3dadd( 461.493, 570.23, 24.7856, 0.5302 ) }
    dend_18 { pt3dadd( 460.634, 569.707, 24.5377, 0.4512 ) }
    dend_18 { pt3dadd( 459.863, 569.201, 24.5161, 0.4434 ) }
    dend_18 { pt3dadd( 458.889, 568.859, 24.3884, 0.4422 ) }
    dend_18 { pt3dadd( 458.433, 568.121, 24.0922, 0.3768 ) }
    dend_18 { pt3dadd( 458.145, 567.49, 24.0617, 0.3336 ) }
    dend_18 { pt3dadd( 457.556, 566.995, 23.8147, 0.3314 ) }
    dend_18 { pt3dadd( 457.043, 566.026, 23.571, 0.4066 ) }
    dend_18 { pt3dadd( 456.467, 565.154, 23.3744, 0.3896 ) }
    dend_18 { pt3dadd( 455.855, 564.3, 23.2905, 0.4302 ) }
    dend_18 { pt3dadd( 455.242, 563.62, 23.2897, 0.3866 ) }
    dend_18 { pt3dadd( 454.621, 562.729, 23.2378, 0.4232 ) }
    dend_18 { pt3dadd( 454.131, 561.993, 23.297, 0.3804 ) }
    dend_18 { pt3dadd( 453.698, 561.475, 23.2126, 0.3804 ) }
    dend_18 { pt3dadd( 452.995, 560.887, 23.0916, 0.4528 ) }
    dend_18 { pt3dadd( 452.359, 560.302, 23.1495, 0.4654 ) }
    dend_18 { pt3dadd( 451.352, 559.966, 23.0959, 0.6202 ) }
    dend_18 { pt3dadd( 450.543, 559.308, 23.053, 0.4962 ) }
    dend_18 { pt3dadd( 449.784, 558.732, 23.01, 0.4338 ) }
    dend_18 { pt3dadd( 449.014, 558.386, 23.0732, 0.4184 ) }
    dend_18 { pt3dadd( 448.279, 557.774, 23.0369, 0.5904 ) }
    dend_18 { pt3dadd( 447.512, 557.038, 23.1159, 0.6222 ) }
    dend_18 { pt3dadd( 447.075, 556.285, 23.1718, 0.7022 ) }
    dend_18 { pt3dadd( 446.646, 555.341, 23.1728, 0.5174 ) }
    dend_18 { pt3dadd( 446.574, 554.244, 23.227, 0.4196 ) }
    dend_18 { pt3dadd( 446.276, 553.243, 23.2368, 0.4224 ) }
    dend_18 { pt3dadd( 445.593, 552.535, 23.2575, 0.45 ) }
    dend_18 { pt3dadd( 445.24, 551.581, 23.4085, 0.3926 ) }
    dend_18 { pt3dadd( 444.999, 550.772, 23.5287, 0.3562 ) }
    dend_18 { pt3dadd( 444.483, 549.806, 23.6608, 0.4054 ) }
    dend_18 { pt3dadd( 444.087, 548.749, 23.7318, 0.3878 ) }
    dend_18 { pt3dadd( 443.944, 547.726, 23.857, 0.4264 ) }
    dend_18 { pt3dadd( 443.458, 546.74, 23.9463, 0.3798 ) }
    dend_18 { pt3dadd( 442.75, 546.062, 23.9729, 0.411 ) }
    dend_18 { pt3dadd( 442.3, 545.141, 24.0006, 0.356 ) }
    dend_18 { pt3dadd( 442.294, 544.316, 24.0401, 0.3412 ) }
    dend_18 { pt3dadd( 442.404, 543.308, 24.0217, 0.351 ) }
    dend_18 { pt3dadd( 442.335, 542.238, 24.0738, 0.4156 ) }
    dend_18 { pt3dadd( 442.156, 541.294, 24.0968, 0.5402 ) }
    dend_18 { pt3dadd( 441.566, 540.428, 24.0165, 0.7452 ) }
    dend_18 { pt3dadd( 441.122, 539.586, 24.0494, 0.5676 ) }
    dend_18 { pt3dadd( 440.339, 538.813, 24.0917, 0.4276 ) }
    dend_18 { pt3dadd( 439.686, 537.999, 24.1117, 0.3952 ) }
    dend_18 { pt3dadd( 439.211, 536.975, 24.109, 0.3748 ) }
    dend_18 { pt3dadd( 438.336, 536.422, 24.1527, 0.3716 ) }
    dend_18 { pt3dadd( 437.864, 536.076, 24.4797, 0.4278 ) }
    dend_18 { pt3dadd( 436.909, 535.844, 24.7758, 0.4598 ) }
    dend_18 { pt3dadd( 436.53, 534.88, 24.9609, 0.4116 ) }
    dend_18 { pt3dadd( 435.792, 534.18, 25.1834, 0.3866 ) }
    dend_18 { pt3dadd( 435.003, 533.414, 25.44, 0.4862 ) }
    dend_18 { pt3dadd( 434.197, 532.983, 25.7601, 0.4188 ) }
    dend_18 { pt3dadd( 433.614, 532.175, 25.9707, 0.375 ) }
    dend_18 { pt3dadd( 432.913, 531.767, 26.383, 0.3558 ) }
    dend_18 { pt3dadd( 432.136, 530.998, 26.6883, 0.4764 ) }
    dend_18 { pt3dadd( 431.265, 530.366, 26.8701, 0.4006 ) }
    dend_18 { pt3dadd( 430.576, 529.683, 26.8409, 0.339 ) }
    dend_18 { pt3dadd( 430.142, 528.96, 26.8015, 0.3002 ) }
    dend_18 { pt3dadd( 430.012, 528.253, 26.7034, 0.3214 ) }
    dend_18 { pt3dadd( 430.127, 527.22, 26.6452, 0.3636 ) }
    dend_18 { pt3dadd( 429.664, 526.408, 26.3982, 0.4306 ) }
    dend_18 { pt3dadd( 428.81, 525.81, 26.3235, 0.6068 ) }
    dend_18 { pt3dadd( 428.371, 524.897, 26.3026, 0.683 ) }
    dend_18 { pt3dadd( 427.715, 524.145, 26.3532, 0.667 ) }
    dend_18 { pt3dadd( 427.389, 523.125, 26.3593, 0.4852 ) }
    dend_18 { pt3dadd( 426.855, 522.364, 26.6053, 0.4274 ) }
    dend_18 { pt3dadd( 427.008, 521.708, 27.1236, 0.3398 ) }
    dend_18 { pt3dadd( 426.288, 520.892, 27.6802, 0.311 ) }
    dend_18 { pt3dadd( 425.562, 520.406, 28.327, 0.2946 ) }
    dend_18 { pt3dadd( 424.87, 520.257, 29.0886, 0.3132 ) }
    dend_18 { pt3dadd( 424.479, 519.346, 29.8161, 0.3406 ) }
    dend_18 { pt3dadd( 423.979, 518.422, 30.1871, 0.4246 ) }
    dend_18 { pt3dadd( 424.424, 518.118, 30.0762, 0.4184 ) }
    dend_18 { pt3dadd( 424.328, 517.325, 29.7903, 0.508 ) }
    dend_18 { pt3dadd( 423.72, 516.422, 29.5963, 0.412 ) }
    dend_18 { pt3dadd( 423.222, 515.515, 29.4904, 0.3604 ) }
    dend_18 { pt3dadd( 422.844, 514.483, 29.4888, 0.3394 ) }
    dend_18 { pt3dadd( 422.594, 513.539, 29.4736, 0.396 ) }
    dend_18 { pt3dadd( 422.321, 512.61, 29.2995, 0.492 ) }
    dend_18 { pt3dadd( 421.952, 511.572, 29.1276, 0.7156 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_18 { pt3dadd( 421.554, 510.662, 29.0777, 0.9074 ) }
    dend_18 { pt3dadd( 421.121, 509.763, 29.1427, 0.9738 ) }
    dend_18 { pt3dadd( 420.777, 508.863, 29.0265, 0.8982 ) }
    dend_18 { pt3dadd( 420.205, 508.105, 28.9999, 0.8068 ) }
    dend_18 { pt3dadd( 419.664, 507.777, 29.2286, 0.8596 ) }
    dend_18 { pt3dadd( 419.472, 506.887, 29.33, 1.022 ) }
    dend_18 { pt3dadd( 418.999, 505.983, 29.2334, 1.009 ) }
    dend_18 { pt3dadd( 418.593, 505.159, 28.9164, 0.909 ) }
    dend_18 { pt3dadd( 418.475, 504.347, 28.5272, 0.6336 ) }
    dend_18 { pt3dadd( 418.132, 503.345, 28.2383, 0.5612 ) }
    dend_18 { pt3dadd( 417.964, 502.327, 28.1137, 0.5864 ) }
    dend_18 { pt3dadd( 417.678, 501.32, 28.1904, 0.5468 ) }
    dend_18 { pt3dadd( 417.86, 500.589, 28.5144, 0.434 ) }
    dend_18 { pt3dadd( 417.5, 499.657, 28.7101, 0.4168 ) }
    dend_18 { pt3dadd( 417.513, 498.75, 28.6899, 0.367 ) }
    dend_18 { pt3dadd( 417.629, 497.945, 28.4379, 0.3626 ) }
    dend_18 { pt3dadd( 417.126, 497.012, 28.2156, 0.3858 ) }
    dend_18 { pt3dadd( 416.637, 496.174, 28.1019, 0.5042 ) }
    dend_18 { pt3dadd( 416.374, 495.095, 27.9835, 0.5862 ) }
    dend_18 { pt3dadd( 416.413, 494.271, 28.0272, 0.721 ) }
    dend_18 { pt3dadd( 416.513, 493.257, 28.1282, 0.5952 ) }
    dend_18 { pt3dadd( 416.302, 492.609, 28.3819, 0.585 ) }
    dend_18 { pt3dadd( 416.214, 492.163, 28.2156, 0.6256 ) }
    dend_18 { pt3dadd( 415.947, 491.132, 28.1016, 0.6438 ) }
    dend_18 { pt3dadd( 415.684, 490.319, 28.2262, 0.4956 ) }
    dend_18 { pt3dadd( 415.237, 489.461, 28.2654, 0.418 ) }
    dend_18 { pt3dadd( 414.401, 489.289, 28.357, 0.4604 ) }
    dend_18 { pt3dadd( 413.957, 488.509, 28.2506, 0.5508 ) }
    dend_18 { pt3dadd( 413.708, 487.671, 27.9744, 0.4322 ) }
    dend_18 { pt3dadd( 413.251, 486.899, 27.2222, 0.4576 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 467.192, 573.911, 25.2753, 0.38 ) }
    dend_17 { pt3dadd( 467.221, 573.333, 24.278, 0.4576 ) }
    dend_17 { pt3dadd( 467.025, 572.263, 23.8905, 0.3612 ) }
    dend_17 { pt3dadd( 466.524, 571.306, 23.4018, 0.3038 ) }
    dend_17 { pt3dadd( 465.999, 570.395, 22.7517, 0.2816 ) }
    dend_17 { pt3dadd( 466.008, 569.408, 21.9903, 0.2874 ) }
    dend_17 { pt3dadd( 466.289, 568.38, 21.1849, 0.2994 ) }
    dend_17 { pt3dadd( 466.104, 567.406, 20.3579, 0.3158 ) }
    dend_17 { pt3dadd( 465.189, 567.065, 19.5705, 0.3764 ) }
    dend_17 { pt3dadd( 464.416, 566.313, 18.9527, 0.3394 ) }
    dend_17 { pt3dadd( 464.201, 565.203, 18.5065, 0.31 ) }
    dend_17 { pt3dadd( 463.765, 564.152, 18.1655, 0.293 ) }
    dend_17 { pt3dadd( 462.817, 563.667, 17.8065, 0.3098 ) }
    dend_17 { pt3dadd( 461.786, 563.179, 17.5283, 0.3346 ) }
    dend_17 { pt3dadd( 461.206, 562.202, 17.3122, 0.4126 ) }
    dend_17 { pt3dadd( 461.36, 561.069, 17.1252, 0.4008 ) }
    dend_17 { pt3dadd( 461.203, 559.943, 16.9299, 0.4508 ) }
    dend_17 { pt3dadd( 460.789, 558.962, 16.6232, 0.4254 ) }
    dend_17 { pt3dadd( 460.539, 557.849, 16.3933, 0.492 ) }
    dend_17 { pt3dadd( 460.119, 556.808, 16.2655, 0.5216 ) }
    dend_17 { pt3dadd( 459.5, 555.879, 16.0877, 0.5748 ) }
    dend_17 { pt3dadd( 458.58, 555.255, 15.8637, 0.4528 ) }
    dend_17 { pt3dadd( 458.117, 554.308, 15.6273, 0.3834 ) }
    dend_17 { pt3dadd( 458.428, 553.209, 15.4662, 0.4072 ) }
    dend_17 { pt3dadd( 458.793, 552.134, 15.3766, 0.3986 ) }
    dend_17 { pt3dadd( 459.197, 551.099, 15.3642, 0.4104 ) }
    dend_17 { pt3dadd( 459.676, 550.084, 15.2916, 0.525 ) }
    dend_17 { pt3dadd( 459.929, 548.996, 15.1368, 0.5178 ) }
    dend_17 { pt3dadd( 460.325, 547.927, 14.9668, 0.4272 ) }
    dend_17 { pt3dadd( 460.767, 546.894, 14.7396, 0.4042 ) }
    dend_17 { pt3dadd( 461.109, 545.836, 14.465, 0.3442 ) }
    dend_17 { pt3dadd( 461.628, 544.816, 14.2425, 0.319 ) }
    dend_17 { pt3dadd( 461.975, 543.758, 14.0861, 0.3096 ) }
    dend_17 { pt3dadd( 461.784, 542.651, 13.9787, 0.3402 ) }
    dend_17 { pt3dadd( 461.302, 541.614, 13.8982, 0.3918 ) }
    dend_17 { pt3dadd( 460.888, 540.548, 13.8331, 0.5146 ) }
    dend_17 { pt3dadd( 460.439, 539.498, 13.7668, 0.6076 ) }
    dend_17 { pt3dadd( 459.859, 538.513, 13.6787, 0.7498 ) }
    dend_17 { pt3dadd( 459.236, 537.56, 13.5467, 0.7026 ) }
    dend_17 { pt3dadd( 458.575, 536.649, 13.339, 0.5216 ) }
    dend_17 { pt3dadd( 457.827, 535.804, 13.098, 0.4114 ) }
    dend_17 { pt3dadd( 456.921, 535.13, 12.8758, 0.4852 ) }
    dend_17 { pt3dadd( 455.995, 534.552, 12.6413, 0.4174 ) }
    dend_17 { pt3dadd( 455.593, 533.539, 12.4472, 0.3696 ) }
    dend_17 { pt3dadd( 455.275, 532.51, 12.3254, 0.3594 ) }
    dend_17 { pt3dadd( 454.5, 531.732, 12.173, 0.4172 ) }
    dend_17 { pt3dadd( 453.533, 531.128, 12.0438, 0.6102 ) }
    dend_17 { pt3dadd( 452.579, 530.533, 11.9092, 0.5504 ) }
    dend_17 { pt3dadd( 451.712, 529.88, 11.8501, 0.4084 ) }
    dend_17 { pt3dadd( 450.815, 529.888, 11.9692, 0.2966 ) }
    dend_17 { pt3dadd( 449.988, 530.624, 12.165, 0.2684 ) }
    dend_17 { pt3dadd( 449.141, 531.309, 12.2765, 0.2626 ) }
    dend_17 { pt3dadd( 448.435, 530.871, 12.2312, 0.2542 ) }
    dend_17 { pt3dadd( 447.799, 529.991, 12.3268, 0.2288 ) }
    dend_17 { pt3dadd( 447.751, 528.928, 12.8946, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 85/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 446.395, 578.975, 27.2446, 0.751 ) }
    dend_13 { pt3dadd( 445.826, 579.318, 26.7229, 0.5688 ) }
    dend_13 { pt3dadd( 444.932, 579.994, 26.4989, 0.4766 ) }
    dend_13 { pt3dadd( 444.078, 580.749, 26.2825, 0.4872 ) }
    dend_13 { pt3dadd( 443.182, 581.416, 26.0307, 0.7678 ) }
    dend_13 { pt3dadd( 442.302, 582.122, 25.8015, 0.7082 ) }
    dend_13 { pt3dadd( 441.465, 582.881, 25.6933, 0.667 ) }
    dend_13 { pt3dadd( 441.323, 583.218, 25.7098, 0.483 ) }
    dend_13 { pt3dadd( 440.38, 583.346, 25.6332, 0.4352 ) }
    dend_13 { pt3dadd( 439.536, 583.544, 25.5368, 0.524 ) }
    dend_13 { pt3dadd( 438.719, 583.802, 25.5517, 0.5144 ) }
    dend_13 { pt3dadd( 437.756, 584.231, 25.6255, 0.4274 ) }
    dend_13 { pt3dadd( 436.97, 584.686, 25.3243, 0.3732 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 446.395, 578.975, 27.2446, 0.751 ) }
    dend_12 { pt3dadd( 445.694, 579.176, 27.597, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_12 { pt3dadd( 444.676, 579.223, 27.6664, 0.405 ) }
    dend_12 { pt3dadd( 443.845, 579.474, 27.8765, 0.3872 ) }
    dend_12 { pt3dadd( 442.967, 580.001, 28.054, 0.4244 ) }
    dend_12 { pt3dadd( 442.006, 580.294, 28.2738, 0.3804 ) }
    dend_12 { pt3dadd( 440.942, 580.423, 28.5144, 0.3894 ) }
    dend_12 { pt3dadd( 440.161, 580.572, 28.9766, 0.4258 ) }
    dend_12 { pt3dadd( 439.398, 579.906, 29.3815, 0.6264 ) }
    dend_12 { pt3dadd( 438.384, 579.628, 29.6349, 0.58 ) }
    dend_12 { pt3dadd( 437.843, 578.869, 29.9258, 0.4656 ) }
    dend_12 { pt3dadd( 436.819, 579.052, 30.0874, 0.3922 ) }
    dend_12 { pt3dadd( 435.82, 579.247, 30.2224, 0.4974 ) }
    dend_12 { pt3dadd( 434.942, 579.102, 30.5603, 0.4348 ) }
    dend_12 { pt3dadd( 434.007, 579.064, 31.0453, 0.4278 ) }
    dend_12 { pt3dadd( 433.114, 578.435, 31.5151, 0.3406 ) }
    dend_12 { pt3dadd( 432.059, 578.068, 31.8444, 0.3126 ) }
    dend_12 { pt3dadd( 431.089, 577.563, 32.1322, 0.2976 ) }
    dend_12 { pt3dadd( 430.425, 577.593, 32.1605, 0.3182 ) }
    dend_12 { pt3dadd( 429.755, 576.871, 32.2823, 0.3506 ) }
    dend_12 { pt3dadd( 428.878, 576.462, 32.249, 0.44 ) }
    dend_12 { pt3dadd( 428.076, 576.268, 32.1465, 0.4614 ) }
    dend_12 { pt3dadd( 427.139, 575.823, 31.9931, 0.5164 ) }
    dend_12 { pt3dadd( 426.364, 575.368, 32.0737, 0.7744 ) }
    dend_12 { pt3dadd( 425.568, 574.796, 32.2403, 0.7218 ) }
    dend_12 { pt3dadd( 424.886, 574.47, 32.5013, 0.6874 ) }
    dend_12 { pt3dadd( 424.104, 573.953, 32.6768, 0.5444 ) }
    dend_12 { pt3dadd( 423.845, 573.198, 33.0716, 0.4352 ) }
    dend_12 { pt3dadd( 423.128, 572.645, 33.2875, 0.3896 ) }
    dend_12 { pt3dadd( 422.243, 572.527, 33.2072, 0.4608 ) }
    dend_12 { pt3dadd( 421.594, 572.158, 33.012, 0.5222 ) }
    dend_12 { pt3dadd( 420.731, 571.55, 32.9638, 0.5212 ) }
    dend_12 { pt3dadd( 420.195, 570.592, 32.923, 0.618 ) }
    dend_12 { pt3dadd( 419.419, 570.221, 32.8432, 0.7786 ) }
    dend_12 { pt3dadd( 418.755, 569.787, 32.7342, 0.9388 ) }
    dend_12 { pt3dadd( 417.87, 569.075, 32.7174, 0.987 ) }
    dend_12 { pt3dadd( 416.94, 568.686, 32.8628, 0.9118 ) }
    dend_12 { pt3dadd( 416.016, 568.227, 32.893, 0.8864 ) }
    dend_12 { pt3dadd( 414.967, 568.125, 32.9672, 0.7432 ) }
    dend_12 { pt3dadd( 413.948, 567.915, 33.245, 0.7132 ) }
    dend_12 { pt3dadd( 412.878, 568.146, 33.6249, 0.6598 ) }
    dend_12 { pt3dadd( 411.872, 567.907, 34.0628, 0.55 ) }
    dend_12 { pt3dadd( 411.322, 567.424, 34.6934, 0.3982 ) }
    dend_12 { pt3dadd( 410.348, 567.077, 35.1985, 0.3244 ) }
    dend_12 { pt3dadd( 409.663, 566.728, 35.3388, 0.3212 ) }
    dend_12 { pt3dadd( 408.979, 566.192, 35.3265, 0.3554 ) }
    dend_12 { pt3dadd( 408.304, 565.605, 35.4491, 0.4518 ) }
    dend_12 { pt3dadd( 407.706, 564.873, 35.5659, 0.4694 ) }
    dend_12 { pt3dadd( 407.176, 564.005, 35.5838, 0.5994 ) }
    dend_12 { pt3dadd( 406.586, 563.331, 35.8098, 0.5968 ) }
    dend_12 { pt3dadd( 406.645, 562.552, 35.9584, 0.6296 ) }
    dend_12 { pt3dadd( 406.393, 561.543, 36.2746, 0.508 ) }
    dend_12 { pt3dadd( 406.039, 560.781, 36.4246, 0.4824 ) }
    dend_12 { pt3dadd( 406.12, 559.851, 36.7836, 0.608 ) }
    dend_12 { pt3dadd( 405.9, 559.045, 37.38, 0.6864 ) }
    dend_12 { pt3dadd( 405.421, 558.858, 38.0929, 0.6668 ) }
    dend_12 { pt3dadd( 404.448, 558.73, 38.7612, 0.5168 ) }
    dend_12 { pt3dadd( 403.499, 558.988, 39.2017, 0.3304 ) }
    dend_12 { pt3dadd( 403.146, 559.874, 40.04, 0.2288 ) }
    // Section: apic_18, id: apic_18, parent: apic_16 (entry count 57/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 474.291, 533.104, 30.7392, 0.7636 ) }
    apic_18 { pt3dadd( 474.029, 532.365, 30.5228, 0.8628 ) }
    apic_18 { pt3dadd( 473.617, 531.317, 30.401, 0.6232 ) }
    apic_18 { pt3dadd( 473.116, 530.3, 30.2952, 0.6338 ) }
    apic_18 { pt3dadd( 472.509, 529.337, 30.27, 0.5042 ) }
    apic_18 { pt3dadd( 471.87, 528.411, 30.357, 0.5296 ) }
    apic_18 { pt3dadd( 471.201, 527.504, 30.5124, 0.6622 ) }
    apic_18 { pt3dadd( 470.588, 526.545, 30.6712, 0.9502 ) }
    apic_18 { pt3dadd( 470.121, 525.503, 30.8193, 1.0492 ) }
    apic_18 { pt3dadd( 469.881, 524.398, 30.9616, 0.8284 ) }
    apic_18 { pt3dadd( 469.84, 523.256, 31.0932, 0.7816 ) }
    apic_18 { pt3dadd( 469.832, 522.114, 31.199, 0.993 ) }
    apic_18 { pt3dadd( 469.777, 520.973, 31.309, 1.0808 ) }
    apic_18 { pt3dadd( 469.519, 519.871, 31.4678, 1.118 ) }
    apic_18 { pt3dadd( 469.152, 518.934, 31.7878, 0.8828 ) }
    apic_18 { pt3dadd( 468.628, 517.923, 32.1107, 1.0068 ) }
    apic_18 { pt3dadd( 468.041, 516.979, 32.4906, 1.0342 ) }
    apic_18 { pt3dadd( 467.289, 516.124, 32.8507, 0.9252 ) }
    apic_18 { pt3dadd( 466.5, 515.294, 33.1565, 0.582 ) }
    apic_18 { pt3dadd( 465.779, 514.411, 33.4216, 0.4046 ) }
    apic_18 { pt3dadd( 465.235, 513.406, 33.6734, 0.3636 ) }
    apic_18 { pt3dadd( 464.703, 512.415, 33.987, 0.4908 ) }
    apic_18 { pt3dadd( 464.096, 511.502, 34.3888, 0.427 ) }
    apic_18 { pt3dadd( 463.426, 510.656, 34.8701, 0.3904 ) }
    apic_18 { pt3dadd( 462.582, 509.97, 35.383, 0.3842 ) }
    apic_18 { pt3dadd( 461.747, 509.195, 35.8016, 0.5296 ) }
    apic_18 { pt3dadd( 460.983, 508.346, 36.0968, 0.4954 ) }
    apic_18 { pt3dadd( 460.303, 507.426, 36.2824, 0.5342 ) }
    apic_18 { pt3dadd( 459.561, 506.555, 36.3824, 0.5678 ) }
    apic_18 { pt3dadd( 458.794, 505.709, 36.4269, 0.5882 ) }
    apic_18 { pt3dadd( 458.123, 504.782, 36.4454, 0.8292 ) }
    apic_18 { pt3dadd( 457.457, 503.853, 36.4633, 0.7472 ) }
    apic_18 { pt3dadd( 456.913, 502.85, 36.4882, 0.8728 ) }
    apic_18 { pt3dadd( 456.496, 501.784, 36.5238, 0.9036 ) }
    apic_18 { pt3dadd( 456.056, 500.729, 36.5742, 0.7982 ) }
    apic_18 { pt3dadd( 455.669, 499.652, 36.6425, 0.9326 ) }
    apic_18 { pt3dadd( 455.195, 498.617, 36.7338, 0.9544 ) }
    apic_18 { pt3dadd( 454.544, 497.684, 36.8668, 0.7264 ) }
    apic_18 { pt3dadd( 454.012, 496.692, 37.0821, 0.4612 ) }
    apic_18 { pt3dadd( 453.397, 495.748, 37.3495, 0.3486 ) }
    apic_18 { pt3dadd( 452.731, 494.818, 37.5984, 0.3606 ) }
    apic_18 { pt3dadd( 452.187, 493.828, 37.8512, 0.4546 ) }
    apic_18 { pt3dadd( 451.871, 492.755, 38.1492, 0.509 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_18 { pt3dadd( 451.457, 491.721, 38.428, 0.5048 ) }
    apic_18 { pt3dadd( 450.689, 490.878, 38.6534, 0.5502 ) }
    apic_18 { pt3dadd( 449.887, 490.087, 38.8741, 0.8328 ) }
    apic_18 { pt3dadd( 449.219, 489.192, 39.0855, 0.8532 ) }
    apic_18 { pt3dadd( 448.665, 488.192, 39.1938, 0.8168 ) }
    apic_18 { pt3dadd( 448.154, 487.187, 39.1751, 0.6528 ) }
    apic_18 { pt3dadd( 447.654, 486.192, 39.0578, 0.8178 ) }
    apic_18 { pt3dadd( 446.97, 485.278, 38.9458, 0.6768 ) }
    apic_18 { pt3dadd( 446.241, 484.398, 38.8553, 0.753 ) }
    apic_18 { pt3dadd( 445.571, 483.472, 38.7993, 0.6288 ) }
    apic_18 { pt3dadd( 444.926, 482.53, 38.7898, 0.5428 ) }
    apic_18 { pt3dadd( 444.379, 481.526, 38.8256, 0.5974 ) }
    apic_18 { pt3dadd( 443.811, 480.533, 38.8982, 0.5766 ) }
    apic_18 { pt3dadd( 443.224, 479.551, 38.9981, 0.672 ) }
    apic_18 { pt3dadd( 442.588, 478.605, 39.1339, 0.8852 ) }
    apic_18 { pt3dadd( 441.905, 477.714, 39.3431, 0.8764 ) }
    apic_18 { pt3dadd( 441.303, 476.794, 39.6519, 0.7614 ) }
    apic_18 { pt3dadd( 440.651, 475.886, 39.9944, 0.7976 ) }
    apic_18 { pt3dadd( 439.931, 475.009, 40.2808, 0.5698 ) }
    apic_18 { pt3dadd( 439.082, 474.301, 40.4992, 0.4356 ) }
    apic_18 { pt3dadd( 438.267, 473.53, 40.6638, 0.389 ) }
    apic_18 { pt3dadd( 437.529, 472.656, 40.7551, 0.4666 ) }
    apic_18 { pt3dadd( 436.652, 471.929, 40.7896, 0.7274 ) }
    apic_18 { pt3dadd( 435.814, 471.153, 40.7896, 0.6438 ) }
    apic_18 { pt3dadd( 435.008, 470.34, 40.7702, 0.4962 ) }
    apic_18 { pt3dadd( 434.237, 469.496, 40.7313, 0.4166 ) }
    apic_18 { pt3dadd( 433.64, 468.539, 40.6717, 0.47 ) }
    apic_18 { pt3dadd( 433.285, 467.453, 40.591, 0.7382 ) }
    apic_18 { pt3dadd( 433.061, 466.333, 40.4835, 0.6426 ) }
    apic_18 { pt3dadd( 432.917, 465.216, 40.3094, 0.5974 ) }
    apic_18 { pt3dadd( 432.631, 464.147, 40.061, 0.788 ) }
    apic_18 { pt3dadd( 432.244, 463.104, 39.769, 0.7246 ) }
    apic_18 { pt3dadd( 432.016, 462.008, 39.4915, 0.8004 ) }
    apic_18 { pt3dadd( 431.725, 460.913, 39.3039, 0.9166 ) }
    apic_18 { pt3dadd( 431.215, 459.894, 39.2272, 0.793 ) }
    apic_18 { pt3dadd( 430.528, 458.987, 39.2624, 0.8368 ) }
    apic_18 { pt3dadd( 429.816, 458.127, 39.4411, 0.966 ) }
    apic_18 { pt3dadd( 429.069, 457.349, 39.7684, 0.971 ) }
    apic_18 { pt3dadd( 428.283, 456.569, 40.1358, 0.7478 ) }
    apic_18 { pt3dadd( 427.594, 455.662, 40.4379, 0.7766 ) }
    apic_18 { pt3dadd( 426.993, 454.69, 40.6552, 0.7386 ) }
    apic_18 { pt3dadd( 426.449, 453.684, 40.796, 0.6544 ) }
    apic_18 { pt3dadd( 425.928, 452.665, 40.871, 0.5642 ) }
    apic_18 { pt3dadd( 425.364, 451.671, 40.9007, 0.5366 ) }
    apic_18 { pt3dadd( 424.751, 450.705, 40.9136, 0.4942 ) }
    apic_18 { pt3dadd( 424.106, 449.76, 40.9268, 0.6018 ) }
    apic_18 { pt3dadd( 423.433, 448.835, 40.9452, 0.583 ) }
    apic_18 { pt3dadd( 422.69, 447.969, 40.9718, 0.6914 ) }
    apic_18 { pt3dadd( 421.909, 447.131, 41.0094, 0.8852 ) }
    apic_18 { pt3dadd( 421.232, 446.216, 41.0598, 1.0508 ) }
    apic_18 { pt3dadd( 420.767, 445.18, 41.1258, 0.9238 ) }
    apic_18 { pt3dadd( 420.448, 444.084, 41.2219, 0.9662 ) }
    apic_18 { pt3dadd( 420.145, 443.009, 41.3966, 0.8406 ) }
    apic_18 { pt3dadd( 419.84, 441.925, 41.5923, 0.683 ) }
    apic_18 { pt3dadd( 419.626, 440.804, 41.7474, 0.7114 ) }
    apic_18 { pt3dadd( 419.274, 439.726, 41.8572, 0.8092 ) }
    apic_18 { pt3dadd( 418.855, 438.662, 41.9247, 0.771 ) }
    apic_18 { pt3dadd( 418.441, 437.596, 41.956, 0.624 ) }
    apic_18 { pt3dadd( 418.048, 436.522, 41.9605, 0.4912 ) }
    apic_18 { pt3dadd( 417.839, 435.405, 41.9496, 0.4808 ) }
    apic_18 { pt3dadd( 417.584, 434.312, 41.8902, 0.6908 ) }
    apic_18 { pt3dadd( 417.386, 433.198, 41.8494, 0.653 ) }
    apic_18 { pt3dadd( 417.1, 432.114, 41.9104, 0.8266 ) }
    apic_18 { pt3dadd( 416.733, 431.039, 42.0171, 0.651 ) }
    apic_18 { pt3dadd( 416.352, 429.96, 42.1361, 0.6822 ) }
    apic_18 { pt3dadd( 415.843, 428.943, 42.2831, 0.6088 ) }
    apic_18 { pt3dadd( 415.161, 428.072, 42.5079, 0.653 ) }
    apic_18 { pt3dadd( 414.435, 427.206, 42.7196, 0.546 ) }
    apic_18 { pt3dadd( 413.747, 426.293, 42.87, 0.5786 ) }
    apic_18 { pt3dadd( 413.009, 425.419, 42.9713, 0.6604 ) }
    apic_18 { pt3dadd( 412.336, 424.497, 43.0282, 0.7102 ) }
    apic_18 { pt3dadd( 411.743, 423.528, 43.0153, 0.6096 ) }
    apic_18 { pt3dadd( 411.164, 422.549, 43.0086, 0.6748 ) }
    apic_18 { pt3dadd( 410.586, 421.566, 43.038, 0.7156 ) }
    apic_18 { pt3dadd( 409.989, 420.594, 43.0578, 0.722 ) }
    apic_18 { pt3dadd( 409.34, 419.672, 43.08, 0.613 ) }
    apic_18 { pt3dadd( 408.902, 418.629, 43.1315, 0.5422 ) }
    apic_18 { pt3dadd( 408.815, 417.505, 43.197, 0.4574 ) }
    apic_18 { pt3dadd( 409.093, 416.406, 43.297, 0.534 ) }
    apic_18 { pt3dadd( 409.571, 415.371, 43.4246, 0.4554 ) }
    apic_18 { pt3dadd( 409.908, 414.329, 43.6556, 0.467 ) }
    apic_18 { pt3dadd( 410.428, 413.327, 43.8782, 0.4074 ) }
    apic_18 { pt3dadd( 410.957, 412.314, 44.0521, 0.464 ) }
    apic_18 { pt3dadd( 411.253, 411.211, 44.182, 0.4454 ) }
    apic_18 { pt3dadd( 411.04, 410.092, 44.2733, 0.5528 ) }
    apic_18 { pt3dadd( 410.95, 408.953, 44.3369, 0.5206 ) }
    apic_18 { pt3dadd( 410.59, 407.868, 44.385, 0.4384 ) }
    apic_18 { pt3dadd( 410.116, 406.827, 44.4444, 0.3944 ) }
    apic_18 { pt3dadd( 409.416, 405.923, 44.5253, 0.4752 ) }
    apic_18 { pt3dadd( 408.985, 404.866, 44.6351, 0.5226 ) }
    apic_18 { pt3dadd( 408.471, 403.846, 44.7854, 0.6498 ) }
    apic_18 { pt3dadd( 407.932, 402.862, 45.0344, 0.9236 ) }
    apic_18 { pt3dadd( 407.589, 401.807, 45.3631, 0.7886 ) }
    apic_18 { pt3dadd( 406.827, 400.974, 45.7069, 0.6846 ) }
    apic_18 { pt3dadd( 405.866, 400.455, 46.1093, 0.4688 ) }
    apic_18 { pt3dadd( 405.312, 399.503, 46.471, 0.408 ) }
    apic_18 { pt3dadd( 405.494, 398.414, 46.8541, 0.4786 ) }
    apic_18 { pt3dadd( 405.436, 397.323, 47.1909, 0.405 ) }
    apic_18 { pt3dadd( 405.035, 396.316, 47.3463, 0.3468 ) }
    apic_18 { pt3dadd( 404.306, 395.478, 47.4012, 0.3158 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_18 { pt3dadd( 403.582, 394.623, 47.5124, 0.345 ) }
    apic_18 { pt3dadd( 403.015, 393.666, 47.6963, 0.4332 ) }
    apic_18 { pt3dadd( 402.568, 392.636, 47.9156, 0.434 ) }
    apic_18 { pt3dadd( 402.246, 391.592, 48.2213, 0.5364 ) }
    apic_18 { pt3dadd( 401.964, 390.525, 48.5044, 0.4668 ) }
    apic_18 { pt3dadd( 401.599, 389.452, 48.6536, 0.4524 ) }
    apic_18 { pt3dadd( 401.2, 388.381, 48.7175, 0.5566 ) }
    apic_18 { pt3dadd( 400.77, 387.322, 48.7295, 0.5698 ) }
    apic_18 { pt3dadd( 400.351, 386.258, 48.7071, 0.5552 ) }
    apic_18 { pt3dadd( 399.952, 385.186, 48.6646, 0.4876 ) }
    apic_18 { pt3dadd( 399.398, 384.196, 48.6254, 0.561 ) }
    apic_18 { pt3dadd( 398.743, 383.261, 48.5892, 0.646 ) }
    apic_18 { pt3dadd( 398.159, 382.297, 48.5106, 0.8242 ) }
    apic_18 { pt3dadd( 397.535, 381.363, 48.4098, 0.825 ) }
    apic_18 { pt3dadd( 396.962, 380.395, 48.3913, 0.8228 ) }
    apic_18 { pt3dadd( 396.536, 379.356, 48.487, 0.6102 ) }
    apic_18 { pt3dadd( 396.077, 378.321, 48.6343, 0.5408 ) }
    apic_18 { pt3dadd( 395.506, 377.351, 48.8228, 0.6656 ) }
    apic_18 { pt3dadd( 394.82, 376.457, 49.0325, 0.8126 ) }
    apic_18 { pt3dadd( 394.052, 375.619, 49.1655, 0.8076 ) }
    apic_18 { pt3dadd( 393.3, 374.787, 49.1562, 0.5432 ) }
    apic_18 { pt3dadd( 392.729, 373.827, 49.0756, 0.3772 ) }
    apic_18 { pt3dadd( 392.175, 372.832, 49.0025, 0.3256 ) }
    apic_18 { pt3dadd( 391.548, 371.874, 48.9493, 0.3588 ) }
    apic_18 { pt3dadd( 390.905, 370.928, 48.9272, 0.4818 ) }
    apic_18 { pt3dadd( 390.557, 369.876, 48.9538, 0.4112 ) }
    apic_18 { pt3dadd( 390.581, 368.755, 49.0708, 0.3584 ) }
    apic_18 { pt3dadd( 390.184, 367.782, 49.21, 0.3374 ) }
    apic_18 { pt3dadd( 389.344, 367.036, 49.2831, 0.3808 ) }
    apic_18 { pt3dadd( 388.699, 366.141, 49.3833, 0.523 ) }
    apic_18 { pt3dadd( 388.27, 365.107, 49.5673, 0.4842 ) }
    apic_18 { pt3dadd( 387.841, 364.054, 49.7599, 0.5094 ) }
    apic_18 { pt3dadd( 387.336, 363.029, 49.9324, 0.5424 ) }
    apic_18 { pt3dadd( 386.884, 361.979, 50.1035, 0.4386 ) }
    apic_18 { pt3dadd( 386.408, 360.956, 50.3236, 0.3636 ) }
    apic_18 { pt3dadd( 385.907, 359.948, 50.5803, 0.34 ) }
    apic_18 { pt3dadd( 385.37, 358.944, 50.8043, 0.4222 ) }
    apic_18 { pt3dadd( 384.74, 357.991, 50.9922, 0.42 ) }
    apic_18 { pt3dadd( 384.115, 357.033, 51.1636, 0.481 ) }
    apic_18 { pt3dadd( 383.532, 356.075, 51.371, 0.5072 ) }
    apic_18 { pt3dadd( 383.022, 355.063, 51.5175, 0.5176 ) }
    apic_18 { pt3dadd( 382.46, 354.079, 51.665, 0.4962 ) }
    apic_18 { pt3dadd( 381.857, 353.113, 51.8168, 0.4242 ) }
    apic_18 { pt3dadd( 381.381, 352.076, 51.9355, 0.448 ) }
    apic_18 { pt3dadd( 381.04, 350.985, 52.0167, 0.4144 ) }
    apic_18 { pt3dadd( 380.418, 350.038, 52.0677, 0.5004 ) }
    apic_18 { pt3dadd( 379.807, 349.071, 52.1041, 0.3982 ) }
    apic_18 { pt3dadd( 379.357, 348.022, 52.1279, 0.3348 ) }
    apic_18 { pt3dadd( 378.752, 347.055, 52.1483, 0.2918 ) }
    apic_18 { pt3dadd( 378.09, 346.123, 52.1752, 0.3076 ) }
    apic_18 { pt3dadd( 377.455, 345.171, 52.2141, 0.3302 ) }
    apic_18 { pt3dadd( 377.023, 344.115, 52.269, 0.4032 ) }
    apic_18 { pt3dadd( 376.569, 343.066, 52.341, 0.3898 ) }
    apic_18 { pt3dadd( 376.243, 341.971, 52.4342, 0.4004 ) }
    apic_18 { pt3dadd( 375.94, 340.879, 52.5904, 0.4768 ) }
    apic_18 { pt3dadd( 375.702, 339.799, 52.8335, 0.5714 ) }
    apic_18 { pt3dadd( 375.164, 338.828, 53.1143, 0.5176 ) }
    apic_18 { pt3dadd( 374.606, 337.851, 53.27, 0.3848 ) }
    apic_18 { pt3dadd( 374.104, 336.826, 53.3786, 0.3004 ) }
    apic_18 { pt3dadd( 373.537, 335.91, 53.5881, 0.2752 ) }
    apic_18 { pt3dadd( 373.466, 335.485, 53.3814, 0.2758 ) }
    apic_18 { pt3dadd( 373.485, 335.133, 53.3229, 0.2766 ) }
    apic_18 { pt3dadd( 373.287, 334.304, 53.5273, 0.2784 ) }
    apic_18 { pt3dadd( 373.294, 333.198, 53.8269, 0.2818 ) }
    apic_18 { pt3dadd( 373.287, 332.094, 54.1394, 0.288 ) }
    apic_18 { pt3dadd( 372.717, 331.246, 54.4264, 0.2994 ) }
    apic_18 { pt3dadd( 372.111, 330.616, 54.8162, 0.3214 ) }
    apic_18 { pt3dadd( 371.58, 329.843, 54.9198, 0.3572 ) }
    apic_18 { pt3dadd( 371.185, 328.89, 54.9682, 0.4492 ) }
    apic_18 { pt3dadd( 370.643, 327.939, 55.0631, 0.4946 ) }
    apic_18 { pt3dadd( 370.03, 327.123, 55.081, 0.499 ) }
    apic_18 { pt3dadd( 369.407, 326.339, 55.0248, 0.4382 ) }
    apic_18 { pt3dadd( 369.409, 325.397, 55.0077, 0.4306 ) }
    apic_18 { pt3dadd( 369.385, 324.49, 54.9578, 0.593 ) }
    apic_18 { pt3dadd( 368.97, 323.537, 55.0435, 0.4944 ) }
    apic_18 { pt3dadd( 368.826, 322.578, 55.1544, 0.4232 ) }
    apic_18 { pt3dadd( 368.385, 321.757, 55.2863, 0.434 ) }
    apic_18 { pt3dadd( 367.853, 320.899, 55.3095, 0.4478 ) }
    apic_18 { pt3dadd( 367.605, 319.833, 55.435, 0.5032 ) }
    apic_18 { pt3dadd( 367.081, 318.955, 55.538, 0.6896 ) }
    apic_18 { pt3dadd( 366.391, 318.456, 55.7488, 0.858 ) }
    apic_18 { pt3dadd( 366.276, 317.682, 56.1557, 0.8876 ) }
    apic_18 { pt3dadd( 365.851, 316.878, 56.3508, 0.7122 ) }
    apic_18 { pt3dadd( 365.509, 315.912, 56.5074, 0.588 ) }
    apic_18 { pt3dadd( 365.258, 315.725, 56.7658, 0.5272 ) }
    apic_18 { pt3dadd( 364.65, 314.926, 56.8753, 0.5072 ) }
    apic_18 { pt3dadd( 364.144, 314.075, 56.9229, 0.476 ) }
    apic_18 { pt3dadd( 363.672, 313.086, 56.957, 0.392 ) }
    apic_18 { pt3dadd( 363.524, 311.963, 57.0332, 0.3626 ) }
    apic_18 { pt3dadd( 363.329, 310.912, 56.9982, 0.3802 ) }
    apic_18 { pt3dadd( 362.639, 310.169, 56.9775, 0.5214 ) }
    apic_18 { pt3dadd( 362.069, 309.223, 56.9176, 0.485 ) }
    apic_18 { pt3dadd( 361.397, 308.325, 56.8478, 0.492 ) }
    apic_18 { pt3dadd( 360.747, 307.539, 56.7053, 0.6024 ) }
    apic_18 { pt3dadd( 360.342, 306.649, 56.7434, 0.79 ) }
    apic_18 { pt3dadd( 359.563, 306.14, 56.6882, 0.9926 ) }
    apic_18 { pt3dadd( 359.056, 305.334, 56.8282, 0.9296 ) }
    apic_18 { pt3dadd( 358.56, 304.623, 56.9299, 0.8822 ) }
    apic_18 { pt3dadd( 357.775, 303.901, 57.1533, 0.6866 ) }
    apic_18 { pt3dadd( 357.225, 303.1, 57.531, 0.618 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_18 { pt3dadd( 356.713, 302.525, 57.6761, 0.4372 ) }
    apic_18 { pt3dadd( 355.965, 301.685, 57.7534, 0.36 ) }
    apic_18 { pt3dadd( 355.369, 300.734, 57.8684, 0.338 ) }
    apic_18 { pt3dadd( 354.764, 299.934, 58.1235, 0.3946 ) }
    apic_18 { pt3dadd( 353.989, 299.15, 58.326, 0.4836 ) }
    apic_18 { pt3dadd( 353.459, 298.244, 58.4811, 0.7292 ) }
    apic_18 { pt3dadd( 352.778, 297.502, 58.8557, 0.7932 ) }
    apic_18 { pt3dadd( 352.22, 296.685, 59.3788, 0.75 ) }
    apic_18 { pt3dadd( 351.767, 295.667, 59.7747, 0.7716 ) }
    apic_18 { pt3dadd( 351.095, 294.888, 59.9306, 0.7752 ) }
    apic_18 { pt3dadd( 350.884, 293.862, 60.1423, 0.957 ) }
    apic_18 { pt3dadd( 350.547, 293.001, 60.5192, 0.9026 ) }
    apic_18 { pt3dadd( 349.879, 292.143, 60.8731, 0.8718 ) }
    apic_18 { pt3dadd( 349.621, 291.039, 61.1397, 0.7032 ) }
    apic_18 { pt3dadd( 349.071, 290.21, 61.318, 0.4734 ) }
    apic_18 { pt3dadd( 348.461, 289.453, 61.5348, 0.3326 ) }
    apic_18 { pt3dadd( 348.119, 288.491, 61.6062, 0.2876 ) }
    apic_18 { pt3dadd( 348.015, 287.389, 61.7411, 0.3 ) }
    apic_18 { pt3dadd( 347.89, 286.297, 61.9497, 0.3164 ) }
    apic_18 { pt3dadd( 347.776, 285.456, 62.1527, 0.378 ) }
    apic_18 { pt3dadd( 347.961, 284.485, 62.2714, 0.3422 ) }
    apic_18 { pt3dadd( 348.084, 283.492, 62.5131, 0.3156 ) }
    apic_18 { pt3dadd( 347.432, 282.613, 62.6004, 0.303 ) }
    apic_18 { pt3dadd( 346.704, 281.941, 62.634, 0.3292 ) }
    apic_18 { pt3dadd( 346.101, 281.016, 62.62, 0.3654 ) }
    apic_18 { pt3dadd( 345.808, 280.215, 62.606, 0.4938 ) }
    apic_18 { pt3dadd( 345.394, 279.428, 62.6273, 0.4342 ) }
    apic_18 { pt3dadd( 345.246, 278.801, 62.902, 0.3956 ) }
    apic_18 { pt3dadd( 344.695, 277.935, 63.0375, 0.4324 ) }
    apic_18 { pt3dadd( 344.354, 276.885, 63.1896, 0.4326 ) }
    apic_18 { pt3dadd( 343.581, 276.201, 63.2397, 0.5354 ) }
    apic_18 { pt3dadd( 343.005, 275.241, 63.3195, 0.4576 ) }
    apic_18 { pt3dadd( 342.498, 274.253, 63.4388, 0.4702 ) }
    apic_18 { pt3dadd( 342.17, 273.351, 63.4774, 0.4208 ) }
    apic_18 { pt3dadd( 341.853, 272.397, 63.6908, 0.4528 ) }
    apic_18 { pt3dadd( 341.336, 271.659, 64.0545, 0.5978 ) }
    apic_18 { pt3dadd( 340.284, 271.321, 64.3552, 0.679 ) }
    apic_18 { pt3dadd( 339.628, 270.413, 64.5924, 0.5988 ) }
    apic_18 { pt3dadd( 339.569, 269.362, 64.7937, 0.6536 ) }
    apic_18 { pt3dadd( 338.967, 268.634, 64.9001, 0.6832 ) }
    apic_18 { pt3dadd( 338.63, 267.757, 65.0835, 0.6302 ) }
    apic_18 { pt3dadd( 338.395, 266.76, 65.4273, 0.5976 ) }
    apic_18 { pt3dadd( 338.176, 265.798, 65.6678, 0.4462 ) }
    apic_18 { pt3dadd( 337.808, 264.853, 65.8325, 0.3784 ) }
    apic_18 { pt3dadd( 337.579, 263.971, 66.1058, 0.3626 ) }
    apic_18 { pt3dadd( 337.176, 262.968, 66.4513, 0.4884 ) }
    apic_18 { pt3dadd( 336.454, 262.177, 66.8007, 0.4244 ) }
    apic_18 { pt3dadd( 335.642, 261.554, 67.1829, 0.378 ) }
    apic_18 { pt3dadd( 335.137, 260.62, 67.5948, 0.3986 ) }
    apic_18 { pt3dadd( 334.75, 259.553, 67.9664, 0.3754 ) }
    apic_18 { pt3dadd( 334.059, 258.694, 68.3245, 0.4024 ) }
    apic_18 { pt3dadd( 333.414, 257.861, 68.7344, 0.3406 ) }
    apic_18 { pt3dadd( 332.815, 256.977, 69.0718, 0.3126 ) }
    apic_18 { pt3dadd( 332.592, 255.864, 69.361, 0.2988 ) }
    apic_18 { pt3dadd( 332.218, 254.998, 69.6139, 0.3142 ) }
    apic_18 { pt3dadd( 332.047, 254.667, 69.89, 0.3734 ) }
    apic_18 { pt3dadd( 331.535, 253.673, 70.2481, 0.3338 ) }
    apic_18 { pt3dadd( 331.023, 252.68, 70.6773, 0.3 ) }
    apic_18 { pt3dadd( 330.511, 251.687, 71.1746, 0.2746 ) }
    apic_18 { pt3dadd( 329.999, 250.694, 71.717, 0.2746 ) }
    apic_18 { pt3dadd( 329.487, 249.701, 72.2834, 0.2746 ) }
    apic_18 { pt3dadd( 328.975, 248.708, 72.8518, 0.2746 ) }
    apic_18 { pt3dadd( 328.463, 247.715, 73.4059, 0.2746 ) }
    apic_18 { pt3dadd( 327.952, 246.722, 73.9407, 0.2746 ) }
    apic_18 { pt3dadd( 327.439, 245.729, 74.45, 0.2746 ) }
    apic_18 { pt3dadd( 326.928, 244.735, 74.9291, 0.2746 ) }
    apic_18 { pt3dadd( 326.498, 243.718, 75.3606, 0.2746 ) }
    apic_18 { pt3dadd( 326.447, 242.581, 75.6762, 0.2746 ) }
    apic_18 { pt3dadd( 325.922, 241.58, 75.9066, 0.2746 ) }
    apic_18 { pt3dadd( 325.827, 240.439, 76.0833, 0.2746 ) }
    apic_18 { pt3dadd( 325.811, 239.296, 76.2345, 0.2746 ) }
    apic_18 { pt3dadd( 325.808, 238.152, 76.3832, 0.2746 ) }
    apic_18 { pt3dadd( 325.358, 237.157, 76.5918, 0.2746 ) }
    apic_18 { pt3dadd( 324.878, 236.292, 76.904, 0.2746 ) }
    apic_18 { pt3dadd( 324.656, 235.305, 77.3497, 0.2746 ) }
    apic_18 { pt3dadd( 323.905, 234.482, 77.7714, 0.2748 ) }
    apic_18 { pt3dadd( 323.014, 233.795, 78.1497, 0.2748 ) }
    apic_18 { pt3dadd( 322.112, 233.389, 78.6134, 0.2752 ) }
    apic_18 { pt3dadd( 321.693, 232.384, 79.0558, 0.2758 ) }
    apic_18 { pt3dadd( 321.628, 231.266, 79.4979, 0.2766 ) }
    apic_18 { pt3dadd( 321.377, 230.184, 79.891, 0.2782 ) }
    apic_18 { pt3dadd( 320.966, 229.507, 80.4538, 0.2814 ) }
    apic_18 { pt3dadd( 320.734, 228.405, 80.9082, 0.287 ) }
    apic_18 { pt3dadd( 319.93, 227.619, 81.2672, 0.2988 ) }
    apic_18 { pt3dadd( 319.385, 226.633, 81.5654, 0.3142 ) }
    apic_18 { pt3dadd( 319.29, 225.615, 81.8885, 0.3734 ) }
    apic_18 { pt3dadd( 319.29, 224.739, 82.2914, 0.3338 ) }
    apic_18 { pt3dadd( 319.29, 223.607, 82.6302, 0.3 ) }
    apic_18 { pt3dadd( 319.29, 222.497, 82.9928, 0.2746 ) }
    apic_18 { pt3dadd( 319.29, 221.41, 83.3801, 0.2746 ) }
    apic_18 { pt3dadd( 319.159, 220.276, 83.669, 0.2746 ) }
    apic_18 { pt3dadd( 318.96, 219.149, 83.8608, 0.2748 ) }
    apic_18 { pt3dadd( 318.994, 218.014, 83.9964, 0.275 ) }
    apic_18 { pt3dadd( 319.191, 216.892, 84.0946, 0.2752 ) }
    apic_18 { pt3dadd( 319.727, 215.94, 84.138, 0.2758 ) }
    apic_18 { pt3dadd( 320.32, 215.166, 84.1436, 0.2768 ) }
    apic_18 { pt3dadd( 320.32, 214.022, 84.124, 0.2786 ) }
    apic_18 { pt3dadd( 320.389, 212.882, 84.0846, 0.2826 ) }
    apic_18 { pt3dadd( 320.799, 211.847, 83.9902, 0.288 ) }
    apic_18 { pt3dadd( 321.45, 210.908, 83.8975, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_18 { pt3dadd( 321.693, 209.814, 83.8113, 0.305 ) }
    apic_18 { pt3dadd( 322.15, 208.894, 83.44, 0.4576 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 2/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 474.291, 533.104, 30.7392, 0.7636 ) }
    apic_17 { pt3dadd( 474.724, 532.756, 30.5262, 0.2288 ) }
    apic_17 { pt3dadd( 475.723, 532.236, 30.4035, 0.4014 ) }
    apic_17 { pt3dadd( 476.513, 531.841, 30.4072, 0.3804 ) }
    apic_17 { pt3dadd( 477.261, 531.23, 30.3806, 0.4116 ) }
    apic_17 { pt3dadd( 477.849, 530.703, 30.4702, 0.3588 ) }
    apic_17 { pt3dadd( 478.433, 530.167, 30.4049, 0.341 ) }
    apic_17 { pt3dadd( 479.365, 530.436, 30.3433, 0.376 ) }
    apic_17 { pt3dadd( 479.834, 530.243, 30.6284, 0.3384 ) }
    apic_17 { pt3dadd( 480.584, 530.088, 30.7829, 0.3086 ) }
    apic_17 { pt3dadd( 481.544, 529.611, 30.8781, 0.2904 ) }
    apic_17 { pt3dadd( 482.609, 529.558, 30.945, 0.3048 ) }
    apic_17 { pt3dadd( 483.612, 529.573, 31.1615, 0.3254 ) }
    apic_17 { pt3dadd( 484.418, 529.791, 31.6397, 0.3942 ) }
    apic_17 { pt3dadd( 485.222, 529.985, 32.3274, 0.3734 ) }
    apic_17 { pt3dadd( 485.943, 529.674, 32.8874, 0.369 ) }
    apic_17 { pt3dadd( 486.983, 529.817, 33.5426, 0.4228 ) }
    apic_17 { pt3dadd( 487.21, 529.702, 34.3025, 0.451 ) }
    apic_17 { pt3dadd( 487.102, 528.635, 34.9734, 0.394 ) }
    apic_17 { pt3dadd( 487.234, 527.763, 35.3665, 0.359 ) }
    apic_17 { pt3dadd( 487.28, 526.948, 35.9181, 0.4104 ) }
    apic_17 { pt3dadd( 487.993, 526.115, 36.4109, 0.3972 ) }
    apic_17 { pt3dadd( 487.916, 525.057, 36.8326, 0.4442 ) }
    apic_17 { pt3dadd( 488.538, 524.294, 37.1095, 0.4126 ) }
    apic_17 { pt3dadd( 489.32, 523.703, 37.5234, 0.4718 ) }
    apic_17 { pt3dadd( 489.736, 522.972, 37.9308, 0.4658 ) }
    apic_17 { pt3dadd( 489.465, 521.995, 38.3051, 0.5612 ) }
    apic_17 { pt3dadd( 489.518, 520.982, 38.5034, 0.6778 ) }
    apic_17 { pt3dadd( 489.624, 519.914, 38.5904, 0.731 ) }
    apic_17 { pt3dadd( 489.789, 519.37, 38.8646, 0.7026 ) }
    apic_17 { pt3dadd( 490.466, 518.684, 39.1471, 0.582 ) }
    apic_17 { pt3dadd( 491.212, 518.015, 39.4223, 0.459 ) }
    apic_17 { pt3dadd( 491.741, 517.17, 39.5794, 0.4294 ) }
    apic_17 { pt3dadd( 492.426, 516.414, 39.8608, 0.555 ) }
    apic_17 { pt3dadd( 493.124, 515.576, 40.0341, 0.5978 ) }
    apic_17 { pt3dadd( 493.761, 514.846, 40.2388, 0.4566 ) }
    apic_17 { pt3dadd( 494.445, 514.075, 40.5, 0.3498 ) }
    apic_17 { pt3dadd( 495.324, 513.618, 40.7711, 0.3144 ) }
    apic_17 { pt3dadd( 495.947, 512.886, 41.0701, 0.374 ) }
    apic_17 { pt3dadd( 496.138, 511.875, 41.3927, 0.335 ) }
    apic_17 { pt3dadd( 496.501, 510.917, 41.6735, 0.302 ) }
    apic_17 { pt3dadd( 497.306, 510.295, 41.813, 0.2782 ) }
    apic_17 { pt3dadd( 498.18, 509.957, 42.0627, 0.2814 ) }
    apic_17 { pt3dadd( 498.116, 508.889, 42.2722, 0.287 ) }
    apic_17 { pt3dadd( 498.408, 507.791, 42.4572, 0.2986 ) }
    apic_17 { pt3dadd( 498.562, 506.664, 42.6188, 0.314 ) }
    apic_17 { pt3dadd( 498.659, 505.877, 42.8798, 0.373 ) }
    apic_17 { pt3dadd( 498.615, 504.909, 43.1855, 0.333 ) }
    apic_17 { pt3dadd( 499.003, 503.879, 43.4902, 0.2982 ) }
    apic_17 { pt3dadd( 498.817, 502.817, 43.8035, 0.2712 ) }
    apic_17 { pt3dadd( 499.356, 501.994, 44.212, 0.2684 ) }
    apic_17 { pt3dadd( 499.041, 501.556, 44.6597, 0.2626 ) }
    apic_17 { pt3dadd( 499.032, 500.661, 44.8451, 0.2542 ) }
    apic_17 { pt3dadd( 498.898, 499.762, 45.103, 0.2288 ) }
    apic_17 { pt3dadd( 499.356, 499.47, 46.2, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 57/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 484.711, 541.866, 32.7746, 0.5874 ) }
    apic_15 { pt3dadd( 485.55, 541.609, 32.4282, 0.607 ) }
    apic_15 { pt3dadd( 486.662, 541.381, 32.2692, 0.4908 ) }
    apic_15 { pt3dadd( 487.788, 541.35, 32.179, 0.5582 ) }
    apic_15 { pt3dadd( 488.914, 541.407, 32.149, 0.453 ) }
    apic_15 { pt3dadd( 489.953, 541.764, 32.0116, 0.4628 ) }
    apic_15 { pt3dadd( 491.017, 542.113, 31.7892, 0.4014 ) }
    apic_15 { pt3dadd( 492.109, 542.24, 31.4846, 0.445 ) }
    apic_15 { pt3dadd( 493.245, 542.233, 31.192, 0.4452 ) }
    apic_15 { pt3dadd( 494.382, 542.108, 30.94, 0.3824 ) }
    apic_15 { pt3dadd( 495.394, 541.599, 30.7367, 0.3436 ) }
    apic_15 { pt3dadd( 496.498, 541.319, 30.588, 0.351 ) }
    apic_15 { pt3dadd( 497.6, 541.017, 30.4601, 0.4374 ) }
    apic_15 { pt3dadd( 498.485, 540.392, 30.2417, 0.473 ) }
    apic_15 { pt3dadd( 498.838, 539.322, 30.044, 0.4596 ) }
    apic_15 { pt3dadd( 499.73, 538.63, 29.8928, 0.362 ) }
    apic_15 { pt3dadd( 500.865, 538.586, 29.8245, 0.3048 ) }
    apic_15 { pt3dadd( 502.0, 538.527, 29.7276, 0.2834 ) }
    apic_15 { pt3dadd( 503.053, 538.106, 29.6394, 0.2908 ) }
    apic_15 { pt3dadd( 503.636, 537.121, 29.5672, 0.3056 ) }
    apic_15 { pt3dadd( 504.152, 536.109, 29.4851, 0.3268 ) }
    apic_15 { pt3dadd( 505.122, 535.506, 29.3857, 0.3982 ) }
    apic_15 { pt3dadd( 506.189, 535.109, 29.248, 0.374 ) }
    apic_15 { pt3dadd( 507.083, 534.476, 29.0192, 0.4002 ) }
    apic_15 { pt3dadd( 507.571, 533.445, 28.7904, 0.3366 ) }
    apic_15 { pt3dadd( 508.09, 532.426, 28.5984, 0.3048 ) }
    apic_15 { pt3dadd( 508.689, 531.453, 28.4332, 0.2834 ) }
    apic_15 { pt3dadd( 509.18, 530.433, 28.2624, 0.291 ) }
    apic_15 { pt3dadd( 509.917, 529.606, 28.0437, 0.3062 ) }
    apic_15 { pt3dadd( 510.69, 528.773, 27.927, 0.3278 ) }
    apic_15 { pt3dadd( 511.539, 528.038, 27.8812, 0.3986 ) }
    apic_15 { pt3dadd( 512.445, 527.371, 27.7537, 0.3818 ) }
    apic_15 { pt3dadd( 513.251, 526.59, 27.5815, 0.3836 ) }
    apic_15 { pt3dadd( 513.75, 525.578, 27.43, 0.4544 ) }
    apic_15 { pt3dadd( 513.91, 524.451, 27.2896, 0.4878 ) }
    apic_15 { pt3dadd( 514.371, 523.421, 27.135, 0.5684 ) }
    apic_15 { pt3dadd( 515.174, 522.627, 26.9436, 0.8542 ) }
    apic_15 { pt3dadd( 516.09, 522.016, 26.692, 0.9502 ) }
    apic_15 { pt3dadd( 517.113, 521.507, 26.477, 0.7184 ) }
    apic_15 { pt3dadd( 517.99, 520.828, 26.2787, 0.4468 ) }
    apic_15 { pt3dadd( 518.446, 519.792, 26.1, 0.3208 ) }
    apic_15 { pt3dadd( 519.034, 519.019, 26.0054, 0.3134 ) }
    apic_15 { pt3dadd( 519.644, 518.516, 25.8695, 0.3454 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_15 { pt3dadd( 519.527, 517.475, 25.5857, 0.4118 ) }
    apic_15 { pt3dadd( 520.226, 516.606, 25.2179, 0.5022 ) }
    apic_15 { pt3dadd( 520.981, 515.794, 24.8301, 0.8264 ) }
    apic_15 { pt3dadd( 521.389, 514.828, 24.316, 0.6672 ) }
    apic_15 { pt3dadd( 522.075, 513.95, 23.8723, 0.6318 ) }
    apic_15 { pt3dadd( 522.294, 513.315, 23.417, 0.4478 ) }
    apic_15 { pt3dadd( 522.352, 512.804, 23.0176, 0.4532 ) }
    apic_15 { pt3dadd( 523.012, 511.871, 22.6659, 0.3824 ) }
    apic_15 { pt3dadd( 523.573, 510.909, 22.2826, 0.4156 ) }
    apic_15 { pt3dadd( 524.305, 510.05, 21.9055, 0.3648 ) }
    apic_15 { pt3dadd( 525.189, 509.333, 21.5392, 0.3578 ) }
    apic_15 { pt3dadd( 526.268, 509.071, 21.1433, 0.3772 ) }
    apic_15 { pt3dadd( 527.376, 508.93, 20.8728, 0.4874 ) }
    apic_15 { pt3dadd( 528.241, 508.281, 20.5145, 0.5622 ) }
    apic_15 { pt3dadd( 528.161, 507.254, 20.0393, 0.6398 ) }
    apic_15 { pt3dadd( 528.383, 506.25, 19.5443, 0.623 ) }
    apic_15 { pt3dadd( 529.038, 505.341, 19.115, 0.4562 ) }
    apic_15 { pt3dadd( 529.38, 504.27, 18.8215, 0.3482 ) }
    apic_15 { pt3dadd( 529.611, 503.17, 18.6205, 0.3164 ) }
    apic_15 { pt3dadd( 530.026, 502.111, 18.4292, 0.3542 ) }
    apic_15 { pt3dadd( 530.535, 501.096, 18.2474, 0.4126 ) }
    apic_15 { pt3dadd( 531.104, 500.107, 18.0741, 0.5768 ) }
    apic_15 { pt3dadd( 531.528, 499.089, 17.8254, 0.6092 ) }
    apic_15 { pt3dadd( 530.846, 498.138, 17.4298, 0.6552 ) }
    apic_15 { pt3dadd( 530.299, 497.451, 17.0433, 0.6212 ) }
    apic_15 { pt3dadd( 529.475, 496.954, 16.7927, 0.6008 ) }
    apic_15 { pt3dadd( 528.757, 496.565, 16.7584, 0.5862 ) }
    apic_15 { pt3dadd( 528.942, 495.575, 16.5848, 0.6734 ) }
    apic_15 { pt3dadd( 529.129, 494.579, 16.503, 0.51 ) }
    apic_15 { pt3dadd( 529.675, 493.992, 16.3396, 0.4126 ) }
    apic_15 { pt3dadd( 530.162, 493.09, 16.0331, 0.3782 ) }
    apic_15 { pt3dadd( 529.909, 492.705, 15.5109, 0.5186 ) }
    apic_15 { pt3dadd( 529.23, 492.709, 14.9139, 0.4752 ) }
    apic_15 { pt3dadd( 528.758, 491.998, 14.5508, 0.4972 ) }
    apic_15 { pt3dadd( 528.56, 491.007, 14.1601, 0.4972 ) }
    apic_15 { pt3dadd( 528.082, 490.433, 13.8912, 0.466 ) }
    apic_15 { pt3dadd( 527.723, 489.601, 13.8183, 0.5592 ) }
    apic_15 { pt3dadd( 527.155, 488.946, 14.28, 0.4576 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 38/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 484.711, 541.866, 32.7746, 0.5874 ) }
    apic_14 { pt3dadd( 484.384, 542.424, 33.8842, 0.2288 ) }
    apic_14 { pt3dadd( 485.125, 543.249, 34.2992, 0.327 ) }
    apic_14 { pt3dadd( 485.794, 543.37, 34.5999, 0.3612 ) }
    apic_14 { pt3dadd( 485.976, 543.065, 35.18, 0.4864 ) }
    apic_14 { pt3dadd( 486.724, 542.599, 35.8333, 0.4204 ) }
    apic_14 { pt3dadd( 487.628, 542.749, 36.2202, 0.3704 ) }
    apic_14 { pt3dadd( 488.488, 542.714, 36.407, 0.3834 ) }
    apic_14 { pt3dadd( 488.871, 543.346, 36.4515, 0.3524 ) }
    apic_14 { pt3dadd( 489.449, 543.972, 36.7408, 0.3354 ) }
    apic_14 { pt3dadd( 489.518, 543.627, 37.3173, 0.3352 ) }
    apic_14 { pt3dadd( 489.047, 543.824, 38.1259, 0.4118 ) }
    apic_14 { pt3dadd( 488.059, 544.263, 38.7979, 0.4072 ) }
    apic_14 { pt3dadd( 487.756, 544.751, 39.2064, 0.4264 ) }
    apic_14 { pt3dadd( 486.74, 544.881, 39.5422, 0.5546 ) }
    apic_14 { pt3dadd( 486.481, 544.915, 40.112, 0.5732 ) }
    apic_14 { pt3dadd( 486.543, 545.503, 40.9307, 0.527 ) }
    apic_14 { pt3dadd( 485.948, 546.044, 41.8205, 0.6036 ) }
    apic_14 { pt3dadd( 485.498, 546.949, 42.6364, 0.643 ) }
    apic_14 { pt3dadd( 485.382, 548.07, 43.37, 0.53 ) }
    apic_14 { pt3dadd( 485.285, 549.201, 43.965, 0.5358 ) }
    apic_14 { pt3dadd( 485.721, 550.185, 44.4494, 0.4168 ) }
    apic_14 { pt3dadd( 486.143, 550.937, 44.737, 0.3684 ) }
    apic_14 { pt3dadd( 485.895, 551.995, 45.0531, 0.3576 ) }
    apic_14 { pt3dadd( 485.885, 552.046, 45.7811, 0.4128 ) }
    apic_14 { pt3dadd( 485.67, 552.979, 46.4716, 0.6074 ) }
    apic_14 { pt3dadd( 485.421, 553.972, 47.0408, 0.5202 ) }
    apic_14 { pt3dadd( 484.847, 554.266, 47.8304, 0.4746 ) }
    apic_14 { pt3dadd( 484.01, 554.698, 48.3932, 0.5134 ) }
    apic_14 { pt3dadd( 483.34, 555.425, 49.0048, 0.6708 ) }
    apic_14 { pt3dadd( 483.051, 556.197, 49.331, 0.5484 ) }
    apic_14 { pt3dadd( 482.882, 556.683, 49.9705, 0.5016 ) }
    apic_14 { pt3dadd( 483.207, 557.337, 50.7679, 0.457 ) }
    apic_14 { pt3dadd( 482.534, 557.905, 51.5889, 0.3988 ) }
    apic_14 { pt3dadd( 481.693, 558.043, 52.5193, 0.3986 ) }
    apic_14 { pt3dadd( 481.116, 558.688, 53.4926, 0.3334 ) }
    apic_14 { pt3dadd( 481.798, 559.462, 54.4474, 0.299 ) }
    apic_14 { pt3dadd( 482.528, 560.251, 55.2698, 0.2728 ) }
    apic_14 { pt3dadd( 483.242, 560.922, 55.9829, 0.2712 ) }
    apic_14 { pt3dadd( 483.753, 560.703, 56.8002, 0.2684 ) }
    apic_14 { pt3dadd( 484.317, 561.596, 57.4501, 0.2626 ) }
    apic_14 { pt3dadd( 484.032, 562.517, 58.1708, 0.2542 ) }
    apic_14 { pt3dadd( 483.473, 562.52, 59.0839, 0.2288 ) }
    apic_14 { pt3dadd( 483.226, 563.42, 61.04, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 436.97, 584.686, 25.3243, 0.3732 ) }
    dend_15 { pt3dadd( 435.64, 585.163, 26.0079, 0.4382 ) }
    dend_15 { pt3dadd( 434.664, 585.609, 26.3156, 0.443 ) }
    dend_15 { pt3dadd( 433.643, 585.88, 26.7227, 0.5542 ) }
    dend_15 { pt3dadd( 432.537, 585.98, 27.0626, 0.4946 ) }
    dend_15 { pt3dadd( 431.424, 585.769, 27.2679, 0.5294 ) }
    dend_15 { pt3dadd( 430.289, 585.663, 27.3885, 0.5748 ) }
    dend_15 { pt3dadd( 429.182, 585.391, 27.4408, 0.5244 ) }
    dend_15 { pt3dadd( 428.052, 585.222, 27.4439, 0.3974 ) }
    dend_15 { pt3dadd( 426.944, 584.943, 27.421, 0.3236 ) }
    dend_15 { pt3dadd( 425.816, 584.76, 27.3993, 0.3178 ) }
    dend_15 { pt3dadd( 424.726, 584.422, 27.3817, 0.3564 ) }
    dend_15 { pt3dadd( 423.688, 583.941, 27.3577, 0.4178 ) }
    dend_15 { pt3dadd( 422.652, 583.458, 27.3235, 0.581 ) }
    dend_15 { pt3dadd( 421.578, 583.067, 27.2783, 0.6454 ) }
    dend_15 { pt3dadd( 420.443, 582.985, 27.2217, 0.5468 ) }
    dend_15 { pt3dadd( 419.3, 582.971, 27.139, 0.507 ) }
    dend_15 { pt3dadd( 418.193, 582.909, 26.9637, 0.654 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_15 { pt3dadd( 417.122, 582.541, 26.7867, 0.772 ) }
    dend_15 { pt3dadd( 416.267, 581.795, 26.6728, 0.823 ) }
    dend_15 { pt3dadd( 415.303, 581.198, 26.6402, 0.8178 ) }
    dend_15 { pt3dadd( 414.184, 581.288, 26.5558, 0.8362 ) }
    dend_15 { pt3dadd( 413.079, 581.584, 26.5133, 0.7326 ) }
    dend_15 { pt3dadd( 411.937, 581.605, 26.5212, 0.5228 ) }
    dend_15 { pt3dadd( 410.796, 581.57, 26.5518, 0.4494 ) }
    dend_15 { pt3dadd( 409.703, 581.349, 26.6365, 0.3828 ) }
    dend_15 { pt3dadd( 408.617, 581.586, 26.6077, 0.38 ) }
    dend_15 { pt3dadd( 407.485, 581.486, 26.6007, 0.474 ) }
    dend_15 { pt3dadd( 406.449, 581.344, 26.6408, 0.3966 ) }
    dend_15 { pt3dadd( 405.525, 581.907, 26.5599, 0.3316 ) }
    dend_15 { pt3dadd( 404.406, 582.087, 26.4798, 0.2858 ) }
    dend_15 { pt3dadd( 403.303, 582.229, 26.3772, 0.2956 ) }
    dend_15 { pt3dadd( 402.324, 582.724, 26.3803, 0.313 ) }
    dend_15 { pt3dadd( 401.305, 583.04, 26.2361, 0.3478 ) }
    dend_15 { pt3dadd( 400.221, 583.35, 26.0331, 0.4008 ) }
    dend_15 { pt3dadd( 399.088, 583.466, 25.8842, 0.5552 ) }
    dend_15 { pt3dadd( 397.993, 583.652, 25.657, 0.5684 ) }
    dend_15 { pt3dadd( 396.874, 583.882, 25.4624, 0.5472 ) }
    dend_15 { pt3dadd( 395.733, 583.833, 25.31, 0.4976 ) }
    dend_15 { pt3dadd( 394.642, 583.49, 25.2239, 0.4582 ) }
    dend_15 { pt3dadd( 393.704, 582.866, 25.2311, 0.3594 ) }
    dend_15 { pt3dadd( 392.91, 582.127, 25.1179, 0.3002 ) }
    dend_15 { pt3dadd( 391.882, 582.114, 24.8936, 0.275 ) }
    dend_15 { pt3dadd( 390.817, 582.193, 24.8403, 0.2754 ) }
    dend_15 { pt3dadd( 389.827, 581.669, 24.8808, 0.2762 ) }
    dend_15 { pt3dadd( 388.822, 581.125, 24.9157, 0.2774 ) }
    dend_15 { pt3dadd( 387.798, 580.628, 24.9221, 0.2798 ) }
    dend_15 { pt3dadd( 386.768, 580.214, 24.8931, 0.2842 ) }
    dend_15 { pt3dadd( 385.648, 580.06, 24.927, 0.2924 ) }
    dend_15 { pt3dadd( 384.506, 580.01, 24.9378, 0.307 ) }
    dend_15 { pt3dadd( 383.416, 579.743, 24.9425, 0.337 ) }
    dend_15 { pt3dadd( 382.357, 579.372, 24.9595, 0.3798 ) }
    dend_15 { pt3dadd( 381.219, 579.263, 24.9609, 0.5214 ) }
    dend_15 { pt3dadd( 380.118, 579.038, 24.9113, 0.4814 ) }
    dend_15 { pt3dadd( 379.086, 578.586, 24.788, 0.504 ) }
    dend_15 { pt3dadd( 378.068, 578.103, 24.6975, 0.5326 ) }
    dend_15 { pt3dadd( 377.005, 577.784, 24.6932, 0.4206 ) }
    dend_15 { pt3dadd( 375.869, 577.715, 24.6966, 0.329 ) }
    dend_15 { pt3dadd( 374.743, 577.832, 24.6466, 0.2814 ) }
    dend_15 { pt3dadd( 373.688, 578.193, 24.5133, 0.2872 ) }
    dend_15 { pt3dadd( 372.658, 578.663, 24.3464, 0.299 ) }
    dend_15 { pt3dadd( 371.6, 579.091, 24.2067, 0.3146 ) }
    dend_15 { pt3dadd( 370.554, 579.544, 24.0937, 0.3744 ) }
    dend_15 { pt3dadd( 369.541, 579.913, 23.8951, 0.3356 ) }
    dend_15 { pt3dadd( 368.464, 579.887, 23.6746, 0.3032 ) }
    dend_15 { pt3dadd( 367.342, 579.915, 23.5322, 0.2802 ) }
    dend_15 { pt3dadd( 366.26, 580.199, 23.3586, 0.2854 ) }
    dend_15 { pt3dadd( 365.189, 580.562, 23.1469, 0.2944 ) }
    dend_15 { pt3dadd( 364.087, 580.859, 22.9551, 0.3124 ) }
    dend_15 { pt3dadd( 362.971, 580.782, 22.7946, 0.3404 ) }
    dend_15 { pt3dadd( 361.883, 580.439, 22.6333, 0.4172 ) }
    dend_15 { pt3dadd( 360.866, 579.96, 22.4119, 0.4404 ) }
    dend_15 { pt3dadd( 359.926, 579.324, 22.1902, 0.3732 ) }
    dend_15 { pt3dadd( 359.299, 578.403, 21.9461, 0.327 ) }
    dend_15 { pt3dadd( 358.581, 577.526, 21.7096, 0.3192 ) }
    dend_15 { pt3dadd( 357.689, 576.816, 21.48, 0.3828 ) }
    dend_15 { pt3dadd( 356.738, 576.252, 21.184, 0.351 ) }
    dend_15 { pt3dadd( 355.673, 576.06, 20.8292, 0.3326 ) }
    dend_15 { pt3dadd( 354.59, 575.789, 20.6045, 0.33 ) }
    dend_15 { pt3dadd( 353.462, 575.674, 20.4154, 0.4022 ) }
    dend_15 { pt3dadd( 352.352, 575.672, 20.1811, 0.3896 ) }
    dend_15 { pt3dadd( 351.215, 575.733, 20.0042, 0.3924 ) }
    dend_15 { pt3dadd( 350.135, 576.074, 19.9361, 0.4984 ) }
    dend_15 { pt3dadd( 349.161, 576.64, 19.9646, 0.436 ) }
    dend_15 { pt3dadd( 348.199, 577.206, 19.9097, 0.4306 ) }
    dend_15 { pt3dadd( 347.181, 577.695, 19.8235, 0.3452 ) }
    dend_15 { pt3dadd( 346.1, 578.001, 19.7152, 0.3224 ) }
    dend_15 { pt3dadd( 345.037, 578.338, 19.7444, 0.3108 ) }
    dend_15 { pt3dadd( 343.966, 578.735, 19.8155, 0.3672 ) }
    dend_15 { pt3dadd( 342.829, 578.706, 19.9274, 0.322 ) }
    dend_15 { pt3dadd( 341.793, 578.349, 20.1671, 0.2796 ) }
    dend_15 { pt3dadd( 340.764, 577.975, 20.4866, 0.2288 ) }
    dend_15 { pt3dadd( 339.654, 577.949, 20.72, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 436.97, 584.686, 25.3243, 0.3732 ) }
    dend_14 { pt3dadd( 437.122, 585.249, 25.6367, 0.2288 ) }
    dend_14 { pt3dadd( 437.249, 586.032, 25.8561, 0.3856 ) }
    dend_14 { pt3dadd( 437.23, 586.724, 26.1565, 0.5258 ) }
    dend_14 { pt3dadd( 436.661, 587.68, 26.3917, 0.519 ) }
    dend_14 { pt3dadd( 436.207, 588.027, 26.3659, 0.4292 ) }
    dend_14 { pt3dadd( 436.082, 591.037, 26.044, 0.4082 ) }
    dend_14 { pt3dadd( 436.118, 592.073, 25.7729, 0.3514 ) }
    dend_14 { pt3dadd( 435.736, 592.822, 25.604, 0.332 ) }
    dend_14 { pt3dadd( 435.254, 593.426, 25.2546, 0.3362 ) }
    dend_14 { pt3dadd( 435.06, 594.302, 24.9031, 0.3778 ) }
    dend_14 { pt3dadd( 435.295, 595.214, 24.6735, 0.518 ) }
    dend_14 { pt3dadd( 435.326, 595.974, 24.3601, 0.4736 ) }
    dend_14 { pt3dadd( 435.178, 596.778, 23.9631, 0.4958 ) }
    dend_14 { pt3dadd( 434.834, 597.512, 23.5986, 0.4864 ) }
    dend_14 { pt3dadd( 434.861, 598.525, 23.3103, 0.4856 ) }
    dend_14 { pt3dadd( 435.059, 599.453, 22.939, 0.4048 ) }
    dend_14 { pt3dadd( 434.527, 600.409, 22.5801, 0.4096 ) }
    dend_14 { pt3dadd( 434.148, 601.284, 22.3024, 0.3538 ) }
    dend_14 { pt3dadd( 434.362, 602.352, 22.0174, 0.3378 ) }
    dend_14 { pt3dadd( 434.262, 603.327, 21.7443, 0.3402 ) }
    dend_14 { pt3dadd( 434.373, 604.461, 21.5478, 0.4166 ) }
    dend_14 { pt3dadd( 434.308, 605.544, 21.2913, 0.4398 ) }
    dend_14 { pt3dadd( 434.129, 606.668, 21.0783, 0.372 ) }
    dend_14 { pt3dadd( 434.259, 607.737, 21.0295, 0.3244 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_14 { pt3dadd( 434.185, 608.733, 20.8631, 0.3148 ) }
    dend_14 { pt3dadd( 433.869, 609.609, 20.7416, 0.3748 ) }
    dend_14 { pt3dadd( 433.82, 610.401, 20.6282, 0.3364 ) }
    dend_14 { pt3dadd( 433.919, 611.423, 20.5827, 0.3048 ) }
    dend_14 { pt3dadd( 433.726, 612.436, 20.5287, 0.2834 ) }
    dend_14 { pt3dadd( 433.828, 613.516, 20.5523, 0.2908 ) }
    dend_14 { pt3dadd( 434.206, 614.578, 20.6442, 0.3056 ) }
    dend_14 { pt3dadd( 434.647, 615.632, 20.7309, 0.3268 ) }
    dend_14 { pt3dadd( 434.965, 616.725, 20.848, 0.397 ) }
    dend_14 { pt3dadd( 435.156, 617.624, 20.9117, 0.3776 ) }
    dend_14 { pt3dadd( 435.305, 618.586, 21.1086, 0.3804 ) }
    dend_14 { pt3dadd( 435.406, 619.196, 21.1746, 0.4264 ) }
    dend_14 { pt3dadd( 435.406, 620.284, 21.1194, 0.543 ) }
    dend_14 { pt3dadd( 434.882, 621.207, 21.1737, 0.8362 ) }
    dend_14 { pt3dadd( 434.476, 622.241, 21.2493, 1.0042 ) }
    dend_14 { pt3dadd( 434.491, 623.366, 21.2876, 1.0826 ) }
    dend_14 { pt3dadd( 434.484, 624.496, 21.2987, 0.984 ) }
    dend_14 { pt3dadd( 434.186, 625.551, 21.2134, 0.6148 ) }
    dend_14 { pt3dadd( 433.972, 626.481, 21.1976, 0.3784 ) }
    dend_14 { pt3dadd( 433.835, 627.366, 21.0066, 0.2784 ) }
    dend_14 { pt3dadd( 433.579, 628.264, 20.6789, 0.2818 ) }
    dend_14 { pt3dadd( 433.031, 628.85, 20.3151, 0.288 ) }
    dend_14 { pt3dadd( 432.546, 629.455, 20.1943, 0.3006 ) }
    dend_14 { pt3dadd( 431.648, 629.658, 20.2842, 0.3178 ) }
    dend_14 { pt3dadd( 430.979, 629.484, 20.1982, 0.3802 ) }
    dend_14 { pt3dadd( 430.631, 629.729, 20.464, 0.3466 ) }
    dend_14 { pt3dadd( 430.159, 630.001, 20.4208, 0.3244 ) }
    dend_14 { pt3dadd( 429.74, 629.543, 20.3239, 0.3148 ) }
    dend_14 { pt3dadd( 429.436, 629.954, 20.5058, 0.3748 ) }
    dend_14 { pt3dadd( 428.817, 629.988, 20.8443, 0.3366 ) }
    dend_14 { pt3dadd( 427.968, 629.658, 21.1369, 0.3048 ) }
    dend_14 { pt3dadd( 427.344, 629.886, 21.0659, 0.2834 ) }
    dend_14 { pt3dadd( 426.352, 629.543, 20.9465, 0.291 ) }
    dend_14 { pt3dadd( 425.853, 629.67, 20.4349, 0.305 ) }
    dend_14 { pt3dadd( 424.916, 629.886, 19.881, 0.3304 ) }
    dend_14 { pt3dadd( 424.895, 630.6, 19.3047, 0.3814 ) }
    dend_14 { pt3dadd( 424.767, 631.145, 19.32, 0.4576 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_154, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_154 = new SectionList()
    soma_0 ModelViewParmSubset_154.append()
    axon_0 ModelViewParmSubset_154.append()
    axon_1 ModelViewParmSubset_154.append()

    // Group: {name=ModelViewParmSubset_155, groups=[], sections=[apic_0, dend_28, dend_19, dend_0, apic_20, apic_1, dend_30, dend_29, dend_23, dend_20, dend_2, dend_1, apic_24, apic_21, apic_5, apic_2, dend_27, dend_24, dend_22, dend_21, dend_6, dend_3, apic_23, apic_22, apic_11, apic_6, apic_4, apic_3, dend_26, dend_25, dend_10, dend_7, dend_5, dend_4, apic_19, apic_12, apic_8, apic_7, dend_16, dend_11, dend_9, dend_8, apic_16, apic_13, apic_10, apic_9, dend_18, dend_17, dend_13, dend_12, apic_18, apic_17, apic_15, apic_14, dend_15, dend_14]}
    ModelViewParmSubset_155 = new SectionList()
    apic_0 ModelViewParmSubset_155.append()
    dend_28 ModelViewParmSubset_155.append()
    dend_19 ModelViewParmSubset_155.append()
    dend_0 ModelViewParmSubset_155.append()
    apic_20 ModelViewParmSubset_155.append()
    apic_1 ModelViewParmSubset_155.append()
    dend_30 ModelViewParmSubset_155.append()
    dend_29 ModelViewParmSubset_155.append()
    dend_23 ModelViewParmSubset_155.append()
    dend_20 ModelViewParmSubset_155.append()
    dend_2 ModelViewParmSubset_155.append()
    dend_1 ModelViewParmSubset_155.append()
    apic_24 ModelViewParmSubset_155.append()
    apic_21 ModelViewParmSubset_155.append()
    apic_5 ModelViewParmSubset_155.append()
    apic_2 ModelViewParmSubset_155.append()
    dend_27 ModelViewParmSubset_155.append()
    dend_24 ModelViewParmSubset_155.append()
    dend_22 ModelViewParmSubset_155.append()
    dend_21 ModelViewParmSubset_155.append()
    dend_6 ModelViewParmSubset_155.append()
    dend_3 ModelViewParmSubset_155.append()
    apic_23 ModelViewParmSubset_155.append()
    apic_22 ModelViewParmSubset_155.append()
    apic_11 ModelViewParmSubset_155.append()
    apic_6 ModelViewParmSubset_155.append()
    apic_4 ModelViewParmSubset_155.append()
    apic_3 ModelViewParmSubset_155.append()
    dend_26 ModelViewParmSubset_155.append()
    dend_25 ModelViewParmSubset_155.append()
    dend_10 ModelViewParmSubset_155.append()
    dend_7 ModelViewParmSubset_155.append()
    dend_5 ModelViewParmSubset_155.append()
    dend_4 ModelViewParmSubset_155.append()
    apic_19 ModelViewParmSubset_155.append()
    apic_12 ModelViewParmSubset_155.append()
    apic_8 ModelViewParmSubset_155.append()
    apic_7 ModelViewParmSubset_155.append()
    dend_16 ModelViewParmSubset_155.append()
    dend_11 ModelViewParmSubset_155.append()
    dend_9 ModelViewParmSubset_155.append()
    dend_8 ModelViewParmSubset_155.append()
    apic_16 ModelViewParmSubset_155.append()
    apic_13 ModelViewParmSubset_155.append()
    apic_10 ModelViewParmSubset_155.append()
    apic_9 ModelViewParmSubset_155.append()
    dend_18 ModelViewParmSubset_155.append()
    dend_17 ModelViewParmSubset_155.append()
    dend_13 ModelViewParmSubset_155.append()
    dend_12 ModelViewParmSubset_155.append()
    apic_18 ModelViewParmSubset_155.append()
    apic_17 ModelViewParmSubset_155.append()
    apic_15 ModelViewParmSubset_155.append()
    apic_14 ModelViewParmSubset_155.append()
    dend_15 ModelViewParmSubset_155.append()
    dend_14 ModelViewParmSubset_155.append()

    // Group: {name=dend, groups=[], sections=[dend_28, dend_19, dend_0, dend_30, dend_29, dend_23, dend_20, dend_2, dend_1, dend_27, dend_24, dend_22, dend_21, dend_6, dend_3, dend_26, dend_25, dend_10, dend_7, dend_5, dend_4, dend_16, dend_11, dend_9, dend_8, dend_18, dend_17, dend_13, dend_12, dend_15, dend_14]}
    dend = new SectionList()
    dend_28 dend.append()
    dend_19 dend.append()
    dend_0 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_23 dend.append()
    dend_20 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_16 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_20, apic_1, apic_24, apic_21, apic_5, apic_2, apic_23, apic_22, apic_11, apic_6, apic_4, apic_3, apic_19, apic_12, apic_8, apic_7, apic_16, apic_13, apic_10, apic_9, apic_18, apic_17, apic_15, apic_14]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_20 apic.append()
    apic_1 apic.append()
    apic_24 apic.append()
    apic_21 apic.append()
    apic_5 apic.append()
    apic_2 apic.append()
    apic_23 apic.append()
    apic_22 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_11 apic.append()
    apic_6 apic.append()
    apic_4 apic.append()
    apic_3 apic.append()
    apic_19 apic.append()
    apic_12 apic.append()
    apic_8 apic.append()
    apic_7 apic.append()
    apic_16 apic.append()
    apic_13 apic.append()
    apic_10 apic.append()
    apic_9 apic.append()
    apic_18 apic.append()
    apic_17 apic.append()
    apic_15 apic.append()
    apic_14 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_5889, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_5889 = new SectionList()
    soma_0 OneSecGrp_SectionRef_5889.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, dend_0, axon_1, axon_1, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_21 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.38545  // units: uF/cm2
    forsec apic cm = 2.38545  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 145.56277  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0013761353  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 1.3075868E-10  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.5381915  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 4.162199E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.0019769801  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 1.6438072E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 5.1770866E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.11582955  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 5.2411207E-7  // units: S cm-2
        e_pas_nml2 = -89.19244  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 8.4515224E-4  // units: S cm-2
        e_pas_nml2 = -89.19244  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.6272228E-5  // units: S cm-2
        e_pas_nml2 = -89.19244  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 3.230802E-5  // units: S cm-2
        e_pas_nml2 = -89.19244  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 6.083535E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0019721945  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_477876583
    forsec soma {
        insert CaDynamics_477876583
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 7
    dend_20 nseg = 3
    dend_1 nseg = 3
    dend_27 nseg = 3
    dend_21 nseg = 3
    apic_23 nseg = 3
    apic_22 nseg = 3
    apic_4 nseg = 7
    apic_3 nseg = 5
    dend_26 nseg = 3
    dend_25 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 5
    apic_19 nseg = 3
    apic_7 nseg = 5
    dend_9 nseg = 9
    dend_8 nseg = 5
    apic_10 nseg = 3
    apic_9 nseg = 5
    dend_18 nseg = 5
    dend_17 nseg = 3
    dend_12 nseg = 3
    apic_18 nseg = 19
    apic_17 nseg = 3
    apic_15 nseg = 5
    apic_14 nseg = 3
    dend_15 nseg = 5
    dend_14 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_477876583


