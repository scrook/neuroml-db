// Cell: dNAC222_L4_BTC_2d64e36d0b_0_0
/*
{
  "id" : "dNAC222_L4_BTC_2d64e36d0b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.07039, 1.8584, 2.77", "2.11713, -13.4053, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 9.72061, -3.7416, 1.38", "-5.75043, 10.7398, -3.8609, 1.38", "-6.77096, 12.3357, -4.04769, 1.66", "-7.64231, 13.6983, -4.20718, 1.38", "-8.33914, 14.788, -4.33473, 1.11", "-8.88946, 15.6486, -4.43546, 1.11", "-10.1616, 17.6381, -4.66832, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.08211, 6.4384, 1.38", "6.01517, 9.22561, 7.32656, 1.38", "6.12283, 11.1686, 7.87744, 1.38", "6.44196, 14.5659, 8.95781, 1.38", "6.87816, 18.1894, 10.1648, 1.38", "7.20647, 20.9166, 11.0733, 1.38", "7.49944, 23.3502, 11.884, 0.83", "7.69076, 25.716, 12.7276, 1.38", "7.97096, 28.5234, 13.7727, 1.38", "8.61116, 31.8715, 14.9974, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.694473", "6.19422, -24.7888, -0.978947, 0.694473", "9.61231, -39.3941, -0.978947, 0.694473" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.11713, -13.4053, 1.8584, 2.22", "4.2339, -17.0834, 1.53587, 2.22", "5.33507, -18.9967, 1.36809, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.11713, -13.4053, 1.8584, 0.83", "0.240094, -14.82, 2.65713, 0.83", "-1.04777, -15.8007, 3.38572, 1.11", "-2.82459, -17.1537, 4.39093, 0.83", "-4.18935, -18.1929, 5.16302, 0.83", "-6.50331, -19.9549, 6.47211, 1.38", "-8.71503, -21.6391, 7.72335, 1.38", "-10.6542, -22.9607, 8.99035, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.1616, 17.6381, -4.66832, 0.55", "-14.2993, 18.4193, -3.16735, 0.55", "-16.272, 18.556, -2.13047, 0.55", "-17.6757, 18.5759, -1.28484, 0.55", "-19.9834, 18.5179, 0.167214, 1.11", "-24.0245, 18.2904, 2.7105, 0.83", "-28.0955, 17.9007, 5.32471, 0.83", "-32.3599, 17.1779, 8.2861, 0.55", "-34.6758, 16.6555, 9.91533, 1.38", "-36.3577, 16.181, 11.1121, 0.28", "-37.89, 15.6559, 12.2116, 0.83", "-39.7383, 15.0207, 13.5844, 0.28", "-41.0191, 14.5657, 14.5851, 0.55", "-42.642, 14.0786, 15.7757, 0.55", "-45.2198, 13.3923, 17.6525, 0.55", "-47.446, 12.814, 19.2572, 0.55", "-51.2374, 11.9307, 22.0364, 0.55", "-52.8403, 11.5946, 23.1707, 0.55", "-55.9147, 10.9915, 25.2579, 0.83", "-58.0784, 10.6149, 26.6675, 0.83", "-59.8065, 10.3369, 27.7066, 0.83", "-63.4898, 9.81541, 29.8473, 0.83", "-64.8593, 9.60361, 30.5982, 0.83", "-68.1589, 9.05287, 32.5195, 0.83", "-72.6636, 8.19464, 35.2142, 0.83", "-73.7954, 8.00499, 35.8844, 0.83", "-76.2663, 7.6428, 37.2922, 0.28", "-77.6533, 7.40187, 37.9896, 0.83", "-80.9866, 6.7932, 39.5657, 0.28", "-83.3334, 6.34719, 40.5115, 0.83", "-86.0823, 5.82204, 41.4662, 0.28", "-86.6782, 5.70612, 41.6636, 0.55", "-90.0943, 5.13633, 42.6386, 0.55", "-92.5572, 4.80019, 43.2597, 0.28", "-95.3729, 4.43101, 43.6902, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.1616, 17.6381, -4.66832, 1.11", "-11.1261, 20.6737, -6.73997, 1.11", "-11.672, 22.3362, -7.70471, 1.11", "-12.3303, 24.3413, -8.86826, 1.11", "-12.8838, 26.0268, -9.84638, 1.11", "-13.5355, 28.0116, -10.9982, 0.83", "-14.2029, 30.0442, -12.1777, 0.83", "-14.6822, 31.6542, -12.8658, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.61116, 31.8715, 14.9974, 0.83", "7.77458, 35.2044, 15.8036, 0.83", "7.14886, 37.6973, 16.4066, 0.83", "6.66421, 39.6281, 16.8737, 0.83", "5.90789, 42.6412, 17.6026, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.61116, 31.8715, 14.9974, 0.83", "12.2381, 35.0968, 14.8236, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.694473", "13.0304, -53.9995, -0.978947, 0.694473", "16.4485, -68.6049, -0.978947, 0.694473" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.33507, -18.9967, 1.36809, 0.83", "5.98113, -20.375, -1.07326, 0.83", "6.34487, -21.0092, -2.52895, 0.83", "6.78427, -21.6824, -4.36184, 0.83", "8.50101, -24.3018, -11.9121, 0.83", "9.45562, -25.7424, -16.0975, 0.83", "10.8863, -27.9014, -22.3701, 0.55", "11.4447, -28.8599, -25.4495, 0.83", "12.0154, -29.8696, -29.0292, 0.83", "12.5436, -30.7161, -32.4261, 1.11", "12.6881, -30.8458, -33.0075, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.33507, -18.9967, 1.36809, 1.66", "6.4479, -21.695, 1.47833, 1.66", "8.05112, -24.9468, 1.61273, 1.11", "9.26029, -27.1018, 1.71694, 1.11", "11.4851, -30.4618, 2.26044, 1.11", "13.3845, -33.3302, 2.72444, 1.11", "14.713, -35.3367, 3.04899, 1.38", "16.2927, -37.4798, 3.43879, 1.11", "17.2857, -38.6726, 3.73073, 1.11", "21.505, -42.8077, 5.20196, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-10.6542, -22.9607, 8.99035, 0.28", "-11.3918, -24.4295, 12.421, 0.28", "-11.7997, -25.0272, 13.9399, 1.11", "-13.244, -26.9577, 19.2597, 0.55", "-13.6553, -27.5564, 20.8749, 0.83", "-14.566, -28.8817, 24.4503, 0.83", "-15.6156, -30.4091, 28.5712, 0.55", "-16.2565, -31.2576, 30.9943, 1.11", "-17.3812, -32.6924, 35.3731, 0.55", "-17.825, -33.2137, 36.8964, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-10.6542, -22.9607, 8.99035, 0.83", "-14.294, -23.3092, 10.0519, 0.83", "-17.022, -23.5558, 10.8076, 1.11", "-19.7207, -23.7327, 11.4803, 0.83", "-22.754, -23.8869, 12.1472, 0.83", "-26.4946, -24.0769, 12.9697, 0.83", "-30.0654, -24.2584, 13.7549, 0.83", "-33.9805, -24.4609, 14.5578, 1.11", "-38.1012, -24.6334, 15.2642, 1.11", "-41.7542, -24.7521, 15.8069, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-95.3729, 4.43101, 43.6902, 0.28", "-95.3474, 2.56311, 44.1197, 0.28", "-95.3383, 1.89994, 44.2723, 0.83", "-95.2927, -1.4476, 45.0421, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-95.3729, 4.43101, 43.6902, 0.28", "-99.0697, 5.00245, 44.6695, 0.28", "-100.354, 5.22347, 44.5924, 0.55", "-103.184, 5.65804, 43.9929, 0.28", "-105.716, 5.99944, 43.3014, 0.83", "-108.732, 6.40609, 42.4778, 0.28", "-111.624, 6.79618, 41.6878, 0.28", "-116.515, 7.41462, 39.5048, 0.28", "-117.507, 7.54238, 38.9403, 0.83", "-119.02, 7.76934, 37.8003, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-14.6822, 31.6542, -12.8658, 0.55", "-15.697, 31.8767, -13.5847, 0.55", "-17.4861, 32.2691, -14.852, 0.55", "-19.2133, 32.6478, -16.0756, 0.83", "-22.3295, 33.3312, -18.2831, 0.55", "-24.2828, 33.7596, -19.6667, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-14.6822, 31.6542, -12.8658, 0.55", "-13.1935, 35.6655, -14.1194, 0.55", "-12.5407, 37.6663, -14.5954, 0.55", "-12.029, 39.3961, -14.8341, 0.83", "-11.3696, 41.6822, -15.0274, 0.55", "-10.957, 43.1523, -15.138, 0.83", "-10.333, 45.3444, -15.2706, 0.55", "-9.88415, 47.0197, -15.2638, 0.83", "-9.16039, 49.423, -15.3228, 0.28", "-8.70169, 50.7636, -15.4021, 0.83", "-7.8603, 52.967, -15.5932, 0.55", "-7.17003, 54.6932, -15.7792, 0.83", "-6.05797, 57.3342, -16.1357, 0.55", "-4.73329, 60.283, -16.6358, 0.83", "-3.45894, 63.0094, -17.2153, 0.83", "-1.73279, 66.6384, -17.9818, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "5.90789, 42.6412, 17.6026, 0.83", "7.50436, 47.1491, 18.8622, 0.83", "9.0235, 52.1364, 20.1568, 0.83", "9.81927, 55.2468, 21.0382, 0.83", "10.7993, 59.5887, 22.3436, 0.83", "11.8393, 64.4866, 23.8205, 0.83", "12.8892, 69.9267, 25.4305, 0.83", "13.7451, 75.1287, 27.0097, 0.83", "14.4883, 80.3112, 28.6733, 0.83", "14.862, 83.4353, 29.6131, 0.55", "15.2173, 86.8396, 30.4776, 0.55", "15.5722, 89.6744, 31.0104, 0.83", "15.9808, 92.1878, 31.2896, 0.83", "16.4555, 94.4871, 31.4267, 0.55", "17.167, 97.3653, 31.3337, 0.83", "17.7758, 99.6936, 31.1891, 0.55", "18.2834, 101.694, 31.0446, 0.83", "19.0164, 104.806, 30.8184, 0.55", "19.6863, 107.939, 30.5283, 0.83", "20.2945, 110.773, 29.9787, 0.55", "20.5968, 112.312, 29.5898, 0.55", "21.0072, 114.701, 28.9455, 0.83", "21.517, 118.122, 27.966, 0.83", "21.912, 120.96, 27.1518, 0.55", "22.6813, 127.399, 25.2335, 0.83", "23.0867, 131.139, 24.1111, 0.83", "23.5795, 135.705, 22.8178, 0.83", "23.871, 138.489, 22.1663, 0.83", "24.0329, 140.737, 21.7784, 0.83", "24.1154, 142.971, 21.5698, 0.55", "24.1215, 145.538, 21.5031, 0.55", "24.0281, 148.473, 21.3856, 0.83", "23.6778, 153.937, 21.0876, 0.83", "23.3914, 158.257, 20.8109, 1.11", "23.1425, 161.54, 20.5638, 0.55", "22.7786, 165.148, 20.2674, 1.11", "22.0742, 170.232, 19.8248, 0.83", "21.4141, 174.452, 19.3739, 0.83", "20.9493, 177.255, 18.9598, 0.83", "20.5561, 180.041, 18.4652, 0.55", "20.0931, 183.941, 17.6983, 0.55", "20.0176, 184.857, 17.5022, 0.55", "19.8647, 188.25, 16.8304, 0.55", "19.8366, 190.717, 16.2853, 0.28", "19.9622, 194.654, 15.2622, 0.55", "20.3433, 199.112, 13.9581, 0.55", "20.6553, 201.614, 13.1731, 0.55", "21.2444, 205.972, 11.7966, 0.83", "21.9189, 210.574, 10.3359, 0.83", "22.4018, 213.833, 9.14163, 0.83", "22.6563, 215.712, 8.33666, 0.55", "22.8794, 217.376, 7.56768, 0.83", "23.1138, 220.062, 6.35974, 0.83", "23.2178, 223.484, 4.86111, 0.83", "23.1458, 227.829, 3.27964, 0.83", "23.0222, 230.586, 2.36584, 0.83", "22.8718, 233.141, 1.43802, 0.83", "22.6425, 236.748, 0.0225588, 0.55", "22.3167, 240.518, -1.49725, 0.55", "22.0736, 243.264, -2.55477, 0.55", "21.8435, 246.314, -3.69696, 0.83", "21.5679, 250.952, -5.50017, 1.11", "21.4199, 255.804, -7.24672, 0.55", "21.4755, 258.629, -8.09053, 0.55", "21.6284, 261.916, -8.90737, 0.55", "21.9067, 265.18, -9.57726, 0.83", "22.4693, 269.111, -10.1912, 0.83", "23.5159, 274.514, -10.8302, 0.83", "25.1421, 280.937, -11.6044, 0.83", "26.2557, 284.643, -12.1229, 0.55", "27.4676, 288.294, -12.7146, 0.55", "29.1144, 292.85, -13.5228, 0.83", "29.8633, 294.983, -13.9766, 0.83", "30.8591, 298.369, -14.7991, 0.83", "31.7075, 302.408, -15.7597, 0.83", "32.0596, 305.797, -16.4373, 0.28", "32.066, 307.574, -16.745, 0.83", "31.7421, 312.692, -17.5549, 0.83", "31.2723, 316.795, -18.1158, 0.83", "30.5274, 320.819, -18.5364, 0.83", "29.5385, 324.987, -18.8412, 0.83", "28.7715, 327.77, -18.9899, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.90789, 42.6412, 17.6026, 0.83", "3.97974, 44.6465, 18.2893, 0.83", "2.58492, 46.3523, 18.911, 0.55", "0.345132, 49.1137, 19.9083, 0.55", "-1.74673, 51.697, 20.8336, 0.55", "-4.12225, 54.3977, 21.8079, 0.55", "-5.93528, 56.2324, 22.5144, 0.55", "-9.18183, 59.0183, 23.7561, 0.55", "-11.5517, 60.7162, 24.5548, 0.55", "-14.8362, 62.555, 25.381, 0.55", "-20.1161, 64.4917, 26.2479, 0.55", "-23.2474, 65.1716, 26.5059, 0.55", "-26.6996, 65.3497, 26.5902, 0.55", "-28.7564, 65.1319, 26.4851, 0.55", "-30.4172, 64.7091, 26.298, 0.55", "-33.4917, 63.4509, 25.7352, 0.28", "-34.9963, 62.6256, 25.389, 0.83", "-37.0394, 61.3706, 24.9075, 0.55", "-38.3515, 60.3804, 24.5343, 0.55", "-40.0024, 58.7486, 23.9749, 0.55", "-41.5095, 56.9575, 23.3845, 0.83", "-42.7482, 55.3268, 22.8263, 0.55", "-43.753, 53.9257, 22.2896, 0.55", "-46.0234, 50.609, 20.9377, 0.55", "-48.2427, 47.4686, 19.5364, 0.83", "-49.9454, 45.1639, 18.368, 0.83", "-51.6505, 42.8484, 16.9255, 0.83", "-53.6535, 40.3009, 15.1453, 0.55", "-54.6418, 39.1692, 14.3366, 0.28", "-55.9419, 37.8711, 13.3945, 0.55", "-57.4912, 36.5213, 12.2941, 0.28", "-60.8876, 33.8396, 10.0691, 0.55", "-63.0381, 32.2917, 8.77043, 0.55", "-65.1961, 30.8524, 7.62401, 0.28", "-67.183, 29.579, 6.66379, 0.55", "-70.6684, 27.2677, 5.11179, 0.55", "-71.9086, 26.4278, 4.63029, 0.83", "-74.1475, 24.8308, 3.86777, 0.55", "-77.1915, 22.3502, 2.73555, 0.55", "-79.2342, 20.3067, 1.93888, 0.83", "-81.3371, 17.7009, 1.17366, 0.55", "-82.6756, 15.5764, 0.718499, 0.55", "-83.8406, 13.3675, 0.331155, 0.55", "-84.3568, 12.1548, 0.167528, 0.83", "-85.4807, 8.95673, -0.204938, 0.55", "-86.631, 5.15264, -0.585335, 0.28", "-88.2065, -0.383136, -1.08463, 0.28", "-88.8279, -2.72601, -1.36972, 0.83", "-90.0054, -7.34053, -1.97884, 0.28", "-90.4301, -8.95488, -2.1853, 0.83", "-90.7074, -9.95769, -2.30823, 0.28", "-91.0859, -11.5516, -2.50592, 0.83", "-91.8542, -14.7256, -2.90688, 0.28", "-92.2143, -15.9219, -3.0532, 0.55", "-93.2063, -18.5688, -3.39181, 0.28", "-93.8258, -20.0849, -3.59562, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.2381, 35.0968, 14.8236, 0.83", "12.6518, 36.6255, 12.4608, 0.83", "13.1946, 38.5629, 9.8037, 0.83", "13.5701, 39.7983, 8.28769, 0.83", "16.1739, 47.2415, 0.0842418, 0.55", "17.0177, 49.2961, -1.87274, 0.55", "17.5426, 50.4093, -2.78065, 0.55", "18.2945, 51.8337, -3.8018, 0.55", "19.1338, 53.2502, -4.52185, 1.11", "20.1982, 54.917, -4.91152, 0.55", "22.1457, 57.7349, -4.84357, 0.55", "23.8115, 60.2662, -4.67659, 0.55", "24.8861, 61.9124, -4.50597, 0.55", "26.2089, 63.9821, -4.11247, 0.83", "27.6963, 66.4949, -3.47364, 0.55", "28.7317, 68.4955, -2.88433, 1.11", "29.7307, 70.5767, -2.18306, 0.55", "30.6755, 72.6205, -1.45661, 0.83", "32.257, 76.1786, -0.227566, 0.55", "33.0718, 78.0467, 0.379449, 0.55", "34.153, 80.6345, 1.14377, 0.55", "35.0093, 82.6721, 1.60878, 0.55", "35.5274, 83.9397, 1.83261, 0.28", "36.5611, 86.4631, 2.13911, 0.55", "37.3301, 88.3676, 2.25419, 0.28", "38.059, 90.0992, 2.31675, 0.55", "39.4482, 93.3573, 2.37653, 0.55", "40.1866, 95.1939, 2.39129, 0.55", "41.2099, 97.749, 2.37499, 0.28", "42.0854, 100.4, 1.61315, 0.83", "42.7715, 102.724, 0.55094, 0.28", "42.9216, 103.237, 0.236131, 0.55", "43.2677, 104.384, -0.741962, 0.28", "43.4869, 105.081, -1.4568, 0.83", "46.2206, 113.391, -11.0042, 0.55", "47.3668, 116.459, -14.6737, 0.55", "47.7407, 117.388, -15.7552, 0.83", "48.7467, 119.563, -17.904, 0.55", "49.3102, 120.632, -18.7059, 0.55", "50.0261, 121.91, -19.0088, 0.83", "50.9342, 123.513, -18.5369, 0.28", "51.2948, 124.382, -18.3843, 0.55", "52.1099, 126.831, -17.736, 0.28", "52.5678, 128.434, -17.0728, 0.55", "52.9422, 129.822, -16.5141, 0.28", "53.1513, 131.209, -16.1018, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.2381, 35.0968, 14.8236, 0.55", "14.3558, 34.3856, 15.9185, 0.55", "17.5336, 33.3184, 17.5616, 0.28", "19.2009, 32.7584, 18.4237, 0.55", "22.2636, 31.7299, 20.0072, 0.55", "26.2679, 30.385, 22.0777, 0.55", "28.4573, 29.6497, 23.2097, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "12.6881, -30.8458, -33.0075, 0.55", "10.2156, -29.9015, -33.9147, 0.55", "9.48224, -29.6655, -34.4082, 0.83", "7.79449, -29.1506, -35.6739, 0.55", "7.10089, -28.9561, -36.1843, 0.55", "4.00601, -28.4016, -38.9514, 0.28", "3.37087, -28.3299, -39.5444, 0.83", "0.863982, -28.3008, -42.277, 0.55", "0.598651, -28.3169, -42.5795, 0.55", "-0.103934, -28.4082, -43.4103, 0.83", "-3.21964, -28.9274, -47.0319, 0.55", "-3.82122, -29.0491, -47.7074, 0.55", "-4.49623, -29.1925, -48.4861, 0.83", "-5.96563, -29.4796, -50.2917, 0.55", "-6.27224, -29.5152, -50.6917, 0.55", "-6.82854, -29.5264, -51.4869, 0.55", "-9.06399, -29.3151, -54.775, 0.28", "-9.66133, -29.2281, -55.7132, 0.83", "-11.6643, -28.8118, -58.9264, 0.55", "-12.1744, -28.6594, -59.764, 0.83", "-14.7615, -27.6357, -64.0071, 0.55", "-15.4672, -27.2476, -65.2321, 0.28", "-15.871, -26.9648, -65.9597, 0.83", "-16.5357, -26.4014, -67.225, 0.55", "-16.9889, -25.9095, -68.123, 0.83", "-17.8969, -24.6578, -70.1601, 0.55", "-18.9105, -22.6389, -72.833, 0.28", "-19.0434, -22.3265, -73.2345, 0.55", "-19.3586, -21.4885, -74.2893, 0.28", "-19.4755, -21.147, -74.717, 0.55", "-19.8476, -19.9839, -76.139, 0.28", "-19.9593, -19.5696, -76.6224, 0.55", "-20.3205, -18.2714, -78.1226, 0.28", "-20.466, -17.7966, -78.7069, 0.55", "-20.8341, -16.7551, -79.9991, 0.28", "-20.9325, -16.5234, -80.2892, 0.55", "-21.3415, -15.5899, -81.3761, 0.28", "-21.486, -15.2664, -81.747, 0.55", "-21.974, -14.2625, -82.8411, 0.28", "-22.2724, -13.7782, -83.4452, 0.55", "-23.2432, -12.3837, -85.195, 0.28", "-23.6816, -11.8246, -85.9242, 0.55", "-25.0105, -10.3306, -88.159, 0.28", "-25.4253, -9.88637, -88.8898, 0.55", "-26.7964, -8.49543, -91.5604, 0.28", "-27.2778, -8.04505, -92.5279, 0.28", "-27.8601, -7.52999, -93.7183, 0.55", "-28.9173, -6.65051, -95.7639, 0.28", "-29.1075, -6.48125, -96.1167, 0.55", "-29.9546, -5.77708, -97.7563, 0.28", "-30.3652, -5.43987, -98.5343, 0.83", "-31.2396, -4.76017, -100.104, 0.55", "-31.8005, -4.31787, -101.124, 0.55", "-32.7642, -3.5099, -102.884, 0.55", "-35.1121, -1.51412, -107.468, 0.83", "-35.9039, -0.830674, -109.133, 0.28", "-36.3071, -0.472029, -110.064, 0.55", "-37.7366, 0.83948, -113.788, 0.55", "-38.0673, 1.18967, -114.802, 0.55", "-39.0835, 2.306, -118.266, 0.83", "-39.7372, 3.00434, -120.617, 0.28", "-40.1894, 3.30984, -122.183, 0.55", "-40.7141, 3.46056, -124.102, 0.28", "-40.9319, 3.44539, -124.929, 0.83", "-42.1787, 3.01154, -129.56, 0.55", "-42.6623, 2.71906, -131.325, 0.55", "-43.8476, 1.86335, -135.308, 0.55", "-45.8829, 0.48333, -141.124, 0.55", "-46.4021, 0.14809, -142.458, 0.55", "-47.7879, -0.692514, -145.784, 0.55", "-49.3305, -1.5375, -149.235, 0.55", "-50.6089, -2.15545, -151.899, 0.55", "-52.7123, -3.06492, -155.844, 0.55", "-55.0126, -3.92352, -159.795, 0.55", "-55.536, -4.10281, -160.679, 0.55", "-57.8268, -4.9138, -164.552, 0.55", "-58.3825, -5.11243, -165.483, 0.28", "-58.5133, -5.16388, -165.708, 0.55", "-63.5714, -7.39273, -174.479, 0.28", "-64.0392, -7.6044, -175.264, 0.83", "-66.7968, -8.93976, -179.876, 0.28", "-66.9755, -9.02774, -180.17, 0.55", "-68.291, -9.6492, -182.314, 0.28", "-68.8338, -9.90694, -183.18, 0.55", "-69.9748, -10.4946, -184.76, 0.28", "-70.3624, -10.7016, -185.308, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "12.6881, -30.8458, -33.0075, 0.55", "14.163, -31.172, -36.176, 0.55", "15.4671, -31.3815, -38.639, 0.55", "18.2995, -31.8607, -44.349, 0.83", "19.0594, -32.0369, -45.8789, 0.83", "19.9569, -32.2752, -47.6501, 0.83", "20.7236, -32.4666, -49.1119, 0.83", "22.1008, -32.7838, -51.6381, 0.83", "24.4153, -33.4173, -55.8665, 0.83", "25.8755, -33.7325, -58.3656, 0.83", "27.421, -34.0184, -61.1868, 0.83", "29.1316, -34.2655, -64.3261, 0.83", "30.6817, -34.4472, -67.183, 0.83", "33.2378, -34.6925, -71.7122, 0.83", "34.8468, -34.757, -74.4232, 0.83", "36.8666, -34.7048, -77.9036, 0.83", "38.1424, -34.6213, -80.1607, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "21.505, -42.8077, 5.20196, 0.55", "23.7176, -42.595, 6.51015, 0.55", "25.5488, -42.5176, 7.64929, 0.28", "26.7009, -42.5488, 8.40412, 0.55", "28.6477, -42.6661, 9.71013, 1.11", "32.1354, -43.0094, 12.2542, 0.55", "33.4575, -43.1746, 13.2835, 0.55", "34.8976, -43.4302, 14.5139, 0.83", "36.4085, -43.728, 15.8748, 0.28", "36.4085, -43.728, 15.8748, 0.83", "38.8999, -44.6396, 18.4394, 0.28", "39.565, -44.9304, 19.1444, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "21.505, -42.8077, 5.20196, 0.83", "24.5272, -46.6424, 4.95155, 0.83", "27.38, -49.4367, 4.44377, 0.55", "29.3788, -50.9654, 3.89531, 0.83", "31.0096, -52.2127, 3.4478, 0.83", "33.2699, -53.9414, 2.82756, 0.83", "35.255, -55.4596, 2.28285, 0.83", "39.5022, -57.8418, 0.902579, 0.83", "42.7788, -59.3013, -0.418981, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-41.7542, -24.7521, 15.8069, 0.55", "-42.9153, -22.1846, 14.7194, 0.55", "-44.3523, -18.6469, 13.2386, 0.83", "-46.3295, -13.7052, 11.0519, 0.55", "-47.1943, -11.3105, 10.0571, 0.55", "-48.3603, -7.81313, 8.67077, 1.11", "-49.3608, -4.70045, 7.49864, 0.83", "-50.3424, -1.42149, 6.30205, 0.55", "-50.7113, -0.0815177, 5.84474, 0.55", "-51.7071, 3.18924, 4.99963, 0.55", "-51.9156, 3.85297, 4.83005, 1.11", "-52.4814, 5.46859, 4.74475, 0.55", "-53.1772, 7.08305, 5.16689, 0.83", "-53.9557, 8.57085, 5.9227, 0.55", "-54.9655, 10.2959, 6.96251, 0.55", "-55.7715, 11.5155, 7.6995, 0.83", "-59.6253, 17.3885, 10.3674, 0.55", "-60.6539, 19.0383, 10.9328, 0.83", "-61.9964, 21.1969, 11.4155, 0.55", "-63.4981, 23.4577, 11.6981, 0.55", "-64.9514, 25.5733, 11.616, 1.11", "-67.6227, 29.5882, 10.915, 0.55", "-68.4612, 30.9046, 10.5529, 0.55", "-70.5477, 34.3968, 9.56489, 0.55", "-71.8495, 36.6867, 8.89924, 0.55", "-73.5058, 39.6443, 8.12115, 1.11", "-75.3736, 42.9392, 7.38473, 0.55", "-76.5376, 44.9427, 7.09619, 1.11", "-78.0175, 47.428, 6.77458, 0.28", "-78.5385, 48.2924, 6.71163, 0.55", "-79.4214, 49.6824, 6.70397, 0.28", "-80.6882, 51.4626, 6.90717, 0.83", "-82.7823, 54.0705, 7.37951, 0.28", "-83.5741, 55.0338, 7.63262, 0.55", "-86.8804, 58.9518, 8.9662, 0.28", "-88.125, 60.4594, 9.52089, 0.83", "-89.8797, 62.6529, 10.3268, 0.55", "-91.6389, 64.9061, 11.1431, 0.55", "-93.4091, 67.2113, 11.9126, 0.55", "-94.7276, 69.02, 12.4838, 0.83", "-96.2281, 71.2023, 13.0859, 0.28", "-97.6059, 73.3578, 13.6147, 0.55", "-99.1666, 76.218, 14.0856, 0.55", "-99.4238, 76.8058, 14.1506, 0.83", "-100.394, 79.5002, 14.0462, 0.28", "-100.771, 81.0458, 13.8363, 0.55", "-100.993, 82.3291, 13.4453, 0.28", "-101.382, 84.9271, 12.1753, 0.55", "-101.704, 87.6484, 10.5158, 0.55", "-102.171, 91.5072, 7.93724, 0.28", "-102.442, 94.0554, 5.7442, 0.83", "-102.765, 97.6972, 2.20748, 0.55", "-102.943, 100.315, -0.535971, 0.55", "-103.031, 101.41, -1.73346, 0.55", "-103.211, 103.065, -3.71332, 0.83", "-103.863, 107.623, -9.08662, 0.28", "-104.052, 108.555, -10.218, 0.83", "-104.386, 109.851, -11.6622, 0.28", "-104.823, 111.184, -12.9597, 0.55", "-106.464, 114.413, -15.7734, 0.83", "-107.199, 115.45, -16.195, 0.83", "-108.587, 117.12, -15.9754, 0.28", "-109.275, 117.918, -15.6596, 0.55", "-110.878, 119.8, -14.5399, 0.28", "-111.971, 121.261, -13.5425, 0.55", "-114.7, 125.358, -9.47262, 0.28", "-115.208, 126.182, -8.54893, 0.55", "-115.923, 127.544, -7.00557, 0.28", "-116.429, 128.649, -5.7256, 0.83", "-117.187, 130.487, -3.56604, 0.83", "-119.066, 135.901, 2.44069, 0.28", "-119.304, 136.725, 3.26789, 0.55", "-120.045, 139.641, 6.07032, 0.28", "-120.424, 141.32, 7.59768, 0.83", "-120.789, 143.166, 9.15787, 0.28", "-121.068, 144.713, 10.2805, 0.83", "-121.6, 148.105, 12.036, 0.28", "-121.815, 149.664, 12.7136, 0.83", "-122.178, 152.608, 13.6716, 0.28", "-122.404, 154.415, 13.9407, 0.55", "-122.629, 156.306, 13.9121, 0.28", "-122.901, 158.521, 13.3881, 0.55", "-123.262, 161.23, 12.2948, 0.28", "-123.409, 162.361, 11.7115, 0.83", "-123.78, 165.144, 10.0764, 0.28", "-124.109, 167.21, 8.53882, 0.83", "-124.708, 170.89, 5.62587, 0.28", "-124.903, 172.079, 4.49702, 0.83", "-125.236, 174.184, 2.21797, 0.28", "-125.357, 175.012, 1.16016, 0.83", "-125.994, 179.819, -5.46303, 0.28", "-126.26, 181.66, -8.3181, 0.83", "-126.823, 185.829, -15.1612, 0.28", "-126.983, 187.317, -17.7944, 0.83", "-127.273, 189.98, -22.7802, 0.28", "-127.369, 190.803, -24.3935, 0.55", "-127.722, 193.278, -29.0108, 0.28", "-127.883, 194.09, -30.4744, 0.28", "-128.409, 196.153, -33.6065, 0.55", "-129.733, 199.244, -38.2032, 0.28", "-130.874, 201.371, -41.2834, 0.83", "-131.996, 203.284, -44.3268, 0.28", "-132.584, 204.226, -45.8315, 0.55", "-133.601, 205.741, -48.0287, 0.28", "-138.633, 212.903, -57.1523, 0.28", "-139.222, 213.754, -58.1337, 0.83", "-143.07, 219.4, -64.241, 0.28", "-143.482, 220.021, -64.9406, 0.83", "-148.026, 227.365, -72.2913, 0.28", "-148.398, 228.113, -72.7312, 0.55", "-149.592, 231.575, -72.0061, 0.28", "-149.973, 232.638, -71.891, 0.55", "-150.608, 234.222, -71.6061, 0.28", "-151.158, 235.647, -72.2615, 0.55", "-152.027, 237.927, -74.059, 0.28", "-152.441, 239.003, -74.9215, 1.11", "-153.578, 241.439, -76.7587, 0.28", "-154.075, 242.427, -77.5898, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-41.7542, -24.7521, 15.8069, 0.55", "-45.9279, -26.8718, 16.1449, 0.55", "-47.7912, -27.7037, 16.3259, 0.55", "-50.6698, -28.8797, 16.6999, 0.83", "-53.6145, -30.085, 17.1237, 0.55", "-56.0676, -31.2044, 17.6309, 0.55", "-57.2068, -31.786, 17.9127, 0.83", "-58.8326, -32.7474, 18.4889, 0.55", "-61.6003, -34.527, 19.9888, 0.55", "-62.9494, -35.5118, 20.9643, 0.55", "-65.3109, -37.4959, 23.0205, 0.55", "-66.3161, -38.4431, 24.0866, 0.28", "-68.5051, -40.7114, 26.7039, 0.83", "-70.9881, -43.3718, 30.0653, 0.55", "-71.4258, -43.8335, 30.6987, 0.55", "-72.8436, -45.2104, 32.6736, 0.83", "-74.5954, -46.6838, 34.8517, 0.55", "-75.9111, -47.6938, 36.3806, 0.83", "-79.5762, -50.3193, 40.0059, 0.55", "-81.2829, -51.4968, 41.3455, 0.83", "-83.4626, -52.8783, 42.7874, 0.28", "-85.2189, -53.8687, 43.6926, 0.55", "-87.1962, -54.8847, 44.3779, 0.55", "-90.1425, -56.3043, 45.0405, 0.28", "-91.4393, -56.9044, 45.1393, 0.28", "-92.5663, -57.3955, 45.1922, 0.55", "-95.5979, -58.8518, 45.3654, 0.28", "-96.7222, -59.485, 45.5584, 0.55", "-97.2682, -59.8299, 45.6736, 0.28", "-98.7086, -60.8223, 46.1251, 0.28", "-99.6664, -61.4891, 46.4338, 0.55", "-101.561, -62.915, 47.0599, 0.28", "-103.456, -64.5208, 47.6625, 0.55", "-105.792, -66.4877, 48.4659, 0.28", "-107.542, -68.0152, 49.1071, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-95.2927, -1.4476, 45.0421, 0.28", "-96.8356, -0.147407, 45.0487, 0.28", "-97.2489, 0.25074, 45.0504, 0.55", "-98.1366, 1.12984, 45.0668, 0.28", "-98.3322, 1.34297, 45.0757, 0.55", "-100.154, 3.48107, 45.2047, 0.28", "-101.564, 5.17663, 45.3784, 0.28", "-102.381, 6.28589, 45.5281, 0.28", "-102.954, 7.13254, 45.6647, 0.55", "-104.223, 9.15241, 45.9408, 0.28", "-104.69, 9.91321, 46.063, 0.55", "-105.401, 11.1299, 46.3147, 0.28", "-105.766, 11.8218, 46.47, 0.55", "-106.331, 12.9657, 46.7428, 0.28", "-107.026, 14.5491, 47.0912, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-95.2927, -1.4476, 45.0421, 0.28", "-92.6277, -2.06312, 43.475, 0.28", "-91.8865, -2.20278, 42.9597, 0.83", "-88.3098, -2.69317, 40.7382, 0.28", "-87.9362, -2.74097, 40.5193, 0.83", "-84.6318, -3.14337, 38.8676, 0.28", "-83.6519, -3.26873, 38.4272, 0.83", "-77.2096, -3.98269, 35.8139, 0.28", "-73.5674, -4.37954, 34.4954, 0.28", "-72.7649, -4.46202, 34.2579, 1.11", "-68.5632, -4.91516, 33.2402, 0.28", "-67.328, -5.06304, 32.9424, 0.55", "-62.8065, -5.64845, 31.7788, 0.28", "-60.7055, -5.96866, 31.2534, 0.28", "-59.3986, -6.18972, 30.8518, 0.55", "-57.4349, -6.51734, 30.1763, 0.28", "-51.6832, -7.60159, 27.726, 0.28", "-48.6759, -8.20098, 26.3746, 0.28", "-48.0278, -8.37741, 26.065, 0.83", "-46.6293, -8.83358, 25.3742, 0.28", "-46.6293, -8.83358, 25.3742, 0.83", "-43.5962, -9.98506, 23.9897, 0.28", "-42.8187, -10.3668, 23.7469, 0.83", "-40.553, -11.7672, 22.7678, 0.28", "-39.19, -12.6663, 22.1161, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-24.2828, 33.7596, -19.6667, 0.28", "-25.7687, 31.9756, -20.6148, 0.28", "-26.929, 30.5732, -21.504, 0.83", "-28.1903, 29.04, -22.452, 0.55", "-29.4968, 27.4552, -23.6411, 1.11", "-33.0635, 22.9032, -27.4042, 0.28", "-33.3135, 22.5889, -27.7089, 0.83", "-34.4429, 21.1573, -29.359, 0.83", "-35.1385, 20.2562, -30.4907, 0.83", "-37.6912, 16.9545, -34.9205, 0.28", "-38.3513, 16.1195, -36.0397, 0.83", "-40.7809, 13.3221, -40.3868, 0.28", "-41.2183, 12.8285, -41.2178, 0.55", "-41.9708, 11.9944, -42.6941, 0.55", "-42.7467, 11.1408, -44.2828, 0.55", "-43.7631, 10.0596, -46.3043, 1.11", "-47.8971, 5.7243, -55.2416, 0.55", "-48.469, 5.09416, -56.6284, 0.28", "-48.6369, 4.92491, -57.0522, 0.55", "-49.7584, 3.90098, -59.8845, 0.28", "-50.2174, 3.46159, -61.1528, 0.83", "-52.8489, 0.89022, -68.8158, 0.28", "-52.9683, 0.77637, -69.1427, 0.55", "-55.6488, -1.74839, -76.4261, 0.28", "-56.1205, -2.22819, -77.7418, 0.55", "-57.4988, -3.66894, -81.3889, 0.28", "-57.7397, -3.93643, -82.0158, 0.83", "-58.9053, -5.29299, -84.8511, 0.28", "-59.4865, -5.97967, -86.2534, 0.83", "-62.2892, -9.57748, -92.965, 0.28", "-62.9935, -10.4479, -94.48, 0.83", "-65.8091, -13.7842, -99.9122, 0.55", "-66.1662, -14.2192, -100.584, 0.83", "-68.1203, -16.6884, -104.168, 0.28", "-68.7287, -17.4758, -105.21, 0.55", "-71.2027, -20.786, -109.119, 0.28", "-72.0826, -22.0036, -110.52, 0.83", "-76.3902, -28.0753, -116.869, 0.28", "-76.6064, -28.3849, -117.189, 0.83", "-77.9162, -30.3484, -119.123, 0.28", "-78.2486, -30.8409, -119.639, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-24.2828, 33.7596, -19.6667, 0.55", "-25.2222, 35.7024, -19.9609, 0.55", "-25.9183, 37.1757, -20.2245, 0.55", "-26.6278, 38.7331, -20.6047, 0.28", "-27.0906, 39.7649, -20.8843, 1.38", "-27.7758, 41.2721, -21.3611, 0.55", "-28.5475, 42.9548, -21.9212, 0.55", "-28.8901, 43.6691, -22.1494, 0.83", "-29.4931, 44.9453, -22.6041, 0.28", "-29.8079, 45.6784, -22.876, 0.55", "-30.3249, 46.9704, -23.3162, 0.28", "-30.6927, 47.9045, -23.5683, 0.83", "-31.4091, 49.8159, -23.8827, 0.28", "-31.7585, 50.8463, -24.054, 0.55", "-32.1248, 52.0831, -24.2395, 0.28", "-32.3696, 53.1378, -24.4484, 0.83", "-32.695, 55.1225, -24.8805, 0.28", "-32.906, 56.8894, -25.3742, 0.83", "-33.1045, 59.8782, -26.336, 0.28", "-33.1189, 60.9192, -26.7008, 0.83", "-33.0715, 63.7808, -27.9356, 0.28", "-33.0028, 65.1106, -28.5886, 0.83", "-32.8745, 66.7501, -29.4605, 0.28", "-32.7687, 68.0453, -30.1986, 0.55", "-32.6632, 69.3395, -30.9294, 0.83", "-32.5306, 72.1925, -32.5443, 0.28", "-32.5364, 73.3017, -33.1439, 0.83", "-32.6105, 74.7949, -33.936, 0.83", "-32.7623, 76.2778, -34.6778, 0.28", "-33.0047, 77.4094, -35.2792, 0.83", "-33.3513, 78.5332, -35.8408, 0.28", "-33.6535, 79.3279, -36.1806, 0.55", "-33.9296, 79.9002, -36.4332, 0.28", "-34.6166, 81.0644, -36.8892, 0.55", "-36.0257, 83.2057, -37.5209, 0.28", "-36.6104, 83.9583, -37.7276, 0.55", "-37.3053, 84.7617, -37.9201, 0.28", "-38.1074, 85.6165, -38.0953, 0.83", "-39.1983, 86.7013, -38.2482, 0.28", "-40.292, 87.7511, -38.3177, 0.83", "-41.9347, 89.3058, -38.2872, 0.28", "-42.5798, 89.9263, -38.3018, 0.83", "-43.3183, 90.6659, -38.3318, 0.28", "-44.2645, 91.6983, -38.3983, 0.28", "-44.6712, 92.2065, -38.4842, 0.55", "-45.5471, 93.5273, -38.8161, 0.28", "-46.1862, 94.7146, -39.3116, 0.55", "-46.5163, 95.4078, -39.6856, 0.55", "-46.9684, 96.4512, -40.3219, 0.83", "-47.8008, 98.3705, -41.706, 0.28", "-48.4003, 99.7696, -42.8171, 0.83", "-49.2394, 101.718, -44.5875, 0.28", "-49.5628, 102.43, -45.2916, 0.28", "-49.9916, 103.422, -46.301, 0.83", "-50.7745, 105.299, -48.2809, 0.28", "-51.0662, 105.993, -48.9877, 0.83", "-52.0906, 108.556, -51.4792, 0.28", "-52.5914, 109.803, -52.6677, 1.11", "-53.551, 112.257, -55.0395, 0.28", "-53.9176, 113.296, -56.0517, 0.55", "-54.2209, 114.27, -56.918, 0.28", "-54.461, 115.067, -57.5709, 0.55", "-55.0163, 117.174, -59.1367, 0.28", "-55.2477, 118.016, -59.8292, 0.55", "-55.6224, 119.301, -60.9329, 0.28", "-55.8481, 120.138, -61.7209, 0.55", "-56.0833, 121.148, -62.7262, 0.28", "-56.3927, 122.645, -64.2442, 0.55", "-56.8981, 125.414, -66.8839, 0.28", "-57.0919, 126.558, -68.02, 0.55", "-57.3412, 128.193, -69.6511, 0.28", "-57.4446, 129.104, -70.6016, 0.83", "-57.5253, 130.346, -71.8681, 0.28", "-57.5541, 131.239, -72.7993, 0.83", "-57.565, 132.781, -74.384, 0.28", "-57.5747, 133.476, -75.1704, 0.55", "-57.5677, 134.452, -76.3195, 0.28", "-57.5337, 135.275, -77.3423, 0.55", "-57.4571, 137.665, -80.1905, 0.28", "-57.4515, 138.493, -81.1306, 0.28", "-57.5728, 140.315, -82.9408, 0.55", "-57.7283, 141.833, -84.2871, 0.28", "-57.8592, 142.653, -84.9112, 0.55", "-58.3711, 144.819, -86.273, 0.28", "-58.8302, 146.042, -86.8157, 0.83", "-59.7206, 147.78, -87.4082, 0.28", "-60.0967, 148.3, -87.5367, 0.55", "-60.8047, 149.055, -87.7024, 0.28", "-61.569, 149.739, -87.8845, 0.55", "-63.3629, 151.081, -88.2788, 0.28", "-63.782, 151.371, -88.3509, 0.55", "-66.4344, 153.183, -88.8715, 0.28", "-67.0907, 153.687, -89.0198, 0.55", "-67.9657, 154.478, -89.2198, 0.28", "-68.8264, 155.321, -89.4308, 0.55", "-70.1599, 156.825, -89.7738, 0.28", "-70.9485, 157.804, -89.9605, 0.55", "-72.448, 160.127, -90.0867, 0.28", "-72.9758, 161.079, -90.132, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-1.73279, 66.6384, -17.9818, 0.55", "0.128651, 68.1759, -19.0585, 0.55", "2.58691, 70.6097, -22.1467, 0.55", "3.50549, 71.6298, -23.7829, 0.83", "4.23345, 72.4669, -25.2338, 0.83", "6.20914, 74.8351, -29.4958, 0.28", "6.93791, 75.7267, -31.0695, 0.83", "9.15411, 78.998, -37.972, 0.55", "9.51057, 79.7157, -39.7367, 0.28", "9.62734, 80.0449, -40.6354, 0.28", "9.72802, 80.5831, -42.2173, 0.55", "9.76385, 81.2266, -44.0786, 0.55", "9.76155, 83.5036, -50.1946, 0.28", "9.77252, 84.6054, -52.8361, 0.83", "9.84224, 87.0429, -58.3535, 0.83", "9.94509, 89.2077, -63.0601, 0.83", "10.1468, 91.9923, -68.9658, 0.28", "10.2508, 92.9705, -70.9557, 0.28", "10.359, 93.5208, -71.9296, 0.55", "11.1242, 96.0052, -75.8737, 0.28", "11.281, 96.3832, -76.4057, 0.55", "12.6227, 98.8486, -79.7518, 0.28", "13.1675, 99.6706, -81.1722, 0.55", "13.7181, 100.391, -82.6494, 0.28", "13.9392, 100.657, -83.2411, 0.55", "15.5891, 102.35, -87.3896, 0.28", "16.1254, 102.838, -88.6198, 0.55", "19.1779, 105.213, -95.1147, 0.28", "20.0735, 105.887, -96.9426, 0.28", "21.0287, 106.591, -98.7648, 0.55", "23.0568, 108.083, -102.667, 0.28", "23.7168, 108.554, -103.845, 0.55", "26.4448, 110.449, -108.569, 0.28", "27.8493, 111.38, -110.841, 0.28", "29.0886, 112.191, -112.886, 0.83", "33.5438, 114.936, -119.863, 0.28", "34.7365, 115.631, -121.623, 0.28", "36.4342, 116.574, -123.959, 0.55", "37.9401, 117.381, -125.827, 0.28", "39.024, 117.895, -127.173, 0.55", "40.0968, 118.375, -128.393, 0.28", "40.7905, 118.687, -128.89, 0.55", "42.4216, 119.483, -130.074, 0.28", "44.7575, 120.851, -131.423, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-1.73279, 66.6384, -17.9818, 0.55", "-2.41737, 68.7958, -17.4031, 0.55", "-2.77843, 70.2463, -16.9109, 0.55", "-2.93, 70.8626, -16.6964, 0.55", "-3.16055, 71.8479, -16.3598, 0.55", "-3.34788, 72.678, -16.1154, 0.55", "-3.78515, 74.6741, -15.5298, 0.28", "-3.92953, 75.3784, -15.3148, 0.55", "-4.10036, 76.3692, -14.9321, 0.55", "-4.2041, 76.8477, -14.7125, 0.83", "-4.50752, 77.9287, -14.1699, 0.28", "-4.77927, 78.8364, -13.7211, 0.83", "-5.32096, 80.486, -12.9069, 0.28", "-5.38451, 80.6766, -12.7892, 0.83", "-5.81889, 82.1362, -11.7403, 0.55", "-6.00387, 82.8016, -11.208, 0.55", "-6.25301, 83.782, -10.3911, 0.83", "-6.66894, 85.5703, -8.86332, 0.55", "-6.95425, 86.945, -7.67219, 0.83", "-7.08265, 87.6431, -7.05074, 0.28", "-7.1688, 88.2582, -6.53506, 0.83", "-7.30046, 89.1718, -5.77725, 0.83", "-7.5771, 90.7726, -4.51102, 0.83", "-7.81681, 92.1086, -3.67062, 0.28", "-7.91505, 92.5639, -3.41836, 0.83", "-8.24686, 93.9383, -2.63656, 0.83", "-8.55666, 95.1424, -1.93884, 0.28", "-8.72378, 95.7695, -1.5536, 0.55", "-9.0672, 97.013, -0.843015, 0.28", "-9.49695, 98.2942, -0.0725308, 0.55", "-10.1219, 99.9686, 1.01072, 0.28", "-10.2788, 100.345, 1.27604, 0.83", "-10.5975, 101.104, 1.80035, 0.28", "-10.9874, 102.015, 2.46442, 0.55", "-11.542, 103.347, 3.55888, 0.28", "-11.6382, 103.603, 3.75813, 0.55", "-11.8392, 104.157, 4.21227, 0.28", "-12.0299, 104.74, 4.75608, 0.83", "-12.2237, 105.51, 5.52189, 0.28", "-12.4023, 106.47, 6.5432, 0.55", "-12.5143, 107.125, 7.32396, 0.28", "-12.5826, 107.531, 7.78768, 0.83", "-12.6984, 108.394, 8.72006, 0.83", "-12.7976, 109.266, 9.59271, 0.55", "-12.829, 109.744, 10.0191, 0.83", "-12.9585, 112.422, 12.159, 0.55", "-12.9902, 113.433, 12.862, 0.83", "-13.0053, 116.76, 14.7793, 0.28", "-12.9939, 117.468, 15.029, 0.55", "-12.9174, 118.873, 15.2606, 0.28", "-12.8446, 119.714, 15.3032, 0.83", "-12.6338, 121.436, 15.0623, 0.28", "-12.5078, 122.471, 14.7942, 0.55", "-12.12, 125.336, 13.3492, 0.28", "-11.9694, 126.592, 12.6513, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "28.7715, 327.77, -18.9899, 0.55", "29.2082, 330.357, -19.2081, 0.55", "29.5858, 333.452, -19.5127, 0.55", "29.9174, 336.43, -19.8095, 0.83", "30.1258, 338.491, -19.9987, 0.55", "30.3799, 341.055, -20.1979, 1.11", "30.8197, 344.986, -20.4541, 0.55", "31.1707, 347.77, -20.5924, 1.11", "31.5098, 349.865, -20.7334, 0.83", "31.9835, 351.823, -20.8715, 0.55", "32.8861, 354.358, -21.0324, 0.55", "33.9584, 356.513, -21.1746, 0.83", "35.5004, 358.707, -21.4005, 0.55", "37.3857, 360.822, -21.7289, 0.83", "39.0457, 362.391, -22.0304, 0.83", "40.5943, 363.654, -22.3244, 0.83", "41.9349, 364.648, -22.563, 1.11", "44.8197, 366.713, -23.1468, 0.83", "46.0551, 367.61, -23.4025, 0.55", "48.0179, 369.061, -23.7469, 0.83", "50.8824, 371.327, -24.2692, 0.55", "52.6908, 372.74, -24.5806, 1.11", "55.41, 374.893, -24.993, 0.55", "56.3433, 375.665, -25.092, 0.55", "57.6123, 376.755, -25.2209, 0.55", "60.434, 379.42, -25.4434, 0.55", "61.5016, 380.552, -25.4687, 0.28", "62.1501, 381.341, -25.4547, 0.55", "63.2687, 382.885, -25.3408, 0.28", "64.1723, 384.26, -25.2628, 0.83", "65.7389, 386.873, -25.1446, 0.55", "66.2406, 387.753, -25.0877, 0.83", "67.2741, 389.649, -25.0028, 0.55", "67.9432, 390.876, -24.9776, 0.83", "69.9753, 394.604, -24.969, 0.28", "71.3374, 397.065, -25.0196, 0.83", "72.76, 399.604, -25.1143, 0.28", "74.004, 401.843, -25.2237, 0.55", "75.2841, 404.209, -25.3632, 0.55", "76.3622, 406.36, -25.5738, 0.55", "76.8972, 407.558, -25.7389, 0.28", "77.3604, 408.721, -25.9282, 0.55", "78.1187, 410.987, -26.3247, 0.28", "78.5163, 412.324, -26.6412, 0.55", "79.1658, 414.757, -27.3635, 0.28", "79.5802, 416.413, -27.9005, 0.28", "80.1422, 418.728, -28.6839, 0.83", "80.6259, 420.802, -29.4271, 0.83", "81.5463, 424.761, -30.8457, 0.55", "82.0953, 426.984, -31.5873, 0.55", "82.4994, 428.424, -31.9867, 0.55", "82.7787, 429.239, -32.2154, 0.28", "83.221, 430.382, -32.521, 0.55", "83.64, 431.353, -32.7258, 0.28", "84.0326, 432.263, -32.9273, 1.11", "85.1481, 434.998, -33.8356, 0.55", "85.842, 436.997, -34.6238, 0.55", "86.3752, 438.751, -35.448, 0.28", "86.6378, 439.741, -36.0128, 0.83", "87.3652, 442.576, -37.8837, 0.55", "87.8359, 444.405, -39.1792, 0.83", "88.3571, 446.412, -40.7244, 0.83", "88.9734, 448.429, -42.3721, 0.55", "89.5431, 450.004, -43.7348, 0.28", "90.1571, 451.534, -45.0652, 0.55", "90.7499, 452.938, -46.2715, 0.55", "91.5681, 454.771, -47.9126, 1.11", "92.6561, 457.189, -50.0231, 0.55", "93.1105, 458.243, -50.8795, 0.55", "93.5777, 459.383, -51.8284, 0.55", "94.5461, 462.085, -54.1398, 0.55", "95.0344, 463.447, -55.3402, 0.83", "96.0132, 466.35, -57.739, 0.28", "96.2842, 467.224, -58.4261, 0.55", "97.063, 469.728, -60.2835, 0.28", "97.463, 470.953, -61.139, 0.55", "98.1174, 472.885, -62.3346, 0.28", "98.699, 474.833, -63.4227, 0.55", "98.9845, 475.851, -63.9313, 0.28", "99.4448, 477.531, -64.6695, 0.55", "100.237, 480.347, -65.6193, 0.55", "100.675, 481.798, -66.124, 0.28", "100.993, 483.082, -66.607, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "28.7715, 327.77, -18.9899, 0.55", "27.416, 329.398, -20.1115, 0.55", "25.802, 331.431, -21.3304, 1.11", "23.9602, 333.573, -22.5519, 0.55", "23.3702, 334.278, -22.9908, 0.83", "21.9792, 335.994, -24.0711, 0.55", "20.815, 337.362, -24.9548, 0.55", "19.9066, 338.409, -25.643, 0.83", "17.199, 341.438, -27.6726, 0.55", "15.1454, 343.653, -29.08, 0.55", "14.428, 344.426, -29.6026, 0.83", "12.4658, 346.501, -31.0554, 0.55", "12.1501, 346.83, -31.2974, 0.83", "11.1052, 347.952, -32.0501, 0.28", "10.9324, 348.15, -32.1478, 0.55", "9.82328, 349.362, -32.5339, 0.28", "9.12711, 350.168, -32.7267, 0.55", "8.33246, 351.055, -32.9628, 0.55", "6.16339, 353.353, -33.65, 0.55", "4.69085, 354.921, -34.1542, 0.55", "3.58628, 356.17, -34.6582, 0.83", "2.11855, 357.923, -35.4459, 0.83", "0.360972, 360.275, -36.7544, 0.55", "-0.846147, 362.042, -37.8787, 0.55", "-2.06267, 364.008, -39.2634, 1.11", "-3.28604, 366.409, -40.9448, 0.55", "-3.5814, 367.104, -41.4321, 0.83", "-4.4121, 369.485, -42.9415, 0.28", "-4.69578, 370.755, -43.9348, 0.55", "-4.82638, 371.6, -44.7218, 0.28", "-4.90408, 372.424, -45.5345, 0.83", "-4.95949, 374.183, -47.3121, 0.28", "-4.95035, 375.775, -48.9537, 0.83", "-4.6293, 381.958, -55.2726, 0.55", "-4.52464, 383.148, -56.4933, 0.55", "-4.39456, 384.228, -57.5824, 0.83", "-4.20934, 385.614, -58.901, 0.28", "-4.10466, 386.298, -59.4576, 0.55", "-3.97085, 387.339, -60.1333, 0.28", "-3.86633, 388.793, -60.6008, 0.55", "-3.75603, 390.843, -61.3058, 0.55", "-3.70861, 392.015, -61.7077, 0.55", "-3.65989, 393.325, -62.1307, 0.83", "-3.55198, 395.415, -62.8059, 0.28", "-3.45714, 397.173, -63.3499, 0.83", "-3.27418, 399.341, -63.9497, 0.55", "-3.20284, 400.208, -64.1599, 0.55", "-3.04859, 401.86, -64.4753, 0.83", "-2.98744, 402.734, -64.5944, 0.55", "-2.91162, 404.391, -64.6615, 0.83", "-2.95535, 405.925, -64.7188, 0.28", "-3.00291, 406.557, -64.8071, 0.28", "-3.21812, 408.25, -65.2285, 0.28", "-3.31891, 408.977, -65.4843, 0.83", "-3.56727, 410.657, -66.2882, 0.55", "-3.80804, 412.482, -67.5936, 0.83", "-4.19795, 414.939, -69.7954, 0.28", "-4.34099, 415.689, -70.6408, 0.55", "-4.53073, 416.415, -71.6925, 0.28", "-4.72708, 416.932, -72.5019, 0.83", "-5.54793, 418.827, -75.5519, 0.83", "-5.84007, 419.438, -76.5177, 0.83", "-6.85885, 421.353, -79.3474, 0.83", "-8.10152, 423.572, -82.5196, 0.55", "-8.887, 424.887, -84.3902, 0.55", "-9.60478, 426.081, -86.0279, 0.55", "-10.4041, 427.406, -87.7341, 0.55", "-11.5112, 429.477, -90.2149, 0.55", "-12.391, 431.212, -92.0297, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "38.1424, -34.6213, -80.1607, 0.55", "38.2257, -34.4052, -80.7266, 0.55", "38.297, -34.1681, -81.3037, 0.83", "38.4314, -33.6675, -82.4813, 0.28", "38.4977, -33.4014, -83.0704, 0.83", "38.6646, -32.7361, -84.4618, 0.28", "38.7255, -32.502, -84.9257, 0.55", "38.8366, -31.9652, -85.9908, 0.55", "38.945, -31.3616, -87.0707, 0.55", "39.046, -30.8295, -87.9589, 0.28", "39.09, -30.6058, -88.3118, 0.28", "39.1381, -30.3763, -88.6566, 0.55", "39.2583, -29.8907, -89.3746, 0.28", "39.454, -29.212, -90.2741, 0.55", "39.6494, -28.3932, -91.3807, 0.28", "39.6982, -28.1834, -91.6742, 0.55", "39.868, -27.301, -92.8864, 0.28", "39.9649, -26.7175, -93.686, 0.28", "40.0605, -26.05, -94.6277, 0.83", "40.1567, -24.9861, -96.1795, 0.55", "40.1746, -24.7292, -96.5648, 0.55", "40.1961, -24.2313, -97.3888, 0.55", "40.221, -23.758, -98.2465, 0.83", "40.2789, -23.0942, -99.5195, 0.28", "40.3152, -22.9014, -99.8885, 0.55", "40.4921, -22.398, -100.733, 0.28", "40.53, -22.3089, -100.882, 0.55", "40.7581, -21.9237, -101.521, 0.55", "41.1534, -21.3499, -102.366, 0.28", "41.3118, -21.1346, -102.646, 0.55", "41.716, -20.6259, -103.298, 0.28", "41.8895, -20.4172, -103.55, 0.55", "42.2812, -19.9968, -104.082, 0.28", "42.5471, -19.7693, -104.417, 0.55", "42.7054, -19.6571, -104.591, 0.55", "43.1556, -19.3266, -105.049, 0.28", "43.4594, -19.0898, -105.331, 0.28", "43.7463, -18.8303, -105.612, 0.55", "44.414, -18.1333, -106.296, 0.28", "44.8514, -17.5849, -106.775, 0.55", "45.2388, -17.0106, -107.211, 0.55", "45.5676, -16.4142, -107.598, 0.83", "46.0154, -15.4306, -108.144, 0.28", "46.1613, -15.0249, -108.337, 0.28", "46.3731, -14.2174, -108.644, 0.55", "46.5508, -13.3516, -108.925, 0.28", "46.621, -12.9571, -109.035, 0.55", "46.7246, -12.3123, -109.173, 0.55", "46.8762, -11.3431, -109.326, 0.28", "46.963, -10.7542, -109.413, 0.55", "47.0812, -9.84332, -109.544, 0.28", "47.194, -8.8153, -109.7, 0.55", "47.2978, -7.75563, -109.868, 0.55", "47.3351, -7.28207, -109.944, 0.55", "47.3824, -6.33827, -110.112, 0.55", "47.4122, -5.47283, -110.302, 0.55", "47.416, -4.59189, -110.516, 0.55", "47.4079, -3.75792, -110.728, 0.28", "47.3987, -3.3248, -110.857, 0.55", "47.3663, -1.96537, -111.281, 0.28", "47.3186, -1.06521, -111.59, 0.28", "47.2811, -0.617367, -111.752, 0.55", "47.2111, 0.17236, -112.052, 0.28", "47.1429, 0.88146, -112.327, 0.55", "47.088, 1.42452, -112.533, 0.55", "46.906, 2.95268, -113.084, 0.28", "46.7691, 3.89734, -113.411, 0.28", "46.7065, 4.28163, -113.538, 0.55", "46.5688, 5.05664, -113.778, 0.55", "46.3857, 6.11522, -114.062, 0.28", "46.2444, 6.9372, -114.266, 0.55", "46.1174, 7.70192, -114.426, 0.28", "45.9869, 8.35569, -114.548, 0.55", "45.9061, 8.75023, -114.61, 0.28", "45.8605, 9.02496, -114.629, 0.55", "45.7455, 9.83621, -114.624, 0.28", "45.7066, 10.2429, -114.597, 0.55", "45.6254, 11.6092, -114.466, 0.28", "45.594, 12.5568, -114.364, 0.55", "45.5751, 13.8215, -114.209, 0.28", "45.5781, 14.5069, -114.121, 0.55", "45.5992, 15.2961, -114.014, 0.28", "45.6301, 16.0062, -113.908, 0.55", "45.6672, 16.6769, -113.806, 0.28", "45.6877, 17.1922, -113.729, 0.55", "45.7038, 18.4618, -113.557, 0.28", "45.7146, 19.1119, -113.454, 0.55", "45.7169, 20.0442, -113.284, 0.28", "45.7178, 20.3925, -113.209, 0.55", "45.7046, 21.2763, -112.998, 0.28", "45.6681, 22.2025, -112.769, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "38.1424, -34.6213, -80.1607, 0.28", "41.0632, -34.6133, -82.3696, 0.28", "41.9169, -34.6134, -83.0839, 0.55", "43.0456, -34.5422, -84.1379, 0.55", "44.7561, -34.3792, -85.7647, 0.28", "45.7784, -34.2773, -86.705, 0.55", "49.374, -33.846, -89.8798, 0.28", "50.3385, -33.6518, -90.696, 0.55", "52.6254, -33.0547, -92.5556, 0.28", "53.6029, -32.7394, -93.3088, 0.28", "55.2206, -32.1408, -94.4361, 0.55", "56.7509, -31.5694, -95.3848, 0.55", "60.5767, -30.1779, -97.319, 0.28", "62.0342, -29.7336, -98.0068, 0.55", "63.7231, -29.3471, -98.7537, 0.55", "66.8566, -28.8218, -100.133, 0.28", "68.9433, -28.6299, -101.035, 0.55", "71.6315, -28.6572, -102.09, 0.28", "73.1165, -28.8411, -102.607, 0.55", "75.9053, -29.4126, -103.493, 0.28", "77.1268, -29.7847, -103.817, 0.55", "78.5108, -30.3406, -104.096, 0.55", "80.3838, -31.2649, -104.27, 0.28", "81.4886, -31.9134, -104.279, 0.28", "82.7213, -32.811, -104.171, 0.55", "84.3259, -34.2389, -103.879, 0.28", "84.5459, -34.465, -103.823, 0.55", "86.4218, -36.6993, -103.304, 0.28", "86.6093, -36.9707, -103.272, 0.83", "88.9438, -40.7424, -103.136, 0.28", "89.3477, -41.4835, -103.266, 0.55", "90.2477, -43.3623, -103.873, 0.28", "90.767, -44.5492, -104.375, 0.55", "91.8701, -47.2934, -105.904, 0.28", "92.0025, -47.6431, -106.114, 0.55", "93.4724, -51.7446, -108.887, 0.28", "93.6637, -52.3098, -109.251, 0.55", "93.7883, -52.6528, -109.477, 0.55", "94.295, -53.8958, -110.162, 0.28", "94.7534, -54.921, -110.62, 0.55", "95.6241, -56.6668, -111.259, 0.28", "96.0009, -57.3762, -111.485, 0.55", "98.3658, -61.6012, -113.006, 0.28", "98.8658, -62.4592, -113.332, 0.55", "99.4373, -63.4378, -113.769, 0.28", "101.304, -66.5822, -115.308, 0.28", "101.892, -67.6051, -115.773, 0.55", "103.549, -70.5576, -116.998, 0.28", "103.678, -70.8105, -117.076, 0.55", "105.22, -74.1452, -117.993, 0.28", "105.922, -75.7997, -118.273, 0.55", "106.793, -77.9283, -118.379, 0.28", "107.186, -78.8085, -118.317, 0.55", "108.046, -80.5961, -118.031, 0.28", "108.45, -81.3736, -117.885, 0.55", "110.076, -84.3811, -117.542, 0.28", "111.443, -86.8376, -117.462, 0.28", "112.067, -87.8932, -117.547, 0.55", "113.65, -90.4516, -117.911, 0.28", "114.164, -91.2205, -118.058, 0.55", "117.61, -96.2713, -119.145, 0.28", "118.958, -98.1584, -119.653, 0.55", "121.052, -100.892, -120.475, 0.28", "121.473, -101.424, -120.645, 0.55", "123.582, -103.904, -121.479, 0.28", "123.889, -104.231, -121.585, 0.55", "125.206, -105.203, -121.823, 0.28", "126.105, -105.779, -122.044, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "39.565, -44.9304, 19.1444, 0.55", "40.6667, -44.5877, 20.257, 0.55", "42.8801, -43.8163, 22.5016, 0.55", "46.927, -42.3949, 26.52, 0.55", "50.0359, -41.3257, 29.5593, 0.55", "52.8475, -40.4263, 32.2819, 0.28", "54.4057, -39.9541, 33.7649, 0.83", "56.3526, -39.3976, 35.6569, 0.55", "57.8186, -39.0626, 37.0529, 0.28", "58.5445, -38.9461, 37.639, 0.55", "60.0908, -38.7403, 38.7808, 0.28", "60.6082, -38.6859, 39.1627, 0.55", "62.8437, -38.6479, 40.6372, 0.28", "64.2677, -38.8303, 41.5094, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "39.565, -44.9304, 19.1444, 0.28", "47.3589, -48.8076, 13.9048, 0.28", "48.4509, -49.2575, 13.2702, 0.83", "52.2438, -50.6033, 11.2609, 0.28", "53.3526, -50.8679, 10.7458, 0.83", "55.9442, -51.2822, 9.62452, 0.28", "57.042, -51.3822, 9.17877, 0.83", "60.2906, -50.9831, 8.44985, 0.28", "60.9944, -50.7503, 8.25983, 0.83", "64.5244, -48.9269, 7.17441, 0.28", "65.3808, -48.4549, 6.89357, 0.28", "66.5941, -47.7512, 6.47621, 0.55", "68.8595, -46.4037, 6.14198, 0.28", "72.3349, -44.3167, 6.14577, 0.28", "73.2043, -43.7987, 6.33375, 0.83", "79.3876, -40.1991, 8.7205, 0.28", "80.4422, -39.6317, 9.25304, 0.55", "88.0, -35.7337, 14.23, 0.28", "88.7984, -35.3271, 14.8678, 0.83", "93.5249, -32.7657, 19.3746, 0.28", "94.145, -32.3796, 20.0427, 0.55", "95.9588, -31.0848, 22.2801, 0.28", "97.6647, -29.8354, 24.3508, 0.55", "99.8309, -28.2447, 26.6148, 0.28", "100.71, -27.5752, 27.4602, 0.55", "103.508, -25.1748, 29.5491, 0.28", "104.518, -24.1832, 30.3266, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "42.7788, -59.3013, -0.418981, 0.55", "44.3875, -59.6384, -0.698827, 0.55", "46.9644, -60.1944, -1.15876, 0.55", "48.8365, -60.6167, -1.51494, 0.28", "50.1688, -60.9143, -1.76043, 0.55", "52.2404, -61.3709, -2.09744, 0.55", "53.1219, -61.596, -2.2162, 0.28", "53.7343, -61.7564, -2.31595, 0.55", "54.4184, -61.9882, -2.42169, 0.28", "55.4296, -62.3997, -2.58576, 0.55", "56.9001, -63.0754, -2.75775, 0.55", "58.9963, -64.0741, -2.96403, 0.55", "61.8475, -65.2792, -3.52986, 1.38", "63.6677, -65.9698, -4.00179, 0.83", "65.2197, -66.485, -4.45652, 0.55", "67.1799, -67.0523, -5.09547, 0.28", "69.5881, -67.6456, -5.94587, 0.83", "74.1646, -68.4517, -7.80684, 0.28", "74.761, -68.5497, -8.07935, 0.28", "76.278, -68.7971, -8.89811, 0.55", "77.298, -68.9551, -9.49111, 0.55", "78.2285, -69.112, -10.0876, 0.55", "80.7964, -69.7039, -11.7015, 0.55", "83.2747, -70.447, -13.2152, 0.28", "84.7946, -70.9535, -14.1955, 0.83", "85.7272, -71.2838, -14.8204, 0.83", "88.1837, -72.1655, -16.4443, 0.55", "89.1723, -72.5377, -17.0604, 0.83", "90.506, -73.0839, -17.7323, 0.28", "91.4422, -73.4572, -18.0961, 0.55", "92.0016, -73.7198, -18.266, 0.28", "92.2691, -73.8702, -18.3279, 0.55", "93.5229, -74.5967, -18.4793, 0.28", "94.9252, -75.3989, -18.7377, 0.28", "96.0034, -76.0319, -18.933, 0.83", "96.9254, -76.6324, -19.1375, 0.55", "99.2408, -78.2434, -19.6977, 0.28", "99.9319, -78.7533, -19.9139, 0.83", "102.144, -80.4886, -20.7155, 0.28", "102.978, -81.2349, -21.0728, 0.83", "104.396, -82.6036, -21.6709, 0.28", "104.799, -82.995, -21.849, 0.83", "106.461, -84.6884, -22.6078, 0.28", "107.46, -85.7352, -23.0594, 0.28", "108.329, -86.6398, -23.3588, 0.55", "109.353, -87.6127, -23.7218, 0.55", "111.051, -89.083, -24.2606, 0.55", "111.96, -89.8288, -24.521, 0.28", "112.45, -90.2089, -24.6585, 0.55", "114.1, -91.4042, -25.2171, 0.28", "115.348, -92.232, -25.6261, 0.55", "116.662, -93.1223, -26.0903, 0.28", "117.05, -93.3935, -26.2077, 0.83", "118.73, -94.5226, -26.761, 0.28", "119.122, -94.7666, -26.8885, 0.55", "120.142, -95.3276, -27.2215, 0.55", "121.823, -96.2721, -27.6054, 0.28", "121.89, -96.3077, -27.6211, 0.55", "123.418, -97.0117, -28.0412, 0.28", "124.024, -97.2626, -28.2054, 0.55", "125.68, -97.9303, -28.7588, 0.28", "126.781, -98.3415, -29.1704, 0.55", "128.781, -99.0038, -29.9556, 0.55", "130.529, -99.5724, -30.69, 0.28", "131.603, -99.9382, -31.1641, 0.83", "133.453, -100.598, -31.9991, 0.28", "133.845, -100.728, -32.1442, 0.55", "135.285, -101.142, -32.5829, 0.28", "135.752, -101.267, -32.6386, 0.55", "137.938, -101.767, -32.6697, 0.28", "138.628, -101.896, -32.639, 0.83", "141.244, -102.276, -32.227, 0.28", "141.726, -102.334, -32.1241, 0.55", "143.635, -102.442, -31.5116, 0.28", "145.249, -102.406, -30.9189, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "42.7788, -59.3013, -0.418981, 0.55", "43.8156, -59.8936, -1.8046, 0.55", "45.8931, -61.1921, -4.78311, 0.55", "47.6926, -62.3131, -7.28849, 0.28", "49.0269, -63.0969, -9.10467, 0.83", "51.2898, -64.3148, -11.9881, 0.28", "51.8316, -64.5759, -12.6807, 0.55", "52.2994, -64.7757, -13.3133, 0.55", "53.3083, -65.0767, -14.5809, 0.55", "54.9144, -65.4762, -16.4795, 0.55", "55.8097, -65.6714, -17.5143, 0.55", "58.4291, -66.1157, -20.1677, 0.83", "60.0601, -66.3486, -21.7913, 0.28", "60.7101, -66.4212, -22.4701, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-78.2486, -30.8409, -119.639, 0.28", "-79.4376, -31.4625, -119.396, 0.28", "-80.9826, -32.2702, -119.08, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-78.2486, -30.8409, -119.639, 0.28", "-79.5571, -33.8054, -122.638, 0.28", "-79.9396, -34.6722, -123.515, 0.55", "-81.1365, -37.384, -126.257, 0.28", "-81.6663, -38.5843, -127.472, 0.83", "-83.9848, -43.8371, -132.785, 0.28", "-84.3658, -44.7004, -133.658, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.391, 431.212, -92.0297, 0.55", "-12.4461, 432.135, -93.8441, 0.55", "-12.5294, 433.244, -95.7206, 0.28", "-12.6125, 434.349, -97.5919, 0.55", "-12.8527, 437.546, -103.003, 0.28", "-12.8803, 437.913, -103.625, 0.55", "-13.0584, 440.283, -107.637, 0.28", "-13.032, 441.285, -109.792, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.391, 431.212, -92.0297, 0.28", "-14.1467, 430.552, -93.0812, 0.28", "-15.1238, 430.184, -93.6664, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "45.6681, 22.2025, -112.769, 0.28", "42.7752, 23.0963, -111.564, 0.28", "41.7947, 23.3994, -111.156, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "45.6681, 22.2025, -112.769, 0.28", "45.4206, 23.8529, -112.676, 0.28", "44.9387, 26.9599, -112.452, 0.28", "44.8008, 27.7965, -112.346, 0.55", "44.2642, 30.8519, -111.779, 0.28", "43.9559, 32.6077, -111.452, 0.55", "43.5574, 34.8759, -111.031, 0.28", "43.3397, 36.0743, -110.733, 0.55", "42.9806, 37.9874, -110.104, 0.28", "42.6519, 39.5267, -109.552, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "60.7101, -66.4212, -22.4701, 0.55", "60.3529, -67.2344, -24.7372, 0.55", "60.2148, -67.6384, -25.818, 0.28", "60.1124, -67.8851, -26.5389, 0.83", "59.3436, -69.3187, -30.8154, 0.28", "59.124, -69.7459, -32.0145, 0.83", "58.1295, -71.6856, -37.1146, 0.28", "57.9874, -71.9537, -37.8181, 0.83", "56.9879, -73.4669, -42.0175, 0.28", "56.6436, -73.8971, -43.1826, 0.55", "54.9179, -75.6501, -47.988, 0.28", "54.559, -75.9813, -48.9605, 0.28", "53.7721, -76.6326, -51.0431, 0.83", "51.4552, -78.4304, -57.2066, 0.28", "50.838, -78.8974, -58.9327, 0.55", "49.6533, -79.7569, -62.3592, 0.55", "48.7565, -80.3362, -64.8856, 0.55", "47.232, -81.3638, -69.2607, 0.28", "46.82, -81.6962, -70.4929, 0.83", "45.4192, -82.9739, -74.5814, 0.28", "45.1435, -83.2578, -75.3566, 0.55", "43.7789, -84.7364, -78.5113, 0.28", "43.318, -85.1832, -79.3758, 0.55", "41.4333, -87.0126, -82.4548, 0.28", "41.2607, -87.1671, -82.7267, 0.83", "40.1558, -88.0538, -84.1974, 0.28", "39.2145, -88.7647, -85.3044, 0.55", "36.2721, -90.8351, -88.5654, 0.28", "35.3646, -91.4778, -89.4935, 0.83", "31.3167, -94.3507, -93.2263, 0.28", "29.5642, -95.6228, -94.797, 0.55", "27.2762, -97.3632, -96.8849, 0.55", "24.7196, -99.4279, -99.1502, 0.28", "22.5401, -101.303, -100.922, 0.55", "21.0191, -102.676, -102.28, 0.28", "20.8015, -102.89, -102.486, 0.55", "19.5002, -104.13, -103.832, 0.28", "18.4815, -105.007, -104.897, 0.55", "17.3508, -105.863, -106.09, 0.55", "15.4176, -107.074, -108.258, 0.28", "14.5683, -107.528, -109.159, 0.55", "13.3383, -108.149, -110.438, 0.28", "12.5338, -108.515, -111.217, 0.55", "10.3491, -109.446, -113.325, 0.28", "9.62712, -109.733, -114.065, 0.55", "7.82287, -110.486, -115.927, 0.28", "6.74947, -110.992, -117.283, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "60.7101, -66.4212, -22.4701, 0.28", "65.1443, -66.5123, -21.9722, 0.28", "65.8, -66.5388, -21.9599, 0.83", "68.8253, -66.7949, -21.9504, 0.28", "69.882, -66.8592, -21.9512, 0.28", "71.2, -66.9845, -22.0045, 0.55", "73.5759, -67.215, -22.3837, 0.28", "76.1765, -67.5193, -23.1211, 0.55", "77.7188, -67.7776, -23.6065, 0.55", "79.666, -68.1708, -24.4119, 0.55", "83.0907, -68.873, -26.0611, 0.83", "87.2188, -69.7227, -28.3211, 0.28", "88.6476, -70.0224, -29.166, 0.28", "89.3923, -70.2091, -29.6763, 0.83", "94.3687, -71.5112, -33.2797, 0.28", "95.7878, -71.9393, -34.4035, 0.83", "96.9901, -72.3536, -35.4323, 0.83", "99.1053, -73.2207, -37.2509, 0.83", "102.698, -74.8128, -40.4302, 0.55", "105.792, -76.4496, -43.2464, 0.55", "109.557, -78.9347, -46.7329, 0.55", "111.322, -80.358, -48.5158, 0.55", "112.792, -81.81, -50.1289, 0.28", "112.95, -82.012, -50.3138, 0.55", "114.838, -85.2469, -52.6768, 0.28", "115.393, -86.521, -53.4475, 0.55", "116.879, -90.3631, -55.4311, 0.28", "117.722, -92.559, -56.4165, 0.55", "118.674, -94.9377, -57.3602, 0.28", "119.443, -96.7356, -57.9111, 0.55", "121.33, -100.965, -58.8259, 0.28", "121.814, -101.988, -58.954, 1.11", "124.552, -107.154, -59.0355, 0.28", "126.036, -109.677, -58.8303, 0.55", "127.528, -112.086, -58.153, 0.28", "128.039, -112.859, -57.7563, 0.55", "129.375, -114.83, -56.2987, 0.28", "130.257, -116.11, -55.1288, 0.28", "131.921, -118.42, -52.4337, 0.55", "134.315, -121.882, -48.2424, 0.55", "135.238, -123.239, -46.5794, 0.28", "135.439, -123.498, -46.2449, 0.55", "136.995, -125.208, -43.9256, 0.28", "137.277, -125.49, -43.5414, 0.55", "138.719, -126.599, -41.9758, 0.28", "139.436, -127.006, -41.3794, 0.55", "142.293, -128.239, -38.7948, 0.28", "143.158, -128.515, -37.8299, 0.55", "144.541, -128.726, -36.256, 0.28", "144.955, -128.733, -35.6382, 0.55", "146.071, -128.577, -33.6363, 0.28", "146.993, -128.393, -31.7976, 0.55", "148.469, -127.941, -27.9817, 0.28", "149.512, -127.516, -24.9004, 0.55", "151.573, -126.335, -18.0768, 0.28", "151.853, -126.153, -17.0503, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_BTC_2d64e36d0b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.07039, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.11713, -13.4053, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 9.72061, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -5.75043, 10.7398, -3.8609, 1.38 ) }
    dend_11 { pt3dadd( -6.77096, 12.3357, -4.04769, 1.66 ) }
    dend_11 { pt3dadd( -7.64231, 13.6983, -4.20718, 1.38 ) }
    dend_11 { pt3dadd( -8.33914, 14.788, -4.33473, 1.11 ) }
    dend_11 { pt3dadd( -8.88946, 15.6486, -4.43546, 1.11 ) }
    dend_11 { pt3dadd( -10.1616, 17.6381, -4.66832, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.08211, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01517, 9.22561, 7.32656, 1.38 ) }
    dend_0 { pt3dadd( 6.12283, 11.1686, 7.87744, 1.38 ) }
    dend_0 { pt3dadd( 6.44196, 14.5659, 8.95781, 1.38 ) }
    dend_0 { pt3dadd( 6.87816, 18.1894, 10.1648, 1.38 ) }
    dend_0 { pt3dadd( 7.20647, 20.9166, 11.0733, 1.38 ) }
    dend_0 { pt3dadd( 7.49944, 23.3502, 11.884, 0.83 ) }
    dend_0 { pt3dadd( 7.69076, 25.716, 12.7276, 1.38 ) }
    dend_0 { pt3dadd( 7.97096, 28.5234, 13.7727, 1.38 ) }
    dend_0 { pt3dadd( 8.61116, 31.8715, 14.9974, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.694473 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.694473 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.694473 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.11713, -13.4053, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 4.2339, -17.0834, 1.53587, 2.22 ) }
    dend_32 { pt3dadd( 5.33507, -18.9967, 1.36809, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.11713, -13.4053, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( 0.240094, -14.82, 2.65713, 0.83 ) }
    dend_27 { pt3dadd( -1.04777, -15.8007, 3.38572, 1.11 ) }
    dend_27 { pt3dadd( -2.82459, -17.1537, 4.39093, 0.83 ) }
    dend_27 { pt3dadd( -4.18935, -18.1929, 5.16302, 0.83 ) }
    dend_27 { pt3dadd( -6.50331, -19.9549, 6.47211, 1.38 ) }
    dend_27 { pt3dadd( -8.71503, -21.6391, 7.72335, 1.38 ) }
    dend_27 { pt3dadd( -10.6542, -22.9607, 8.99035, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.1616, 17.6381, -4.66832, 0.55 ) }
    dend_21 { pt3dadd( -14.2993, 18.4193, -3.16735, 0.55 ) }
    dend_21 { pt3dadd( -16.272, 18.556, -2.13047, 0.55 ) }
    dend_21 { pt3dadd( -17.6757, 18.5759, -1.28484, 0.55 ) }
    dend_21 { pt3dadd( -19.9834, 18.5179, 0.167214, 1.11 ) }
    dend_21 { pt3dadd( -24.0245, 18.2904, 2.7105, 0.83 ) }
    dend_21 { pt3dadd( -28.0955, 17.9007, 5.32471, 0.83 ) }
    dend_21 { pt3dadd( -32.3599, 17.1779, 8.2861, 0.55 ) }
    dend_21 { pt3dadd( -34.6758, 16.6555, 9.91533, 1.38 ) }
    dend_21 { pt3dadd( -36.3577, 16.181, 11.1121, 0.28 ) }
    dend_21 { pt3dadd( -37.89, 15.6559, 12.2116, 0.83 ) }
    dend_21 { pt3dadd( -39.7383, 15.0207, 13.5844, 0.28 ) }
    dend_21 { pt3dadd( -41.0191, 14.5657, 14.5851, 0.55 ) }
    dend_21 { pt3dadd( -42.642, 14.0786, 15.7757, 0.55 ) }
    dend_21 { pt3dadd( -45.2198, 13.3923, 17.6525, 0.55 ) }
    dend_21 { pt3dadd( -47.446, 12.814, 19.2572, 0.55 ) }
    dend_21 { pt3dadd( -51.2374, 11.9307, 22.0364, 0.55 ) }
    dend_21 { pt3dadd( -52.8403, 11.5946, 23.1707, 0.55 ) }
    dend_21 { pt3dadd( -55.9147, 10.9915, 25.2579, 0.83 ) }
    dend_21 { pt3dadd( -58.0784, 10.6149, 26.6675, 0.83 ) }
    dend_21 { pt3dadd( -59.8065, 10.3369, 27.7066, 0.83 ) }
    dend_21 { pt3dadd( -63.4898, 9.81541, 29.8473, 0.83 ) }
    dend_21 { pt3dadd( -64.8593, 9.60361, 30.5982, 0.83 ) }
    dend_21 { pt3dadd( -68.1589, 9.05287, 32.5195, 0.83 ) }
    dend_21 { pt3dadd( -72.6636, 8.19464, 35.2142, 0.83 ) }
    dend_21 { pt3dadd( -73.7954, 8.00499, 35.8844, 0.83 ) }
    dend_21 { pt3dadd( -76.2663, 7.6428, 37.2922, 0.28 ) }
    dend_21 { pt3dadd( -77.6533, 7.40187, 37.9896, 0.83 ) }
    dend_21 { pt3dadd( -80.9866, 6.7932, 39.5657, 0.28 ) }
    dend_21 { pt3dadd( -83.3334, 6.34719, 40.5115, 0.83 ) }
    dend_21 { pt3dadd( -86.0823, 5.82204, 41.4662, 0.28 ) }
    dend_21 { pt3dadd( -86.6782, 5.70612, 41.6636, 0.55 ) }
    dend_21 { pt3dadd( -90.0943, 5.13633, 42.6386, 0.55 ) }
    dend_21 { pt3dadd( -92.5572, 4.80019, 43.2597, 0.28 ) }
    dend_21 { pt3dadd( -95.3729, 4.43101, 43.6902, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.1616, 17.6381, -4.66832, 1.11 ) }
    dend_12 { pt3dadd( -11.1261, 20.6737, -6.73997, 1.11 ) }
    dend_12 { pt3dadd( -11.672, 22.3362, -7.70471, 1.11 ) }
    dend_12 { pt3dadd( -12.3303, 24.3413, -8.86826, 1.11 ) }
    dend_12 { pt3dadd( -12.8838, 26.0268, -9.84638, 1.11 ) }
    dend_12 { pt3dadd( -13.5355, 28.0116, -10.9982, 0.83 ) }
    dend_12 { pt3dadd( -14.2029, 30.0442, -12.1777, 0.83 ) }
    dend_12 { pt3dadd( -14.6822, 31.6542, -12.8658, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.61116, 31.8715, 14.9974, 0.83 ) }
    dend_4 { pt3dadd( 7.77458, 35.2044, 15.8036, 0.83 ) }
    dend_4 { pt3dadd( 7.14886, 37.6973, 16.4066, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 6.66421, 39.6281, 16.8737, 0.83 ) }
    dend_4 { pt3dadd( 5.90789, 42.6412, 17.6026, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.61116, 31.8715, 14.9974, 0.83 ) }
    dend_1 { pt3dadd( 12.2381, 35.0968, 14.8236, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.694473 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.694473 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.694473 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.33507, -18.9967, 1.36809, 0.83 ) }
    dend_42 { pt3dadd( 5.98113, -20.375, -1.07326, 0.83 ) }
    dend_42 { pt3dadd( 6.34487, -21.0092, -2.52895, 0.83 ) }
    dend_42 { pt3dadd( 6.78427, -21.6824, -4.36184, 0.83 ) }
    dend_42 { pt3dadd( 8.50101, -24.3018, -11.9121, 0.83 ) }
    dend_42 { pt3dadd( 9.45562, -25.7424, -16.0975, 0.83 ) }
    dend_42 { pt3dadd( 10.8863, -27.9014, -22.3701, 0.55 ) }
    dend_42 { pt3dadd( 11.4447, -28.8599, -25.4495, 0.83 ) }
    dend_42 { pt3dadd( 12.0154, -29.8696, -29.0292, 0.83 ) }
    dend_42 { pt3dadd( 12.5436, -30.7161, -32.4261, 1.11 ) }
    dend_42 { pt3dadd( 12.6881, -30.8458, -33.0075, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.33507, -18.9967, 1.36809, 1.66 ) }
    dend_33 { pt3dadd( 6.4479, -21.695, 1.47833, 1.66 ) }
    dend_33 { pt3dadd( 8.05112, -24.9468, 1.61273, 1.11 ) }
    dend_33 { pt3dadd( 9.26029, -27.1018, 1.71694, 1.11 ) }
    dend_33 { pt3dadd( 11.4851, -30.4618, 2.26044, 1.11 ) }
    dend_33 { pt3dadd( 13.3845, -33.3302, 2.72444, 1.11 ) }
    dend_33 { pt3dadd( 14.713, -35.3367, 3.04899, 1.38 ) }
    dend_33 { pt3dadd( 16.2927, -37.4798, 3.43879, 1.11 ) }
    dend_33 { pt3dadd( 17.2857, -38.6726, 3.73073, 1.11 ) }
    dend_33 { pt3dadd( 21.505, -42.8077, 5.20196, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -10.6542, -22.9607, 8.99035, 0.28 ) }
    dend_31 { pt3dadd( -11.3918, -24.4295, 12.421, 0.28 ) }
    dend_31 { pt3dadd( -11.7997, -25.0272, 13.9399, 1.11 ) }
    dend_31 { pt3dadd( -13.244, -26.9577, 19.2597, 0.55 ) }
    dend_31 { pt3dadd( -13.6553, -27.5564, 20.8749, 0.83 ) }
    dend_31 { pt3dadd( -14.566, -28.8817, 24.4503, 0.83 ) }
    dend_31 { pt3dadd( -15.6156, -30.4091, 28.5712, 0.55 ) }
    dend_31 { pt3dadd( -16.2565, -31.2576, 30.9943, 1.11 ) }
    dend_31 { pt3dadd( -17.3812, -32.6924, 35.3731, 0.55 ) }
    dend_31 { pt3dadd( -17.825, -33.2137, 36.8964, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -10.6542, -22.9607, 8.99035, 0.83 ) }
    dend_28 { pt3dadd( -14.294, -23.3092, 10.0519, 0.83 ) }
    dend_28 { pt3dadd( -17.022, -23.5558, 10.8076, 1.11 ) }
    dend_28 { pt3dadd( -19.7207, -23.7327, 11.4803, 0.83 ) }
    dend_28 { pt3dadd( -22.754, -23.8869, 12.1472, 0.83 ) }
    dend_28 { pt3dadd( -26.4946, -24.0769, 12.9697, 0.83 ) }
    dend_28 { pt3dadd( -30.0654, -24.2584, 13.7549, 0.83 ) }
    dend_28 { pt3dadd( -33.9805, -24.4609, 14.5578, 1.11 ) }
    dend_28 { pt3dadd( -38.1012, -24.6334, 15.2642, 1.11 ) }
    dend_28 { pt3dadd( -41.7542, -24.7521, 15.8069, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -95.3729, 4.43101, 43.6902, 0.28 ) }
    dend_23 { pt3dadd( -95.3474, 2.56311, 44.1197, 0.28 ) }
    dend_23 { pt3dadd( -95.3383, 1.89994, 44.2723, 0.83 ) }
    dend_23 { pt3dadd( -95.2927, -1.4476, 45.0421, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -95.3729, 4.43101, 43.6902, 0.28 ) }
    dend_22 { pt3dadd( -99.0697, 5.00245, 44.6695, 0.28 ) }
    dend_22 { pt3dadd( -100.354, 5.22347, 44.5924, 0.55 ) }
    dend_22 { pt3dadd( -103.184, 5.65804, 43.9929, 0.28 ) }
    dend_22 { pt3dadd( -105.716, 5.99944, 43.3014, 0.83 ) }
    dend_22 { pt3dadd( -108.732, 6.40609, 42.4778, 0.28 ) }
    dend_22 { pt3dadd( -111.624, 6.79618, 41.6878, 0.28 ) }
    dend_22 { pt3dadd( -116.515, 7.41462, 39.5048, 0.28 ) }
    dend_22 { pt3dadd( -117.507, 7.54238, 38.9403, 0.83 ) }
    dend_22 { pt3dadd( -119.02, 7.76934, 37.8003, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -14.6822, 31.6542, -12.8658, 0.55 ) }
    dend_16 { pt3dadd( -15.697, 31.8767, -13.5847, 0.55 ) }
    dend_16 { pt3dadd( -17.4861, 32.2691, -14.852, 0.55 ) }
    dend_16 { pt3dadd( -19.2133, 32.6478, -16.0756, 0.83 ) }
    dend_16 { pt3dadd( -22.3295, 33.3312, -18.2831, 0.55 ) }
    dend_16 { pt3dadd( -24.2828, 33.7596, -19.6667, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -14.6822, 31.6542, -12.8658, 0.55 ) }
    dend_13 { pt3dadd( -13.1935, 35.6655, -14.1194, 0.55 ) }
    dend_13 { pt3dadd( -12.5407, 37.6663, -14.5954, 0.55 ) }
    dend_13 { pt3dadd( -12.029, 39.3961, -14.8341, 0.83 ) }
    dend_13 { pt3dadd( -11.3696, 41.6822, -15.0274, 0.55 ) }
    dend_13 { pt3dadd( -10.957, 43.1523, -15.138, 0.83 ) }
    dend_13 { pt3dadd( -10.333, 45.3444, -15.2706, 0.55 ) }
    dend_13 { pt3dadd( -9.88415, 47.0197, -15.2638, 0.83 ) }
    dend_13 { pt3dadd( -9.16039, 49.423, -15.3228, 0.28 ) }
    dend_13 { pt3dadd( -8.70169, 50.7636, -15.4021, 0.83 ) }
    dend_13 { pt3dadd( -7.8603, 52.967, -15.5932, 0.55 ) }
    dend_13 { pt3dadd( -7.17003, 54.6932, -15.7792, 0.83 ) }
    dend_13 { pt3dadd( -6.05797, 57.3342, -16.1357, 0.55 ) }
    dend_13 { pt3dadd( -4.73329, 60.283, -16.6358, 0.83 ) }
    dend_13 { pt3dadd( -3.45894, 63.0094, -17.2153, 0.83 ) }
    dend_13 { pt3dadd( -1.73279, 66.6384, -17.9818, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 5.90789, 42.6412, 17.6026, 0.83 ) }
    dend_6 { pt3dadd( 7.50436, 47.1491, 18.8622, 0.83 ) }
    dend_6 { pt3dadd( 9.0235, 52.1364, 20.1568, 0.83 ) }
    dend_6 { pt3dadd( 9.81927, 55.2468, 21.0382, 0.83 ) }
    dend_6 { pt3dadd( 10.7993, 59.5887, 22.3436, 0.83 ) }
    dend_6 { pt3dadd( 11.8393, 64.4866, 23.8205, 0.83 ) }
    dend_6 { pt3dadd( 12.8892, 69.9267, 25.4305, 0.83 ) }
    dend_6 { pt3dadd( 13.7451, 75.1287, 27.0097, 0.83 ) }
    dend_6 { pt3dadd( 14.4883, 80.3112, 28.6733, 0.83 ) }
    dend_6 { pt3dadd( 14.862, 83.4353, 29.6131, 0.55 ) }
    dend_6 { pt3dadd( 15.2173, 86.8396, 30.4776, 0.55 ) }
    dend_6 { pt3dadd( 15.5722, 89.6744, 31.0104, 0.83 ) }
    dend_6 { pt3dadd( 15.9808, 92.1878, 31.2896, 0.83 ) }
    dend_6 { pt3dadd( 16.4555, 94.4871, 31.4267, 0.55 ) }
    dend_6 { pt3dadd( 17.167, 97.3653, 31.3337, 0.83 ) }
    dend_6 { pt3dadd( 17.7758, 99.6936, 31.1891, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 18.2834, 101.694, 31.0446, 0.83 ) }
    dend_6 { pt3dadd( 19.0164, 104.806, 30.8184, 0.55 ) }
    dend_6 { pt3dadd( 19.6863, 107.939, 30.5283, 0.83 ) }
    dend_6 { pt3dadd( 20.2945, 110.773, 29.9787, 0.55 ) }
    dend_6 { pt3dadd( 20.5968, 112.312, 29.5898, 0.55 ) }
    dend_6 { pt3dadd( 21.0072, 114.701, 28.9455, 0.83 ) }
    dend_6 { pt3dadd( 21.517, 118.122, 27.966, 0.83 ) }
    dend_6 { pt3dadd( 21.912, 120.96, 27.1518, 0.55 ) }
    dend_6 { pt3dadd( 22.6813, 127.399, 25.2335, 0.83 ) }
    dend_6 { pt3dadd( 23.0867, 131.139, 24.1111, 0.83 ) }
    dend_6 { pt3dadd( 23.5795, 135.705, 22.8178, 0.83 ) }
    dend_6 { pt3dadd( 23.871, 138.489, 22.1663, 0.83 ) }
    dend_6 { pt3dadd( 24.0329, 140.737, 21.7784, 0.83 ) }
    dend_6 { pt3dadd( 24.1154, 142.971, 21.5698, 0.55 ) }
    dend_6 { pt3dadd( 24.1215, 145.538, 21.5031, 0.55 ) }
    dend_6 { pt3dadd( 24.0281, 148.473, 21.3856, 0.83 ) }
    dend_6 { pt3dadd( 23.6778, 153.937, 21.0876, 0.83 ) }
    dend_6 { pt3dadd( 23.3914, 158.257, 20.8109, 1.11 ) }
    dend_6 { pt3dadd( 23.1425, 161.54, 20.5638, 0.55 ) }
    dend_6 { pt3dadd( 22.7786, 165.148, 20.2674, 1.11 ) }
    dend_6 { pt3dadd( 22.0742, 170.232, 19.8248, 0.83 ) }
    dend_6 { pt3dadd( 21.4141, 174.452, 19.3739, 0.83 ) }
    dend_6 { pt3dadd( 20.9493, 177.255, 18.9598, 0.83 ) }
    dend_6 { pt3dadd( 20.5561, 180.041, 18.4652, 0.55 ) }
    dend_6 { pt3dadd( 20.0931, 183.941, 17.6983, 0.55 ) }
    dend_6 { pt3dadd( 20.0176, 184.857, 17.5022, 0.55 ) }
    dend_6 { pt3dadd( 19.8647, 188.25, 16.8304, 0.55 ) }
    dend_6 { pt3dadd( 19.8366, 190.717, 16.2853, 0.28 ) }
    dend_6 { pt3dadd( 19.9622, 194.654, 15.2622, 0.55 ) }
    dend_6 { pt3dadd( 20.3433, 199.112, 13.9581, 0.55 ) }
    dend_6 { pt3dadd( 20.6553, 201.614, 13.1731, 0.55 ) }
    dend_6 { pt3dadd( 21.2444, 205.972, 11.7966, 0.83 ) }
    dend_6 { pt3dadd( 21.9189, 210.574, 10.3359, 0.83 ) }
    dend_6 { pt3dadd( 22.4018, 213.833, 9.14163, 0.83 ) }
    dend_6 { pt3dadd( 22.6563, 215.712, 8.33666, 0.55 ) }
    dend_6 { pt3dadd( 22.8794, 217.376, 7.56768, 0.83 ) }
    dend_6 { pt3dadd( 23.1138, 220.062, 6.35974, 0.83 ) }
    dend_6 { pt3dadd( 23.2178, 223.484, 4.86111, 0.83 ) }
    dend_6 { pt3dadd( 23.1458, 227.829, 3.27964, 0.83 ) }
    dend_6 { pt3dadd( 23.0222, 230.586, 2.36584, 0.83 ) }
    dend_6 { pt3dadd( 22.8718, 233.141, 1.43802, 0.83 ) }
    dend_6 { pt3dadd( 22.6425, 236.748, 0.0225588, 0.55 ) }
    dend_6 { pt3dadd( 22.3167, 240.518, -1.49725, 0.55 ) }
    dend_6 { pt3dadd( 22.0736, 243.264, -2.55477, 0.55 ) }
    dend_6 { pt3dadd( 21.8435, 246.314, -3.69696, 0.83 ) }
    dend_6 { pt3dadd( 21.5679, 250.952, -5.50017, 1.11 ) }
    dend_6 { pt3dadd( 21.4199, 255.804, -7.24672, 0.55 ) }
    dend_6 { pt3dadd( 21.4755, 258.629, -8.09053, 0.55 ) }
    dend_6 { pt3dadd( 21.6284, 261.916, -8.90737, 0.55 ) }
    dend_6 { pt3dadd( 21.9067, 265.18, -9.57726, 0.83 ) }
    dend_6 { pt3dadd( 22.4693, 269.111, -10.1912, 0.83 ) }
    dend_6 { pt3dadd( 23.5159, 274.514, -10.8302, 0.83 ) }
    dend_6 { pt3dadd( 25.1421, 280.937, -11.6044, 0.83 ) }
    dend_6 { pt3dadd( 26.2557, 284.643, -12.1229, 0.55 ) }
    dend_6 { pt3dadd( 27.4676, 288.294, -12.7146, 0.55 ) }
    dend_6 { pt3dadd( 29.1144, 292.85, -13.5228, 0.83 ) }
    dend_6 { pt3dadd( 29.8633, 294.983, -13.9766, 0.83 ) }
    dend_6 { pt3dadd( 30.8591, 298.369, -14.7991, 0.83 ) }
    dend_6 { pt3dadd( 31.7075, 302.408, -15.7597, 0.83 ) }
    dend_6 { pt3dadd( 32.0596, 305.797, -16.4373, 0.28 ) }
    dend_6 { pt3dadd( 32.066, 307.574, -16.745, 0.83 ) }
    dend_6 { pt3dadd( 31.7421, 312.692, -17.5549, 0.83 ) }
    dend_6 { pt3dadd( 31.2723, 316.795, -18.1158, 0.83 ) }
    dend_6 { pt3dadd( 30.5274, 320.819, -18.5364, 0.83 ) }
    dend_6 { pt3dadd( 29.5385, 324.987, -18.8412, 0.83 ) }
    dend_6 { pt3dadd( 28.7715, 327.77, -18.9899, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.90789, 42.6412, 17.6026, 0.83 ) }
    dend_5 { pt3dadd( 3.97974, 44.6465, 18.2893, 0.83 ) }
    dend_5 { pt3dadd( 2.58492, 46.3523, 18.911, 0.55 ) }
    dend_5 { pt3dadd( 0.345132, 49.1137, 19.9083, 0.55 ) }
    dend_5 { pt3dadd( -1.74673, 51.697, 20.8336, 0.55 ) }
    dend_5 { pt3dadd( -4.12225, 54.3977, 21.8079, 0.55 ) }
    dend_5 { pt3dadd( -5.93528, 56.2324, 22.5144, 0.55 ) }
    dend_5 { pt3dadd( -9.18183, 59.0183, 23.7561, 0.55 ) }
    dend_5 { pt3dadd( -11.5517, 60.7162, 24.5548, 0.55 ) }
    dend_5 { pt3dadd( -14.8362, 62.555, 25.381, 0.55 ) }
    dend_5 { pt3dadd( -20.1161, 64.4917, 26.2479, 0.55 ) }
    dend_5 { pt3dadd( -23.2474, 65.1716, 26.5059, 0.55 ) }
    dend_5 { pt3dadd( -26.6996, 65.3497, 26.5902, 0.55 ) }
    dend_5 { pt3dadd( -28.7564, 65.1319, 26.4851, 0.55 ) }
    dend_5 { pt3dadd( -30.4172, 64.7091, 26.298, 0.55 ) }
    dend_5 { pt3dadd( -33.4917, 63.4509, 25.7352, 0.28 ) }
    dend_5 { pt3dadd( -34.9963, 62.6256, 25.389, 0.83 ) }
    dend_5 { pt3dadd( -37.0394, 61.3706, 24.9075, 0.55 ) }
    dend_5 { pt3dadd( -38.3515, 60.3804, 24.5343, 0.55 ) }
    dend_5 { pt3dadd( -40.0024, 58.7486, 23.9749, 0.55 ) }
    dend_5 { pt3dadd( -41.5095, 56.9575, 23.3845, 0.83 ) }
    dend_5 { pt3dadd( -42.7482, 55.3268, 22.8263, 0.55 ) }
    dend_5 { pt3dadd( -43.753, 53.9257, 22.2896, 0.55 ) }
    dend_5 { pt3dadd( -46.0234, 50.609, 20.9377, 0.55 ) }
    dend_5 { pt3dadd( -48.2427, 47.4686, 19.5364, 0.83 ) }
    dend_5 { pt3dadd( -49.9454, 45.1639, 18.368, 0.83 ) }
    dend_5 { pt3dadd( -51.6505, 42.8484, 16.9255, 0.83 ) }
    dend_5 { pt3dadd( -53.6535, 40.3009, 15.1453, 0.55 ) }
    dend_5 { pt3dadd( -54.6418, 39.1692, 14.3366, 0.28 ) }
    dend_5 { pt3dadd( -55.9419, 37.8711, 13.3945, 0.55 ) }
    dend_5 { pt3dadd( -57.4912, 36.5213, 12.2941, 0.28 ) }
    dend_5 { pt3dadd( -60.8876, 33.8396, 10.0691, 0.55 ) }
    dend_5 { pt3dadd( -63.0381, 32.2917, 8.77043, 0.55 ) }
    dend_5 { pt3dadd( -65.1961, 30.8524, 7.62401, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -67.183, 29.579, 6.66379, 0.55 ) }
    dend_5 { pt3dadd( -70.6684, 27.2677, 5.11179, 0.55 ) }
    dend_5 { pt3dadd( -71.9086, 26.4278, 4.63029, 0.83 ) }
    dend_5 { pt3dadd( -74.1475, 24.8308, 3.86777, 0.55 ) }
    dend_5 { pt3dadd( -77.1915, 22.3502, 2.73555, 0.55 ) }
    dend_5 { pt3dadd( -79.2342, 20.3067, 1.93888, 0.83 ) }
    dend_5 { pt3dadd( -81.3371, 17.7009, 1.17366, 0.55 ) }
    dend_5 { pt3dadd( -82.6756, 15.5764, 0.718499, 0.55 ) }
    dend_5 { pt3dadd( -83.8406, 13.3675, 0.331155, 0.55 ) }
    dend_5 { pt3dadd( -84.3568, 12.1548, 0.167528, 0.83 ) }
    dend_5 { pt3dadd( -85.4807, 8.95673, -0.204938, 0.55 ) }
    dend_5 { pt3dadd( -86.631, 5.15264, -0.585335, 0.28 ) }
    dend_5 { pt3dadd( -88.2065, -0.383136, -1.08463, 0.28 ) }
    dend_5 { pt3dadd( -88.8279, -2.72601, -1.36972, 0.83 ) }
    dend_5 { pt3dadd( -90.0054, -7.34053, -1.97884, 0.28 ) }
    dend_5 { pt3dadd( -90.4301, -8.95488, -2.1853, 0.83 ) }
    dend_5 { pt3dadd( -90.7074, -9.95769, -2.30823, 0.28 ) }
    dend_5 { pt3dadd( -91.0859, -11.5516, -2.50592, 0.83 ) }
    dend_5 { pt3dadd( -91.8542, -14.7256, -2.90688, 0.28 ) }
    dend_5 { pt3dadd( -92.2143, -15.9219, -3.0532, 0.55 ) }
    dend_5 { pt3dadd( -93.2063, -18.5688, -3.39181, 0.28 ) }
    dend_5 { pt3dadd( -93.8258, -20.0849, -3.59562, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.2381, 35.0968, 14.8236, 0.83 ) }
    dend_3 { pt3dadd( 12.6518, 36.6255, 12.4608, 0.83 ) }
    dend_3 { pt3dadd( 13.1946, 38.5629, 9.8037, 0.83 ) }
    dend_3 { pt3dadd( 13.5701, 39.7983, 8.28769, 0.83 ) }
    dend_3 { pt3dadd( 16.1739, 47.2415, 0.0842418, 0.55 ) }
    dend_3 { pt3dadd( 17.0177, 49.2961, -1.87274, 0.55 ) }
    dend_3 { pt3dadd( 17.5426, 50.4093, -2.78065, 0.55 ) }
    dend_3 { pt3dadd( 18.2945, 51.8337, -3.8018, 0.55 ) }
    dend_3 { pt3dadd( 19.1338, 53.2502, -4.52185, 1.11 ) }
    dend_3 { pt3dadd( 20.1982, 54.917, -4.91152, 0.55 ) }
    dend_3 { pt3dadd( 22.1457, 57.7349, -4.84357, 0.55 ) }
    dend_3 { pt3dadd( 23.8115, 60.2662, -4.67659, 0.55 ) }
    dend_3 { pt3dadd( 24.8861, 61.9124, -4.50597, 0.55 ) }
    dend_3 { pt3dadd( 26.2089, 63.9821, -4.11247, 0.83 ) }
    dend_3 { pt3dadd( 27.6963, 66.4949, -3.47364, 0.55 ) }
    dend_3 { pt3dadd( 28.7317, 68.4955, -2.88433, 1.11 ) }
    dend_3 { pt3dadd( 29.7307, 70.5767, -2.18306, 0.55 ) }
    dend_3 { pt3dadd( 30.6755, 72.6205, -1.45661, 0.83 ) }
    dend_3 { pt3dadd( 32.257, 76.1786, -0.227566, 0.55 ) }
    dend_3 { pt3dadd( 33.0718, 78.0467, 0.379449, 0.55 ) }
    dend_3 { pt3dadd( 34.153, 80.6345, 1.14377, 0.55 ) }
    dend_3 { pt3dadd( 35.0093, 82.6721, 1.60878, 0.55 ) }
    dend_3 { pt3dadd( 35.5274, 83.9397, 1.83261, 0.28 ) }
    dend_3 { pt3dadd( 36.5611, 86.4631, 2.13911, 0.55 ) }
    dend_3 { pt3dadd( 37.3301, 88.3676, 2.25419, 0.28 ) }
    dend_3 { pt3dadd( 38.059, 90.0992, 2.31675, 0.55 ) }
    dend_3 { pt3dadd( 39.4482, 93.3573, 2.37653, 0.55 ) }
    dend_3 { pt3dadd( 40.1866, 95.1939, 2.39129, 0.55 ) }
    dend_3 { pt3dadd( 41.2099, 97.749, 2.37499, 0.28 ) }
    dend_3 { pt3dadd( 42.0854, 100.4, 1.61315, 0.83 ) }
    dend_3 { pt3dadd( 42.7715, 102.724, 0.55094, 0.28 ) }
    dend_3 { pt3dadd( 42.9216, 103.237, 0.236131, 0.55 ) }
    dend_3 { pt3dadd( 43.2677, 104.384, -0.741962, 0.28 ) }
    dend_3 { pt3dadd( 43.4869, 105.081, -1.4568, 0.83 ) }
    dend_3 { pt3dadd( 46.2206, 113.391, -11.0042, 0.55 ) }
    dend_3 { pt3dadd( 47.3668, 116.459, -14.6737, 0.55 ) }
    dend_3 { pt3dadd( 47.7407, 117.388, -15.7552, 0.83 ) }
    dend_3 { pt3dadd( 48.7467, 119.563, -17.904, 0.55 ) }
    dend_3 { pt3dadd( 49.3102, 120.632, -18.7059, 0.55 ) }
    dend_3 { pt3dadd( 50.0261, 121.91, -19.0088, 0.83 ) }
    dend_3 { pt3dadd( 50.9342, 123.513, -18.5369, 0.28 ) }
    dend_3 { pt3dadd( 51.2948, 124.382, -18.3843, 0.55 ) }
    dend_3 { pt3dadd( 52.1099, 126.831, -17.736, 0.28 ) }
    dend_3 { pt3dadd( 52.5678, 128.434, -17.0728, 0.55 ) }
    dend_3 { pt3dadd( 52.9422, 129.822, -16.5141, 0.28 ) }
    dend_3 { pt3dadd( 53.1513, 131.209, -16.1018, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.2381, 35.0968, 14.8236, 0.55 ) }
    dend_2 { pt3dadd( 14.3558, 34.3856, 15.9185, 0.55 ) }
    dend_2 { pt3dadd( 17.5336, 33.3184, 17.5616, 0.28 ) }
    dend_2 { pt3dadd( 19.2009, 32.7584, 18.4237, 0.55 ) }
    dend_2 { pt3dadd( 22.2636, 31.7299, 20.0072, 0.55 ) }
    dend_2 { pt3dadd( 26.2679, 30.385, 22.0777, 0.55 ) }
    dend_2 { pt3dadd( 28.4573, 29.6497, 23.2097, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 12.6881, -30.8458, -33.0075, 0.55 ) }
    dend_48 { pt3dadd( 10.2156, -29.9015, -33.9147, 0.55 ) }
    dend_48 { pt3dadd( 9.48224, -29.6655, -34.4082, 0.83 ) }
    dend_48 { pt3dadd( 7.79449, -29.1506, -35.6739, 0.55 ) }
    dend_48 { pt3dadd( 7.10089, -28.9561, -36.1843, 0.55 ) }
    dend_48 { pt3dadd( 4.00601, -28.4016, -38.9514, 0.28 ) }
    dend_48 { pt3dadd( 3.37087, -28.3299, -39.5444, 0.83 ) }
    dend_48 { pt3dadd( 0.863982, -28.3008, -42.277, 0.55 ) }
    dend_48 { pt3dadd( 0.598651, -28.3169, -42.5795, 0.55 ) }
    dend_48 { pt3dadd( -0.103934, -28.4082, -43.4103, 0.83 ) }
    dend_48 { pt3dadd( -3.21964, -28.9274, -47.0319, 0.55 ) }
    dend_48 { pt3dadd( -3.82122, -29.0491, -47.7074, 0.55 ) }
    dend_48 { pt3dadd( -4.49623, -29.1925, -48.4861, 0.83 ) }
    dend_48 { pt3dadd( -5.96563, -29.4796, -50.2917, 0.55 ) }
    dend_48 { pt3dadd( -6.27224, -29.5152, -50.6917, 0.55 ) }
    dend_48 { pt3dadd( -6.82854, -29.5264, -51.4869, 0.55 ) }
    dend_48 { pt3dadd( -9.06399, -29.3151, -54.775, 0.28 ) }
    dend_48 { pt3dadd( -9.66133, -29.2281, -55.7132, 0.83 ) }
    dend_48 { pt3dadd( -11.6643, -28.8118, -58.9264, 0.55 ) }
    dend_48 { pt3dadd( -12.1744, -28.6594, -59.764, 0.83 ) }
    dend_48 { pt3dadd( -14.7615, -27.6357, -64.0071, 0.55 ) }
    dend_48 { pt3dadd( -15.4672, -27.2476, -65.2321, 0.28 ) }
    dend_48 { pt3dadd( -15.871, -26.9648, -65.9597, 0.83 ) }
    dend_48 { pt3dadd( -16.5357, -26.4014, -67.225, 0.55 ) }
    dend_48 { pt3dadd( -16.9889, -25.9095, -68.123, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -17.8969, -24.6578, -70.1601, 0.55 ) }
    dend_48 { pt3dadd( -18.9105, -22.6389, -72.833, 0.28 ) }
    dend_48 { pt3dadd( -19.0434, -22.3265, -73.2345, 0.55 ) }
    dend_48 { pt3dadd( -19.3586, -21.4885, -74.2893, 0.28 ) }
    dend_48 { pt3dadd( -19.4755, -21.147, -74.717, 0.55 ) }
    dend_48 { pt3dadd( -19.8476, -19.9839, -76.139, 0.28 ) }
    dend_48 { pt3dadd( -19.9593, -19.5696, -76.6224, 0.55 ) }
    dend_48 { pt3dadd( -20.3205, -18.2714, -78.1226, 0.28 ) }
    dend_48 { pt3dadd( -20.466, -17.7966, -78.7069, 0.55 ) }
    dend_48 { pt3dadd( -20.8341, -16.7551, -79.9991, 0.28 ) }
    dend_48 { pt3dadd( -20.9325, -16.5234, -80.2892, 0.55 ) }
    dend_48 { pt3dadd( -21.3415, -15.5899, -81.3761, 0.28 ) }
    dend_48 { pt3dadd( -21.486, -15.2664, -81.747, 0.55 ) }
    dend_48 { pt3dadd( -21.974, -14.2625, -82.8411, 0.28 ) }
    dend_48 { pt3dadd( -22.2724, -13.7782, -83.4452, 0.55 ) }
    dend_48 { pt3dadd( -23.2432, -12.3837, -85.195, 0.28 ) }
    dend_48 { pt3dadd( -23.6816, -11.8246, -85.9242, 0.55 ) }
    dend_48 { pt3dadd( -25.0105, -10.3306, -88.159, 0.28 ) }
    dend_48 { pt3dadd( -25.4253, -9.88637, -88.8898, 0.55 ) }
    dend_48 { pt3dadd( -26.7964, -8.49543, -91.5604, 0.28 ) }
    dend_48 { pt3dadd( -27.2778, -8.04505, -92.5279, 0.28 ) }
    dend_48 { pt3dadd( -27.8601, -7.52999, -93.7183, 0.55 ) }
    dend_48 { pt3dadd( -28.9173, -6.65051, -95.7639, 0.28 ) }
    dend_48 { pt3dadd( -29.1075, -6.48125, -96.1167, 0.55 ) }
    dend_48 { pt3dadd( -29.9546, -5.77708, -97.7563, 0.28 ) }
    dend_48 { pt3dadd( -30.3652, -5.43987, -98.5343, 0.83 ) }
    dend_48 { pt3dadd( -31.2396, -4.76017, -100.104, 0.55 ) }
    dend_48 { pt3dadd( -31.8005, -4.31787, -101.124, 0.55 ) }
    dend_48 { pt3dadd( -32.7642, -3.5099, -102.884, 0.55 ) }
    dend_48 { pt3dadd( -35.1121, -1.51412, -107.468, 0.83 ) }
    dend_48 { pt3dadd( -35.9039, -0.830674, -109.133, 0.28 ) }
    dend_48 { pt3dadd( -36.3071, -0.472029, -110.064, 0.55 ) }
    dend_48 { pt3dadd( -37.7366, 0.83948, -113.788, 0.55 ) }
    dend_48 { pt3dadd( -38.0673, 1.18967, -114.802, 0.55 ) }
    dend_48 { pt3dadd( -39.0835, 2.306, -118.266, 0.83 ) }
    dend_48 { pt3dadd( -39.7372, 3.00434, -120.617, 0.28 ) }
    dend_48 { pt3dadd( -40.1894, 3.30984, -122.183, 0.55 ) }
    dend_48 { pt3dadd( -40.7141, 3.46056, -124.102, 0.28 ) }
    dend_48 { pt3dadd( -40.9319, 3.44539, -124.929, 0.83 ) }
    dend_48 { pt3dadd( -42.1787, 3.01154, -129.56, 0.55 ) }
    dend_48 { pt3dadd( -42.6623, 2.71906, -131.325, 0.55 ) }
    dend_48 { pt3dadd( -43.8476, 1.86335, -135.308, 0.55 ) }
    dend_48 { pt3dadd( -45.8829, 0.48333, -141.124, 0.55 ) }
    dend_48 { pt3dadd( -46.4021, 0.14809, -142.458, 0.55 ) }
    dend_48 { pt3dadd( -47.7879, -0.692514, -145.784, 0.55 ) }
    dend_48 { pt3dadd( -49.3305, -1.5375, -149.235, 0.55 ) }
    dend_48 { pt3dadd( -50.6089, -2.15545, -151.899, 0.55 ) }
    dend_48 { pt3dadd( -52.7123, -3.06492, -155.844, 0.55 ) }
    dend_48 { pt3dadd( -55.0126, -3.92352, -159.795, 0.55 ) }
    dend_48 { pt3dadd( -55.536, -4.10281, -160.679, 0.55 ) }
    dend_48 { pt3dadd( -57.8268, -4.9138, -164.552, 0.55 ) }
    dend_48 { pt3dadd( -58.3825, -5.11243, -165.483, 0.28 ) }
    dend_48 { pt3dadd( -58.5133, -5.16388, -165.708, 0.55 ) }
    dend_48 { pt3dadd( -63.5714, -7.39273, -174.479, 0.28 ) }
    dend_48 { pt3dadd( -64.0392, -7.6044, -175.264, 0.83 ) }
    dend_48 { pt3dadd( -66.7968, -8.93976, -179.876, 0.28 ) }
    dend_48 { pt3dadd( -66.9755, -9.02774, -180.17, 0.55 ) }
    dend_48 { pt3dadd( -68.291, -9.6492, -182.314, 0.28 ) }
    dend_48 { pt3dadd( -68.8338, -9.90694, -183.18, 0.55 ) }
    dend_48 { pt3dadd( -69.9748, -10.4946, -184.76, 0.28 ) }
    dend_48 { pt3dadd( -70.3624, -10.7016, -185.308, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 12.6881, -30.8458, -33.0075, 0.55 ) }
    dend_43 { pt3dadd( 14.163, -31.172, -36.176, 0.55 ) }
    dend_43 { pt3dadd( 15.4671, -31.3815, -38.639, 0.55 ) }
    dend_43 { pt3dadd( 18.2995, -31.8607, -44.349, 0.83 ) }
    dend_43 { pt3dadd( 19.0594, -32.0369, -45.8789, 0.83 ) }
    dend_43 { pt3dadd( 19.9569, -32.2752, -47.6501, 0.83 ) }
    dend_43 { pt3dadd( 20.7236, -32.4666, -49.1119, 0.83 ) }
    dend_43 { pt3dadd( 22.1008, -32.7838, -51.6381, 0.83 ) }
    dend_43 { pt3dadd( 24.4153, -33.4173, -55.8665, 0.83 ) }
    dend_43 { pt3dadd( 25.8755, -33.7325, -58.3656, 0.83 ) }
    dend_43 { pt3dadd( 27.421, -34.0184, -61.1868, 0.83 ) }
    dend_43 { pt3dadd( 29.1316, -34.2655, -64.3261, 0.83 ) }
    dend_43 { pt3dadd( 30.6817, -34.4472, -67.183, 0.83 ) }
    dend_43 { pt3dadd( 33.2378, -34.6925, -71.7122, 0.83 ) }
    dend_43 { pt3dadd( 34.8468, -34.757, -74.4232, 0.83 ) }
    dend_43 { pt3dadd( 36.8666, -34.7048, -77.9036, 0.83 ) }
    dend_43 { pt3dadd( 38.1424, -34.6213, -80.1607, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 21.505, -42.8077, 5.20196, 0.55 ) }
    dend_39 { pt3dadd( 23.7176, -42.595, 6.51015, 0.55 ) }
    dend_39 { pt3dadd( 25.5488, -42.5176, 7.64929, 0.28 ) }
    dend_39 { pt3dadd( 26.7009, -42.5488, 8.40412, 0.55 ) }
    dend_39 { pt3dadd( 28.6477, -42.6661, 9.71013, 1.11 ) }
    dend_39 { pt3dadd( 32.1354, -43.0094, 12.2542, 0.55 ) }
    dend_39 { pt3dadd( 33.4575, -43.1746, 13.2835, 0.55 ) }
    dend_39 { pt3dadd( 34.8976, -43.4302, 14.5139, 0.83 ) }
    dend_39 { pt3dadd( 36.4085, -43.728, 15.8748, 0.28 ) }
    dend_39 { pt3dadd( 36.4085, -43.728, 15.8748, 0.83 ) }
    dend_39 { pt3dadd( 38.8999, -44.6396, 18.4394, 0.28 ) }
    dend_39 { pt3dadd( 39.565, -44.9304, 19.1444, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 21.505, -42.8077, 5.20196, 0.83 ) }
    dend_34 { pt3dadd( 24.5272, -46.6424, 4.95155, 0.83 ) }
    dend_34 { pt3dadd( 27.38, -49.4367, 4.44377, 0.55 ) }
    dend_34 { pt3dadd( 29.3788, -50.9654, 3.89531, 0.83 ) }
    dend_34 { pt3dadd( 31.0096, -52.2127, 3.4478, 0.83 ) }
    dend_34 { pt3dadd( 33.2699, -53.9414, 2.82756, 0.83 ) }
    dend_34 { pt3dadd( 35.255, -55.4596, 2.28285, 0.83 ) }
    dend_34 { pt3dadd( 39.5022, -57.8418, 0.902579, 0.83 ) }
    dend_34 { pt3dadd( 42.7788, -59.3013, -0.418981, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -41.7542, -24.7521, 15.8069, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -42.9153, -22.1846, 14.7194, 0.55 ) }
    dend_30 { pt3dadd( -44.3523, -18.6469, 13.2386, 0.83 ) }
    dend_30 { pt3dadd( -46.3295, -13.7052, 11.0519, 0.55 ) }
    dend_30 { pt3dadd( -47.1943, -11.3105, 10.0571, 0.55 ) }
    dend_30 { pt3dadd( -48.3603, -7.81313, 8.67077, 1.11 ) }
    dend_30 { pt3dadd( -49.3608, -4.70045, 7.49864, 0.83 ) }
    dend_30 { pt3dadd( -50.3424, -1.42149, 6.30205, 0.55 ) }
    dend_30 { pt3dadd( -50.7113, -0.0815177, 5.84474, 0.55 ) }
    dend_30 { pt3dadd( -51.7071, 3.18924, 4.99963, 0.55 ) }
    dend_30 { pt3dadd( -51.9156, 3.85297, 4.83005, 1.11 ) }
    dend_30 { pt3dadd( -52.4814, 5.46859, 4.74475, 0.55 ) }
    dend_30 { pt3dadd( -53.1772, 7.08305, 5.16689, 0.83 ) }
    dend_30 { pt3dadd( -53.9557, 8.57085, 5.9227, 0.55 ) }
    dend_30 { pt3dadd( -54.9655, 10.2959, 6.96251, 0.55 ) }
    dend_30 { pt3dadd( -55.7715, 11.5155, 7.6995, 0.83 ) }
    dend_30 { pt3dadd( -59.6253, 17.3885, 10.3674, 0.55 ) }
    dend_30 { pt3dadd( -60.6539, 19.0383, 10.9328, 0.83 ) }
    dend_30 { pt3dadd( -61.9964, 21.1969, 11.4155, 0.55 ) }
    dend_30 { pt3dadd( -63.4981, 23.4577, 11.6981, 0.55 ) }
    dend_30 { pt3dadd( -64.9514, 25.5733, 11.616, 1.11 ) }
    dend_30 { pt3dadd( -67.6227, 29.5882, 10.915, 0.55 ) }
    dend_30 { pt3dadd( -68.4612, 30.9046, 10.5529, 0.55 ) }
    dend_30 { pt3dadd( -70.5477, 34.3968, 9.56489, 0.55 ) }
    dend_30 { pt3dadd( -71.8495, 36.6867, 8.89924, 0.55 ) }
    dend_30 { pt3dadd( -73.5058, 39.6443, 8.12115, 1.11 ) }
    dend_30 { pt3dadd( -75.3736, 42.9392, 7.38473, 0.55 ) }
    dend_30 { pt3dadd( -76.5376, 44.9427, 7.09619, 1.11 ) }
    dend_30 { pt3dadd( -78.0175, 47.428, 6.77458, 0.28 ) }
    dend_30 { pt3dadd( -78.5385, 48.2924, 6.71163, 0.55 ) }
    dend_30 { pt3dadd( -79.4214, 49.6824, 6.70397, 0.28 ) }
    dend_30 { pt3dadd( -80.6882, 51.4626, 6.90717, 0.83 ) }
    dend_30 { pt3dadd( -82.7823, 54.0705, 7.37951, 0.28 ) }
    dend_30 { pt3dadd( -83.5741, 55.0338, 7.63262, 0.55 ) }
    dend_30 { pt3dadd( -86.8804, 58.9518, 8.9662, 0.28 ) }
    dend_30 { pt3dadd( -88.125, 60.4594, 9.52089, 0.83 ) }
    dend_30 { pt3dadd( -89.8797, 62.6529, 10.3268, 0.55 ) }
    dend_30 { pt3dadd( -91.6389, 64.9061, 11.1431, 0.55 ) }
    dend_30 { pt3dadd( -93.4091, 67.2113, 11.9126, 0.55 ) }
    dend_30 { pt3dadd( -94.7276, 69.02, 12.4838, 0.83 ) }
    dend_30 { pt3dadd( -96.2281, 71.2023, 13.0859, 0.28 ) }
    dend_30 { pt3dadd( -97.6059, 73.3578, 13.6147, 0.55 ) }
    dend_30 { pt3dadd( -99.1666, 76.218, 14.0856, 0.55 ) }
    dend_30 { pt3dadd( -99.4238, 76.8058, 14.1506, 0.83 ) }
    dend_30 { pt3dadd( -100.394, 79.5002, 14.0462, 0.28 ) }
    dend_30 { pt3dadd( -100.771, 81.0458, 13.8363, 0.55 ) }
    dend_30 { pt3dadd( -100.993, 82.3291, 13.4453, 0.28 ) }
    dend_30 { pt3dadd( -101.382, 84.9271, 12.1753, 0.55 ) }
    dend_30 { pt3dadd( -101.704, 87.6484, 10.5158, 0.55 ) }
    dend_30 { pt3dadd( -102.171, 91.5072, 7.93724, 0.28 ) }
    dend_30 { pt3dadd( -102.442, 94.0554, 5.7442, 0.83 ) }
    dend_30 { pt3dadd( -102.765, 97.6972, 2.20748, 0.55 ) }
    dend_30 { pt3dadd( -102.943, 100.315, -0.535971, 0.55 ) }
    dend_30 { pt3dadd( -103.031, 101.41, -1.73346, 0.55 ) }
    dend_30 { pt3dadd( -103.211, 103.065, -3.71332, 0.83 ) }
    dend_30 { pt3dadd( -103.863, 107.623, -9.08662, 0.28 ) }
    dend_30 { pt3dadd( -104.052, 108.555, -10.218, 0.83 ) }
    dend_30 { pt3dadd( -104.386, 109.851, -11.6622, 0.28 ) }
    dend_30 { pt3dadd( -104.823, 111.184, -12.9597, 0.55 ) }
    dend_30 { pt3dadd( -106.464, 114.413, -15.7734, 0.83 ) }
    dend_30 { pt3dadd( -107.199, 115.45, -16.195, 0.83 ) }
    dend_30 { pt3dadd( -108.587, 117.12, -15.9754, 0.28 ) }
    dend_30 { pt3dadd( -109.275, 117.918, -15.6596, 0.55 ) }
    dend_30 { pt3dadd( -110.878, 119.8, -14.5399, 0.28 ) }
    dend_30 { pt3dadd( -111.971, 121.261, -13.5425, 0.55 ) }
    dend_30 { pt3dadd( -114.7, 125.358, -9.47262, 0.28 ) }
    dend_30 { pt3dadd( -115.208, 126.182, -8.54893, 0.55 ) }
    dend_30 { pt3dadd( -115.923, 127.544, -7.00557, 0.28 ) }
    dend_30 { pt3dadd( -116.429, 128.649, -5.7256, 0.83 ) }
    dend_30 { pt3dadd( -117.187, 130.487, -3.56604, 0.83 ) }
    dend_30 { pt3dadd( -119.066, 135.901, 2.44069, 0.28 ) }
    dend_30 { pt3dadd( -119.304, 136.725, 3.26789, 0.55 ) }
    dend_30 { pt3dadd( -120.045, 139.641, 6.07032, 0.28 ) }
    dend_30 { pt3dadd( -120.424, 141.32, 7.59768, 0.83 ) }
    dend_30 { pt3dadd( -120.789, 143.166, 9.15787, 0.28 ) }
    dend_30 { pt3dadd( -121.068, 144.713, 10.2805, 0.83 ) }
    dend_30 { pt3dadd( -121.6, 148.105, 12.036, 0.28 ) }
    dend_30 { pt3dadd( -121.815, 149.664, 12.7136, 0.83 ) }
    dend_30 { pt3dadd( -122.178, 152.608, 13.6716, 0.28 ) }
    dend_30 { pt3dadd( -122.404, 154.415, 13.9407, 0.55 ) }
    dend_30 { pt3dadd( -122.629, 156.306, 13.9121, 0.28 ) }
    dend_30 { pt3dadd( -122.901, 158.521, 13.3881, 0.55 ) }
    dend_30 { pt3dadd( -123.262, 161.23, 12.2948, 0.28 ) }
    dend_30 { pt3dadd( -123.409, 162.361, 11.7115, 0.83 ) }
    dend_30 { pt3dadd( -123.78, 165.144, 10.0764, 0.28 ) }
    dend_30 { pt3dadd( -124.109, 167.21, 8.53882, 0.83 ) }
    dend_30 { pt3dadd( -124.708, 170.89, 5.62587, 0.28 ) }
    dend_30 { pt3dadd( -124.903, 172.079, 4.49702, 0.83 ) }
    dend_30 { pt3dadd( -125.236, 174.184, 2.21797, 0.28 ) }
    dend_30 { pt3dadd( -125.357, 175.012, 1.16016, 0.83 ) }
    dend_30 { pt3dadd( -125.994, 179.819, -5.46303, 0.28 ) }
    dend_30 { pt3dadd( -126.26, 181.66, -8.3181, 0.83 ) }
    dend_30 { pt3dadd( -126.823, 185.829, -15.1612, 0.28 ) }
    dend_30 { pt3dadd( -126.983, 187.317, -17.7944, 0.83 ) }
    dend_30 { pt3dadd( -127.273, 189.98, -22.7802, 0.28 ) }
    dend_30 { pt3dadd( -127.369, 190.803, -24.3935, 0.55 ) }
    dend_30 { pt3dadd( -127.722, 193.278, -29.0108, 0.28 ) }
    dend_30 { pt3dadd( -127.883, 194.09, -30.4744, 0.28 ) }
    dend_30 { pt3dadd( -128.409, 196.153, -33.6065, 0.55 ) }
    dend_30 { pt3dadd( -129.733, 199.244, -38.2032, 0.28 ) }
    dend_30 { pt3dadd( -130.874, 201.371, -41.2834, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -131.996, 203.284, -44.3268, 0.28 ) }
    dend_30 { pt3dadd( -132.584, 204.226, -45.8315, 0.55 ) }
    dend_30 { pt3dadd( -133.601, 205.741, -48.0287, 0.28 ) }
    dend_30 { pt3dadd( -138.633, 212.903, -57.1523, 0.28 ) }
    dend_30 { pt3dadd( -139.222, 213.754, -58.1337, 0.83 ) }
    dend_30 { pt3dadd( -143.07, 219.4, -64.241, 0.28 ) }
    dend_30 { pt3dadd( -143.482, 220.021, -64.9406, 0.83 ) }
    dend_30 { pt3dadd( -148.026, 227.365, -72.2913, 0.28 ) }
    dend_30 { pt3dadd( -148.398, 228.113, -72.7312, 0.55 ) }
    dend_30 { pt3dadd( -149.592, 231.575, -72.0061, 0.28 ) }
    dend_30 { pt3dadd( -149.973, 232.638, -71.891, 0.55 ) }
    dend_30 { pt3dadd( -150.608, 234.222, -71.6061, 0.28 ) }
    dend_30 { pt3dadd( -151.158, 235.647, -72.2615, 0.55 ) }
    dend_30 { pt3dadd( -152.027, 237.927, -74.059, 0.28 ) }
    dend_30 { pt3dadd( -152.441, 239.003, -74.9215, 1.11 ) }
    dend_30 { pt3dadd( -153.578, 241.439, -76.7587, 0.28 ) }
    dend_30 { pt3dadd( -154.075, 242.427, -77.5898, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -41.7542, -24.7521, 15.8069, 0.55 ) }
    dend_29 { pt3dadd( -45.9279, -26.8718, 16.1449, 0.55 ) }
    dend_29 { pt3dadd( -47.7912, -27.7037, 16.3259, 0.55 ) }
    dend_29 { pt3dadd( -50.6698, -28.8797, 16.6999, 0.83 ) }
    dend_29 { pt3dadd( -53.6145, -30.085, 17.1237, 0.55 ) }
    dend_29 { pt3dadd( -56.0676, -31.2044, 17.6309, 0.55 ) }
    dend_29 { pt3dadd( -57.2068, -31.786, 17.9127, 0.83 ) }
    dend_29 { pt3dadd( -58.8326, -32.7474, 18.4889, 0.55 ) }
    dend_29 { pt3dadd( -61.6003, -34.527, 19.9888, 0.55 ) }
    dend_29 { pt3dadd( -62.9494, -35.5118, 20.9643, 0.55 ) }
    dend_29 { pt3dadd( -65.3109, -37.4959, 23.0205, 0.55 ) }
    dend_29 { pt3dadd( -66.3161, -38.4431, 24.0866, 0.28 ) }
    dend_29 { pt3dadd( -68.5051, -40.7114, 26.7039, 0.83 ) }
    dend_29 { pt3dadd( -70.9881, -43.3718, 30.0653, 0.55 ) }
    dend_29 { pt3dadd( -71.4258, -43.8335, 30.6987, 0.55 ) }
    dend_29 { pt3dadd( -72.8436, -45.2104, 32.6736, 0.83 ) }
    dend_29 { pt3dadd( -74.5954, -46.6838, 34.8517, 0.55 ) }
    dend_29 { pt3dadd( -75.9111, -47.6938, 36.3806, 0.83 ) }
    dend_29 { pt3dadd( -79.5762, -50.3193, 40.0059, 0.55 ) }
    dend_29 { pt3dadd( -81.2829, -51.4968, 41.3455, 0.83 ) }
    dend_29 { pt3dadd( -83.4626, -52.8783, 42.7874, 0.28 ) }
    dend_29 { pt3dadd( -85.2189, -53.8687, 43.6926, 0.55 ) }
    dend_29 { pt3dadd( -87.1962, -54.8847, 44.3779, 0.55 ) }
    dend_29 { pt3dadd( -90.1425, -56.3043, 45.0405, 0.28 ) }
    dend_29 { pt3dadd( -91.4393, -56.9044, 45.1393, 0.28 ) }
    dend_29 { pt3dadd( -92.5663, -57.3955, 45.1922, 0.55 ) }
    dend_29 { pt3dadd( -95.5979, -58.8518, 45.3654, 0.28 ) }
    dend_29 { pt3dadd( -96.7222, -59.485, 45.5584, 0.55 ) }
    dend_29 { pt3dadd( -97.2682, -59.8299, 45.6736, 0.28 ) }
    dend_29 { pt3dadd( -98.7086, -60.8223, 46.1251, 0.28 ) }
    dend_29 { pt3dadd( -99.6664, -61.4891, 46.4338, 0.55 ) }
    dend_29 { pt3dadd( -101.561, -62.915, 47.0599, 0.28 ) }
    dend_29 { pt3dadd( -103.456, -64.5208, 47.6625, 0.55 ) }
    dend_29 { pt3dadd( -105.792, -66.4877, 48.4659, 0.28 ) }
    dend_29 { pt3dadd( -107.542, -68.0152, 49.1071, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -95.2927, -1.4476, 45.0421, 0.28 ) }
    dend_25 { pt3dadd( -96.8356, -0.147407, 45.0487, 0.28 ) }
    dend_25 { pt3dadd( -97.2489, 0.25074, 45.0504, 0.55 ) }
    dend_25 { pt3dadd( -98.1366, 1.12984, 45.0668, 0.28 ) }
    dend_25 { pt3dadd( -98.3322, 1.34297, 45.0757, 0.55 ) }
    dend_25 { pt3dadd( -100.154, 3.48107, 45.2047, 0.28 ) }
    dend_25 { pt3dadd( -101.564, 5.17663, 45.3784, 0.28 ) }
    dend_25 { pt3dadd( -102.381, 6.28589, 45.5281, 0.28 ) }
    dend_25 { pt3dadd( -102.954, 7.13254, 45.6647, 0.55 ) }
    dend_25 { pt3dadd( -104.223, 9.15241, 45.9408, 0.28 ) }
    dend_25 { pt3dadd( -104.69, 9.91321, 46.063, 0.55 ) }
    dend_25 { pt3dadd( -105.401, 11.1299, 46.3147, 0.28 ) }
    dend_25 { pt3dadd( -105.766, 11.8218, 46.47, 0.55 ) }
    dend_25 { pt3dadd( -106.331, 12.9657, 46.7428, 0.28 ) }
    dend_25 { pt3dadd( -107.026, 14.5491, 47.0912, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -95.2927, -1.4476, 45.0421, 0.28 ) }
    dend_24 { pt3dadd( -92.6277, -2.06312, 43.475, 0.28 ) }
    dend_24 { pt3dadd( -91.8865, -2.20278, 42.9597, 0.83 ) }
    dend_24 { pt3dadd( -88.3098, -2.69317, 40.7382, 0.28 ) }
    dend_24 { pt3dadd( -87.9362, -2.74097, 40.5193, 0.83 ) }
    dend_24 { pt3dadd( -84.6318, -3.14337, 38.8676, 0.28 ) }
    dend_24 { pt3dadd( -83.6519, -3.26873, 38.4272, 0.83 ) }
    dend_24 { pt3dadd( -77.2096, -3.98269, 35.8139, 0.28 ) }
    dend_24 { pt3dadd( -73.5674, -4.37954, 34.4954, 0.28 ) }
    dend_24 { pt3dadd( -72.7649, -4.46202, 34.2579, 1.11 ) }
    dend_24 { pt3dadd( -68.5632, -4.91516, 33.2402, 0.28 ) }
    dend_24 { pt3dadd( -67.328, -5.06304, 32.9424, 0.55 ) }
    dend_24 { pt3dadd( -62.8065, -5.64845, 31.7788, 0.28 ) }
    dend_24 { pt3dadd( -60.7055, -5.96866, 31.2534, 0.28 ) }
    dend_24 { pt3dadd( -59.3986, -6.18972, 30.8518, 0.55 ) }
    dend_24 { pt3dadd( -57.4349, -6.51734, 30.1763, 0.28 ) }
    dend_24 { pt3dadd( -51.6832, -7.60159, 27.726, 0.28 ) }
    dend_24 { pt3dadd( -48.6759, -8.20098, 26.3746, 0.28 ) }
    dend_24 { pt3dadd( -48.0278, -8.37741, 26.065, 0.83 ) }
    dend_24 { pt3dadd( -46.6293, -8.83358, 25.3742, 0.28 ) }
    dend_24 { pt3dadd( -46.6293, -8.83358, 25.3742, 0.83 ) }
    dend_24 { pt3dadd( -43.5962, -9.98506, 23.9897, 0.28 ) }
    dend_24 { pt3dadd( -42.8187, -10.3668, 23.7469, 0.83 ) }
    dend_24 { pt3dadd( -40.553, -11.7672, 22.7678, 0.28 ) }
    dend_24 { pt3dadd( -39.19, -12.6663, 22.1161, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -24.2828, 33.7596, -19.6667, 0.28 ) }
    dend_18 { pt3dadd( -25.7687, 31.9756, -20.6148, 0.28 ) }
    dend_18 { pt3dadd( -26.929, 30.5732, -21.504, 0.83 ) }
    dend_18 { pt3dadd( -28.1903, 29.04, -22.452, 0.55 ) }
    dend_18 { pt3dadd( -29.4968, 27.4552, -23.6411, 1.11 ) }
    dend_18 { pt3dadd( -33.0635, 22.9032, -27.4042, 0.28 ) }
    dend_18 { pt3dadd( -33.3135, 22.5889, -27.7089, 0.83 ) }
    dend_18 { pt3dadd( -34.4429, 21.1573, -29.359, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -35.1385, 20.2562, -30.4907, 0.83 ) }
    dend_18 { pt3dadd( -37.6912, 16.9545, -34.9205, 0.28 ) }
    dend_18 { pt3dadd( -38.3513, 16.1195, -36.0397, 0.83 ) }
    dend_18 { pt3dadd( -40.7809, 13.3221, -40.3868, 0.28 ) }
    dend_18 { pt3dadd( -41.2183, 12.8285, -41.2178, 0.55 ) }
    dend_18 { pt3dadd( -41.9708, 11.9944, -42.6941, 0.55 ) }
    dend_18 { pt3dadd( -42.7467, 11.1408, -44.2828, 0.55 ) }
    dend_18 { pt3dadd( -43.7631, 10.0596, -46.3043, 1.11 ) }
    dend_18 { pt3dadd( -47.8971, 5.7243, -55.2416, 0.55 ) }
    dend_18 { pt3dadd( -48.469, 5.09416, -56.6284, 0.28 ) }
    dend_18 { pt3dadd( -48.6369, 4.92491, -57.0522, 0.55 ) }
    dend_18 { pt3dadd( -49.7584, 3.90098, -59.8845, 0.28 ) }
    dend_18 { pt3dadd( -50.2174, 3.46159, -61.1528, 0.83 ) }
    dend_18 { pt3dadd( -52.8489, 0.89022, -68.8158, 0.28 ) }
    dend_18 { pt3dadd( -52.9683, 0.77637, -69.1427, 0.55 ) }
    dend_18 { pt3dadd( -55.6488, -1.74839, -76.4261, 0.28 ) }
    dend_18 { pt3dadd( -56.1205, -2.22819, -77.7418, 0.55 ) }
    dend_18 { pt3dadd( -57.4988, -3.66894, -81.3889, 0.28 ) }
    dend_18 { pt3dadd( -57.7397, -3.93643, -82.0158, 0.83 ) }
    dend_18 { pt3dadd( -58.9053, -5.29299, -84.8511, 0.28 ) }
    dend_18 { pt3dadd( -59.4865, -5.97967, -86.2534, 0.83 ) }
    dend_18 { pt3dadd( -62.2892, -9.57748, -92.965, 0.28 ) }
    dend_18 { pt3dadd( -62.9935, -10.4479, -94.48, 0.83 ) }
    dend_18 { pt3dadd( -65.8091, -13.7842, -99.9122, 0.55 ) }
    dend_18 { pt3dadd( -66.1662, -14.2192, -100.584, 0.83 ) }
    dend_18 { pt3dadd( -68.1203, -16.6884, -104.168, 0.28 ) }
    dend_18 { pt3dadd( -68.7287, -17.4758, -105.21, 0.55 ) }
    dend_18 { pt3dadd( -71.2027, -20.786, -109.119, 0.28 ) }
    dend_18 { pt3dadd( -72.0826, -22.0036, -110.52, 0.83 ) }
    dend_18 { pt3dadd( -76.3902, -28.0753, -116.869, 0.28 ) }
    dend_18 { pt3dadd( -76.6064, -28.3849, -117.189, 0.83 ) }
    dend_18 { pt3dadd( -77.9162, -30.3484, -119.123, 0.28 ) }
    dend_18 { pt3dadd( -78.2486, -30.8409, -119.639, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -24.2828, 33.7596, -19.6667, 0.55 ) }
    dend_17 { pt3dadd( -25.2222, 35.7024, -19.9609, 0.55 ) }
    dend_17 { pt3dadd( -25.9183, 37.1757, -20.2245, 0.55 ) }
    dend_17 { pt3dadd( -26.6278, 38.7331, -20.6047, 0.28 ) }
    dend_17 { pt3dadd( -27.0906, 39.7649, -20.8843, 1.38 ) }
    dend_17 { pt3dadd( -27.7758, 41.2721, -21.3611, 0.55 ) }
    dend_17 { pt3dadd( -28.5475, 42.9548, -21.9212, 0.55 ) }
    dend_17 { pt3dadd( -28.8901, 43.6691, -22.1494, 0.83 ) }
    dend_17 { pt3dadd( -29.4931, 44.9453, -22.6041, 0.28 ) }
    dend_17 { pt3dadd( -29.8079, 45.6784, -22.876, 0.55 ) }
    dend_17 { pt3dadd( -30.3249, 46.9704, -23.3162, 0.28 ) }
    dend_17 { pt3dadd( -30.6927, 47.9045, -23.5683, 0.83 ) }
    dend_17 { pt3dadd( -31.4091, 49.8159, -23.8827, 0.28 ) }
    dend_17 { pt3dadd( -31.7585, 50.8463, -24.054, 0.55 ) }
    dend_17 { pt3dadd( -32.1248, 52.0831, -24.2395, 0.28 ) }
    dend_17 { pt3dadd( -32.3696, 53.1378, -24.4484, 0.83 ) }
    dend_17 { pt3dadd( -32.695, 55.1225, -24.8805, 0.28 ) }
    dend_17 { pt3dadd( -32.906, 56.8894, -25.3742, 0.83 ) }
    dend_17 { pt3dadd( -33.1045, 59.8782, -26.336, 0.28 ) }
    dend_17 { pt3dadd( -33.1189, 60.9192, -26.7008, 0.83 ) }
    dend_17 { pt3dadd( -33.0715, 63.7808, -27.9356, 0.28 ) }
    dend_17 { pt3dadd( -33.0028, 65.1106, -28.5886, 0.83 ) }
    dend_17 { pt3dadd( -32.8745, 66.7501, -29.4605, 0.28 ) }
    dend_17 { pt3dadd( -32.7687, 68.0453, -30.1986, 0.55 ) }
    dend_17 { pt3dadd( -32.6632, 69.3395, -30.9294, 0.83 ) }
    dend_17 { pt3dadd( -32.5306, 72.1925, -32.5443, 0.28 ) }
    dend_17 { pt3dadd( -32.5364, 73.3017, -33.1439, 0.83 ) }
    dend_17 { pt3dadd( -32.6105, 74.7949, -33.936, 0.83 ) }
    dend_17 { pt3dadd( -32.7623, 76.2778, -34.6778, 0.28 ) }
    dend_17 { pt3dadd( -33.0047, 77.4094, -35.2792, 0.83 ) }
    dend_17 { pt3dadd( -33.3513, 78.5332, -35.8408, 0.28 ) }
    dend_17 { pt3dadd( -33.6535, 79.3279, -36.1806, 0.55 ) }
    dend_17 { pt3dadd( -33.9296, 79.9002, -36.4332, 0.28 ) }
    dend_17 { pt3dadd( -34.6166, 81.0644, -36.8892, 0.55 ) }
    dend_17 { pt3dadd( -36.0257, 83.2057, -37.5209, 0.28 ) }
    dend_17 { pt3dadd( -36.6104, 83.9583, -37.7276, 0.55 ) }
    dend_17 { pt3dadd( -37.3053, 84.7617, -37.9201, 0.28 ) }
    dend_17 { pt3dadd( -38.1074, 85.6165, -38.0953, 0.83 ) }
    dend_17 { pt3dadd( -39.1983, 86.7013, -38.2482, 0.28 ) }
    dend_17 { pt3dadd( -40.292, 87.7511, -38.3177, 0.83 ) }
    dend_17 { pt3dadd( -41.9347, 89.3058, -38.2872, 0.28 ) }
    dend_17 { pt3dadd( -42.5798, 89.9263, -38.3018, 0.83 ) }
    dend_17 { pt3dadd( -43.3183, 90.6659, -38.3318, 0.28 ) }
    dend_17 { pt3dadd( -44.2645, 91.6983, -38.3983, 0.28 ) }
    dend_17 { pt3dadd( -44.6712, 92.2065, -38.4842, 0.55 ) }
    dend_17 { pt3dadd( -45.5471, 93.5273, -38.8161, 0.28 ) }
    dend_17 { pt3dadd( -46.1862, 94.7146, -39.3116, 0.55 ) }
    dend_17 { pt3dadd( -46.5163, 95.4078, -39.6856, 0.55 ) }
    dend_17 { pt3dadd( -46.9684, 96.4512, -40.3219, 0.83 ) }
    dend_17 { pt3dadd( -47.8008, 98.3705, -41.706, 0.28 ) }
    dend_17 { pt3dadd( -48.4003, 99.7696, -42.8171, 0.83 ) }
    dend_17 { pt3dadd( -49.2394, 101.718, -44.5875, 0.28 ) }
    dend_17 { pt3dadd( -49.5628, 102.43, -45.2916, 0.28 ) }
    dend_17 { pt3dadd( -49.9916, 103.422, -46.301, 0.83 ) }
    dend_17 { pt3dadd( -50.7745, 105.299, -48.2809, 0.28 ) }
    dend_17 { pt3dadd( -51.0662, 105.993, -48.9877, 0.83 ) }
    dend_17 { pt3dadd( -52.0906, 108.556, -51.4792, 0.28 ) }
    dend_17 { pt3dadd( -52.5914, 109.803, -52.6677, 1.11 ) }
    dend_17 { pt3dadd( -53.551, 112.257, -55.0395, 0.28 ) }
    dend_17 { pt3dadd( -53.9176, 113.296, -56.0517, 0.55 ) }
    dend_17 { pt3dadd( -54.2209, 114.27, -56.918, 0.28 ) }
    dend_17 { pt3dadd( -54.461, 115.067, -57.5709, 0.55 ) }
    dend_17 { pt3dadd( -55.0163, 117.174, -59.1367, 0.28 ) }
    dend_17 { pt3dadd( -55.2477, 118.016, -59.8292, 0.55 ) }
    dend_17 { pt3dadd( -55.6224, 119.301, -60.9329, 0.28 ) }
    dend_17 { pt3dadd( -55.8481, 120.138, -61.7209, 0.55 ) }
    dend_17 { pt3dadd( -56.0833, 121.148, -62.7262, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -56.3927, 122.645, -64.2442, 0.55 ) }
    dend_17 { pt3dadd( -56.8981, 125.414, -66.8839, 0.28 ) }
    dend_17 { pt3dadd( -57.0919, 126.558, -68.02, 0.55 ) }
    dend_17 { pt3dadd( -57.3412, 128.193, -69.6511, 0.28 ) }
    dend_17 { pt3dadd( -57.4446, 129.104, -70.6016, 0.83 ) }
    dend_17 { pt3dadd( -57.5253, 130.346, -71.8681, 0.28 ) }
    dend_17 { pt3dadd( -57.5541, 131.239, -72.7993, 0.83 ) }
    dend_17 { pt3dadd( -57.565, 132.781, -74.384, 0.28 ) }
    dend_17 { pt3dadd( -57.5747, 133.476, -75.1704, 0.55 ) }
    dend_17 { pt3dadd( -57.5677, 134.452, -76.3195, 0.28 ) }
    dend_17 { pt3dadd( -57.5337, 135.275, -77.3423, 0.55 ) }
    dend_17 { pt3dadd( -57.4571, 137.665, -80.1905, 0.28 ) }
    dend_17 { pt3dadd( -57.4515, 138.493, -81.1306, 0.28 ) }
    dend_17 { pt3dadd( -57.5728, 140.315, -82.9408, 0.55 ) }
    dend_17 { pt3dadd( -57.7283, 141.833, -84.2871, 0.28 ) }
    dend_17 { pt3dadd( -57.8592, 142.653, -84.9112, 0.55 ) }
    dend_17 { pt3dadd( -58.3711, 144.819, -86.273, 0.28 ) }
    dend_17 { pt3dadd( -58.8302, 146.042, -86.8157, 0.83 ) }
    dend_17 { pt3dadd( -59.7206, 147.78, -87.4082, 0.28 ) }
    dend_17 { pt3dadd( -60.0967, 148.3, -87.5367, 0.55 ) }
    dend_17 { pt3dadd( -60.8047, 149.055, -87.7024, 0.28 ) }
    dend_17 { pt3dadd( -61.569, 149.739, -87.8845, 0.55 ) }
    dend_17 { pt3dadd( -63.3629, 151.081, -88.2788, 0.28 ) }
    dend_17 { pt3dadd( -63.782, 151.371, -88.3509, 0.55 ) }
    dend_17 { pt3dadd( -66.4344, 153.183, -88.8715, 0.28 ) }
    dend_17 { pt3dadd( -67.0907, 153.687, -89.0198, 0.55 ) }
    dend_17 { pt3dadd( -67.9657, 154.478, -89.2198, 0.28 ) }
    dend_17 { pt3dadd( -68.8264, 155.321, -89.4308, 0.55 ) }
    dend_17 { pt3dadd( -70.1599, 156.825, -89.7738, 0.28 ) }
    dend_17 { pt3dadd( -70.9485, 157.804, -89.9605, 0.55 ) }
    dend_17 { pt3dadd( -72.448, 160.127, -90.0867, 0.28 ) }
    dend_17 { pt3dadd( -72.9758, 161.079, -90.132, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -1.73279, 66.6384, -17.9818, 0.55 ) }
    dend_15 { pt3dadd( 0.128651, 68.1759, -19.0585, 0.55 ) }
    dend_15 { pt3dadd( 2.58691, 70.6097, -22.1467, 0.55 ) }
    dend_15 { pt3dadd( 3.50549, 71.6298, -23.7829, 0.83 ) }
    dend_15 { pt3dadd( 4.23345, 72.4669, -25.2338, 0.83 ) }
    dend_15 { pt3dadd( 6.20914, 74.8351, -29.4958, 0.28 ) }
    dend_15 { pt3dadd( 6.93791, 75.7267, -31.0695, 0.83 ) }
    dend_15 { pt3dadd( 9.15411, 78.998, -37.972, 0.55 ) }
    dend_15 { pt3dadd( 9.51057, 79.7157, -39.7367, 0.28 ) }
    dend_15 { pt3dadd( 9.62734, 80.0449, -40.6354, 0.28 ) }
    dend_15 { pt3dadd( 9.72802, 80.5831, -42.2173, 0.55 ) }
    dend_15 { pt3dadd( 9.76385, 81.2266, -44.0786, 0.55 ) }
    dend_15 { pt3dadd( 9.76155, 83.5036, -50.1946, 0.28 ) }
    dend_15 { pt3dadd( 9.77252, 84.6054, -52.8361, 0.83 ) }
    dend_15 { pt3dadd( 9.84224, 87.0429, -58.3535, 0.83 ) }
    dend_15 { pt3dadd( 9.94509, 89.2077, -63.0601, 0.83 ) }
    dend_15 { pt3dadd( 10.1468, 91.9923, -68.9658, 0.28 ) }
    dend_15 { pt3dadd( 10.2508, 92.9705, -70.9557, 0.28 ) }
    dend_15 { pt3dadd( 10.359, 93.5208, -71.9296, 0.55 ) }
    dend_15 { pt3dadd( 11.1242, 96.0052, -75.8737, 0.28 ) }
    dend_15 { pt3dadd( 11.281, 96.3832, -76.4057, 0.55 ) }
    dend_15 { pt3dadd( 12.6227, 98.8486, -79.7518, 0.28 ) }
    dend_15 { pt3dadd( 13.1675, 99.6706, -81.1722, 0.55 ) }
    dend_15 { pt3dadd( 13.7181, 100.391, -82.6494, 0.28 ) }
    dend_15 { pt3dadd( 13.9392, 100.657, -83.2411, 0.55 ) }
    dend_15 { pt3dadd( 15.5891, 102.35, -87.3896, 0.28 ) }
    dend_15 { pt3dadd( 16.1254, 102.838, -88.6198, 0.55 ) }
    dend_15 { pt3dadd( 19.1779, 105.213, -95.1147, 0.28 ) }
    dend_15 { pt3dadd( 20.0735, 105.887, -96.9426, 0.28 ) }
    dend_15 { pt3dadd( 21.0287, 106.591, -98.7648, 0.55 ) }
    dend_15 { pt3dadd( 23.0568, 108.083, -102.667, 0.28 ) }
    dend_15 { pt3dadd( 23.7168, 108.554, -103.845, 0.55 ) }
    dend_15 { pt3dadd( 26.4448, 110.449, -108.569, 0.28 ) }
    dend_15 { pt3dadd( 27.8493, 111.38, -110.841, 0.28 ) }
    dend_15 { pt3dadd( 29.0886, 112.191, -112.886, 0.83 ) }
    dend_15 { pt3dadd( 33.5438, 114.936, -119.863, 0.28 ) }
    dend_15 { pt3dadd( 34.7365, 115.631, -121.623, 0.28 ) }
    dend_15 { pt3dadd( 36.4342, 116.574, -123.959, 0.55 ) }
    dend_15 { pt3dadd( 37.9401, 117.381, -125.827, 0.28 ) }
    dend_15 { pt3dadd( 39.024, 117.895, -127.173, 0.55 ) }
    dend_15 { pt3dadd( 40.0968, 118.375, -128.393, 0.28 ) }
    dend_15 { pt3dadd( 40.7905, 118.687, -128.89, 0.55 ) }
    dend_15 { pt3dadd( 42.4216, 119.483, -130.074, 0.28 ) }
    dend_15 { pt3dadd( 44.7575, 120.851, -131.423, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -1.73279, 66.6384, -17.9818, 0.55 ) }
    dend_14 { pt3dadd( -2.41737, 68.7958, -17.4031, 0.55 ) }
    dend_14 { pt3dadd( -2.77843, 70.2463, -16.9109, 0.55 ) }
    dend_14 { pt3dadd( -2.93, 70.8626, -16.6964, 0.55 ) }
    dend_14 { pt3dadd( -3.16055, 71.8479, -16.3598, 0.55 ) }
    dend_14 { pt3dadd( -3.34788, 72.678, -16.1154, 0.55 ) }
    dend_14 { pt3dadd( -3.78515, 74.6741, -15.5298, 0.28 ) }
    dend_14 { pt3dadd( -3.92953, 75.3784, -15.3148, 0.55 ) }
    dend_14 { pt3dadd( -4.10036, 76.3692, -14.9321, 0.55 ) }
    dend_14 { pt3dadd( -4.2041, 76.8477, -14.7125, 0.83 ) }
    dend_14 { pt3dadd( -4.50752, 77.9287, -14.1699, 0.28 ) }
    dend_14 { pt3dadd( -4.77927, 78.8364, -13.7211, 0.83 ) }
    dend_14 { pt3dadd( -5.32096, 80.486, -12.9069, 0.28 ) }
    dend_14 { pt3dadd( -5.38451, 80.6766, -12.7892, 0.83 ) }
    dend_14 { pt3dadd( -5.81889, 82.1362, -11.7403, 0.55 ) }
    dend_14 { pt3dadd( -6.00387, 82.8016, -11.208, 0.55 ) }
    dend_14 { pt3dadd( -6.25301, 83.782, -10.3911, 0.83 ) }
    dend_14 { pt3dadd( -6.66894, 85.5703, -8.86332, 0.55 ) }
    dend_14 { pt3dadd( -6.95425, 86.945, -7.67219, 0.83 ) }
    dend_14 { pt3dadd( -7.08265, 87.6431, -7.05074, 0.28 ) }
    dend_14 { pt3dadd( -7.1688, 88.2582, -6.53506, 0.83 ) }
    dend_14 { pt3dadd( -7.30046, 89.1718, -5.77725, 0.83 ) }
    dend_14 { pt3dadd( -7.5771, 90.7726, -4.51102, 0.83 ) }
    dend_14 { pt3dadd( -7.81681, 92.1086, -3.67062, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -7.91505, 92.5639, -3.41836, 0.83 ) }
    dend_14 { pt3dadd( -8.24686, 93.9383, -2.63656, 0.83 ) }
    dend_14 { pt3dadd( -8.55666, 95.1424, -1.93884, 0.28 ) }
    dend_14 { pt3dadd( -8.72378, 95.7695, -1.5536, 0.55 ) }
    dend_14 { pt3dadd( -9.0672, 97.013, -0.843015, 0.28 ) }
    dend_14 { pt3dadd( -9.49695, 98.2942, -0.0725308, 0.55 ) }
    dend_14 { pt3dadd( -10.1219, 99.9686, 1.01072, 0.28 ) }
    dend_14 { pt3dadd( -10.2788, 100.345, 1.27604, 0.83 ) }
    dend_14 { pt3dadd( -10.5975, 101.104, 1.80035, 0.28 ) }
    dend_14 { pt3dadd( -10.9874, 102.015, 2.46442, 0.55 ) }
    dend_14 { pt3dadd( -11.542, 103.347, 3.55888, 0.28 ) }
    dend_14 { pt3dadd( -11.6382, 103.603, 3.75813, 0.55 ) }
    dend_14 { pt3dadd( -11.8392, 104.157, 4.21227, 0.28 ) }
    dend_14 { pt3dadd( -12.0299, 104.74, 4.75608, 0.83 ) }
    dend_14 { pt3dadd( -12.2237, 105.51, 5.52189, 0.28 ) }
    dend_14 { pt3dadd( -12.4023, 106.47, 6.5432, 0.55 ) }
    dend_14 { pt3dadd( -12.5143, 107.125, 7.32396, 0.28 ) }
    dend_14 { pt3dadd( -12.5826, 107.531, 7.78768, 0.83 ) }
    dend_14 { pt3dadd( -12.6984, 108.394, 8.72006, 0.83 ) }
    dend_14 { pt3dadd( -12.7976, 109.266, 9.59271, 0.55 ) }
    dend_14 { pt3dadd( -12.829, 109.744, 10.0191, 0.83 ) }
    dend_14 { pt3dadd( -12.9585, 112.422, 12.159, 0.55 ) }
    dend_14 { pt3dadd( -12.9902, 113.433, 12.862, 0.83 ) }
    dend_14 { pt3dadd( -13.0053, 116.76, 14.7793, 0.28 ) }
    dend_14 { pt3dadd( -12.9939, 117.468, 15.029, 0.55 ) }
    dend_14 { pt3dadd( -12.9174, 118.873, 15.2606, 0.28 ) }
    dend_14 { pt3dadd( -12.8446, 119.714, 15.3032, 0.83 ) }
    dend_14 { pt3dadd( -12.6338, 121.436, 15.0623, 0.28 ) }
    dend_14 { pt3dadd( -12.5078, 122.471, 14.7942, 0.55 ) }
    dend_14 { pt3dadd( -12.12, 125.336, 13.3492, 0.28 ) }
    dend_14 { pt3dadd( -11.9694, 126.592, 12.6513, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 28.7715, 327.77, -18.9899, 0.55 ) }
    dend_10 { pt3dadd( 29.2082, 330.357, -19.2081, 0.55 ) }
    dend_10 { pt3dadd( 29.5858, 333.452, -19.5127, 0.55 ) }
    dend_10 { pt3dadd( 29.9174, 336.43, -19.8095, 0.83 ) }
    dend_10 { pt3dadd( 30.1258, 338.491, -19.9987, 0.55 ) }
    dend_10 { pt3dadd( 30.3799, 341.055, -20.1979, 1.11 ) }
    dend_10 { pt3dadd( 30.8197, 344.986, -20.4541, 0.55 ) }
    dend_10 { pt3dadd( 31.1707, 347.77, -20.5924, 1.11 ) }
    dend_10 { pt3dadd( 31.5098, 349.865, -20.7334, 0.83 ) }
    dend_10 { pt3dadd( 31.9835, 351.823, -20.8715, 0.55 ) }
    dend_10 { pt3dadd( 32.8861, 354.358, -21.0324, 0.55 ) }
    dend_10 { pt3dadd( 33.9584, 356.513, -21.1746, 0.83 ) }
    dend_10 { pt3dadd( 35.5004, 358.707, -21.4005, 0.55 ) }
    dend_10 { pt3dadd( 37.3857, 360.822, -21.7289, 0.83 ) }
    dend_10 { pt3dadd( 39.0457, 362.391, -22.0304, 0.83 ) }
    dend_10 { pt3dadd( 40.5943, 363.654, -22.3244, 0.83 ) }
    dend_10 { pt3dadd( 41.9349, 364.648, -22.563, 1.11 ) }
    dend_10 { pt3dadd( 44.8197, 366.713, -23.1468, 0.83 ) }
    dend_10 { pt3dadd( 46.0551, 367.61, -23.4025, 0.55 ) }
    dend_10 { pt3dadd( 48.0179, 369.061, -23.7469, 0.83 ) }
    dend_10 { pt3dadd( 50.8824, 371.327, -24.2692, 0.55 ) }
    dend_10 { pt3dadd( 52.6908, 372.74, -24.5806, 1.11 ) }
    dend_10 { pt3dadd( 55.41, 374.893, -24.993, 0.55 ) }
    dend_10 { pt3dadd( 56.3433, 375.665, -25.092, 0.55 ) }
    dend_10 { pt3dadd( 57.6123, 376.755, -25.2209, 0.55 ) }
    dend_10 { pt3dadd( 60.434, 379.42, -25.4434, 0.55 ) }
    dend_10 { pt3dadd( 61.5016, 380.552, -25.4687, 0.28 ) }
    dend_10 { pt3dadd( 62.1501, 381.341, -25.4547, 0.55 ) }
    dend_10 { pt3dadd( 63.2687, 382.885, -25.3408, 0.28 ) }
    dend_10 { pt3dadd( 64.1723, 384.26, -25.2628, 0.83 ) }
    dend_10 { pt3dadd( 65.7389, 386.873, -25.1446, 0.55 ) }
    dend_10 { pt3dadd( 66.2406, 387.753, -25.0877, 0.83 ) }
    dend_10 { pt3dadd( 67.2741, 389.649, -25.0028, 0.55 ) }
    dend_10 { pt3dadd( 67.9432, 390.876, -24.9776, 0.83 ) }
    dend_10 { pt3dadd( 69.9753, 394.604, -24.969, 0.28 ) }
    dend_10 { pt3dadd( 71.3374, 397.065, -25.0196, 0.83 ) }
    dend_10 { pt3dadd( 72.76, 399.604, -25.1143, 0.28 ) }
    dend_10 { pt3dadd( 74.004, 401.843, -25.2237, 0.55 ) }
    dend_10 { pt3dadd( 75.2841, 404.209, -25.3632, 0.55 ) }
    dend_10 { pt3dadd( 76.3622, 406.36, -25.5738, 0.55 ) }
    dend_10 { pt3dadd( 76.8972, 407.558, -25.7389, 0.28 ) }
    dend_10 { pt3dadd( 77.3604, 408.721, -25.9282, 0.55 ) }
    dend_10 { pt3dadd( 78.1187, 410.987, -26.3247, 0.28 ) }
    dend_10 { pt3dadd( 78.5163, 412.324, -26.6412, 0.55 ) }
    dend_10 { pt3dadd( 79.1658, 414.757, -27.3635, 0.28 ) }
    dend_10 { pt3dadd( 79.5802, 416.413, -27.9005, 0.28 ) }
    dend_10 { pt3dadd( 80.1422, 418.728, -28.6839, 0.83 ) }
    dend_10 { pt3dadd( 80.6259, 420.802, -29.4271, 0.83 ) }
    dend_10 { pt3dadd( 81.5463, 424.761, -30.8457, 0.55 ) }
    dend_10 { pt3dadd( 82.0953, 426.984, -31.5873, 0.55 ) }
    dend_10 { pt3dadd( 82.4994, 428.424, -31.9867, 0.55 ) }
    dend_10 { pt3dadd( 82.7787, 429.239, -32.2154, 0.28 ) }
    dend_10 { pt3dadd( 83.221, 430.382, -32.521, 0.55 ) }
    dend_10 { pt3dadd( 83.64, 431.353, -32.7258, 0.28 ) }
    dend_10 { pt3dadd( 84.0326, 432.263, -32.9273, 1.11 ) }
    dend_10 { pt3dadd( 85.1481, 434.998, -33.8356, 0.55 ) }
    dend_10 { pt3dadd( 85.842, 436.997, -34.6238, 0.55 ) }
    dend_10 { pt3dadd( 86.3752, 438.751, -35.448, 0.28 ) }
    dend_10 { pt3dadd( 86.6378, 439.741, -36.0128, 0.83 ) }
    dend_10 { pt3dadd( 87.3652, 442.576, -37.8837, 0.55 ) }
    dend_10 { pt3dadd( 87.8359, 444.405, -39.1792, 0.83 ) }
    dend_10 { pt3dadd( 88.3571, 446.412, -40.7244, 0.83 ) }
    dend_10 { pt3dadd( 88.9734, 448.429, -42.3721, 0.55 ) }
    dend_10 { pt3dadd( 89.5431, 450.004, -43.7348, 0.28 ) }
    dend_10 { pt3dadd( 90.1571, 451.534, -45.0652, 0.55 ) }
    dend_10 { pt3dadd( 90.7499, 452.938, -46.2715, 0.55 ) }
    dend_10 { pt3dadd( 91.5681, 454.771, -47.9126, 1.11 ) }
    dend_10 { pt3dadd( 92.6561, 457.189, -50.0231, 0.55 ) }
    dend_10 { pt3dadd( 93.1105, 458.243, -50.8795, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 93.5777, 459.383, -51.8284, 0.55 ) }
    dend_10 { pt3dadd( 94.5461, 462.085, -54.1398, 0.55 ) }
    dend_10 { pt3dadd( 95.0344, 463.447, -55.3402, 0.83 ) }
    dend_10 { pt3dadd( 96.0132, 466.35, -57.739, 0.28 ) }
    dend_10 { pt3dadd( 96.2842, 467.224, -58.4261, 0.55 ) }
    dend_10 { pt3dadd( 97.063, 469.728, -60.2835, 0.28 ) }
    dend_10 { pt3dadd( 97.463, 470.953, -61.139, 0.55 ) }
    dend_10 { pt3dadd( 98.1174, 472.885, -62.3346, 0.28 ) }
    dend_10 { pt3dadd( 98.699, 474.833, -63.4227, 0.55 ) }
    dend_10 { pt3dadd( 98.9845, 475.851, -63.9313, 0.28 ) }
    dend_10 { pt3dadd( 99.4448, 477.531, -64.6695, 0.55 ) }
    dend_10 { pt3dadd( 100.237, 480.347, -65.6193, 0.55 ) }
    dend_10 { pt3dadd( 100.675, 481.798, -66.124, 0.28 ) }
    dend_10 { pt3dadd( 100.993, 483.082, -66.607, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 28.7715, 327.77, -18.9899, 0.55 ) }
    dend_7 { pt3dadd( 27.416, 329.398, -20.1115, 0.55 ) }
    dend_7 { pt3dadd( 25.802, 331.431, -21.3304, 1.11 ) }
    dend_7 { pt3dadd( 23.9602, 333.573, -22.5519, 0.55 ) }
    dend_7 { pt3dadd( 23.3702, 334.278, -22.9908, 0.83 ) }
    dend_7 { pt3dadd( 21.9792, 335.994, -24.0711, 0.55 ) }
    dend_7 { pt3dadd( 20.815, 337.362, -24.9548, 0.55 ) }
    dend_7 { pt3dadd( 19.9066, 338.409, -25.643, 0.83 ) }
    dend_7 { pt3dadd( 17.199, 341.438, -27.6726, 0.55 ) }
    dend_7 { pt3dadd( 15.1454, 343.653, -29.08, 0.55 ) }
    dend_7 { pt3dadd( 14.428, 344.426, -29.6026, 0.83 ) }
    dend_7 { pt3dadd( 12.4658, 346.501, -31.0554, 0.55 ) }
    dend_7 { pt3dadd( 12.1501, 346.83, -31.2974, 0.83 ) }
    dend_7 { pt3dadd( 11.1052, 347.952, -32.0501, 0.28 ) }
    dend_7 { pt3dadd( 10.9324, 348.15, -32.1478, 0.55 ) }
    dend_7 { pt3dadd( 9.82328, 349.362, -32.5339, 0.28 ) }
    dend_7 { pt3dadd( 9.12711, 350.168, -32.7267, 0.55 ) }
    dend_7 { pt3dadd( 8.33246, 351.055, -32.9628, 0.55 ) }
    dend_7 { pt3dadd( 6.16339, 353.353, -33.65, 0.55 ) }
    dend_7 { pt3dadd( 4.69085, 354.921, -34.1542, 0.55 ) }
    dend_7 { pt3dadd( 3.58628, 356.17, -34.6582, 0.83 ) }
    dend_7 { pt3dadd( 2.11855, 357.923, -35.4459, 0.83 ) }
    dend_7 { pt3dadd( 0.360972, 360.275, -36.7544, 0.55 ) }
    dend_7 { pt3dadd( -0.846147, 362.042, -37.8787, 0.55 ) }
    dend_7 { pt3dadd( -2.06267, 364.008, -39.2634, 1.11 ) }
    dend_7 { pt3dadd( -3.28604, 366.409, -40.9448, 0.55 ) }
    dend_7 { pt3dadd( -3.5814, 367.104, -41.4321, 0.83 ) }
    dend_7 { pt3dadd( -4.4121, 369.485, -42.9415, 0.28 ) }
    dend_7 { pt3dadd( -4.69578, 370.755, -43.9348, 0.55 ) }
    dend_7 { pt3dadd( -4.82638, 371.6, -44.7218, 0.28 ) }
    dend_7 { pt3dadd( -4.90408, 372.424, -45.5345, 0.83 ) }
    dend_7 { pt3dadd( -4.95949, 374.183, -47.3121, 0.28 ) }
    dend_7 { pt3dadd( -4.95035, 375.775, -48.9537, 0.83 ) }
    dend_7 { pt3dadd( -4.6293, 381.958, -55.2726, 0.55 ) }
    dend_7 { pt3dadd( -4.52464, 383.148, -56.4933, 0.55 ) }
    dend_7 { pt3dadd( -4.39456, 384.228, -57.5824, 0.83 ) }
    dend_7 { pt3dadd( -4.20934, 385.614, -58.901, 0.28 ) }
    dend_7 { pt3dadd( -4.10466, 386.298, -59.4576, 0.55 ) }
    dend_7 { pt3dadd( -3.97085, 387.339, -60.1333, 0.28 ) }
    dend_7 { pt3dadd( -3.86633, 388.793, -60.6008, 0.55 ) }
    dend_7 { pt3dadd( -3.75603, 390.843, -61.3058, 0.55 ) }
    dend_7 { pt3dadd( -3.70861, 392.015, -61.7077, 0.55 ) }
    dend_7 { pt3dadd( -3.65989, 393.325, -62.1307, 0.83 ) }
    dend_7 { pt3dadd( -3.55198, 395.415, -62.8059, 0.28 ) }
    dend_7 { pt3dadd( -3.45714, 397.173, -63.3499, 0.83 ) }
    dend_7 { pt3dadd( -3.27418, 399.341, -63.9497, 0.55 ) }
    dend_7 { pt3dadd( -3.20284, 400.208, -64.1599, 0.55 ) }
    dend_7 { pt3dadd( -3.04859, 401.86, -64.4753, 0.83 ) }
    dend_7 { pt3dadd( -2.98744, 402.734, -64.5944, 0.55 ) }
    dend_7 { pt3dadd( -2.91162, 404.391, -64.6615, 0.83 ) }
    dend_7 { pt3dadd( -2.95535, 405.925, -64.7188, 0.28 ) }
    dend_7 { pt3dadd( -3.00291, 406.557, -64.8071, 0.28 ) }
    dend_7 { pt3dadd( -3.21812, 408.25, -65.2285, 0.28 ) }
    dend_7 { pt3dadd( -3.31891, 408.977, -65.4843, 0.83 ) }
    dend_7 { pt3dadd( -3.56727, 410.657, -66.2882, 0.55 ) }
    dend_7 { pt3dadd( -3.80804, 412.482, -67.5936, 0.83 ) }
    dend_7 { pt3dadd( -4.19795, 414.939, -69.7954, 0.28 ) }
    dend_7 { pt3dadd( -4.34099, 415.689, -70.6408, 0.55 ) }
    dend_7 { pt3dadd( -4.53073, 416.415, -71.6925, 0.28 ) }
    dend_7 { pt3dadd( -4.72708, 416.932, -72.5019, 0.83 ) }
    dend_7 { pt3dadd( -5.54793, 418.827, -75.5519, 0.83 ) }
    dend_7 { pt3dadd( -5.84007, 419.438, -76.5177, 0.83 ) }
    dend_7 { pt3dadd( -6.85885, 421.353, -79.3474, 0.83 ) }
    dend_7 { pt3dadd( -8.10152, 423.572, -82.5196, 0.55 ) }
    dend_7 { pt3dadd( -8.887, 424.887, -84.3902, 0.55 ) }
    dend_7 { pt3dadd( -9.60478, 426.081, -86.0279, 0.55 ) }
    dend_7 { pt3dadd( -10.4041, 427.406, -87.7341, 0.55 ) }
    dend_7 { pt3dadd( -11.5112, 429.477, -90.2149, 0.55 ) }
    dend_7 { pt3dadd( -12.391, 431.212, -92.0297, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 38.1424, -34.6213, -80.1607, 0.55 ) }
    dend_45 { pt3dadd( 38.2257, -34.4052, -80.7266, 0.55 ) }
    dend_45 { pt3dadd( 38.297, -34.1681, -81.3037, 0.83 ) }
    dend_45 { pt3dadd( 38.4314, -33.6675, -82.4813, 0.28 ) }
    dend_45 { pt3dadd( 38.4977, -33.4014, -83.0704, 0.83 ) }
    dend_45 { pt3dadd( 38.6646, -32.7361, -84.4618, 0.28 ) }
    dend_45 { pt3dadd( 38.7255, -32.502, -84.9257, 0.55 ) }
    dend_45 { pt3dadd( 38.8366, -31.9652, -85.9908, 0.55 ) }
    dend_45 { pt3dadd( 38.945, -31.3616, -87.0707, 0.55 ) }
    dend_45 { pt3dadd( 39.046, -30.8295, -87.9589, 0.28 ) }
    dend_45 { pt3dadd( 39.09, -30.6058, -88.3118, 0.28 ) }
    dend_45 { pt3dadd( 39.1381, -30.3763, -88.6566, 0.55 ) }
    dend_45 { pt3dadd( 39.2583, -29.8907, -89.3746, 0.28 ) }
    dend_45 { pt3dadd( 39.454, -29.212, -90.2741, 0.55 ) }
    dend_45 { pt3dadd( 39.6494, -28.3932, -91.3807, 0.28 ) }
    dend_45 { pt3dadd( 39.6982, -28.1834, -91.6742, 0.55 ) }
    dend_45 { pt3dadd( 39.868, -27.301, -92.8864, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 39.9649, -26.7175, -93.686, 0.28 ) }
    dend_45 { pt3dadd( 40.0605, -26.05, -94.6277, 0.83 ) }
    dend_45 { pt3dadd( 40.1567, -24.9861, -96.1795, 0.55 ) }
    dend_45 { pt3dadd( 40.1746, -24.7292, -96.5648, 0.55 ) }
    dend_45 { pt3dadd( 40.1961, -24.2313, -97.3888, 0.55 ) }
    dend_45 { pt3dadd( 40.221, -23.758, -98.2465, 0.83 ) }
    dend_45 { pt3dadd( 40.2789, -23.0942, -99.5195, 0.28 ) }
    dend_45 { pt3dadd( 40.3152, -22.9014, -99.8885, 0.55 ) }
    dend_45 { pt3dadd( 40.4921, -22.398, -100.733, 0.28 ) }
    dend_45 { pt3dadd( 40.53, -22.3089, -100.882, 0.55 ) }
    dend_45 { pt3dadd( 40.7581, -21.9237, -101.521, 0.55 ) }
    dend_45 { pt3dadd( 41.1534, -21.3499, -102.366, 0.28 ) }
    dend_45 { pt3dadd( 41.3118, -21.1346, -102.646, 0.55 ) }
    dend_45 { pt3dadd( 41.716, -20.6259, -103.298, 0.28 ) }
    dend_45 { pt3dadd( 41.8895, -20.4172, -103.55, 0.55 ) }
    dend_45 { pt3dadd( 42.2812, -19.9968, -104.082, 0.28 ) }
    dend_45 { pt3dadd( 42.5471, -19.7693, -104.417, 0.55 ) }
    dend_45 { pt3dadd( 42.7054, -19.6571, -104.591, 0.55 ) }
    dend_45 { pt3dadd( 43.1556, -19.3266, -105.049, 0.28 ) }
    dend_45 { pt3dadd( 43.4594, -19.0898, -105.331, 0.28 ) }
    dend_45 { pt3dadd( 43.7463, -18.8303, -105.612, 0.55 ) }
    dend_45 { pt3dadd( 44.414, -18.1333, -106.296, 0.28 ) }
    dend_45 { pt3dadd( 44.8514, -17.5849, -106.775, 0.55 ) }
    dend_45 { pt3dadd( 45.2388, -17.0106, -107.211, 0.55 ) }
    dend_45 { pt3dadd( 45.5676, -16.4142, -107.598, 0.83 ) }
    dend_45 { pt3dadd( 46.0154, -15.4306, -108.144, 0.28 ) }
    dend_45 { pt3dadd( 46.1613, -15.0249, -108.337, 0.28 ) }
    dend_45 { pt3dadd( 46.3731, -14.2174, -108.644, 0.55 ) }
    dend_45 { pt3dadd( 46.5508, -13.3516, -108.925, 0.28 ) }
    dend_45 { pt3dadd( 46.621, -12.9571, -109.035, 0.55 ) }
    dend_45 { pt3dadd( 46.7246, -12.3123, -109.173, 0.55 ) }
    dend_45 { pt3dadd( 46.8762, -11.3431, -109.326, 0.28 ) }
    dend_45 { pt3dadd( 46.963, -10.7542, -109.413, 0.55 ) }
    dend_45 { pt3dadd( 47.0812, -9.84332, -109.544, 0.28 ) }
    dend_45 { pt3dadd( 47.194, -8.8153, -109.7, 0.55 ) }
    dend_45 { pt3dadd( 47.2978, -7.75563, -109.868, 0.55 ) }
    dend_45 { pt3dadd( 47.3351, -7.28207, -109.944, 0.55 ) }
    dend_45 { pt3dadd( 47.3824, -6.33827, -110.112, 0.55 ) }
    dend_45 { pt3dadd( 47.4122, -5.47283, -110.302, 0.55 ) }
    dend_45 { pt3dadd( 47.416, -4.59189, -110.516, 0.55 ) }
    dend_45 { pt3dadd( 47.4079, -3.75792, -110.728, 0.28 ) }
    dend_45 { pt3dadd( 47.3987, -3.3248, -110.857, 0.55 ) }
    dend_45 { pt3dadd( 47.3663, -1.96537, -111.281, 0.28 ) }
    dend_45 { pt3dadd( 47.3186, -1.06521, -111.59, 0.28 ) }
    dend_45 { pt3dadd( 47.2811, -0.617367, -111.752, 0.55 ) }
    dend_45 { pt3dadd( 47.2111, 0.17236, -112.052, 0.28 ) }
    dend_45 { pt3dadd( 47.1429, 0.88146, -112.327, 0.55 ) }
    dend_45 { pt3dadd( 47.088, 1.42452, -112.533, 0.55 ) }
    dend_45 { pt3dadd( 46.906, 2.95268, -113.084, 0.28 ) }
    dend_45 { pt3dadd( 46.7691, 3.89734, -113.411, 0.28 ) }
    dend_45 { pt3dadd( 46.7065, 4.28163, -113.538, 0.55 ) }
    dend_45 { pt3dadd( 46.5688, 5.05664, -113.778, 0.55 ) }
    dend_45 { pt3dadd( 46.3857, 6.11522, -114.062, 0.28 ) }
    dend_45 { pt3dadd( 46.2444, 6.9372, -114.266, 0.55 ) }
    dend_45 { pt3dadd( 46.1174, 7.70192, -114.426, 0.28 ) }
    dend_45 { pt3dadd( 45.9869, 8.35569, -114.548, 0.55 ) }
    dend_45 { pt3dadd( 45.9061, 8.75023, -114.61, 0.28 ) }
    dend_45 { pt3dadd( 45.8605, 9.02496, -114.629, 0.55 ) }
    dend_45 { pt3dadd( 45.7455, 9.83621, -114.624, 0.28 ) }
    dend_45 { pt3dadd( 45.7066, 10.2429, -114.597, 0.55 ) }
    dend_45 { pt3dadd( 45.6254, 11.6092, -114.466, 0.28 ) }
    dend_45 { pt3dadd( 45.594, 12.5568, -114.364, 0.55 ) }
    dend_45 { pt3dadd( 45.5751, 13.8215, -114.209, 0.28 ) }
    dend_45 { pt3dadd( 45.5781, 14.5069, -114.121, 0.55 ) }
    dend_45 { pt3dadd( 45.5992, 15.2961, -114.014, 0.28 ) }
    dend_45 { pt3dadd( 45.6301, 16.0062, -113.908, 0.55 ) }
    dend_45 { pt3dadd( 45.6672, 16.6769, -113.806, 0.28 ) }
    dend_45 { pt3dadd( 45.6877, 17.1922, -113.729, 0.55 ) }
    dend_45 { pt3dadd( 45.7038, 18.4618, -113.557, 0.28 ) }
    dend_45 { pt3dadd( 45.7146, 19.1119, -113.454, 0.55 ) }
    dend_45 { pt3dadd( 45.7169, 20.0442, -113.284, 0.28 ) }
    dend_45 { pt3dadd( 45.7178, 20.3925, -113.209, 0.55 ) }
    dend_45 { pt3dadd( 45.7046, 21.2763, -112.998, 0.28 ) }
    dend_45 { pt3dadd( 45.6681, 22.2025, -112.769, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 38.1424, -34.6213, -80.1607, 0.28 ) }
    dend_44 { pt3dadd( 41.0632, -34.6133, -82.3696, 0.28 ) }
    dend_44 { pt3dadd( 41.9169, -34.6134, -83.0839, 0.55 ) }
    dend_44 { pt3dadd( 43.0456, -34.5422, -84.1379, 0.55 ) }
    dend_44 { pt3dadd( 44.7561, -34.3792, -85.7647, 0.28 ) }
    dend_44 { pt3dadd( 45.7784, -34.2773, -86.705, 0.55 ) }
    dend_44 { pt3dadd( 49.374, -33.846, -89.8798, 0.28 ) }
    dend_44 { pt3dadd( 50.3385, -33.6518, -90.696, 0.55 ) }
    dend_44 { pt3dadd( 52.6254, -33.0547, -92.5556, 0.28 ) }
    dend_44 { pt3dadd( 53.6029, -32.7394, -93.3088, 0.28 ) }
    dend_44 { pt3dadd( 55.2206, -32.1408, -94.4361, 0.55 ) }
    dend_44 { pt3dadd( 56.7509, -31.5694, -95.3848, 0.55 ) }
    dend_44 { pt3dadd( 60.5767, -30.1779, -97.319, 0.28 ) }
    dend_44 { pt3dadd( 62.0342, -29.7336, -98.0068, 0.55 ) }
    dend_44 { pt3dadd( 63.7231, -29.3471, -98.7537, 0.55 ) }
    dend_44 { pt3dadd( 66.8566, -28.8218, -100.133, 0.28 ) }
    dend_44 { pt3dadd( 68.9433, -28.6299, -101.035, 0.55 ) }
    dend_44 { pt3dadd( 71.6315, -28.6572, -102.09, 0.28 ) }
    dend_44 { pt3dadd( 73.1165, -28.8411, -102.607, 0.55 ) }
    dend_44 { pt3dadd( 75.9053, -29.4126, -103.493, 0.28 ) }
    dend_44 { pt3dadd( 77.1268, -29.7847, -103.817, 0.55 ) }
    dend_44 { pt3dadd( 78.5108, -30.3406, -104.096, 0.55 ) }
    dend_44 { pt3dadd( 80.3838, -31.2649, -104.27, 0.28 ) }
    dend_44 { pt3dadd( 81.4886, -31.9134, -104.279, 0.28 ) }
    dend_44 { pt3dadd( 82.7213, -32.811, -104.171, 0.55 ) }
    dend_44 { pt3dadd( 84.3259, -34.2389, -103.879, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 84.5459, -34.465, -103.823, 0.55 ) }
    dend_44 { pt3dadd( 86.4218, -36.6993, -103.304, 0.28 ) }
    dend_44 { pt3dadd( 86.6093, -36.9707, -103.272, 0.83 ) }
    dend_44 { pt3dadd( 88.9438, -40.7424, -103.136, 0.28 ) }
    dend_44 { pt3dadd( 89.3477, -41.4835, -103.266, 0.55 ) }
    dend_44 { pt3dadd( 90.2477, -43.3623, -103.873, 0.28 ) }
    dend_44 { pt3dadd( 90.767, -44.5492, -104.375, 0.55 ) }
    dend_44 { pt3dadd( 91.8701, -47.2934, -105.904, 0.28 ) }
    dend_44 { pt3dadd( 92.0025, -47.6431, -106.114, 0.55 ) }
    dend_44 { pt3dadd( 93.4724, -51.7446, -108.887, 0.28 ) }
    dend_44 { pt3dadd( 93.6637, -52.3098, -109.251, 0.55 ) }
    dend_44 { pt3dadd( 93.7883, -52.6528, -109.477, 0.55 ) }
    dend_44 { pt3dadd( 94.295, -53.8958, -110.162, 0.28 ) }
    dend_44 { pt3dadd( 94.7534, -54.921, -110.62, 0.55 ) }
    dend_44 { pt3dadd( 95.6241, -56.6668, -111.259, 0.28 ) }
    dend_44 { pt3dadd( 96.0009, -57.3762, -111.485, 0.55 ) }
    dend_44 { pt3dadd( 98.3658, -61.6012, -113.006, 0.28 ) }
    dend_44 { pt3dadd( 98.8658, -62.4592, -113.332, 0.55 ) }
    dend_44 { pt3dadd( 99.4373, -63.4378, -113.769, 0.28 ) }
    dend_44 { pt3dadd( 101.304, -66.5822, -115.308, 0.28 ) }
    dend_44 { pt3dadd( 101.892, -67.6051, -115.773, 0.55 ) }
    dend_44 { pt3dadd( 103.549, -70.5576, -116.998, 0.28 ) }
    dend_44 { pt3dadd( 103.678, -70.8105, -117.076, 0.55 ) }
    dend_44 { pt3dadd( 105.22, -74.1452, -117.993, 0.28 ) }
    dend_44 { pt3dadd( 105.922, -75.7997, -118.273, 0.55 ) }
    dend_44 { pt3dadd( 106.793, -77.9283, -118.379, 0.28 ) }
    dend_44 { pt3dadd( 107.186, -78.8085, -118.317, 0.55 ) }
    dend_44 { pt3dadd( 108.046, -80.5961, -118.031, 0.28 ) }
    dend_44 { pt3dadd( 108.45, -81.3736, -117.885, 0.55 ) }
    dend_44 { pt3dadd( 110.076, -84.3811, -117.542, 0.28 ) }
    dend_44 { pt3dadd( 111.443, -86.8376, -117.462, 0.28 ) }
    dend_44 { pt3dadd( 112.067, -87.8932, -117.547, 0.55 ) }
    dend_44 { pt3dadd( 113.65, -90.4516, -117.911, 0.28 ) }
    dend_44 { pt3dadd( 114.164, -91.2205, -118.058, 0.55 ) }
    dend_44 { pt3dadd( 117.61, -96.2713, -119.145, 0.28 ) }
    dend_44 { pt3dadd( 118.958, -98.1584, -119.653, 0.55 ) }
    dend_44 { pt3dadd( 121.052, -100.892, -120.475, 0.28 ) }
    dend_44 { pt3dadd( 121.473, -101.424, -120.645, 0.55 ) }
    dend_44 { pt3dadd( 123.582, -103.904, -121.479, 0.28 ) }
    dend_44 { pt3dadd( 123.889, -104.231, -121.585, 0.55 ) }
    dend_44 { pt3dadd( 125.206, -105.203, -121.823, 0.28 ) }
    dend_44 { pt3dadd( 126.105, -105.779, -122.044, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 39.565, -44.9304, 19.1444, 0.55 ) }
    dend_41 { pt3dadd( 40.6667, -44.5877, 20.257, 0.55 ) }
    dend_41 { pt3dadd( 42.8801, -43.8163, 22.5016, 0.55 ) }
    dend_41 { pt3dadd( 46.927, -42.3949, 26.52, 0.55 ) }
    dend_41 { pt3dadd( 50.0359, -41.3257, 29.5593, 0.55 ) }
    dend_41 { pt3dadd( 52.8475, -40.4263, 32.2819, 0.28 ) }
    dend_41 { pt3dadd( 54.4057, -39.9541, 33.7649, 0.83 ) }
    dend_41 { pt3dadd( 56.3526, -39.3976, 35.6569, 0.55 ) }
    dend_41 { pt3dadd( 57.8186, -39.0626, 37.0529, 0.28 ) }
    dend_41 { pt3dadd( 58.5445, -38.9461, 37.639, 0.55 ) }
    dend_41 { pt3dadd( 60.0908, -38.7403, 38.7808, 0.28 ) }
    dend_41 { pt3dadd( 60.6082, -38.6859, 39.1627, 0.55 ) }
    dend_41 { pt3dadd( 62.8437, -38.6479, 40.6372, 0.28 ) }
    dend_41 { pt3dadd( 64.2677, -38.8303, 41.5094, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 39.565, -44.9304, 19.1444, 0.28 ) }
    dend_40 { pt3dadd( 47.3589, -48.8076, 13.9048, 0.28 ) }
    dend_40 { pt3dadd( 48.4509, -49.2575, 13.2702, 0.83 ) }
    dend_40 { pt3dadd( 52.2438, -50.6033, 11.2609, 0.28 ) }
    dend_40 { pt3dadd( 53.3526, -50.8679, 10.7458, 0.83 ) }
    dend_40 { pt3dadd( 55.9442, -51.2822, 9.62452, 0.28 ) }
    dend_40 { pt3dadd( 57.042, -51.3822, 9.17877, 0.83 ) }
    dend_40 { pt3dadd( 60.2906, -50.9831, 8.44985, 0.28 ) }
    dend_40 { pt3dadd( 60.9944, -50.7503, 8.25983, 0.83 ) }
    dend_40 { pt3dadd( 64.5244, -48.9269, 7.17441, 0.28 ) }
    dend_40 { pt3dadd( 65.3808, -48.4549, 6.89357, 0.28 ) }
    dend_40 { pt3dadd( 66.5941, -47.7512, 6.47621, 0.55 ) }
    dend_40 { pt3dadd( 68.8595, -46.4037, 6.14198, 0.28 ) }
    dend_40 { pt3dadd( 72.3349, -44.3167, 6.14577, 0.28 ) }
    dend_40 { pt3dadd( 73.2043, -43.7987, 6.33375, 0.83 ) }
    dend_40 { pt3dadd( 79.3876, -40.1991, 8.7205, 0.28 ) }
    dend_40 { pt3dadd( 80.4422, -39.6317, 9.25304, 0.55 ) }
    dend_40 { pt3dadd( 88.0, -35.7337, 14.23, 0.28 ) }
    dend_40 { pt3dadd( 88.7984, -35.3271, 14.8678, 0.83 ) }
    dend_40 { pt3dadd( 93.5249, -32.7657, 19.3746, 0.28 ) }
    dend_40 { pt3dadd( 94.145, -32.3796, 20.0427, 0.55 ) }
    dend_40 { pt3dadd( 95.9588, -31.0848, 22.2801, 0.28 ) }
    dend_40 { pt3dadd( 97.6647, -29.8354, 24.3508, 0.55 ) }
    dend_40 { pt3dadd( 99.8309, -28.2447, 26.6148, 0.28 ) }
    dend_40 { pt3dadd( 100.71, -27.5752, 27.4602, 0.55 ) }
    dend_40 { pt3dadd( 103.508, -25.1748, 29.5491, 0.28 ) }
    dend_40 { pt3dadd( 104.518, -24.1832, 30.3266, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 42.7788, -59.3013, -0.418981, 0.55 ) }
    dend_38 { pt3dadd( 44.3875, -59.6384, -0.698827, 0.55 ) }
    dend_38 { pt3dadd( 46.9644, -60.1944, -1.15876, 0.55 ) }
    dend_38 { pt3dadd( 48.8365, -60.6167, -1.51494, 0.28 ) }
    dend_38 { pt3dadd( 50.1688, -60.9143, -1.76043, 0.55 ) }
    dend_38 { pt3dadd( 52.2404, -61.3709, -2.09744, 0.55 ) }
    dend_38 { pt3dadd( 53.1219, -61.596, -2.2162, 0.28 ) }
    dend_38 { pt3dadd( 53.7343, -61.7564, -2.31595, 0.55 ) }
    dend_38 { pt3dadd( 54.4184, -61.9882, -2.42169, 0.28 ) }
    dend_38 { pt3dadd( 55.4296, -62.3997, -2.58576, 0.55 ) }
    dend_38 { pt3dadd( 56.9001, -63.0754, -2.75775, 0.55 ) }
    dend_38 { pt3dadd( 58.9963, -64.0741, -2.96403, 0.55 ) }
    dend_38 { pt3dadd( 61.8475, -65.2792, -3.52986, 1.38 ) }
    dend_38 { pt3dadd( 63.6677, -65.9698, -4.00179, 0.83 ) }
    dend_38 { pt3dadd( 65.2197, -66.485, -4.45652, 0.55 ) }
    dend_38 { pt3dadd( 67.1799, -67.0523, -5.09547, 0.28 ) }
    dend_38 { pt3dadd( 69.5881, -67.6456, -5.94587, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 74.1646, -68.4517, -7.80684, 0.28 ) }
    dend_38 { pt3dadd( 74.761, -68.5497, -8.07935, 0.28 ) }
    dend_38 { pt3dadd( 76.278, -68.7971, -8.89811, 0.55 ) }
    dend_38 { pt3dadd( 77.298, -68.9551, -9.49111, 0.55 ) }
    dend_38 { pt3dadd( 78.2285, -69.112, -10.0876, 0.55 ) }
    dend_38 { pt3dadd( 80.7964, -69.7039, -11.7015, 0.55 ) }
    dend_38 { pt3dadd( 83.2747, -70.447, -13.2152, 0.28 ) }
    dend_38 { pt3dadd( 84.7946, -70.9535, -14.1955, 0.83 ) }
    dend_38 { pt3dadd( 85.7272, -71.2838, -14.8204, 0.83 ) }
    dend_38 { pt3dadd( 88.1837, -72.1655, -16.4443, 0.55 ) }
    dend_38 { pt3dadd( 89.1723, -72.5377, -17.0604, 0.83 ) }
    dend_38 { pt3dadd( 90.506, -73.0839, -17.7323, 0.28 ) }
    dend_38 { pt3dadd( 91.4422, -73.4572, -18.0961, 0.55 ) }
    dend_38 { pt3dadd( 92.0016, -73.7198, -18.266, 0.28 ) }
    dend_38 { pt3dadd( 92.2691, -73.8702, -18.3279, 0.55 ) }
    dend_38 { pt3dadd( 93.5229, -74.5967, -18.4793, 0.28 ) }
    dend_38 { pt3dadd( 94.9252, -75.3989, -18.7377, 0.28 ) }
    dend_38 { pt3dadd( 96.0034, -76.0319, -18.933, 0.83 ) }
    dend_38 { pt3dadd( 96.9254, -76.6324, -19.1375, 0.55 ) }
    dend_38 { pt3dadd( 99.2408, -78.2434, -19.6977, 0.28 ) }
    dend_38 { pt3dadd( 99.9319, -78.7533, -19.9139, 0.83 ) }
    dend_38 { pt3dadd( 102.144, -80.4886, -20.7155, 0.28 ) }
    dend_38 { pt3dadd( 102.978, -81.2349, -21.0728, 0.83 ) }
    dend_38 { pt3dadd( 104.396, -82.6036, -21.6709, 0.28 ) }
    dend_38 { pt3dadd( 104.799, -82.995, -21.849, 0.83 ) }
    dend_38 { pt3dadd( 106.461, -84.6884, -22.6078, 0.28 ) }
    dend_38 { pt3dadd( 107.46, -85.7352, -23.0594, 0.28 ) }
    dend_38 { pt3dadd( 108.329, -86.6398, -23.3588, 0.55 ) }
    dend_38 { pt3dadd( 109.353, -87.6127, -23.7218, 0.55 ) }
    dend_38 { pt3dadd( 111.051, -89.083, -24.2606, 0.55 ) }
    dend_38 { pt3dadd( 111.96, -89.8288, -24.521, 0.28 ) }
    dend_38 { pt3dadd( 112.45, -90.2089, -24.6585, 0.55 ) }
    dend_38 { pt3dadd( 114.1, -91.4042, -25.2171, 0.28 ) }
    dend_38 { pt3dadd( 115.348, -92.232, -25.6261, 0.55 ) }
    dend_38 { pt3dadd( 116.662, -93.1223, -26.0903, 0.28 ) }
    dend_38 { pt3dadd( 117.05, -93.3935, -26.2077, 0.83 ) }
    dend_38 { pt3dadd( 118.73, -94.5226, -26.761, 0.28 ) }
    dend_38 { pt3dadd( 119.122, -94.7666, -26.8885, 0.55 ) }
    dend_38 { pt3dadd( 120.142, -95.3276, -27.2215, 0.55 ) }
    dend_38 { pt3dadd( 121.823, -96.2721, -27.6054, 0.28 ) }
    dend_38 { pt3dadd( 121.89, -96.3077, -27.6211, 0.55 ) }
    dend_38 { pt3dadd( 123.418, -97.0117, -28.0412, 0.28 ) }
    dend_38 { pt3dadd( 124.024, -97.2626, -28.2054, 0.55 ) }
    dend_38 { pt3dadd( 125.68, -97.9303, -28.7588, 0.28 ) }
    dend_38 { pt3dadd( 126.781, -98.3415, -29.1704, 0.55 ) }
    dend_38 { pt3dadd( 128.781, -99.0038, -29.9556, 0.55 ) }
    dend_38 { pt3dadd( 130.529, -99.5724, -30.69, 0.28 ) }
    dend_38 { pt3dadd( 131.603, -99.9382, -31.1641, 0.83 ) }
    dend_38 { pt3dadd( 133.453, -100.598, -31.9991, 0.28 ) }
    dend_38 { pt3dadd( 133.845, -100.728, -32.1442, 0.55 ) }
    dend_38 { pt3dadd( 135.285, -101.142, -32.5829, 0.28 ) }
    dend_38 { pt3dadd( 135.752, -101.267, -32.6386, 0.55 ) }
    dend_38 { pt3dadd( 137.938, -101.767, -32.6697, 0.28 ) }
    dend_38 { pt3dadd( 138.628, -101.896, -32.639, 0.83 ) }
    dend_38 { pt3dadd( 141.244, -102.276, -32.227, 0.28 ) }
    dend_38 { pt3dadd( 141.726, -102.334, -32.1241, 0.55 ) }
    dend_38 { pt3dadd( 143.635, -102.442, -31.5116, 0.28 ) }
    dend_38 { pt3dadd( 145.249, -102.406, -30.9189, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 42.7788, -59.3013, -0.418981, 0.55 ) }
    dend_35 { pt3dadd( 43.8156, -59.8936, -1.8046, 0.55 ) }
    dend_35 { pt3dadd( 45.8931, -61.1921, -4.78311, 0.55 ) }
    dend_35 { pt3dadd( 47.6926, -62.3131, -7.28849, 0.28 ) }
    dend_35 { pt3dadd( 49.0269, -63.0969, -9.10467, 0.83 ) }
    dend_35 { pt3dadd( 51.2898, -64.3148, -11.9881, 0.28 ) }
    dend_35 { pt3dadd( 51.8316, -64.5759, -12.6807, 0.55 ) }
    dend_35 { pt3dadd( 52.2994, -64.7757, -13.3133, 0.55 ) }
    dend_35 { pt3dadd( 53.3083, -65.0767, -14.5809, 0.55 ) }
    dend_35 { pt3dadd( 54.9144, -65.4762, -16.4795, 0.55 ) }
    dend_35 { pt3dadd( 55.8097, -65.6714, -17.5143, 0.55 ) }
    dend_35 { pt3dadd( 58.4291, -66.1157, -20.1677, 0.83 ) }
    dend_35 { pt3dadd( 60.0601, -66.3486, -21.7913, 0.28 ) }
    dend_35 { pt3dadd( 60.7101, -66.4212, -22.4701, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -78.2486, -30.8409, -119.639, 0.28 ) }
    dend_20 { pt3dadd( -79.4376, -31.4625, -119.396, 0.28 ) }
    dend_20 { pt3dadd( -80.9826, -32.2702, -119.08, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -78.2486, -30.8409, -119.639, 0.28 ) }
    dend_19 { pt3dadd( -79.5571, -33.8054, -122.638, 0.28 ) }
    dend_19 { pt3dadd( -79.9396, -34.6722, -123.515, 0.55 ) }
    dend_19 { pt3dadd( -81.1365, -37.384, -126.257, 0.28 ) }
    dend_19 { pt3dadd( -81.6663, -38.5843, -127.472, 0.83 ) }
    dend_19 { pt3dadd( -83.9848, -43.8371, -132.785, 0.28 ) }
    dend_19 { pt3dadd( -84.3658, -44.7004, -133.658, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.391, 431.212, -92.0297, 0.55 ) }
    dend_9 { pt3dadd( -12.4461, 432.135, -93.8441, 0.55 ) }
    dend_9 { pt3dadd( -12.5294, 433.244, -95.7206, 0.28 ) }
    dend_9 { pt3dadd( -12.6125, 434.349, -97.5919, 0.55 ) }
    dend_9 { pt3dadd( -12.8527, 437.546, -103.003, 0.28 ) }
    dend_9 { pt3dadd( -12.8803, 437.913, -103.625, 0.55 ) }
    dend_9 { pt3dadd( -13.0584, 440.283, -107.637, 0.28 ) }
    dend_9 { pt3dadd( -13.032, 441.285, -109.792, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.391, 431.212, -92.0297, 0.28 ) }
    dend_8 { pt3dadd( -14.1467, 430.552, -93.0812, 0.28 ) }
    dend_8 { pt3dadd( -15.1238, 430.184, -93.6664, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 45.6681, 22.2025, -112.769, 0.28 ) }
    dend_47 { pt3dadd( 42.7752, 23.0963, -111.564, 0.28 ) }
    dend_47 { pt3dadd( 41.7947, 23.3994, -111.156, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 45.6681, 22.2025, -112.769, 0.28 ) }
    dend_46 { pt3dadd( 45.4206, 23.8529, -112.676, 0.28 ) }
    dend_46 { pt3dadd( 44.9387, 26.9599, -112.452, 0.28 ) }
    dend_46 { pt3dadd( 44.8008, 27.7965, -112.346, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 44.2642, 30.8519, -111.779, 0.28 ) }
    dend_46 { pt3dadd( 43.9559, 32.6077, -111.452, 0.55 ) }
    dend_46 { pt3dadd( 43.5574, 34.8759, -111.031, 0.28 ) }
    dend_46 { pt3dadd( 43.3397, 36.0743, -110.733, 0.55 ) }
    dend_46 { pt3dadd( 42.9806, 37.9874, -110.104, 0.28 ) }
    dend_46 { pt3dadd( 42.6519, 39.5267, -109.552, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 60.7101, -66.4212, -22.4701, 0.55 ) }
    dend_37 { pt3dadd( 60.3529, -67.2344, -24.7372, 0.55 ) }
    dend_37 { pt3dadd( 60.2148, -67.6384, -25.818, 0.28 ) }
    dend_37 { pt3dadd( 60.1124, -67.8851, -26.5389, 0.83 ) }
    dend_37 { pt3dadd( 59.3436, -69.3187, -30.8154, 0.28 ) }
    dend_37 { pt3dadd( 59.124, -69.7459, -32.0145, 0.83 ) }
    dend_37 { pt3dadd( 58.1295, -71.6856, -37.1146, 0.28 ) }
    dend_37 { pt3dadd( 57.9874, -71.9537, -37.8181, 0.83 ) }
    dend_37 { pt3dadd( 56.9879, -73.4669, -42.0175, 0.28 ) }
    dend_37 { pt3dadd( 56.6436, -73.8971, -43.1826, 0.55 ) }
    dend_37 { pt3dadd( 54.9179, -75.6501, -47.988, 0.28 ) }
    dend_37 { pt3dadd( 54.559, -75.9813, -48.9605, 0.28 ) }
    dend_37 { pt3dadd( 53.7721, -76.6326, -51.0431, 0.83 ) }
    dend_37 { pt3dadd( 51.4552, -78.4304, -57.2066, 0.28 ) }
    dend_37 { pt3dadd( 50.838, -78.8974, -58.9327, 0.55 ) }
    dend_37 { pt3dadd( 49.6533, -79.7569, -62.3592, 0.55 ) }
    dend_37 { pt3dadd( 48.7565, -80.3362, -64.8856, 0.55 ) }
    dend_37 { pt3dadd( 47.232, -81.3638, -69.2607, 0.28 ) }
    dend_37 { pt3dadd( 46.82, -81.6962, -70.4929, 0.83 ) }
    dend_37 { pt3dadd( 45.4192, -82.9739, -74.5814, 0.28 ) }
    dend_37 { pt3dadd( 45.1435, -83.2578, -75.3566, 0.55 ) }
    dend_37 { pt3dadd( 43.7789, -84.7364, -78.5113, 0.28 ) }
    dend_37 { pt3dadd( 43.318, -85.1832, -79.3758, 0.55 ) }
    dend_37 { pt3dadd( 41.4333, -87.0126, -82.4548, 0.28 ) }
    dend_37 { pt3dadd( 41.2607, -87.1671, -82.7267, 0.83 ) }
    dend_37 { pt3dadd( 40.1558, -88.0538, -84.1974, 0.28 ) }
    dend_37 { pt3dadd( 39.2145, -88.7647, -85.3044, 0.55 ) }
    dend_37 { pt3dadd( 36.2721, -90.8351, -88.5654, 0.28 ) }
    dend_37 { pt3dadd( 35.3646, -91.4778, -89.4935, 0.83 ) }
    dend_37 { pt3dadd( 31.3167, -94.3507, -93.2263, 0.28 ) }
    dend_37 { pt3dadd( 29.5642, -95.6228, -94.797, 0.55 ) }
    dend_37 { pt3dadd( 27.2762, -97.3632, -96.8849, 0.55 ) }
    dend_37 { pt3dadd( 24.7196, -99.4279, -99.1502, 0.28 ) }
    dend_37 { pt3dadd( 22.5401, -101.303, -100.922, 0.55 ) }
    dend_37 { pt3dadd( 21.0191, -102.676, -102.28, 0.28 ) }
    dend_37 { pt3dadd( 20.8015, -102.89, -102.486, 0.55 ) }
    dend_37 { pt3dadd( 19.5002, -104.13, -103.832, 0.28 ) }
    dend_37 { pt3dadd( 18.4815, -105.007, -104.897, 0.55 ) }
    dend_37 { pt3dadd( 17.3508, -105.863, -106.09, 0.55 ) }
    dend_37 { pt3dadd( 15.4176, -107.074, -108.258, 0.28 ) }
    dend_37 { pt3dadd( 14.5683, -107.528, -109.159, 0.55 ) }
    dend_37 { pt3dadd( 13.3383, -108.149, -110.438, 0.28 ) }
    dend_37 { pt3dadd( 12.5338, -108.515, -111.217, 0.55 ) }
    dend_37 { pt3dadd( 10.3491, -109.446, -113.325, 0.28 ) }
    dend_37 { pt3dadd( 9.62712, -109.733, -114.065, 0.55 ) }
    dend_37 { pt3dadd( 7.82287, -110.486, -115.927, 0.28 ) }
    dend_37 { pt3dadd( 6.74947, -110.992, -117.283, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 60.7101, -66.4212, -22.4701, 0.28 ) }
    dend_36 { pt3dadd( 65.1443, -66.5123, -21.9722, 0.28 ) }
    dend_36 { pt3dadd( 65.8, -66.5388, -21.9599, 0.83 ) }
    dend_36 { pt3dadd( 68.8253, -66.7949, -21.9504, 0.28 ) }
    dend_36 { pt3dadd( 69.882, -66.8592, -21.9512, 0.28 ) }
    dend_36 { pt3dadd( 71.2, -66.9845, -22.0045, 0.55 ) }
    dend_36 { pt3dadd( 73.5759, -67.215, -22.3837, 0.28 ) }
    dend_36 { pt3dadd( 76.1765, -67.5193, -23.1211, 0.55 ) }
    dend_36 { pt3dadd( 77.7188, -67.7776, -23.6065, 0.55 ) }
    dend_36 { pt3dadd( 79.666, -68.1708, -24.4119, 0.55 ) }
    dend_36 { pt3dadd( 83.0907, -68.873, -26.0611, 0.83 ) }
    dend_36 { pt3dadd( 87.2188, -69.7227, -28.3211, 0.28 ) }
    dend_36 { pt3dadd( 88.6476, -70.0224, -29.166, 0.28 ) }
    dend_36 { pt3dadd( 89.3923, -70.2091, -29.6763, 0.83 ) }
    dend_36 { pt3dadd( 94.3687, -71.5112, -33.2797, 0.28 ) }
    dend_36 { pt3dadd( 95.7878, -71.9393, -34.4035, 0.83 ) }
    dend_36 { pt3dadd( 96.9901, -72.3536, -35.4323, 0.83 ) }
    dend_36 { pt3dadd( 99.1053, -73.2207, -37.2509, 0.83 ) }
    dend_36 { pt3dadd( 102.698, -74.8128, -40.4302, 0.55 ) }
    dend_36 { pt3dadd( 105.792, -76.4496, -43.2464, 0.55 ) }
    dend_36 { pt3dadd( 109.557, -78.9347, -46.7329, 0.55 ) }
    dend_36 { pt3dadd( 111.322, -80.358, -48.5158, 0.55 ) }
    dend_36 { pt3dadd( 112.792, -81.81, -50.1289, 0.28 ) }
    dend_36 { pt3dadd( 112.95, -82.012, -50.3138, 0.55 ) }
    dend_36 { pt3dadd( 114.838, -85.2469, -52.6768, 0.28 ) }
    dend_36 { pt3dadd( 115.393, -86.521, -53.4475, 0.55 ) }
    dend_36 { pt3dadd( 116.879, -90.3631, -55.4311, 0.28 ) }
    dend_36 { pt3dadd( 117.722, -92.559, -56.4165, 0.55 ) }
    dend_36 { pt3dadd( 118.674, -94.9377, -57.3602, 0.28 ) }
    dend_36 { pt3dadd( 119.443, -96.7356, -57.9111, 0.55 ) }
    dend_36 { pt3dadd( 121.33, -100.965, -58.8259, 0.28 ) }
    dend_36 { pt3dadd( 121.814, -101.988, -58.954, 1.11 ) }
    dend_36 { pt3dadd( 124.552, -107.154, -59.0355, 0.28 ) }
    dend_36 { pt3dadd( 126.036, -109.677, -58.8303, 0.55 ) }
    dend_36 { pt3dadd( 127.528, -112.086, -58.153, 0.28 ) }
    dend_36 { pt3dadd( 128.039, -112.859, -57.7563, 0.55 ) }
    dend_36 { pt3dadd( 129.375, -114.83, -56.2987, 0.28 ) }
    dend_36 { pt3dadd( 130.257, -116.11, -55.1288, 0.28 ) }
    dend_36 { pt3dadd( 131.921, -118.42, -52.4337, 0.55 ) }
    dend_36 { pt3dadd( 134.315, -121.882, -48.2424, 0.55 ) }
    dend_36 { pt3dadd( 135.238, -123.239, -46.5794, 0.28 ) }
    dend_36 { pt3dadd( 135.439, -123.498, -46.2449, 0.55 ) }
    dend_36 { pt3dadd( 136.995, -125.208, -43.9256, 0.28 ) }
    dend_36 { pt3dadd( 137.277, -125.49, -43.5414, 0.55 ) }
    dend_36 { pt3dadd( 138.719, -126.599, -41.9758, 0.28 ) }
    dend_36 { pt3dadd( 139.436, -127.006, -41.3794, 0.55 ) }
    dend_36 { pt3dadd( 142.293, -128.239, -38.7948, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 143.158, -128.515, -37.8299, 0.55 ) }
    dend_36 { pt3dadd( 144.541, -128.726, -36.256, 0.28 ) }
    dend_36 { pt3dadd( 144.955, -128.733, -35.6382, 0.55 ) }
    dend_36 { pt3dadd( 146.071, -128.577, -33.6363, 0.28 ) }
    dend_36 { pt3dadd( 146.993, -128.393, -31.7976, 0.55 ) }
    dend_36 { pt3dadd( 148.469, -127.941, -27.9817, 0.28 ) }
    dend_36 { pt3dadd( 149.512, -127.516, -24.9004, 0.55 ) }
    dend_36 { pt3dadd( 151.573, -126.335, -18.0768, 0.28 ) }
    dend_36 { pt3dadd( 151.853, -126.153, -17.0503, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 5
    dend_6 nseg = 15
    dend_5 nseg = 9
    dend_3 nseg = 7
    dend_48 nseg = 9
    dend_43 nseg = 3
    dend_30 nseg = 19
    dend_29 nseg = 5
    dend_24 nseg = 3
    dend_18 nseg = 7
    dend_17 nseg = 9
    dend_15 nseg = 7
    dend_14 nseg = 3
    dend_10 nseg = 9
    dend_7 nseg = 7
    dend_45 nseg = 3
    dend_44 nseg = 7
    dend_40 nseg = 5
    dend_38 nseg = 5
    dend_37 nseg = 7
    dend_36 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_BTC_2d64e36d0b_0_0


