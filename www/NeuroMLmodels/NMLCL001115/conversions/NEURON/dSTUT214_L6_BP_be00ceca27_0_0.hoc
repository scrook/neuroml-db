// Cell: dSTUT214_L6_BP_be00ceca27_0_0
/*
{
  "id" : "dSTUT214_L6_BP_be00ceca27_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.52847, 2.40803, 0.83", "-3.68117, 9.3226, 2.96904, 0.83", "-7.35937, 12.3161, 3.52376, 1.11", "-9.52806, 14.0798, 3.81232, 0.83", "-11.6351, 15.7786, 4.07086, 0.83", "-12.8825, 16.7472, 4.21254, 1.11", "-16.7891, 19.7741, 4.66661, 1.11", "-23.7763, 24.9562, 5.46927, 0.83", "-26.2936, 26.752, 5.73432, 0.83", "-28.287, 28.1318, 5.89896, 0.83", "-30.2308, 29.4992, 6.04147, 0.83", "-31.8132, 30.6263, 6.11836, 0.55", "-33.0026, 31.3894, 6.1964, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.70947, -5.68197, 0.55", "5.14649, 6.78851, -6.38422, 0.55", "8.60639, 7.57438, -7.15688, 0.55", "10.614, 7.77276, -8.17927, 0.83", "13.7915, 7.98388, -10.0784, 0.55", "15.3253, 8.08579, -10.9952, 1.38", "19.0967, 8.33637, -13.2493, 0.55", "20.7029, 8.25152, -14.3248, 0.83", "29.0119, 6.69537, -20.3678, 0.55", "29.8157, 6.48611, -21.0326, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.66503, 2.42803, 1.11", "-0.685034, -11.1057, 3.26135, 1.11", "-0.735097, -15.7437, 4.84488, 1.11", "-0.755485, -17.6326, 5.4898, 0.83", "-0.782573, -20.1421, 6.3466, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.96697, -1.26197, 1.11", "0.909065, 9.73145, -1.36428, 1.11", "1.05084, 11.286, -1.36369, 1.11", "1.29355, 13.8216, -1.27472, 1.38", "1.30984, 13.9626, -1.26786, 1.38", "1.61321, 15.7029, -1.18657, 0.83", "2.02297, 17.5384, -1.02247, 0.83", "2.70051, 19.5994, -0.634891, 0.83", "3.0677, 20.3754, -0.415424, 0.83", "3.41658, 20.9329, -0.217106, 1.11", "4.40557, 22.2838, 0.275309, 0.55", "5.55232, 23.6878, 0.868508, 0.83", "7.0065, 25.1176, 1.50782, 0.55", "7.73088, 25.7052, 1.78305, 0.83", "8.756, 26.4987, 2.2335, 0.55", "10.0425, 27.5088, 2.8645, 0.55", "11.8688, 29.0345, 3.85841, 0.55", "13.885, 30.7822, 4.95663, 0.55", "15.1937, 31.9162, 5.81779, 0.55", "16.842, 33.3501, 7.07468, 0.55", "17.1901, 33.6368, 7.36497, 0.83", "18.1224, 34.3934, 8.194, 0.55", "18.8931, 34.981, 8.83638, 0.83", "20.6916, 36.6027, 10.3687, 0.55", "21.3359, 37.1957, 10.792, 0.83", "21.9043, 37.6281, 11.0512, 0.55", "22.4484, 37.9975, 11.2272, 0.83", "23.6245, 38.6759, 11.5051, 0.83", "25.155, 39.6034, 11.7485, 0.83", "26.0769, 40.2213, 11.8054, 0.55", "26.784, 40.7607, 11.8525, 0.55", "28.6309, 42.1534, 11.9504, 0.83", "29.8141, 43.0467, 11.9692, 0.55", "31.5932, 44.3529, 11.9295, 0.55", "33.205, 45.4419, 11.8316, 0.55", "34.636, 46.3611, 11.7071, 0.55", "36.423, 47.4325, 11.4712, 0.55", "37.5009, 47.947, 11.2925, 0.55", "38.2144, 48.2309, 11.0846, 0.55", "39.1357, 48.4232, 10.7279, 0.55", "40.4733, 48.4652, 10.0792, 0.55", "41.2939, 48.3721, 9.64039, 0.55", "42.5111, 48.1974, 9.08942, 0.55", "44.8814, 47.9454, 8.25909, 0.55", "46.7758, 47.8413, 7.74469, 0.55", "48.8153, 47.8334, 7.32137, 0.55", "50.1479, 47.8749, 7.15323, 0.55", "53.6749, 48.3096, 6.94067, 0.55", "55.8029, 48.7307, 6.96662, 0.55", "57.4345, 49.1506, 7.12751, 0.55", "58.4416, 49.5685, 7.26126, 0.55", "59.6155, 50.2066, 7.41148, 0.55", "61.5769, 51.4832, 7.50562, 0.55", "62.0151, 51.7924, 7.47013, 0.55", "63.2521, 52.616, 7.29002, 0.55", "64.3942, 53.5023, 7.12074, 0.83", "65.0158, 53.9946, 7.01895, 0.55", "65.9447, 54.8466, 6.83152, 0.83", "71.1083, 59.3845, 7.07912, 0.83", "75.593, 64.6636, 6.97518, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-33.0026, 31.3894, 6.1964, 0.55", "-34.1452, 32.4046, 5.41248, 0.55", "-35.3878, 33.5086, 4.56004, 0.55", "-36.8872, 34.8409, 3.53133, 0.55", "-38.1254, 35.9409, 2.6819, 0.83", "-39.1629, 36.8628, 1.97008, 0.55", "-41.0888, 38.5739, 0.648831, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-33.0026, 31.3894, 6.1964, 0.55", "-35.2798, 31.9738, 5.674, 0.55", "-37.7392, 32.4763, 5.3493, 0.55", "-40.5378, 33.0307, 5.04814, 0.55", "-44.6445, 33.7297, 4.97424, 0.55", "-48.117, 34.1733, 5.13581, 0.55", "-51.7815, 34.5572, 5.44739, 0.55", "-55.3806, 34.6253, 6.07927, 0.55", "-58.5248, 34.3353, 6.86141, 0.55", "-62.5034, 33.6395, 8.18806, 0.55", "-64.2673, 33.1778, 8.96886, 0.55", "-66.1835, 32.6478, 9.88392, 0.55", "-69.548, 31.49, 11.321, 0.55", "-71.302, 30.9193, 11.8305, 0.55", "-73.1388, 30.2677, 12.3456, 0.55", "-75.2934, 29.5522, 12.7572, 0.55", "-77.6255, 28.8324, 13.1518, 0.55", "-80.9444, 27.8076, 13.6453, 0.55", "-85.3186, 26.7941, 13.9745, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "29.8157, 6.48611, -21.0326, 0.55", "34.7991, 7.5918, -22.0849, 0.55", "37.6496, 8.10493, -23.1103, 0.55", "40.4522, 8.48514, -24.179, 0.55", "42.361, 8.66506, -24.9184, 0.55", "45.1462, 8.85761, -25.9859, 0.55", "50.9113, 9.16252, -28.3955, 0.55", "57.4387, 9.51969, -31.5716, 0.55", "60.5834, 9.51227, -33.3577, 0.55", "62.2618, 9.47835, -34.4316, 0.55", "64.1013, 9.46016, -35.6837, 0.55", "67.3767, 9.3285, -37.9171, 0.55", "68.5597, 9.21116, -38.7777, 0.55", "73.5693, 8.89833, -42.8006, 0.55", "77.1141, 8.77154, -45.9095, 0.55", "79.1569, 8.74838, -47.7517, 0.55", "81.1929, 8.70579, -49.5898, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "29.8157, 6.48611, -21.0326, 0.83", "31.7517, 7.39757, -20.936, 0.83", "32.8566, 7.92709, -20.9272, 0.55", "34.4838, 8.76666, -21.0339, 0.83", "35.5806, 9.36403, -21.1305, 0.55", "37.0992, 10.2222, -21.2355, 0.83", "38.9321, 11.2753, -21.2935, 0.55", "39.8464, 11.7339, -21.3012, 0.55", "41.917, 12.4894, -21.239, 0.83", "43.7735, 12.9099, -21.0001, 0.55", "44.8127, 13.1153, -20.7751, 0.83", "46.3816, 13.4254, -20.2763, 0.55", "48.6491, 13.8549, -19.2824, 0.55", "51.7808, 14.2639, -17.7838, 0.55", "54.7584, 14.5103, -16.1831, 0.55", "57.1153, 14.6728, -14.8802, 0.55", "61.0038, 14.9546, -12.7094, 0.55", "63.8617, 15.2285, -11.0461, 0.55", "65.6083, 15.522, -9.95388, 0.55", "68.8692, 16.373, -7.84998, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.782573, -20.1421, 6.3466, 0.83", "-0.702235, -23.5648, 6.22651, 0.83", "-0.623963, -26.8995, 6.10952, 0.83", "-0.536573, -30.6227, 5.97889, 0.83", "-0.490939, -32.567, 5.91068, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.782573, -20.1421, 6.3466, 0.55", "0.00474864, -22.1019, 7.38185, 0.55", "0.78242, -24.4854, 8.8002, 0.55", "1.40757, -27.5748, 10.887, 0.55", "1.58285, -28.7697, 11.7484, 0.83", "1.86328, -31.8046, 14.3323, 0.55", "1.89866, -33.3623, 15.7262, 0.55", "1.94092, -36.389, 18.5709, 0.83", "1.8893, -38.6293, 20.8473, 0.55", "1.68851, -40.4634, 22.7402, 0.55", "1.2198, -43.9295, 26.2866, 0.55", "0.840617, -46.6915, 29.0823, 0.55", "0.586244, -48.9101, 31.3409, 0.55", "0.417614, -51.2745, 33.6367, 0.28", "0.414257, -52.2653, 34.5369, 0.55", "0.425637, -54.0968, 36.0919, 0.28", "0.688645, -56.9775, 38.0125, 0.55", "-0.406619, -66.3892, 45.4534, 0.55", "-1.4741, -75.0799, 53.6546, 0.55", "-1.52037, -82.2936, 63.1192, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-41.0888, 38.5739, 0.648831, 0.55", "-43.9969, 39.1939, 2.53162, 0.55", "-45.206, 39.3966, 3.49174, 0.83", "-46.6014, 39.5743, 4.8252, 0.55", "-47.6579, 39.7202, 5.95127, 0.83", "-50.4256, 40.2138, 8.86295, 0.55", "-51.4719, 40.4219, 9.9724, 0.28", "-53.1983, 40.8075, 11.9828, 0.55", "-55.5155, 41.3396, 14.6664, 0.55", "-57.2846, 41.7353, 16.6137, 0.55", "-59.6569, 42.255, 19.1311, 0.28", "-60.282, 42.3873, 19.7022, 0.55", "-61.5809, 42.6732, 20.829, 0.28", "-62.4717, 42.8846, 21.5013, 0.55", "-64.309, 43.285, 22.7053, 0.28", "-65.3964, 43.4474, 23.3593, 0.55", "-67.3184, 43.58, 24.5465, 0.28", "-68.6148, 43.6549, 25.2969, 0.55", "-76.1402, 43.782, 33.635, 0.55", "-82.9348, 42.8252, 42.5488, 0.55", "-89.4809, 40.7514, 51.4914, 0.55", "-96.086, 37.2856, 60.0055, 0.55", "-101.33, 34.3517, 69.5786, 0.55", "-107.422, 31.8396, 78.7441, 0.55", "-113.535, 31.2687, 88.162, 0.55", "-119.664, 29.7576, 97.4879, 0.55", "-125.527, 29.0414, 107.057, 0.55", "-130.855, 28.1624, 116.924, 0.55", "-135.115, 25.9463, 127.132, 0.55", "-139.417, 24.8335, 137.472, 0.55", "-143.942, 22.5343, 147.549, 0.55", "-147.154, 19.7226, 158.012, 0.55", "-148.418, 17.6824, 169.03, 0.55", "-149.76, 13.4429, 179.477, 0.55", "-149.512, 8.91926, 189.899, 0.55", "-149.822, 4.92341, 200.51, 0.55", "-151.274, 1.83528, 211.292, 0.55", "-154.979, 0.653532, 221.854, 0.55", "-157.77, -1.86198, 232.501, 0.55", "-158.334, -2.46768, 243.714, 0.55", "-160.663, -2.15291, 254.698, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-41.0888, 38.5739, 0.648831, 0.55", "-42.6287, 39.5838, -1.5269, 0.55", "-43.741, 40.6732, -3.90375, 0.55", "-44.7434, 41.9821, -6.39848, 0.55", "-45.3711, 42.8018, -7.96065, 0.55", "-46.516, 44.2969, -10.8102, 0.83", "-47.3537, 45.3908, -12.895, 0.55", "-48.247, 46.8831, -15.9357, 0.83", "-48.5066, 47.8602, -17.6184, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-85.3186, 26.7941, 13.9745, 0.28", "-86.5315, 24.7316, 12.6975, 0.28", "-87.0981, 23.8709, 12.0607, 0.28", "-87.8249, 22.6624, 11.1239, 0.55", "-88.4242, 21.5939, 10.3172, 0.28", "-89.311, 19.9577, 9.1155, 0.55", "-91.7872, 15.1145, 5.69207, 0.28", "-92.5678, 13.4511, 4.35916, 0.55", "-93.7327, 10.9137, 2.2167, 0.28", "-94.3864, 9.41427, 0.865941, 0.55", "-94.8333, 8.38868, -0.092579, 0.28", "-95.344, 7.20831, -1.18133, 0.55", "-96.8858, 3.2255, -4.67651, 0.28", "-97.365, 2.03523, -5.78398, 0.55", "-98.1818, 0.282227, -7.70674, 0.28", "-98.8603, -0.795436, -9.08105, 0.28", "-99.4889, -1.4918, -10.0633, 0.55", "-101.744, -3.42575, -12.838, 0.28", "-102.809, -4.2023, -13.967, 0.55", "-105.404, -5.91609, -16.7128, 0.28", "-108.015, -7.39265, -19.25, 0.28", "-110.864, -8.74311, -21.8364, 0.28", "-112.184, -9.22934, -22.863, 0.55", "-118.461, -15.9987, -30.3697, 0.55", "-125.859, -23.4031, -36.031, 0.55", "-132.806, -29.9064, -43.1331, 0.55", "-139.757, -35.4116, -50.9601, 0.55", "-146.618, -39.8113, -59.4635, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-85.3186, 26.7941, 13.9745, 0.55", "-86.1278, 26.7705, 13.9154, 0.55", "-88.4667, 26.6215, 14.0252, 0.55", "-89.3552, 26.5305, 14.102, 0.55", "-91.4531, 26.2472, 14.292, 0.55", "-94.6497, 25.8858, 14.4544, 0.55", "-96.3034, 25.7554, 14.528, 0.28", "-98.8697, 25.5124, 14.5793, 0.55", "-100.764, 25.3133, 14.5427, 0.55", "-101.564, 25.2235, 14.5271, 0.28", "-106.366, 24.6846, 14.4272, 0.55", "-108.588, 24.3707, 14.2223, 0.28", "-111.553, 23.9861, 13.7797, 0.28", "-114.079, 23.735, 13.2703, 0.55", "-124.291, 23.583, 13.7774, 0.55", "-134.381, 22.837, 15.2551, 0.55", "-144.159, 20.719, 17.4162, 0.55", "-153.751, 20.0659, 20.8976, 0.55", "-162.425, 18.4675, 26.0691, 0.55", "-169.875, 16.9145, 32.9014, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "81.1929, 8.70579, -49.5898, 0.55", "84.1403, 9.76224, -51.8265, 0.55", "85.0624, 10.0724, -52.6005, 0.55", "86.2094, 10.4189, -53.5667, 0.55", "88.2836, 11.0642, -55.4432, 0.55", "90.4293, 11.6631, -57.4789, 0.55", "91.4625, 11.8628, -58.4726, 0.83", "92.299, 11.9854, -59.3717, 0.55", "92.9121, 12.0414, -60.1236, 0.83", "94.3424, 11.985, -62.1048, 0.55", "95.496, 11.8184, -63.7799, 0.55", "96.8229, 11.5953, -65.6377, 0.55", "98.3088, 11.4051, -67.7255, 0.55", "99.2993, 11.2587, -69.1604, 0.55", "100.415, 11.1011, -70.8194, 0.55", "101.385, 11.0258, -72.3159, 0.55", "102.004, 11.0681, -73.328, 0.55", "102.758, 11.28, -75.3137, 0.55", "103.154, 11.3873, -76.5605, 0.55", "103.45, 11.4992, -78.2186, 0.55", "103.806, 11.6294, -81.0335, 0.55", "103.87, 11.6379, -81.6736, 0.28", "104.719, 11.6419, -89.4859, 0.28", "105.036, 11.6466, -91.7802, 0.83", "106.321, 11.4901, -99.971, 0.83", "106.985, 11.256, -103.823, 0.83", "107.317, 11.0882, -105.405, 0.55", "107.722, 10.9032, -106.955, 0.55", "108.957, 10.4065, -109.885, 0.55", "110.327, 9.89263, -112.488, 0.28", "110.779, 9.67874, -112.702, 0.55", "111.8, 9.17473, -112.774, 0.28", "112.444, 8.88354, -112.71, 0.55", "113.116, 8.55367, -112.588, 0.28", "113.931, 8.18921, -112.392, 0.55", "115.162, 7.74902, -112.21, 0.28", "116.142, 7.37364, -112.106, 0.55", "117.239, 7.05833, -112.056, 0.28", "118.728, 6.67299, -112.118, 0.55", "120.403, 6.30966, -112.275, 0.55", "121.876, 6.03627, -112.506, 0.28", "123.916, 5.70945, -112.932, 0.55", "127.451, 5.35236, -114.011, 0.55", "129.023, 5.33162, -114.651, 0.55", "129.703, 5.37196, -114.989, 0.83", "130.996, 5.49183, -115.746, 0.55", "131.898, 5.62791, -116.317, 0.83", "134.34, 6.06636, -117.86, 0.55", "135.809, 6.24186, -118.869, 0.28", "136.422, 6.25675, -119.236, 0.55", "138.074, 6.08432, -120.102, 0.28", "138.643, 5.95724, -120.383, 0.55", "139.805, 5.56373, -120.797, 0.28", "140.97, 4.97916, -121.043, 0.55", "143.31, 3.53574, -121.143, 0.28", "144.381, 2.7832, -121.083, 0.55", "145.958, 1.53743, -120.931, 0.28", "147.954, -0.0500693, -120.66, 0.55", "149.402, -1.18332, -120.434, 0.55", "151.93, -3.07226, -119.973, 0.28", "152.975, -3.76867, -119.86, 0.55", "154.793, -4.79716, -119.842, 0.28", "156.63, -5.63447, -119.913, 0.55", "157.658, -5.93074, -120.063, 0.28", "158.61, -6.047, -120.235, 0.55", "161.323, -6.14016, -120.925, 0.28", "163.286, -6.06279, -121.411, 0.28", "165.017, -5.86485, -121.822, 0.55", "166.936, -5.56724, -122.355, 0.28", "167.425, -5.46709, -122.465, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "81.1929, 8.70579, -49.5898, 0.55", "81.4179, 6.78035, -51.7418, 0.55", "81.4399, 5.12867, -53.4224, 0.28", "81.4608, 3.56925, -54.8175, 0.55", "81.6956, 0.252454, -57.8207, 0.28", "81.7034, 0.0547047, -58.0411, 0.55", "81.7763, -0.9538, -59.2954, 0.28", "81.7408, -1.72711, -60.4823, 0.55", "81.641, -2.48962, -61.8341, 0.28", "81.4615, -3.50385, -63.74, 0.55", "81.0093, -6.07176, -68.4593, 0.55", "80.5581, -8.38946, -72.8151, 0.55", "80.1712, -10.2377, -76.2985, 0.55", "79.7439, -12.0633, -79.6747, 0.55", "79.6318, -12.5437, -80.5192, 0.28", "79.5336, -13.0779, -81.3649, 0.55", "79.4922, -13.8575, -82.4534, 0.28", "79.6016, -15.3274, -84.2589, 0.55", "80.1111, -18.3446, -87.2151, 0.55", "80.404, -20.02, -88.6479, 0.28", "80.5928, -21.6849, -90.1757, 0.55", "80.6654, -23.9636, -92.3974, 0.28", "80.5892, -25.7712, -94.2291, 0.55", "80.3416, -28.4561, -96.9651, 0.28", "80.1107, -31.2679, -99.7007, 0.55", "79.7125, -35.3302, -103.709, 0.28", "79.4454, -37.4866, -105.85, 0.55", "79.1295, -39.6684, -108.095, 0.28", "78.8252, -41.5434, -110.206, 0.28", "78.537, -43.8258, -113.088, 0.55", "78.452, -45.9837, -115.709, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "68.8692, 16.373, -7.84998, 0.55", "71.5745, 15.4506, -8.01849, 0.55", "73.5097, 14.8064, -8.34707, 0.55", "77.7102, 13.4683, -9.29201, 0.55", "79.5711, 12.92, -9.89099, 0.55", "81.5993, 12.4197, -10.6159, 0.55", "84.3104, 11.8997, -11.7406, 0.55", "87.1206, 11.4269, -13.2207, 0.55", "88.5706, 11.2541, -14.1673, 0.55", "91.4666, 11.1311, -16.4776, 0.55", "92.7976, 11.1104, -17.5765, 0.55", "95.8915, 11.0476, -20.266, 0.55", "97.9688, 10.9075, -22.1206, 0.55", "99.5044, 10.753, -23.4218, 0.83", "101.94, 10.3946, -25.5278, 0.55", "104.308, 9.86601, -27.5679, 0.83", "106.304, 9.27651, -29.2827, 0.55", "108.1, 8.72325, -30.6983, 0.55", "109.14, 8.42205, -31.4195, 0.83", "111.587, 7.65136, -32.9721, 0.28", "112.826, 7.27475, -33.6387, 0.28", "113.999, 6.86911, -34.3875, 0.28", "115.274, 6.4689, -35.1825, 0.28", "117.318, 5.89246, -36.4732, 0.28", "118.147, 5.65667, -36.9626, 0.55", "120.158, 5.00138, -37.9333, 0.55", "123.793, 3.68328, -39.5265, 0.55", "124.799, 3.267, -39.9407, 0.55", "125.695, 2.84415, -40.2908, 0.83", "127.676, 1.89641, -40.8669, 0.55", "129.402, 1.0605, -41.3399, 0.55", "131.036, 0.273191, -41.7758, 0.55", "132.291, -0.33816, -42.1593, 0.55", "134.237, -1.38979, -42.9382, 0.55", "136.463, -2.75992, -44.0965, 0.55", "139.792, -5.15001, -46.3721, 0.55", "141.532, -6.68134, -47.9103, 0.55", "142.956, -8.25255, -49.4966, 0.28", "143.35, -8.81659, -50.0636, 0.55", "144.126, -10.3722, -51.5727, 0.28", "144.68, -12.1056, -53.1671, 0.55", "145.072, -14.3387, -54.9208, 0.55", "145.356, -15.8485, -56.0089, 0.28", "145.469, -16.3974, -56.3703, 0.55", "145.778, -17.7737, -57.2561, 0.28", "146.226, -19.5917, -58.3772, 0.55", "147.492, -24.0471, -61.0138, 0.55", "148.174, -26.3208, -62.3085, 0.55", "148.816, -28.4156, -63.4816, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "68.8692, 16.373, -7.84998, 0.55", "70.5763, 16.775, -6.35839, 0.55", "71.1266, 16.8948, -5.91086, 0.55", "73.1764, 17.2135, -4.31516, 0.55", "75.466, 17.6263, -2.50763, 0.55", "78.3916, 18.1658, -0.108951, 0.55", "79.2004, 18.3146, 0.547801, 0.55", "80.6472, 18.5173, 1.72241, 0.55", "82.2433, 18.766, 2.94038, 0.55", "84.1131, 19.0928, 4.25986, 0.55", "85.877, 19.4292, 5.50483, 0.55", "86.8537, 19.6513, 6.13318, 0.55", "88.004, 19.947, 6.86247, 0.55", "89.4336, 20.3512, 7.73078, 0.83", "91.7995, 20.954, 8.90728, 0.55", "93.3676, 21.2717, 9.62308, 0.83", "95.5424, 21.5916, 10.5614, 0.55", "96.2076, 21.6495, 10.8468, 0.55", "98.2658, 21.7116, 11.7089, 0.55", "101.942, 21.5551, 13.1461, 0.55", "104.624, 21.2685, 14.1651, 0.55", "106.733, 20.9475, 15.0409, 0.55", "108.865, 20.5152, 16.0304, 0.55", "109.312, 20.4117, 16.2433, 0.28", "110.214, 20.1621, 16.6796, 0.83", "113.913, 19.0828, 18.5044, 0.55", "116.506, 18.3198, 19.7283, 0.55", "118.634, 17.7643, 20.7778, 0.55", "119.904, 17.431, 21.4182, 0.83", "120.905, 17.1849, 21.9214, 0.28", "121.814, 16.9613, 22.3687, 0.55", "128.971, 17.3291, 26.5759, 0.55", "136.579, 16.0679, 29.6495, 0.55", "144.214, 15.9215, 32.9138, 0.55", "150.737, 14.9967, 37.9633, 0.55", "156.625, 13.0418, 43.4912, 0.55", "163.21, 9.35641, 47.053, 0.55", "169.718, 4.6157, 49.3763, 0.55", "177.135, 1.21001, 51.0445, 0.55", "184.404, -2.20531, 53.2634, 0.55", "192.129, -4.8351, 54.8496, 0.55", "199.763, -6.87404, 57.4078, 0.55", "206.709, -10.2202, 60.5692, 0.55", "213.93, -11.9294, 64.295, 0.55", "220.843, -12.1317, 68.8904, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-0.490939, -32.567, 5.91068, 1.38", "2.85724, -35.7093, 5.77709, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.490939, -32.567, 5.91068, 0.55", "-1.06305, -33.6564, 5.58353, 0.55", "-1.67555, -35.0371, 5.23086, 0.55", "-2.17349, -35.963, 4.9557, 0.55", "-2.54794, -36.7361, 4.64422, 0.55", "-3.31347, -38.3429, 3.85613, 0.55", "-3.84361, -39.4202, 3.27946, 0.55", "-4.29902, -40.385, 2.74094, 0.55", "-5.48378, -42.7448, 1.3533, 0.55", "-6.92803, -45.4871, -0.30168, 0.55", "-8.03486, -47.5681, -1.61403, 0.55", "-8.72845, -48.9306, -2.46518, 0.55", "-9.51884, -50.5585, -3.43494, 0.55", "-10.5048, -52.8687, -4.63314, 0.55", "-11.0619, -54.4845, -5.30246, 0.55", "-11.7696, -56.7875, -6.01623, 0.55", "-12.3191, -58.9268, -6.53598, 0.55", "-12.8278, -61.5704, -7.02294, 0.55", "-13.2609, -64.6489, -7.41806, 0.55", "-13.435, -66.9784, -7.56776, 0.55", "-13.4941, -68.1303, -7.54402, 0.55", "-13.5714, -70.8214, -7.29157, 0.55", "-13.6387, -73.3355, -6.98019, 0.55", "-13.6898, -75.8565, -6.45101, 0.55", "-13.7691, -77.3055, -6.08965, 0.55", "-14.0707, -81.7849, -4.82414, 0.55", "-14.0975, -82.115, -4.72724, 0.55", "-14.2539, -84.1333, -4.07503, 0.55", "-14.7116, -87.762, -2.91926, 0.55", "-14.8361, -88.9753, -2.5951, 0.55", "-14.9144, -90.8727, -2.3766, 0.55", "-14.8522, -91.5735, -2.4187, 0.55", "-14.3432, -93.9284, -2.87753, 0.55", "-13.789, -95.4401, -3.40028, 0.55", "-12.6141, -97.8345, -4.6101, 0.55", "-10.9672, -100.747, -6.22284, 0.28", "-10.5028, -101.465, -6.69832, 0.55", "-9.74848, -102.551, -7.49882, 0.28", "-9.63178, -102.715, -7.62758, 0.55", "-9.03548, -103.613, -8.27018, 0.28", "-8.88518, -103.921, -8.43904, 0.55", "-8.28473, -105.532, -9.07461, 0.28", "-8.10137, -106.083, -9.29535, 0.55", "-7.63123, -107.679, -9.86801, 0.28", "-7.48228, -108.181, -10.0457, 0.55", "-6.99359, -109.915, -10.6421, 0.28", "-6.76338, -110.712, -10.9179, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.52037, -82.2936, 63.1192, 0.55", "-4.66261, -90.8195, 70.4002, 0.55", "-9.06906, -98.4911, 77.8777, 0.55", "-13.0259, -106.889, 84.8837, 0.55", "-17.1568, -115.361, 91.7041, 0.55", "-19.8726, -124.973, 97.8391, 0.55", "-22.572, -134.184, 104.517, 0.55", "-23.5971, -145.045, 109.098, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.52037, -82.2936, 63.1192, 0.55", "-0.0470849, -89.1674, 69.5501, 0.55", "1.83169, -97.0895, 74.6467, 0.55", "2.22879, -105.209, 79.7788, 0.55", "2.09709, -113.847, 84.085, 0.55", "2.34074, -122.416, 88.5157, 0.55", "2.65061, -130.626, 93.5202, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-48.5066, 47.8602, -17.6184, 0.83", "-47.7454, 50.3029, -19.6556, 0.83", "-46.0967, 56.1683, -24.1804, 0.55", "-45.407, 58.6839, -25.9439, 0.83", "-44.6818, 61.3628, -27.6644, 0.55", "-43.9823, 64.092, -29.0823, 0.55", "-43.6419, 65.451, -29.633, 0.28", "-43.4948, 66.3356, -29.7965, 0.55", "-42.9955, 69.2445, -29.7461, 0.28", "-42.7602, 70.4844, -29.6621, 0.55", "-42.0131, 74.7818, -29.2097, 0.28", "-41.518, 78.1783, -28.7516, 0.55", "-41.005, 83.4686, -27.9073, 0.28", "-40.7195, 88.1108, -27.0978, 0.28", "-40.7087, 90.704, -26.6129, 0.55", "-40.8761, 93.7764, -26.057, 0.28", "-41.0503, 95.2397, -25.7827, 0.55", "-41.6217, 98.6908, -25.3069, 0.28", "-42.1342, 100.998, -25.1213, 0.28", "-42.6753, 103.268, -25.01, 0.28", "-42.9173, 104.469, -24.9507, 0.55", "-43.6375, 109.34, -24.7904, 0.28", "-44.2981, 115.122, -24.6797, 0.55", "-44.498, 117.121, -24.6457, 0.55", "-44.7333, 119.12, -24.5744, 0.55", "-45.4365, 123.368, -24.513, 0.55", "-46.0597, 126.156, -24.5493, 0.28", "-46.4088, 127.21, -24.5899, 0.55", "-47.5498, 130.052, -24.6651, 0.28", "-48.8675, 133.083, -24.8728, 0.55", "-51.1248, 137.443, -25.3776, 0.28", "-52.2461, 139.261, -25.6662, 0.28", "-54.0823, 141.798, -26.3442, 0.55", "-56.1451, 144.446, -27.2023, 0.28", "-56.5251, 144.861, -27.3636, 0.55", "-57.906, 146.183, -27.9504, 0.28", "-62.6974, 150.408, -29.9052, 0.55", "-69.3673, 155.639, -32.9464, 0.28", "-70.5958, 156.523, -33.5942, 0.55", "-73.9695, 158.808, -35.4459, 0.28", "-75.3829, 159.748, -36.2663, 0.28", "-76.6066, 160.535, -37.0455, 0.55", "-80.1816, 162.372, -39.6635, 0.28", "-82.7329, 163.367, -41.4282, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-48.5066, 47.8602, -17.6184, 0.55", "-48.6871, 49.5605, -17.7164, 0.55", "-48.8264, 50.5575, -17.6887, 0.28", "-49.0766, 51.2586, -17.5175, 0.55", "-49.6512, 52.8686, -17.1243, 0.28", "-50.0548, 53.9994, -16.8481, 0.55", "-50.7988, 56.0841, -16.339, 0.28", "-51.3246, 57.1875, -15.8899, 0.55", "-53.4294, 59.747, -13.9885, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-146.618, -39.8113, -59.4635, 0.55", "-152.016, -46.0011, -65.852, 0.55", "-155.755, -52.8307, -72.8497, 0.55", "-158.327, -58.3573, -81.302, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-146.618, -39.8113, -59.4635, 0.55", "-150.245, -43.1856, -64.3355, 0.55", "-153.072, -46.4389, -69.7922, 0.55", "-155.609, -49.7672, -75.3535, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-169.875, 16.9145, 32.9014, 0.55", "-181.007, 15.2362, 36.8456, 0.55", "-192.312, 15.5577, 40.6793, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-169.875, 16.9145, 32.9014, 0.55", "-180.974, 15.7556, 33.5316, 0.55", "-191.992, 16.1415, 35.3327, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "78.452, -45.9837, -115.709, 0.28", "84.1665, -47.7982, -126.911, 0.28", "84.7076, -48.0611, -127.938, 0.55", "85.6213, -48.5048, -129.671, 0.28", "86.3906, -48.8785, -131.13, 0.28", "87.4089, -49.3731, -133.062, 0.55", "88.7515, -50.0253, -135.609, 0.55", "90.2578, -51.8639, -137.34, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "78.452, -45.9837, -115.709, 0.55", "78.9806, -47.0816, -117.734, 0.55", "79.0936, -47.5427, -118.634, 0.28", "79.2279, -48.3071, -120.199, 0.55", "79.5236, -49.9912, -123.648, 0.28", "79.7286, -51.1583, -126.037, 0.55", "80.0758, -53.1357, -130.086, 0.28", "80.418, -55.4141, -135.311, 0.28", "80.5056, -56.4291, -137.745, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "148.816, -28.4156, -63.4816, 0.28", "150.482, -31.6014, -64.157, 0.28", "152.602, -35.9124, -64.7305, 0.28", "153.947, -38.7419, -65.0007, 0.55", "154.785, -40.3345, -65.0969, 0.28", "155.23, -41.1939, -65.1408, 0.28", "157.432, -45.4182, -65.4137, 0.55", "157.956, -46.3961, -65.3751, 0.28", "159.189, -49.0108, -65.1113, 0.55", "160.228, -51.2553, -64.9536, 0.28", "161.144, -53.0761, -64.8639, 0.55", "162.198, -55.2127, -64.8623, 0.55", "163.832, -58.4823, -65.21, 0.55", "164.22, -59.2751, -65.3187, 0.55", "165.592, -62.2194, -65.743, 0.28", "166.111, -63.4097, -65.9388, 0.55", "166.854, -64.9347, -66.2045, 0.28", "167.891, -67.0688, -66.6666, 0.55", "169.577, -70.2884, -67.8396, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "148.816, -28.4156, -63.4816, 0.55", "146.336, -28.1557, -63.0691, 0.55", "144.321, -27.9447, -62.7341, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.85724, -35.7093, 5.77709, 0.83", "3.01007, -35.9745, 5.79768, 0.83", "4.65537, -38.288, 6.21989, 0.83", "6.1364, -40.3132, 6.45746, 0.55", "7.31794, -41.9289, 6.64699, 0.55", "9.82935, -45.3632, 7.04983, 0.83", "12.8755, -49.5286, 7.53846, 0.55", "14.5135, -51.7035, 7.85347, 0.83", "17.3247, -55.1394, 8.58145, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "2.85724, -35.7093, 5.77709, 0.55", "1.69257, -36.6038, 3.80755, 0.55", "0.442445, -37.5638, 1.69349, 0.55", "-1.03335, -38.6971, -0.802174, 0.55", "-2.82544, -40.0734, -3.83272, 0.55", "-3.84238, -40.8543, -5.55246, 0.55", "-4.04667, -41.0112, -5.89793, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.65061, -130.626, 93.5202, 0.55", "3.76581, -140.35, 99.6607, 0.55", "5.59013, -150.893, 104.136, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.65061, -130.626, 93.5202, 0.55", "2.91106, -137.333, 97.2441, 0.55", "2.84849, -143.892, 101.203, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-53.4294, 59.747, -13.9885, 0.28", "-54.5406, 61.2766, -12.5902, 0.28", "-54.9577, 61.8562, -11.9926, 0.55", "-56.1471, 63.5352, -10.226, 0.28", "-56.741, 64.3672, -9.43683, 0.55", "-58.3684, 66.6195, -7.38111, 0.28", "-60.0223, 68.9087, -5.29176, 0.55", "-62.7692, 72.4958, -1.79672, 0.28", "-63.3535, 73.2662, -1.05182, 0.55", "-64.6345, 75.0713, 0.52295, 0.28", "-65.131, 75.8195, 1.14073, 0.55", "-70.9872, 80.84, 6.47937, 0.55", "-77.4599, 86.9024, 9.7078, 0.55", "-82.9483, 93.2069, 14.1121, 0.55", "-87.1783, 100.65, 18.2827, 0.55", "-92.3919, 107.74, 21.8587, 0.55", "-98.423, 113.386, 26.3688, 0.55", "-103.868, 118.29, 32.2159, 0.55", "-108.487, 122.215, 39.3187, 0.55", "-113.103, 126.69, 46.1172, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-53.4294, 59.747, -13.9885, 0.55", "-56.2136, 58.5551, -13.8116, 0.55", "-57.6567, 57.8882, -13.7322, 0.28", "-58.7307, 57.3919, -13.6732, 0.55", "-59.6258, 56.9783, -13.6239, 0.28", "-60.2527, 56.6886, -13.5894, 0.55", "-61.9815, 55.8898, -13.4943, 0.28", "-63.0908, 55.2917, -13.5854, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-158.327, -58.3573, -81.302, 0.55", "-161.801, -65.7544, -87.2197, 0.55", "-165.145, -73.8348, -92.2854, 0.55", "-167.66, -81.1314, -98.8137, 0.55", "-171.226, -88.8786, -104.215, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-158.327, -58.3573, -81.302, 0.55", "-161.083, -59.526, -88.2871, 0.55", "-163.424, -59.4832, -95.4695, 0.55", "-166.452, -60.5449, -102.351, 0.55", "-171.004, -60.669, -108.363, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-155.609, -49.7672, -75.3535, 0.55", "-160.851, -51.0212, -88.1331, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-155.609, -49.7672, -75.3535, 0.55", "-159.23, -58.458, -81.6496, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "90.2578, -51.8639, -137.34, 0.28", "93.1788, -53.7162, -139.714, 0.28", "94.5357, -54.5767, -140.817, 0.55", "97.1232, -56.2174, -142.919, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "90.2578, -51.8639, -137.34, 0.55", "89.6504, -52.4178, -138.918, 0.55", "88.4354, -53.5255, -142.073, 0.28", "88.0396, -53.8864, -143.101, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "80.5056, -56.4291, -137.745, 0.28", "80.9047, -58.656, -142.121, 0.28", "81.1024, -59.7587, -144.288, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "80.5056, -56.4291, -137.745, 0.55", "78.6185, -57.0781, -137.067, 0.55", "73.3563, -58.8876, -135.175, 0.28", "72.1062, -59.3175, -134.726, 0.55", "68.6866, -60.4935, -133.497, 0.28", "66.4823, -61.2515, -132.705, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "17.3247, -55.1394, 8.58145, 0.83", "17.4178, -55.483, 8.55966, 0.83", "18.6463, -59.9762, 8.41291, 0.83", "19.2225, -63.3836, 8.37715, 0.83", "19.4427, -66.7119, 8.55048, 0.83", "19.4696, -71.1706, 9.01088, 0.83", "19.3051, -76.3297, 9.65015, 0.83", "19.0254, -82.0987, 10.6339, 0.83", "18.6552, -87.7121, 11.813, 0.83", "17.8788, -94.6445, 12.9489, 0.83", "17.443, -97.8409, 13.2484, 0.83", "17.1654, -100.24, 13.3407, 0.83", "16.5872, -104.85, 13.3967, 0.83", "16.239, -108.961, 13.2894, 0.83", "16.2786, -117.642, 12.405, 0.83", "16.5886, -122.362, 11.4062, 0.83", "16.996, -126.7, 10.2078, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.3247, -55.1394, 8.58145, 0.55", "16.8221, -56.9562, 8.33649, 0.55", "16.4011, -58.2801, 8.23224, 0.55", "16.1152, -59.1272, 8.24458, 0.55", "15.666, -60.451, 8.39539, 0.55", "14.7628, -63.0711, 8.86051, 0.55", "13.9761, -65.063, 9.38493, 0.55", "13.2769, -66.6649, 9.94521, 0.55", "12.4922, -68.2904, 10.5885, 0.55", "11.8037, -69.6418, 11.1746, 0.28", "11.1629, -70.7526, 11.7778, 0.55", "9.84523, -72.7871, 13.0855, 0.55", "8.92933, -74.0449, 13.9676, 0.55", "8.41287, -74.75, 14.453, 0.55", "7.78787, -75.5843, 14.9742, 0.83", "5.98273, -78.0553, 16.3795, 0.28", "5.39483, -78.8723, 16.8272, 0.55", "4.38892, -80.3416, 17.6154, 0.28", "4.06598, -80.7954, 17.8849, 0.55", "3.36312, -81.855, 18.5249, 0.28", "2.98444, -82.4559, 18.8548, 0.55", "1.86683, -84.4065, 19.4557, 0.55", "-0.917454, -89.6022, 23.2676, 0.55", "-3.5623, -94.5428, 27.4707, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.04667, -41.0112, -5.89793, 0.55", "-5.79325, -42.5867, -10.0803, 0.55", "-6.3249, -42.9661, -11.2784, 0.55", "-7.6978, -43.9139, -14.2035, 0.55", "-10.7887, -45.8078, -20.4145, 0.28", "-11.2681, -46.0676, -21.2956, 0.55", "-13.3215, -47.2382, -24.8496, 0.55", "-16.3034, -48.8175, -29.3285, 0.55", "-17.4592, -49.3642, -31.0086, 0.28", "-18.5024, -49.7339, -32.411, 0.28", "-20.4129, -50.2931, -34.5026, 0.55", "-22.6979, -50.8346, -37.1677, 0.28", "-24.7802, -51.0908, -39.7036, 0.55", "-26.4022, -51.1009, -41.6386, 0.55", "-27.4991, -50.9818, -43.0228, 0.55", "-30.669, -50.4358, -47.2236, 0.55", "-34.0324, -49.5319, -51.587, 0.55", "-35.4378, -49.0469, -53.3536, 0.28", "-36.7612, -48.6179, -55.0609, 0.55", "-39.4664, -47.9906, -58.4741, 0.28", "-40.3823, -47.8155, -59.6089, 0.83", "-42.1518, -47.4509, -61.5868, 0.28", "-43.5107, -47.3046, -62.8052, 0.55", "-45.5041, -47.1764, -64.5242, 0.28", "-46.3095, -47.1107, -65.1806, 0.55", "-47.8379, -47.0179, -66.3069, 0.55", "-50.1778, -46.5934, -67.9319, 0.55", "-51.739, -46.1981, -68.9095, 0.28", "-53.0325, -45.692, -69.605, 0.55", "-54.5489, -44.885, -70.4451, 0.28", "-54.7947, -44.7302, -70.5934, 0.55", "-56.9127, -43.2696, -72.374, 0.28", "-58.3823, -42.1833, -73.8507, 0.55", "-60.2023, -40.6051, -76.1202, 0.83", "-61.623, -39.2713, -78.2013, 0.28", "-61.9723, -38.9337, -78.786, 0.55", "-64.5765, -36.4175, -83.4727, 0.28", "-65.0085, -35.9932, -84.3558, 0.55", "-66.2331, -34.6052, -87.0909, 0.28", "-66.5478, -34.2485, -87.8005, 0.55", "-67.3889, -33.3133, -89.5354, 0.28", "-68.0065, -32.6357, -90.7083, 0.55", "-69.504, -31.1031, -93.0244, 0.28", "-70.4151, -30.2848, -94.348, 0.55", "-72.4206, -28.7091, -97.0254, 0.28", "-73.0247, -28.2858, -97.8081, 0.55", "-73.9934, -27.7228, -98.9855, 0.28", "-74.8333, -27.2458, -99.9332, 0.55", "-76.6275, -26.279, -101.773, 0.28", "-77.1766, -26.0025, -102.305, 0.55", "-81.3347, -23.831, -106.043, 0.28", "-82.841, -22.9293, -107.215, 0.55", "-85.5898, -21.1499, -109.124, 0.28", "-86.8408, -20.2863, -109.947, 0.55", "-89.7721, -18.3198, -111.652, 0.28", "-90.8676, -17.6507, -112.225, 0.55", "-94.9236, -15.6244, -114.051, 0.28", "-96.6307, -15.0165, -114.782, 0.55", "-99.0966, -14.5925, -115.77, 0.55", "-100.629, -14.4354, -116.336, 0.55", "-103.834, -14.1886, -117.241, 0.28", "-107.046, -13.9676, -117.934, 0.28", "-109.743, -13.7686, -118.436, 0.55", "-113.119, -13.207, -118.718, 0.28", "-114.832, -12.7039, -118.655, 0.55", "-118.959, -10.8296, -118.162, 0.28", "-121.151, -9.4225, -117.457, 0.55", "-122.599, -8.28259, -116.728, 0.28", "-124.266, -6.97586, -115.549, 0.55", "-126.37, -5.25617, -113.849, 0.28", "-127.172, -4.64731, -113.211, 0.55", "-131.331, -1.90856, -110.344, 0.28", "-132.738, -1.04094, -109.389, 0.55", "-136.098, 0.898334, -107.032, 0.28", "-137.926, 1.92994, -105.751, 0.55", "-139.429, 2.77517, -104.702, 0.55", "-141.226, 3.7688, -103.491, 0.28", "-142.16, 4.26683, -103.007, 0.55", "-145.282, 6.028, -101.573, 0.28", "-146.903, 7.14063, -100.799, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-4.04667, -41.0112, -5.89793, 0.55", "-3.58853, -41.154, -6.43123, 0.55", "-3.10717, -41.2162, -6.95881, 0.55", "-2.471, -41.23, -7.5885, 0.55", "-1.92836, -41.1818, -8.08188, 0.55", "1.87265, -40.3655, -11.0707, 0.55", "2.73251, -40.0642, -11.7612, 0.55", "3.9966, -39.5092, -12.8126, 0.55", "4.89071, -39.0801, -13.5641, 0.55", "5.77388, -38.5995, -14.2787, 0.28", "7.16737, -37.7651, -15.3133, 0.55", "9.29429, -36.4437, -16.74, 0.28", "9.46147, -36.3726, -16.9091, 0.55", "10.2868, -36.2137, -18.2783, 0.28", "10.6874, -36.1777, -19.2894, 0.55", "11.0171, -36.225, -20.421, 0.55", "11.578, -36.4215, -22.4571, 0.55", "12.6887, -36.8377, -26.448, 0.55", "13.4811, -37.1476, -29.1123, 0.55", "13.7789, -37.2635, -30.0237, 0.55", "15.8791, -37.9726, -35.967, 0.55", "16.5164, -38.1383, -37.5526, 0.55", "16.9411, -38.2307, -38.4148, 0.55", "18.1057, -38.5005, -40.3342, 0.55", "21.165, -39.4225, -44.7582, 0.55", "22.0394, -39.7298, -45.9105, 0.28", "22.5871, -39.9403, -46.526, 0.55", "23.4155, -40.3025, -47.4196, 0.28", "23.783, -40.5012, -47.7573, 0.55", "25.1013, -41.3001, -48.4416, 0.28", "26.1327, -42.2592, -48.3036, 0.55", "26.7405, -42.9332, -48.1695, 0.28", "27.2802, -43.6658, -47.9622, 0.55", "27.7375, -44.4562, -47.7206, 0.28", "27.9333, -44.8633, -47.6195, 0.55", "28.3728, -45.9243, -47.3297, 0.28", "28.4912, -46.2441, -47.2954, 0.55", "29.1814, -48.0844, -47.1974, 0.28", "29.5432, -48.9436, -47.2509, 0.55", "30.4156, -50.794, -47.5458, 0.28", "30.7769, -51.4809, -47.7198, 0.55", "32.07, -53.7466, -48.4028, 0.28", "32.3918, -54.299, -48.5899, 0.55", "33.3769, -56.052, -49.2486, 0.28", "33.5803, -56.4604, -49.3782, 0.55", "34.0829, -57.5386, -49.7181, 0.28", "34.3905, -58.1683, -49.9702, 0.55", "34.7208, -58.79, -50.2592, 0.55", "35.3789, -60.0299, -50.8272, 0.28", "35.8668, -60.8035, -51.2478, 0.55", "37.5067, -62.7678, -52.6356, 0.28", "38.1662, -63.4162, -53.2113, 0.55", "38.6307, -63.8304, -53.6002, 0.28", "39.1114, -64.2117, -53.9873, 0.55", "40.6231, -65.2886, -55.1532, 0.28", "41.7717, -66.1198, -56.0023, 0.55", "43.7346, -67.6742, -57.2854, 0.28", "44.3541, -68.1581, -57.6864, 0.55", "45.5573, -69.0448, -58.3508, 0.28", "45.9611, -69.334, -58.5392, 0.55", "46.6223, -69.7899, -58.7261, 0.28", "47.2077, -70.1725, -58.8415, 0.55", "48.8004, -71.1167, -58.9956, 0.28", "50.6347, -72.1219, -59.1463, 0.28", "51.5646, -72.5841, -59.1598, 0.28", "52.5083, -73.0237, -59.2311, 0.55", "53.8942, -73.6019, -59.3442, 0.28", "54.511, -73.8489, -59.3822, 0.83", "56.0788, -74.4962, -59.4189, 0.28", "56.7594, -74.795, -59.4712, 0.55", "59.7464, -76.2311, -59.8314, 0.28", "61.2427, -76.9742, -60.1285, 0.28", "62.3324, -77.5187, -60.4145, 0.55", "62.9666, -77.8537, -60.6505, 0.55", "64.6461, -78.7737, -61.4062, 0.28", "66.2068, -79.7098, -62.1716, 0.55", "67.623, -80.6077, -62.8665, 0.28", "68.8997, -81.4429, -63.5611, 0.55", "69.957, -82.1198, -64.1298, 0.28", "70.8315, -82.6068, -64.5522, 0.55", "72.9592, -83.6538, -65.4817, 0.28", "74.0396, -84.1802, -65.9093, 0.55", "75.6637, -84.972, -66.4926, 0.28", "76.998, -85.5791, -66.9418, 0.55", "80.1365, -86.8615, -68.0054, 0.28", "81.4203, -87.3155, -68.5259, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "5.59013, -150.893, 104.136, 0.55", "5.45289, -162.992, 109.373, 0.55", "4.39022, -176.003, 111.657, 0.55", "3.84815, -188.568, 115.732, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "5.59013, -150.893, 104.136, 0.55", "7.63195, -159.862, 109.626, 0.55", "8.99902, -167.479, 116.92, 0.55", "11.0427, -173.36, 125.412, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "2.84849, -143.892, 101.203, 0.55", "4.57108, -153.438, 107.189, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "2.84849, -143.892, 101.203, 0.55", "2.62514, -153.499, 106.559, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "16.996, -126.7, 10.2078, 0.83", "17.9721, -130.324, 11.052, 0.83", "18.8297, -133.368, 12.0198, 0.83", "19.6821, -136.395, 12.9818, 0.83", "20.4917, -139.269, 13.8954, 0.83", "21.7393, -143.698, 15.3033, 0.83", "22.9778, -148.095, 16.7011, 0.83", "23.8562, -150.989, 18.0542, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "16.996, -126.7, 10.2078, 0.55", "17.8819, -128.166, 11.1095, 0.55", "18.7288, -129.287, 11.6798, 0.55", "19.4004, -130.111, 12.0174, 0.55", "20.1992, -131.078, 12.21, 0.83", "21.1742, -132.168, 12.2816, 0.55", "22.1278, -133.234, 12.3517, 0.83", "23.2124, -134.384, 12.3022, 0.55", "23.8942, -135.044, 12.2322, 0.83", "26.1876, -137.168, 11.8174, 0.55", "27.9903, -138.838, 11.3011, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.5623, -94.5428, 27.4707, 0.55", "-9.36113, -105.472, 30.8601, 0.55", "-16.8648, -115.429, 33.4699, 0.55", "-25.5204, -124.332, 35.9627, 0.55", "-35.3739, -131.905, 37.9721, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.5623, -94.5428, 27.4707, 0.55", "-7.80993, -102.339, 31.5149, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "23.8562, -150.989, 18.0542, 0.55", "24.2459, -153.967, 18.9513, 0.55", "24.8399, -157.754, 20.1935, 0.55", "25.4027, -161.331, 21.347, 0.55", "25.7759, -163.878, 22.1281, 0.55", "26.3956, -168.431, 23.4515, 0.55", "28.3403, -181.228, 26.8614, 0.55", "29.1103, -185.572, 27.8409, 0.55", "29.6711, -188.642, 28.3822, 0.55", "30.3511, -192.158, 28.7286, 0.55", "30.8424, -194.891, 28.7611, 0.55", "32.1832, -201.273, 28.5895, 0.55", "33.0386, -206.134, 28.4474, 0.55", "33.6792, -209.314, 28.4474, 0.55", "35.2961, -217.544, 28.854, 0.55", "36.3401, -223.069, 29.3635, 0.55", "37.7043, -230.172, 30.4094, 0.55", "39.3314, -238.196, 32.2021, 0.55", "40.6408, -243.516, 33.7296, 0.55", "41.4861, -246.65, 34.717, 0.55", "42.2129, -249.545, 35.6176, 0.55", "43.2004, -253.212, 36.5898, 0.55", "45.4985, -262.089, 38.3414, 0.55", "46.5057, -265.52, 38.8976, 0.55", "47.539, -269.35, 39.4888, 0.55", "49.0454, -275.106, 40.3461, 0.55", "50.0011, -279.548, 41.0411, 0.55", "50.6735, -283.792, 41.6415, 0.55", "51.1406, -287.854, 42.21, 0.55", "51.5291, -291.821, 42.8184, 0.55", "51.8232, -294.645, 43.2247, 0.55", "52.3375, -299.268, 43.7362, 0.55", "52.8957, -304.846, 43.9398, 0.55", "53.2416, -307.557, 43.8445, 0.55", "53.577, -309.943, 43.5879, 0.55", "54.4175, -314.438, 42.8524, 0.55", "54.9257, -317.293, 42.3089, 0.55", "55.5849, -320.804, 41.7681, 0.55", "55.9531, -323.274, 41.5297, 0.55", "56.7899, -329.694, 41.1487, 0.55", "57.2898, -334.496, 41.1919, 0.55", "57.921, -341.916, 41.8419, 0.55", "58.4099, -346.676, 42.7002, 0.55", "58.8796, -351.67, 43.758, 0.28", "59.017, -353.677, 44.2618, 0.28", "59.3103, -358.535, 45.9137, 0.28", "59.5263, -363.009, 47.7854, 0.28", "60.3169, -368.85, 50.8729, 0.28", "63.926, -381.978, 54.5529, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "23.8562, -150.989, 18.0542, 0.55", "24.559, -151.209, 18.5454, 0.55", "25.9649, -151.805, 19.6677, 0.55", "27.1603, -152.408, 20.6936, 0.28", "28.4268, -153.102, 21.8368, 0.55", "29.1396, -153.547, 22.6385, 0.28", "30.3129, -154.353, 24.1614, 0.55", "30.7238, -154.794, 24.971, 0.28", "30.8512, -154.953, 25.3033, 0.28", "31.0649, -155.173, 25.8802, 0.55", "31.9615, -155.868, 28.0061, 0.28", "32.3581, -156.133, 28.8842, 0.55", "33.6994, -156.894, 31.3157, 0.28", "34.474, -157.259, 32.5585, 0.28", "35.4905, -157.732, 34.0306, 0.55", "37.1131, -158.477, 36.0519, 0.28", "37.3498, -158.575, 36.2968, 0.55", "38.5667, -159.054, 37.4128, 0.28", "38.6846, -159.099, 37.501, 0.55", "39.7192, -159.667, 38.319, 0.28", "40.1981, -159.984, 38.7413, 0.55", "44.0952, -162.287, 42.2387, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-35.3739, -131.905, 37.9721, 0.55", "-40.9239, -135.979, 40.2244, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-35.3739, -131.905, 37.9721, 0.55", "-40.7241, -142.036, 37.7049, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L6_BP_be00ceca27_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.52847, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.68117, 9.3226, 2.96904, 0.83 ) }
    dend_43 { pt3dadd( -7.35937, 12.3161, 3.52376, 1.11 ) }
    dend_43 { pt3dadd( -9.52806, 14.0798, 3.81232, 0.83 ) }
    dend_43 { pt3dadd( -11.6351, 15.7786, 4.07086, 0.83 ) }
    dend_43 { pt3dadd( -12.8825, 16.7472, 4.21254, 1.11 ) }
    dend_43 { pt3dadd( -16.7891, 19.7741, 4.66661, 1.11 ) }
    dend_43 { pt3dadd( -23.7763, 24.9562, 5.46927, 0.83 ) }
    dend_43 { pt3dadd( -26.2936, 26.752, 5.73432, 0.83 ) }
    dend_43 { pt3dadd( -28.287, 28.1318, 5.89896, 0.83 ) }
    dend_43 { pt3dadd( -30.2308, 29.4992, 6.04147, 0.83 ) }
    dend_43 { pt3dadd( -31.8132, 30.6263, 6.11836, 0.55 ) }
    dend_43 { pt3dadd( -33.0026, 31.3894, 6.1964, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.70947, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 5.14649, 6.78851, -6.38422, 0.55 ) }
    dend_28 { pt3dadd( 8.60639, 7.57438, -7.15688, 0.55 ) }
    dend_28 { pt3dadd( 10.614, 7.77276, -8.17927, 0.83 ) }
    dend_28 { pt3dadd( 13.7915, 7.98388, -10.0784, 0.55 ) }
    dend_28 { pt3dadd( 15.3253, 8.08579, -10.9952, 1.38 ) }
    dend_28 { pt3dadd( 19.0967, 8.33637, -13.2493, 0.55 ) }
    dend_28 { pt3dadd( 20.7029, 8.25152, -14.3248, 0.83 ) }
    dend_28 { pt3dadd( 29.0119, 6.69537, -20.3678, 0.55 ) }
    dend_28 { pt3dadd( 29.8157, 6.48611, -21.0326, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.66503, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.685034, -11.1057, 3.26135, 1.11 ) }
    dend_1 { pt3dadd( -0.735097, -15.7437, 4.84488, 1.11 ) }
    dend_1 { pt3dadd( -0.755485, -17.6326, 5.4898, 0.83 ) }
    dend_1 { pt3dadd( -0.782573, -20.1421, 6.3466, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.96697, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.909065, 9.73145, -1.36428, 1.11 ) }
    dend_0 { pt3dadd( 1.05084, 11.286, -1.36369, 1.11 ) }
    dend_0 { pt3dadd( 1.29355, 13.8216, -1.27472, 1.38 ) }
    dend_0 { pt3dadd( 1.30984, 13.9626, -1.26786, 1.38 ) }
    dend_0 { pt3dadd( 1.61321, 15.7029, -1.18657, 0.83 ) }
    dend_0 { pt3dadd( 2.02297, 17.5384, -1.02247, 0.83 ) }
    dend_0 { pt3dadd( 2.70051, 19.5994, -0.634891, 0.83 ) }
    dend_0 { pt3dadd( 3.0677, 20.3754, -0.415424, 0.83 ) }
    dend_0 { pt3dadd( 3.41658, 20.9329, -0.217106, 1.11 ) }
    dend_0 { pt3dadd( 4.40557, 22.2838, 0.275309, 0.55 ) }
    dend_0 { pt3dadd( 5.55232, 23.6878, 0.868508, 0.83 ) }
    dend_0 { pt3dadd( 7.0065, 25.1176, 1.50782, 0.55 ) }
    dend_0 { pt3dadd( 7.73088, 25.7052, 1.78305, 0.83 ) }
    dend_0 { pt3dadd( 8.756, 26.4987, 2.2335, 0.55 ) }
    dend_0 { pt3dadd( 10.0425, 27.5088, 2.8645, 0.55 ) }
    dend_0 { pt3dadd( 11.8688, 29.0345, 3.85841, 0.55 ) }
    dend_0 { pt3dadd( 13.885, 30.7822, 4.95663, 0.55 ) }
    dend_0 { pt3dadd( 15.1937, 31.9162, 5.81779, 0.55 ) }
    dend_0 { pt3dadd( 16.842, 33.3501, 7.07468, 0.55 ) }
    dend_0 { pt3dadd( 17.1901, 33.6368, 7.36497, 0.83 ) }
    dend_0 { pt3dadd( 18.1224, 34.3934, 8.194, 0.55 ) }
    dend_0 { pt3dadd( 18.8931, 34.981, 8.83638, 0.83 ) }
    dend_0 { pt3dadd( 20.6916, 36.6027, 10.3687, 0.55 ) }
    dend_0 { pt3dadd( 21.3359, 37.1957, 10.792, 0.83 ) }
    dend_0 { pt3dadd( 21.9043, 37.6281, 11.0512, 0.55 ) }
    dend_0 { pt3dadd( 22.4484, 37.9975, 11.2272, 0.83 ) }
    dend_0 { pt3dadd( 23.6245, 38.6759, 11.5051, 0.83 ) }
    dend_0 { pt3dadd( 25.155, 39.6034, 11.7485, 0.83 ) }
    dend_0 { pt3dadd( 26.0769, 40.2213, 11.8054, 0.55 ) }
    dend_0 { pt3dadd( 26.784, 40.7607, 11.8525, 0.55 ) }
    dend_0 { pt3dadd( 28.6309, 42.1534, 11.9504, 0.83 ) }
    dend_0 { pt3dadd( 29.8141, 43.0467, 11.9692, 0.55 ) }
    dend_0 { pt3dadd( 31.5932, 44.3529, 11.9295, 0.55 ) }
    dend_0 { pt3dadd( 33.205, 45.4419, 11.8316, 0.55 ) }
    dend_0 { pt3dadd( 34.636, 46.3611, 11.7071, 0.55 ) }
    dend_0 { pt3dadd( 36.423, 47.4325, 11.4712, 0.55 ) }
    dend_0 { pt3dadd( 37.5009, 47.947, 11.2925, 0.55 ) }
    dend_0 { pt3dadd( 38.2144, 48.2309, 11.0846, 0.55 ) }
    dend_0 { pt3dadd( 39.1357, 48.4232, 10.7279, 0.55 ) }
    dend_0 { pt3dadd( 40.4733, 48.4652, 10.0792, 0.55 ) }
    dend_0 { pt3dadd( 41.2939, 48.3721, 9.64039, 0.55 ) }
    dend_0 { pt3dadd( 42.5111, 48.1974, 9.08942, 0.55 ) }
    dend_0 { pt3dadd( 44.8814, 47.9454, 8.25909, 0.55 ) }
    dend_0 { pt3dadd( 46.7758, 47.8413, 7.74469, 0.55 ) }
    dend_0 { pt3dadd( 48.8153, 47.8334, 7.32137, 0.55 ) }
    dend_0 { pt3dadd( 50.1479, 47.8749, 7.15323, 0.55 ) }
    dend_0 { pt3dadd( 53.6749, 48.3096, 6.94067, 0.55 ) }
    dend_0 { pt3dadd( 55.8029, 48.7307, 6.96662, 0.55 ) }
    dend_0 { pt3dadd( 57.4345, 49.1506, 7.12751, 0.55 ) }
    dend_0 { pt3dadd( 58.4416, 49.5685, 7.26126, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 59.6155, 50.2066, 7.41148, 0.55 ) }
    dend_0 { pt3dadd( 61.5769, 51.4832, 7.50562, 0.55 ) }
    dend_0 { pt3dadd( 62.0151, 51.7924, 7.47013, 0.55 ) }
    dend_0 { pt3dadd( 63.2521, 52.616, 7.29002, 0.55 ) }
    dend_0 { pt3dadd( 64.3942, 53.5023, 7.12074, 0.83 ) }
    dend_0 { pt3dadd( 65.0158, 53.9946, 7.01895, 0.55 ) }
    dend_0 { pt3dadd( 65.9447, 54.8466, 6.83152, 0.83 ) }
    dend_0 { pt3dadd( 71.1083, 59.3845, 7.07912, 0.83 ) }
    dend_0 { pt3dadd( 75.593, 64.6636, 6.97518, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -33.0026, 31.3894, 6.1964, 0.55 ) }
    dend_55 { pt3dadd( -34.1452, 32.4046, 5.41248, 0.55 ) }
    dend_55 { pt3dadd( -35.3878, 33.5086, 4.56004, 0.55 ) }
    dend_55 { pt3dadd( -36.8872, 34.8409, 3.53133, 0.55 ) }
    dend_55 { pt3dadd( -38.1254, 35.9409, 2.6819, 0.83 ) }
    dend_55 { pt3dadd( -39.1629, 36.8628, 1.97008, 0.55 ) }
    dend_55 { pt3dadd( -41.0888, 38.5739, 0.648831, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -33.0026, 31.3894, 6.1964, 0.55 ) }
    dend_44 { pt3dadd( -35.2798, 31.9738, 5.674, 0.55 ) }
    dend_44 { pt3dadd( -37.7392, 32.4763, 5.3493, 0.55 ) }
    dend_44 { pt3dadd( -40.5378, 33.0307, 5.04814, 0.55 ) }
    dend_44 { pt3dadd( -44.6445, 33.7297, 4.97424, 0.55 ) }
    dend_44 { pt3dadd( -48.117, 34.1733, 5.13581, 0.55 ) }
    dend_44 { pt3dadd( -51.7815, 34.5572, 5.44739, 0.55 ) }
    dend_44 { pt3dadd( -55.3806, 34.6253, 6.07927, 0.55 ) }
    dend_44 { pt3dadd( -58.5248, 34.3353, 6.86141, 0.55 ) }
    dend_44 { pt3dadd( -62.5034, 33.6395, 8.18806, 0.55 ) }
    dend_44 { pt3dadd( -64.2673, 33.1778, 8.96886, 0.55 ) }
    dend_44 { pt3dadd( -66.1835, 32.6478, 9.88392, 0.55 ) }
    dend_44 { pt3dadd( -69.548, 31.49, 11.321, 0.55 ) }
    dend_44 { pt3dadd( -71.302, 30.9193, 11.8305, 0.55 ) }
    dend_44 { pt3dadd( -73.1388, 30.2677, 12.3456, 0.55 ) }
    dend_44 { pt3dadd( -75.2934, 29.5522, 12.7572, 0.55 ) }
    dend_44 { pt3dadd( -77.6255, 28.8324, 13.1518, 0.55 ) }
    dend_44 { pt3dadd( -80.9444, 27.8076, 13.6453, 0.55 ) }
    dend_44 { pt3dadd( -85.3186, 26.7941, 13.9745, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 29.8157, 6.48611, -21.0326, 0.55 ) }
    dend_34 { pt3dadd( 34.7991, 7.5918, -22.0849, 0.55 ) }
    dend_34 { pt3dadd( 37.6496, 8.10493, -23.1103, 0.55 ) }
    dend_34 { pt3dadd( 40.4522, 8.48514, -24.179, 0.55 ) }
    dend_34 { pt3dadd( 42.361, 8.66506, -24.9184, 0.55 ) }
    dend_34 { pt3dadd( 45.1462, 8.85761, -25.9859, 0.55 ) }
    dend_34 { pt3dadd( 50.9113, 9.16252, -28.3955, 0.55 ) }
    dend_34 { pt3dadd( 57.4387, 9.51969, -31.5716, 0.55 ) }
    dend_34 { pt3dadd( 60.5834, 9.51227, -33.3577, 0.55 ) }
    dend_34 { pt3dadd( 62.2618, 9.47835, -34.4316, 0.55 ) }
    dend_34 { pt3dadd( 64.1013, 9.46016, -35.6837, 0.55 ) }
    dend_34 { pt3dadd( 67.3767, 9.3285, -37.9171, 0.55 ) }
    dend_34 { pt3dadd( 68.5597, 9.21116, -38.7777, 0.55 ) }
    dend_34 { pt3dadd( 73.5693, 8.89833, -42.8006, 0.55 ) }
    dend_34 { pt3dadd( 77.1141, 8.77154, -45.9095, 0.55 ) }
    dend_34 { pt3dadd( 79.1569, 8.74838, -47.7517, 0.55 ) }
    dend_34 { pt3dadd( 81.1929, 8.70579, -49.5898, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 29.8157, 6.48611, -21.0326, 0.83 ) }
    dend_29 { pt3dadd( 31.7517, 7.39757, -20.936, 0.83 ) }
    dend_29 { pt3dadd( 32.8566, 7.92709, -20.9272, 0.55 ) }
    dend_29 { pt3dadd( 34.4838, 8.76666, -21.0339, 0.83 ) }
    dend_29 { pt3dadd( 35.5806, 9.36403, -21.1305, 0.55 ) }
    dend_29 { pt3dadd( 37.0992, 10.2222, -21.2355, 0.83 ) }
    dend_29 { pt3dadd( 38.9321, 11.2753, -21.2935, 0.55 ) }
    dend_29 { pt3dadd( 39.8464, 11.7339, -21.3012, 0.55 ) }
    dend_29 { pt3dadd( 41.917, 12.4894, -21.239, 0.83 ) }
    dend_29 { pt3dadd( 43.7735, 12.9099, -21.0001, 0.55 ) }
    dend_29 { pt3dadd( 44.8127, 13.1153, -20.7751, 0.83 ) }
    dend_29 { pt3dadd( 46.3816, 13.4254, -20.2763, 0.55 ) }
    dend_29 { pt3dadd( 48.6491, 13.8549, -19.2824, 0.55 ) }
    dend_29 { pt3dadd( 51.7808, 14.2639, -17.7838, 0.55 ) }
    dend_29 { pt3dadd( 54.7584, 14.5103, -16.1831, 0.55 ) }
    dend_29 { pt3dadd( 57.1153, 14.6728, -14.8802, 0.55 ) }
    dend_29 { pt3dadd( 61.0038, 14.9546, -12.7094, 0.55 ) }
    dend_29 { pt3dadd( 63.8617, 15.2285, -11.0461, 0.55 ) }
    dend_29 { pt3dadd( 65.6083, 15.522, -9.95388, 0.55 ) }
    dend_29 { pt3dadd( 68.8692, 16.373, -7.84998, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.782573, -20.1421, 6.3466, 0.83 ) }
    dend_11 { pt3dadd( -0.702235, -23.5648, 6.22651, 0.83 ) }
    dend_11 { pt3dadd( -0.623963, -26.8995, 6.10952, 0.83 ) }
    dend_11 { pt3dadd( -0.536573, -30.6227, 5.97889, 0.83 ) }
    dend_11 { pt3dadd( -0.490939, -32.567, 5.91068, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.782573, -20.1421, 6.3466, 0.55 ) }
    dend_2 { pt3dadd( 0.00474864, -22.1019, 7.38185, 0.55 ) }
    dend_2 { pt3dadd( 0.78242, -24.4854, 8.8002, 0.55 ) }
    dend_2 { pt3dadd( 1.40757, -27.5748, 10.887, 0.55 ) }
    dend_2 { pt3dadd( 1.58285, -28.7697, 11.7484, 0.83 ) }
    dend_2 { pt3dadd( 1.86328, -31.8046, 14.3323, 0.55 ) }
    dend_2 { pt3dadd( 1.89866, -33.3623, 15.7262, 0.55 ) }
    dend_2 { pt3dadd( 1.94092, -36.389, 18.5709, 0.83 ) }
    dend_2 { pt3dadd( 1.8893, -38.6293, 20.8473, 0.55 ) }
    dend_2 { pt3dadd( 1.68851, -40.4634, 22.7402, 0.55 ) }
    dend_2 { pt3dadd( 1.2198, -43.9295, 26.2866, 0.55 ) }
    dend_2 { pt3dadd( 0.840617, -46.6915, 29.0823, 0.55 ) }
    dend_2 { pt3dadd( 0.586244, -48.9101, 31.3409, 0.55 ) }
    dend_2 { pt3dadd( 0.417614, -51.2745, 33.6367, 0.28 ) }
    dend_2 { pt3dadd( 0.414257, -52.2653, 34.5369, 0.55 ) }
    dend_2 { pt3dadd( 0.425637, -54.0968, 36.0919, 0.28 ) }
    dend_2 { pt3dadd( 0.688645, -56.9775, 38.0125, 0.55 ) }
    dend_2 { pt3dadd( -0.406619, -66.3892, 45.4534, 0.55 ) }
    dend_2 { pt3dadd( -1.4741, -75.0799, 53.6546, 0.55 ) }
    dend_2 { pt3dadd( -1.52037, -82.2936, 63.1192, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -41.0888, 38.5739, 0.648831, 0.55 ) }
    dend_61 { pt3dadd( -43.9969, 39.1939, 2.53162, 0.55 ) }
    dend_61 { pt3dadd( -45.206, 39.3966, 3.49174, 0.83 ) }
    dend_61 { pt3dadd( -46.6014, 39.5743, 4.8252, 0.55 ) }
    dend_61 { pt3dadd( -47.6579, 39.7202, 5.95127, 0.83 ) }
    dend_61 { pt3dadd( -50.4256, 40.2138, 8.86295, 0.55 ) }
    dend_61 { pt3dadd( -51.4719, 40.4219, 9.9724, 0.28 ) }
    dend_61 { pt3dadd( -53.1983, 40.8075, 11.9828, 0.55 ) }
    dend_61 { pt3dadd( -55.5155, 41.3396, 14.6664, 0.55 ) }
    dend_61 { pt3dadd( -57.2846, 41.7353, 16.6137, 0.55 ) }
    dend_61 { pt3dadd( -59.6569, 42.255, 19.1311, 0.28 ) }
    dend_61 { pt3dadd( -60.282, 42.3873, 19.7022, 0.55 ) }
    dend_61 { pt3dadd( -61.5809, 42.6732, 20.829, 0.28 ) }
    dend_61 { pt3dadd( -62.4717, 42.8846, 21.5013, 0.55 ) }
    dend_61 { pt3dadd( -64.309, 43.285, 22.7053, 0.28 ) }
    dend_61 { pt3dadd( -65.3964, 43.4474, 23.3593, 0.55 ) }
    dend_61 { pt3dadd( -67.3184, 43.58, 24.5465, 0.28 ) }
    dend_61 { pt3dadd( -68.6148, 43.6549, 25.2969, 0.55 ) }
    dend_61 { pt3dadd( -76.1402, 43.782, 33.635, 0.55 ) }
    dend_61 { pt3dadd( -82.9348, 42.8252, 42.5488, 0.55 ) }
    dend_61 { pt3dadd( -89.4809, 40.7514, 51.4914, 0.55 ) }
    dend_61 { pt3dadd( -96.086, 37.2856, 60.0055, 0.55 ) }
    dend_61 { pt3dadd( -101.33, 34.3517, 69.5786, 0.55 ) }
    dend_61 { pt3dadd( -107.422, 31.8396, 78.7441, 0.55 ) }
    dend_61 { pt3dadd( -113.535, 31.2687, 88.162, 0.55 ) }
    dend_61 { pt3dadd( -119.664, 29.7576, 97.4879, 0.55 ) }
    dend_61 { pt3dadd( -125.527, 29.0414, 107.057, 0.55 ) }
    dend_61 { pt3dadd( -130.855, 28.1624, 116.924, 0.55 ) }
    dend_61 { pt3dadd( -135.115, 25.9463, 127.132, 0.55 ) }
    dend_61 { pt3dadd( -139.417, 24.8335, 137.472, 0.55 ) }
    dend_61 { pt3dadd( -143.942, 22.5343, 147.549, 0.55 ) }
    dend_61 { pt3dadd( -147.154, 19.7226, 158.012, 0.55 ) }
    dend_61 { pt3dadd( -148.418, 17.6824, 169.03, 0.55 ) }
    dend_61 { pt3dadd( -149.76, 13.4429, 179.477, 0.55 ) }
    dend_61 { pt3dadd( -149.512, 8.91926, 189.899, 0.55 ) }
    dend_61 { pt3dadd( -149.822, 4.92341, 200.51, 0.55 ) }
    dend_61 { pt3dadd( -151.274, 1.83528, 211.292, 0.55 ) }
    dend_61 { pt3dadd( -154.979, 0.653532, 221.854, 0.55 ) }
    dend_61 { pt3dadd( -157.77, -1.86198, 232.501, 0.55 ) }
    dend_61 { pt3dadd( -158.334, -2.46768, 243.714, 0.55 ) }
    dend_61 { pt3dadd( -160.663, -2.15291, 254.698, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -41.0888, 38.5739, 0.648831, 0.55 ) }
    dend_56 { pt3dadd( -42.6287, 39.5838, -1.5269, 0.55 ) }
    dend_56 { pt3dadd( -43.741, 40.6732, -3.90375, 0.55 ) }
    dend_56 { pt3dadd( -44.7434, 41.9821, -6.39848, 0.55 ) }
    dend_56 { pt3dadd( -45.3711, 42.8018, -7.96065, 0.55 ) }
    dend_56 { pt3dadd( -46.516, 44.2969, -10.8102, 0.83 ) }
    dend_56 { pt3dadd( -47.3537, 45.3908, -12.895, 0.55 ) }
    dend_56 { pt3dadd( -48.247, 46.8831, -15.9357, 0.83 ) }
    dend_56 { pt3dadd( -48.5066, 47.8602, -17.6184, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -85.3186, 26.7941, 13.9745, 0.28 ) }
    dend_48 { pt3dadd( -86.5315, 24.7316, 12.6975, 0.28 ) }
    dend_48 { pt3dadd( -87.0981, 23.8709, 12.0607, 0.28 ) }
    dend_48 { pt3dadd( -87.8249, 22.6624, 11.1239, 0.55 ) }
    dend_48 { pt3dadd( -88.4242, 21.5939, 10.3172, 0.28 ) }
    dend_48 { pt3dadd( -89.311, 19.9577, 9.1155, 0.55 ) }
    dend_48 { pt3dadd( -91.7872, 15.1145, 5.69207, 0.28 ) }
    dend_48 { pt3dadd( -92.5678, 13.4511, 4.35916, 0.55 ) }
    dend_48 { pt3dadd( -93.7327, 10.9137, 2.2167, 0.28 ) }
    dend_48 { pt3dadd( -94.3864, 9.41427, 0.865941, 0.55 ) }
    dend_48 { pt3dadd( -94.8333, 8.38868, -0.092579, 0.28 ) }
    dend_48 { pt3dadd( -95.344, 7.20831, -1.18133, 0.55 ) }
    dend_48 { pt3dadd( -96.8858, 3.2255, -4.67651, 0.28 ) }
    dend_48 { pt3dadd( -97.365, 2.03523, -5.78398, 0.55 ) }
    dend_48 { pt3dadd( -98.1818, 0.282227, -7.70674, 0.28 ) }
    dend_48 { pt3dadd( -98.8603, -0.795436, -9.08105, 0.28 ) }
    dend_48 { pt3dadd( -99.4889, -1.4918, -10.0633, 0.55 ) }
    dend_48 { pt3dadd( -101.744, -3.42575, -12.838, 0.28 ) }
    dend_48 { pt3dadd( -102.809, -4.2023, -13.967, 0.55 ) }
    dend_48 { pt3dadd( -105.404, -5.91609, -16.7128, 0.28 ) }
    dend_48 { pt3dadd( -108.015, -7.39265, -19.25, 0.28 ) }
    dend_48 { pt3dadd( -110.864, -8.74311, -21.8364, 0.28 ) }
    dend_48 { pt3dadd( -112.184, -9.22934, -22.863, 0.55 ) }
    dend_48 { pt3dadd( -118.461, -15.9987, -30.3697, 0.55 ) }
    dend_48 { pt3dadd( -125.859, -23.4031, -36.031, 0.55 ) }
    dend_48 { pt3dadd( -132.806, -29.9064, -43.1331, 0.55 ) }
    dend_48 { pt3dadd( -139.757, -35.4116, -50.9601, 0.55 ) }
    dend_48 { pt3dadd( -146.618, -39.8113, -59.4635, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -85.3186, 26.7941, 13.9745, 0.55 ) }
    dend_45 { pt3dadd( -86.1278, 26.7705, 13.9154, 0.55 ) }
    dend_45 { pt3dadd( -88.4667, 26.6215, 14.0252, 0.55 ) }
    dend_45 { pt3dadd( -89.3552, 26.5305, 14.102, 0.55 ) }
    dend_45 { pt3dadd( -91.4531, 26.2472, 14.292, 0.55 ) }
    dend_45 { pt3dadd( -94.6497, 25.8858, 14.4544, 0.55 ) }
    dend_45 { pt3dadd( -96.3034, 25.7554, 14.528, 0.28 ) }
    dend_45 { pt3dadd( -98.8697, 25.5124, 14.5793, 0.55 ) }
    dend_45 { pt3dadd( -100.764, 25.3133, 14.5427, 0.55 ) }
    dend_45 { pt3dadd( -101.564, 25.2235, 14.5271, 0.28 ) }
    dend_45 { pt3dadd( -106.366, 24.6846, 14.4272, 0.55 ) }
    dend_45 { pt3dadd( -108.588, 24.3707, 14.2223, 0.28 ) }
    dend_45 { pt3dadd( -111.553, 23.9861, 13.7797, 0.28 ) }
    dend_45 { pt3dadd( -114.079, 23.735, 13.2703, 0.55 ) }
    dend_45 { pt3dadd( -124.291, 23.583, 13.7774, 0.55 ) }
    dend_45 { pt3dadd( -134.381, 22.837, 15.2551, 0.55 ) }
    dend_45 { pt3dadd( -144.159, 20.719, 17.4162, 0.55 ) }
    dend_45 { pt3dadd( -153.751, 20.0659, 20.8976, 0.55 ) }
    dend_45 { pt3dadd( -162.425, 18.4675, 26.0691, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -169.875, 16.9145, 32.9014, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 81.1929, 8.70579, -49.5898, 0.55 ) }
    dend_42 { pt3dadd( 84.1403, 9.76224, -51.8265, 0.55 ) }
    dend_42 { pt3dadd( 85.0624, 10.0724, -52.6005, 0.55 ) }
    dend_42 { pt3dadd( 86.2094, 10.4189, -53.5667, 0.55 ) }
    dend_42 { pt3dadd( 88.2836, 11.0642, -55.4432, 0.55 ) }
    dend_42 { pt3dadd( 90.4293, 11.6631, -57.4789, 0.55 ) }
    dend_42 { pt3dadd( 91.4625, 11.8628, -58.4726, 0.83 ) }
    dend_42 { pt3dadd( 92.299, 11.9854, -59.3717, 0.55 ) }
    dend_42 { pt3dadd( 92.9121, 12.0414, -60.1236, 0.83 ) }
    dend_42 { pt3dadd( 94.3424, 11.985, -62.1048, 0.55 ) }
    dend_42 { pt3dadd( 95.496, 11.8184, -63.7799, 0.55 ) }
    dend_42 { pt3dadd( 96.8229, 11.5953, -65.6377, 0.55 ) }
    dend_42 { pt3dadd( 98.3088, 11.4051, -67.7255, 0.55 ) }
    dend_42 { pt3dadd( 99.2993, 11.2587, -69.1604, 0.55 ) }
    dend_42 { pt3dadd( 100.415, 11.1011, -70.8194, 0.55 ) }
    dend_42 { pt3dadd( 101.385, 11.0258, -72.3159, 0.55 ) }
    dend_42 { pt3dadd( 102.004, 11.0681, -73.328, 0.55 ) }
    dend_42 { pt3dadd( 102.758, 11.28, -75.3137, 0.55 ) }
    dend_42 { pt3dadd( 103.154, 11.3873, -76.5605, 0.55 ) }
    dend_42 { pt3dadd( 103.45, 11.4992, -78.2186, 0.55 ) }
    dend_42 { pt3dadd( 103.806, 11.6294, -81.0335, 0.55 ) }
    dend_42 { pt3dadd( 103.87, 11.6379, -81.6736, 0.28 ) }
    dend_42 { pt3dadd( 104.719, 11.6419, -89.4859, 0.28 ) }
    dend_42 { pt3dadd( 105.036, 11.6466, -91.7802, 0.83 ) }
    dend_42 { pt3dadd( 106.321, 11.4901, -99.971, 0.83 ) }
    dend_42 { pt3dadd( 106.985, 11.256, -103.823, 0.83 ) }
    dend_42 { pt3dadd( 107.317, 11.0882, -105.405, 0.55 ) }
    dend_42 { pt3dadd( 107.722, 10.9032, -106.955, 0.55 ) }
    dend_42 { pt3dadd( 108.957, 10.4065, -109.885, 0.55 ) }
    dend_42 { pt3dadd( 110.327, 9.89263, -112.488, 0.28 ) }
    dend_42 { pt3dadd( 110.779, 9.67874, -112.702, 0.55 ) }
    dend_42 { pt3dadd( 111.8, 9.17473, -112.774, 0.28 ) }
    dend_42 { pt3dadd( 112.444, 8.88354, -112.71, 0.55 ) }
    dend_42 { pt3dadd( 113.116, 8.55367, -112.588, 0.28 ) }
    dend_42 { pt3dadd( 113.931, 8.18921, -112.392, 0.55 ) }
    dend_42 { pt3dadd( 115.162, 7.74902, -112.21, 0.28 ) }
    dend_42 { pt3dadd( 116.142, 7.37364, -112.106, 0.55 ) }
    dend_42 { pt3dadd( 117.239, 7.05833, -112.056, 0.28 ) }
    dend_42 { pt3dadd( 118.728, 6.67299, -112.118, 0.55 ) }
    dend_42 { pt3dadd( 120.403, 6.30966, -112.275, 0.55 ) }
    dend_42 { pt3dadd( 121.876, 6.03627, -112.506, 0.28 ) }
    dend_42 { pt3dadd( 123.916, 5.70945, -112.932, 0.55 ) }
    dend_42 { pt3dadd( 127.451, 5.35236, -114.011, 0.55 ) }
    dend_42 { pt3dadd( 129.023, 5.33162, -114.651, 0.55 ) }
    dend_42 { pt3dadd( 129.703, 5.37196, -114.989, 0.83 ) }
    dend_42 { pt3dadd( 130.996, 5.49183, -115.746, 0.55 ) }
    dend_42 { pt3dadd( 131.898, 5.62791, -116.317, 0.83 ) }
    dend_42 { pt3dadd( 134.34, 6.06636, -117.86, 0.55 ) }
    dend_42 { pt3dadd( 135.809, 6.24186, -118.869, 0.28 ) }
    dend_42 { pt3dadd( 136.422, 6.25675, -119.236, 0.55 ) }
    dend_42 { pt3dadd( 138.074, 6.08432, -120.102, 0.28 ) }
    dend_42 { pt3dadd( 138.643, 5.95724, -120.383, 0.55 ) }
    dend_42 { pt3dadd( 139.805, 5.56373, -120.797, 0.28 ) }
    dend_42 { pt3dadd( 140.97, 4.97916, -121.043, 0.55 ) }
    dend_42 { pt3dadd( 143.31, 3.53574, -121.143, 0.28 ) }
    dend_42 { pt3dadd( 144.381, 2.7832, -121.083, 0.55 ) }
    dend_42 { pt3dadd( 145.958, 1.53743, -120.931, 0.28 ) }
    dend_42 { pt3dadd( 147.954, -0.0500693, -120.66, 0.55 ) }
    dend_42 { pt3dadd( 149.402, -1.18332, -120.434, 0.55 ) }
    dend_42 { pt3dadd( 151.93, -3.07226, -119.973, 0.28 ) }
    dend_42 { pt3dadd( 152.975, -3.76867, -119.86, 0.55 ) }
    dend_42 { pt3dadd( 154.793, -4.79716, -119.842, 0.28 ) }
    dend_42 { pt3dadd( 156.63, -5.63447, -119.913, 0.55 ) }
    dend_42 { pt3dadd( 157.658, -5.93074, -120.063, 0.28 ) }
    dend_42 { pt3dadd( 158.61, -6.047, -120.235, 0.55 ) }
    dend_42 { pt3dadd( 161.323, -6.14016, -120.925, 0.28 ) }
    dend_42 { pt3dadd( 163.286, -6.06279, -121.411, 0.28 ) }
    dend_42 { pt3dadd( 165.017, -5.86485, -121.822, 0.55 ) }
    dend_42 { pt3dadd( 166.936, -5.56724, -122.355, 0.28 ) }
    dend_42 { pt3dadd( 167.425, -5.46709, -122.465, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 81.1929, 8.70579, -49.5898, 0.55 ) }
    dend_35 { pt3dadd( 81.4179, 6.78035, -51.7418, 0.55 ) }
    dend_35 { pt3dadd( 81.4399, 5.12867, -53.4224, 0.28 ) }
    dend_35 { pt3dadd( 81.4608, 3.56925, -54.8175, 0.55 ) }
    dend_35 { pt3dadd( 81.6956, 0.252454, -57.8207, 0.28 ) }
    dend_35 { pt3dadd( 81.7034, 0.0547047, -58.0411, 0.55 ) }
    dend_35 { pt3dadd( 81.7763, -0.9538, -59.2954, 0.28 ) }
    dend_35 { pt3dadd( 81.7408, -1.72711, -60.4823, 0.55 ) }
    dend_35 { pt3dadd( 81.641, -2.48962, -61.8341, 0.28 ) }
    dend_35 { pt3dadd( 81.4615, -3.50385, -63.74, 0.55 ) }
    dend_35 { pt3dadd( 81.0093, -6.07176, -68.4593, 0.55 ) }
    dend_35 { pt3dadd( 80.5581, -8.38946, -72.8151, 0.55 ) }
    dend_35 { pt3dadd( 80.1712, -10.2377, -76.2985, 0.55 ) }
    dend_35 { pt3dadd( 79.7439, -12.0633, -79.6747, 0.55 ) }
    dend_35 { pt3dadd( 79.6318, -12.5437, -80.5192, 0.28 ) }
    dend_35 { pt3dadd( 79.5336, -13.0779, -81.3649, 0.55 ) }
    dend_35 { pt3dadd( 79.4922, -13.8575, -82.4534, 0.28 ) }
    dend_35 { pt3dadd( 79.6016, -15.3274, -84.2589, 0.55 ) }
    dend_35 { pt3dadd( 80.1111, -18.3446, -87.2151, 0.55 ) }
    dend_35 { pt3dadd( 80.404, -20.02, -88.6479, 0.28 ) }
    dend_35 { pt3dadd( 80.5928, -21.6849, -90.1757, 0.55 ) }
    dend_35 { pt3dadd( 80.6654, -23.9636, -92.3974, 0.28 ) }
    dend_35 { pt3dadd( 80.5892, -25.7712, -94.2291, 0.55 ) }
    dend_35 { pt3dadd( 80.3416, -28.4561, -96.9651, 0.28 ) }
    dend_35 { pt3dadd( 80.1107, -31.2679, -99.7007, 0.55 ) }
    dend_35 { pt3dadd( 79.7125, -35.3302, -103.709, 0.28 ) }
    dend_35 { pt3dadd( 79.4454, -37.4866, -105.85, 0.55 ) }
    dend_35 { pt3dadd( 79.1295, -39.6684, -108.095, 0.28 ) }
    dend_35 { pt3dadd( 78.8252, -41.5434, -110.206, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 78.537, -43.8258, -113.088, 0.55 ) }
    dend_35 { pt3dadd( 78.452, -45.9837, -115.709, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 68.8692, 16.373, -7.84998, 0.55 ) }
    dend_31 { pt3dadd( 71.5745, 15.4506, -8.01849, 0.55 ) }
    dend_31 { pt3dadd( 73.5097, 14.8064, -8.34707, 0.55 ) }
    dend_31 { pt3dadd( 77.7102, 13.4683, -9.29201, 0.55 ) }
    dend_31 { pt3dadd( 79.5711, 12.92, -9.89099, 0.55 ) }
    dend_31 { pt3dadd( 81.5993, 12.4197, -10.6159, 0.55 ) }
    dend_31 { pt3dadd( 84.3104, 11.8997, -11.7406, 0.55 ) }
    dend_31 { pt3dadd( 87.1206, 11.4269, -13.2207, 0.55 ) }
    dend_31 { pt3dadd( 88.5706, 11.2541, -14.1673, 0.55 ) }
    dend_31 { pt3dadd( 91.4666, 11.1311, -16.4776, 0.55 ) }
    dend_31 { pt3dadd( 92.7976, 11.1104, -17.5765, 0.55 ) }
    dend_31 { pt3dadd( 95.8915, 11.0476, -20.266, 0.55 ) }
    dend_31 { pt3dadd( 97.9688, 10.9075, -22.1206, 0.55 ) }
    dend_31 { pt3dadd( 99.5044, 10.753, -23.4218, 0.83 ) }
    dend_31 { pt3dadd( 101.94, 10.3946, -25.5278, 0.55 ) }
    dend_31 { pt3dadd( 104.308, 9.86601, -27.5679, 0.83 ) }
    dend_31 { pt3dadd( 106.304, 9.27651, -29.2827, 0.55 ) }
    dend_31 { pt3dadd( 108.1, 8.72325, -30.6983, 0.55 ) }
    dend_31 { pt3dadd( 109.14, 8.42205, -31.4195, 0.83 ) }
    dend_31 { pt3dadd( 111.587, 7.65136, -32.9721, 0.28 ) }
    dend_31 { pt3dadd( 112.826, 7.27475, -33.6387, 0.28 ) }
    dend_31 { pt3dadd( 113.999, 6.86911, -34.3875, 0.28 ) }
    dend_31 { pt3dadd( 115.274, 6.4689, -35.1825, 0.28 ) }
    dend_31 { pt3dadd( 117.318, 5.89246, -36.4732, 0.28 ) }
    dend_31 { pt3dadd( 118.147, 5.65667, -36.9626, 0.55 ) }
    dend_31 { pt3dadd( 120.158, 5.00138, -37.9333, 0.55 ) }
    dend_31 { pt3dadd( 123.793, 3.68328, -39.5265, 0.55 ) }
    dend_31 { pt3dadd( 124.799, 3.267, -39.9407, 0.55 ) }
    dend_31 { pt3dadd( 125.695, 2.84415, -40.2908, 0.83 ) }
    dend_31 { pt3dadd( 127.676, 1.89641, -40.8669, 0.55 ) }
    dend_31 { pt3dadd( 129.402, 1.0605, -41.3399, 0.55 ) }
    dend_31 { pt3dadd( 131.036, 0.273191, -41.7758, 0.55 ) }
    dend_31 { pt3dadd( 132.291, -0.33816, -42.1593, 0.55 ) }
    dend_31 { pt3dadd( 134.237, -1.38979, -42.9382, 0.55 ) }
    dend_31 { pt3dadd( 136.463, -2.75992, -44.0965, 0.55 ) }
    dend_31 { pt3dadd( 139.792, -5.15001, -46.3721, 0.55 ) }
    dend_31 { pt3dadd( 141.532, -6.68134, -47.9103, 0.55 ) }
    dend_31 { pt3dadd( 142.956, -8.25255, -49.4966, 0.28 ) }
    dend_31 { pt3dadd( 143.35, -8.81659, -50.0636, 0.55 ) }
    dend_31 { pt3dadd( 144.126, -10.3722, -51.5727, 0.28 ) }
    dend_31 { pt3dadd( 144.68, -12.1056, -53.1671, 0.55 ) }
    dend_31 { pt3dadd( 145.072, -14.3387, -54.9208, 0.55 ) }
    dend_31 { pt3dadd( 145.356, -15.8485, -56.0089, 0.28 ) }
    dend_31 { pt3dadd( 145.469, -16.3974, -56.3703, 0.55 ) }
    dend_31 { pt3dadd( 145.778, -17.7737, -57.2561, 0.28 ) }
    dend_31 { pt3dadd( 146.226, -19.5917, -58.3772, 0.55 ) }
    dend_31 { pt3dadd( 147.492, -24.0471, -61.0138, 0.55 ) }
    dend_31 { pt3dadd( 148.174, -26.3208, -62.3085, 0.55 ) }
    dend_31 { pt3dadd( 148.816, -28.4156, -63.4816, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 68.8692, 16.373, -7.84998, 0.55 ) }
    dend_30 { pt3dadd( 70.5763, 16.775, -6.35839, 0.55 ) }
    dend_30 { pt3dadd( 71.1266, 16.8948, -5.91086, 0.55 ) }
    dend_30 { pt3dadd( 73.1764, 17.2135, -4.31516, 0.55 ) }
    dend_30 { pt3dadd( 75.466, 17.6263, -2.50763, 0.55 ) }
    dend_30 { pt3dadd( 78.3916, 18.1658, -0.108951, 0.55 ) }
    dend_30 { pt3dadd( 79.2004, 18.3146, 0.547801, 0.55 ) }
    dend_30 { pt3dadd( 80.6472, 18.5173, 1.72241, 0.55 ) }
    dend_30 { pt3dadd( 82.2433, 18.766, 2.94038, 0.55 ) }
    dend_30 { pt3dadd( 84.1131, 19.0928, 4.25986, 0.55 ) }
    dend_30 { pt3dadd( 85.877, 19.4292, 5.50483, 0.55 ) }
    dend_30 { pt3dadd( 86.8537, 19.6513, 6.13318, 0.55 ) }
    dend_30 { pt3dadd( 88.004, 19.947, 6.86247, 0.55 ) }
    dend_30 { pt3dadd( 89.4336, 20.3512, 7.73078, 0.83 ) }
    dend_30 { pt3dadd( 91.7995, 20.954, 8.90728, 0.55 ) }
    dend_30 { pt3dadd( 93.3676, 21.2717, 9.62308, 0.83 ) }
    dend_30 { pt3dadd( 95.5424, 21.5916, 10.5614, 0.55 ) }
    dend_30 { pt3dadd( 96.2076, 21.6495, 10.8468, 0.55 ) }
    dend_30 { pt3dadd( 98.2658, 21.7116, 11.7089, 0.55 ) }
    dend_30 { pt3dadd( 101.942, 21.5551, 13.1461, 0.55 ) }
    dend_30 { pt3dadd( 104.624, 21.2685, 14.1651, 0.55 ) }
    dend_30 { pt3dadd( 106.733, 20.9475, 15.0409, 0.55 ) }
    dend_30 { pt3dadd( 108.865, 20.5152, 16.0304, 0.55 ) }
    dend_30 { pt3dadd( 109.312, 20.4117, 16.2433, 0.28 ) }
    dend_30 { pt3dadd( 110.214, 20.1621, 16.6796, 0.83 ) }
    dend_30 { pt3dadd( 113.913, 19.0828, 18.5044, 0.55 ) }
    dend_30 { pt3dadd( 116.506, 18.3198, 19.7283, 0.55 ) }
    dend_30 { pt3dadd( 118.634, 17.7643, 20.7778, 0.55 ) }
    dend_30 { pt3dadd( 119.904, 17.431, 21.4182, 0.83 ) }
    dend_30 { pt3dadd( 120.905, 17.1849, 21.9214, 0.28 ) }
    dend_30 { pt3dadd( 121.814, 16.9613, 22.3687, 0.55 ) }
    dend_30 { pt3dadd( 128.971, 17.3291, 26.5759, 0.55 ) }
    dend_30 { pt3dadd( 136.579, 16.0679, 29.6495, 0.55 ) }
    dend_30 { pt3dadd( 144.214, 15.9215, 32.9138, 0.55 ) }
    dend_30 { pt3dadd( 150.737, 14.9967, 37.9633, 0.55 ) }
    dend_30 { pt3dadd( 156.625, 13.0418, 43.4912, 0.55 ) }
    dend_30 { pt3dadd( 163.21, 9.35641, 47.053, 0.55 ) }
    dend_30 { pt3dadd( 169.718, 4.6157, 49.3763, 0.55 ) }
    dend_30 { pt3dadd( 177.135, 1.21001, 51.0445, 0.55 ) }
    dend_30 { pt3dadd( 184.404, -2.20531, 53.2634, 0.55 ) }
    dend_30 { pt3dadd( 192.129, -4.8351, 54.8496, 0.55 ) }
    dend_30 { pt3dadd( 199.763, -6.87404, 57.4078, 0.55 ) }
    dend_30 { pt3dadd( 206.709, -10.2202, 60.5692, 0.55 ) }
    dend_30 { pt3dadd( 213.93, -11.9294, 64.295, 0.55 ) }
    dend_30 { pt3dadd( 220.843, -12.1317, 68.8904, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -0.490939, -32.567, 5.91068, 1.38 ) }
    dend_13 { pt3dadd( 2.85724, -35.7093, 5.77709, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.490939, -32.567, 5.91068, 0.55 ) }
    dend_12 { pt3dadd( -1.06305, -33.6564, 5.58353, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -1.67555, -35.0371, 5.23086, 0.55 ) }
    dend_12 { pt3dadd( -2.17349, -35.963, 4.9557, 0.55 ) }
    dend_12 { pt3dadd( -2.54794, -36.7361, 4.64422, 0.55 ) }
    dend_12 { pt3dadd( -3.31347, -38.3429, 3.85613, 0.55 ) }
    dend_12 { pt3dadd( -3.84361, -39.4202, 3.27946, 0.55 ) }
    dend_12 { pt3dadd( -4.29902, -40.385, 2.74094, 0.55 ) }
    dend_12 { pt3dadd( -5.48378, -42.7448, 1.3533, 0.55 ) }
    dend_12 { pt3dadd( -6.92803, -45.4871, -0.30168, 0.55 ) }
    dend_12 { pt3dadd( -8.03486, -47.5681, -1.61403, 0.55 ) }
    dend_12 { pt3dadd( -8.72845, -48.9306, -2.46518, 0.55 ) }
    dend_12 { pt3dadd( -9.51884, -50.5585, -3.43494, 0.55 ) }
    dend_12 { pt3dadd( -10.5048, -52.8687, -4.63314, 0.55 ) }
    dend_12 { pt3dadd( -11.0619, -54.4845, -5.30246, 0.55 ) }
    dend_12 { pt3dadd( -11.7696, -56.7875, -6.01623, 0.55 ) }
    dend_12 { pt3dadd( -12.3191, -58.9268, -6.53598, 0.55 ) }
    dend_12 { pt3dadd( -12.8278, -61.5704, -7.02294, 0.55 ) }
    dend_12 { pt3dadd( -13.2609, -64.6489, -7.41806, 0.55 ) }
    dend_12 { pt3dadd( -13.435, -66.9784, -7.56776, 0.55 ) }
    dend_12 { pt3dadd( -13.4941, -68.1303, -7.54402, 0.55 ) }
    dend_12 { pt3dadd( -13.5714, -70.8214, -7.29157, 0.55 ) }
    dend_12 { pt3dadd( -13.6387, -73.3355, -6.98019, 0.55 ) }
    dend_12 { pt3dadd( -13.6898, -75.8565, -6.45101, 0.55 ) }
    dend_12 { pt3dadd( -13.7691, -77.3055, -6.08965, 0.55 ) }
    dend_12 { pt3dadd( -14.0707, -81.7849, -4.82414, 0.55 ) }
    dend_12 { pt3dadd( -14.0975, -82.115, -4.72724, 0.55 ) }
    dend_12 { pt3dadd( -14.2539, -84.1333, -4.07503, 0.55 ) }
    dend_12 { pt3dadd( -14.7116, -87.762, -2.91926, 0.55 ) }
    dend_12 { pt3dadd( -14.8361, -88.9753, -2.5951, 0.55 ) }
    dend_12 { pt3dadd( -14.9144, -90.8727, -2.3766, 0.55 ) }
    dend_12 { pt3dadd( -14.8522, -91.5735, -2.4187, 0.55 ) }
    dend_12 { pt3dadd( -14.3432, -93.9284, -2.87753, 0.55 ) }
    dend_12 { pt3dadd( -13.789, -95.4401, -3.40028, 0.55 ) }
    dend_12 { pt3dadd( -12.6141, -97.8345, -4.6101, 0.55 ) }
    dend_12 { pt3dadd( -10.9672, -100.747, -6.22284, 0.28 ) }
    dend_12 { pt3dadd( -10.5028, -101.465, -6.69832, 0.55 ) }
    dend_12 { pt3dadd( -9.74848, -102.551, -7.49882, 0.28 ) }
    dend_12 { pt3dadd( -9.63178, -102.715, -7.62758, 0.55 ) }
    dend_12 { pt3dadd( -9.03548, -103.613, -8.27018, 0.28 ) }
    dend_12 { pt3dadd( -8.88518, -103.921, -8.43904, 0.55 ) }
    dend_12 { pt3dadd( -8.28473, -105.532, -9.07461, 0.28 ) }
    dend_12 { pt3dadd( -8.10137, -106.083, -9.29535, 0.55 ) }
    dend_12 { pt3dadd( -7.63123, -107.679, -9.86801, 0.28 ) }
    dend_12 { pt3dadd( -7.48228, -108.181, -10.0457, 0.55 ) }
    dend_12 { pt3dadd( -6.99359, -109.915, -10.6421, 0.28 ) }
    dend_12 { pt3dadd( -6.76338, -110.712, -10.9179, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.52037, -82.2936, 63.1192, 0.55 ) }
    dend_10 { pt3dadd( -4.66261, -90.8195, 70.4002, 0.55 ) }
    dend_10 { pt3dadd( -9.06906, -98.4911, 77.8777, 0.55 ) }
    dend_10 { pt3dadd( -13.0259, -106.889, 84.8837, 0.55 ) }
    dend_10 { pt3dadd( -17.1568, -115.361, 91.7041, 0.55 ) }
    dend_10 { pt3dadd( -19.8726, -124.973, 97.8391, 0.55 ) }
    dend_10 { pt3dadd( -22.572, -134.184, 104.517, 0.55 ) }
    dend_10 { pt3dadd( -23.5971, -145.045, 109.098, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.52037, -82.2936, 63.1192, 0.55 ) }
    dend_3 { pt3dadd( -0.0470849, -89.1674, 69.5501, 0.55 ) }
    dend_3 { pt3dadd( 1.83169, -97.0895, 74.6467, 0.55 ) }
    dend_3 { pt3dadd( 2.22879, -105.209, 79.7788, 0.55 ) }
    dend_3 { pt3dadd( 2.09709, -113.847, 84.085, 0.55 ) }
    dend_3 { pt3dadd( 2.34074, -122.416, 88.5157, 0.55 ) }
    dend_3 { pt3dadd( 2.65061, -130.626, 93.5202, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -48.5066, 47.8602, -17.6184, 0.83 ) }
    dend_60 { pt3dadd( -47.7454, 50.3029, -19.6556, 0.83 ) }
    dend_60 { pt3dadd( -46.0967, 56.1683, -24.1804, 0.55 ) }
    dend_60 { pt3dadd( -45.407, 58.6839, -25.9439, 0.83 ) }
    dend_60 { pt3dadd( -44.6818, 61.3628, -27.6644, 0.55 ) }
    dend_60 { pt3dadd( -43.9823, 64.092, -29.0823, 0.55 ) }
    dend_60 { pt3dadd( -43.6419, 65.451, -29.633, 0.28 ) }
    dend_60 { pt3dadd( -43.4948, 66.3356, -29.7965, 0.55 ) }
    dend_60 { pt3dadd( -42.9955, 69.2445, -29.7461, 0.28 ) }
    dend_60 { pt3dadd( -42.7602, 70.4844, -29.6621, 0.55 ) }
    dend_60 { pt3dadd( -42.0131, 74.7818, -29.2097, 0.28 ) }
    dend_60 { pt3dadd( -41.518, 78.1783, -28.7516, 0.55 ) }
    dend_60 { pt3dadd( -41.005, 83.4686, -27.9073, 0.28 ) }
    dend_60 { pt3dadd( -40.7195, 88.1108, -27.0978, 0.28 ) }
    dend_60 { pt3dadd( -40.7087, 90.704, -26.6129, 0.55 ) }
    dend_60 { pt3dadd( -40.8761, 93.7764, -26.057, 0.28 ) }
    dend_60 { pt3dadd( -41.0503, 95.2397, -25.7827, 0.55 ) }
    dend_60 { pt3dadd( -41.6217, 98.6908, -25.3069, 0.28 ) }
    dend_60 { pt3dadd( -42.1342, 100.998, -25.1213, 0.28 ) }
    dend_60 { pt3dadd( -42.6753, 103.268, -25.01, 0.28 ) }
    dend_60 { pt3dadd( -42.9173, 104.469, -24.9507, 0.55 ) }
    dend_60 { pt3dadd( -43.6375, 109.34, -24.7904, 0.28 ) }
    dend_60 { pt3dadd( -44.2981, 115.122, -24.6797, 0.55 ) }
    dend_60 { pt3dadd( -44.498, 117.121, -24.6457, 0.55 ) }
    dend_60 { pt3dadd( -44.7333, 119.12, -24.5744, 0.55 ) }
    dend_60 { pt3dadd( -45.4365, 123.368, -24.513, 0.55 ) }
    dend_60 { pt3dadd( -46.0597, 126.156, -24.5493, 0.28 ) }
    dend_60 { pt3dadd( -46.4088, 127.21, -24.5899, 0.55 ) }
    dend_60 { pt3dadd( -47.5498, 130.052, -24.6651, 0.28 ) }
    dend_60 { pt3dadd( -48.8675, 133.083, -24.8728, 0.55 ) }
    dend_60 { pt3dadd( -51.1248, 137.443, -25.3776, 0.28 ) }
    dend_60 { pt3dadd( -52.2461, 139.261, -25.6662, 0.28 ) }
    dend_60 { pt3dadd( -54.0823, 141.798, -26.3442, 0.55 ) }
    dend_60 { pt3dadd( -56.1451, 144.446, -27.2023, 0.28 ) }
    dend_60 { pt3dadd( -56.5251, 144.861, -27.3636, 0.55 ) }
    dend_60 { pt3dadd( -57.906, 146.183, -27.9504, 0.28 ) }
    dend_60 { pt3dadd( -62.6974, 150.408, -29.9052, 0.55 ) }
    dend_60 { pt3dadd( -69.3673, 155.639, -32.9464, 0.28 ) }
    dend_60 { pt3dadd( -70.5958, 156.523, -33.5942, 0.55 ) }
    dend_60 { pt3dadd( -73.9695, 158.808, -35.4459, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -75.3829, 159.748, -36.2663, 0.28 ) }
    dend_60 { pt3dadd( -76.6066, 160.535, -37.0455, 0.55 ) }
    dend_60 { pt3dadd( -80.1816, 162.372, -39.6635, 0.28 ) }
    dend_60 { pt3dadd( -82.7329, 163.367, -41.4282, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -48.5066, 47.8602, -17.6184, 0.55 ) }
    dend_57 { pt3dadd( -48.6871, 49.5605, -17.7164, 0.55 ) }
    dend_57 { pt3dadd( -48.8264, 50.5575, -17.6887, 0.28 ) }
    dend_57 { pt3dadd( -49.0766, 51.2586, -17.5175, 0.55 ) }
    dend_57 { pt3dadd( -49.6512, 52.8686, -17.1243, 0.28 ) }
    dend_57 { pt3dadd( -50.0548, 53.9994, -16.8481, 0.55 ) }
    dend_57 { pt3dadd( -50.7988, 56.0841, -16.339, 0.28 ) }
    dend_57 { pt3dadd( -51.3246, 57.1875, -15.8899, 0.55 ) }
    dend_57 { pt3dadd( -53.4294, 59.747, -13.9885, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -146.618, -39.8113, -59.4635, 0.55 ) }
    dend_52 { pt3dadd( -152.016, -46.0011, -65.852, 0.55 ) }
    dend_52 { pt3dadd( -155.755, -52.8307, -72.8497, 0.55 ) }
    dend_52 { pt3dadd( -158.327, -58.3573, -81.302, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -146.618, -39.8113, -59.4635, 0.55 ) }
    dend_49 { pt3dadd( -150.245, -43.1856, -64.3355, 0.55 ) }
    dend_49 { pt3dadd( -153.072, -46.4389, -69.7922, 0.55 ) }
    dend_49 { pt3dadd( -155.609, -49.7672, -75.3535, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -169.875, 16.9145, 32.9014, 0.55 ) }
    dend_47 { pt3dadd( -181.007, 15.2362, 36.8456, 0.55 ) }
    dend_47 { pt3dadd( -192.312, 15.5577, 40.6793, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -169.875, 16.9145, 32.9014, 0.55 ) }
    dend_46 { pt3dadd( -180.974, 15.7556, 33.5316, 0.55 ) }
    dend_46 { pt3dadd( -191.992, 16.1415, 35.3327, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 78.452, -45.9837, -115.709, 0.28 ) }
    dend_39 { pt3dadd( 84.1665, -47.7982, -126.911, 0.28 ) }
    dend_39 { pt3dadd( 84.7076, -48.0611, -127.938, 0.55 ) }
    dend_39 { pt3dadd( 85.6213, -48.5048, -129.671, 0.28 ) }
    dend_39 { pt3dadd( 86.3906, -48.8785, -131.13, 0.28 ) }
    dend_39 { pt3dadd( 87.4089, -49.3731, -133.062, 0.55 ) }
    dend_39 { pt3dadd( 88.7515, -50.0253, -135.609, 0.55 ) }
    dend_39 { pt3dadd( 90.2578, -51.8639, -137.34, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 78.452, -45.9837, -115.709, 0.55 ) }
    dend_36 { pt3dadd( 78.9806, -47.0816, -117.734, 0.55 ) }
    dend_36 { pt3dadd( 79.0936, -47.5427, -118.634, 0.28 ) }
    dend_36 { pt3dadd( 79.2279, -48.3071, -120.199, 0.55 ) }
    dend_36 { pt3dadd( 79.5236, -49.9912, -123.648, 0.28 ) }
    dend_36 { pt3dadd( 79.7286, -51.1583, -126.037, 0.55 ) }
    dend_36 { pt3dadd( 80.0758, -53.1357, -130.086, 0.28 ) }
    dend_36 { pt3dadd( 80.418, -55.4141, -135.311, 0.28 ) }
    dend_36 { pt3dadd( 80.5056, -56.4291, -137.745, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 148.816, -28.4156, -63.4816, 0.28 ) }
    dend_33 { pt3dadd( 150.482, -31.6014, -64.157, 0.28 ) }
    dend_33 { pt3dadd( 152.602, -35.9124, -64.7305, 0.28 ) }
    dend_33 { pt3dadd( 153.947, -38.7419, -65.0007, 0.55 ) }
    dend_33 { pt3dadd( 154.785, -40.3345, -65.0969, 0.28 ) }
    dend_33 { pt3dadd( 155.23, -41.1939, -65.1408, 0.28 ) }
    dend_33 { pt3dadd( 157.432, -45.4182, -65.4137, 0.55 ) }
    dend_33 { pt3dadd( 157.956, -46.3961, -65.3751, 0.28 ) }
    dend_33 { pt3dadd( 159.189, -49.0108, -65.1113, 0.55 ) }
    dend_33 { pt3dadd( 160.228, -51.2553, -64.9536, 0.28 ) }
    dend_33 { pt3dadd( 161.144, -53.0761, -64.8639, 0.55 ) }
    dend_33 { pt3dadd( 162.198, -55.2127, -64.8623, 0.55 ) }
    dend_33 { pt3dadd( 163.832, -58.4823, -65.21, 0.55 ) }
    dend_33 { pt3dadd( 164.22, -59.2751, -65.3187, 0.55 ) }
    dend_33 { pt3dadd( 165.592, -62.2194, -65.743, 0.28 ) }
    dend_33 { pt3dadd( 166.111, -63.4097, -65.9388, 0.55 ) }
    dend_33 { pt3dadd( 166.854, -64.9347, -66.2045, 0.28 ) }
    dend_33 { pt3dadd( 167.891, -67.0688, -66.6666, 0.55 ) }
    dend_33 { pt3dadd( 169.577, -70.2884, -67.8396, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 148.816, -28.4156, -63.4816, 0.55 ) }
    dend_32 { pt3dadd( 146.336, -28.1557, -63.0691, 0.55 ) }
    dend_32 { pt3dadd( 144.321, -27.9447, -62.7341, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.85724, -35.7093, 5.77709, 0.83 ) }
    dend_17 { pt3dadd( 3.01007, -35.9745, 5.79768, 0.83 ) }
    dend_17 { pt3dadd( 4.65537, -38.288, 6.21989, 0.83 ) }
    dend_17 { pt3dadd( 6.1364, -40.3132, 6.45746, 0.55 ) }
    dend_17 { pt3dadd( 7.31794, -41.9289, 6.64699, 0.55 ) }
    dend_17 { pt3dadd( 9.82935, -45.3632, 7.04983, 0.83 ) }
    dend_17 { pt3dadd( 12.8755, -49.5286, 7.53846, 0.55 ) }
    dend_17 { pt3dadd( 14.5135, -51.7035, 7.85347, 0.83 ) }
    dend_17 { pt3dadd( 17.3247, -55.1394, 8.58145, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 2.85724, -35.7093, 5.77709, 0.55 ) }
    dend_14 { pt3dadd( 1.69257, -36.6038, 3.80755, 0.55 ) }
    dend_14 { pt3dadd( 0.442445, -37.5638, 1.69349, 0.55 ) }
    dend_14 { pt3dadd( -1.03335, -38.6971, -0.802174, 0.55 ) }
    dend_14 { pt3dadd( -2.82544, -40.0734, -3.83272, 0.55 ) }
    dend_14 { pt3dadd( -3.84238, -40.8543, -5.55246, 0.55 ) }
    dend_14 { pt3dadd( -4.04667, -41.0112, -5.89793, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.65061, -130.626, 93.5202, 0.55 ) }
    dend_7 { pt3dadd( 3.76581, -140.35, 99.6607, 0.55 ) }
    dend_7 { pt3dadd( 5.59013, -150.893, 104.136, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.65061, -130.626, 93.5202, 0.55 ) }
    dend_4 { pt3dadd( 2.91106, -137.333, 97.2441, 0.55 ) }
    dend_4 { pt3dadd( 2.84849, -143.892, 101.203, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -53.4294, 59.747, -13.9885, 0.28 ) }
    dend_59 { pt3dadd( -54.5406, 61.2766, -12.5902, 0.28 ) }
    dend_59 { pt3dadd( -54.9577, 61.8562, -11.9926, 0.55 ) }
    dend_59 { pt3dadd( -56.1471, 63.5352, -10.226, 0.28 ) }
    dend_59 { pt3dadd( -56.741, 64.3672, -9.43683, 0.55 ) }
    dend_59 { pt3dadd( -58.3684, 66.6195, -7.38111, 0.28 ) }
    dend_59 { pt3dadd( -60.0223, 68.9087, -5.29176, 0.55 ) }
    dend_59 { pt3dadd( -62.7692, 72.4958, -1.79672, 0.28 ) }
    dend_59 { pt3dadd( -63.3535, 73.2662, -1.05182, 0.55 ) }
    dend_59 { pt3dadd( -64.6345, 75.0713, 0.52295, 0.28 ) }
    dend_59 { pt3dadd( -65.131, 75.8195, 1.14073, 0.55 ) }
    dend_59 { pt3dadd( -70.9872, 80.84, 6.47937, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -77.4599, 86.9024, 9.7078, 0.55 ) }
    dend_59 { pt3dadd( -82.9483, 93.2069, 14.1121, 0.55 ) }
    dend_59 { pt3dadd( -87.1783, 100.65, 18.2827, 0.55 ) }
    dend_59 { pt3dadd( -92.3919, 107.74, 21.8587, 0.55 ) }
    dend_59 { pt3dadd( -98.423, 113.386, 26.3688, 0.55 ) }
    dend_59 { pt3dadd( -103.868, 118.29, 32.2159, 0.55 ) }
    dend_59 { pt3dadd( -108.487, 122.215, 39.3187, 0.55 ) }
    dend_59 { pt3dadd( -113.103, 126.69, 46.1172, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -53.4294, 59.747, -13.9885, 0.55 ) }
    dend_58 { pt3dadd( -56.2136, 58.5551, -13.8116, 0.55 ) }
    dend_58 { pt3dadd( -57.6567, 57.8882, -13.7322, 0.28 ) }
    dend_58 { pt3dadd( -58.7307, 57.3919, -13.6732, 0.55 ) }
    dend_58 { pt3dadd( -59.6258, 56.9783, -13.6239, 0.28 ) }
    dend_58 { pt3dadd( -60.2527, 56.6886, -13.5894, 0.55 ) }
    dend_58 { pt3dadd( -61.9815, 55.8898, -13.4943, 0.28 ) }
    dend_58 { pt3dadd( -63.0908, 55.2917, -13.5854, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -158.327, -58.3573, -81.302, 0.55 ) }
    dend_54 { pt3dadd( -161.801, -65.7544, -87.2197, 0.55 ) }
    dend_54 { pt3dadd( -165.145, -73.8348, -92.2854, 0.55 ) }
    dend_54 { pt3dadd( -167.66, -81.1314, -98.8137, 0.55 ) }
    dend_54 { pt3dadd( -171.226, -88.8786, -104.215, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -158.327, -58.3573, -81.302, 0.55 ) }
    dend_53 { pt3dadd( -161.083, -59.526, -88.2871, 0.55 ) }
    dend_53 { pt3dadd( -163.424, -59.4832, -95.4695, 0.55 ) }
    dend_53 { pt3dadd( -166.452, -60.5449, -102.351, 0.55 ) }
    dend_53 { pt3dadd( -171.004, -60.669, -108.363, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -155.609, -49.7672, -75.3535, 0.55 ) }
    dend_51 { pt3dadd( -160.851, -51.0212, -88.1331, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -155.609, -49.7672, -75.3535, 0.55 ) }
    dend_50 { pt3dadd( -159.23, -58.458, -81.6496, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 90.2578, -51.8639, -137.34, 0.28 ) }
    dend_41 { pt3dadd( 93.1788, -53.7162, -139.714, 0.28 ) }
    dend_41 { pt3dadd( 94.5357, -54.5767, -140.817, 0.55 ) }
    dend_41 { pt3dadd( 97.1232, -56.2174, -142.919, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 90.2578, -51.8639, -137.34, 0.55 ) }
    dend_40 { pt3dadd( 89.6504, -52.4178, -138.918, 0.55 ) }
    dend_40 { pt3dadd( 88.4354, -53.5255, -142.073, 0.28 ) }
    dend_40 { pt3dadd( 88.0396, -53.8864, -143.101, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 80.5056, -56.4291, -137.745, 0.28 ) }
    dend_38 { pt3dadd( 80.9047, -58.656, -142.121, 0.28 ) }
    dend_38 { pt3dadd( 81.1024, -59.7587, -144.288, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 80.5056, -56.4291, -137.745, 0.55 ) }
    dend_37 { pt3dadd( 78.6185, -57.0781, -137.067, 0.55 ) }
    dend_37 { pt3dadd( 73.3563, -58.8876, -135.175, 0.28 ) }
    dend_37 { pt3dadd( 72.1062, -59.3175, -134.726, 0.55 ) }
    dend_37 { pt3dadd( 68.6866, -60.4935, -133.497, 0.28 ) }
    dend_37 { pt3dadd( 66.4823, -61.2515, -132.705, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 17.3247, -55.1394, 8.58145, 0.83 ) }
    dend_23 { pt3dadd( 17.4178, -55.483, 8.55966, 0.83 ) }
    dend_23 { pt3dadd( 18.6463, -59.9762, 8.41291, 0.83 ) }
    dend_23 { pt3dadd( 19.2225, -63.3836, 8.37715, 0.83 ) }
    dend_23 { pt3dadd( 19.4427, -66.7119, 8.55048, 0.83 ) }
    dend_23 { pt3dadd( 19.4696, -71.1706, 9.01088, 0.83 ) }
    dend_23 { pt3dadd( 19.3051, -76.3297, 9.65015, 0.83 ) }
    dend_23 { pt3dadd( 19.0254, -82.0987, 10.6339, 0.83 ) }
    dend_23 { pt3dadd( 18.6552, -87.7121, 11.813, 0.83 ) }
    dend_23 { pt3dadd( 17.8788, -94.6445, 12.9489, 0.83 ) }
    dend_23 { pt3dadd( 17.443, -97.8409, 13.2484, 0.83 ) }
    dend_23 { pt3dadd( 17.1654, -100.24, 13.3407, 0.83 ) }
    dend_23 { pt3dadd( 16.5872, -104.85, 13.3967, 0.83 ) }
    dend_23 { pt3dadd( 16.239, -108.961, 13.2894, 0.83 ) }
    dend_23 { pt3dadd( 16.2786, -117.642, 12.405, 0.83 ) }
    dend_23 { pt3dadd( 16.5886, -122.362, 11.4062, 0.83 ) }
    dend_23 { pt3dadd( 16.996, -126.7, 10.2078, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.3247, -55.1394, 8.58145, 0.55 ) }
    dend_18 { pt3dadd( 16.8221, -56.9562, 8.33649, 0.55 ) }
    dend_18 { pt3dadd( 16.4011, -58.2801, 8.23224, 0.55 ) }
    dend_18 { pt3dadd( 16.1152, -59.1272, 8.24458, 0.55 ) }
    dend_18 { pt3dadd( 15.666, -60.451, 8.39539, 0.55 ) }
    dend_18 { pt3dadd( 14.7628, -63.0711, 8.86051, 0.55 ) }
    dend_18 { pt3dadd( 13.9761, -65.063, 9.38493, 0.55 ) }
    dend_18 { pt3dadd( 13.2769, -66.6649, 9.94521, 0.55 ) }
    dend_18 { pt3dadd( 12.4922, -68.2904, 10.5885, 0.55 ) }
    dend_18 { pt3dadd( 11.8037, -69.6418, 11.1746, 0.28 ) }
    dend_18 { pt3dadd( 11.1629, -70.7526, 11.7778, 0.55 ) }
    dend_18 { pt3dadd( 9.84523, -72.7871, 13.0855, 0.55 ) }
    dend_18 { pt3dadd( 8.92933, -74.0449, 13.9676, 0.55 ) }
    dend_18 { pt3dadd( 8.41287, -74.75, 14.453, 0.55 ) }
    dend_18 { pt3dadd( 7.78787, -75.5843, 14.9742, 0.83 ) }
    dend_18 { pt3dadd( 5.98273, -78.0553, 16.3795, 0.28 ) }
    dend_18 { pt3dadd( 5.39483, -78.8723, 16.8272, 0.55 ) }
    dend_18 { pt3dadd( 4.38892, -80.3416, 17.6154, 0.28 ) }
    dend_18 { pt3dadd( 4.06598, -80.7954, 17.8849, 0.55 ) }
    dend_18 { pt3dadd( 3.36312, -81.855, 18.5249, 0.28 ) }
    dend_18 { pt3dadd( 2.98444, -82.4559, 18.8548, 0.55 ) }
    dend_18 { pt3dadd( 1.86683, -84.4065, 19.4557, 0.55 ) }
    dend_18 { pt3dadd( -0.917454, -89.6022, 23.2676, 0.55 ) }
    dend_18 { pt3dadd( -3.5623, -94.5428, 27.4707, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.04667, -41.0112, -5.89793, 0.55 ) }
    dend_16 { pt3dadd( -5.79325, -42.5867, -10.0803, 0.55 ) }
    dend_16 { pt3dadd( -6.3249, -42.9661, -11.2784, 0.55 ) }
    dend_16 { pt3dadd( -7.6978, -43.9139, -14.2035, 0.55 ) }
    dend_16 { pt3dadd( -10.7887, -45.8078, -20.4145, 0.28 ) }
    dend_16 { pt3dadd( -11.2681, -46.0676, -21.2956, 0.55 ) }
    dend_16 { pt3dadd( -13.3215, -47.2382, -24.8496, 0.55 ) }
    dend_16 { pt3dadd( -16.3034, -48.8175, -29.3285, 0.55 ) }
    dend_16 { pt3dadd( -17.4592, -49.3642, -31.0086, 0.28 ) }
    dend_16 { pt3dadd( -18.5024, -49.7339, -32.411, 0.28 ) }
    dend_16 { pt3dadd( -20.4129, -50.2931, -34.5026, 0.55 ) }
    dend_16 { pt3dadd( -22.6979, -50.8346, -37.1677, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -24.7802, -51.0908, -39.7036, 0.55 ) }
    dend_16 { pt3dadd( -26.4022, -51.1009, -41.6386, 0.55 ) }
    dend_16 { pt3dadd( -27.4991, -50.9818, -43.0228, 0.55 ) }
    dend_16 { pt3dadd( -30.669, -50.4358, -47.2236, 0.55 ) }
    dend_16 { pt3dadd( -34.0324, -49.5319, -51.587, 0.55 ) }
    dend_16 { pt3dadd( -35.4378, -49.0469, -53.3536, 0.28 ) }
    dend_16 { pt3dadd( -36.7612, -48.6179, -55.0609, 0.55 ) }
    dend_16 { pt3dadd( -39.4664, -47.9906, -58.4741, 0.28 ) }
    dend_16 { pt3dadd( -40.3823, -47.8155, -59.6089, 0.83 ) }
    dend_16 { pt3dadd( -42.1518, -47.4509, -61.5868, 0.28 ) }
    dend_16 { pt3dadd( -43.5107, -47.3046, -62.8052, 0.55 ) }
    dend_16 { pt3dadd( -45.5041, -47.1764, -64.5242, 0.28 ) }
    dend_16 { pt3dadd( -46.3095, -47.1107, -65.1806, 0.55 ) }
    dend_16 { pt3dadd( -47.8379, -47.0179, -66.3069, 0.55 ) }
    dend_16 { pt3dadd( -50.1778, -46.5934, -67.9319, 0.55 ) }
    dend_16 { pt3dadd( -51.739, -46.1981, -68.9095, 0.28 ) }
    dend_16 { pt3dadd( -53.0325, -45.692, -69.605, 0.55 ) }
    dend_16 { pt3dadd( -54.5489, -44.885, -70.4451, 0.28 ) }
    dend_16 { pt3dadd( -54.7947, -44.7302, -70.5934, 0.55 ) }
    dend_16 { pt3dadd( -56.9127, -43.2696, -72.374, 0.28 ) }
    dend_16 { pt3dadd( -58.3823, -42.1833, -73.8507, 0.55 ) }
    dend_16 { pt3dadd( -60.2023, -40.6051, -76.1202, 0.83 ) }
    dend_16 { pt3dadd( -61.623, -39.2713, -78.2013, 0.28 ) }
    dend_16 { pt3dadd( -61.9723, -38.9337, -78.786, 0.55 ) }
    dend_16 { pt3dadd( -64.5765, -36.4175, -83.4727, 0.28 ) }
    dend_16 { pt3dadd( -65.0085, -35.9932, -84.3558, 0.55 ) }
    dend_16 { pt3dadd( -66.2331, -34.6052, -87.0909, 0.28 ) }
    dend_16 { pt3dadd( -66.5478, -34.2485, -87.8005, 0.55 ) }
    dend_16 { pt3dadd( -67.3889, -33.3133, -89.5354, 0.28 ) }
    dend_16 { pt3dadd( -68.0065, -32.6357, -90.7083, 0.55 ) }
    dend_16 { pt3dadd( -69.504, -31.1031, -93.0244, 0.28 ) }
    dend_16 { pt3dadd( -70.4151, -30.2848, -94.348, 0.55 ) }
    dend_16 { pt3dadd( -72.4206, -28.7091, -97.0254, 0.28 ) }
    dend_16 { pt3dadd( -73.0247, -28.2858, -97.8081, 0.55 ) }
    dend_16 { pt3dadd( -73.9934, -27.7228, -98.9855, 0.28 ) }
    dend_16 { pt3dadd( -74.8333, -27.2458, -99.9332, 0.55 ) }
    dend_16 { pt3dadd( -76.6275, -26.279, -101.773, 0.28 ) }
    dend_16 { pt3dadd( -77.1766, -26.0025, -102.305, 0.55 ) }
    dend_16 { pt3dadd( -81.3347, -23.831, -106.043, 0.28 ) }
    dend_16 { pt3dadd( -82.841, -22.9293, -107.215, 0.55 ) }
    dend_16 { pt3dadd( -85.5898, -21.1499, -109.124, 0.28 ) }
    dend_16 { pt3dadd( -86.8408, -20.2863, -109.947, 0.55 ) }
    dend_16 { pt3dadd( -89.7721, -18.3198, -111.652, 0.28 ) }
    dend_16 { pt3dadd( -90.8676, -17.6507, -112.225, 0.55 ) }
    dend_16 { pt3dadd( -94.9236, -15.6244, -114.051, 0.28 ) }
    dend_16 { pt3dadd( -96.6307, -15.0165, -114.782, 0.55 ) }
    dend_16 { pt3dadd( -99.0966, -14.5925, -115.77, 0.55 ) }
    dend_16 { pt3dadd( -100.629, -14.4354, -116.336, 0.55 ) }
    dend_16 { pt3dadd( -103.834, -14.1886, -117.241, 0.28 ) }
    dend_16 { pt3dadd( -107.046, -13.9676, -117.934, 0.28 ) }
    dend_16 { pt3dadd( -109.743, -13.7686, -118.436, 0.55 ) }
    dend_16 { pt3dadd( -113.119, -13.207, -118.718, 0.28 ) }
    dend_16 { pt3dadd( -114.832, -12.7039, -118.655, 0.55 ) }
    dend_16 { pt3dadd( -118.959, -10.8296, -118.162, 0.28 ) }
    dend_16 { pt3dadd( -121.151, -9.4225, -117.457, 0.55 ) }
    dend_16 { pt3dadd( -122.599, -8.28259, -116.728, 0.28 ) }
    dend_16 { pt3dadd( -124.266, -6.97586, -115.549, 0.55 ) }
    dend_16 { pt3dadd( -126.37, -5.25617, -113.849, 0.28 ) }
    dend_16 { pt3dadd( -127.172, -4.64731, -113.211, 0.55 ) }
    dend_16 { pt3dadd( -131.331, -1.90856, -110.344, 0.28 ) }
    dend_16 { pt3dadd( -132.738, -1.04094, -109.389, 0.55 ) }
    dend_16 { pt3dadd( -136.098, 0.898334, -107.032, 0.28 ) }
    dend_16 { pt3dadd( -137.926, 1.92994, -105.751, 0.55 ) }
    dend_16 { pt3dadd( -139.429, 2.77517, -104.702, 0.55 ) }
    dend_16 { pt3dadd( -141.226, 3.7688, -103.491, 0.28 ) }
    dend_16 { pt3dadd( -142.16, 4.26683, -103.007, 0.55 ) }
    dend_16 { pt3dadd( -145.282, 6.028, -101.573, 0.28 ) }
    dend_16 { pt3dadd( -146.903, 7.14063, -100.799, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -4.04667, -41.0112, -5.89793, 0.55 ) }
    dend_15 { pt3dadd( -3.58853, -41.154, -6.43123, 0.55 ) }
    dend_15 { pt3dadd( -3.10717, -41.2162, -6.95881, 0.55 ) }
    dend_15 { pt3dadd( -2.471, -41.23, -7.5885, 0.55 ) }
    dend_15 { pt3dadd( -1.92836, -41.1818, -8.08188, 0.55 ) }
    dend_15 { pt3dadd( 1.87265, -40.3655, -11.0707, 0.55 ) }
    dend_15 { pt3dadd( 2.73251, -40.0642, -11.7612, 0.55 ) }
    dend_15 { pt3dadd( 3.9966, -39.5092, -12.8126, 0.55 ) }
    dend_15 { pt3dadd( 4.89071, -39.0801, -13.5641, 0.55 ) }
    dend_15 { pt3dadd( 5.77388, -38.5995, -14.2787, 0.28 ) }
    dend_15 { pt3dadd( 7.16737, -37.7651, -15.3133, 0.55 ) }
    dend_15 { pt3dadd( 9.29429, -36.4437, -16.74, 0.28 ) }
    dend_15 { pt3dadd( 9.46147, -36.3726, -16.9091, 0.55 ) }
    dend_15 { pt3dadd( 10.2868, -36.2137, -18.2783, 0.28 ) }
    dend_15 { pt3dadd( 10.6874, -36.1777, -19.2894, 0.55 ) }
    dend_15 { pt3dadd( 11.0171, -36.225, -20.421, 0.55 ) }
    dend_15 { pt3dadd( 11.578, -36.4215, -22.4571, 0.55 ) }
    dend_15 { pt3dadd( 12.6887, -36.8377, -26.448, 0.55 ) }
    dend_15 { pt3dadd( 13.4811, -37.1476, -29.1123, 0.55 ) }
    dend_15 { pt3dadd( 13.7789, -37.2635, -30.0237, 0.55 ) }
    dend_15 { pt3dadd( 15.8791, -37.9726, -35.967, 0.55 ) }
    dend_15 { pt3dadd( 16.5164, -38.1383, -37.5526, 0.55 ) }
    dend_15 { pt3dadd( 16.9411, -38.2307, -38.4148, 0.55 ) }
    dend_15 { pt3dadd( 18.1057, -38.5005, -40.3342, 0.55 ) }
    dend_15 { pt3dadd( 21.165, -39.4225, -44.7582, 0.55 ) }
    dend_15 { pt3dadd( 22.0394, -39.7298, -45.9105, 0.28 ) }
    dend_15 { pt3dadd( 22.5871, -39.9403, -46.526, 0.55 ) }
    dend_15 { pt3dadd( 23.4155, -40.3025, -47.4196, 0.28 ) }
    dend_15 { pt3dadd( 23.783, -40.5012, -47.7573, 0.55 ) }
    dend_15 { pt3dadd( 25.1013, -41.3001, -48.4416, 0.28 ) }
    dend_15 { pt3dadd( 26.1327, -42.2592, -48.3036, 0.55 ) }
    dend_15 { pt3dadd( 26.7405, -42.9332, -48.1695, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 27.2802, -43.6658, -47.9622, 0.55 ) }
    dend_15 { pt3dadd( 27.7375, -44.4562, -47.7206, 0.28 ) }
    dend_15 { pt3dadd( 27.9333, -44.8633, -47.6195, 0.55 ) }
    dend_15 { pt3dadd( 28.3728, -45.9243, -47.3297, 0.28 ) }
    dend_15 { pt3dadd( 28.4912, -46.2441, -47.2954, 0.55 ) }
    dend_15 { pt3dadd( 29.1814, -48.0844, -47.1974, 0.28 ) }
    dend_15 { pt3dadd( 29.5432, -48.9436, -47.2509, 0.55 ) }
    dend_15 { pt3dadd( 30.4156, -50.794, -47.5458, 0.28 ) }
    dend_15 { pt3dadd( 30.7769, -51.4809, -47.7198, 0.55 ) }
    dend_15 { pt3dadd( 32.07, -53.7466, -48.4028, 0.28 ) }
    dend_15 { pt3dadd( 32.3918, -54.299, -48.5899, 0.55 ) }
    dend_15 { pt3dadd( 33.3769, -56.052, -49.2486, 0.28 ) }
    dend_15 { pt3dadd( 33.5803, -56.4604, -49.3782, 0.55 ) }
    dend_15 { pt3dadd( 34.0829, -57.5386, -49.7181, 0.28 ) }
    dend_15 { pt3dadd( 34.3905, -58.1683, -49.9702, 0.55 ) }
    dend_15 { pt3dadd( 34.7208, -58.79, -50.2592, 0.55 ) }
    dend_15 { pt3dadd( 35.3789, -60.0299, -50.8272, 0.28 ) }
    dend_15 { pt3dadd( 35.8668, -60.8035, -51.2478, 0.55 ) }
    dend_15 { pt3dadd( 37.5067, -62.7678, -52.6356, 0.28 ) }
    dend_15 { pt3dadd( 38.1662, -63.4162, -53.2113, 0.55 ) }
    dend_15 { pt3dadd( 38.6307, -63.8304, -53.6002, 0.28 ) }
    dend_15 { pt3dadd( 39.1114, -64.2117, -53.9873, 0.55 ) }
    dend_15 { pt3dadd( 40.6231, -65.2886, -55.1532, 0.28 ) }
    dend_15 { pt3dadd( 41.7717, -66.1198, -56.0023, 0.55 ) }
    dend_15 { pt3dadd( 43.7346, -67.6742, -57.2854, 0.28 ) }
    dend_15 { pt3dadd( 44.3541, -68.1581, -57.6864, 0.55 ) }
    dend_15 { pt3dadd( 45.5573, -69.0448, -58.3508, 0.28 ) }
    dend_15 { pt3dadd( 45.9611, -69.334, -58.5392, 0.55 ) }
    dend_15 { pt3dadd( 46.6223, -69.7899, -58.7261, 0.28 ) }
    dend_15 { pt3dadd( 47.2077, -70.1725, -58.8415, 0.55 ) }
    dend_15 { pt3dadd( 48.8004, -71.1167, -58.9956, 0.28 ) }
    dend_15 { pt3dadd( 50.6347, -72.1219, -59.1463, 0.28 ) }
    dend_15 { pt3dadd( 51.5646, -72.5841, -59.1598, 0.28 ) }
    dend_15 { pt3dadd( 52.5083, -73.0237, -59.2311, 0.55 ) }
    dend_15 { pt3dadd( 53.8942, -73.6019, -59.3442, 0.28 ) }
    dend_15 { pt3dadd( 54.511, -73.8489, -59.3822, 0.83 ) }
    dend_15 { pt3dadd( 56.0788, -74.4962, -59.4189, 0.28 ) }
    dend_15 { pt3dadd( 56.7594, -74.795, -59.4712, 0.55 ) }
    dend_15 { pt3dadd( 59.7464, -76.2311, -59.8314, 0.28 ) }
    dend_15 { pt3dadd( 61.2427, -76.9742, -60.1285, 0.28 ) }
    dend_15 { pt3dadd( 62.3324, -77.5187, -60.4145, 0.55 ) }
    dend_15 { pt3dadd( 62.9666, -77.8537, -60.6505, 0.55 ) }
    dend_15 { pt3dadd( 64.6461, -78.7737, -61.4062, 0.28 ) }
    dend_15 { pt3dadd( 66.2068, -79.7098, -62.1716, 0.55 ) }
    dend_15 { pt3dadd( 67.623, -80.6077, -62.8665, 0.28 ) }
    dend_15 { pt3dadd( 68.8997, -81.4429, -63.5611, 0.55 ) }
    dend_15 { pt3dadd( 69.957, -82.1198, -64.1298, 0.28 ) }
    dend_15 { pt3dadd( 70.8315, -82.6068, -64.5522, 0.55 ) }
    dend_15 { pt3dadd( 72.9592, -83.6538, -65.4817, 0.28 ) }
    dend_15 { pt3dadd( 74.0396, -84.1802, -65.9093, 0.55 ) }
    dend_15 { pt3dadd( 75.6637, -84.972, -66.4926, 0.28 ) }
    dend_15 { pt3dadd( 76.998, -85.5791, -66.9418, 0.55 ) }
    dend_15 { pt3dadd( 80.1365, -86.8615, -68.0054, 0.28 ) }
    dend_15 { pt3dadd( 81.4203, -87.3155, -68.5259, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 5.59013, -150.893, 104.136, 0.55 ) }
    dend_9 { pt3dadd( 5.45289, -162.992, 109.373, 0.55 ) }
    dend_9 { pt3dadd( 4.39022, -176.003, 111.657, 0.55 ) }
    dend_9 { pt3dadd( 3.84815, -188.568, 115.732, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 5.59013, -150.893, 104.136, 0.55 ) }
    dend_8 { pt3dadd( 7.63195, -159.862, 109.626, 0.55 ) }
    dend_8 { pt3dadd( 8.99902, -167.479, 116.92, 0.55 ) }
    dend_8 { pt3dadd( 11.0427, -173.36, 125.412, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 2.84849, -143.892, 101.203, 0.55 ) }
    dend_6 { pt3dadd( 4.57108, -153.438, 107.189, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 2.84849, -143.892, 101.203, 0.55 ) }
    dend_5 { pt3dadd( 2.62514, -153.499, 106.559, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 16.996, -126.7, 10.2078, 0.83 ) }
    dend_25 { pt3dadd( 17.9721, -130.324, 11.052, 0.83 ) }
    dend_25 { pt3dadd( 18.8297, -133.368, 12.0198, 0.83 ) }
    dend_25 { pt3dadd( 19.6821, -136.395, 12.9818, 0.83 ) }
    dend_25 { pt3dadd( 20.4917, -139.269, 13.8954, 0.83 ) }
    dend_25 { pt3dadd( 21.7393, -143.698, 15.3033, 0.83 ) }
    dend_25 { pt3dadd( 22.9778, -148.095, 16.7011, 0.83 ) }
    dend_25 { pt3dadd( 23.8562, -150.989, 18.0542, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 16.996, -126.7, 10.2078, 0.55 ) }
    dend_24 { pt3dadd( 17.8819, -128.166, 11.1095, 0.55 ) }
    dend_24 { pt3dadd( 18.7288, -129.287, 11.6798, 0.55 ) }
    dend_24 { pt3dadd( 19.4004, -130.111, 12.0174, 0.55 ) }
    dend_24 { pt3dadd( 20.1992, -131.078, 12.21, 0.83 ) }
    dend_24 { pt3dadd( 21.1742, -132.168, 12.2816, 0.55 ) }
    dend_24 { pt3dadd( 22.1278, -133.234, 12.3517, 0.83 ) }
    dend_24 { pt3dadd( 23.2124, -134.384, 12.3022, 0.55 ) }
    dend_24 { pt3dadd( 23.8942, -135.044, 12.2322, 0.83 ) }
    dend_24 { pt3dadd( 26.1876, -137.168, 11.8174, 0.55 ) }
    dend_24 { pt3dadd( 27.9903, -138.838, 11.3011, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.5623, -94.5428, 27.4707, 0.55 ) }
    dend_20 { pt3dadd( -9.36113, -105.472, 30.8601, 0.55 ) }
    dend_20 { pt3dadd( -16.8648, -115.429, 33.4699, 0.55 ) }
    dend_20 { pt3dadd( -25.5204, -124.332, 35.9627, 0.55 ) }
    dend_20 { pt3dadd( -35.3739, -131.905, 37.9721, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.5623, -94.5428, 27.4707, 0.55 ) }
    dend_19 { pt3dadd( -7.80993, -102.339, 31.5149, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 23.8562, -150.989, 18.0542, 0.55 ) }
    dend_27 { pt3dadd( 24.2459, -153.967, 18.9513, 0.55 ) }
    dend_27 { pt3dadd( 24.8399, -157.754, 20.1935, 0.55 ) }
    dend_27 { pt3dadd( 25.4027, -161.331, 21.347, 0.55 ) }
    dend_27 { pt3dadd( 25.7759, -163.878, 22.1281, 0.55 ) }
    dend_27 { pt3dadd( 26.3956, -168.431, 23.4515, 0.55 ) }
    dend_27 { pt3dadd( 28.3403, -181.228, 26.8614, 0.55 ) }
    dend_27 { pt3dadd( 29.1103, -185.572, 27.8409, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 29.6711, -188.642, 28.3822, 0.55 ) }
    dend_27 { pt3dadd( 30.3511, -192.158, 28.7286, 0.55 ) }
    dend_27 { pt3dadd( 30.8424, -194.891, 28.7611, 0.55 ) }
    dend_27 { pt3dadd( 32.1832, -201.273, 28.5895, 0.55 ) }
    dend_27 { pt3dadd( 33.0386, -206.134, 28.4474, 0.55 ) }
    dend_27 { pt3dadd( 33.6792, -209.314, 28.4474, 0.55 ) }
    dend_27 { pt3dadd( 35.2961, -217.544, 28.854, 0.55 ) }
    dend_27 { pt3dadd( 36.3401, -223.069, 29.3635, 0.55 ) }
    dend_27 { pt3dadd( 37.7043, -230.172, 30.4094, 0.55 ) }
    dend_27 { pt3dadd( 39.3314, -238.196, 32.2021, 0.55 ) }
    dend_27 { pt3dadd( 40.6408, -243.516, 33.7296, 0.55 ) }
    dend_27 { pt3dadd( 41.4861, -246.65, 34.717, 0.55 ) }
    dend_27 { pt3dadd( 42.2129, -249.545, 35.6176, 0.55 ) }
    dend_27 { pt3dadd( 43.2004, -253.212, 36.5898, 0.55 ) }
    dend_27 { pt3dadd( 45.4985, -262.089, 38.3414, 0.55 ) }
    dend_27 { pt3dadd( 46.5057, -265.52, 38.8976, 0.55 ) }
    dend_27 { pt3dadd( 47.539, -269.35, 39.4888, 0.55 ) }
    dend_27 { pt3dadd( 49.0454, -275.106, 40.3461, 0.55 ) }
    dend_27 { pt3dadd( 50.0011, -279.548, 41.0411, 0.55 ) }
    dend_27 { pt3dadd( 50.6735, -283.792, 41.6415, 0.55 ) }
    dend_27 { pt3dadd( 51.1406, -287.854, 42.21, 0.55 ) }
    dend_27 { pt3dadd( 51.5291, -291.821, 42.8184, 0.55 ) }
    dend_27 { pt3dadd( 51.8232, -294.645, 43.2247, 0.55 ) }
    dend_27 { pt3dadd( 52.3375, -299.268, 43.7362, 0.55 ) }
    dend_27 { pt3dadd( 52.8957, -304.846, 43.9398, 0.55 ) }
    dend_27 { pt3dadd( 53.2416, -307.557, 43.8445, 0.55 ) }
    dend_27 { pt3dadd( 53.577, -309.943, 43.5879, 0.55 ) }
    dend_27 { pt3dadd( 54.4175, -314.438, 42.8524, 0.55 ) }
    dend_27 { pt3dadd( 54.9257, -317.293, 42.3089, 0.55 ) }
    dend_27 { pt3dadd( 55.5849, -320.804, 41.7681, 0.55 ) }
    dend_27 { pt3dadd( 55.9531, -323.274, 41.5297, 0.55 ) }
    dend_27 { pt3dadd( 56.7899, -329.694, 41.1487, 0.55 ) }
    dend_27 { pt3dadd( 57.2898, -334.496, 41.1919, 0.55 ) }
    dend_27 { pt3dadd( 57.921, -341.916, 41.8419, 0.55 ) }
    dend_27 { pt3dadd( 58.4099, -346.676, 42.7002, 0.55 ) }
    dend_27 { pt3dadd( 58.8796, -351.67, 43.758, 0.28 ) }
    dend_27 { pt3dadd( 59.017, -353.677, 44.2618, 0.28 ) }
    dend_27 { pt3dadd( 59.3103, -358.535, 45.9137, 0.28 ) }
    dend_27 { pt3dadd( 59.5263, -363.009, 47.7854, 0.28 ) }
    dend_27 { pt3dadd( 60.3169, -368.85, 50.8729, 0.28 ) }
    dend_27 { pt3dadd( 63.926, -381.978, 54.5529, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 23.8562, -150.989, 18.0542, 0.55 ) }
    dend_26 { pt3dadd( 24.559, -151.209, 18.5454, 0.55 ) }
    dend_26 { pt3dadd( 25.9649, -151.805, 19.6677, 0.55 ) }
    dend_26 { pt3dadd( 27.1603, -152.408, 20.6936, 0.28 ) }
    dend_26 { pt3dadd( 28.4268, -153.102, 21.8368, 0.55 ) }
    dend_26 { pt3dadd( 29.1396, -153.547, 22.6385, 0.28 ) }
    dend_26 { pt3dadd( 30.3129, -154.353, 24.1614, 0.55 ) }
    dend_26 { pt3dadd( 30.7238, -154.794, 24.971, 0.28 ) }
    dend_26 { pt3dadd( 30.8512, -154.953, 25.3033, 0.28 ) }
    dend_26 { pt3dadd( 31.0649, -155.173, 25.8802, 0.55 ) }
    dend_26 { pt3dadd( 31.9615, -155.868, 28.0061, 0.28 ) }
    dend_26 { pt3dadd( 32.3581, -156.133, 28.8842, 0.55 ) }
    dend_26 { pt3dadd( 33.6994, -156.894, 31.3157, 0.28 ) }
    dend_26 { pt3dadd( 34.474, -157.259, 32.5585, 0.28 ) }
    dend_26 { pt3dadd( 35.4905, -157.732, 34.0306, 0.55 ) }
    dend_26 { pt3dadd( 37.1131, -158.477, 36.0519, 0.28 ) }
    dend_26 { pt3dadd( 37.3498, -158.575, 36.2968, 0.55 ) }
    dend_26 { pt3dadd( 38.5667, -159.054, 37.4128, 0.28 ) }
    dend_26 { pt3dadd( 38.6846, -159.099, 37.501, 0.55 ) }
    dend_26 { pt3dadd( 39.7192, -159.667, 38.319, 0.28 ) }
    dend_26 { pt3dadd( 40.1981, -159.984, 38.7413, 0.55 ) }
    dend_26 { pt3dadd( 44.0952, -162.287, 42.2387, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -35.3739, -131.905, 37.9721, 0.55 ) }
    dend_22 { pt3dadd( -40.9239, -135.979, 40.2244, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -35.3739, -131.905, 37.9721, 0.55 ) }
    dend_21 { pt3dadd( -40.7241, -142.036, 37.7049, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 7
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 5
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 7
    dend_33 nseg = 3
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 11
    dend_15 nseg = 7
    dend_20 nseg = 3
    dend_27 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L6_BP_be00ceca27_0_0


