// Cell: Cell_472447460
/*
{
  "id" : "Cell_472447460",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "491.351, 342.514, 53.2, 7.5446", "495.123, 342.514, 53.2, 7.5446", "498.895, 342.514, 53.2, 7.5446" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "495.123, 342.514, 53.2, 1.0", "500.964, 356.33, 53.2, 1.0", "506.806, 370.146, 53.2, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "497.243, 338.808, 48.8261, 0.6864", "497.965, 336.975, 45.5165, 0.3452", "498.432, 336.069, 43.9958, 0.3958", "499.006, 335.213, 42.6311, 0.5464", "499.615, 334.38, 41.4462, 0.5504", "500.31, 333.563, 40.5093, 0.5198", "500.843, 332.561, 39.7508, 0.4208" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "497.281, 346.975, 50.8687, 0.2288", "497.266, 348.09, 51.0236, 0.3136", "497.098, 349.173, 51.0026, 0.3486", "497.129, 350.263, 51.0563, 0.4036", "497.31, 351.317, 51.3092, 0.5546", "497.386, 352.315, 51.7572, 0.5968", "497.316, 353.345, 52.306, 0.4548", "497.103, 354.438, 52.7853, 0.3452", "496.819, 355.536, 53.0804, 0.312", "496.448, 356.612, 53.2216, 0.3402", "496.059, 357.674, 53.1958, 0.4164", "495.466, 358.603, 53.0132, 0.439", "494.889, 359.574, 52.8052, 0.3712", "494.441, 360.623, 52.6288, 0.322", "493.774, 361.538, 52.5308, 0.316", "493.19, 362.494, 52.5451, 0.3474", "492.619, 363.465, 52.6389, 0.4294", "492.278, 364.498, 52.6221, 0.4644", "492.158, 365.589, 52.6686, 0.4128", "492.095, 366.449, 52.4485, 0.4258", "492.03, 367.553, 52.2491, 0.3784", "491.506, 368.401, 52.2738, 0.4082", "491.031, 369.354, 52.4135, 0.351", "490.902, 370.365, 52.3188, 0.3326", "490.307, 371.311, 52.1206, 0.3298", "489.947, 372.364, 51.8678, 0.4034", "489.75, 373.418, 51.506, 0.3844", "489.277, 374.434, 51.1445, 0.4188", "488.981, 375.491, 50.8234, 0.3718", "488.57, 376.488, 50.7184, 0.366", "488.483, 377.576, 50.7483, 0.4172", "488.225, 378.624, 50.6772, 0.4406", "487.726, 379.548, 50.5613, 0.3738", "487.167, 380.34, 50.652, 0.3268", "486.679, 381.251, 50.6436, 0.3252", "485.952, 382.023, 50.447, 0.3638", "485.812, 383.104, 50.244, 0.4624", "485.831, 384.248, 50.0931, 0.5138", "485.668, 385.362, 49.9111, 0.5608", "485.305, 386.346, 49.6216, 0.4256", "485.069, 387.392, 49.5986, 0.338", "484.843, 388.429, 49.791, 0.2988", "484.539, 389.531, 49.9778, 0.3142", "484.375, 390.663, 50.1376, 0.3734", "483.87, 391.69, 50.2704, 0.3338", "483.357, 392.706, 50.365, 0.3", "482.551, 393.504, 50.398, 0.2746", "482.086, 394.548, 50.4003, 0.2746", "481.767, 395.647, 50.4003, 0.2746", "481.482, 396.754, 50.4003, 0.2746", "481.093, 397.829, 50.4006, 0.2746", "480.668, 398.892, 50.4006, 0.2746", "480.256, 399.958, 50.4008, 0.2746", "479.874, 401.036, 50.4014, 0.2746", "479.401, 402.073, 50.4017, 0.2746", "479.15, 403.188, 50.4025, 0.2746", "478.993, 404.318, 50.4036, 0.2746", "478.993, 405.462, 50.405, 0.2746", "478.993, 406.606, 50.407, 0.2746", "479.005, 407.75, 50.4095, 0.2748", "479.124, 408.883, 50.4134, 0.275", "479.393, 409.989, 50.4188, 0.2752", "479.45, 411.131, 50.4263, 0.2758", "479.45, 412.275, 50.437, 0.2768", "479.45, 413.419, 50.4515, 0.279", "479.45, 414.563, 50.472, 0.2826", "479.45, 415.707, 50.5005, 0.289", "479.45, 416.851, 50.5408, 0.3024", "479.45, 417.995, 50.5974, 0.321", "479.471, 419.139, 50.6764, 0.386", "479.544, 420.279, 50.7828, 0.358", "479.565, 421.421, 50.932, 0.3398", "479.565, 422.552, 51.1636, 0.3736", "479.565, 423.673, 51.4716, 0.3346", "479.565, 424.764, 51.8736, 0.3012", "479.565, 425.864, 52.3023, 0.2766", "479.565, 427.008, 52.6411, 0.2782", "479.565, 428.152, 52.899, 0.2814", "479.507, 429.291, 53.0947, 0.2872", "479.347, 430.417, 53.2714, 0.2988", "479.139, 431.518, 53.4486, 0.3144", "478.769, 432.588, 53.613, 0.3738", "478.653, 433.717, 53.8017, 0.3346", "478.65, 434.856, 53.9927, 0.3014", "478.638, 435.998, 54.1668, 0.2768", "478.541, 437.134, 54.3015, 0.279", "478.327, 438.257, 54.4088, 0.2826", "478.185, 439.39, 54.5056, 0.289", "478.072, 440.522, 54.6064, 0.3024", "477.722, 441.605, 54.7282, 0.321", "477.208, 442.627, 54.8803, 0.386", "476.85, 443.68, 55.092, 0.358", "476.819, 444.755, 55.4442, 0.3396", "476.819, 445.765, 55.9574, 0.3734", "476.819, 446.838, 56.4847, 0.3338", "476.819, 447.982, 56.8901, 0.3", "476.597, 449.072, 57.183, 0.2746", "476.056, 450.078, 57.3759, 0.2746", "475.612, 451.125, 57.4874, 0.2748", "475.291, 452.223, 57.5512, 0.2748", "474.895, 453.294, 57.6086, 0.2752", "474.409, 454.329, 57.682, 0.2758", "473.845, 455.304, 57.8194, 0.2766", "473.544, 456.363, 58.0051, 0.2782", "473.426, 457.499, 58.2028, 0.2814", "472.923, 458.479, 58.3965, 0.287", "472.33, 459.429, 58.6356, 0.2988", "471.802, 460.432, 58.8795, 0.3142", "471.675, 461.532, 59.1357, 0.3734", "471.472, 462.648, 59.3488, 0.3338", "470.951, 463.659, 59.5053, 0.3002", "470.364, 464.64, 59.6142, 0.2748", "469.635, 465.519, 59.6851, 0.2748", "469.017, 466.48, 59.736, 0.2752", "468.297, 467.369, 59.78, 0.2758", "467.282, 467.875, 59.8315, 0.2766", "466.515, 468.719, 59.8987, 0.2782", "465.769, 469.543, 60.0466, 0.2814", "465.185, 470.464, 60.1972, 0.287", "464.283, 471.114, 60.3621, 0.2988", "463.747, 472.113, 60.5049, 0.3142", "463.363, 473.189, 60.6304, 0.3734", "462.89, 474.229, 60.7524, 0.3338", "462.313, 475.203, 60.9073, 0.3", "461.93, 476.217, 61.0926, 0.2746", "461.853, 477.359, 61.2713, 0.2746", "461.554, 478.44, 61.4653, 0.2746", "461.038, 479.422, 61.7364, 0.2746", "460.483, 480.37, 62.0847, 0.2746", "459.957, 481.371, 62.3991, 0.2744", "459.412, 482.357, 62.6984, 0.2744", "458.852, 483.345, 62.9457, 0.2742", "457.935, 483.941, 63.112, 0.2736", "456.884, 484.39, 63.2075, 0.2728", "455.764, 484.576, 63.2537, 0.2712", "454.634, 484.747, 63.275, 0.2684", "453.771, 485.445, 63.28, 0.2626", "452.741, 485.911, 63.28, 0.2542", "451.775, 485.399, 63.28, 0.2288", "451.766, 484.255, 63.28, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "497.097, 346.768, 54.4076, 0.2288", "497.576, 347.801, 54.5437, 0.2746", "498.054, 348.833, 54.616, 0.2746", "498.578, 349.843, 54.6787, 0.2748", "499.278, 350.698, 54.6543, 0.2748", "500.018, 351.487, 54.5625, 0.275", "500.616, 352.305, 54.3768, 0.2754", "501.302, 353.064, 54.1873, 0.2762", "501.628, 354.108, 54.112, 0.2778", "502.42, 354.88, 54.1318, 0.2802", "503.206, 355.68, 54.2139, 0.2854", "503.871, 356.561, 54.201, 0.2942", "504.545, 357.245, 53.9969, 0.312", "505.416, 357.978, 53.8423, 0.34", "506.313, 358.676, 53.6861, 0.416", "507.021, 359.502, 53.6404, 0.4384", "507.636, 360.29, 53.7449, 0.37", "508.549, 360.942, 53.8168, 0.3196", "509.155, 361.872, 53.8882, 0.3118", "509.511, 362.812, 53.8552, 0.3396", "509.842, 363.755, 53.8149, 0.4152", "510.15, 364.834, 53.8348, 0.4368", "510.428, 365.938, 53.8507, 0.367", "510.652, 367.056, 53.9151, 0.3142", "510.692, 368.002, 54.2242, 0.3006", "510.71, 369.086, 54.4785, 0.3236", "510.799, 369.826, 54.959, 0.3624", "511.039, 370.693, 55.4089, 0.4526", "511.254, 371.667, 55.5078, 0.5316", "511.63, 372.608, 55.3504, 0.4188", "511.827, 373.547, 54.959, 0.3254", "512.147, 374.572, 54.5706, 0.2746", "512.275, 375.438, 54.4561, 0.2746", "512.615, 376.004, 54.6918, 0.2746", "513.123, 376.766, 55.0911, 0.2746", "513.373, 377.795, 55.2938, 0.2746", "513.594, 378.71, 55.0967, 0.2746", "513.722, 379.434, 54.4701, 0.2746", "513.806, 380.11, 53.5077, 0.2746", "513.926, 381.117, 52.5748, 0.2746", "514.06, 382.252, 51.8689, 0.2746", "514.233, 383.382, 51.4276, 0.2746", "514.509, 384.491, 51.2324, 0.2746", "514.814, 385.594, 51.2302, 0.2746", "515.032, 386.716, 51.3506, 0.2746", "515.167, 387.852, 51.5301, 0.2746", "515.283, 388.989, 51.7555, 0.2746", "515.159, 390.064, 52.1452, 0.2746", "514.966, 391.12, 52.6966, 0.2746", "514.773, 392.176, 53.3627, 0.2746", "514.579, 393.232, 54.0977, 0.2746", "514.385, 394.288, 54.8596, 0.2746", "514.191, 395.346, 55.6077, 0.2746", "513.985, 396.456, 56.2114, 0.2746", "513.776, 397.58, 56.6726, 0.2746", "513.566, 398.705, 57.0413, 0.2746", "513.356, 399.828, 57.3661, 0.2746", "513.527, 400.941, 57.687, 0.2746", "513.862, 402.035, 58.0404, 0.2746", "514.13, 403.064, 58.5802, 0.2746", "514.305, 403.968, 59.3662, 0.2746", "514.466, 404.851, 60.324, 0.2746", "514.627, 405.734, 61.3659, 0.2744", "514.569, 406.764, 62.3277, 0.2744", "514.194, 407.835, 63.0132, 0.2742", "513.797, 408.908, 63.4211, 0.2736", "513.399, 409.98, 63.5916, 0.2728", "513.002, 411.053, 63.5664, 0.2712", "512.879, 412.182, 63.376, 0.2684", "513.343, 413.184, 63.0246, 0.2626", "513.806, 414.185, 62.5884, 0.2542", "514.269, 415.186, 62.1104, 0.2288", "514.732, 416.187, 61.0201, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "498.8, 340.539, 51.1944, 0.2288", "499.925, 340.382, 51.9932, 0.4284", "500.971, 340.069, 52.3524, 0.4248", "501.876, 339.431, 52.815, 0.5198", "502.751, 338.721, 53.3243, 0.434", "503.731, 338.176, 53.8675, 0.4026", "504.787, 337.844, 54.4757, 0.4096", "505.85, 337.539, 55.1295, 0.5656", "506.881, 337.118, 55.8023, 0.617", "507.804, 336.539, 56.5155, 0.4936", "508.522, 335.78, 57.2905, 0.413", "509.066, 334.924, 58.1277, 0.4566", "509.66, 334.109, 58.9882, 0.5154", "510.424, 333.362, 59.7332, 0.5046", "511.354, 332.708, 60.2518, 0.6096", "512.315, 332.107, 60.6486, 0.652", "513.192, 331.439, 61.0375, 0.5546", "514.053, 330.742, 61.4216, 0.5452", "515.054, 330.281, 61.6955, 0.6098", "516.159, 330.216, 61.9296, 0.561", "517.231, 330.527, 62.2171, 0.6012", "518.188, 330.705, 62.6452, 0.7278", "519.27, 330.786, 63.086, 0.7106", "520.401, 330.655, 63.3822, 0.5288", "521.537, 330.73, 63.6345, 0.4618" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "494.015, 339.259, 47.9581, 0.2288", "493.701, 338.339, 47.2606, 0.2962", "492.928, 337.497, 47.0252, 0.3158", "492.153, 336.655, 46.8675, 0.3454" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "492.283, 344.918, 52.3396, 0.4576", "491.569, 345.717, 53.2764, 0.4122", "490.988, 346.607, 53.7026, 0.3952" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "506.806, 370.146, 53.2, 1.0", "512.647, 383.962, 53.2, 1.0", "518.488, 397.778, 53.2, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "500.843, 332.561, 39.7508, 0.4208", "501.892, 332.43, 40.4426, 0.2288", "502.956, 332.054, 40.7974, 0.4772", "503.954, 331.659, 41.0208, 0.5424", "505.009, 331.263, 41.1502, 0.6084", "506.038, 331.024, 41.3837, 0.5392", "507.168, 330.905, 41.5388, 0.426", "508.233, 330.605, 41.5047, 0.3724", "509.311, 330.347, 41.3462, 0.429", "510.43, 330.329, 41.1214, 0.4636", "511.556, 330.131, 40.9335, 0.4112", "512.645, 329.863, 40.7747, 0.422", "513.457, 329.126, 40.6532, 0.376", "514.037, 328.185, 40.514, 0.3804", "514.893, 327.635, 40.3032, 0.4126", "515.991, 327.582, 40.1282, 0.5844", "517.123, 327.731, 40.0946, 0.5874", "518.249, 327.88, 40.2273, 0.752", "519.351, 327.913, 40.5712, 0.7406", "520.45, 327.943, 41.0838, 0.6582", "521.545, 327.865, 41.7099, 0.5714", "522.419, 327.731, 42.5314, 0.5504", "523.326, 327.531, 43.4389, 0.516", "524.312, 327.114, 44.2848, 0.6614", "525.23, 326.471, 44.9302, 0.5994", "526.143, 325.807, 45.425, 0.4946", "527.212, 325.681, 45.8097, 0.478", "528.127, 325.185, 45.9452, 0.502", "529.221, 325.001, 46.0396, 0.5082", "530.352, 324.906, 46.0807, 0.477", "531.484, 325.029, 46.1261, 0.3956", "532.579, 325.032, 46.3162, 0.362", "533.655, 324.811, 46.6141, 0.4158", "534.611, 324.427, 47.0526, 0.4082", "535.589, 323.873, 47.3337, 0.4582", "536.4, 323.075, 47.5238, 0.4692", "537.445, 322.622, 47.649, 0.4288", "538.388, 321.978, 47.654, 0.4196", "539.391, 321.439, 47.6235, 0.542", "540.451, 321.03, 47.558, 0.5486", "541.455, 320.617, 47.3444, 0.4864", "542.553, 320.588, 47.0238, 0.5034", "543.679, 320.416, 46.7138, 0.5796", "544.768, 320.302, 46.3658, 0.5034", "545.794, 319.974, 46.186, 0.5038", "546.689, 319.316, 45.9791, 0.5014", "547.57, 318.78, 45.6758, 0.513", "548.625, 318.54, 45.4034, 0.4562", "549.74, 318.532, 45.3026, 0.502", "550.834, 318.301, 45.3407, 0.5414", "551.93, 317.994, 45.4177, 0.6066", "553.004, 317.625, 45.5263, 0.5358", "554.004, 317.122, 45.6392, 0.4196", "554.877, 316.392, 45.6652, 0.3596", "555.712, 315.627, 45.5731, 0.4102", "556.688, 315.171, 45.3099, 0.4046", "557.732, 315.059, 44.8507, 0.42", "558.694, 314.848, 44.1913, 0.5502", "559.575, 314.292, 43.4792, 0.5278", "560.289, 313.418, 42.8285, 0.623", "560.936, 312.485, 42.3018, 0.5932", "561.564, 311.54, 41.8625, 0.6244", "562.053, 310.57, 41.3762, 0.4922", "562.429, 309.542, 40.8419, 0.4816", "562.818, 308.475, 40.3231, 0.4668", "563.23, 307.44, 39.7597, 0.4174", "563.625, 306.563, 39.0309, 0.4328", "563.72, 305.561, 38.2472, 0.3976", "563.962, 304.472, 37.557, 0.415", "564.634, 303.597, 36.9368, 0.5036", "565.413, 302.836, 36.3297, 0.6218", "566.405, 302.451, 35.7532, 0.6084", "567.53, 302.468, 35.3186, 0.5684", "568.669, 302.392, 35.0078, 0.5676", "569.786, 302.269, 34.8166, 0.438", "570.92, 302.355, 34.6408, 0.3624", "571.991, 302.655, 34.356, 0.3378", "573.025, 302.254, 33.9856, 0.4182", "573.737, 301.538, 33.411, 0.4114", "574.558, 301.065, 32.6561, 0.4714", "575.674, 300.879, 31.9701, 0.4588", "576.79, 300.985, 31.3429, 0.577", "577.924, 300.974, 30.8143, 0.5676" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "500.843, 332.561, 39.7508, 0.4208", "500.81, 331.006, 39.1625, 0.4408", "500.888, 329.943, 38.5708, 0.4062", "500.826, 328.887, 37.9702, 0.4614", "501.288, 327.87, 37.4399, 0.4396" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "521.537, 330.73, 63.6345, 0.4618", "521.956, 330.515, 63.7274, 0.3992", "522.898, 330.028, 63.6087, 0.4414", "523.825, 329.748, 63.6213, 0.4384", "524.755, 329.209, 63.6969, 0.3698", "525.829, 328.938, 63.8434, 0.3192", "526.836, 328.78, 63.8408, 0.3112", "527.872, 328.39, 63.891, 0.3382", "528.883, 327.884, 64.0268, 0.413", "529.932, 327.652, 64.262, 0.4326", "530.928, 327.346, 64.6024, 0.3592", "532.06, 327.217, 64.8659, 0.3", "533.149, 327.234, 64.9468, 0.2746", "534.035, 327.455, 64.7685, 0.2746", "535.092, 327.664, 64.6898, 0.2746", "536.114, 327.756, 64.5442, 0.2746", "536.99, 327.077, 64.5313, 0.2746", "537.885, 326.399, 64.5775, 0.2746", "538.945, 326.072, 64.5744, 0.2746", "540.031, 326.007, 64.5568, 0.2746", "541.12, 325.894, 64.643, 0.2746", "542.247, 325.707, 64.7382, 0.2746", "543.378, 325.587, 64.8281, 0.2746", "544.518, 325.588, 64.8934, 0.2746", "545.65, 325.522, 64.9883, 0.2746", "546.736, 325.273, 65.1764, 0.2746", "547.767, 324.841, 65.4021, 0.2748", "548.84, 324.523, 65.627, 0.2748", "549.971, 324.504, 65.8339, 0.2752", "551.096, 324.482, 66.0338, 0.2758", "552.162, 324.319, 66.3228, 0.2766", "553.201, 324.282, 66.5417, 0.2782", "554.29, 324.323, 66.6014, 0.2814", "555.415, 324.301, 66.6658, 0.2872", "556.505, 324.475, 66.8368, 0.2988", "557.485, 324.957, 67.1104, 0.3144", "558.484, 325.477, 67.3988, 0.374", "559.573, 325.471, 67.6446, 0.335", "560.646, 325.309, 67.9605, 0.302", "561.653, 325.698, 68.2724, 0.2782", "562.587, 326.349, 68.483, 0.2814", "563.604, 326.864, 68.6132, 0.287", "564.664, 327.261, 68.7434, 0.2988", "565.619, 327.88, 68.7971, 0.3142", "566.587, 328.441, 68.7162, 0.3736", "567.712, 328.507, 68.6546, 0.334", "568.812, 328.799, 68.6311, 0.3004", "569.921, 329.003, 68.5404, 0.2752", "571.054, 329.028, 68.4194, 0.2758", "572.149, 329.328, 68.3183, 0.2768", "573.083, 329.982, 68.2746, 0.279", "574.144, 330.352, 68.3463, 0.2826", "575.243, 330.645, 68.4754, 0.289", "576.305, 331.056, 68.6216, 0.3024", "577.379, 331.259, 68.8638, 0.321", "578.437, 331.634, 68.987, 0.386", "579.479, 332.093, 69.0752, 0.358", "580.606, 332.275, 69.1636, 0.3396", "581.733, 332.361, 69.309, 0.3734", "582.835, 332.636, 69.4879, 0.3338", "583.912, 332.951, 69.7208, 0.3", "584.999, 333.191, 69.9849, 0.2746", "586.128, 333.034, 70.1845, 0.2746", "587.175, 332.604, 70.3094, 0.2746", "588.094, 331.927, 70.3648, 0.2746", "589.105, 331.395, 70.3618, 0.2746", "590.17, 330.978, 70.3038, 0.2746", "591.257, 330.622, 70.2019, 0.2746", "592.324, 330.213, 70.0616, 0.2746", "593.34, 329.69, 69.8804, 0.2746", "594.342, 329.183, 69.61, 0.2746", "594.938, 328.526, 69.1152, 0.2746", "595.937, 328.235, 68.6162, 0.2746", "596.71, 327.598, 68.0414, 0.2746", "596.768, 326.475, 67.4932, 0.2746", "597.349, 325.663, 66.9477, 0.2746", "598.457, 325.512, 66.4297, 0.2746", "599.448, 325.121, 65.9683, 0.2746", "600.241, 324.354, 65.5172, 0.2746", "601.237, 323.948, 65.0885, 0.2746", "602.373, 323.866, 64.7497, 0.2746", "603.515, 323.918, 64.5061, 0.2746", "604.656, 323.977, 64.3289, 0.2746", "605.799, 323.981, 64.1911, 0.2746", "606.943, 323.981, 64.0721, 0.2746", "608.088, 323.981, 63.9512, 0.2746", "609.205, 323.998, 63.7532, 0.2746", "610.267, 324.206, 63.4388, 0.2746", "611.279, 324.677, 63.089, 0.2746", "612.294, 325.197, 62.771, 0.2746", "613.388, 325.444, 62.5047, 0.2746", "614.531, 325.438, 62.2866, 0.2746", "615.653, 325.251, 62.1054, 0.2746", "616.777, 325.06, 61.9399, 0.2746", "617.911, 325.01, 61.7252, 0.2748", "618.976, 324.838, 61.3726, 0.275", "619.976, 324.363, 60.9675, 0.2752", "621.024, 323.911, 60.566, 0.2758", "622.141, 323.741, 60.1311, 0.2768", "623.216, 323.492, 59.5888, 0.2786", "624.257, 323.154, 58.919, 0.2824", "625.36, 323.066, 58.1703, 0.289", "626.43, 323.029, 57.2855, 0.3012", "627.477, 322.965, 56.2674, 0.3242", "628.438, 322.951, 55.102, 0.3636", "629.013, 322.951, 53.7141, 0.4546", "630.031, 322.971, 52.3499, 0.5354", "631.026, 323.481, 51.1227, 0.4256", "632.003, 323.78, 49.9624, 0.3384", "632.174, 324.702, 48.7659, 0.2986", "632.351, 325.585, 47.5714, 0.32", "633.104, 326.19, 46.3977, 0.3544", "633.987, 326.809, 45.3093, 0.4438", "634.734, 327.44, 44.2588, 0.4848", "635.434, 328.14, 43.304, 0.4824", "636.446, 328.328, 42.434, 0.3988", "637.504, 328.328, 41.6466, 0.3988", "638.598, 328.385, 40.9657, 0.334", "639.68, 328.675, 40.4541, 0.3002", "640.789, 328.947, 40.1234, 0.2748", "641.924, 329.083, 39.93, 0.275", "643.066, 329.124, 39.8381, 0.2754", "644.206, 329.216, 39.8126, 0.2762", "645.318, 329.471, 39.8227, 0.2776", "646.449, 329.578, 39.8476, 0.2802", "647.592, 329.617, 39.8829, 0.285", "648.735, 329.681, 39.9322, 0.2938", "649.878, 329.705, 39.9988, 0.3112", "651.006, 329.87, 40.0848, 0.3384", "652.126, 330.014, 40.245, 0.413", "652.953, 330.719, 40.4289, 0.4328", "653.478, 331.706, 40.6706, 0.3596", "654.035, 332.674, 40.9637, 0.3006", "654.85, 333.469, 41.2138, 0.2758", "655.833, 334.042, 41.4364, 0.2766", "656.813, 334.633, 41.5946, 0.2784", "657.936, 334.827, 41.7026, 0.2818", "659.021, 335.189, 41.7718, 0.288", "659.993, 335.789, 41.8211, 0.3006", "661.119, 335.993, 41.8715, 0.3178", "662.252, 336.143, 41.9322, 0.38", "663.354, 336.448, 42.0171, 0.3464", "664.397, 336.908, 42.1361, 0.3228", "665.541, 336.908, 42.3013, 0.3178", "666.685, 336.911, 42.525, 0.3508", "667.817, 337.004, 42.8557, 0.4358", "668.881, 337.367, 43.3188, 0.4762", "669.883, 337.721, 43.9704, 0.4354", "670.845, 338.131, 44.7779, 0.4626", "671.815, 338.59, 45.6599, 0.4724", "672.825, 338.778, 46.6172, 0.4582", "673.77, 338.94, 47.6476, 0.3596", "674.8, 339.082, 48.6363, 0.3006", "675.881, 339.04, 49.5284, 0.2758", "676.964, 338.963, 50.3149, 0.2766", "678.09, 338.838, 50.9264, 0.2784", "679.174, 338.492, 51.3898, 0.2818", "680.256, 338.15, 51.76, 0.2882", "681.379, 337.949, 52.0915, 0.2994", "682.508, 337.823, 52.4328, 0.3228", "683.652, 337.823, 52.7906, 0.3534", "684.675, 337.894, 53.2974, 0.4722", "685.543, 338.142, 54.0414, 0.393", "686.509, 338.22, 54.887, 0.3252", "687.447, 338.091, 55.7956, 0.2742", "688.519, 338.052, 56.5538, 0.2736", "689.663, 338.052, 57.0903, 0.2728", "690.779, 337.836, 57.4246, 0.2712", "691.817, 337.366, 57.5968, 0.2684", "692.932, 337.251, 57.6668, 0.2626", "694.076, 337.251, 57.68, 0.2542", "695.22, 337.251, 57.68, 0.2288", "696.238, 337.709, 57.68, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "521.537, 330.73, 63.6345, 0.4618", "521.893, 330.885, 64.6629, 0.6864", "522.85, 331.315, 65.2865, 0.5686", "523.79, 331.905, 65.5155, 0.4342", "524.581, 332.695, 65.7964, 0.3814", "525.436, 333.422, 66.0061, 0.4766", "526.359, 334.062, 66.1626, 0.401", "527.208, 334.779, 66.4031, 0.34", "528.042, 335.524, 66.6991, 0.3014", "528.923, 336.238, 66.9575, 0.3252", "529.539, 336.985, 67.3795, 0.3636", "530.496, 337.316, 67.9207, 0.462", "531.432, 337.915, 68.474, 0.513", "532.505, 338.251, 68.9928, 0.559", "533.635, 338.353, 69.4747, 0.4224", "534.762, 338.471, 69.9297, 0.3322", "535.791, 338.631, 70.4494, 0.2872", "536.877, 338.894, 70.9363, 0.299", "537.94, 339.294, 71.3574, 0.3146", "539.025, 339.651, 71.6576, 0.3746", "540.097, 340.051, 71.8696, 0.3358", "541.083, 340.508, 72.1448, 0.3036", "541.905, 341.297, 72.359, 0.2814", "542.83, 341.962, 72.5553, 0.287", "543.836, 342.447, 72.6267, 0.2988", "544.763, 343.108, 72.6603, 0.3142", "545.783, 343.34, 72.842, 0.3734", "546.226, 344.357, 72.9546, 0.3338", "547.179, 344.746, 73.2225, 0.3002", "548.279, 345.005, 73.4678, 0.2748", "549.422, 345.013, 73.6148, 0.2748", "550.547, 344.946, 73.6016, 0.2752", "551.66, 344.892, 73.4471, 0.2758", "552.794, 344.962, 73.3144, 0.2766", "553.876, 345.04, 73.0736, 0.2782", "554.808, 345.104, 72.7255, 0.2814", "555.878, 344.905, 72.6275, 0.2872", "556.971, 344.983, 72.6911, 0.2988", "558.072, 344.958, 72.8319, 0.3142", "559.129, 344.589, 73.0422, 0.3736", "560.142, 344.109, 73.2906, 0.3342", "561.173, 343.66, 73.4398, 0.3008", "562.269, 343.372, 73.4406, 0.276", "563.391, 343.383, 73.3172, 0.2774", "564.49, 343.661, 73.1091, 0.2796", "565.606, 343.894, 72.8619, 0.284", "566.723, 343.914, 72.6583, 0.292", "567.779, 344.091, 72.3498, 0.3064", "568.835, 344.262, 71.878, 0.3354", "569.924, 344.438, 71.3168, 0.3778", "570.994, 344.635, 70.6689, 0.5118", "572.036, 345.03, 70.0112, 0.4922", "573.034, 345.461, 69.3258, 0.3846", "573.996, 345.788, 68.598, 0.3", "574.998, 346.125, 67.9011, 0.2746", "576.115, 346.272, 67.375, 0.2746", "577.252, 346.401, 67.0194, 0.2746", "578.354, 346.701, 66.7982, 0.2744", "579.447, 347.037, 66.684, 0.2744", "580.346, 347.731, 66.6448, 0.2742", "581.219, 348.469, 66.64, 0.2736", "582.048, 349.259, 66.64, 0.2728", "582.631, 350.238, 66.64, 0.2712", "583.32, 351.15, 66.64, 0.2684", "583.824, 352.173, 66.64, 0.2626", "584.63, 352.98, 66.64, 0.2542", "585.494, 353.73, 66.64, 0.2288", "586.186, 354.64, 66.64, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "492.153, 336.655, 46.8675, 0.3454", "492.108, 335.763, 45.7974, 0.2288", "492.052, 334.662, 44.576, 0.2988", "491.994, 333.562, 44.0513, 0.3208", "492.156, 332.454, 43.4549, 0.3546", "492.248, 331.372, 42.7568, 0.4506", "492.605, 330.347, 41.995, 0.4684", "492.771, 329.303, 41.1726, 0.59", "493.369, 328.582, 40.2609, 0.6152" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "492.153, 336.655, 46.8675, 0.3454", "491.615, 335.793, 46.7603, 0.4326", "490.849, 334.959, 46.723, 0.4392", "490.206, 334.041, 46.8096, 0.5178", "489.983, 333.044, 47.1055, 0.57", "489.568, 332.203, 47.5703, 0.6614", "488.841, 331.341, 47.922, 0.6282", "488.366, 330.305, 48.1211, 0.6358", "487.891, 329.282, 48.1393, 0.5432", "487.228, 328.366, 48.0124, 0.4332", "486.443, 327.567, 47.7543, 0.3856", "485.844, 326.625, 47.4158, 0.4542" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "490.988, 346.607, 53.7026, 0.3952", "490.19, 346.02, 54.7823, 0.2288", "489.282, 345.352, 55.3862, 0.378", "488.375, 344.671, 55.62, 0.5122", "487.384, 344.362, 55.9325, 0.4928", "486.303, 344.353, 56.3097, 0.386", "485.186, 344.402, 56.5855, 0.3024", "484.115, 344.231, 56.6619, 0.279", "483.063, 343.888, 56.5782, 0.2828", "482.11, 343.513, 56.5939, 0.2896", "481.142, 343.292, 56.7554, 0.3036", "480.048, 343.27, 56.8198, 0.3232", "479.088, 343.27, 56.611, 0.3906", "478.003, 343.374, 56.3993, 0.3652", "476.902, 343.294, 56.0913, 0.3604", "475.838, 343.225, 55.6517, 0.3756", "474.869, 342.804, 55.3011, 0.5142", "473.819, 342.448, 55.0726, 0.4668", "472.682, 342.364, 54.8892, 0.4818", "471.56, 342.548, 54.7705, 0.4674", "470.454, 342.502, 54.5916, 0.418", "469.456, 342.466, 54.2604, 0.4356", "468.372, 342.125, 53.9848, 0.3966", "467.272, 342.178, 53.8952, 0.443", "466.211, 342.218, 53.9902, 0.41", "465.068, 342.224, 54.0414, 0.4688", "463.958, 342.407, 54.0092, 0.454", "462.893, 342.788, 54.0064, 0.5698", "461.879, 342.97, 53.7855, 0.5466", "460.842, 343.171, 53.4761, 0.5126", "459.732, 343.096, 53.3114, 0.4078", "458.632, 342.834, 53.2294, 0.415", "457.519, 342.853, 53.2263, 0.365", "456.439, 343.106, 53.3042, 0.3522", "455.405, 343.525, 53.3232, 0.3976", "454.439, 344.065, 53.3282, 0.3736", "453.474, 344.641, 53.3996, 0.3994", "452.421, 345.01, 53.4808, 0.335", "451.364, 345.385, 53.5486, 0.302", "450.35, 345.911, 53.5956, 0.2782", "449.254, 346.162, 53.5956, 0.2814", "448.176, 346.488, 53.5237, 0.287", "447.159, 347.006, 53.3896, 0.2988", "446.152, 347.388, 53.1236, 0.3142", "445.112, 347.766, 52.8567, 0.3734", "444.24, 348.444, 52.5619, 0.3338", "443.419, 349.222, 52.2539, 0.2998", "442.651, 350.067, 51.994, 0.2742", "441.988, 350.972, 51.7222, 0.2736", "441.201, 351.777, 51.4637, 0.2728", "440.431, 352.597, 51.2226, 0.2712", "439.47, 353.204, 51.0538, 0.2684", "438.534, 353.853, 50.9376, 0.2626", "437.533, 354.393, 50.9471, 0.2542", "436.562, 354.896, 51.13, 0.2288", "435.75, 355.67, 51.8, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "490.988, 346.607, 53.7026, 0.3952", "490.26, 347.406, 54.1568, 0.4662", "489.52, 348.266, 54.5339, 0.5564" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "577.924, 300.974, 30.8143, 0.5676", "578.716, 301.255, 29.3488, 0.2288", "579.802, 301.28, 28.5233, 0.3144", "580.882, 301.088, 28.1422, 0.3444", "581.963, 300.754, 27.7833, 0.424", "583.026, 300.427, 27.5206, 0.4532", "584.133, 300.337, 27.1964, 0.3982", "585.249, 300.515, 26.8464, 0.3674", "586.302, 300.349, 26.4418, 0.42", "587.099, 299.72, 25.8899, 0.446", "587.788, 298.971, 25.2073, 0.3848", "588.384, 298.133, 24.4958, 0.342", "588.683, 297.042, 23.8969, 0.378", "588.945, 295.957, 23.3408, 0.342", "589.63, 295.15, 22.8164, 0.3164", "589.784, 294.31, 22.2496, 0.2994", "588.726, 293.989, 21.7913, 0.3476", "587.634, 293.723, 21.5466, 0.2796", "586.529, 294.008, 21.28, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "577.924, 300.974, 30.8143, 0.5676", "578.816, 300.688, 30.4469, 0.5152", "579.937, 300.534, 30.1468, 0.589", "580.811, 299.837, 29.9018, 0.5834", "581.469, 298.974, 29.5758, 0.5752", "582.224, 298.198, 29.204, 0.55", "583.032, 297.41, 28.9402, 0.5524", "583.786, 296.702, 28.8649, 0.5488", "584.898, 296.499, 28.7686, 0.5782", "586.04, 296.5, 28.7, 0.459", "587.174, 296.441, 28.6182, 0.395", "588.277, 296.336, 28.4522, 0.4294", "589.358, 296.237, 28.2601, 0.4344", "590.29, 295.586, 28.1271, 0.5026", "591.31, 295.121, 28.0675, 0.572", "592.398, 294.859, 28.0109, 0.5192", "593.475, 294.655, 28.0904, 0.388", "594.429, 294.404, 28.1025, 0.306", "595.423, 294.324, 27.9686, 0.2858", "596.535, 294.388, 27.9121, 0.295", "597.644, 294.336, 27.8438, 0.3134", "598.716, 293.994, 27.7855, 0.3412", "599.787, 293.611, 27.7906, 0.4244", "600.725, 293.199, 27.9854, 0.4242", "601.584, 292.541, 28.0496, 0.4888", "602.41, 291.786, 27.9899, 0.5214", "603.159, 290.943, 27.972, 0.5464", "603.915, 290.118, 27.8538, 0.5376", "604.766, 289.359, 27.7194, 0.558", "605.565, 288.559, 27.6058, 0.4204", "606.57, 288.08, 27.4823, 0.3286", "607.589, 287.572, 27.4691, 0.2802", "608.447, 286.832, 27.5318, 0.2854", "609.162, 285.955, 27.6777, 0.2942", "610.056, 285.375, 27.9608, 0.312", "611.009, 284.944, 28.3312, 0.34", "611.826, 284.154, 28.6787, 0.4162", "612.657, 283.394, 29.0128, 0.4386", "613.446, 282.606, 29.3328, 0.3704", "614.367, 281.969, 29.5896, 0.3204", "615.268, 281.307, 29.6867, 0.3132", "616.021, 280.466, 29.6598, 0.342", "616.693, 279.571, 29.5523, 0.4198", "617.263, 278.651, 29.2978, 0.4458", "617.878, 277.769, 28.9596, 0.383", "618.602, 276.915, 28.6804, 0.345", "619.445, 276.154, 28.5642, 0.354", "620.265, 275.389, 28.6412, 0.4418", "621.104, 274.729, 28.9327, 0.4872", "622.103, 274.302, 29.3829, 0.4554", "623.132, 273.85, 29.8668, 0.5004", "624.18, 273.437, 30.3318, 0.5382", "625.292, 273.349, 30.735, 0.6004", "626.407, 273.361, 31.101, 0.5246", "627.134, 272.703, 31.5022, 0.3978", "628.098, 272.12, 31.7562, 0.3254", "629.239, 272.031, 31.8819, 0.3162", "630.376, 271.906, 31.8875, 0.3772", "631.514, 271.795, 31.7789, 0.3412", "632.632, 271.597, 31.5417, 0.3132", "633.675, 271.189, 31.1816, 0.3002", "634.623, 271.265, 30.6272, 0.3166", "635.107, 272.027, 29.8833, 0.3782", "635.725, 272.746, 29.1558, 0.3428", "636.86, 272.806, 28.5544, 0.3162", "637.997, 272.68, 28.0672, 0.3056", "639.122, 272.483, 27.6587, 0.3264", "640.236, 272.257, 27.27, 0.3976", "641.334, 272.199, 26.8052, 0.3736", "642.39, 272.44, 26.2234, 0.399", "643.459, 272.693, 25.5637, 0.3342", "644.454, 272.684, 24.7724, 0.3006", "645.252, 272.309, 23.8543, 0.276", "646.139, 272.043, 22.9177, 0.277", "647.249, 272.011, 22.1626, 0.2792", "648.381, 271.861, 21.6124, 0.2828", "649.507, 271.66, 21.2318, 0.291", "650.621, 271.5, 20.9266, 0.2994", "651.672, 271.86, 20.7211, 0.3476", "652.546, 272.581, 20.5481, 0.2796", "653.567, 273.073, 20.16, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "501.288, 327.87, 37.4399, 0.4396", "500.594, 327.43, 36.9026, 0.4576", "499.737, 326.955, 33.9749, 0.3608" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "501.288, 327.87, 37.4399, 0.4396", "501.429, 327.203, 37.0734, 0.5478", "502.041, 326.29, 36.7598, 0.4828", "502.739, 325.391, 36.5392, 0.5064", "503.199, 324.375, 36.3247, 0.5372", "503.725, 323.366, 36.1508, 0.429", "503.96, 322.251, 36.0139, 0.3446", "504.297, 321.161, 35.9447, 0.3098", "504.665, 320.095, 35.8534, 0.342", "504.535, 318.962, 35.8156, 0.389", "504.847, 317.918, 35.7188, 0.5398" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "493.369, 328.582, 40.2609, 0.6152", "493.063, 328.489, 38.3062, 0.2288", "492.405, 328.342, 36.1071, 0.3924", "491.459, 328.351, 35.1691, 0.5388", "490.492, 328.874, 34.2818, 0.5416", "489.426, 328.969, 33.3704, 0.4794", "488.456, 328.986, 32.3268, 0.4606", "487.604, 329.534, 31.2413, 0.645", "486.774, 329.9, 30.0829, 0.6096", "485.936, 330.388, 28.8884, 0.5432", "484.998, 330.823, 27.748, 0.4246", "483.965, 330.885, 26.7504, 0.4118", "483.102, 330.527, 25.7597, 0.5274", "482.251, 330.148, 24.8116, 0.5222", "481.291, 329.566, 24.1007, 0.435", "480.423, 329.057, 23.7322, 0.4196", "479.857, 328.37, 23.4452, 0.3672", "479.366, 327.971, 22.9051, 0.387", "478.436, 327.52, 22.426, 0.3134", "477.4, 327.237, 22.1886, 0.2542", "476.476, 327.298, 21.28, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "493.369, 328.582, 40.2609, 0.6152", "494.405, 327.369, 39.4134, 0.4898", "494.912, 326.37, 38.691, 0.4062", "495.323, 325.392, 38.0414, 0.4454", "495.506, 324.374, 37.4506, 0.488", "495.624, 323.29, 37.0535, 0.4866", "495.676, 322.189, 36.9838, 0.4144", "495.673, 321.115, 37.1776, 0.3918", "495.698, 320.011, 37.5049, 0.4956", "495.551, 318.967, 37.9224, 0.4366", "495.169, 317.959, 38.3432, 0.4054", "494.891, 316.854, 38.6212, 0.4254", "494.623, 315.773, 38.6926, 0.5422", "494.311, 314.721, 38.5717, 0.8274", "493.705, 313.854, 38.3393, 1.0266", "493.067, 312.952, 38.1489, 0.9332", "492.712, 311.881, 38.0806, 0.9488", "492.399, 310.843, 38.1979, 0.9774", "491.737, 309.988, 38.4308, 0.803", "490.998, 309.127, 38.6257, 0.667", "490.29, 308.233, 38.743, 0.6508", "489.631, 307.301, 38.7738, 0.6192", "489.271, 306.228, 38.7727, 0.566", "489.159, 305.095, 38.722, 0.6712", "489.234, 303.955, 38.6604, 0.7934", "489.147, 302.818, 38.5994, 0.6866", "489.245, 301.685, 38.5473, 0.733", "489.131, 300.555, 38.4107, 0.778", "489.006, 299.433, 38.1615, 0.8326", "488.617, 298.363, 37.8554, 0.8426", "488.382, 297.362, 37.3587, 0.8472", "488.005, 296.289, 36.8628, 0.923", "487.805, 295.177, 36.3527, 0.7386", "487.866, 294.058, 35.8266, 0.5988" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "485.844, 326.625, 47.4158, 0.4542", "485.462, 325.624, 48.333, 0.2288", "485.078, 324.737, 50.0178, 0.3746", "484.843, 323.98, 50.8472, 0.3362", "485.112, 322.951, 51.634, 0.304", "485.657, 321.954, 52.3076, 0.2822", "486.305, 321.195, 52.7576, 0.2888", "486.398, 320.368, 53.4621, 0.3004", "486.142, 320.43, 54.5252, 0.324", "485.47, 319.754, 55.6895, 0.3602", "484.731, 319.322, 56.9867, 0.4622", "483.919, 318.872, 58.3164, 0.482", "482.958, 318.289, 59.5031, 0.6534", "482.09, 317.705, 60.5875, 0.5472", "481.192, 317.225, 61.6286, 0.5786", "480.21, 316.8, 62.6228, 0.4436", "479.164, 316.461, 63.5468, 0.4446", "478.288, 316.236, 64.5406, 0.3708", "477.272, 316.015, 65.4842, 0.3706", "476.22, 315.634, 66.3233, 0.396", "475.595, 314.788, 67.1236, 0.5466", "475.036, 313.812, 67.8454, 0.5512", "474.443, 312.836, 68.4709, 0.5208", "473.518, 312.242, 69.0948, 0.4242", "472.878, 311.703, 69.9219, 0.4406", "472.776, 310.622, 70.7473, 0.4368", "472.775, 309.482, 71.4319, 0.3668", "472.633, 308.378, 72.1319, 0.3136", "472.162, 307.421, 72.8692, 0.3012", "472.056, 306.721, 73.7926, 0.3184", "472.153, 305.598, 74.6276, 0.3816", "472.162, 304.477, 75.4331, 0.3492", "472.16, 303.345, 76.1592, 0.328", "472.342, 302.286, 76.8494, 0.3274", "472.586, 301.394, 77.7174, 0.3696", "472.733, 300.627, 78.7494, 0.4654", "472.168, 299.896, 79.7703, 0.5564", "471.381, 299.482, 80.8217, 0.4594", "470.587, 298.926, 81.9582, 0.4268", "469.636, 298.531, 83.0701, 0.3384", "468.926, 298.372, 84.2797, 0.3084", "467.817, 298.312, 85.3429, 0.2904", "466.821, 297.814, 86.3495, 0.3032", "466.054, 297.112, 87.3216, 0.33", "465.599, 296.39, 88.403, 0.3666", "464.745, 295.907, 89.5362, 0.497", "464.448, 295.174, 90.7684, 0.4338", "464.092, 294.184, 91.9458, 0.4262", "464.043, 293.06, 92.976, 0.3378", "463.887, 292.41, 94.2088, 0.307", "463.6, 291.714, 95.5844, 0.2876", "463.461, 290.736, 96.971, 0.2998", "463.401, 289.711, 98.3402, 0.316", "463.489, 288.615, 99.6386, 0.377", "463.239, 287.549, 100.869, 0.3406", "462.943, 286.707, 102.188, 0.3126", "462.492, 285.974, 103.598, 0.2988", "461.88, 285.61, 105.149, 0.3142", "461.327, 284.826, 106.705, 0.3734", "460.983, 283.83, 108.202, 0.3338", "460.765, 282.87, 109.691, 0.3", "460.661, 281.89, 111.146, 0.2746", "460.264, 281.095, 112.64, 0.2746", "459.76, 280.309, 114.143, 0.2744", "459.561, 279.54, 115.74, 0.2744", "459.317, 278.67, 117.355, 0.2742", "458.773, 278.057, 119.014, 0.2736", "458.252, 277.448, 120.696, 0.2728", "457.782, 276.583, 122.311, 0.2712", "457.182, 275.81, 123.838, 0.2684", "456.249, 275.523, 125.245, 0.2626", "455.574, 275.668, 126.646, 0.2542", "454.807, 275.679, 127.997, 0.2288", "453.825, 275.361, 130.48, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "485.844, 326.625, 47.4158, 0.4542", "484.985, 325.918, 47.241, 0.505", "484.071, 325.381, 47.2052, 0.5134", "483.082, 325.033, 47.0386, 0.4868", "482.261, 324.466, 46.732, 0.4134", "481.422, 323.728, 46.4878, 0.396", "480.662, 322.907, 46.377, 0.474", "480.226, 321.885, 46.3322, 0.5414", "479.945, 320.788, 46.2868, 0.583", "479.341, 319.863, 46.2518, 0.6054", "478.455, 319.146, 46.2252, 0.686", "477.476, 318.603, 46.2193, 0.6448", "476.422, 318.209, 46.1776, 0.8076", "475.313, 317.947, 46.0555, 0.8628", "474.178, 317.876, 45.8478, 0.7914", "473.039, 317.818, 45.5476, 0.5864", "472.0, 317.484, 45.0965, 0.558", "471.271, 316.948, 44.382, 0.6288", "470.48, 316.384, 43.5296, 0.6198", "469.766, 315.671, 42.6219, 0.5954", "469.334, 314.793, 41.6721, 0.589", "469.013, 313.76, 40.8461, 0.6174", "468.399, 312.823, 40.2282, 0.7034", "467.526, 312.095, 39.7774, 0.7008", "466.723, 311.288, 39.433, 0.7964", "466.267, 310.262, 39.1863, 0.7148", "466.251, 309.159, 38.9032, 0.6766", "466.515, 308.083, 38.5384, 0.7422", "467.072, 307.101, 38.1517, 0.6582", "467.602, 306.107, 37.73, 0.5874", "468.149, 305.126, 37.2814, 0.5008", "468.689, 304.191, 36.769, 0.5794", "468.72, 303.09, 36.2863, 0.7108", "469.188, 302.064, 35.9229, 0.7932", "469.087, 300.944, 35.6065, 0.8142", "468.975, 299.839, 35.2797, 0.8066", "469.245, 298.742, 35.0165, 0.7906", "469.387, 297.664, 34.9154, 0.7688", "469.583, 296.58, 34.7315, 0.6894", "469.857, 295.505, 34.5022, 0.7326", "469.993, 294.428, 34.2303, 0.5748", "470.316, 293.397, 34.0245, 0.5216", "470.602, 292.392, 34.0802, 0.6338", "471.034, 291.419, 34.2689, 0.7354", "471.529, 290.414, 34.4131, 0.752", "472.029, 289.409, 34.5436, 0.7004", "472.559, 288.406, 34.7612, 0.5498", "473.251, 287.597, 35.1036, 0.536", "474.13, 286.966, 35.5502, 0.5944", "474.627, 286.049, 36.0937, 0.5246", "474.897, 284.982, 36.7004, 0.5724", "475.446, 284.011, 37.2753, 0.4864", "476.254, 283.214, 37.793, 0.4898", "477.246, 282.703, 38.2827, 0.6208", "478.297, 282.33, 38.7957, 0.7164", "479.354, 282.157, 39.3725, 0.6922", "480.277, 281.699, 39.9832, 0.7092", "480.958, 281.026, 40.7019, 0.6694", "481.672, 280.259, 41.3448, 0.714", "482.573, 279.588, 41.8802, 0.6796", "483.044, 278.599, 42.3455, 0.7278", "483.351, 277.507, 42.7011, 0.7282", "483.448, 276.369, 42.9218, 0.7048", "483.433, 275.32, 43.1861, 0.5512", "483.228, 274.24, 43.2452, 0.5698", "482.694, 273.352, 43.0704, 0.5052", "482.023, 272.428, 42.9136, 0.409", "481.672, 271.365, 42.8439, 0.346", "481.521, 270.232, 42.7476, 0.3556", "481.455, 269.124, 42.572, 0.4462", "481.945, 268.106, 42.4668, 0.4888", "482.473, 267.096, 42.2988, 0.4898", "483.077, 266.137, 42.0392, 0.4128", "483.777, 265.284, 41.6548, 0.4244", "484.62, 264.541, 41.2426, 0.382", "485.196, 263.563, 40.7904, 0.3848", "485.664, 262.563, 40.2427, 0.4532", "486.108, 261.602, 39.5774, 0.5032", "486.615, 260.648, 38.8539, 0.5102", "487.185, 259.707, 38.1254, 0.4812", "487.414, 258.613, 37.4161, 0.403", "487.25, 257.567, 36.7321, 0.3764", "486.594, 256.771, 35.9528, 0.4374", "485.845, 256.048, 35.1044, 0.473", "485.205, 255.217, 34.2115, 0.4592", "484.542, 254.388, 33.3158, 0.3612", "484.061, 253.533, 32.4341, 0.3036", "484.217, 252.52, 31.5843, 0.2812", "484.646, 251.543, 30.8162, 0.2872", "484.807, 250.542, 30.2187, 0.2974", "484.326, 249.561, 29.8208, 0.318", "483.808, 248.575, 29.5235, 0.3508", "483.613, 247.468, 29.3026, 0.4372", "483.443, 246.352, 29.1894, 0.4722", "483.483, 245.259, 29.2194, 0.4582", "483.741, 244.163, 29.314, 0.3594", "483.847, 243.036, 29.4034, 0.3002", "483.366, 242.055, 29.4493, 0.275", "482.585, 241.224, 29.4277, 0.2754", "481.774, 240.602, 29.1945, 0.2762", "480.775, 240.171, 28.868, 0.2776", "480.29, 239.248, 28.5785, 0.2798", "479.949, 238.18, 28.4077, 0.2844", "479.629, 237.101, 28.2313, 0.2928", "479.749, 236.012, 27.9969, 0.3094", "480.107, 234.932, 27.7858, 0.3338", "480.327, 233.811, 27.5887, 0.4106", "480.297, 232.671, 27.3753, 0.3988", "479.919, 231.605, 27.1099, 0.4408", "479.458, 230.561, 26.8254, 0.4372", "479.343, 229.458, 26.4354, 0.3674", "479.345, 228.339, 25.9636, 0.3164", "479.457, 227.24, 25.4248, 0.2994", "479.644, 226.12, 24.9889, 0.3476", "479.885, 225.065, 24.4927, 0.2796", "480.137, 224.224, 22.96, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "489.52, 348.266, 54.5339, 0.5564", "488.091, 348.555, 54.7142, 0.467", "486.976, 348.78, 54.7355, 0.4046" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "489.52, 348.266, 54.5339, 0.5564", "489.288, 348.926, 55.9832, 0.2288", "489.077, 350.002, 57.0097, 0.3162", "489.082, 351.112, 57.4563, 0.3772", "489.053, 352.246, 57.944, 0.3412", "488.818, 353.36, 58.4447, 0.3136", "488.442, 354.426, 59.0069, 0.2994", "488.056, 355.368, 59.7416, 0.3228", "488.174, 356.325, 60.627, 0.3538", "488.721, 357.175, 61.6232, 0.4722", "489.368, 358.095, 62.5789, 0.393", "489.061, 359.154, 63.5289, 0.3254", "488.614, 360.058, 64.5635, 0.2744", "488.237, 360.918, 65.6858, 0.2742", "488.136, 361.969, 66.7464, 0.2736", "488.133, 362.759, 67.9244, 0.2728", "488.035, 363.713, 69.1561, 0.2712", "487.551, 364.688, 70.2836, 0.2684", "487.004, 365.507, 71.3843, 0.2626", "486.675, 366.506, 72.3898, 0.2542", "486.654, 367.594, 73.2696, 0.2288", "487.115, 368.482, 75.04, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "499.737, 326.955, 33.9749, 0.3608", "499.637, 326.819, 32.7144, 0.3028", "499.512, 326.644, 31.113, 0.2796", "499.386, 326.47, 29.3104, 0.284", "499.188, 326.023, 27.4716, 0.292", "498.708, 325.168, 25.858, 0.3064", "497.877, 324.457, 24.5988, 0.3358", "497.268, 323.497, 23.7269, 0.3778", "496.498, 322.682, 23.2176, 0.5176", "496.483, 321.567, 23.0216, 0.4732", "496.538, 320.441, 22.8967, 0.494", "496.074, 319.429, 22.7634, 0.488", "495.301, 318.677, 22.5674, 0.4646", "495.165, 317.637, 22.3499, 0.4818", "495.417, 316.578, 22.3093, 0.6772", "495.551, 315.53, 22.4557, 0.7024", "495.432, 314.436, 22.5879, 0.5558", "495.349, 313.339, 22.7195, 0.5368", "495.664, 312.903, 23.1448, 0.418", "495.915, 312.06, 23.6443, 0.373", "495.766, 310.995, 23.8493, 0.356", "495.723, 309.918, 23.8188, 0.4576", "496.382, 308.994, 23.52, 0.4576" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "499.737, 326.955, 33.9749, 0.3608", "498.365, 326.659, 34.1032, 0.2288", "497.298, 326.393, 33.1792, 0.323", "496.221, 326.088, 32.837, 0.3904", "495.344, 325.484, 32.4915, 0.3644", "494.818, 324.669, 31.9035, 0.3592", "494.468, 323.677, 31.1769, 0.3734", "493.99, 322.701, 30.487, 0.51", "493.204, 321.925, 29.8869, 0.4578", "492.444, 321.564, 29.0332, 0.4716", "491.609, 321.111, 27.9994, 0.4184", "490.778, 320.673, 26.8652, 0.4718", "489.995, 320.519, 25.6211, 0.5198", "489.211, 319.828, 24.486, 0.3984", "488.444, 319.106, 23.4671, 0.2796", "487.458, 318.604, 21.84, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "504.847, 317.918, 35.7188, 0.5398", "506.356, 317.415, 35.3352, 0.2288", "507.272, 316.883, 34.2325, 0.4708", "508.22, 316.314, 33.7859, 0.4994", "509.042, 315.861, 33.1705, 0.6796", "509.374, 314.802, 32.5889, 0.6264", "510.103, 313.943, 32.1958, 0.577", "510.937, 313.223, 31.9791, 0.4744", "511.779, 312.465, 31.7579, 0.5662", "512.577, 311.702, 31.5798, 0.511", "513.334, 310.999, 31.1884, 0.5892", "513.913, 310.108, 30.6351, 0.5418", "514.521, 309.182, 30.0502, 0.474", "515.381, 308.536, 29.3429, 0.4804", "515.73, 307.738, 28.4782, 0.5364", "515.373, 306.83, 27.6105, 0.4274", "514.999, 305.83, 26.8285, 0.3418", "514.511, 305.09, 25.9778, 0.305", "514.315, 304.203, 25.1056, 0.3304", "514.378, 303.157, 24.5711, 0.3814", "515.258, 302.474, 23.8, 0.4576" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "504.847, 317.918, 35.7188, 0.5398", "504.504, 316.418, 35.7157, 0.5074" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "487.866, 294.058, 35.8266, 0.5988", "488.204, 293.143, 34.606, 0.2288", "488.281, 292.007, 34.2773, 0.3502", "488.27, 290.876, 34.1144, 0.4052", "488.537, 289.879, 33.8834, 0.5634", "489.452, 289.201, 33.6084, 0.5844", "490.288, 288.452, 33.341, 0.5706", "490.919, 287.518, 33.1075, 0.572", "491.444, 286.548, 32.7698, 0.446", "491.666, 285.572, 32.2409, 0.3782", "491.523, 284.555, 31.5622, 0.3618", "491.423, 283.474, 30.919, 0.4872", "491.717, 282.4, 30.3565, 0.422", "491.774, 281.353, 29.6982, 0.3734", "491.38, 280.461, 28.8985, 0.3892", "491.116, 279.566, 27.972, 0.3626", "491.239, 278.742, 26.9153, 0.3556", "492.046, 278.039, 25.9683, 0.3672", "492.853, 277.237, 25.2479, 0.4972", "493.669, 276.564, 24.5666, 0.4406", "494.437, 275.897, 23.9, 0.4068", "495.382, 275.269, 23.4083, 0.4576", "495.81, 274.217, 22.68, 0.4576" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "487.866, 294.058, 35.8266, 0.5988", "487.453, 293.094, 35.1896, 0.5048", "486.963, 292.205, 34.7774, 0.4416", "486.107, 291.622, 34.3384, 0.4728", "485.153, 291.285, 33.7557, 0.498", "484.233, 290.684, 33.2503, 0.471", "483.496, 289.83, 32.7496, 0.5532", "482.833, 288.9, 32.2608, 0.5212", "482.665, 287.905, 31.6148, 0.4408", "482.396, 287.153, 30.7871, 0.3936", "481.53, 286.496, 30.0292, 0.499", "480.511, 286.189, 29.2146, 0.4438", "479.551, 285.716, 28.4018, 0.4148", "478.707, 285.028, 27.61, 0.4626", "477.744, 284.481, 26.9052, 0.5142", "476.694, 284.028, 26.3399, 0.5614", "475.775, 283.63, 25.7373, 0.4268", "475.28, 282.995, 25.0205, 0.3402", "475.085, 281.953, 24.3426, 0.3034", "474.837, 280.847, 23.8053, 0.3226", "474.373, 279.814, 23.3996, 0.389", "473.669, 278.944, 23.1672, 0.3638", "472.774, 278.335, 23.1554, 0.35", "471.695, 278.193, 23.14, 0.3942", "470.567, 278.177, 23.135, 0.3672", "469.61, 277.746, 22.9838, 0.387", "468.663, 277.15, 22.7553, 0.3134", "468.052, 276.211, 22.552, 0.2542", "467.553, 275.246, 21.84, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "486.976, 348.78, 54.7355, 0.4046", "486.417, 349.471, 54.5782, 0.4724", "486.052, 350.431, 54.5076, 0.3936", "485.301, 351.143, 54.2626, 0.326", "484.404, 351.826, 54.0226, 0.2758", "483.878, 352.742, 53.7337, 0.2766", "483.534, 353.569, 53.5489, 0.2784", "483.012, 354.264, 53.5419, 0.2816", "482.848, 355.021, 53.3092, 0.2874", "482.722, 355.863, 52.934, 0.2994", "482.174, 356.798, 52.7156, 0.3156", "481.734, 357.791, 52.3846, 0.3762", "481.304, 358.823, 52.022, 0.3388", "480.804, 359.764, 51.8409, 0.3094", "480.851, 360.806, 51.5861, 0.292", "481.133, 361.62, 51.2078, 0.3078", "481.313, 362.704, 50.974, 0.3306", "481.638, 363.793, 50.7438, 0.4052", "481.855, 364.88, 50.4731, 0.3874", "481.711, 366.006, 50.2163, 0.4244", "481.536, 367.126, 50.0108, 0.3834", "481.552, 368.082, 49.6563, 0.3812", "481.598, 368.962, 49.1, 0.4762", "481.391, 370.06, 48.5881, 0.4006", "481.174, 371.124, 48.2664, 0.3388", "480.716, 372.081, 48.0567, 0.3004", "480.239, 373.045, 47.7711, 0.3174", "479.913, 374.05, 47.4102, 0.3796", "479.942, 375.148, 47.0733, 0.3452", "479.627, 376.201, 46.8524, 0.321", "479.509, 377.235, 46.8261, 0.313", "479.665, 378.235, 46.6567, 0.348", "479.48, 379.27, 46.4089, 0.401", "479.633, 380.365, 46.3602, 0.556", "479.389, 381.48, 46.3215, 0.5682", "479.231, 382.596, 46.3064, 0.5534", "479.35, 383.672, 46.4248, 0.4792", "479.132, 384.772, 46.5962, 0.569", "478.496, 385.648, 46.7432, 0.5454", "477.686, 386.232, 46.6869, 0.5104", "477.419, 387.249, 46.5144, 0.404", "477.329, 388.364, 46.3826, 0.4084", "477.284, 389.477, 46.4489, 0.3514", "477.191, 390.559, 46.7435, 0.3338", "476.905, 391.627, 47.1957, 0.3318", "476.698, 392.575, 47.878, 0.4072", "476.501, 393.44, 48.7362, 0.3912", "475.973, 394.365, 49.5272, 0.4318", "475.591, 395.371, 50.2449, 0.3968", "475.182, 396.386, 50.9082, 0.4068", "474.72, 397.421, 51.4013, 0.5186", "474.656, 398.501, 51.8658, 0.5046", "474.512, 399.52, 52.423, 0.4088", "474.037, 400.508, 52.8609, 0.3396", "473.543, 401.488, 53.3515, 0.3734", "473.269, 402.547, 53.9078, 0.3338", "473.022, 403.623, 54.5068, 0.3", "472.774, 404.701, 55.1102, 0.2746", "472.527, 405.779, 55.7038, 0.2746", "472.28, 406.857, 56.2923, 0.2746", "472.033, 407.94, 56.831, 0.2748", "471.788, 409.058, 57.2376, 0.2748", "471.544, 410.176, 57.5487, 0.2752", "471.299, 411.293, 57.7973, 0.2758", "471.521, 412.401, 58.0664, 0.2766", "471.758, 413.508, 58.3663, 0.2782", "471.994, 414.615, 58.7026, 0.2814", "472.229, 415.722, 59.0775, 0.287", "472.465, 416.829, 59.479, 0.2988", "472.685, 417.939, 59.8959, 0.3142", "472.693, 419.077, 60.3072, 0.3734", "472.7, 420.214, 60.7258, 0.3338", "472.708, 421.352, 61.168, 0.3", "472.715, 422.49, 61.6524, 0.2746", "472.723, 423.628, 62.1986, 0.2746", "472.719, 424.762, 62.8272, 0.2746", "472.22, 425.673, 63.6698, 0.2746", "471.723, 426.585, 64.6786, 0.2746", "471.496, 427.22, 65.9316, 0.2746", "471.386, 427.737, 67.3862, 0.2746", "471.276, 428.253, 68.9304, 0.2746", "471.167, 429.01, 70.3259, 0.2746", "471.099, 430.151, 71.3146, 0.2748", "471.099, 431.295, 71.9589, 0.2748", "471.144, 432.437, 72.3201, 0.275", "471.233, 433.577, 72.4805, 0.2754", "471.289, 434.719, 72.5239, 0.2762", "471.328, 435.862, 72.5256, 0.2776", "471.328, 437.006, 72.5278, 0.2802", "471.347, 438.15, 72.5309, 0.285", "471.447, 439.288, 72.5351, 0.2938", "471.601, 440.421, 72.5413, 0.3112", "471.781, 441.548, 72.55, 0.3382", "472.027, 442.665, 72.562, 0.413", "472.312, 443.77, 72.5771, 0.4326", "472.656, 444.86, 72.597, 0.3592", "473.237, 445.768, 72.6396, 0.3", "474.056, 446.553, 72.693, 0.2746", "474.884, 447.34, 72.7345, 0.2746", "475.509, 448.275, 72.7653, 0.2746", "476.077, 449.268, 72.7854, 0.2746", "476.765, 450.179, 72.7966, 0.2746", "476.939, 451.29, 72.8, 0.2744", "477.038, 452.429, 72.8, 0.2744", "477.048, 453.573, 72.8, 0.2742", "477.104, 454.716, 72.8, 0.2736", "477.283, 455.845, 72.8, 0.2728", "477.592, 456.946, 72.8, 0.2712", "477.873, 458.054, 72.8, 0.2684", "478.367, 459.084, 72.8, 0.2626", "478.681, 460.182, 72.8, 0.2542", "479.492, 460.975, 72.8, 0.2288", "480.594, 461.261, 72.8, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "486.976, 348.78, 54.7355, 0.4046", "485.987, 348.07, 53.244, 0.2288", "485.026, 347.793, 52.1189, 0.2748", "484.064, 347.516, 51.6214, 0.2748", "483.103, 347.238, 51.1104, 0.2752", "482.142, 346.961, 50.6713, 0.2758", "481.102, 346.784, 50.409, 0.2766" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "504.504, 316.418, 35.7157, 0.5074", "503.939, 316.541, 34.4702, 0.2288", "502.932, 316.427, 32.9804, 0.3338", "502.613, 315.837, 32.1894, 0.3814", "502.788, 314.752, 31.5434, 0.4878" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "504.504, 316.418, 35.7157, 0.5074", "504.674, 315.031, 35.964, 0.5906", "504.784, 314.123, 36.3429, 0.5072", "504.987, 313.017, 36.6758, 0.5904", "505.157, 311.89, 37.06, 0.5068", "505.792, 311.034, 37.5038, 0.589", "506.364, 310.137, 38.0654, 0.5058", "506.339, 309.22, 38.848, 0.5802", "506.005, 308.242, 39.7653, 0.5242", "506.063, 307.197, 40.7655, 0.4462", "506.493, 306.249, 41.8155, 0.4042", "506.373, 305.254, 42.8935, 0.5138", "505.895, 304.527, 44.0311, 0.4958", "505.252, 303.755, 45.1077, 0.3918", "504.586, 302.892, 46.0314, 0.3126", "504.768, 301.822, 46.6217, 0.299", "505.28, 300.845, 47.1052, 0.3146", "505.762, 299.95, 47.672, 0.3746", "506.227, 298.917, 48.1869, 0.3358", "506.47, 298.022, 48.876, 0.3038", "506.666, 297.251, 49.7972, 0.2816", "507.026, 296.214, 50.6489, 0.2876", "507.072, 295.295, 51.5343, 0.2986", "506.964, 294.388, 52.5249, 0.32", "507.158, 293.346, 53.4492, 0.3546", "507.254, 292.305, 54.3273, 0.4446", "507.373, 291.217, 55.1233, 0.486", "507.6, 290.102, 55.8082, 0.4846", "507.792, 289.0, 56.4318, 0.4032", "507.729, 287.873, 56.9682, 0.4068", "507.579, 286.764, 57.5081, 0.3486", "507.624, 285.823, 58.1938, 0.3284", "507.61, 284.755, 58.9056, 0.322", "507.766, 283.658, 59.5871, 0.388", "508.157, 282.6, 60.1896, 0.3608", "508.223, 281.467, 60.6726, 0.351", "508.149, 280.328, 61.0562, 0.3642", "508.259, 279.312, 61.5219, 0.4636", "508.525, 278.211, 61.861, 0.5158", "508.805, 277.11, 62.1874, 0.5644", "508.803, 275.969, 62.4865, 0.4322", "508.96, 274.837, 62.7427, 0.3506", "509.022, 273.898, 63.175, 0.322", "509.125, 272.759, 63.4956, 0.3584", "509.195, 271.625, 63.7294, 0.4508", "509.423, 270.511, 63.9352, 0.4988", "509.639, 269.417, 64.038, 0.502", "509.816, 268.323, 64.1292, 0.466", "509.713, 267.253, 64.4045, 0.3738", "509.63, 266.227, 64.8939, 0.3278", "509.765, 265.136, 65.4755, 0.321", "510.031, 264.032, 66.0654, 0.3862", "510.366, 262.967, 66.6876, 0.3586", "510.794, 261.914, 67.2465, 0.3406", "511.039, 260.823, 67.8303, 0.3754", "511.259, 259.862, 68.5376, 0.3374", "511.503, 259.129, 69.47, 0.3068", "511.591, 258.13, 70.3707, 0.287", "511.687, 257.008, 71.1642, 0.2988", "512.107, 255.981, 71.8782, 0.3142", "512.511, 255.025, 72.6127, 0.3734", "513.141, 254.141, 73.2967, 0.3338", "513.925, 253.37, 73.962, 0.3", "514.597, 252.5, 74.6388, 0.2746", "515.132, 251.631, 75.3892, 0.2746", "515.731, 250.692, 76.0564, 0.2746", "516.3, 249.719, 76.6508, 0.2746", "516.981, 248.81, 77.1638, 0.2746", "517.612, 247.895, 77.6642, 0.2746", "518.302, 247.014, 78.1438, 0.2748", "519.111, 246.217, 78.5604, 0.2748", "520.065, 245.664, 78.9888, 0.2752", "520.873, 244.98, 79.455, 0.2758", "521.553, 244.083, 79.8367, 0.2766", "521.998, 243.033, 80.0839, 0.2782", "522.384, 241.956, 80.2018, 0.2814", "522.789, 240.946, 80.0839, 0.287", "523.219, 239.889, 79.8963, 0.2988", "523.842, 238.931, 79.6706, 0.3142", "524.27, 237.974, 79.2736, 0.3734", "524.676, 236.906, 78.9116, 0.3338", "525.231, 235.91, 78.5652, 0.3", "525.644, 234.872, 78.1752, 0.2746", "525.893, 233.76, 77.7888, 0.2748", "526.23, 232.67, 77.4556, 0.2748", "526.861, 231.738, 77.084, 0.275", "527.437, 230.809, 76.6164, 0.2754", "527.866, 229.795, 76.0964, 0.2762", "528.24, 228.744, 75.5703, 0.2776", "528.596, 227.671, 75.0744, 0.2802", "528.825, 226.573, 74.5993, 0.285", "528.908, 225.441, 74.2059, 0.294", "529.271, 224.384, 73.836, 0.3114", "529.817, 223.381, 73.5459, 0.3388", "530.384, 222.396, 73.2886, 0.4142", "531.06, 221.483, 73.0663, 0.435", "531.637, 220.512, 72.9352, 0.3632", "532.109, 219.488, 72.7647, 0.3072", "532.672, 218.501, 72.639, 0.2878", "533.49, 217.717, 72.5124, 0.3004", "534.394, 217.097, 72.2988, 0.3172", "535.133, 216.272, 72.0737, 0.3792", "535.627, 215.24, 71.9284, 0.3444", "536.225, 214.266, 71.8757, 0.3192", "536.911, 213.353, 71.9079, 0.3112", "537.664, 212.491, 72.0303, 0.3382", "538.347, 211.578, 72.2408, 0.413", "538.95, 210.701, 72.5911, 0.4326", "539.772, 210.221, 73.1755, 0.3592", "540.761, 209.757, 73.8133, 0.3", "541.497, 208.964, 74.4803, 0.2746", "542.024, 208.038, 75.2108, 0.2746", "542.511, 207.078, 75.9478, 0.2746", "542.852, 206.12, 76.6982, 0.2746", "543.011, 205.053, 77.341, 0.2746", "543.169, 203.923, 77.8148, 0.2746", "543.503, 202.833, 78.1315, 0.2746", "543.792, 201.731, 78.3191, 0.2746", "544.159, 200.651, 78.4174, 0.2746", "544.446, 199.548, 78.4616, 0.2746", "544.794, 198.461, 78.4913, 0.2746", "544.887, 197.334, 78.528, 0.2746", "544.887, 196.19, 78.5778, 0.2746", "544.887, 195.046, 78.6486, 0.2746", "544.887, 193.902, 78.7514, 0.2746", "544.887, 192.758, 78.8945, 0.2746", "544.863, 191.614, 79.081, 0.2746", "544.664, 190.492, 79.3103, 0.2746", "544.552, 189.51, 79.7518, 0.2746", "544.544, 188.626, 80.4196, 0.2746", "544.544, 187.523, 81.0617, 0.2746", "544.544, 186.382, 81.576, 0.2746", "544.544, 185.238, 81.972, 0.2746", "544.571, 184.094, 82.2662, 0.2746", "544.788, 182.974, 82.5023, 0.2748", "544.987, 181.848, 82.7078, 0.2748", "545.113, 180.713, 82.9433, 0.2752", "545.381, 179.673, 83.3269, 0.2758", "545.665, 178.572, 83.7217, 0.2766", "545.977, 177.5, 84.1674, 0.2782", "546.063, 176.383, 84.6294, 0.2814", "546.611, 175.379, 85.0284, 0.2872", "547.063, 174.338, 85.4188, 0.2988", "547.279, 173.225, 85.8035, 0.3142", "547.328, 172.126, 86.2641, 0.3736", "547.555, 171.034, 86.7356, 0.3342", "548.094, 170.131, 87.3006, 0.3006", "548.71, 169.203, 87.857, 0.2758", "549.154, 168.17, 88.3638, 0.2766", "549.521, 167.103, 88.8065, 0.2782", "550.047, 166.089, 89.1573, 0.2814", "550.664, 165.131, 89.4233, 0.287", "551.366, 164.227, 89.6319, 0.2988", "552.053, 163.312, 89.8246, 0.3142", "552.726, 162.408, 90.0642, 0.3734", "553.434, 161.572, 90.4176, 0.3338", "554.215, 160.766, 90.8264, 0.3", "554.647, 159.762, 91.2663, 0.2746", "554.726, 158.632, 91.7078, 0.2746", "554.726, 157.49, 92.1281, 0.2746", "554.721, 156.503, 92.6526, 0.2746", "554.647, 155.479, 93.2274, 0.2746", "554.267, 154.45, 93.7731, 0.2746", "553.644, 153.501, 94.2119, 0.2746", "553.051, 152.523, 94.5414, 0.2746", "552.403, 151.58, 94.7859, 0.2746", "551.708, 150.673, 94.967, 0.2746", "550.996, 149.777, 95.1303, 0.2746", "550.232, 148.925, 95.3182, 0.2746", "549.478, 148.099, 95.6413, 0.2746", "549.126, 147.018, 96.0487, 0.2746", "548.412, 146.127, 96.4916, 0.2746", "548.082, 145.111, 97.1057, 0.2746", "547.657, 144.325, 97.9261, 0.2746", "547.119, 143.991, 98.9696, 0.2746", "546.499, 143.344, 99.9639, 0.2746", "545.911, 142.378, 100.711, 0.2746", "545.393, 141.359, 101.233, 0.2746", "544.702, 140.457, 101.551, 0.2746", "543.994, 139.563, 101.734, 0.2746", "543.26, 138.691, 101.826, 0.2746", "542.487, 137.847, 101.876, 0.2746", "542.097, 136.816, 101.918, 0.2746", "542.029, 135.676, 101.954, 0.2746", "541.778, 134.573, 101.985, 0.2746", "541.493, 133.466, 102.017, 0.2746", "541.468, 132.327, 102.055, 0.2746", "541.625, 131.194, 102.109, 0.2746", "541.967, 130.105, 102.184, 0.2746", "542.231, 128.992, 102.291, 0.2746", "542.478, 127.875, 102.44, 0.2746", "542.581, 126.737, 102.642, 0.2746", "542.847, 125.625, 102.908, 0.2746", "543.08, 124.548, 103.348, 0.2746", "543.263, 123.482, 103.96, 0.2746", "543.315, 122.408, 104.712, 0.2746", "543.062, 121.366, 105.57, 0.2746", "542.797, 120.325, 106.5, 0.2746", "542.532, 119.285, 107.471, 0.2746", "542.267, 118.244, 108.458, 0.2746", "542.001, 117.203, 109.457, 0.2746", "541.737, 116.163, 110.47, 0.2746", "541.471, 115.122, 111.501, 0.2746", "541.207, 114.081, 112.554, 0.2746", "540.875, 113.092, 113.657, 0.2746", "540.501, 112.143, 114.821, 0.2746", "540.125, 111.196, 116.036, 0.2744", "539.748, 110.248, 117.293, 0.2744", "539.373, 109.301, 118.582, 0.2742", "538.997, 108.354, 119.894, 0.2736", "538.62, 107.406, 121.219, 0.2728", "538.355, 106.447, 122.596, 0.2712", "538.767, 105.627, 124.025, 0.2684", "539.179, 104.807, 125.456, 0.2626", "539.591, 103.987, 126.843, 0.2542", "540.002, 103.168, 128.152, 0.2288", "540.414, 102.348, 130.745, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "481.102, 346.784, 50.409, 0.2766", "480.142, 347.601, 46.6581, 0.4576", "479.302, 348.314, 46.34, 0.3594", "478.813, 349.256, 46.1684, 0.3002", "478.356, 349.858, 45.7968, 0.275", "477.997, 350.488, 45.495, 0.2752", "477.617, 351.395, 45.5333, 0.2758", "477.066, 352.251, 45.8371, 0.2768", "476.438, 353.159, 46.2109, 0.279", "475.879, 354.094, 46.482, 0.2826", "475.253, 354.991, 46.8009, 0.289", "474.92, 355.916, 47.262, 0.3024", "474.523, 356.926, 47.7058, 0.321", "473.919, 357.884, 48.06, 0.386", "473.766, 358.975, 48.4154, 0.3584", "473.805, 359.971, 48.7827, 0.3398", "473.547, 361.025, 48.8824, 0.374", "473.241, 362.076, 48.8194, 0.335", "472.947, 363.149, 48.7634, 0.302", "472.935, 364.279, 48.7066, 0.2782", "472.833, 365.389, 48.6808, 0.2814", "472.792, 366.367, 48.8802, 0.2872", "472.352, 367.143, 49.2528, 0.2988", "471.512, 367.911, 49.569, 0.3144", "470.669, 368.654, 49.7232, 0.3738", "469.924, 369.471, 49.6972, 0.3346", "469.392, 370.44, 49.5132, 0.3014", "468.903, 371.412, 49.3108, 0.277", "468.396, 372.4, 49.1772, 0.2792", "467.926, 373.436, 49.0647, 0.2832", "467.481, 374.463, 48.8726, 0.2904", "466.96, 375.274, 48.456, 0.305", "466.519, 376.228, 47.922, 0.3248", "466.24, 377.312, 47.383, 0.3984", "466.079, 378.439, 46.9092, 0.356", "466.066, 379.579, 46.2, 0.4576" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "481.102, 346.784, 50.409, 0.2766", "480.903, 346.772, 50.9146, 0.2784", "480.707, 346.76, 52.0181, 0.2818", "480.475, 346.701, 53.5142, 0.288", "479.887, 346.328, 55.1244, 0.3004", "478.82, 346.456, 56.5488, 0.3174", "477.929, 346.78, 57.8318, 0.3794", "476.938, 347.195, 58.7832, 0.345", "475.866, 347.418, 59.2928, 0.3206", "474.957, 347.819, 59.4849, 0.3134", "474.014, 348.31, 59.7358, 0.3422", "473.021, 348.828, 59.985, 0.4206", "471.942, 349.167, 60.181, 0.4464", "470.845, 349.254, 60.4531, 0.386", "469.723, 349.158, 60.7482, 0.3442", "468.613, 349.296, 61.0324, 0.3818", "467.48, 349.359, 61.2049, 0.3492", "466.814, 349.8, 61.5493, 0.3294", "465.716, 349.795, 61.6619, 0.324", "464.727, 349.539, 61.4914, 0.3914", "463.778, 349.333, 61.1111, 0.3686", "462.972, 349.394, 60.6421, 0.3588", "462.089, 349.46, 60.527, 0.41", "461.065, 349.926, 60.5329, 0.3976", "460.031, 350.396, 60.604, 0.4384", "458.983, 350.817, 60.7323, 0.4326", "457.97, 351.333, 60.9442, 0.3592", "456.943, 351.834, 61.1643, 0.3", "455.971, 352.302, 61.2816, 0.2746", "455.216, 352.977, 61.4407, 0.2746", "454.465, 353.723, 61.8495, 0.2744", "453.547, 354.21, 62.4868, 0.2744", "452.562, 354.666, 63.2475, 0.2742", "451.517, 354.926, 64.0954, 0.2736", "450.739, 354.48, 65.0941, 0.2728", "450.213, 354.294, 66.292, 0.2712", "449.599, 354.417, 67.5867, 0.2684", "448.551, 354.542, 68.6412, 0.2626", "447.501, 354.961, 69.4302, 0.2542", "447.456, 356.1, 70.0003, 0.2288", "447.411, 357.238, 70.6504, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "502.788, 314.752, 31.5434, 0.4878", "501.616, 314.123, 31.3135, 0.2288", "500.778, 313.41, 30.3198, 0.4626", "499.828, 312.871, 29.8936, 0.5264", "498.746, 312.611, 29.3958, 0.5246", "497.74, 312.243, 28.8039, 0.6478", "496.69, 311.862, 28.205, 0.7192", "495.782, 311.213, 27.6304, 0.6976", "494.866, 310.603, 27.0589, 0.7176", "493.819, 310.225, 26.5244, 0.6948", "492.729, 310.032, 26.0257, 0.7118", "491.691, 309.566, 25.2, 0.9152" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "502.788, 314.752, 31.5434, 0.4878", "503.734, 314.19, 31.001, 0.5974", "504.435, 313.602, 30.3229, 0.5386", "504.197, 312.707, 29.5918, 0.5572", "503.371, 312.005, 28.9024, 0.658", "502.698, 311.13, 28.2512, 0.5238", "502.265, 310.082, 27.7012, 0.4612", "502.195, 308.959, 27.2726, 0.3562", "502.335, 307.845, 26.7926, 0.3362", "502.7, 307.141, 26.0417, 0.3672", "503.188, 306.163, 25.2641, 0.322", "503.419, 305.124, 24.4479, 0.2796", "503.48, 304.071, 23.6188, 0.2288", "503.932, 303.16, 21.84, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_22", "dend_21", "dend_18", "dend_9", "dend_0", "dend_35", "dend_24", "dend_20", "dend_19", "dend_13", "dend_10", "dend_8", "dend_1", "dend_37", "dend_36", "dend_32", "dend_25", "dend_17", "dend_14", "dend_12", "dend_11", "dend_3", "dend_2", "dend_34", "dend_33", "dend_31", "dend_26", "dend_16", "dend_15", "dend_7", "dend_4", "dend_28", "dend_27", "dend_6", "dend_5", "dend_30", "dend_29" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20385",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "3.3131976"
  }, {
    "group" : "axon",
    "value" : "3.3131976"
  }, {
    "group" : "dend",
    "value" : "3.3131976"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "174.99332"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.7361472E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.11653411",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "9.178516E-10",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.46905828",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.9999418",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "9.550436E-6",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.009537196",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.2136266E-8",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "6.0649717E-7",
    "erev" : "-85.85056"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "1.3348732E-4",
    "erev" : "-85.85056"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0581139E-7",
    "erev" : "-85.85056"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "7.73403E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.006523921",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_472447460",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472447460

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_23
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_23, dend_22, dend_21, dend_18, dend_9, dend_0, dend_35, dend_24, dend_20, dend_19, dend_13, dend_10, dend_8, dend_1, dend_37, dend_36, dend_32, dend_25, dend_17, dend_14, dend_12, dend_11, dend_3, dend_2, dend_34, dend_33, dend_31, dend_26, dend_16, dend_15, dend_7, dend_4, dend_28, dend_27, dend_6, dend_5, dend_30, dend_29]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_20385, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_20385
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_0, dend_0, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472447460
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_23(0), soma_0(0.5)
    connect dend_22(0), soma_0(0.5)
    connect dend_21(0), soma_0(0.5)
    connect dend_18(0), soma_0(0.5)
    connect dend_9(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 491.351, 342.514, 53.2, 7.5446 ) }
    soma_0 { pt3dadd( 495.123, 342.514, 53.2, 7.5446 ) }
    soma_0 { pt3dadd( 498.895, 342.514, 53.2, 7.5446 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 495.123, 342.514, 53.2, 1.0 ) }
    axon_0 { pt3dadd( 500.964, 356.33, 53.2, 1.0 ) }
    axon_0 { pt3dadd( 506.806, 370.146, 53.2, 1.0 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 6/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 497.243, 338.808, 48.8261, 0.6864 ) }
    dend_23 { pt3dadd( 497.965, 336.975, 45.5165, 0.3452 ) }
    dend_23 { pt3dadd( 498.432, 336.069, 43.9958, 0.3958 ) }
    dend_23 { pt3dadd( 499.006, 335.213, 42.6311, 0.5464 ) }
    dend_23 { pt3dadd( 499.615, 334.38, 41.4462, 0.5504 ) }
    dend_23 { pt3dadd( 500.31, 333.563, 40.5093, 0.5198 ) }
    dend_23 { pt3dadd( 500.843, 332.561, 39.7508, 0.4208 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 13/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 497.281, 346.975, 50.8687, 0.2288 ) }
    dend_22 { pt3dadd( 497.266, 348.09, 51.0236, 0.3136 ) }
    dend_22 { pt3dadd( 497.098, 349.173, 51.0026, 0.3486 ) }
    dend_22 { pt3dadd( 497.129, 350.263, 51.0563, 0.4036 ) }
    dend_22 { pt3dadd( 497.31, 351.317, 51.3092, 0.5546 ) }
    dend_22 { pt3dadd( 497.386, 352.315, 51.7572, 0.5968 ) }
    dend_22 { pt3dadd( 497.316, 353.345, 52.306, 0.4548 ) }
    dend_22 { pt3dadd( 497.103, 354.438, 52.7853, 0.3452 ) }
    dend_22 { pt3dadd( 496.819, 355.536, 53.0804, 0.312 ) }
    dend_22 { pt3dadd( 496.448, 356.612, 53.2216, 0.3402 ) }
    dend_22 { pt3dadd( 496.059, 357.674, 53.1958, 0.4164 ) }
    dend_22 { pt3dadd( 495.466, 358.603, 53.0132, 0.439 ) }
    dend_22 { pt3dadd( 494.889, 359.574, 52.8052, 0.3712 ) }
    dend_22 { pt3dadd( 494.441, 360.623, 52.6288, 0.322 ) }
    dend_22 { pt3dadd( 493.774, 361.538, 52.5308, 0.316 ) }
    dend_22 { pt3dadd( 493.19, 362.494, 52.5451, 0.3474 ) }
    dend_22 { pt3dadd( 492.619, 363.465, 52.6389, 0.4294 ) }
    dend_22 { pt3dadd( 492.278, 364.498, 52.6221, 0.4644 ) }
    dend_22 { pt3dadd( 492.158, 365.589, 52.6686, 0.4128 ) }
    dend_22 { pt3dadd( 492.095, 366.449, 52.4485, 0.4258 ) }
    dend_22 { pt3dadd( 492.03, 367.553, 52.2491, 0.3784 ) }
    dend_22 { pt3dadd( 491.506, 368.401, 52.2738, 0.4082 ) }
    dend_22 { pt3dadd( 491.031, 369.354, 52.4135, 0.351 ) }
    dend_22 { pt3dadd( 490.902, 370.365, 52.3188, 0.3326 ) }
    dend_22 { pt3dadd( 490.307, 371.311, 52.1206, 0.3298 ) }
    dend_22 { pt3dadd( 489.947, 372.364, 51.8678, 0.4034 ) }
    dend_22 { pt3dadd( 489.75, 373.418, 51.506, 0.3844 ) }
    dend_22 { pt3dadd( 489.277, 374.434, 51.1445, 0.4188 ) }
    dend_22 { pt3dadd( 488.981, 375.491, 50.8234, 0.3718 ) }
    dend_22 { pt3dadd( 488.57, 376.488, 50.7184, 0.366 ) }
    dend_22 { pt3dadd( 488.483, 377.576, 50.7483, 0.4172 ) }
    dend_22 { pt3dadd( 488.225, 378.624, 50.6772, 0.4406 ) }
    dend_22 { pt3dadd( 487.726, 379.548, 50.5613, 0.3738 ) }
    dend_22 { pt3dadd( 487.167, 380.34, 50.652, 0.3268 ) }
    dend_22 { pt3dadd( 486.679, 381.251, 50.6436, 0.3252 ) }
    dend_22 { pt3dadd( 485.952, 382.023, 50.447, 0.3638 ) }
    dend_22 { pt3dadd( 485.812, 383.104, 50.244, 0.4624 ) }
    dend_22 { pt3dadd( 485.831, 384.248, 50.0931, 0.5138 ) }
    dend_22 { pt3dadd( 485.668, 385.362, 49.9111, 0.5608 ) }
    dend_22 { pt3dadd( 485.305, 386.346, 49.6216, 0.4256 ) }
    dend_22 { pt3dadd( 485.069, 387.392, 49.5986, 0.338 ) }
    dend_22 { pt3dadd( 484.843, 388.429, 49.791, 0.2988 ) }
    dend_22 { pt3dadd( 484.539, 389.531, 49.9778, 0.3142 ) }
    dend_22 { pt3dadd( 484.375, 390.663, 50.1376, 0.3734 ) }
    dend_22 { pt3dadd( 483.87, 391.69, 50.2704, 0.3338 ) }
    dend_22 { pt3dadd( 483.357, 392.706, 50.365, 0.3 ) }
    dend_22 { pt3dadd( 482.551, 393.504, 50.398, 0.2746 ) }
    dend_22 { pt3dadd( 482.086, 394.548, 50.4003, 0.2746 ) }
    dend_22 { pt3dadd( 481.767, 395.647, 50.4003, 0.2746 ) }
    dend_22 { pt3dadd( 481.482, 396.754, 50.4003, 0.2746 ) }
    dend_22 { pt3dadd( 481.093, 397.829, 50.4006, 0.2746 ) }
    dend_22 { pt3dadd( 480.668, 398.892, 50.4006, 0.2746 ) }
    dend_22 { pt3dadd( 480.256, 399.958, 50.4008, 0.2746 ) }
    dend_22 { pt3dadd( 479.874, 401.036, 50.4014, 0.2746 ) }
    dend_22 { pt3dadd( 479.401, 402.073, 50.4017, 0.2746 ) }
    dend_22 { pt3dadd( 479.15, 403.188, 50.4025, 0.2746 ) }
    dend_22 { pt3dadd( 478.993, 404.318, 50.4036, 0.2746 ) }
    dend_22 { pt3dadd( 478.993, 405.462, 50.405, 0.2746 ) }
    dend_22 { pt3dadd( 478.993, 406.606, 50.407, 0.2746 ) }
    dend_22 { pt3dadd( 479.005, 407.75, 50.4095, 0.2748 ) }
    dend_22 { pt3dadd( 479.124, 408.883, 50.4134, 0.275 ) }
    dend_22 { pt3dadd( 479.393, 409.989, 50.4188, 0.2752 ) }
    dend_22 { pt3dadd( 479.45, 411.131, 50.4263, 0.2758 ) }
    dend_22 { pt3dadd( 479.45, 412.275, 50.437, 0.2768 ) }
    dend_22 { pt3dadd( 479.45, 413.419, 50.4515, 0.279 ) }
    dend_22 { pt3dadd( 479.45, 414.563, 50.472, 0.2826 ) }
    dend_22 { pt3dadd( 479.45, 415.707, 50.5005, 0.289 ) }
    dend_22 { pt3dadd( 479.45, 416.851, 50.5408, 0.3024 ) }
    dend_22 { pt3dadd( 479.45, 417.995, 50.5974, 0.321 ) }
    dend_22 { pt3dadd( 479.471, 419.139, 50.6764, 0.386 ) }
    dend_22 { pt3dadd( 479.544, 420.279, 50.7828, 0.358 ) }
    dend_22 { pt3dadd( 479.565, 421.421, 50.932, 0.3398 ) }
    dend_22 { pt3dadd( 479.565, 422.552, 51.1636, 0.3736 ) }
    dend_22 { pt3dadd( 479.565, 423.673, 51.4716, 0.3346 ) }
    dend_22 { pt3dadd( 479.565, 424.764, 51.8736, 0.3012 ) }
    dend_22 { pt3dadd( 479.565, 425.864, 52.3023, 0.2766 ) }
    dend_22 { pt3dadd( 479.565, 427.008, 52.6411, 0.2782 ) }
    dend_22 { pt3dadd( 479.565, 428.152, 52.899, 0.2814 ) }
    dend_22 { pt3dadd( 479.507, 429.291, 53.0947, 0.2872 ) }
    dend_22 { pt3dadd( 479.347, 430.417, 53.2714, 0.2988 ) }
    dend_22 { pt3dadd( 479.139, 431.518, 53.4486, 0.3144 ) }
    dend_22 { pt3dadd( 478.769, 432.588, 53.613, 0.3738 ) }
    dend_22 { pt3dadd( 478.653, 433.717, 53.8017, 0.3346 ) }
    dend_22 { pt3dadd( 478.65, 434.856, 53.9927, 0.3014 ) }
    dend_22 { pt3dadd( 478.638, 435.998, 54.1668, 0.2768 ) }
    dend_22 { pt3dadd( 478.541, 437.134, 54.3015, 0.279 ) }
    dend_22 { pt3dadd( 478.327, 438.257, 54.4088, 0.2826 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 478.185, 439.39, 54.5056, 0.289 ) }
    dend_22 { pt3dadd( 478.072, 440.522, 54.6064, 0.3024 ) }
    dend_22 { pt3dadd( 477.722, 441.605, 54.7282, 0.321 ) }
    dend_22 { pt3dadd( 477.208, 442.627, 54.8803, 0.386 ) }
    dend_22 { pt3dadd( 476.85, 443.68, 55.092, 0.358 ) }
    dend_22 { pt3dadd( 476.819, 444.755, 55.4442, 0.3396 ) }
    dend_22 { pt3dadd( 476.819, 445.765, 55.9574, 0.3734 ) }
    dend_22 { pt3dadd( 476.819, 446.838, 56.4847, 0.3338 ) }
    dend_22 { pt3dadd( 476.819, 447.982, 56.8901, 0.3 ) }
    dend_22 { pt3dadd( 476.597, 449.072, 57.183, 0.2746 ) }
    dend_22 { pt3dadd( 476.056, 450.078, 57.3759, 0.2746 ) }
    dend_22 { pt3dadd( 475.612, 451.125, 57.4874, 0.2748 ) }
    dend_22 { pt3dadd( 475.291, 452.223, 57.5512, 0.2748 ) }
    dend_22 { pt3dadd( 474.895, 453.294, 57.6086, 0.2752 ) }
    dend_22 { pt3dadd( 474.409, 454.329, 57.682, 0.2758 ) }
    dend_22 { pt3dadd( 473.845, 455.304, 57.8194, 0.2766 ) }
    dend_22 { pt3dadd( 473.544, 456.363, 58.0051, 0.2782 ) }
    dend_22 { pt3dadd( 473.426, 457.499, 58.2028, 0.2814 ) }
    dend_22 { pt3dadd( 472.923, 458.479, 58.3965, 0.287 ) }
    dend_22 { pt3dadd( 472.33, 459.429, 58.6356, 0.2988 ) }
    dend_22 { pt3dadd( 471.802, 460.432, 58.8795, 0.3142 ) }
    dend_22 { pt3dadd( 471.675, 461.532, 59.1357, 0.3734 ) }
    dend_22 { pt3dadd( 471.472, 462.648, 59.3488, 0.3338 ) }
    dend_22 { pt3dadd( 470.951, 463.659, 59.5053, 0.3002 ) }
    dend_22 { pt3dadd( 470.364, 464.64, 59.6142, 0.2748 ) }
    dend_22 { pt3dadd( 469.635, 465.519, 59.6851, 0.2748 ) }
    dend_22 { pt3dadd( 469.017, 466.48, 59.736, 0.2752 ) }
    dend_22 { pt3dadd( 468.297, 467.369, 59.78, 0.2758 ) }
    dend_22 { pt3dadd( 467.282, 467.875, 59.8315, 0.2766 ) }
    dend_22 { pt3dadd( 466.515, 468.719, 59.8987, 0.2782 ) }
    dend_22 { pt3dadd( 465.769, 469.543, 60.0466, 0.2814 ) }
    dend_22 { pt3dadd( 465.185, 470.464, 60.1972, 0.287 ) }
    dend_22 { pt3dadd( 464.283, 471.114, 60.3621, 0.2988 ) }
    dend_22 { pt3dadd( 463.747, 472.113, 60.5049, 0.3142 ) }
    dend_22 { pt3dadd( 463.363, 473.189, 60.6304, 0.3734 ) }
    dend_22 { pt3dadd( 462.89, 474.229, 60.7524, 0.3338 ) }
    dend_22 { pt3dadd( 462.313, 475.203, 60.9073, 0.3 ) }
    dend_22 { pt3dadd( 461.93, 476.217, 61.0926, 0.2746 ) }
    dend_22 { pt3dadd( 461.853, 477.359, 61.2713, 0.2746 ) }
    dend_22 { pt3dadd( 461.554, 478.44, 61.4653, 0.2746 ) }
    dend_22 { pt3dadd( 461.038, 479.422, 61.7364, 0.2746 ) }
    dend_22 { pt3dadd( 460.483, 480.37, 62.0847, 0.2746 ) }
    dend_22 { pt3dadd( 459.957, 481.371, 62.3991, 0.2744 ) }
    dend_22 { pt3dadd( 459.412, 482.357, 62.6984, 0.2744 ) }
    dend_22 { pt3dadd( 458.852, 483.345, 62.9457, 0.2742 ) }
    dend_22 { pt3dadd( 457.935, 483.941, 63.112, 0.2736 ) }
    dend_22 { pt3dadd( 456.884, 484.39, 63.2075, 0.2728 ) }
    dend_22 { pt3dadd( 455.764, 484.576, 63.2537, 0.2712 ) }
    dend_22 { pt3dadd( 454.634, 484.747, 63.275, 0.2684 ) }
    dend_22 { pt3dadd( 453.771, 485.445, 63.28, 0.2626 ) }
    dend_22 { pt3dadd( 452.741, 485.911, 63.28, 0.2542 ) }
    dend_22 { pt3dadd( 451.775, 485.399, 63.28, 0.2288 ) }
    dend_22 { pt3dadd( 451.766, 484.255, 63.28, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 53/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 497.097, 346.768, 54.4076, 0.2288 ) }
    dend_21 { pt3dadd( 497.576, 347.801, 54.5437, 0.2746 ) }
    dend_21 { pt3dadd( 498.054, 348.833, 54.616, 0.2746 ) }
    dend_21 { pt3dadd( 498.578, 349.843, 54.6787, 0.2748 ) }
    dend_21 { pt3dadd( 499.278, 350.698, 54.6543, 0.2748 ) }
    dend_21 { pt3dadd( 500.018, 351.487, 54.5625, 0.275 ) }
    dend_21 { pt3dadd( 500.616, 352.305, 54.3768, 0.2754 ) }
    dend_21 { pt3dadd( 501.302, 353.064, 54.1873, 0.2762 ) }
    dend_21 { pt3dadd( 501.628, 354.108, 54.112, 0.2778 ) }
    dend_21 { pt3dadd( 502.42, 354.88, 54.1318, 0.2802 ) }
    dend_21 { pt3dadd( 503.206, 355.68, 54.2139, 0.2854 ) }
    dend_21 { pt3dadd( 503.871, 356.561, 54.201, 0.2942 ) }
    dend_21 { pt3dadd( 504.545, 357.245, 53.9969, 0.312 ) }
    dend_21 { pt3dadd( 505.416, 357.978, 53.8423, 0.34 ) }
    dend_21 { pt3dadd( 506.313, 358.676, 53.6861, 0.416 ) }
    dend_21 { pt3dadd( 507.021, 359.502, 53.6404, 0.4384 ) }
    dend_21 { pt3dadd( 507.636, 360.29, 53.7449, 0.37 ) }
    dend_21 { pt3dadd( 508.549, 360.942, 53.8168, 0.3196 ) }
    dend_21 { pt3dadd( 509.155, 361.872, 53.8882, 0.3118 ) }
    dend_21 { pt3dadd( 509.511, 362.812, 53.8552, 0.3396 ) }
    dend_21 { pt3dadd( 509.842, 363.755, 53.8149, 0.4152 ) }
    dend_21 { pt3dadd( 510.15, 364.834, 53.8348, 0.4368 ) }
    dend_21 { pt3dadd( 510.428, 365.938, 53.8507, 0.367 ) }
    dend_21 { pt3dadd( 510.652, 367.056, 53.9151, 0.3142 ) }
    dend_21 { pt3dadd( 510.692, 368.002, 54.2242, 0.3006 ) }
    dend_21 { pt3dadd( 510.71, 369.086, 54.4785, 0.3236 ) }
    dend_21 { pt3dadd( 510.799, 369.826, 54.959, 0.3624 ) }
    dend_21 { pt3dadd( 511.039, 370.693, 55.4089, 0.4526 ) }
    dend_21 { pt3dadd( 511.254, 371.667, 55.5078, 0.5316 ) }
    dend_21 { pt3dadd( 511.63, 372.608, 55.3504, 0.4188 ) }
    dend_21 { pt3dadd( 511.827, 373.547, 54.959, 0.3254 ) }
    dend_21 { pt3dadd( 512.147, 374.572, 54.5706, 0.2746 ) }
    dend_21 { pt3dadd( 512.275, 375.438, 54.4561, 0.2746 ) }
    dend_21 { pt3dadd( 512.615, 376.004, 54.6918, 0.2746 ) }
    dend_21 { pt3dadd( 513.123, 376.766, 55.0911, 0.2746 ) }
    dend_21 { pt3dadd( 513.373, 377.795, 55.2938, 0.2746 ) }
    dend_21 { pt3dadd( 513.594, 378.71, 55.0967, 0.2746 ) }
    dend_21 { pt3dadd( 513.722, 379.434, 54.4701, 0.2746 ) }
    dend_21 { pt3dadd( 513.806, 380.11, 53.5077, 0.2746 ) }
    dend_21 { pt3dadd( 513.926, 381.117, 52.5748, 0.2746 ) }
    dend_21 { pt3dadd( 514.06, 382.252, 51.8689, 0.2746 ) }
    dend_21 { pt3dadd( 514.233, 383.382, 51.4276, 0.2746 ) }
    dend_21 { pt3dadd( 514.509, 384.491, 51.2324, 0.2746 ) }
    dend_21 { pt3dadd( 514.814, 385.594, 51.2302, 0.2746 ) }
    dend_21 { pt3dadd( 515.032, 386.716, 51.3506, 0.2746 ) }
    dend_21 { pt3dadd( 515.167, 387.852, 51.5301, 0.2746 ) }
    dend_21 { pt3dadd( 515.283, 388.989, 51.7555, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_21 { pt3dadd( 515.159, 390.064, 52.1452, 0.2746 ) }
    dend_21 { pt3dadd( 514.966, 391.12, 52.6966, 0.2746 ) }
    dend_21 { pt3dadd( 514.773, 392.176, 53.3627, 0.2746 ) }
    dend_21 { pt3dadd( 514.579, 393.232, 54.0977, 0.2746 ) }
    dend_21 { pt3dadd( 514.385, 394.288, 54.8596, 0.2746 ) }
    dend_21 { pt3dadd( 514.191, 395.346, 55.6077, 0.2746 ) }
    dend_21 { pt3dadd( 513.985, 396.456, 56.2114, 0.2746 ) }
    dend_21 { pt3dadd( 513.776, 397.58, 56.6726, 0.2746 ) }
    dend_21 { pt3dadd( 513.566, 398.705, 57.0413, 0.2746 ) }
    dend_21 { pt3dadd( 513.356, 399.828, 57.3661, 0.2746 ) }
    dend_21 { pt3dadd( 513.527, 400.941, 57.687, 0.2746 ) }
    dend_21 { pt3dadd( 513.862, 402.035, 58.0404, 0.2746 ) }
    dend_21 { pt3dadd( 514.13, 403.064, 58.5802, 0.2746 ) }
    dend_21 { pt3dadd( 514.305, 403.968, 59.3662, 0.2746 ) }
    dend_21 { pt3dadd( 514.466, 404.851, 60.324, 0.2746 ) }
    dend_21 { pt3dadd( 514.627, 405.734, 61.3659, 0.2744 ) }
    dend_21 { pt3dadd( 514.569, 406.764, 62.3277, 0.2744 ) }
    dend_21 { pt3dadd( 514.194, 407.835, 63.0132, 0.2742 ) }
    dend_21 { pt3dadd( 513.797, 408.908, 63.4211, 0.2736 ) }
    dend_21 { pt3dadd( 513.399, 409.98, 63.5916, 0.2728 ) }
    dend_21 { pt3dadd( 513.002, 411.053, 63.5664, 0.2712 ) }
    dend_21 { pt3dadd( 512.879, 412.182, 63.376, 0.2684 ) }
    dend_21 { pt3dadd( 513.343, 413.184, 63.0246, 0.2626 ) }
    dend_21 { pt3dadd( 513.806, 414.185, 62.5884, 0.2542 ) }
    dend_21 { pt3dadd( 514.269, 415.186, 62.1104, 0.2288 ) }
    dend_21 { pt3dadd( 514.732, 416.187, 61.0201, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 26/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 498.8, 340.539, 51.1944, 0.2288 ) }
    dend_18 { pt3dadd( 499.925, 340.382, 51.9932, 0.4284 ) }
    dend_18 { pt3dadd( 500.971, 340.069, 52.3524, 0.4248 ) }
    dend_18 { pt3dadd( 501.876, 339.431, 52.815, 0.5198 ) }
    dend_18 { pt3dadd( 502.751, 338.721, 53.3243, 0.434 ) }
    dend_18 { pt3dadd( 503.731, 338.176, 53.8675, 0.4026 ) }
    dend_18 { pt3dadd( 504.787, 337.844, 54.4757, 0.4096 ) }
    dend_18 { pt3dadd( 505.85, 337.539, 55.1295, 0.5656 ) }
    dend_18 { pt3dadd( 506.881, 337.118, 55.8023, 0.617 ) }
    dend_18 { pt3dadd( 507.804, 336.539, 56.5155, 0.4936 ) }
    dend_18 { pt3dadd( 508.522, 335.78, 57.2905, 0.413 ) }
    dend_18 { pt3dadd( 509.066, 334.924, 58.1277, 0.4566 ) }
    dend_18 { pt3dadd( 509.66, 334.109, 58.9882, 0.5154 ) }
    dend_18 { pt3dadd( 510.424, 333.362, 59.7332, 0.5046 ) }
    dend_18 { pt3dadd( 511.354, 332.708, 60.2518, 0.6096 ) }
    dend_18 { pt3dadd( 512.315, 332.107, 60.6486, 0.652 ) }
    dend_18 { pt3dadd( 513.192, 331.439, 61.0375, 0.5546 ) }
    dend_18 { pt3dadd( 514.053, 330.742, 61.4216, 0.5452 ) }
    dend_18 { pt3dadd( 515.054, 330.281, 61.6955, 0.6098 ) }
    dend_18 { pt3dadd( 516.159, 330.216, 61.9296, 0.561 ) }
    dend_18 { pt3dadd( 517.231, 330.527, 62.2171, 0.6012 ) }
    dend_18 { pt3dadd( 518.188, 330.705, 62.6452, 0.7278 ) }
    dend_18 { pt3dadd( 519.27, 330.786, 63.086, 0.7106 ) }
    dend_18 { pt3dadd( 520.401, 330.655, 63.3822, 0.5288 ) }
    dend_18 { pt3dadd( 521.537, 330.73, 63.6345, 0.4618 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 494.015, 339.259, 47.9581, 0.2288 ) }
    dend_9 { pt3dadd( 493.701, 338.339, 47.2606, 0.2962 ) }
    dend_9 { pt3dadd( 492.928, 337.497, 47.0252, 0.3158 ) }
    dend_9 { pt3dadd( 492.153, 336.655, 46.8675, 0.3454 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 492.283, 344.918, 52.3396, 0.4576 ) }
    dend_0 { pt3dadd( 491.569, 345.717, 53.2764, 0.4122 ) }
    dend_0 { pt3dadd( 490.988, 346.607, 53.7026, 0.3952 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 58/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 506.806, 370.146, 53.2, 1.0 ) }
    axon_1 { pt3dadd( 512.647, 383.962, 53.2, 1.0 ) }
    axon_1 { pt3dadd( 518.488, 397.778, 53.2, 1.0 ) }
    // Section: dend_35, id: dend_35, parent: dend_23 (entry count 61/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 500.843, 332.561, 39.7508, 0.4208 ) }
    dend_35 { pt3dadd( 501.892, 332.43, 40.4426, 0.2288 ) }
    dend_35 { pt3dadd( 502.956, 332.054, 40.7974, 0.4772 ) }
    dend_35 { pt3dadd( 503.954, 331.659, 41.0208, 0.5424 ) }
    dend_35 { pt3dadd( 505.009, 331.263, 41.1502, 0.6084 ) }
    dend_35 { pt3dadd( 506.038, 331.024, 41.3837, 0.5392 ) }
    dend_35 { pt3dadd( 507.168, 330.905, 41.5388, 0.426 ) }
    dend_35 { pt3dadd( 508.233, 330.605, 41.5047, 0.3724 ) }
    dend_35 { pt3dadd( 509.311, 330.347, 41.3462, 0.429 ) }
    dend_35 { pt3dadd( 510.43, 330.329, 41.1214, 0.4636 ) }
    dend_35 { pt3dadd( 511.556, 330.131, 40.9335, 0.4112 ) }
    dend_35 { pt3dadd( 512.645, 329.863, 40.7747, 0.422 ) }
    dend_35 { pt3dadd( 513.457, 329.126, 40.6532, 0.376 ) }
    dend_35 { pt3dadd( 514.037, 328.185, 40.514, 0.3804 ) }
    dend_35 { pt3dadd( 514.893, 327.635, 40.3032, 0.4126 ) }
    dend_35 { pt3dadd( 515.991, 327.582, 40.1282, 0.5844 ) }
    dend_35 { pt3dadd( 517.123, 327.731, 40.0946, 0.5874 ) }
    dend_35 { pt3dadd( 518.249, 327.88, 40.2273, 0.752 ) }
    dend_35 { pt3dadd( 519.351, 327.913, 40.5712, 0.7406 ) }
    dend_35 { pt3dadd( 520.45, 327.943, 41.0838, 0.6582 ) }
    dend_35 { pt3dadd( 521.545, 327.865, 41.7099, 0.5714 ) }
    dend_35 { pt3dadd( 522.419, 327.731, 42.5314, 0.5504 ) }
    dend_35 { pt3dadd( 523.326, 327.531, 43.4389, 0.516 ) }
    dend_35 { pt3dadd( 524.312, 327.114, 44.2848, 0.6614 ) }
    dend_35 { pt3dadd( 525.23, 326.471, 44.9302, 0.5994 ) }
    dend_35 { pt3dadd( 526.143, 325.807, 45.425, 0.4946 ) }
    dend_35 { pt3dadd( 527.212, 325.681, 45.8097, 0.478 ) }
    dend_35 { pt3dadd( 528.127, 325.185, 45.9452, 0.502 ) }
    dend_35 { pt3dadd( 529.221, 325.001, 46.0396, 0.5082 ) }
    dend_35 { pt3dadd( 530.352, 324.906, 46.0807, 0.477 ) }
    dend_35 { pt3dadd( 531.484, 325.029, 46.1261, 0.3956 ) }
    dend_35 { pt3dadd( 532.579, 325.032, 46.3162, 0.362 ) }
    dend_35 { pt3dadd( 533.655, 324.811, 46.6141, 0.4158 ) }
    dend_35 { pt3dadd( 534.611, 324.427, 47.0526, 0.4082 ) }
    dend_35 { pt3dadd( 535.589, 323.873, 47.3337, 0.4582 ) }
    dend_35 { pt3dadd( 536.4, 323.075, 47.5238, 0.4692 ) }
    dend_35 { pt3dadd( 537.445, 322.622, 47.649, 0.4288 ) }
    dend_35 { pt3dadd( 538.388, 321.978, 47.654, 0.4196 ) }
    dend_35 { pt3dadd( 539.391, 321.439, 47.6235, 0.542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_35 { pt3dadd( 540.451, 321.03, 47.558, 0.5486 ) }
    dend_35 { pt3dadd( 541.455, 320.617, 47.3444, 0.4864 ) }
    dend_35 { pt3dadd( 542.553, 320.588, 47.0238, 0.5034 ) }
    dend_35 { pt3dadd( 543.679, 320.416, 46.7138, 0.5796 ) }
    dend_35 { pt3dadd( 544.768, 320.302, 46.3658, 0.5034 ) }
    dend_35 { pt3dadd( 545.794, 319.974, 46.186, 0.5038 ) }
    dend_35 { pt3dadd( 546.689, 319.316, 45.9791, 0.5014 ) }
    dend_35 { pt3dadd( 547.57, 318.78, 45.6758, 0.513 ) }
    dend_35 { pt3dadd( 548.625, 318.54, 45.4034, 0.4562 ) }
    dend_35 { pt3dadd( 549.74, 318.532, 45.3026, 0.502 ) }
    dend_35 { pt3dadd( 550.834, 318.301, 45.3407, 0.5414 ) }
    dend_35 { pt3dadd( 551.93, 317.994, 45.4177, 0.6066 ) }
    dend_35 { pt3dadd( 553.004, 317.625, 45.5263, 0.5358 ) }
    dend_35 { pt3dadd( 554.004, 317.122, 45.6392, 0.4196 ) }
    dend_35 { pt3dadd( 554.877, 316.392, 45.6652, 0.3596 ) }
    dend_35 { pt3dadd( 555.712, 315.627, 45.5731, 0.4102 ) }
    dend_35 { pt3dadd( 556.688, 315.171, 45.3099, 0.4046 ) }
    dend_35 { pt3dadd( 557.732, 315.059, 44.8507, 0.42 ) }
    dend_35 { pt3dadd( 558.694, 314.848, 44.1913, 0.5502 ) }
    dend_35 { pt3dadd( 559.575, 314.292, 43.4792, 0.5278 ) }
    dend_35 { pt3dadd( 560.289, 313.418, 42.8285, 0.623 ) }
    dend_35 { pt3dadd( 560.936, 312.485, 42.3018, 0.5932 ) }
    dend_35 { pt3dadd( 561.564, 311.54, 41.8625, 0.6244 ) }
    dend_35 { pt3dadd( 562.053, 310.57, 41.3762, 0.4922 ) }
    dend_35 { pt3dadd( 562.429, 309.542, 40.8419, 0.4816 ) }
    dend_35 { pt3dadd( 562.818, 308.475, 40.3231, 0.4668 ) }
    dend_35 { pt3dadd( 563.23, 307.44, 39.7597, 0.4174 ) }
    dend_35 { pt3dadd( 563.625, 306.563, 39.0309, 0.4328 ) }
    dend_35 { pt3dadd( 563.72, 305.561, 38.2472, 0.3976 ) }
    dend_35 { pt3dadd( 563.962, 304.472, 37.557, 0.415 ) }
    dend_35 { pt3dadd( 564.634, 303.597, 36.9368, 0.5036 ) }
    dend_35 { pt3dadd( 565.413, 302.836, 36.3297, 0.6218 ) }
    dend_35 { pt3dadd( 566.405, 302.451, 35.7532, 0.6084 ) }
    dend_35 { pt3dadd( 567.53, 302.468, 35.3186, 0.5684 ) }
    dend_35 { pt3dadd( 568.669, 302.392, 35.0078, 0.5676 ) }
    dend_35 { pt3dadd( 569.786, 302.269, 34.8166, 0.438 ) }
    dend_35 { pt3dadd( 570.92, 302.355, 34.6408, 0.3624 ) }
    dend_35 { pt3dadd( 571.991, 302.655, 34.356, 0.3378 ) }
    dend_35 { pt3dadd( 573.025, 302.254, 33.9856, 0.4182 ) }
    dend_35 { pt3dadd( 573.737, 301.538, 33.411, 0.4114 ) }
    dend_35 { pt3dadd( 574.558, 301.065, 32.6561, 0.4714 ) }
    dend_35 { pt3dadd( 575.674, 300.879, 31.9701, 0.4588 ) }
    dend_35 { pt3dadd( 576.79, 300.985, 31.3429, 0.577 ) }
    dend_35 { pt3dadd( 577.924, 300.974, 30.8143, 0.5676 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 44/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 500.843, 332.561, 39.7508, 0.4208 ) }
    dend_24 { pt3dadd( 500.81, 331.006, 39.1625, 0.4408 ) }
    dend_24 { pt3dadd( 500.888, 329.943, 38.5708, 0.4062 ) }
    dend_24 { pt3dadd( 500.826, 328.887, 37.9702, 0.4614 ) }
    dend_24 { pt3dadd( 501.288, 327.87, 37.4399, 0.4396 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 521.537, 330.73, 63.6345, 0.4618 ) }
    dend_20 { pt3dadd( 521.956, 330.515, 63.7274, 0.3992 ) }
    dend_20 { pt3dadd( 522.898, 330.028, 63.6087, 0.4414 ) }
    dend_20 { pt3dadd( 523.825, 329.748, 63.6213, 0.4384 ) }
    dend_20 { pt3dadd( 524.755, 329.209, 63.6969, 0.3698 ) }
    dend_20 { pt3dadd( 525.829, 328.938, 63.8434, 0.3192 ) }
    dend_20 { pt3dadd( 526.836, 328.78, 63.8408, 0.3112 ) }
    dend_20 { pt3dadd( 527.872, 328.39, 63.891, 0.3382 ) }
    dend_20 { pt3dadd( 528.883, 327.884, 64.0268, 0.413 ) }
    dend_20 { pt3dadd( 529.932, 327.652, 64.262, 0.4326 ) }
    dend_20 { pt3dadd( 530.928, 327.346, 64.6024, 0.3592 ) }
    dend_20 { pt3dadd( 532.06, 327.217, 64.8659, 0.3 ) }
    dend_20 { pt3dadd( 533.149, 327.234, 64.9468, 0.2746 ) }
    dend_20 { pt3dadd( 534.035, 327.455, 64.7685, 0.2746 ) }
    dend_20 { pt3dadd( 535.092, 327.664, 64.6898, 0.2746 ) }
    dend_20 { pt3dadd( 536.114, 327.756, 64.5442, 0.2746 ) }
    dend_20 { pt3dadd( 536.99, 327.077, 64.5313, 0.2746 ) }
    dend_20 { pt3dadd( 537.885, 326.399, 64.5775, 0.2746 ) }
    dend_20 { pt3dadd( 538.945, 326.072, 64.5744, 0.2746 ) }
    dend_20 { pt3dadd( 540.031, 326.007, 64.5568, 0.2746 ) }
    dend_20 { pt3dadd( 541.12, 325.894, 64.643, 0.2746 ) }
    dend_20 { pt3dadd( 542.247, 325.707, 64.7382, 0.2746 ) }
    dend_20 { pt3dadd( 543.378, 325.587, 64.8281, 0.2746 ) }
    dend_20 { pt3dadd( 544.518, 325.588, 64.8934, 0.2746 ) }
    dend_20 { pt3dadd( 545.65, 325.522, 64.9883, 0.2746 ) }
    dend_20 { pt3dadd( 546.736, 325.273, 65.1764, 0.2746 ) }
    dend_20 { pt3dadd( 547.767, 324.841, 65.4021, 0.2748 ) }
    dend_20 { pt3dadd( 548.84, 324.523, 65.627, 0.2748 ) }
    dend_20 { pt3dadd( 549.971, 324.504, 65.8339, 0.2752 ) }
    dend_20 { pt3dadd( 551.096, 324.482, 66.0338, 0.2758 ) }
    dend_20 { pt3dadd( 552.162, 324.319, 66.3228, 0.2766 ) }
    dend_20 { pt3dadd( 553.201, 324.282, 66.5417, 0.2782 ) }
    dend_20 { pt3dadd( 554.29, 324.323, 66.6014, 0.2814 ) }
    dend_20 { pt3dadd( 555.415, 324.301, 66.6658, 0.2872 ) }
    dend_20 { pt3dadd( 556.505, 324.475, 66.8368, 0.2988 ) }
    dend_20 { pt3dadd( 557.485, 324.957, 67.1104, 0.3144 ) }
    dend_20 { pt3dadd( 558.484, 325.477, 67.3988, 0.374 ) }
    dend_20 { pt3dadd( 559.573, 325.471, 67.6446, 0.335 ) }
    dend_20 { pt3dadd( 560.646, 325.309, 67.9605, 0.302 ) }
    dend_20 { pt3dadd( 561.653, 325.698, 68.2724, 0.2782 ) }
    dend_20 { pt3dadd( 562.587, 326.349, 68.483, 0.2814 ) }
    dend_20 { pt3dadd( 563.604, 326.864, 68.6132, 0.287 ) }
    dend_20 { pt3dadd( 564.664, 327.261, 68.7434, 0.2988 ) }
    dend_20 { pt3dadd( 565.619, 327.88, 68.7971, 0.3142 ) }
    dend_20 { pt3dadd( 566.587, 328.441, 68.7162, 0.3736 ) }
    dend_20 { pt3dadd( 567.712, 328.507, 68.6546, 0.334 ) }
    dend_20 { pt3dadd( 568.812, 328.799, 68.6311, 0.3004 ) }
    dend_20 { pt3dadd( 569.921, 329.003, 68.5404, 0.2752 ) }
    dend_20 { pt3dadd( 571.054, 329.028, 68.4194, 0.2758 ) }
    dend_20 { pt3dadd( 572.149, 329.328, 68.3183, 0.2768 ) }
    dend_20 { pt3dadd( 573.083, 329.982, 68.2746, 0.279 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_20 { pt3dadd( 574.144, 330.352, 68.3463, 0.2826 ) }
    dend_20 { pt3dadd( 575.243, 330.645, 68.4754, 0.289 ) }
    dend_20 { pt3dadd( 576.305, 331.056, 68.6216, 0.3024 ) }
    dend_20 { pt3dadd( 577.379, 331.259, 68.8638, 0.321 ) }
    dend_20 { pt3dadd( 578.437, 331.634, 68.987, 0.386 ) }
    dend_20 { pt3dadd( 579.479, 332.093, 69.0752, 0.358 ) }
    dend_20 { pt3dadd( 580.606, 332.275, 69.1636, 0.3396 ) }
    dend_20 { pt3dadd( 581.733, 332.361, 69.309, 0.3734 ) }
    dend_20 { pt3dadd( 582.835, 332.636, 69.4879, 0.3338 ) }
    dend_20 { pt3dadd( 583.912, 332.951, 69.7208, 0.3 ) }
    dend_20 { pt3dadd( 584.999, 333.191, 69.9849, 0.2746 ) }
    dend_20 { pt3dadd( 586.128, 333.034, 70.1845, 0.2746 ) }
    dend_20 { pt3dadd( 587.175, 332.604, 70.3094, 0.2746 ) }
    dend_20 { pt3dadd( 588.094, 331.927, 70.3648, 0.2746 ) }
    dend_20 { pt3dadd( 589.105, 331.395, 70.3618, 0.2746 ) }
    dend_20 { pt3dadd( 590.17, 330.978, 70.3038, 0.2746 ) }
    dend_20 { pt3dadd( 591.257, 330.622, 70.2019, 0.2746 ) }
    dend_20 { pt3dadd( 592.324, 330.213, 70.0616, 0.2746 ) }
    dend_20 { pt3dadd( 593.34, 329.69, 69.8804, 0.2746 ) }
    dend_20 { pt3dadd( 594.342, 329.183, 69.61, 0.2746 ) }
    dend_20 { pt3dadd( 594.938, 328.526, 69.1152, 0.2746 ) }
    dend_20 { pt3dadd( 595.937, 328.235, 68.6162, 0.2746 ) }
    dend_20 { pt3dadd( 596.71, 327.598, 68.0414, 0.2746 ) }
    dend_20 { pt3dadd( 596.768, 326.475, 67.4932, 0.2746 ) }
    dend_20 { pt3dadd( 597.349, 325.663, 66.9477, 0.2746 ) }
    dend_20 { pt3dadd( 598.457, 325.512, 66.4297, 0.2746 ) }
    dend_20 { pt3dadd( 599.448, 325.121, 65.9683, 0.2746 ) }
    dend_20 { pt3dadd( 600.241, 324.354, 65.5172, 0.2746 ) }
    dend_20 { pt3dadd( 601.237, 323.948, 65.0885, 0.2746 ) }
    dend_20 { pt3dadd( 602.373, 323.866, 64.7497, 0.2746 ) }
    dend_20 { pt3dadd( 603.515, 323.918, 64.5061, 0.2746 ) }
    dend_20 { pt3dadd( 604.656, 323.977, 64.3289, 0.2746 ) }
    dend_20 { pt3dadd( 605.799, 323.981, 64.1911, 0.2746 ) }
    dend_20 { pt3dadd( 606.943, 323.981, 64.0721, 0.2746 ) }
    dend_20 { pt3dadd( 608.088, 323.981, 63.9512, 0.2746 ) }
    dend_20 { pt3dadd( 609.205, 323.998, 63.7532, 0.2746 ) }
    dend_20 { pt3dadd( 610.267, 324.206, 63.4388, 0.2746 ) }
    dend_20 { pt3dadd( 611.279, 324.677, 63.089, 0.2746 ) }
    dend_20 { pt3dadd( 612.294, 325.197, 62.771, 0.2746 ) }
    dend_20 { pt3dadd( 613.388, 325.444, 62.5047, 0.2746 ) }
    dend_20 { pt3dadd( 614.531, 325.438, 62.2866, 0.2746 ) }
    dend_20 { pt3dadd( 615.653, 325.251, 62.1054, 0.2746 ) }
    dend_20 { pt3dadd( 616.777, 325.06, 61.9399, 0.2746 ) }
    dend_20 { pt3dadd( 617.911, 325.01, 61.7252, 0.2748 ) }
    dend_20 { pt3dadd( 618.976, 324.838, 61.3726, 0.275 ) }
    dend_20 { pt3dadd( 619.976, 324.363, 60.9675, 0.2752 ) }
    dend_20 { pt3dadd( 621.024, 323.911, 60.566, 0.2758 ) }
    dend_20 { pt3dadd( 622.141, 323.741, 60.1311, 0.2768 ) }
    dend_20 { pt3dadd( 623.216, 323.492, 59.5888, 0.2786 ) }
    dend_20 { pt3dadd( 624.257, 323.154, 58.919, 0.2824 ) }
    dend_20 { pt3dadd( 625.36, 323.066, 58.1703, 0.289 ) }
    dend_20 { pt3dadd( 626.43, 323.029, 57.2855, 0.3012 ) }
    dend_20 { pt3dadd( 627.477, 322.965, 56.2674, 0.3242 ) }
    dend_20 { pt3dadd( 628.438, 322.951, 55.102, 0.3636 ) }
    dend_20 { pt3dadd( 629.013, 322.951, 53.7141, 0.4546 ) }
    dend_20 { pt3dadd( 630.031, 322.971, 52.3499, 0.5354 ) }
    dend_20 { pt3dadd( 631.026, 323.481, 51.1227, 0.4256 ) }
    dend_20 { pt3dadd( 632.003, 323.78, 49.9624, 0.3384 ) }
    dend_20 { pt3dadd( 632.174, 324.702, 48.7659, 0.2986 ) }
    dend_20 { pt3dadd( 632.351, 325.585, 47.5714, 0.32 ) }
    dend_20 { pt3dadd( 633.104, 326.19, 46.3977, 0.3544 ) }
    dend_20 { pt3dadd( 633.987, 326.809, 45.3093, 0.4438 ) }
    dend_20 { pt3dadd( 634.734, 327.44, 44.2588, 0.4848 ) }
    dend_20 { pt3dadd( 635.434, 328.14, 43.304, 0.4824 ) }
    dend_20 { pt3dadd( 636.446, 328.328, 42.434, 0.3988 ) }
    dend_20 { pt3dadd( 637.504, 328.328, 41.6466, 0.3988 ) }
    dend_20 { pt3dadd( 638.598, 328.385, 40.9657, 0.334 ) }
    dend_20 { pt3dadd( 639.68, 328.675, 40.4541, 0.3002 ) }
    dend_20 { pt3dadd( 640.789, 328.947, 40.1234, 0.2748 ) }
    dend_20 { pt3dadd( 641.924, 329.083, 39.93, 0.275 ) }
    dend_20 { pt3dadd( 643.066, 329.124, 39.8381, 0.2754 ) }
    dend_20 { pt3dadd( 644.206, 329.216, 39.8126, 0.2762 ) }
    dend_20 { pt3dadd( 645.318, 329.471, 39.8227, 0.2776 ) }
    dend_20 { pt3dadd( 646.449, 329.578, 39.8476, 0.2802 ) }
    dend_20 { pt3dadd( 647.592, 329.617, 39.8829, 0.285 ) }
    dend_20 { pt3dadd( 648.735, 329.681, 39.9322, 0.2938 ) }
    dend_20 { pt3dadd( 649.878, 329.705, 39.9988, 0.3112 ) }
    dend_20 { pt3dadd( 651.006, 329.87, 40.0848, 0.3384 ) }
    dend_20 { pt3dadd( 652.126, 330.014, 40.245, 0.413 ) }
    dend_20 { pt3dadd( 652.953, 330.719, 40.4289, 0.4328 ) }
    dend_20 { pt3dadd( 653.478, 331.706, 40.6706, 0.3596 ) }
    dend_20 { pt3dadd( 654.035, 332.674, 40.9637, 0.3006 ) }
    dend_20 { pt3dadd( 654.85, 333.469, 41.2138, 0.2758 ) }
    dend_20 { pt3dadd( 655.833, 334.042, 41.4364, 0.2766 ) }
    dend_20 { pt3dadd( 656.813, 334.633, 41.5946, 0.2784 ) }
    dend_20 { pt3dadd( 657.936, 334.827, 41.7026, 0.2818 ) }
    dend_20 { pt3dadd( 659.021, 335.189, 41.7718, 0.288 ) }
    dend_20 { pt3dadd( 659.993, 335.789, 41.8211, 0.3006 ) }
    dend_20 { pt3dadd( 661.119, 335.993, 41.8715, 0.3178 ) }
    dend_20 { pt3dadd( 662.252, 336.143, 41.9322, 0.38 ) }
    dend_20 { pt3dadd( 663.354, 336.448, 42.0171, 0.3464 ) }
    dend_20 { pt3dadd( 664.397, 336.908, 42.1361, 0.3228 ) }
    dend_20 { pt3dadd( 665.541, 336.908, 42.3013, 0.3178 ) }
    dend_20 { pt3dadd( 666.685, 336.911, 42.525, 0.3508 ) }
    dend_20 { pt3dadd( 667.817, 337.004, 42.8557, 0.4358 ) }
    dend_20 { pt3dadd( 668.881, 337.367, 43.3188, 0.4762 ) }
    dend_20 { pt3dadd( 669.883, 337.721, 43.9704, 0.4354 ) }
    dend_20 { pt3dadd( 670.845, 338.131, 44.7779, 0.4626 ) }
    dend_20 { pt3dadd( 671.815, 338.59, 45.6599, 0.4724 ) }
    dend_20 { pt3dadd( 672.825, 338.778, 46.6172, 0.4582 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_20 { pt3dadd( 673.77, 338.94, 47.6476, 0.3596 ) }
    dend_20 { pt3dadd( 674.8, 339.082, 48.6363, 0.3006 ) }
    dend_20 { pt3dadd( 675.881, 339.04, 49.5284, 0.2758 ) }
    dend_20 { pt3dadd( 676.964, 338.963, 50.3149, 0.2766 ) }
    dend_20 { pt3dadd( 678.09, 338.838, 50.9264, 0.2784 ) }
    dend_20 { pt3dadd( 679.174, 338.492, 51.3898, 0.2818 ) }
    dend_20 { pt3dadd( 680.256, 338.15, 51.76, 0.2882 ) }
    dend_20 { pt3dadd( 681.379, 337.949, 52.0915, 0.2994 ) }
    dend_20 { pt3dadd( 682.508, 337.823, 52.4328, 0.3228 ) }
    dend_20 { pt3dadd( 683.652, 337.823, 52.7906, 0.3534 ) }
    dend_20 { pt3dadd( 684.675, 337.894, 53.2974, 0.4722 ) }
    dend_20 { pt3dadd( 685.543, 338.142, 54.0414, 0.393 ) }
    dend_20 { pt3dadd( 686.509, 338.22, 54.887, 0.3252 ) }
    dend_20 { pt3dadd( 687.447, 338.091, 55.7956, 0.2742 ) }
    dend_20 { pt3dadd( 688.519, 338.052, 56.5538, 0.2736 ) }
    dend_20 { pt3dadd( 689.663, 338.052, 57.0903, 0.2728 ) }
    dend_20 { pt3dadd( 690.779, 337.836, 57.4246, 0.2712 ) }
    dend_20 { pt3dadd( 691.817, 337.366, 57.5968, 0.2684 ) }
    dend_20 { pt3dadd( 692.932, 337.251, 57.6668, 0.2626 ) }
    dend_20 { pt3dadd( 694.076, 337.251, 57.68, 0.2542 ) }
    dend_20 { pt3dadd( 695.22, 337.251, 57.68, 0.2288 ) }
    dend_20 { pt3dadd( 696.238, 337.709, 57.68, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 22/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 521.537, 330.73, 63.6345, 0.4618 ) }
    dend_19 { pt3dadd( 521.893, 330.885, 64.6629, 0.6864 ) }
    dend_19 { pt3dadd( 522.85, 331.315, 65.2865, 0.5686 ) }
    dend_19 { pt3dadd( 523.79, 331.905, 65.5155, 0.4342 ) }
    dend_19 { pt3dadd( 524.581, 332.695, 65.7964, 0.3814 ) }
    dend_19 { pt3dadd( 525.436, 333.422, 66.0061, 0.4766 ) }
    dend_19 { pt3dadd( 526.359, 334.062, 66.1626, 0.401 ) }
    dend_19 { pt3dadd( 527.208, 334.779, 66.4031, 0.34 ) }
    dend_19 { pt3dadd( 528.042, 335.524, 66.6991, 0.3014 ) }
    dend_19 { pt3dadd( 528.923, 336.238, 66.9575, 0.3252 ) }
    dend_19 { pt3dadd( 529.539, 336.985, 67.3795, 0.3636 ) }
    dend_19 { pt3dadd( 530.496, 337.316, 67.9207, 0.462 ) }
    dend_19 { pt3dadd( 531.432, 337.915, 68.474, 0.513 ) }
    dend_19 { pt3dadd( 532.505, 338.251, 68.9928, 0.559 ) }
    dend_19 { pt3dadd( 533.635, 338.353, 69.4747, 0.4224 ) }
    dend_19 { pt3dadd( 534.762, 338.471, 69.9297, 0.3322 ) }
    dend_19 { pt3dadd( 535.791, 338.631, 70.4494, 0.2872 ) }
    dend_19 { pt3dadd( 536.877, 338.894, 70.9363, 0.299 ) }
    dend_19 { pt3dadd( 537.94, 339.294, 71.3574, 0.3146 ) }
    dend_19 { pt3dadd( 539.025, 339.651, 71.6576, 0.3746 ) }
    dend_19 { pt3dadd( 540.097, 340.051, 71.8696, 0.3358 ) }
    dend_19 { pt3dadd( 541.083, 340.508, 72.1448, 0.3036 ) }
    dend_19 { pt3dadd( 541.905, 341.297, 72.359, 0.2814 ) }
    dend_19 { pt3dadd( 542.83, 341.962, 72.5553, 0.287 ) }
    dend_19 { pt3dadd( 543.836, 342.447, 72.6267, 0.2988 ) }
    dend_19 { pt3dadd( 544.763, 343.108, 72.6603, 0.3142 ) }
    dend_19 { pt3dadd( 545.783, 343.34, 72.842, 0.3734 ) }
    dend_19 { pt3dadd( 546.226, 344.357, 72.9546, 0.3338 ) }
    dend_19 { pt3dadd( 547.179, 344.746, 73.2225, 0.3002 ) }
    dend_19 { pt3dadd( 548.279, 345.005, 73.4678, 0.2748 ) }
    dend_19 { pt3dadd( 549.422, 345.013, 73.6148, 0.2748 ) }
    dend_19 { pt3dadd( 550.547, 344.946, 73.6016, 0.2752 ) }
    dend_19 { pt3dadd( 551.66, 344.892, 73.4471, 0.2758 ) }
    dend_19 { pt3dadd( 552.794, 344.962, 73.3144, 0.2766 ) }
    dend_19 { pt3dadd( 553.876, 345.04, 73.0736, 0.2782 ) }
    dend_19 { pt3dadd( 554.808, 345.104, 72.7255, 0.2814 ) }
    dend_19 { pt3dadd( 555.878, 344.905, 72.6275, 0.2872 ) }
    dend_19 { pt3dadd( 556.971, 344.983, 72.6911, 0.2988 ) }
    dend_19 { pt3dadd( 558.072, 344.958, 72.8319, 0.3142 ) }
    dend_19 { pt3dadd( 559.129, 344.589, 73.0422, 0.3736 ) }
    dend_19 { pt3dadd( 560.142, 344.109, 73.2906, 0.3342 ) }
    dend_19 { pt3dadd( 561.173, 343.66, 73.4398, 0.3008 ) }
    dend_19 { pt3dadd( 562.269, 343.372, 73.4406, 0.276 ) }
    dend_19 { pt3dadd( 563.391, 343.383, 73.3172, 0.2774 ) }
    dend_19 { pt3dadd( 564.49, 343.661, 73.1091, 0.2796 ) }
    dend_19 { pt3dadd( 565.606, 343.894, 72.8619, 0.284 ) }
    dend_19 { pt3dadd( 566.723, 343.914, 72.6583, 0.292 ) }
    dend_19 { pt3dadd( 567.779, 344.091, 72.3498, 0.3064 ) }
    dend_19 { pt3dadd( 568.835, 344.262, 71.878, 0.3354 ) }
    dend_19 { pt3dadd( 569.924, 344.438, 71.3168, 0.3778 ) }
    dend_19 { pt3dadd( 570.994, 344.635, 70.6689, 0.5118 ) }
    dend_19 { pt3dadd( 572.036, 345.03, 70.0112, 0.4922 ) }
    dend_19 { pt3dadd( 573.034, 345.461, 69.3258, 0.3846 ) }
    dend_19 { pt3dadd( 573.996, 345.788, 68.598, 0.3 ) }
    dend_19 { pt3dadd( 574.998, 346.125, 67.9011, 0.2746 ) }
    dend_19 { pt3dadd( 576.115, 346.272, 67.375, 0.2746 ) }
    dend_19 { pt3dadd( 577.252, 346.401, 67.0194, 0.2746 ) }
    dend_19 { pt3dadd( 578.354, 346.701, 66.7982, 0.2744 ) }
    dend_19 { pt3dadd( 579.447, 347.037, 66.684, 0.2744 ) }
    dend_19 { pt3dadd( 580.346, 347.731, 66.6448, 0.2742 ) }
    dend_19 { pt3dadd( 581.219, 348.469, 66.64, 0.2736 ) }
    dend_19 { pt3dadd( 582.048, 349.259, 66.64, 0.2728 ) }
    dend_19 { pt3dadd( 582.631, 350.238, 66.64, 0.2712 ) }
    dend_19 { pt3dadd( 583.32, 351.15, 66.64, 0.2684 ) }
    dend_19 { pt3dadd( 583.824, 352.173, 66.64, 0.2626 ) }
    dend_19 { pt3dadd( 584.63, 352.98, 66.64, 0.2542 ) }
    dend_19 { pt3dadd( 585.494, 353.73, 66.64, 0.2288 ) }
    dend_19 { pt3dadd( 586.186, 354.64, 66.64, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 90/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 492.153, 336.655, 46.8675, 0.3454 ) }
    dend_13 { pt3dadd( 492.108, 335.763, 45.7974, 0.2288 ) }
    dend_13 { pt3dadd( 492.052, 334.662, 44.576, 0.2988 ) }
    dend_13 { pt3dadd( 491.994, 333.562, 44.0513, 0.3208 ) }
    dend_13 { pt3dadd( 492.156, 332.454, 43.4549, 0.3546 ) }
    dend_13 { pt3dadd( 492.248, 331.372, 42.7568, 0.4506 ) }
    dend_13 { pt3dadd( 492.605, 330.347, 41.995, 0.4684 ) }
    dend_13 { pt3dadd( 492.771, 329.303, 41.1726, 0.59 ) }
    dend_13 { pt3dadd( 493.369, 328.582, 40.2609, 0.6152 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 99/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 492.153, 336.655, 46.8675, 0.3454 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( 491.615, 335.793, 46.7603, 0.4326 ) }
    dend_10 { pt3dadd( 490.849, 334.959, 46.723, 0.4392 ) }
    dend_10 { pt3dadd( 490.206, 334.041, 46.8096, 0.5178 ) }
    dend_10 { pt3dadd( 489.983, 333.044, 47.1055, 0.57 ) }
    dend_10 { pt3dadd( 489.568, 332.203, 47.5703, 0.6614 ) }
    dend_10 { pt3dadd( 488.841, 331.341, 47.922, 0.6282 ) }
    dend_10 { pt3dadd( 488.366, 330.305, 48.1211, 0.6358 ) }
    dend_10 { pt3dadd( 487.891, 329.282, 48.1393, 0.5432 ) }
    dend_10 { pt3dadd( 487.228, 328.366, 48.0124, 0.4332 ) }
    dend_10 { pt3dadd( 486.443, 327.567, 47.7543, 0.3856 ) }
    dend_10 { pt3dadd( 485.844, 326.625, 47.4158, 0.4542 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 11/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 490.988, 346.607, 53.7026, 0.3952 ) }
    dend_8 { pt3dadd( 490.19, 346.02, 54.7823, 0.2288 ) }
    dend_8 { pt3dadd( 489.282, 345.352, 55.3862, 0.378 ) }
    dend_8 { pt3dadd( 488.375, 344.671, 55.62, 0.5122 ) }
    dend_8 { pt3dadd( 487.384, 344.362, 55.9325, 0.4928 ) }
    dend_8 { pt3dadd( 486.303, 344.353, 56.3097, 0.386 ) }
    dend_8 { pt3dadd( 485.186, 344.402, 56.5855, 0.3024 ) }
    dend_8 { pt3dadd( 484.115, 344.231, 56.6619, 0.279 ) }
    dend_8 { pt3dadd( 483.063, 343.888, 56.5782, 0.2828 ) }
    dend_8 { pt3dadd( 482.11, 343.513, 56.5939, 0.2896 ) }
    dend_8 { pt3dadd( 481.142, 343.292, 56.7554, 0.3036 ) }
    dend_8 { pt3dadd( 480.048, 343.27, 56.8198, 0.3232 ) }
    dend_8 { pt3dadd( 479.088, 343.27, 56.611, 0.3906 ) }
    dend_8 { pt3dadd( 478.003, 343.374, 56.3993, 0.3652 ) }
    dend_8 { pt3dadd( 476.902, 343.294, 56.0913, 0.3604 ) }
    dend_8 { pt3dadd( 475.838, 343.225, 55.6517, 0.3756 ) }
    dend_8 { pt3dadd( 474.869, 342.804, 55.3011, 0.5142 ) }
    dend_8 { pt3dadd( 473.819, 342.448, 55.0726, 0.4668 ) }
    dend_8 { pt3dadd( 472.682, 342.364, 54.8892, 0.4818 ) }
    dend_8 { pt3dadd( 471.56, 342.548, 54.7705, 0.4674 ) }
    dend_8 { pt3dadd( 470.454, 342.502, 54.5916, 0.418 ) }
    dend_8 { pt3dadd( 469.456, 342.466, 54.2604, 0.4356 ) }
    dend_8 { pt3dadd( 468.372, 342.125, 53.9848, 0.3966 ) }
    dend_8 { pt3dadd( 467.272, 342.178, 53.8952, 0.443 ) }
    dend_8 { pt3dadd( 466.211, 342.218, 53.9902, 0.41 ) }
    dend_8 { pt3dadd( 465.068, 342.224, 54.0414, 0.4688 ) }
    dend_8 { pt3dadd( 463.958, 342.407, 54.0092, 0.454 ) }
    dend_8 { pt3dadd( 462.893, 342.788, 54.0064, 0.5698 ) }
    dend_8 { pt3dadd( 461.879, 342.97, 53.7855, 0.5466 ) }
    dend_8 { pt3dadd( 460.842, 343.171, 53.4761, 0.5126 ) }
    dend_8 { pt3dadd( 459.732, 343.096, 53.3114, 0.4078 ) }
    dend_8 { pt3dadd( 458.632, 342.834, 53.2294, 0.415 ) }
    dend_8 { pt3dadd( 457.519, 342.853, 53.2263, 0.365 ) }
    dend_8 { pt3dadd( 456.439, 343.106, 53.3042, 0.3522 ) }
    dend_8 { pt3dadd( 455.405, 343.525, 53.3232, 0.3976 ) }
    dend_8 { pt3dadd( 454.439, 344.065, 53.3282, 0.3736 ) }
    dend_8 { pt3dadd( 453.474, 344.641, 53.3996, 0.3994 ) }
    dend_8 { pt3dadd( 452.421, 345.01, 53.4808, 0.335 ) }
    dend_8 { pt3dadd( 451.364, 345.385, 53.5486, 0.302 ) }
    dend_8 { pt3dadd( 450.35, 345.911, 53.5956, 0.2782 ) }
    dend_8 { pt3dadd( 449.254, 346.162, 53.5956, 0.2814 ) }
    dend_8 { pt3dadd( 448.176, 346.488, 53.5237, 0.287 ) }
    dend_8 { pt3dadd( 447.159, 347.006, 53.3896, 0.2988 ) }
    dend_8 { pt3dadd( 446.152, 347.388, 53.1236, 0.3142 ) }
    dend_8 { pt3dadd( 445.112, 347.766, 52.8567, 0.3734 ) }
    dend_8 { pt3dadd( 444.24, 348.444, 52.5619, 0.3338 ) }
    dend_8 { pt3dadd( 443.419, 349.222, 52.2539, 0.2998 ) }
    dend_8 { pt3dadd( 442.651, 350.067, 51.994, 0.2742 ) }
    dend_8 { pt3dadd( 441.988, 350.972, 51.7222, 0.2736 ) }
    dend_8 { pt3dadd( 441.201, 351.777, 51.4637, 0.2728 ) }
    dend_8 { pt3dadd( 440.431, 352.597, 51.2226, 0.2712 ) }
    dend_8 { pt3dadd( 439.47, 353.204, 51.0538, 0.2684 ) }
    dend_8 { pt3dadd( 438.534, 353.853, 50.9376, 0.2626 ) }
    dend_8 { pt3dadd( 437.533, 354.393, 50.9471, 0.2542 ) }
    dend_8 { pt3dadd( 436.562, 354.896, 51.13, 0.2288 ) }
    dend_8 { pt3dadd( 435.75, 355.67, 51.8, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 67/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 490.988, 346.607, 53.7026, 0.3952 ) }
    dend_1 { pt3dadd( 490.26, 347.406, 54.1568, 0.4662 ) }
    dend_1 { pt3dadd( 489.52, 348.266, 54.5339, 0.5564 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 70/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 577.924, 300.974, 30.8143, 0.5676 ) }
    dend_37 { pt3dadd( 578.716, 301.255, 29.3488, 0.2288 ) }
    dend_37 { pt3dadd( 579.802, 301.28, 28.5233, 0.3144 ) }
    dend_37 { pt3dadd( 580.882, 301.088, 28.1422, 0.3444 ) }
    dend_37 { pt3dadd( 581.963, 300.754, 27.7833, 0.424 ) }
    dend_37 { pt3dadd( 583.026, 300.427, 27.5206, 0.4532 ) }
    dend_37 { pt3dadd( 584.133, 300.337, 27.1964, 0.3982 ) }
    dend_37 { pt3dadd( 585.249, 300.515, 26.8464, 0.3674 ) }
    dend_37 { pt3dadd( 586.302, 300.349, 26.4418, 0.42 ) }
    dend_37 { pt3dadd( 587.099, 299.72, 25.8899, 0.446 ) }
    dend_37 { pt3dadd( 587.788, 298.971, 25.2073, 0.3848 ) }
    dend_37 { pt3dadd( 588.384, 298.133, 24.4958, 0.342 ) }
    dend_37 { pt3dadd( 588.683, 297.042, 23.8969, 0.378 ) }
    dend_37 { pt3dadd( 588.945, 295.957, 23.3408, 0.342 ) }
    dend_37 { pt3dadd( 589.63, 295.15, 22.8164, 0.3164 ) }
    dend_37 { pt3dadd( 589.784, 294.31, 22.2496, 0.2994 ) }
    dend_37 { pt3dadd( 588.726, 293.989, 21.7913, 0.3476 ) }
    dend_37 { pt3dadd( 587.634, 293.723, 21.5466, 0.2796 ) }
    dend_37 { pt3dadd( 586.529, 294.008, 21.28, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 89/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 577.924, 300.974, 30.8143, 0.5676 ) }
    dend_36 { pt3dadd( 578.816, 300.688, 30.4469, 0.5152 ) }
    dend_36 { pt3dadd( 579.937, 300.534, 30.1468, 0.589 ) }
    dend_36 { pt3dadd( 580.811, 299.837, 29.9018, 0.5834 ) }
    dend_36 { pt3dadd( 581.469, 298.974, 29.5758, 0.5752 ) }
    dend_36 { pt3dadd( 582.224, 298.198, 29.204, 0.55 ) }
    dend_36 { pt3dadd( 583.032, 297.41, 28.9402, 0.5524 ) }
    dend_36 { pt3dadd( 583.786, 296.702, 28.8649, 0.5488 ) }
    dend_36 { pt3dadd( 584.898, 296.499, 28.7686, 0.5782 ) }
    dend_36 { pt3dadd( 586.04, 296.5, 28.7, 0.459 ) }
    dend_36 { pt3dadd( 587.174, 296.441, 28.6182, 0.395 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 588.277, 296.336, 28.4522, 0.4294 ) }
    dend_36 { pt3dadd( 589.358, 296.237, 28.2601, 0.4344 ) }
    dend_36 { pt3dadd( 590.29, 295.586, 28.1271, 0.5026 ) }
    dend_36 { pt3dadd( 591.31, 295.121, 28.0675, 0.572 ) }
    dend_36 { pt3dadd( 592.398, 294.859, 28.0109, 0.5192 ) }
    dend_36 { pt3dadd( 593.475, 294.655, 28.0904, 0.388 ) }
    dend_36 { pt3dadd( 594.429, 294.404, 28.1025, 0.306 ) }
    dend_36 { pt3dadd( 595.423, 294.324, 27.9686, 0.2858 ) }
    dend_36 { pt3dadd( 596.535, 294.388, 27.9121, 0.295 ) }
    dend_36 { pt3dadd( 597.644, 294.336, 27.8438, 0.3134 ) }
    dend_36 { pt3dadd( 598.716, 293.994, 27.7855, 0.3412 ) }
    dend_36 { pt3dadd( 599.787, 293.611, 27.7906, 0.4244 ) }
    dend_36 { pt3dadd( 600.725, 293.199, 27.9854, 0.4242 ) }
    dend_36 { pt3dadd( 601.584, 292.541, 28.0496, 0.4888 ) }
    dend_36 { pt3dadd( 602.41, 291.786, 27.9899, 0.5214 ) }
    dend_36 { pt3dadd( 603.159, 290.943, 27.972, 0.5464 ) }
    dend_36 { pt3dadd( 603.915, 290.118, 27.8538, 0.5376 ) }
    dend_36 { pt3dadd( 604.766, 289.359, 27.7194, 0.558 ) }
    dend_36 { pt3dadd( 605.565, 288.559, 27.6058, 0.4204 ) }
    dend_36 { pt3dadd( 606.57, 288.08, 27.4823, 0.3286 ) }
    dend_36 { pt3dadd( 607.589, 287.572, 27.4691, 0.2802 ) }
    dend_36 { pt3dadd( 608.447, 286.832, 27.5318, 0.2854 ) }
    dend_36 { pt3dadd( 609.162, 285.955, 27.6777, 0.2942 ) }
    dend_36 { pt3dadd( 610.056, 285.375, 27.9608, 0.312 ) }
    dend_36 { pt3dadd( 611.009, 284.944, 28.3312, 0.34 ) }
    dend_36 { pt3dadd( 611.826, 284.154, 28.6787, 0.4162 ) }
    dend_36 { pt3dadd( 612.657, 283.394, 29.0128, 0.4386 ) }
    dend_36 { pt3dadd( 613.446, 282.606, 29.3328, 0.3704 ) }
    dend_36 { pt3dadd( 614.367, 281.969, 29.5896, 0.3204 ) }
    dend_36 { pt3dadd( 615.268, 281.307, 29.6867, 0.3132 ) }
    dend_36 { pt3dadd( 616.021, 280.466, 29.6598, 0.342 ) }
    dend_36 { pt3dadd( 616.693, 279.571, 29.5523, 0.4198 ) }
    dend_36 { pt3dadd( 617.263, 278.651, 29.2978, 0.4458 ) }
    dend_36 { pt3dadd( 617.878, 277.769, 28.9596, 0.383 ) }
    dend_36 { pt3dadd( 618.602, 276.915, 28.6804, 0.345 ) }
    dend_36 { pt3dadd( 619.445, 276.154, 28.5642, 0.354 ) }
    dend_36 { pt3dadd( 620.265, 275.389, 28.6412, 0.4418 ) }
    dend_36 { pt3dadd( 621.104, 274.729, 28.9327, 0.4872 ) }
    dend_36 { pt3dadd( 622.103, 274.302, 29.3829, 0.4554 ) }
    dend_36 { pt3dadd( 623.132, 273.85, 29.8668, 0.5004 ) }
    dend_36 { pt3dadd( 624.18, 273.437, 30.3318, 0.5382 ) }
    dend_36 { pt3dadd( 625.292, 273.349, 30.735, 0.6004 ) }
    dend_36 { pt3dadd( 626.407, 273.361, 31.101, 0.5246 ) }
    dend_36 { pt3dadd( 627.134, 272.703, 31.5022, 0.3978 ) }
    dend_36 { pt3dadd( 628.098, 272.12, 31.7562, 0.3254 ) }
    dend_36 { pt3dadd( 629.239, 272.031, 31.8819, 0.3162 ) }
    dend_36 { pt3dadd( 630.376, 271.906, 31.8875, 0.3772 ) }
    dend_36 { pt3dadd( 631.514, 271.795, 31.7789, 0.3412 ) }
    dend_36 { pt3dadd( 632.632, 271.597, 31.5417, 0.3132 ) }
    dend_36 { pt3dadd( 633.675, 271.189, 31.1816, 0.3002 ) }
    dend_36 { pt3dadd( 634.623, 271.265, 30.6272, 0.3166 ) }
    dend_36 { pt3dadd( 635.107, 272.027, 29.8833, 0.3782 ) }
    dend_36 { pt3dadd( 635.725, 272.746, 29.1558, 0.3428 ) }
    dend_36 { pt3dadd( 636.86, 272.806, 28.5544, 0.3162 ) }
    dend_36 { pt3dadd( 637.997, 272.68, 28.0672, 0.3056 ) }
    dend_36 { pt3dadd( 639.122, 272.483, 27.6587, 0.3264 ) }
    dend_36 { pt3dadd( 640.236, 272.257, 27.27, 0.3976 ) }
    dend_36 { pt3dadd( 641.334, 272.199, 26.8052, 0.3736 ) }
    dend_36 { pt3dadd( 642.39, 272.44, 26.2234, 0.399 ) }
    dend_36 { pt3dadd( 643.459, 272.693, 25.5637, 0.3342 ) }
    dend_36 { pt3dadd( 644.454, 272.684, 24.7724, 0.3006 ) }
    dend_36 { pt3dadd( 645.252, 272.309, 23.8543, 0.276 ) }
    dend_36 { pt3dadd( 646.139, 272.043, 22.9177, 0.277 ) }
    dend_36 { pt3dadd( 647.249, 272.011, 22.1626, 0.2792 ) }
    dend_36 { pt3dadd( 648.381, 271.861, 21.6124, 0.2828 ) }
    dend_36 { pt3dadd( 649.507, 271.66, 21.2318, 0.291 ) }
    dend_36 { pt3dadd( 650.621, 271.5, 20.9266, 0.2994 ) }
    dend_36 { pt3dadd( 651.672, 271.86, 20.7211, 0.3476 ) }
    dend_36 { pt3dadd( 652.546, 272.581, 20.5481, 0.2796 ) }
    dend_36 { pt3dadd( 653.567, 273.073, 20.16, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 70/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 501.288, 327.87, 37.4399, 0.4396 ) }
    dend_32 { pt3dadd( 500.594, 327.43, 36.9026, 0.4576 ) }
    dend_32 { pt3dadd( 499.737, 326.955, 33.9749, 0.3608 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 73/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 501.288, 327.87, 37.4399, 0.4396 ) }
    dend_25 { pt3dadd( 501.429, 327.203, 37.0734, 0.5478 ) }
    dend_25 { pt3dadd( 502.041, 326.29, 36.7598, 0.4828 ) }
    dend_25 { pt3dadd( 502.739, 325.391, 36.5392, 0.5064 ) }
    dend_25 { pt3dadd( 503.199, 324.375, 36.3247, 0.5372 ) }
    dend_25 { pt3dadd( 503.725, 323.366, 36.1508, 0.429 ) }
    dend_25 { pt3dadd( 503.96, 322.251, 36.0139, 0.3446 ) }
    dend_25 { pt3dadd( 504.297, 321.161, 35.9447, 0.3098 ) }
    dend_25 { pt3dadd( 504.665, 320.095, 35.8534, 0.342 ) }
    dend_25 { pt3dadd( 504.535, 318.962, 35.8156, 0.389 ) }
    dend_25 { pt3dadd( 504.847, 317.918, 35.7188, 0.5398 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 84/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 493.369, 328.582, 40.2609, 0.6152 ) }
    dend_17 { pt3dadd( 493.063, 328.489, 38.3062, 0.2288 ) }
    dend_17 { pt3dadd( 492.405, 328.342, 36.1071, 0.3924 ) }
    dend_17 { pt3dadd( 491.459, 328.351, 35.1691, 0.5388 ) }
    dend_17 { pt3dadd( 490.492, 328.874, 34.2818, 0.5416 ) }
    dend_17 { pt3dadd( 489.426, 328.969, 33.3704, 0.4794 ) }
    dend_17 { pt3dadd( 488.456, 328.986, 32.3268, 0.4606 ) }
    dend_17 { pt3dadd( 487.604, 329.534, 31.2413, 0.645 ) }
    dend_17 { pt3dadd( 486.774, 329.9, 30.0829, 0.6096 ) }
    dend_17 { pt3dadd( 485.936, 330.388, 28.8884, 0.5432 ) }
    dend_17 { pt3dadd( 484.998, 330.823, 27.748, 0.4246 ) }
    dend_17 { pt3dadd( 483.965, 330.885, 26.7504, 0.4118 ) }
    dend_17 { pt3dadd( 483.102, 330.527, 25.7597, 0.5274 ) }
    dend_17 { pt3dadd( 482.251, 330.148, 24.8116, 0.5222 ) }
    dend_17 { pt3dadd( 481.291, 329.566, 24.1007, 0.435 ) }
    dend_17 { pt3dadd( 480.423, 329.057, 23.7322, 0.4196 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( 479.857, 328.37, 23.4452, 0.3672 ) }
    dend_17 { pt3dadd( 479.366, 327.971, 22.9051, 0.387 ) }
    dend_17 { pt3dadd( 478.436, 327.52, 22.426, 0.3134 ) }
    dend_17 { pt3dadd( 477.4, 327.237, 22.1886, 0.2542 ) }
    dend_17 { pt3dadd( 476.476, 327.298, 21.28, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 5/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 493.369, 328.582, 40.2609, 0.6152 ) }
    dend_14 { pt3dadd( 494.405, 327.369, 39.4134, 0.4898 ) }
    dend_14 { pt3dadd( 494.912, 326.37, 38.691, 0.4062 ) }
    dend_14 { pt3dadd( 495.323, 325.392, 38.0414, 0.4454 ) }
    dend_14 { pt3dadd( 495.506, 324.374, 37.4506, 0.488 ) }
    dend_14 { pt3dadd( 495.624, 323.29, 37.0535, 0.4866 ) }
    dend_14 { pt3dadd( 495.676, 322.189, 36.9838, 0.4144 ) }
    dend_14 { pt3dadd( 495.673, 321.115, 37.1776, 0.3918 ) }
    dend_14 { pt3dadd( 495.698, 320.011, 37.5049, 0.4956 ) }
    dend_14 { pt3dadd( 495.551, 318.967, 37.9224, 0.4366 ) }
    dend_14 { pt3dadd( 495.169, 317.959, 38.3432, 0.4054 ) }
    dend_14 { pt3dadd( 494.891, 316.854, 38.6212, 0.4254 ) }
    dend_14 { pt3dadd( 494.623, 315.773, 38.6926, 0.5422 ) }
    dend_14 { pt3dadd( 494.311, 314.721, 38.5717, 0.8274 ) }
    dend_14 { pt3dadd( 493.705, 313.854, 38.3393, 1.0266 ) }
    dend_14 { pt3dadd( 493.067, 312.952, 38.1489, 0.9332 ) }
    dend_14 { pt3dadd( 492.712, 311.881, 38.0806, 0.9488 ) }
    dend_14 { pt3dadd( 492.399, 310.843, 38.1979, 0.9774 ) }
    dend_14 { pt3dadd( 491.737, 309.988, 38.4308, 0.803 ) }
    dend_14 { pt3dadd( 490.998, 309.127, 38.6257, 0.667 ) }
    dend_14 { pt3dadd( 490.29, 308.233, 38.743, 0.6508 ) }
    dend_14 { pt3dadd( 489.631, 307.301, 38.7738, 0.6192 ) }
    dend_14 { pt3dadd( 489.271, 306.228, 38.7727, 0.566 ) }
    dend_14 { pt3dadd( 489.159, 305.095, 38.722, 0.6712 ) }
    dend_14 { pt3dadd( 489.234, 303.955, 38.6604, 0.7934 ) }
    dend_14 { pt3dadd( 489.147, 302.818, 38.5994, 0.6866 ) }
    dend_14 { pt3dadd( 489.245, 301.685, 38.5473, 0.733 ) }
    dend_14 { pt3dadd( 489.131, 300.555, 38.4107, 0.778 ) }
    dend_14 { pt3dadd( 489.006, 299.433, 38.1615, 0.8326 ) }
    dend_14 { pt3dadd( 488.617, 298.363, 37.8554, 0.8426 ) }
    dend_14 { pt3dadd( 488.382, 297.362, 37.3587, 0.8472 ) }
    dend_14 { pt3dadd( 488.005, 296.289, 36.8628, 0.923 ) }
    dend_14 { pt3dadd( 487.805, 295.177, 36.3527, 0.7386 ) }
    dend_14 { pt3dadd( 487.866, 294.058, 35.8266, 0.5988 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 485.844, 326.625, 47.4158, 0.4542 ) }
    dend_12 { pt3dadd( 485.462, 325.624, 48.333, 0.2288 ) }
    dend_12 { pt3dadd( 485.078, 324.737, 50.0178, 0.3746 ) }
    dend_12 { pt3dadd( 484.843, 323.98, 50.8472, 0.3362 ) }
    dend_12 { pt3dadd( 485.112, 322.951, 51.634, 0.304 ) }
    dend_12 { pt3dadd( 485.657, 321.954, 52.3076, 0.2822 ) }
    dend_12 { pt3dadd( 486.305, 321.195, 52.7576, 0.2888 ) }
    dend_12 { pt3dadd( 486.398, 320.368, 53.4621, 0.3004 ) }
    dend_12 { pt3dadd( 486.142, 320.43, 54.5252, 0.324 ) }
    dend_12 { pt3dadd( 485.47, 319.754, 55.6895, 0.3602 ) }
    dend_12 { pt3dadd( 484.731, 319.322, 56.9867, 0.4622 ) }
    dend_12 { pt3dadd( 483.919, 318.872, 58.3164, 0.482 ) }
    dend_12 { pt3dadd( 482.958, 318.289, 59.5031, 0.6534 ) }
    dend_12 { pt3dadd( 482.09, 317.705, 60.5875, 0.5472 ) }
    dend_12 { pt3dadd( 481.192, 317.225, 61.6286, 0.5786 ) }
    dend_12 { pt3dadd( 480.21, 316.8, 62.6228, 0.4436 ) }
    dend_12 { pt3dadd( 479.164, 316.461, 63.5468, 0.4446 ) }
    dend_12 { pt3dadd( 478.288, 316.236, 64.5406, 0.3708 ) }
    dend_12 { pt3dadd( 477.272, 316.015, 65.4842, 0.3706 ) }
    dend_12 { pt3dadd( 476.22, 315.634, 66.3233, 0.396 ) }
    dend_12 { pt3dadd( 475.595, 314.788, 67.1236, 0.5466 ) }
    dend_12 { pt3dadd( 475.036, 313.812, 67.8454, 0.5512 ) }
    dend_12 { pt3dadd( 474.443, 312.836, 68.4709, 0.5208 ) }
    dend_12 { pt3dadd( 473.518, 312.242, 69.0948, 0.4242 ) }
    dend_12 { pt3dadd( 472.878, 311.703, 69.9219, 0.4406 ) }
    dend_12 { pt3dadd( 472.776, 310.622, 70.7473, 0.4368 ) }
    dend_12 { pt3dadd( 472.775, 309.482, 71.4319, 0.3668 ) }
    dend_12 { pt3dadd( 472.633, 308.378, 72.1319, 0.3136 ) }
    dend_12 { pt3dadd( 472.162, 307.421, 72.8692, 0.3012 ) }
    dend_12 { pt3dadd( 472.056, 306.721, 73.7926, 0.3184 ) }
    dend_12 { pt3dadd( 472.153, 305.598, 74.6276, 0.3816 ) }
    dend_12 { pt3dadd( 472.162, 304.477, 75.4331, 0.3492 ) }
    dend_12 { pt3dadd( 472.16, 303.345, 76.1592, 0.328 ) }
    dend_12 { pt3dadd( 472.342, 302.286, 76.8494, 0.3274 ) }
    dend_12 { pt3dadd( 472.586, 301.394, 77.7174, 0.3696 ) }
    dend_12 { pt3dadd( 472.733, 300.627, 78.7494, 0.4654 ) }
    dend_12 { pt3dadd( 472.168, 299.896, 79.7703, 0.5564 ) }
    dend_12 { pt3dadd( 471.381, 299.482, 80.8217, 0.4594 ) }
    dend_12 { pt3dadd( 470.587, 298.926, 81.9582, 0.4268 ) }
    dend_12 { pt3dadd( 469.636, 298.531, 83.0701, 0.3384 ) }
    dend_12 { pt3dadd( 468.926, 298.372, 84.2797, 0.3084 ) }
    dend_12 { pt3dadd( 467.817, 298.312, 85.3429, 0.2904 ) }
    dend_12 { pt3dadd( 466.821, 297.814, 86.3495, 0.3032 ) }
    dend_12 { pt3dadd( 466.054, 297.112, 87.3216, 0.33 ) }
    dend_12 { pt3dadd( 465.599, 296.39, 88.403, 0.3666 ) }
    dend_12 { pt3dadd( 464.745, 295.907, 89.5362, 0.497 ) }
    dend_12 { pt3dadd( 464.448, 295.174, 90.7684, 0.4338 ) }
    dend_12 { pt3dadd( 464.092, 294.184, 91.9458, 0.4262 ) }
    dend_12 { pt3dadd( 464.043, 293.06, 92.976, 0.3378 ) }
    dend_12 { pt3dadd( 463.887, 292.41, 94.2088, 0.307 ) }
    dend_12 { pt3dadd( 463.6, 291.714, 95.5844, 0.2876 ) }
    dend_12 { pt3dadd( 463.461, 290.736, 96.971, 0.2998 ) }
    dend_12 { pt3dadd( 463.401, 289.711, 98.3402, 0.316 ) }
    dend_12 { pt3dadd( 463.489, 288.615, 99.6386, 0.377 ) }
    dend_12 { pt3dadd( 463.239, 287.549, 100.869, 0.3406 ) }
    dend_12 { pt3dadd( 462.943, 286.707, 102.188, 0.3126 ) }
    dend_12 { pt3dadd( 462.492, 285.974, 103.598, 0.2988 ) }
    dend_12 { pt3dadd( 461.88, 285.61, 105.149, 0.3142 ) }
    dend_12 { pt3dadd( 461.327, 284.826, 106.705, 0.3734 ) }
    dend_12 { pt3dadd( 460.983, 283.83, 108.202, 0.3338 ) }
    dend_12 { pt3dadd( 460.765, 282.87, 109.691, 0.3 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_12 { pt3dadd( 460.661, 281.89, 111.146, 0.2746 ) }
    dend_12 { pt3dadd( 460.264, 281.095, 112.64, 0.2746 ) }
    dend_12 { pt3dadd( 459.76, 280.309, 114.143, 0.2744 ) }
    dend_12 { pt3dadd( 459.561, 279.54, 115.74, 0.2744 ) }
    dend_12 { pt3dadd( 459.317, 278.67, 117.355, 0.2742 ) }
    dend_12 { pt3dadd( 458.773, 278.057, 119.014, 0.2736 ) }
    dend_12 { pt3dadd( 458.252, 277.448, 120.696, 0.2728 ) }
    dend_12 { pt3dadd( 457.782, 276.583, 122.311, 0.2712 ) }
    dend_12 { pt3dadd( 457.182, 275.81, 123.838, 0.2684 ) }
    dend_12 { pt3dadd( 456.249, 275.523, 125.245, 0.2626 ) }
    dend_12 { pt3dadd( 455.574, 275.668, 126.646, 0.2542 ) }
    dend_12 { pt3dadd( 454.807, 275.679, 127.997, 0.2288 ) }
    dend_12 { pt3dadd( 453.825, 275.361, 130.48, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 485.844, 326.625, 47.4158, 0.4542 ) }
    dend_11 { pt3dadd( 484.985, 325.918, 47.241, 0.505 ) }
    dend_11 { pt3dadd( 484.071, 325.381, 47.2052, 0.5134 ) }
    dend_11 { pt3dadd( 483.082, 325.033, 47.0386, 0.4868 ) }
    dend_11 { pt3dadd( 482.261, 324.466, 46.732, 0.4134 ) }
    dend_11 { pt3dadd( 481.422, 323.728, 46.4878, 0.396 ) }
    dend_11 { pt3dadd( 480.662, 322.907, 46.377, 0.474 ) }
    dend_11 { pt3dadd( 480.226, 321.885, 46.3322, 0.5414 ) }
    dend_11 { pt3dadd( 479.945, 320.788, 46.2868, 0.583 ) }
    dend_11 { pt3dadd( 479.341, 319.863, 46.2518, 0.6054 ) }
    dend_11 { pt3dadd( 478.455, 319.146, 46.2252, 0.686 ) }
    dend_11 { pt3dadd( 477.476, 318.603, 46.2193, 0.6448 ) }
    dend_11 { pt3dadd( 476.422, 318.209, 46.1776, 0.8076 ) }
    dend_11 { pt3dadd( 475.313, 317.947, 46.0555, 0.8628 ) }
    dend_11 { pt3dadd( 474.178, 317.876, 45.8478, 0.7914 ) }
    dend_11 { pt3dadd( 473.039, 317.818, 45.5476, 0.5864 ) }
    dend_11 { pt3dadd( 472.0, 317.484, 45.0965, 0.558 ) }
    dend_11 { pt3dadd( 471.271, 316.948, 44.382, 0.6288 ) }
    dend_11 { pt3dadd( 470.48, 316.384, 43.5296, 0.6198 ) }
    dend_11 { pt3dadd( 469.766, 315.671, 42.6219, 0.5954 ) }
    dend_11 { pt3dadd( 469.334, 314.793, 41.6721, 0.589 ) }
    dend_11 { pt3dadd( 469.013, 313.76, 40.8461, 0.6174 ) }
    dend_11 { pt3dadd( 468.399, 312.823, 40.2282, 0.7034 ) }
    dend_11 { pt3dadd( 467.526, 312.095, 39.7774, 0.7008 ) }
    dend_11 { pt3dadd( 466.723, 311.288, 39.433, 0.7964 ) }
    dend_11 { pt3dadd( 466.267, 310.262, 39.1863, 0.7148 ) }
    dend_11 { pt3dadd( 466.251, 309.159, 38.9032, 0.6766 ) }
    dend_11 { pt3dadd( 466.515, 308.083, 38.5384, 0.7422 ) }
    dend_11 { pt3dadd( 467.072, 307.101, 38.1517, 0.6582 ) }
    dend_11 { pt3dadd( 467.602, 306.107, 37.73, 0.5874 ) }
    dend_11 { pt3dadd( 468.149, 305.126, 37.2814, 0.5008 ) }
    dend_11 { pt3dadd( 468.689, 304.191, 36.769, 0.5794 ) }
    dend_11 { pt3dadd( 468.72, 303.09, 36.2863, 0.7108 ) }
    dend_11 { pt3dadd( 469.188, 302.064, 35.9229, 0.7932 ) }
    dend_11 { pt3dadd( 469.087, 300.944, 35.6065, 0.8142 ) }
    dend_11 { pt3dadd( 468.975, 299.839, 35.2797, 0.8066 ) }
    dend_11 { pt3dadd( 469.245, 298.742, 35.0165, 0.7906 ) }
    dend_11 { pt3dadd( 469.387, 297.664, 34.9154, 0.7688 ) }
    dend_11 { pt3dadd( 469.583, 296.58, 34.7315, 0.6894 ) }
    dend_11 { pt3dadd( 469.857, 295.505, 34.5022, 0.7326 ) }
    dend_11 { pt3dadd( 469.993, 294.428, 34.2303, 0.5748 ) }
    dend_11 { pt3dadd( 470.316, 293.397, 34.0245, 0.5216 ) }
    dend_11 { pt3dadd( 470.602, 292.392, 34.0802, 0.6338 ) }
    dend_11 { pt3dadd( 471.034, 291.419, 34.2689, 0.7354 ) }
    dend_11 { pt3dadd( 471.529, 290.414, 34.4131, 0.752 ) }
    dend_11 { pt3dadd( 472.029, 289.409, 34.5436, 0.7004 ) }
    dend_11 { pt3dadd( 472.559, 288.406, 34.7612, 0.5498 ) }
    dend_11 { pt3dadd( 473.251, 287.597, 35.1036, 0.536 ) }
    dend_11 { pt3dadd( 474.13, 286.966, 35.5502, 0.5944 ) }
    dend_11 { pt3dadd( 474.627, 286.049, 36.0937, 0.5246 ) }
    dend_11 { pt3dadd( 474.897, 284.982, 36.7004, 0.5724 ) }
    dend_11 { pt3dadd( 475.446, 284.011, 37.2753, 0.4864 ) }
    dend_11 { pt3dadd( 476.254, 283.214, 37.793, 0.4898 ) }
    dend_11 { pt3dadd( 477.246, 282.703, 38.2827, 0.6208 ) }
    dend_11 { pt3dadd( 478.297, 282.33, 38.7957, 0.7164 ) }
    dend_11 { pt3dadd( 479.354, 282.157, 39.3725, 0.6922 ) }
    dend_11 { pt3dadd( 480.277, 281.699, 39.9832, 0.7092 ) }
    dend_11 { pt3dadd( 480.958, 281.026, 40.7019, 0.6694 ) }
    dend_11 { pt3dadd( 481.672, 280.259, 41.3448, 0.714 ) }
    dend_11 { pt3dadd( 482.573, 279.588, 41.8802, 0.6796 ) }
    dend_11 { pt3dadd( 483.044, 278.599, 42.3455, 0.7278 ) }
    dend_11 { pt3dadd( 483.351, 277.507, 42.7011, 0.7282 ) }
    dend_11 { pt3dadd( 483.448, 276.369, 42.9218, 0.7048 ) }
    dend_11 { pt3dadd( 483.433, 275.32, 43.1861, 0.5512 ) }
    dend_11 { pt3dadd( 483.228, 274.24, 43.2452, 0.5698 ) }
    dend_11 { pt3dadd( 482.694, 273.352, 43.0704, 0.5052 ) }
    dend_11 { pt3dadd( 482.023, 272.428, 42.9136, 0.409 ) }
    dend_11 { pt3dadd( 481.672, 271.365, 42.8439, 0.346 ) }
    dend_11 { pt3dadd( 481.521, 270.232, 42.7476, 0.3556 ) }
    dend_11 { pt3dadd( 481.455, 269.124, 42.572, 0.4462 ) }
    dend_11 { pt3dadd( 481.945, 268.106, 42.4668, 0.4888 ) }
    dend_11 { pt3dadd( 482.473, 267.096, 42.2988, 0.4898 ) }
    dend_11 { pt3dadd( 483.077, 266.137, 42.0392, 0.4128 ) }
    dend_11 { pt3dadd( 483.777, 265.284, 41.6548, 0.4244 ) }
    dend_11 { pt3dadd( 484.62, 264.541, 41.2426, 0.382 ) }
    dend_11 { pt3dadd( 485.196, 263.563, 40.7904, 0.3848 ) }
    dend_11 { pt3dadd( 485.664, 262.563, 40.2427, 0.4532 ) }
    dend_11 { pt3dadd( 486.108, 261.602, 39.5774, 0.5032 ) }
    dend_11 { pt3dadd( 486.615, 260.648, 38.8539, 0.5102 ) }
    dend_11 { pt3dadd( 487.185, 259.707, 38.1254, 0.4812 ) }
    dend_11 { pt3dadd( 487.414, 258.613, 37.4161, 0.403 ) }
    dend_11 { pt3dadd( 487.25, 257.567, 36.7321, 0.3764 ) }
    dend_11 { pt3dadd( 486.594, 256.771, 35.9528, 0.4374 ) }
    dend_11 { pt3dadd( 485.845, 256.048, 35.1044, 0.473 ) }
    dend_11 { pt3dadd( 485.205, 255.217, 34.2115, 0.4592 ) }
    dend_11 { pt3dadd( 484.542, 254.388, 33.3158, 0.3612 ) }
    dend_11 { pt3dadd( 484.061, 253.533, 32.4341, 0.3036 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_11 { pt3dadd( 484.217, 252.52, 31.5843, 0.2812 ) }
    dend_11 { pt3dadd( 484.646, 251.543, 30.8162, 0.2872 ) }
    dend_11 { pt3dadd( 484.807, 250.542, 30.2187, 0.2974 ) }
    dend_11 { pt3dadd( 484.326, 249.561, 29.8208, 0.318 ) }
    dend_11 { pt3dadd( 483.808, 248.575, 29.5235, 0.3508 ) }
    dend_11 { pt3dadd( 483.613, 247.468, 29.3026, 0.4372 ) }
    dend_11 { pt3dadd( 483.443, 246.352, 29.1894, 0.4722 ) }
    dend_11 { pt3dadd( 483.483, 245.259, 29.2194, 0.4582 ) }
    dend_11 { pt3dadd( 483.741, 244.163, 29.314, 0.3594 ) }
    dend_11 { pt3dadd( 483.847, 243.036, 29.4034, 0.3002 ) }
    dend_11 { pt3dadd( 483.366, 242.055, 29.4493, 0.275 ) }
    dend_11 { pt3dadd( 482.585, 241.224, 29.4277, 0.2754 ) }
    dend_11 { pt3dadd( 481.774, 240.602, 29.1945, 0.2762 ) }
    dend_11 { pt3dadd( 480.775, 240.171, 28.868, 0.2776 ) }
    dend_11 { pt3dadd( 480.29, 239.248, 28.5785, 0.2798 ) }
    dend_11 { pt3dadd( 479.949, 238.18, 28.4077, 0.2844 ) }
    dend_11 { pt3dadd( 479.629, 237.101, 28.2313, 0.2928 ) }
    dend_11 { pt3dadd( 479.749, 236.012, 27.9969, 0.3094 ) }
    dend_11 { pt3dadd( 480.107, 234.932, 27.7858, 0.3338 ) }
    dend_11 { pt3dadd( 480.327, 233.811, 27.5887, 0.4106 ) }
    dend_11 { pt3dadd( 480.297, 232.671, 27.3753, 0.3988 ) }
    dend_11 { pt3dadd( 479.919, 231.605, 27.1099, 0.4408 ) }
    dend_11 { pt3dadd( 479.458, 230.561, 26.8254, 0.4372 ) }
    dend_11 { pt3dadd( 479.343, 229.458, 26.4354, 0.3674 ) }
    dend_11 { pt3dadd( 479.345, 228.339, 25.9636, 0.3164 ) }
    dend_11 { pt3dadd( 479.457, 227.24, 25.4248, 0.2994 ) }
    dend_11 { pt3dadd( 479.644, 226.12, 24.9889, 0.3476 ) }
    dend_11 { pt3dadd( 479.885, 225.065, 24.4927, 0.2796 ) }
    dend_11 { pt3dadd( 480.137, 224.224, 22.96, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 29/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 489.52, 348.266, 54.5339, 0.5564 ) }
    dend_3 { pt3dadd( 488.091, 348.555, 54.7142, 0.467 ) }
    dend_3 { pt3dadd( 486.976, 348.78, 54.7355, 0.4046 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 32/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 489.52, 348.266, 54.5339, 0.5564 ) }
    dend_2 { pt3dadd( 489.288, 348.926, 55.9832, 0.2288 ) }
    dend_2 { pt3dadd( 489.077, 350.002, 57.0097, 0.3162 ) }
    dend_2 { pt3dadd( 489.082, 351.112, 57.4563, 0.3772 ) }
    dend_2 { pt3dadd( 489.053, 352.246, 57.944, 0.3412 ) }
    dend_2 { pt3dadd( 488.818, 353.36, 58.4447, 0.3136 ) }
    dend_2 { pt3dadd( 488.442, 354.426, 59.0069, 0.2994 ) }
    dend_2 { pt3dadd( 488.056, 355.368, 59.7416, 0.3228 ) }
    dend_2 { pt3dadd( 488.174, 356.325, 60.627, 0.3538 ) }
    dend_2 { pt3dadd( 488.721, 357.175, 61.6232, 0.4722 ) }
    dend_2 { pt3dadd( 489.368, 358.095, 62.5789, 0.393 ) }
    dend_2 { pt3dadd( 489.061, 359.154, 63.5289, 0.3254 ) }
    dend_2 { pt3dadd( 488.614, 360.058, 64.5635, 0.2744 ) }
    dend_2 { pt3dadd( 488.237, 360.918, 65.6858, 0.2742 ) }
    dend_2 { pt3dadd( 488.136, 361.969, 66.7464, 0.2736 ) }
    dend_2 { pt3dadd( 488.133, 362.759, 67.9244, 0.2728 ) }
    dend_2 { pt3dadd( 488.035, 363.713, 69.1561, 0.2712 ) }
    dend_2 { pt3dadd( 487.551, 364.688, 70.2836, 0.2684 ) }
    dend_2 { pt3dadd( 487.004, 365.507, 71.3843, 0.2626 ) }
    dend_2 { pt3dadd( 486.675, 366.506, 72.3898, 0.2542 ) }
    dend_2 { pt3dadd( 486.654, 367.594, 73.2696, 0.2288 ) }
    dend_2 { pt3dadd( 487.115, 368.482, 75.04, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 54/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 499.737, 326.955, 33.9749, 0.3608 ) }
    dend_34 { pt3dadd( 499.637, 326.819, 32.7144, 0.3028 ) }
    dend_34 { pt3dadd( 499.512, 326.644, 31.113, 0.2796 ) }
    dend_34 { pt3dadd( 499.386, 326.47, 29.3104, 0.284 ) }
    dend_34 { pt3dadd( 499.188, 326.023, 27.4716, 0.292 ) }
    dend_34 { pt3dadd( 498.708, 325.168, 25.858, 0.3064 ) }
    dend_34 { pt3dadd( 497.877, 324.457, 24.5988, 0.3358 ) }
    dend_34 { pt3dadd( 497.268, 323.497, 23.7269, 0.3778 ) }
    dend_34 { pt3dadd( 496.498, 322.682, 23.2176, 0.5176 ) }
    dend_34 { pt3dadd( 496.483, 321.567, 23.0216, 0.4732 ) }
    dend_34 { pt3dadd( 496.538, 320.441, 22.8967, 0.494 ) }
    dend_34 { pt3dadd( 496.074, 319.429, 22.7634, 0.488 ) }
    dend_34 { pt3dadd( 495.301, 318.677, 22.5674, 0.4646 ) }
    dend_34 { pt3dadd( 495.165, 317.637, 22.3499, 0.4818 ) }
    dend_34 { pt3dadd( 495.417, 316.578, 22.3093, 0.6772 ) }
    dend_34 { pt3dadd( 495.551, 315.53, 22.4557, 0.7024 ) }
    dend_34 { pt3dadd( 495.432, 314.436, 22.5879, 0.5558 ) }
    dend_34 { pt3dadd( 495.349, 313.339, 22.7195, 0.5368 ) }
    dend_34 { pt3dadd( 495.664, 312.903, 23.1448, 0.418 ) }
    dend_34 { pt3dadd( 495.915, 312.06, 23.6443, 0.373 ) }
    dend_34 { pt3dadd( 495.766, 310.995, 23.8493, 0.356 ) }
    dend_34 { pt3dadd( 495.723, 309.918, 23.8188, 0.4576 ) }
    dend_34 { pt3dadd( 496.382, 308.994, 23.52, 0.4576 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 77/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 499.737, 326.955, 33.9749, 0.3608 ) }
    dend_33 { pt3dadd( 498.365, 326.659, 34.1032, 0.2288 ) }
    dend_33 { pt3dadd( 497.298, 326.393, 33.1792, 0.323 ) }
    dend_33 { pt3dadd( 496.221, 326.088, 32.837, 0.3904 ) }
    dend_33 { pt3dadd( 495.344, 325.484, 32.4915, 0.3644 ) }
    dend_33 { pt3dadd( 494.818, 324.669, 31.9035, 0.3592 ) }
    dend_33 { pt3dadd( 494.468, 323.677, 31.1769, 0.3734 ) }
    dend_33 { pt3dadd( 493.99, 322.701, 30.487, 0.51 ) }
    dend_33 { pt3dadd( 493.204, 321.925, 29.8869, 0.4578 ) }
    dend_33 { pt3dadd( 492.444, 321.564, 29.0332, 0.4716 ) }
    dend_33 { pt3dadd( 491.609, 321.111, 27.9994, 0.4184 ) }
    dend_33 { pt3dadd( 490.778, 320.673, 26.8652, 0.4718 ) }
    dend_33 { pt3dadd( 489.995, 320.519, 25.6211, 0.5198 ) }
    dend_33 { pt3dadd( 489.211, 319.828, 24.486, 0.3984 ) }
    dend_33 { pt3dadd( 488.444, 319.106, 23.4671, 0.2796 ) }
    dend_33 { pt3dadd( 487.458, 318.604, 21.84, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 93/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 504.847, 317.918, 35.7188, 0.5398 ) }
    dend_31 { pt3dadd( 506.356, 317.415, 35.3352, 0.2288 ) }
    dend_31 { pt3dadd( 507.272, 316.883, 34.2325, 0.4708 ) }
    dend_31 { pt3dadd( 508.22, 316.314, 33.7859, 0.4994 ) }
    dend_31 { pt3dadd( 509.042, 315.861, 33.1705, 0.6796 ) }
    dend_31 { pt3dadd( 509.374, 314.802, 32.5889, 0.6264 ) }
    dend_31 { pt3dadd( 510.103, 313.943, 32.1958, 0.577 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_31 { pt3dadd( 510.937, 313.223, 31.9791, 0.4744 ) }
    dend_31 { pt3dadd( 511.779, 312.465, 31.7579, 0.5662 ) }
    dend_31 { pt3dadd( 512.577, 311.702, 31.5798, 0.511 ) }
    dend_31 { pt3dadd( 513.334, 310.999, 31.1884, 0.5892 ) }
    dend_31 { pt3dadd( 513.913, 310.108, 30.6351, 0.5418 ) }
    dend_31 { pt3dadd( 514.521, 309.182, 30.0502, 0.474 ) }
    dend_31 { pt3dadd( 515.381, 308.536, 29.3429, 0.4804 ) }
    dend_31 { pt3dadd( 515.73, 307.738, 28.4782, 0.5364 ) }
    dend_31 { pt3dadd( 515.373, 306.83, 27.6105, 0.4274 ) }
    dend_31 { pt3dadd( 514.999, 305.83, 26.8285, 0.3418 ) }
    dend_31 { pt3dadd( 514.511, 305.09, 25.9778, 0.305 ) }
    dend_31 { pt3dadd( 514.315, 304.203, 25.1056, 0.3304 ) }
    dend_31 { pt3dadd( 514.378, 303.157, 24.5711, 0.3814 ) }
    dend_31 { pt3dadd( 515.258, 302.474, 23.8, 0.4576 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 504.847, 317.918, 35.7188, 0.5398 ) }
    dend_26 { pt3dadd( 504.504, 316.418, 35.7157, 0.5074 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 16/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 487.866, 294.058, 35.8266, 0.5988 ) }
    dend_16 { pt3dadd( 488.204, 293.143, 34.606, 0.2288 ) }
    dend_16 { pt3dadd( 488.281, 292.007, 34.2773, 0.3502 ) }
    dend_16 { pt3dadd( 488.27, 290.876, 34.1144, 0.4052 ) }
    dend_16 { pt3dadd( 488.537, 289.879, 33.8834, 0.5634 ) }
    dend_16 { pt3dadd( 489.452, 289.201, 33.6084, 0.5844 ) }
    dend_16 { pt3dadd( 490.288, 288.452, 33.341, 0.5706 ) }
    dend_16 { pt3dadd( 490.919, 287.518, 33.1075, 0.572 ) }
    dend_16 { pt3dadd( 491.444, 286.548, 32.7698, 0.446 ) }
    dend_16 { pt3dadd( 491.666, 285.572, 32.2409, 0.3782 ) }
    dend_16 { pt3dadd( 491.523, 284.555, 31.5622, 0.3618 ) }
    dend_16 { pt3dadd( 491.423, 283.474, 30.919, 0.4872 ) }
    dend_16 { pt3dadd( 491.717, 282.4, 30.3565, 0.422 ) }
    dend_16 { pt3dadd( 491.774, 281.353, 29.6982, 0.3734 ) }
    dend_16 { pt3dadd( 491.38, 280.461, 28.8985, 0.3892 ) }
    dend_16 { pt3dadd( 491.116, 279.566, 27.972, 0.3626 ) }
    dend_16 { pt3dadd( 491.239, 278.742, 26.9153, 0.3556 ) }
    dend_16 { pt3dadd( 492.046, 278.039, 25.9683, 0.3672 ) }
    dend_16 { pt3dadd( 492.853, 277.237, 25.2479, 0.4972 ) }
    dend_16 { pt3dadd( 493.669, 276.564, 24.5666, 0.4406 ) }
    dend_16 { pt3dadd( 494.437, 275.897, 23.9, 0.4068 ) }
    dend_16 { pt3dadd( 495.382, 275.269, 23.4083, 0.4576 ) }
    dend_16 { pt3dadd( 495.81, 274.217, 22.68, 0.4576 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 39/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 487.866, 294.058, 35.8266, 0.5988 ) }
    dend_15 { pt3dadd( 487.453, 293.094, 35.1896, 0.5048 ) }
    dend_15 { pt3dadd( 486.963, 292.205, 34.7774, 0.4416 ) }
    dend_15 { pt3dadd( 486.107, 291.622, 34.3384, 0.4728 ) }
    dend_15 { pt3dadd( 485.153, 291.285, 33.7557, 0.498 ) }
    dend_15 { pt3dadd( 484.233, 290.684, 33.2503, 0.471 ) }
    dend_15 { pt3dadd( 483.496, 289.83, 32.7496, 0.5532 ) }
    dend_15 { pt3dadd( 482.833, 288.9, 32.2608, 0.5212 ) }
    dend_15 { pt3dadd( 482.665, 287.905, 31.6148, 0.4408 ) }
    dend_15 { pt3dadd( 482.396, 287.153, 30.7871, 0.3936 ) }
    dend_15 { pt3dadd( 481.53, 286.496, 30.0292, 0.499 ) }
    dend_15 { pt3dadd( 480.511, 286.189, 29.2146, 0.4438 ) }
    dend_15 { pt3dadd( 479.551, 285.716, 28.4018, 0.4148 ) }
    dend_15 { pt3dadd( 478.707, 285.028, 27.61, 0.4626 ) }
    dend_15 { pt3dadd( 477.744, 284.481, 26.9052, 0.5142 ) }
    dend_15 { pt3dadd( 476.694, 284.028, 26.3399, 0.5614 ) }
    dend_15 { pt3dadd( 475.775, 283.63, 25.7373, 0.4268 ) }
    dend_15 { pt3dadd( 475.28, 282.995, 25.0205, 0.3402 ) }
    dend_15 { pt3dadd( 475.085, 281.953, 24.3426, 0.3034 ) }
    dend_15 { pt3dadd( 474.837, 280.847, 23.8053, 0.3226 ) }
    dend_15 { pt3dadd( 474.373, 279.814, 23.3996, 0.389 ) }
    dend_15 { pt3dadd( 473.669, 278.944, 23.1672, 0.3638 ) }
    dend_15 { pt3dadd( 472.774, 278.335, 23.1554, 0.35 ) }
    dend_15 { pt3dadd( 471.695, 278.193, 23.14, 0.3942 ) }
    dend_15 { pt3dadd( 470.567, 278.177, 23.135, 0.3672 ) }
    dend_15 { pt3dadd( 469.61, 277.746, 22.9838, 0.387 ) }
    dend_15 { pt3dadd( 468.663, 277.15, 22.7553, 0.3134 ) }
    dend_15 { pt3dadd( 468.052, 276.211, 22.552, 0.2542 ) }
    dend_15 { pt3dadd( 467.553, 275.246, 21.84, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 68/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 486.976, 348.78, 54.7355, 0.4046 ) }
    dend_7 { pt3dadd( 486.417, 349.471, 54.5782, 0.4724 ) }
    dend_7 { pt3dadd( 486.052, 350.431, 54.5076, 0.3936 ) }
    dend_7 { pt3dadd( 485.301, 351.143, 54.2626, 0.326 ) }
    dend_7 { pt3dadd( 484.404, 351.826, 54.0226, 0.2758 ) }
    dend_7 { pt3dadd( 483.878, 352.742, 53.7337, 0.2766 ) }
    dend_7 { pt3dadd( 483.534, 353.569, 53.5489, 0.2784 ) }
    dend_7 { pt3dadd( 483.012, 354.264, 53.5419, 0.2816 ) }
    dend_7 { pt3dadd( 482.848, 355.021, 53.3092, 0.2874 ) }
    dend_7 { pt3dadd( 482.722, 355.863, 52.934, 0.2994 ) }
    dend_7 { pt3dadd( 482.174, 356.798, 52.7156, 0.3156 ) }
    dend_7 { pt3dadd( 481.734, 357.791, 52.3846, 0.3762 ) }
    dend_7 { pt3dadd( 481.304, 358.823, 52.022, 0.3388 ) }
    dend_7 { pt3dadd( 480.804, 359.764, 51.8409, 0.3094 ) }
    dend_7 { pt3dadd( 480.851, 360.806, 51.5861, 0.292 ) }
    dend_7 { pt3dadd( 481.133, 361.62, 51.2078, 0.3078 ) }
    dend_7 { pt3dadd( 481.313, 362.704, 50.974, 0.3306 ) }
    dend_7 { pt3dadd( 481.638, 363.793, 50.7438, 0.4052 ) }
    dend_7 { pt3dadd( 481.855, 364.88, 50.4731, 0.3874 ) }
    dend_7 { pt3dadd( 481.711, 366.006, 50.2163, 0.4244 ) }
    dend_7 { pt3dadd( 481.536, 367.126, 50.0108, 0.3834 ) }
    dend_7 { pt3dadd( 481.552, 368.082, 49.6563, 0.3812 ) }
    dend_7 { pt3dadd( 481.598, 368.962, 49.1, 0.4762 ) }
    dend_7 { pt3dadd( 481.391, 370.06, 48.5881, 0.4006 ) }
    dend_7 { pt3dadd( 481.174, 371.124, 48.2664, 0.3388 ) }
    dend_7 { pt3dadd( 480.716, 372.081, 48.0567, 0.3004 ) }
    dend_7 { pt3dadd( 480.239, 373.045, 47.7711, 0.3174 ) }
    dend_7 { pt3dadd( 479.913, 374.05, 47.4102, 0.3796 ) }
    dend_7 { pt3dadd( 479.942, 375.148, 47.0733, 0.3452 ) }
    dend_7 { pt3dadd( 479.627, 376.201, 46.8524, 0.321 ) }
    dend_7 { pt3dadd( 479.509, 377.235, 46.8261, 0.313 ) }
    dend_7 { pt3dadd( 479.665, 378.235, 46.6567, 0.348 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_7 { pt3dadd( 479.48, 379.27, 46.4089, 0.401 ) }
    dend_7 { pt3dadd( 479.633, 380.365, 46.3602, 0.556 ) }
    dend_7 { pt3dadd( 479.389, 381.48, 46.3215, 0.5682 ) }
    dend_7 { pt3dadd( 479.231, 382.596, 46.3064, 0.5534 ) }
    dend_7 { pt3dadd( 479.35, 383.672, 46.4248, 0.4792 ) }
    dend_7 { pt3dadd( 479.132, 384.772, 46.5962, 0.569 ) }
    dend_7 { pt3dadd( 478.496, 385.648, 46.7432, 0.5454 ) }
    dend_7 { pt3dadd( 477.686, 386.232, 46.6869, 0.5104 ) }
    dend_7 { pt3dadd( 477.419, 387.249, 46.5144, 0.404 ) }
    dend_7 { pt3dadd( 477.329, 388.364, 46.3826, 0.4084 ) }
    dend_7 { pt3dadd( 477.284, 389.477, 46.4489, 0.3514 ) }
    dend_7 { pt3dadd( 477.191, 390.559, 46.7435, 0.3338 ) }
    dend_7 { pt3dadd( 476.905, 391.627, 47.1957, 0.3318 ) }
    dend_7 { pt3dadd( 476.698, 392.575, 47.878, 0.4072 ) }
    dend_7 { pt3dadd( 476.501, 393.44, 48.7362, 0.3912 ) }
    dend_7 { pt3dadd( 475.973, 394.365, 49.5272, 0.4318 ) }
    dend_7 { pt3dadd( 475.591, 395.371, 50.2449, 0.3968 ) }
    dend_7 { pt3dadd( 475.182, 396.386, 50.9082, 0.4068 ) }
    dend_7 { pt3dadd( 474.72, 397.421, 51.4013, 0.5186 ) }
    dend_7 { pt3dadd( 474.656, 398.501, 51.8658, 0.5046 ) }
    dend_7 { pt3dadd( 474.512, 399.52, 52.423, 0.4088 ) }
    dend_7 { pt3dadd( 474.037, 400.508, 52.8609, 0.3396 ) }
    dend_7 { pt3dadd( 473.543, 401.488, 53.3515, 0.3734 ) }
    dend_7 { pt3dadd( 473.269, 402.547, 53.9078, 0.3338 ) }
    dend_7 { pt3dadd( 473.022, 403.623, 54.5068, 0.3 ) }
    dend_7 { pt3dadd( 472.774, 404.701, 55.1102, 0.2746 ) }
    dend_7 { pt3dadd( 472.527, 405.779, 55.7038, 0.2746 ) }
    dend_7 { pt3dadd( 472.28, 406.857, 56.2923, 0.2746 ) }
    dend_7 { pt3dadd( 472.033, 407.94, 56.831, 0.2748 ) }
    dend_7 { pt3dadd( 471.788, 409.058, 57.2376, 0.2748 ) }
    dend_7 { pt3dadd( 471.544, 410.176, 57.5487, 0.2752 ) }
    dend_7 { pt3dadd( 471.299, 411.293, 57.7973, 0.2758 ) }
    dend_7 { pt3dadd( 471.521, 412.401, 58.0664, 0.2766 ) }
    dend_7 { pt3dadd( 471.758, 413.508, 58.3663, 0.2782 ) }
    dend_7 { pt3dadd( 471.994, 414.615, 58.7026, 0.2814 ) }
    dend_7 { pt3dadd( 472.229, 415.722, 59.0775, 0.287 ) }
    dend_7 { pt3dadd( 472.465, 416.829, 59.479, 0.2988 ) }
    dend_7 { pt3dadd( 472.685, 417.939, 59.8959, 0.3142 ) }
    dend_7 { pt3dadd( 472.693, 419.077, 60.3072, 0.3734 ) }
    dend_7 { pt3dadd( 472.7, 420.214, 60.7258, 0.3338 ) }
    dend_7 { pt3dadd( 472.708, 421.352, 61.168, 0.3 ) }
    dend_7 { pt3dadd( 472.715, 422.49, 61.6524, 0.2746 ) }
    dend_7 { pt3dadd( 472.723, 423.628, 62.1986, 0.2746 ) }
    dend_7 { pt3dadd( 472.719, 424.762, 62.8272, 0.2746 ) }
    dend_7 { pt3dadd( 472.22, 425.673, 63.6698, 0.2746 ) }
    dend_7 { pt3dadd( 471.723, 426.585, 64.6786, 0.2746 ) }
    dend_7 { pt3dadd( 471.496, 427.22, 65.9316, 0.2746 ) }
    dend_7 { pt3dadd( 471.386, 427.737, 67.3862, 0.2746 ) }
    dend_7 { pt3dadd( 471.276, 428.253, 68.9304, 0.2746 ) }
    dend_7 { pt3dadd( 471.167, 429.01, 70.3259, 0.2746 ) }
    dend_7 { pt3dadd( 471.099, 430.151, 71.3146, 0.2748 ) }
    dend_7 { pt3dadd( 471.099, 431.295, 71.9589, 0.2748 ) }
    dend_7 { pt3dadd( 471.144, 432.437, 72.3201, 0.275 ) }
    dend_7 { pt3dadd( 471.233, 433.577, 72.4805, 0.2754 ) }
    dend_7 { pt3dadd( 471.289, 434.719, 72.5239, 0.2762 ) }
    dend_7 { pt3dadd( 471.328, 435.862, 72.5256, 0.2776 ) }
    dend_7 { pt3dadd( 471.328, 437.006, 72.5278, 0.2802 ) }
    dend_7 { pt3dadd( 471.347, 438.15, 72.5309, 0.285 ) }
    dend_7 { pt3dadd( 471.447, 439.288, 72.5351, 0.2938 ) }
    dend_7 { pt3dadd( 471.601, 440.421, 72.5413, 0.3112 ) }
    dend_7 { pt3dadd( 471.781, 441.548, 72.55, 0.3382 ) }
    dend_7 { pt3dadd( 472.027, 442.665, 72.562, 0.413 ) }
    dend_7 { pt3dadd( 472.312, 443.77, 72.5771, 0.4326 ) }
    dend_7 { pt3dadd( 472.656, 444.86, 72.597, 0.3592 ) }
    dend_7 { pt3dadd( 473.237, 445.768, 72.6396, 0.3 ) }
    dend_7 { pt3dadd( 474.056, 446.553, 72.693, 0.2746 ) }
    dend_7 { pt3dadd( 474.884, 447.34, 72.7345, 0.2746 ) }
    dend_7 { pt3dadd( 475.509, 448.275, 72.7653, 0.2746 ) }
    dend_7 { pt3dadd( 476.077, 449.268, 72.7854, 0.2746 ) }
    dend_7 { pt3dadd( 476.765, 450.179, 72.7966, 0.2746 ) }
    dend_7 { pt3dadd( 476.939, 451.29, 72.8, 0.2744 ) }
    dend_7 { pt3dadd( 477.038, 452.429, 72.8, 0.2744 ) }
    dend_7 { pt3dadd( 477.048, 453.573, 72.8, 0.2742 ) }
    dend_7 { pt3dadd( 477.104, 454.716, 72.8, 0.2736 ) }
    dend_7 { pt3dadd( 477.283, 455.845, 72.8, 0.2728 ) }
    dend_7 { pt3dadd( 477.592, 456.946, 72.8, 0.2712 ) }
    dend_7 { pt3dadd( 477.873, 458.054, 72.8, 0.2684 ) }
    dend_7 { pt3dadd( 478.367, 459.084, 72.8, 0.2626 ) }
    dend_7 { pt3dadd( 478.681, 460.182, 72.8, 0.2542 ) }
    dend_7 { pt3dadd( 479.492, 460.975, 72.8, 0.2288 ) }
    dend_7 { pt3dadd( 480.594, 461.261, 72.8, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 81/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 486.976, 348.78, 54.7355, 0.4046 ) }
    dend_4 { pt3dadd( 485.987, 348.07, 53.244, 0.2288 ) }
    dend_4 { pt3dadd( 485.026, 347.793, 52.1189, 0.2748 ) }
    dend_4 { pt3dadd( 484.064, 347.516, 51.6214, 0.2748 ) }
    dend_4 { pt3dadd( 483.103, 347.238, 51.1104, 0.2752 ) }
    dend_4 { pt3dadd( 482.142, 346.961, 50.6713, 0.2758 ) }
    dend_4 { pt3dadd( 481.102, 346.784, 50.409, 0.2766 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 88/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 504.504, 316.418, 35.7157, 0.5074 ) }
    dend_28 { pt3dadd( 503.939, 316.541, 34.4702, 0.2288 ) }
    dend_28 { pt3dadd( 502.932, 316.427, 32.9804, 0.3338 ) }
    dend_28 { pt3dadd( 502.613, 315.837, 32.1894, 0.3814 ) }
    dend_28 { pt3dadd( 502.788, 314.752, 31.5434, 0.4878 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 504.504, 316.418, 35.7157, 0.5074 ) }
    dend_27 { pt3dadd( 504.674, 315.031, 35.964, 0.5906 ) }
    dend_27 { pt3dadd( 504.784, 314.123, 36.3429, 0.5072 ) }
    dend_27 { pt3dadd( 504.987, 313.017, 36.6758, 0.5904 ) }
    dend_27 { pt3dadd( 505.157, 311.89, 37.06, 0.5068 ) }
    dend_27 { pt3dadd( 505.792, 311.034, 37.5038, 0.589 ) }
    dend_27 { pt3dadd( 506.364, 310.137, 38.0654, 0.5058 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_27 { pt3dadd( 506.339, 309.22, 38.848, 0.5802 ) }
    dend_27 { pt3dadd( 506.005, 308.242, 39.7653, 0.5242 ) }
    dend_27 { pt3dadd( 506.063, 307.197, 40.7655, 0.4462 ) }
    dend_27 { pt3dadd( 506.493, 306.249, 41.8155, 0.4042 ) }
    dend_27 { pt3dadd( 506.373, 305.254, 42.8935, 0.5138 ) }
    dend_27 { pt3dadd( 505.895, 304.527, 44.0311, 0.4958 ) }
    dend_27 { pt3dadd( 505.252, 303.755, 45.1077, 0.3918 ) }
    dend_27 { pt3dadd( 504.586, 302.892, 46.0314, 0.3126 ) }
    dend_27 { pt3dadd( 504.768, 301.822, 46.6217, 0.299 ) }
    dend_27 { pt3dadd( 505.28, 300.845, 47.1052, 0.3146 ) }
    dend_27 { pt3dadd( 505.762, 299.95, 47.672, 0.3746 ) }
    dend_27 { pt3dadd( 506.227, 298.917, 48.1869, 0.3358 ) }
    dend_27 { pt3dadd( 506.47, 298.022, 48.876, 0.3038 ) }
    dend_27 { pt3dadd( 506.666, 297.251, 49.7972, 0.2816 ) }
    dend_27 { pt3dadd( 507.026, 296.214, 50.6489, 0.2876 ) }
    dend_27 { pt3dadd( 507.072, 295.295, 51.5343, 0.2986 ) }
    dend_27 { pt3dadd( 506.964, 294.388, 52.5249, 0.32 ) }
    dend_27 { pt3dadd( 507.158, 293.346, 53.4492, 0.3546 ) }
    dend_27 { pt3dadd( 507.254, 292.305, 54.3273, 0.4446 ) }
    dend_27 { pt3dadd( 507.373, 291.217, 55.1233, 0.486 ) }
    dend_27 { pt3dadd( 507.6, 290.102, 55.8082, 0.4846 ) }
    dend_27 { pt3dadd( 507.792, 289.0, 56.4318, 0.4032 ) }
    dend_27 { pt3dadd( 507.729, 287.873, 56.9682, 0.4068 ) }
    dend_27 { pt3dadd( 507.579, 286.764, 57.5081, 0.3486 ) }
    dend_27 { pt3dadd( 507.624, 285.823, 58.1938, 0.3284 ) }
    dend_27 { pt3dadd( 507.61, 284.755, 58.9056, 0.322 ) }
    dend_27 { pt3dadd( 507.766, 283.658, 59.5871, 0.388 ) }
    dend_27 { pt3dadd( 508.157, 282.6, 60.1896, 0.3608 ) }
    dend_27 { pt3dadd( 508.223, 281.467, 60.6726, 0.351 ) }
    dend_27 { pt3dadd( 508.149, 280.328, 61.0562, 0.3642 ) }
    dend_27 { pt3dadd( 508.259, 279.312, 61.5219, 0.4636 ) }
    dend_27 { pt3dadd( 508.525, 278.211, 61.861, 0.5158 ) }
    dend_27 { pt3dadd( 508.805, 277.11, 62.1874, 0.5644 ) }
    dend_27 { pt3dadd( 508.803, 275.969, 62.4865, 0.4322 ) }
    dend_27 { pt3dadd( 508.96, 274.837, 62.7427, 0.3506 ) }
    dend_27 { pt3dadd( 509.022, 273.898, 63.175, 0.322 ) }
    dend_27 { pt3dadd( 509.125, 272.759, 63.4956, 0.3584 ) }
    dend_27 { pt3dadd( 509.195, 271.625, 63.7294, 0.4508 ) }
    dend_27 { pt3dadd( 509.423, 270.511, 63.9352, 0.4988 ) }
    dend_27 { pt3dadd( 509.639, 269.417, 64.038, 0.502 ) }
    dend_27 { pt3dadd( 509.816, 268.323, 64.1292, 0.466 ) }
    dend_27 { pt3dadd( 509.713, 267.253, 64.4045, 0.3738 ) }
    dend_27 { pt3dadd( 509.63, 266.227, 64.8939, 0.3278 ) }
    dend_27 { pt3dadd( 509.765, 265.136, 65.4755, 0.321 ) }
    dend_27 { pt3dadd( 510.031, 264.032, 66.0654, 0.3862 ) }
    dend_27 { pt3dadd( 510.366, 262.967, 66.6876, 0.3586 ) }
    dend_27 { pt3dadd( 510.794, 261.914, 67.2465, 0.3406 ) }
    dend_27 { pt3dadd( 511.039, 260.823, 67.8303, 0.3754 ) }
    dend_27 { pt3dadd( 511.259, 259.862, 68.5376, 0.3374 ) }
    dend_27 { pt3dadd( 511.503, 259.129, 69.47, 0.3068 ) }
    dend_27 { pt3dadd( 511.591, 258.13, 70.3707, 0.287 ) }
    dend_27 { pt3dadd( 511.687, 257.008, 71.1642, 0.2988 ) }
    dend_27 { pt3dadd( 512.107, 255.981, 71.8782, 0.3142 ) }
    dend_27 { pt3dadd( 512.511, 255.025, 72.6127, 0.3734 ) }
    dend_27 { pt3dadd( 513.141, 254.141, 73.2967, 0.3338 ) }
    dend_27 { pt3dadd( 513.925, 253.37, 73.962, 0.3 ) }
    dend_27 { pt3dadd( 514.597, 252.5, 74.6388, 0.2746 ) }
    dend_27 { pt3dadd( 515.132, 251.631, 75.3892, 0.2746 ) }
    dend_27 { pt3dadd( 515.731, 250.692, 76.0564, 0.2746 ) }
    dend_27 { pt3dadd( 516.3, 249.719, 76.6508, 0.2746 ) }
    dend_27 { pt3dadd( 516.981, 248.81, 77.1638, 0.2746 ) }
    dend_27 { pt3dadd( 517.612, 247.895, 77.6642, 0.2746 ) }
    dend_27 { pt3dadd( 518.302, 247.014, 78.1438, 0.2748 ) }
    dend_27 { pt3dadd( 519.111, 246.217, 78.5604, 0.2748 ) }
    dend_27 { pt3dadd( 520.065, 245.664, 78.9888, 0.2752 ) }
    dend_27 { pt3dadd( 520.873, 244.98, 79.455, 0.2758 ) }
    dend_27 { pt3dadd( 521.553, 244.083, 79.8367, 0.2766 ) }
    dend_27 { pt3dadd( 521.998, 243.033, 80.0839, 0.2782 ) }
    dend_27 { pt3dadd( 522.384, 241.956, 80.2018, 0.2814 ) }
    dend_27 { pt3dadd( 522.789, 240.946, 80.0839, 0.287 ) }
    dend_27 { pt3dadd( 523.219, 239.889, 79.8963, 0.2988 ) }
    dend_27 { pt3dadd( 523.842, 238.931, 79.6706, 0.3142 ) }
    dend_27 { pt3dadd( 524.27, 237.974, 79.2736, 0.3734 ) }
    dend_27 { pt3dadd( 524.676, 236.906, 78.9116, 0.3338 ) }
    dend_27 { pt3dadd( 525.231, 235.91, 78.5652, 0.3 ) }
    dend_27 { pt3dadd( 525.644, 234.872, 78.1752, 0.2746 ) }
    dend_27 { pt3dadd( 525.893, 233.76, 77.7888, 0.2748 ) }
    dend_27 { pt3dadd( 526.23, 232.67, 77.4556, 0.2748 ) }
    dend_27 { pt3dadd( 526.861, 231.738, 77.084, 0.275 ) }
    dend_27 { pt3dadd( 527.437, 230.809, 76.6164, 0.2754 ) }
    dend_27 { pt3dadd( 527.866, 229.795, 76.0964, 0.2762 ) }
    dend_27 { pt3dadd( 528.24, 228.744, 75.5703, 0.2776 ) }
    dend_27 { pt3dadd( 528.596, 227.671, 75.0744, 0.2802 ) }
    dend_27 { pt3dadd( 528.825, 226.573, 74.5993, 0.285 ) }
    dend_27 { pt3dadd( 528.908, 225.441, 74.2059, 0.294 ) }
    dend_27 { pt3dadd( 529.271, 224.384, 73.836, 0.3114 ) }
    dend_27 { pt3dadd( 529.817, 223.381, 73.5459, 0.3388 ) }
    dend_27 { pt3dadd( 530.384, 222.396, 73.2886, 0.4142 ) }
    dend_27 { pt3dadd( 531.06, 221.483, 73.0663, 0.435 ) }
    dend_27 { pt3dadd( 531.637, 220.512, 72.9352, 0.3632 ) }
    dend_27 { pt3dadd( 532.109, 219.488, 72.7647, 0.3072 ) }
    dend_27 { pt3dadd( 532.672, 218.501, 72.639, 0.2878 ) }
    dend_27 { pt3dadd( 533.49, 217.717, 72.5124, 0.3004 ) }
    dend_27 { pt3dadd( 534.394, 217.097, 72.2988, 0.3172 ) }
    dend_27 { pt3dadd( 535.133, 216.272, 72.0737, 0.3792 ) }
    dend_27 { pt3dadd( 535.627, 215.24, 71.9284, 0.3444 ) }
    dend_27 { pt3dadd( 536.225, 214.266, 71.8757, 0.3192 ) }
    dend_27 { pt3dadd( 536.911, 213.353, 71.9079, 0.3112 ) }
    dend_27 { pt3dadd( 537.664, 212.491, 72.0303, 0.3382 ) }
    dend_27 { pt3dadd( 538.347, 211.578, 72.2408, 0.413 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_27 { pt3dadd( 538.95, 210.701, 72.5911, 0.4326 ) }
    dend_27 { pt3dadd( 539.772, 210.221, 73.1755, 0.3592 ) }
    dend_27 { pt3dadd( 540.761, 209.757, 73.8133, 0.3 ) }
    dend_27 { pt3dadd( 541.497, 208.964, 74.4803, 0.2746 ) }
    dend_27 { pt3dadd( 542.024, 208.038, 75.2108, 0.2746 ) }
    dend_27 { pt3dadd( 542.511, 207.078, 75.9478, 0.2746 ) }
    dend_27 { pt3dadd( 542.852, 206.12, 76.6982, 0.2746 ) }
    dend_27 { pt3dadd( 543.011, 205.053, 77.341, 0.2746 ) }
    dend_27 { pt3dadd( 543.169, 203.923, 77.8148, 0.2746 ) }
    dend_27 { pt3dadd( 543.503, 202.833, 78.1315, 0.2746 ) }
    dend_27 { pt3dadd( 543.792, 201.731, 78.3191, 0.2746 ) }
    dend_27 { pt3dadd( 544.159, 200.651, 78.4174, 0.2746 ) }
    dend_27 { pt3dadd( 544.446, 199.548, 78.4616, 0.2746 ) }
    dend_27 { pt3dadd( 544.794, 198.461, 78.4913, 0.2746 ) }
    dend_27 { pt3dadd( 544.887, 197.334, 78.528, 0.2746 ) }
    dend_27 { pt3dadd( 544.887, 196.19, 78.5778, 0.2746 ) }
    dend_27 { pt3dadd( 544.887, 195.046, 78.6486, 0.2746 ) }
    dend_27 { pt3dadd( 544.887, 193.902, 78.7514, 0.2746 ) }
    dend_27 { pt3dadd( 544.887, 192.758, 78.8945, 0.2746 ) }
    dend_27 { pt3dadd( 544.863, 191.614, 79.081, 0.2746 ) }
    dend_27 { pt3dadd( 544.664, 190.492, 79.3103, 0.2746 ) }
    dend_27 { pt3dadd( 544.552, 189.51, 79.7518, 0.2746 ) }
    dend_27 { pt3dadd( 544.544, 188.626, 80.4196, 0.2746 ) }
    dend_27 { pt3dadd( 544.544, 187.523, 81.0617, 0.2746 ) }
    dend_27 { pt3dadd( 544.544, 186.382, 81.576, 0.2746 ) }
    dend_27 { pt3dadd( 544.544, 185.238, 81.972, 0.2746 ) }
    dend_27 { pt3dadd( 544.571, 184.094, 82.2662, 0.2746 ) }
    dend_27 { pt3dadd( 544.788, 182.974, 82.5023, 0.2748 ) }
    dend_27 { pt3dadd( 544.987, 181.848, 82.7078, 0.2748 ) }
    dend_27 { pt3dadd( 545.113, 180.713, 82.9433, 0.2752 ) }
    dend_27 { pt3dadd( 545.381, 179.673, 83.3269, 0.2758 ) }
    dend_27 { pt3dadd( 545.665, 178.572, 83.7217, 0.2766 ) }
    dend_27 { pt3dadd( 545.977, 177.5, 84.1674, 0.2782 ) }
    dend_27 { pt3dadd( 546.063, 176.383, 84.6294, 0.2814 ) }
    dend_27 { pt3dadd( 546.611, 175.379, 85.0284, 0.2872 ) }
    dend_27 { pt3dadd( 547.063, 174.338, 85.4188, 0.2988 ) }
    dend_27 { pt3dadd( 547.279, 173.225, 85.8035, 0.3142 ) }
    dend_27 { pt3dadd( 547.328, 172.126, 86.2641, 0.3736 ) }
    dend_27 { pt3dadd( 547.555, 171.034, 86.7356, 0.3342 ) }
    dend_27 { pt3dadd( 548.094, 170.131, 87.3006, 0.3006 ) }
    dend_27 { pt3dadd( 548.71, 169.203, 87.857, 0.2758 ) }
    dend_27 { pt3dadd( 549.154, 168.17, 88.3638, 0.2766 ) }
    dend_27 { pt3dadd( 549.521, 167.103, 88.8065, 0.2782 ) }
    dend_27 { pt3dadd( 550.047, 166.089, 89.1573, 0.2814 ) }
    dend_27 { pt3dadd( 550.664, 165.131, 89.4233, 0.287 ) }
    dend_27 { pt3dadd( 551.366, 164.227, 89.6319, 0.2988 ) }
    dend_27 { pt3dadd( 552.053, 163.312, 89.8246, 0.3142 ) }
    dend_27 { pt3dadd( 552.726, 162.408, 90.0642, 0.3734 ) }
    dend_27 { pt3dadd( 553.434, 161.572, 90.4176, 0.3338 ) }
    dend_27 { pt3dadd( 554.215, 160.766, 90.8264, 0.3 ) }
    dend_27 { pt3dadd( 554.647, 159.762, 91.2663, 0.2746 ) }
    dend_27 { pt3dadd( 554.726, 158.632, 91.7078, 0.2746 ) }
    dend_27 { pt3dadd( 554.726, 157.49, 92.1281, 0.2746 ) }
    dend_27 { pt3dadd( 554.721, 156.503, 92.6526, 0.2746 ) }
    dend_27 { pt3dadd( 554.647, 155.479, 93.2274, 0.2746 ) }
    dend_27 { pt3dadd( 554.267, 154.45, 93.7731, 0.2746 ) }
    dend_27 { pt3dadd( 553.644, 153.501, 94.2119, 0.2746 ) }
    dend_27 { pt3dadd( 553.051, 152.523, 94.5414, 0.2746 ) }
    dend_27 { pt3dadd( 552.403, 151.58, 94.7859, 0.2746 ) }
    dend_27 { pt3dadd( 551.708, 150.673, 94.967, 0.2746 ) }
    dend_27 { pt3dadd( 550.996, 149.777, 95.1303, 0.2746 ) }
    dend_27 { pt3dadd( 550.232, 148.925, 95.3182, 0.2746 ) }
    dend_27 { pt3dadd( 549.478, 148.099, 95.6413, 0.2746 ) }
    dend_27 { pt3dadd( 549.126, 147.018, 96.0487, 0.2746 ) }
    dend_27 { pt3dadd( 548.412, 146.127, 96.4916, 0.2746 ) }
    dend_27 { pt3dadd( 548.082, 145.111, 97.1057, 0.2746 ) }
    dend_27 { pt3dadd( 547.657, 144.325, 97.9261, 0.2746 ) }
    dend_27 { pt3dadd( 547.119, 143.991, 98.9696, 0.2746 ) }
    dend_27 { pt3dadd( 546.499, 143.344, 99.9639, 0.2746 ) }
    dend_27 { pt3dadd( 545.911, 142.378, 100.711, 0.2746 ) }
    dend_27 { pt3dadd( 545.393, 141.359, 101.233, 0.2746 ) }
    dend_27 { pt3dadd( 544.702, 140.457, 101.551, 0.2746 ) }
    dend_27 { pt3dadd( 543.994, 139.563, 101.734, 0.2746 ) }
    dend_27 { pt3dadd( 543.26, 138.691, 101.826, 0.2746 ) }
    dend_27 { pt3dadd( 542.487, 137.847, 101.876, 0.2746 ) }
    dend_27 { pt3dadd( 542.097, 136.816, 101.918, 0.2746 ) }
    dend_27 { pt3dadd( 542.029, 135.676, 101.954, 0.2746 ) }
    dend_27 { pt3dadd( 541.778, 134.573, 101.985, 0.2746 ) }
    dend_27 { pt3dadd( 541.493, 133.466, 102.017, 0.2746 ) }
    dend_27 { pt3dadd( 541.468, 132.327, 102.055, 0.2746 ) }
    dend_27 { pt3dadd( 541.625, 131.194, 102.109, 0.2746 ) }
    dend_27 { pt3dadd( 541.967, 130.105, 102.184, 0.2746 ) }
    dend_27 { pt3dadd( 542.231, 128.992, 102.291, 0.2746 ) }
    dend_27 { pt3dadd( 542.478, 127.875, 102.44, 0.2746 ) }
    dend_27 { pt3dadd( 542.581, 126.737, 102.642, 0.2746 ) }
    dend_27 { pt3dadd( 542.847, 125.625, 102.908, 0.2746 ) }
    dend_27 { pt3dadd( 543.08, 124.548, 103.348, 0.2746 ) }
    dend_27 { pt3dadd( 543.263, 123.482, 103.96, 0.2746 ) }
    dend_27 { pt3dadd( 543.315, 122.408, 104.712, 0.2746 ) }
    dend_27 { pt3dadd( 543.062, 121.366, 105.57, 0.2746 ) }
    dend_27 { pt3dadd( 542.797, 120.325, 106.5, 0.2746 ) }
    dend_27 { pt3dadd( 542.532, 119.285, 107.471, 0.2746 ) }
    dend_27 { pt3dadd( 542.267, 118.244, 108.458, 0.2746 ) }
    dend_27 { pt3dadd( 542.001, 117.203, 109.457, 0.2746 ) }
    dend_27 { pt3dadd( 541.737, 116.163, 110.47, 0.2746 ) }
    dend_27 { pt3dadd( 541.471, 115.122, 111.501, 0.2746 ) }
    dend_27 { pt3dadd( 541.207, 114.081, 112.554, 0.2746 ) }
    dend_27 { pt3dadd( 540.875, 113.092, 113.657, 0.2746 ) }
    dend_27 { pt3dadd( 540.501, 112.143, 114.821, 0.2746 ) }
    dend_27 { pt3dadd( 540.125, 111.196, 116.036, 0.2744 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( 539.748, 110.248, 117.293, 0.2744 ) }
    dend_27 { pt3dadd( 539.373, 109.301, 118.582, 0.2742 ) }
    dend_27 { pt3dadd( 538.997, 108.354, 119.894, 0.2736 ) }
    dend_27 { pt3dadd( 538.62, 107.406, 121.219, 0.2728 ) }
    dend_27 { pt3dadd( 538.355, 106.447, 122.596, 0.2712 ) }
    dend_27 { pt3dadd( 538.767, 105.627, 124.025, 0.2684 ) }
    dend_27 { pt3dadd( 539.179, 104.807, 125.456, 0.2626 ) }
    dend_27 { pt3dadd( 539.591, 103.987, 126.843, 0.2542 ) }
    dend_27 { pt3dadd( 540.002, 103.168, 128.152, 0.2288 ) }
    dend_27 { pt3dadd( 540.414, 102.348, 130.745, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 10/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 481.102, 346.784, 50.409, 0.2766 ) }
    dend_6 { pt3dadd( 480.142, 347.601, 46.6581, 0.4576 ) }
    dend_6 { pt3dadd( 479.302, 348.314, 46.34, 0.3594 ) }
    dend_6 { pt3dadd( 478.813, 349.256, 46.1684, 0.3002 ) }
    dend_6 { pt3dadd( 478.356, 349.858, 45.7968, 0.275 ) }
    dend_6 { pt3dadd( 477.997, 350.488, 45.495, 0.2752 ) }
    dend_6 { pt3dadd( 477.617, 351.395, 45.5333, 0.2758 ) }
    dend_6 { pt3dadd( 477.066, 352.251, 45.8371, 0.2768 ) }
    dend_6 { pt3dadd( 476.438, 353.159, 46.2109, 0.279 ) }
    dend_6 { pt3dadd( 475.879, 354.094, 46.482, 0.2826 ) }
    dend_6 { pt3dadd( 475.253, 354.991, 46.8009, 0.289 ) }
    dend_6 { pt3dadd( 474.92, 355.916, 47.262, 0.3024 ) }
    dend_6 { pt3dadd( 474.523, 356.926, 47.7058, 0.321 ) }
    dend_6 { pt3dadd( 473.919, 357.884, 48.06, 0.386 ) }
    dend_6 { pt3dadd( 473.766, 358.975, 48.4154, 0.3584 ) }
    dend_6 { pt3dadd( 473.805, 359.971, 48.7827, 0.3398 ) }
    dend_6 { pt3dadd( 473.547, 361.025, 48.8824, 0.374 ) }
    dend_6 { pt3dadd( 473.241, 362.076, 48.8194, 0.335 ) }
    dend_6 { pt3dadd( 472.947, 363.149, 48.7634, 0.302 ) }
    dend_6 { pt3dadd( 472.935, 364.279, 48.7066, 0.2782 ) }
    dend_6 { pt3dadd( 472.833, 365.389, 48.6808, 0.2814 ) }
    dend_6 { pt3dadd( 472.792, 366.367, 48.8802, 0.2872 ) }
    dend_6 { pt3dadd( 472.352, 367.143, 49.2528, 0.2988 ) }
    dend_6 { pt3dadd( 471.512, 367.911, 49.569, 0.3144 ) }
    dend_6 { pt3dadd( 470.669, 368.654, 49.7232, 0.3738 ) }
    dend_6 { pt3dadd( 469.924, 369.471, 49.6972, 0.3346 ) }
    dend_6 { pt3dadd( 469.392, 370.44, 49.5132, 0.3014 ) }
    dend_6 { pt3dadd( 468.903, 371.412, 49.3108, 0.277 ) }
    dend_6 { pt3dadd( 468.396, 372.4, 49.1772, 0.2792 ) }
    dend_6 { pt3dadd( 467.926, 373.436, 49.0647, 0.2832 ) }
    dend_6 { pt3dadd( 467.481, 374.463, 48.8726, 0.2904 ) }
    dend_6 { pt3dadd( 466.96, 375.274, 48.456, 0.305 ) }
    dend_6 { pt3dadd( 466.519, 376.228, 47.922, 0.3248 ) }
    dend_6 { pt3dadd( 466.24, 377.312, 47.383, 0.3984 ) }
    dend_6 { pt3dadd( 466.079, 378.439, 46.9092, 0.356 ) }
    dend_6 { pt3dadd( 466.066, 379.579, 46.2, 0.4576 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 46/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 481.102, 346.784, 50.409, 0.2766 ) }
    dend_5 { pt3dadd( 480.903, 346.772, 50.9146, 0.2784 ) }
    dend_5 { pt3dadd( 480.707, 346.76, 52.0181, 0.2818 ) }
    dend_5 { pt3dadd( 480.475, 346.701, 53.5142, 0.288 ) }
    dend_5 { pt3dadd( 479.887, 346.328, 55.1244, 0.3004 ) }
    dend_5 { pt3dadd( 478.82, 346.456, 56.5488, 0.3174 ) }
    dend_5 { pt3dadd( 477.929, 346.78, 57.8318, 0.3794 ) }
    dend_5 { pt3dadd( 476.938, 347.195, 58.7832, 0.345 ) }
    dend_5 { pt3dadd( 475.866, 347.418, 59.2928, 0.3206 ) }
    dend_5 { pt3dadd( 474.957, 347.819, 59.4849, 0.3134 ) }
    dend_5 { pt3dadd( 474.014, 348.31, 59.7358, 0.3422 ) }
    dend_5 { pt3dadd( 473.021, 348.828, 59.985, 0.4206 ) }
    dend_5 { pt3dadd( 471.942, 349.167, 60.181, 0.4464 ) }
    dend_5 { pt3dadd( 470.845, 349.254, 60.4531, 0.386 ) }
    dend_5 { pt3dadd( 469.723, 349.158, 60.7482, 0.3442 ) }
    dend_5 { pt3dadd( 468.613, 349.296, 61.0324, 0.3818 ) }
    dend_5 { pt3dadd( 467.48, 349.359, 61.2049, 0.3492 ) }
    dend_5 { pt3dadd( 466.814, 349.8, 61.5493, 0.3294 ) }
    dend_5 { pt3dadd( 465.716, 349.795, 61.6619, 0.324 ) }
    dend_5 { pt3dadd( 464.727, 349.539, 61.4914, 0.3914 ) }
    dend_5 { pt3dadd( 463.778, 349.333, 61.1111, 0.3686 ) }
    dend_5 { pt3dadd( 462.972, 349.394, 60.6421, 0.3588 ) }
    dend_5 { pt3dadd( 462.089, 349.46, 60.527, 0.41 ) }
    dend_5 { pt3dadd( 461.065, 349.926, 60.5329, 0.3976 ) }
    dend_5 { pt3dadd( 460.031, 350.396, 60.604, 0.4384 ) }
    dend_5 { pt3dadd( 458.983, 350.817, 60.7323, 0.4326 ) }
    dend_5 { pt3dadd( 457.97, 351.333, 60.9442, 0.3592 ) }
    dend_5 { pt3dadd( 456.943, 351.834, 61.1643, 0.3 ) }
    dend_5 { pt3dadd( 455.971, 352.302, 61.2816, 0.2746 ) }
    dend_5 { pt3dadd( 455.216, 352.977, 61.4407, 0.2746 ) }
    dend_5 { pt3dadd( 454.465, 353.723, 61.8495, 0.2744 ) }
    dend_5 { pt3dadd( 453.547, 354.21, 62.4868, 0.2744 ) }
    dend_5 { pt3dadd( 452.562, 354.666, 63.2475, 0.2742 ) }
    dend_5 { pt3dadd( 451.517, 354.926, 64.0954, 0.2736 ) }
    dend_5 { pt3dadd( 450.739, 354.48, 65.0941, 0.2728 ) }
    dend_5 { pt3dadd( 450.213, 354.294, 66.292, 0.2712 ) }
    dend_5 { pt3dadd( 449.599, 354.417, 67.5867, 0.2684 ) }
    dend_5 { pt3dadd( 448.551, 354.542, 68.6412, 0.2626 ) }
    dend_5 { pt3dadd( 447.501, 354.961, 69.4302, 0.2542 ) }
    dend_5 { pt3dadd( 447.456, 356.1, 70.0003, 0.2288 ) }
    dend_5 { pt3dadd( 447.411, 357.238, 70.6504, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 87/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 502.788, 314.752, 31.5434, 0.4878 ) }
    dend_30 { pt3dadd( 501.616, 314.123, 31.3135, 0.2288 ) }
    dend_30 { pt3dadd( 500.778, 313.41, 30.3198, 0.4626 ) }
    dend_30 { pt3dadd( 499.828, 312.871, 29.8936, 0.5264 ) }
    dend_30 { pt3dadd( 498.746, 312.611, 29.3958, 0.5246 ) }
    dend_30 { pt3dadd( 497.74, 312.243, 28.8039, 0.6478 ) }
    dend_30 { pt3dadd( 496.69, 311.862, 28.205, 0.7192 ) }
    dend_30 { pt3dadd( 495.782, 311.213, 27.6304, 0.6976 ) }
    dend_30 { pt3dadd( 494.866, 310.603, 27.0589, 0.7176 ) }
    dend_30 { pt3dadd( 493.819, 310.225, 26.5244, 0.6948 ) }
    dend_30 { pt3dadd( 492.729, 310.032, 26.0257, 0.7118 ) }
    dend_30 { pt3dadd( 491.691, 309.566, 25.2, 0.9152 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 502.788, 314.752, 31.5434, 0.4878 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_29 { pt3dadd( 503.734, 314.19, 31.001, 0.5974 ) }
    dend_29 { pt3dadd( 504.435, 313.602, 30.3229, 0.5386 ) }
    dend_29 { pt3dadd( 504.197, 312.707, 29.5918, 0.5572 ) }
    dend_29 { pt3dadd( 503.371, 312.005, 28.9024, 0.658 ) }
    dend_29 { pt3dadd( 502.698, 311.13, 28.2512, 0.5238 ) }
    dend_29 { pt3dadd( 502.265, 310.082, 27.7012, 0.4612 ) }
    dend_29 { pt3dadd( 502.195, 308.959, 27.2726, 0.3562 ) }
    dend_29 { pt3dadd( 502.335, 307.845, 26.7926, 0.3362 ) }
    dend_29 { pt3dadd( 502.7, 307.141, 26.0417, 0.3672 ) }
    dend_29 { pt3dadd( 503.188, 306.163, 25.2641, 0.322 ) }
    dend_29 { pt3dadd( 503.419, 305.124, 24.4479, 0.2796 ) }
    dend_29 { pt3dadd( 503.48, 304.071, 23.6188, 0.2288 ) }
    dend_29 { pt3dadd( 503.932, 303.16, 21.84, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_23, dend_22, dend_21, dend_18, dend_9, dend_0, dend_35, dend_24, dend_20, dend_19, dend_13, dend_10, dend_8, dend_1, dend_37, dend_36, dend_32, dend_25, dend_17, dend_14, dend_12, dend_11, dend_3, dend_2, dend_34, dend_33, dend_31, dend_26, dend_16, dend_15, dend_7, dend_4, dend_28, dend_27, dend_6, dend_5, dend_30, dend_29]}
    dend = new SectionList()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_35 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_32 dend.append()
    dend_25 dend.append()
    dend_17 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_31 dend.append()
    dend_26 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_7 dend.append()
    dend_4 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_20385, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_20385 = new SectionList()
    soma_0 OneSecGrp_SectionRef_20385.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_0, dend_0, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 3.3131976  // units: uF/cm2
    forsec axon cm = 3.3131976  // units: uF/cm2
    forsec dend cm = 3.3131976  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 174.99332  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 3.7361472E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.11653411  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 9.178516E-10  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.46905828  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 2.9999418  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 9.550436E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.009537196  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 6.2136266E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 6.0649717E-7  // units: S cm-2
        e_pas_nml2 = -85.85056  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 1.3348732E-4  // units: S cm-2
        e_pas_nml2 = -85.85056  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0581139E-7  // units: S cm-2
        e_pas_nml2 = -85.85056  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 7.73403E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.006523921  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_472447460
    forsec soma {
        insert CaDynamics_472447460
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_22 nseg = 7
    dend_21 nseg = 5
    dend_35 nseg = 5
    dend_20 nseg = 11
    dend_19 nseg = 3
    dend_8 nseg = 3
    dend_36 nseg = 5
    dend_12 nseg = 5
    dend_11 nseg = 7
    dend_7 nseg = 7
    dend_27 nseg = 13
    dend_6 nseg = 3
    dend_5 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472447460


