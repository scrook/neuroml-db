// Cell: cACint209_L5_ChC_ab30296908_0_0
/*
{
  "id" : "cACint209_L5_ChC_ab30296908_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.44259, -9.54825, -1.27888, 2.30647", "-1.2819, -8.63231, -1.15821, 3.63473", "-1.1212, -7.71637, -1.03754, 6.81375", "-0.960502, -6.80044, -0.916865, 9.18535", "-0.799804, -5.8845, -0.796194, 10.2157", "-0.639107, -4.96856, -0.675522, 11.1797", "-0.478409, -4.05262, -0.554851, 12.0566", "-0.317712, -3.13668, -0.43418, 12.6775", "-0.157014, -2.22074, -0.313508, 13.0617", "0.00368301, -1.3048, -0.192837, 13.2009", "0.16438, -0.388856, -0.0721652, 13.2418", "0.325078, 0.527084, 0.0485063, 12.889", "0.485775, 1.44302, 0.169178, 12.4912", "0.646473, 2.35896, 0.289849, 12.2347", "0.80717, 3.2749, 0.410521, 12.0486", "0.967868, 4.19084, 0.531192, 11.9346", "1.12856, 5.10678, 0.651864, 11.8925", "1.28926, 6.02272, 0.772535, 11.1454", "1.44996, 6.93866, 0.893206, 8.66152", "1.61066, 7.8546, 1.01388, 5.25757", "1.77135, 8.77054, 1.13455, 3.12251" ]
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.66144, -6.91316, -8.0337, 1.77", "-3.66144, -6.91316, -8.0337, 1.77", "-3.19632, -8.37833, -8.25116, 1.77", "-2.84208, -9.46902, -8.42439, 1.77", "-2.30067, -11.1786, -8.68004, 1.55", "-1.98267, -12.3122, -8.88307, 1.69", "-1.76498, -13.193, -9.06, 1.77", "-1.57428, -14.05, -9.27399, 1.77", "-1.33217, -15.1987, -9.63369, 1.25", "-0.939714, -16.961, -10.1186, 0.74", "-1.69411, -16.1932, -10.9494, 0.74", "-2.2824, -15.9217, -11.8334, 0.74", "-3.31395, -15.5527, -13.4227, 1.18", "-3.86847, -15.4601, -14.3288, 1.18", "-4.70023, -15.2738, -15.5814, 0.52", "-5.6845, -14.9347, -16.927, 0.52", "-6.80333, -14.9838, -18.6276, 0.74", "-7.27481, -15.2306, -19.7845, 0.74", "-7.49975, -15.6111, -20.7941, 0.74", "-7.86277, -16.1014, -22.3177, 1.11", "-8.18683, -16.3574, -23.2929, 1.69", "-8.7172, -16.5336, -24.2776, 1.77", "-9.92543, -16.8726, -26.4538, 1.33", "-10.5685, -17.1759, -27.7803, 1.4", "-10.9474, -17.58, -28.7766, 1.55", "-11.1628, -18.2522, -29.8199, 1.33", "-11.1862, -19.411, -31.1442, 0.74", "-10.9846, -20.3598, -31.9137, 1.03", "-10.6902, -21.1564, -32.4002, 1.47", "-10.3778, -21.6799, -32.7496, 1.62", "-9.88293, -22.3051, -33.2315, 1.62", "-9.3221, -22.8076, -33.675, 0.52", "-8.65548, -23.2803, -34.1643, 0.52", "-8.48963, -23.5273, -34.5848, 0.52", "-8.52335, -24.033, -35.6741, 0.66", "-8.73898, -24.5294, -36.8251, 0.74", "-9.09066, -24.732, -37.637, 0.44", "-9.69663, -24.7295, -38.4959, 0.44", "-10.5898, -24.6253, -39.5881, 0.44", "-11.2248, -24.6867, -40.5599, 0.44", "-11.5779, -24.8076, -41.2491, 0.44", "-12.2342, -25.2114, -42.5882, 0.66", "-12.5547, -25.8384, -43.9412, 1.11", "-12.7206, -26.0682, -44.4112, 0.96", "-13.1541, -26.5527, -45.4885, 1.18", "-13.3227, -26.7601, -45.9096, 1.69", "-13.5968, -27.0792, -46.52, 1.69", "-14.6414, -28.2091, -48.5625, 0.88", "-15.2794, -28.7466, -49.629, 2.14", "-16.7267, -29.4731, -51.5998, 2.28", "-16.9299, -29.5256, -51.8254, 2.28", "-18.104, -29.6287, -52.9206, 0.44", "-18.7742, -29.5776, -53.4131, 0.44", "-19.5659, -29.4241, -53.8673, 0.81", "-20.3781, -29.2278, -54.3523, 0.81", "-20.7484, -29.1794, -54.6177, 0.96", "-21.484, -29.2423, -55.2643, 0.66", "-22.2237, -29.4813, -56.0238, 1.99", "-22.7777, -29.7672, -56.6646, 2.21", "-23.3186, -30.1442, -57.3339, 2.5", "-24.807, -31.4382, -59.3178, 0.66", "-25.5785, -32.2824, -60.4894, 0.66", "-26.0552, -32.9387, -61.2943, 0.66", "-26.5459, -33.7194, -62.1558, 1.55", "-26.7739, -34.1033, -62.5372, 2.21", "-26.9938, -34.5044, -62.9012, 2.21", "-27.6003, -35.7795, -63.9959, 0.29", "-27.9248, -36.602, -64.7569, 0.29", "-28.1369, -37.1699, -65.272, 1.55", "-28.4014, -37.8551, -65.88, 1.99", "-28.6446, -38.4685, -66.4369, 2.36", "-29.3285, -40.1368, -67.9983, 0.59", "-29.6685, -40.992, -68.8528, 1.84", "-29.8023, -41.3889, -69.2978, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-6.50143, -1.62167, 2.1563, 1.92", "-6.50143, -1.62167, 2.1563, 1.92", "-7.03825, -2.5244, 2.1136, 1.92", "-7.95139, -4.31445, 2.02074, 1.92", "-8.89302, -5.94752, 1.92707, 2.14", "-9.61888, -7.05195, 1.84784, 2.36", "-10.6475, -8.38836, 1.73862, 2.28", "-11.7774, -9.62223, 1.6137, 2.36", "-13.0418, -10.764, 1.4515, 2.36", "-15.0041, -12.044, 1.22, 1.77", "-16.0835, -12.4652, 1.13888, 1.77", "-17.7758, -12.8086, 1.09378, 1.99", "-19.284, -12.9495, 1.18953, 1.99", "-20.0302, -12.9751, 1.28166, 1.99", "-21.1425, -13.0264, 1.48011, 1.77", "-22.8641, -13.3115, 1.92551, 1.47", "-24.1068, -13.7332, 2.2771, 1.47", "-25.6731, -14.5923, 2.67287, 1.33", "-26.385, -15.1178, 2.80545, 1.99", "-27.5951, -16.1922, 2.93828, 1.99", "-28.9891, -17.5883, 2.95608, 1.77", "-30.5309, -19.294, 2.8204, 1.92", "-31.9567, -20.9153, 2.52951, 1.69", "-32.8334, -21.8565, 2.24756, 1.69", "-33.9319, -22.9166, 1.83224, 1.84", "-34.9339, -23.8031, 1.44957, 1.84", "-36.2309, -24.9105, 0.974413, 1.69", "-37.6564, -26.144, 0.529695, 1.55", "-39.0959, -27.479, 0.193748, 1.4", "-40.2753, -28.578, -0.0456632, 1.25", "-41.5094, -29.78, -0.267969, 1.33", "-42.6781, -31.0295, -0.397283, 1.47", "-43.7722, -32.3552, -0.344839, 1.62", "-44.5457, -33.5953, -0.0723518, 1.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.448551, -8.29066, -4.9037, 3.61", "0.448551, -8.29066, -4.9037, 3.61", "0.639395, -9.57258, -4.84079, 2.95", "0.912925, -11.5619, -4.74613, 2.8", "1.07064, -12.8951, -4.65594, 2.8", "1.20801, -14.3858, -4.54229, 3.02", "1.27374, -15.3753, -4.4662, 3.02", "1.30124, -16.3458, -4.38758, 3.02", "1.27473, -17.8082, -4.26699, 3.02", "1.16723, -19.3552, -4.13438, 2.36", "0.878735, -22.0613, -3.98945, 2.36", "0.670468, -23.5772, -3.97531, 2.43", "0.430879, -25.0445, -4.01143, 2.43", "0.117717, -26.7644, -4.11392, 2.43", "-0.369194, -29.1389, -4.3231, 2.28", "-0.893871, -31.5753, -4.59675, 2.14", "-1.62638, -34.8029, -5.0249, 2.06", "-2.13476, -37.043, -5.35932, 2.43", "-2.45588, -38.4696, -5.60203, 2.58", "-2.80021, -39.9728, -5.89239, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.381405, 7.21333, -7.5337, 1.62", "-0.462757, 7.91084, -7.58952, 1.62", "-0.5914, 8.93701, -7.62198, 1.92", "-0.785404, 10.3078, -7.6781, 1.33", "-1.03008, 11.7833, -7.76079, 1.69", "-1.23076, 12.875, -7.80286, 2.21", "-1.40278, 13.7876, -7.79562, 2.21", "-1.60989, 14.815, -7.74536, 1.99", "-1.80426, 15.6886, -7.66907, 1.77", "-2.03507, 16.6604, -7.55689, 1.99", "-2.28538, 17.689, -7.43363, 1.99", "-2.71325, 19.4961, -7.25391, 1.11", "-2.97737, 20.6258, -7.17682, 1.11", "-3.2604, 21.7624, -7.14621, 1.25", "-3.53024, 22.7168, -7.14095, 1.4", "-3.88346, 23.7599, -7.20196, 0.81", "-4.29945, 24.748, -7.35793, 0.74", "-4.63002, 25.394, -7.52396, 0.74", "-5.03751, 26.0948, -7.74856, 0.74", "-5.51107, 26.8581, -8.03414, 0.96", "-5.95753, 27.5766, -8.32256, 0.96", "-6.42333, 28.298, -8.61922, 1.55", "-6.94947, 29.1068, -8.96384, 2.06", "-7.39461, 29.8432, -9.28525, 2.43", "-7.90512, 30.8349, -9.72158, 2.36", "-8.48313, 32.1858, -10.3006, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.32144, 7.89733, 0.346303, 2.5", "-2.39548, 8.05259, 0.347145, 2.5", "-3.56943, 10.2277, 0.30178, 1.77", "-4.38882, 11.6975, 0.310165, 1.55", "-5.34987, 13.3705, 0.388429, 1.55", "-6.08214, 14.647, 0.497605, 1.33", "-7.19944, 16.627, 0.729921, 1.33", "-7.89813, 17.8367, 0.90867, 1.55", "-8.95229, 19.6287, 1.21245, 1.55", "-10.0471, 21.5775, 1.54941, 1.62", "-10.9212, 23.3143, 1.83242, 1.4", "-11.7362, 25.2259, 2.10881, 1.4", "-12.1998, 26.4002, 2.28048, 1.4", "-12.9207, 28.2886, 2.54142, 1.4", "-13.605, 30.1751, 2.72356, 1.4", "-14.3746, 32.5069, 2.84706, 1.77", "-15.0224, 34.5989, 2.87015, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.82855, 3.96433, 1.3463, 2.58", "6.88739, 4.01887, 1.35164, 2.58", "7.629, 4.7237, 1.42909, 2.58", "8.47044, 5.53173, 1.54298, 1.84", "9.09334, 6.11798, 1.64403, 2.06", "9.8976, 6.87281, 1.79513, 2.06", "10.429, 7.36002, 1.92935, 2.58", "11.0189, 7.89714, 2.11239, 2.58", "11.4089, 8.25807, 2.26029, 2.58", "12.1009, 8.86981, 2.55594, 2.58", "12.5877, 9.26962, 2.77548, 2.43", "13.6076, 10.0586, 3.27514, 2.21", "14.3515, 10.6009, 3.65472, 1.99", "14.9486, 11.0106, 3.94091, 1.99", "15.7229, 11.4638, 4.27535, 1.69", "16.3702, 11.7232, 4.52085, 1.69", "17.5163, 11.8724, 4.89759, 2.06", "18.2357, 11.7529, 5.09348, 2.06", "19.9355, 11.0493, 5.54825, 1.69", "21.1046, 10.4401, 5.84371, 1.92", "22.9323, 9.25985, 6.27299, 1.92", "24.6728, 7.90155, 6.64405, 2.06", "25.565, 7.05519, 6.81194, 2.28", "26.2343, 6.28408, 6.94687, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994654580493
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.77135, 8.77054, 1.13455, 0.835316", "4.36343, 23.5449, 1.13455, 0.835316", "6.95552, 38.3192, 1.13455, 0.835316" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-29.8023, -41.3889, -69.2978, 0.96", "-29.206, -42.5485, -71.5914, 0.96", "-29.0993, -42.8071, -72.0212, 0.96", "-28.9708, -43.1573, -72.5295, 0.96", "-28.7992, -43.6488, -73.1822, 1.55", "-28.6697, -44.0627, -73.6791, 0.22", "-28.5396, -44.5425, -74.1698, 0.22", "-28.4875, -44.8521, -74.3652, 1.11", "-28.4461, -45.1431, -74.5227, 1.4", "-28.3754, -45.5384, -74.701, 1.4", "-28.1941, -46.3915, -75.0276, 0.22", "-27.9574, -47.2668, -75.3351, 0.22", "-27.8646, -47.5546, -75.4311, 0.74", "-27.8107, -47.7088, -75.4773, 0.74", "-27.5127, -48.5311, -75.6974, 0.15", "-27.4638, -48.6587, -75.7258, 0.37", "-27.1556, -49.3549, -75.8567, 0.22", "-26.9634, -49.7425, -75.9405, 0.22", "-26.8107, -50.0517, -76.0061, 0.74", "-26.6721, -50.3661, -76.0651, 0.88", "-26.6406, -50.4727, -76.0814, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-29.8023, -41.3889, -69.2978, 2.87", "-30.2585, -41.466, -69.3922, 2.87", "-31.7101, -41.8245, -69.7462, 0.22", "-33.0438, -42.31, -70.0932, 0.22", "-33.6929, -42.5788, -70.2626, 1.69", "-33.898, -42.6711, -70.3159, 2.21", "-34.2327, -42.8297, -70.4021, 2.21", "-35.478, -43.5189, -70.7071, 0.22", "-36.5925, -44.2834, -70.9963, 0.22", "-36.9408, -44.5457, -71.0914, 1.25", "-37.2256, -44.7628, -71.1696, 1.25", "-37.6028, -45.0473, -71.2784, 1.25", "-38.3662, -45.584, -71.5011, 0.15", "-38.7975, -45.8732, -71.6242, 0.15", "-39.1332, -46.0728, -71.7261, 0.96", "-39.51, -46.2735, -71.8546, 1.18", "-39.6808, -46.3511, -71.9165, 1.18", "-40.7666, -46.7652, -72.3788, 0.22", "-41.0492, -46.837, -72.5162, 0.52", "-41.304, -46.8882, -72.6444, 0.52", "-41.9572, -46.9996, -72.9709, 0.22", "-42.3618, -47.0647, -73.1783, 1.25", "-42.9596, -47.1813, -73.4737, 1.4", "-44.1245, -47.511, -74.0727, 0.22", "-44.9326, -47.8335, -74.4839, 0.22", "-45.2444, -48.0003, -74.6417, 0.74", "-45.6533, -48.2878, -74.844, 0.88", "-46.2421, -48.9056, -75.2109, 0.22", "-46.7472, -49.7404, -75.5681, 0.22", "-46.9713, -50.302, -75.76, 1.99", "-47.0741, -50.6509, -75.855, 2.36", "-47.1605, -50.9956, -75.9461, 2.36", "-47.5582, -52.9437, -76.4419, 0.15", "-47.7462, -54.1636, -76.7679, 0.15", "-47.7873, -54.4817, -76.8393, 0.44", "-47.8488, -55.0964, -76.9597, 0.44" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-44.5457, -33.5953, -0.0723518, 0.96", "-45.3215, -33.9169, -0.39848, 0.96", "-46.0598, -34.249, -0.711549, 1.25", "-47.1242, -34.7265, -1.15792, 1.25", "-48.9826, -35.4938, -1.88893, 1.18", "-50.2508, -35.9566, -2.34938, 1.11", "-51.2284, -36.2894, -2.69607, 0.88", "-52.5143, -36.7374, -3.17212, 0.96", "-53.25, -36.9944, -3.4513, 0.96", "-54.3293, -37.3804, -3.86715, 0.96", "-55.3978, -37.7587, -4.2153, 0.96", "-56.3105, -38.0656, -4.45859, 1.18", "-57.4365, -38.4214, -4.70978, 1.03", "-57.9982, -38.5746, -4.77837, 1.03", "-59.1828, -38.8398, -4.79595, 1.18", "-59.9103, -38.9584, -4.70373, 1.18", "-61.5722, -39.096, -4.18915, 0.96", "-62.1863, -39.1054, -3.9455, 1.11", "-63.3862, -39.0939, -3.41298, 1.11", "-64.3488, -39.1066, -2.97247, 1.11", "-65.4812, -39.1624, -2.45003, 1.11", "-66.9921, -39.3571, -1.75652, 1.55", "-68.0705, -39.6148, -1.29053, 1.03", "-69.3593, -40.0754, -0.73605, 0.88", "-70.4558, -40.6211, -0.283483, 0.74", "-71.0822, -41.0362, -0.0337069, 0.74", "-71.8856, -41.7285, 0.241545, 0.74", "-72.6768, -42.5806, 0.454391, 0.66", "-73.3815, -43.4681, 0.621145, 0.88", "-73.8388, -44.1202, 0.706047, 1.03", "-74.3136, -44.8906, 0.784099, 1.03", "-74.9189, -45.885, 0.868168, 0.88", "-75.6732, -47.0554, 0.94764, 0.88", "-76.1003, -47.6431, 0.973973, 0.88", "-76.7359, -48.3652, 0.999063, 0.88", "-77.978, -49.5217, 1.0293, 0.88", "-78.7066, -50.0457, 1.03298, 0.88", "-79.7532, -50.5961, 1.02029, 0.88", "-80.4592, -50.8496, 0.996303, 0.96", "-81.2897, -51.0735, 0.936229, 0.96", "-82.0452, -51.2199, 0.878266, 0.96", "-82.8921, -51.3574, 0.81847, 0.52", "-83.4706, -51.5449, 0.799568, 0.52", "-83.9079, -51.8756, 0.846276, 0.52", "-84.3384, -52.4873, 1.02833, 0.81", "-84.6732, -53.1302, 1.27028, 0.96", "-84.9206, -53.8714, 1.57284, 0.96", "-85.2006, -55.1982, 2.13425, 0.81", "-85.2948, -55.8467, 2.41971, 0.81", "-85.3792, -56.6639, 2.82236, 1.11", "-85.4621, -57.1224, 3.08755, 1.11" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-44.5457, -33.5953, -0.0723518, 1.33", "-45.354, -33.6663, 0.459373, 1.33", "-46.1264, -33.7732, 0.899829, 1.18", "-47.5709, -33.9553, 1.67731, 0.88", "-48.2642, -34.0233, 2.01089, 0.74", "-49.2728, -34.0921, 2.42551, 0.74", "-50.2968, -34.1087, 2.83157, 0.74", "-51.066, -34.1085, 3.10728, 0.59", "-51.9689, -34.0661, 3.41568, 0.59", "-52.6795, -33.9915, 3.65323, 0.52", "-53.4018, -33.8328, 3.93044, 0.52", "-54.7736, -33.3603, 4.5247, 0.74", "-55.6497, -32.9805, 4.94632, 0.59", "-56.4599, -32.6168, 5.35458, 0.44", "-57.3373, -32.2635, 5.82499, 0.37", "-58.0419, -32.0448, 6.2221, 0.66", "-58.6645, -31.9517, 6.52126, 0.66", "-59.0617, -31.9628, 6.64856, 0.66", "-59.584, -32.0117, 6.79499, 0.44", "-60.1871, -32.1112, 6.94523, 0.44", "-61.2595, -32.2988, 7.18903, 0.44", "-62.741, -32.5881, 7.53619, 0.74", "-63.6192, -32.7892, 7.7443, 0.74", "-64.83, -33.0591, 8.01495, 0.52", "-65.9605, -33.2998, 8.25303, 0.59", "-66.9288, -33.5035, 8.44056, 0.44", "-68.2752, -33.8367, 8.71042, 0.37", "-69.2455, -34.1547, 8.92442, 0.37", "-70.2999, -34.6405, 9.15911, 0.29", "-70.8, -34.9685, 9.27639, 0.29", "-71.3959, -35.4653, 9.48021, 0.29", "-71.9099, -35.9346, 9.70226, 0.37", "-72.498, -36.476, 10.0082, 0.37", "-73.1003, -36.9878, 10.3598, 0.37", "-73.755, -37.5863, 10.7984, 0.66", "-74.4102, -38.1624, 11.2512, 0.81", "-74.9158, -38.5528, 11.5933, 0.81", "-75.6518, -39.0071, 12.0412, 0.22", "-76.5543, -39.4574, 12.5517, 0.22", "-85.1775, -39.9605, 15.4671, 0.22" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.80021, -39.9728, -5.89239, 1.55", "-2.22002, -41.4656, -6.05027, 1.55", "-1.64045, -42.9868, -6.20459, 1.55", "-1.14915, -44.3243, -6.34021, 1.55", "-0.605568, -45.843, -6.48155, 1.69", "-0.210869, -47.0099, -6.57577, 1.69", "0.0561429, -47.8843, -6.63644, 1.69", "0.431367, -49.3399, -6.71297, 1.55", "0.848083, -51.2492, -6.79357, 1.47", "1.11278, -52.8458, -6.81884, 1.33", "1.26808, -54.383, -6.79735, 1.33", "1.33442, -56.4333, -6.71452, 1.33", "1.27208, -57.9444, -6.59681, 1.11", "1.15392, -58.9016, -6.48234, 1.11", "0.752027, -60.9967, -6.1591, 1.25", "0.407025, -62.3931, -5.90965, 1.25", "0.0469281, -63.6527, -5.66511, 1.25", "-0.501238, -65.4045, -5.32403, 1.4", "-1.07291, -67.1336, -4.99885, 1.4", "-1.53106, -68.5354, -4.77166, 1.55", "-1.82797, -69.5649, -4.66598, 1.55", "-2.18653, -71.0839, -4.59, 1.33", "-2.54174, -72.9758, -4.60665, 0.96", "-2.64875, -73.7236, -4.66092, 0.81", "-2.73252, -74.5632, -4.74234, 0.81", "-2.85045, -76.5002, -4.94528, 0.96", "-2.87958, -77.8399, -5.08119, 1.33", "-2.8796, -79.3177, -5.21256, 1.69", "-2.88254, -80.2141, -5.26768, 1.84", "-2.89813, -81.2319, -5.29387, 1.99", "-2.96082, -82.4396, -5.26614, 2.06", "-3.02421, -83.4734, -5.21045, 2.06", "-3.07556, -84.5261, -5.11267, 1.84", "-3.10022, -85.6495, -4.96282, 1.62", "-3.08964, -86.9988, -4.74618, 1.18", "-3.04929, -88.0783, -4.56751, 0.88", "-2.96979, -89.5532, -4.30487, 0.88", "-2.8953, -90.5682, -4.09117, 1.03", "-2.8113, -91.613, -3.83925, 1.11", "-2.76622, -92.3578, -3.64423, 1.11", "-2.74465, -94.2206, -3.12554, 1.03", "-2.78923, -95.4389, -2.76981, 1.18", "-2.85492, -96.4342, -2.48785, 1.25", "-2.98763, -97.9492, -2.09023, 1.18", "-3.14553, -99.3236, -1.76296, 1.03", "-3.35208, -100.696, -1.46577, 0.96", "-3.63238, -102.184, -1.18484, 0.88", "-3.86887, -103.178, -1.03568, 0.88", "-4.34143, -104.677, -0.912749, 1.25", "-4.90874, -106.173, -0.869971, 1.55", "-5.36852, -107.317, -0.884036, 1.62", "-5.71933, -108.231, -0.922762, 1.62", "-6.13362, -109.426, -0.99555, 1.4", "-6.64356, -111.116, -1.0987, 1.11", "-7.05576, -112.854, -1.20232, 1.11", "-7.38038, -114.77, -1.27892, 1.11", "-7.63996, -116.812, -1.33549, 1.11", "-7.79366, -118.304, -1.35558, 1.4", "-7.92398, -119.85, -1.36007, 1.4", "-8.09682, -122.261, -1.33717, 1.25", "-8.27627, -124.729, -1.32104, 1.25", "-8.40939, -126.353, -1.30922, 1.62", "-8.55178, -127.776, -1.30682, 1.77", "-8.75367, -129.681, -1.33318, 1.33", "-8.93176, -131.406, -1.37091, 0.88", "-9.09652, -133.326, -1.44672, 1.25", "-9.16468, -134.276, -1.5031, 1.84", "-9.21681, -135.338, -1.59201, 2.28", "-9.24936, -136.437, -1.71643, 2.43" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.80021, -39.9728, -5.89239, 2.14", "-2.63545, -40.6669, -6.07602, 2.14", "-2.34429, -41.7656, -6.30963, 2.14", "-1.84641, -43.6444, -6.70912, 1.69", "-1.42923, -45.2187, -7.04385, 1.84", "-1.02394, -46.7481, -7.36904, 1.99", "-0.696085, -47.9853, -7.6321, 2.36", "-0.439221, -48.8933, -7.78397, 2.5" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.48313, 32.1858, -10.3006, 1.25", "-8.14526, 33.2412, -10.4469, 1.25", "-7.86017, 33.9519, -10.5216, 1.03", "-7.48129, 34.7979, -10.5889, 0.81", "-7.05934, 35.7449, -10.647, 0.81", "-6.69399, 36.6878, -10.6978, 1.11", "-6.46822, 37.3709, -10.7303, 1.11", "-6.23539, 38.1681, -10.7306, 0.96", "-5.97134, 39.2331, -10.7051, 0.66", "-5.81639, 39.9692, -10.6868, 0.52", "-5.64297, 40.9345, -10.6569, 0.52", "-5.54013, 41.651, -10.6352, 0.52", "-5.3133, 43.1851, -10.6136, 1.18", "-5.1905, 43.9707, -10.6103, 1.62", "-5.09234, 44.5348, -10.6132, 1.69", "-4.89415, 45.4714, -10.6416, 1.33", "-4.76117, 45.9366, -10.6697, 0.74", "-4.50786, 46.6527, -10.7349, 0.59", "-4.06386, 47.7888, -10.8986, 0.66", "-3.83193, 48.4035, -11.005, 0.44", "-3.68368, 48.8622, -11.089, 0.44", "-3.45195, 49.7025, -11.2515, 0.37", "-3.25459, 50.4097, -11.3814, 0.37", "-3.09122, 50.9239, -11.4576, 0.37", "-2.76569, 51.7361, -11.5841, 0.37", "-2.44531, 52.4612, -11.707, 0.44", "-2.1602, 53.1673, -11.857, 0.44", "-1.77143, 54.3092, -12.1493, 0.81", "-1.52482, 55.1159, -12.3712, 1.03", "-1.29069, 55.8454, -12.5815, 1.03", "-1.07277, 56.5104, -12.7991, 0.81", "-0.769013, 57.4824, -13.1634, 0.29", "-0.635947, 57.9657, -13.359, 0.29", "-0.374653, 59.1325, -13.835, 1.77", "-0.295548, 59.5207, -13.9902, 2.36", "-0.182693, 60.0578, -14.1825, 2.36", "0.0501734, 61.0796, -14.5146, 2.28", "0.361067, 62.3049, -14.8611, 0.66", "0.538517, 62.9755, -15.0495, 0.88", "0.721718, 63.6737, -15.2495, 0.88", "0.925212, 64.4566, -15.4551, 0.37", "1.0627, 64.985, -15.5858, 0.37", "1.33456, 66.0852, -15.8357, 0.37", "1.52657, 66.9141, -16.0135, 1.11", "1.66586, 67.5756, -16.1496, 1.47", "1.75047, 68.048, -16.2406, 1.69", "1.86322, 68.8449, -16.3821, 1.33", "1.95381, 69.7186, -16.5202, 0.44", "1.97938, 70.6444, -16.6513, 0.29", "1.97031, 71.3701, -16.754, 0.52", "1.94797, 71.9119, -16.8309, 0.52", "1.89321, 72.8218, -16.9844, 0.29", "1.85228, 73.7593, -17.145, 0.29", "1.81983, 75.4146, -17.451, 1.18", "1.81728, 76.0373, -17.5647, 1.62", "1.81267, 76.7001, -17.6741, 1.84", "1.80718, 77.5364, -17.7963, 1.33", "1.7832, 79.9213, -18.1246, 0.22", "1.77284, 81.4478, -18.3184, 0.22", "1.75968, 82.8265, -18.4716, 0.22", "1.72185, 84.2816, -18.608, 0.74", "1.69184, 85.0741, -18.6761, 1.03", "1.67017, 85.4473, -18.7044, 1.03", "1.54899, 86.6363, -18.8297, 0.15", "1.49599, 87.0931, -18.9013, 0.15", "1.43603, 87.6175, -19.0216, 0.44", "1.38366, 88.1178, -19.1597, 0.66", "1.33652, 88.5788, -19.2882, 0.66", "1.24102, 89.9096, -19.6454, 1.55", "1.19866, 90.8888, -19.8905, 2.58", "1.1869, 91.7423, -20.0979, 2.58", "1.24427, 93.6391, -20.5069, 0.29", "1.35116, 94.907, -20.7091, 0.29", "1.59051, 96.7249, -20.8912, 0.29", "1.79991, 97.8666, -20.9374, 0.96", "1.92969, 98.4525, -20.9279, 0.96", "2.43444, 100.361, -20.7962, 0.22", "3.03355, 102.392, -20.5568, 0.22", "3.43536, 103.666, -20.3596, 1.77", "3.60125, 104.165, -20.2659, 2.36", "3.80776, 104.773, -20.1451, 2.5", "4.47271, 106.739, -19.7405, 0.15", "4.80437, 107.728, -19.5445, 0.29", "5.02338, 108.391, -19.4272, 0.29", "5.30466, 109.239, -19.3217, 0.15", "5.58499, 110.111, -19.2699, 1.18", "5.76347, 110.652, -19.2659, 1.55", "5.96496, 111.255, -19.2849, 1.18", "6.11399, 111.69, -19.3114, 0.74", "6.53654, 113.039, -19.4098, 0.22", "6.84062, 114.092, -19.494, 0.22", "7.31453, 115.93, -19.612, 0.22", "7.54474, 116.917, -19.658, 0.81", "7.62728, 117.313, -19.6696, 0.81", "8.07519, 119.781, -19.6747, 0.22", "8.25443, 121.017, -19.6139, 0.22", "8.37497, 122.132, -19.5526, 1.25", "8.38558, 122.427, -19.5385, 1.69", "8.38032, 122.76, -19.5237, 1.69", "8.34314, 123.467, -19.4908, 1.33", "8.28379, 124.085, -19.4742, 0.59", "8.1418, 125.372, -19.4775, 0.22", "7.96791, 127.209, -19.5378, 0.22", "7.86386, 128.341, -19.5886, 1.03", "7.81901, 128.817, -19.6132, 1.03", "7.78804, 129.317, -19.6364, 1.03", "7.76974, 130.058, -19.6596, 0.52", "7.78917, 131.721, -19.6672, 0.22", "7.86172, 132.525, -19.6591, 0.59", "7.9398, 133.041, -19.6455, 0.59", "8.3879, 135.312, -19.5498, 0.22", "8.56444, 136.018, -19.5059, 0.66", "8.72469, 136.524, -19.4678, 0.66", "9.14302, 137.7, -19.3818, 0.15", "9.38866, 138.354, -19.3419, 0.81", "9.55788, 138.805, -19.3226, 0.81", "9.80111, 139.47, -19.3126, 0.81", "10.2299, 140.738, -19.3213, 0.22", "10.649, 142.027, -19.3664, 1.33", "10.8168, 142.569, -19.3971, 1.55", "10.9164, 142.884, -19.4167, 1.55", "11.023, 143.219, -19.4427, 1.03", "11.5376, 144.748, -19.5812, 0.22", "12.0354, 146.111, -19.7177, 0.22", "12.3252, 146.827, -19.8032, 0.22", "12.6655, 147.675, -19.9072, 1.25", "12.8714, 148.223, -19.9804, 1.77", "13.0417, 148.718, -20.0543, 1.77", "13.177, 149.136, -20.1275, 1.18", "13.378, 149.797, -20.2538, 0.66", "13.9934, 151.813, -20.6856, 0.22", "14.4168, 153.162, -21.0144, 0.22", "14.7138, 154.082, -21.2359, 1.11", "14.9244, 154.674, -21.3691, 1.4", "15.134, 155.201, -21.4822, 1.4", "15.4105, 155.813, -21.6263, 0.96", "16.273, 157.55, -22.0721, 0.22", "17.2443, 159.358, -22.5306, 0.22", "18.019, 160.745, -22.8674, 1.77", "18.2968, 161.234, -22.9776, 2.65", "18.7403, 161.998, -23.1343, 2.95" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-8.48313, 32.1858, -10.3006, 0.66", "-10.2642, 32.9735, -10.5912, 0.66", "-10.9735, 33.2563, -10.705, 0.66", "-11.805, 33.5575, -10.8318, 0.66", "-12.7537, 33.8629, -10.9789, 1.11", "-13.3416, 34.0264, -11.0746, 1.33", "-14.2274, 34.2628, -11.2217, 1.33", "-15.1887, 34.4908, -11.3802, 0.96", "-15.8528, 34.6517, -11.4676, 0.88", "-16.647, 34.8437, -11.5464, 0.88", "-17.5926, 35.0678, -11.5937, 0.37", "-18.0807, 35.1783, -11.5965, 0.37", "-18.9154, 35.3648, -11.5708, 0.81", "-19.6379, 35.5334, -11.5281, 0.88", "-20.3075, 35.6945, -11.4786, 0.81", "-21.0148, 35.8687, -11.4155, 0.29", "-21.4658, 35.9741, -11.3809, 0.29", "-22.2478, 36.1108, -11.356, 0.74", "-22.8291, 36.1967, -11.3626, 0.74", "-23.1626, 36.2592, -11.3623, 0.74", "-23.55, 36.3591, -11.334, 0.74", "-24.0268, 36.5012, -11.2708, 0.59", "-24.4922, 36.6329, -11.1795, 0.59", "-24.9015, 36.7347, -11.0658, 0.37", "-26.0094, 36.9511, -10.7355, 0.37", "-26.7902, 37.0568, -10.4957, 0.37", "-27.2076, 37.0912, -10.3671, 0.22", "-27.9103, 37.1162, -10.1589, 0.22", "-28.2887, 37.1087, -10.0655, 0.22", "-29.4007, 37.0637, -9.84482, 1.03", "-29.9512, 37.053, -9.76783, 1.4", "-30.2808, 37.0634, -9.72808, 1.4", "-31.0818, 37.1358, -9.64409, 0.81", "-32.1065, 37.2717, -9.56763, 0.22", "-32.6599, 37.3529, -9.53657, 0.22", "-33.7762, 37.5324, -9.49947, 1.11", "-34.346, 37.6312, -9.49431, 1.4", "-34.7507, 37.703, -9.49842, 1.4", "-35.6944, 37.8693, -9.52696, 0.66", "-36.5813, 38.0157, -9.56397, 0.52", "-37.6538, 38.1642, -9.62233, 0.74", "-38.3499, 38.2561, -9.66868, 0.88", "-39.3375, 38.3979, -9.74283, 0.66", "-40.0382, 38.5058, -9.80027, 0.66", "-40.6125, 38.601, -9.85345, 0.66", "-41.6934, 38.7994, -9.94969, 0.29", "-42.5608, 38.9738, -10.0042, 1.03", "-43.2991, 39.1314, -10.0263, 1.25", "-43.5349, 39.191, -10.0149, 1.25", "-44.1437, 39.3785, -9.943, 0.81", "-44.8765, 39.6299, -9.8074, 0.29", "-45.3513, 39.8065, -9.68447, 0.52", "-45.6676, 39.9359, -9.59254, 0.66", "-46.8198, 40.4324, -9.2606, 0.22", "-47.4712, 40.7209, -9.0896, 0.22", "-48.0046, 40.9588, -8.97303, 0.22", "-48.7194, 41.2847, -8.86876, 0.22", "-49.6807, 41.7303, -8.77304, 0.59", "-50.2299, 41.9909, -8.74295, 0.81", "-50.739, 42.2524, -8.75597, 0.81", "-51.517, 42.6897, -8.80986, 0.52", "-52.5608, 43.3249, -8.92224, 1.03", "-53.1842, 43.7224, -9.00897, 1.18", "-53.6457, 44.0322, -9.08606, 1.25", "-54.6719, 44.7545, -9.28004, 0.29", "-55.5986, 45.4288, -9.47242, 0.74", "-55.946, 45.6861, -9.55089, 0.96", "-56.25, 45.9101, -9.62789, 0.96", "-57.261, 46.6307, -9.90302, 0.22", "-57.6625, 46.901, -10.0148, 0.22", "-58.2137, 47.2455, -10.1618, 0.66", "-58.589, 47.4704, -10.2704, 0.88", "-59.0344, 47.724, -10.3987, 0.44", "-59.616, 48.0468, -10.5605, 0.37", "-59.9679, 48.2369, -10.6499, 0.44", "-60.4366, 48.5002, -10.7676, 0.44", "-60.7739, 48.6924, -10.8525, 0.44", "-61.4242, 49.0701, -11.0087, 0.22", "-61.8496, 49.3249, -11.0972, 0.22", "-62.3546, 49.6534, -11.1907, 0.29", "-62.6512, 49.8596, -11.234, 0.22" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-15.0224, 34.5989, 2.87015, 1.47", "-14.5271, 35.5845, 2.69007, 1.47", "-14.0813, 36.6594, 2.51725, 0.81", "-13.8045, 37.4469, 2.40512, 0.81", "-13.5147, 38.5498, 2.27194, 0.81", "-13.219, 39.893, 2.12581, 0.81", "-12.9454, 41.3762, 1.98001, 0.81", "-12.7742, 42.857, 1.85312, 1.03", "-12.6701, 44.1896, 1.75202, 1.03", "-12.5494, 46.2294, 1.59922, 1.18", "-12.4805, 47.4934, 1.51224, 1.18", "-12.4709, 49.6902, 1.37103, 1.18", "-12.5215, 51.2527, 1.27417, 1.4", "-12.5466, 52.3598, 1.20035, 1.4", "-12.5725, 53.1475, 1.14483, 1.4" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-15.0224, 34.5989, 2.87015, 0.96", "-17.3614, 35.8153, 1.68487, 0.96", "-18.2044, 36.2746, 1.28502, 0.96", "-19.3732, 36.9227, 0.733041, 0.96", "-20.5862, 37.6202, 0.147239, 0.81", "-21.6304, 38.2416, -0.353168, 0.81", "-23.0737, 39.1196, -1.0238, 1.03", "-24.0491, 39.7617, -1.47128, 1.03", "-24.9508, 40.4592, -1.87713, 1.03", "-26.0658, 41.4542, -2.37003, 0.81", "-26.8807, 42.2141, -2.72584, 0.81", "-27.7771, 43.0746, -3.09994, 0.81", "-28.8289, 44.1501, -3.53601, 0.52", "-29.7944, 45.2405, -3.91575, 0.52", "-30.3394, 45.9057, -4.10103, 0.52", "-31.1212, 46.9271, -4.33382, 0.52", "-32.0919, 48.2451, -4.60489, 0.52", "-32.6021, 48.9662, -4.73327, 0.52", "-33.121, 49.714, -4.83825, 0.52", "-33.732, 50.6063, -4.93338, 0.66", "-34.2978, 51.4915, -4.9976, 0.88", "-34.8453, 52.4415, -5.03967, 0.88", "-35.4509, 53.5593, -5.08207, 0.59", "-36.0636, 54.6694, -5.13992, 0.88", "-36.505, 55.4687, -5.19224, 0.88", "-36.863, 56.1826, -5.2402, 0.96", "-37.1763, 56.8367, -5.29442, 0.96", "-37.4596, 57.4087, -5.35637, 0.96", "-37.9716, 58.3432, -5.49045, 0.74", "-38.7904, 59.7177, -5.73326, 1.25", "-39.3619, 60.632, -5.91441, 1.25", "-40.014, 61.6521, -6.12393, 0.29", "-40.4485, 62.3307, -6.2554, 0.29", "-40.8889, 63.0188, -6.37409, 0.66", "-41.2878, 63.6406, -6.46211, 0.81", "-41.6224, 64.1676, -6.51624, 0.81", "-42.1783, 65.1042, -6.56103, 0.37", "-42.6921, 66.1446, -6.61953, 0.37", "-42.9834, 66.8271, -6.67444, 1.03", "-43.2279, 67.4323, -6.73984, 1.25", "-43.544, 68.1734, -6.84615, 1.25", "-43.8214, 68.7614, -6.95784, 0.81", "-44.4293, 69.927, -7.21983, 0.59", "-44.7971, 70.5911, -7.38129, 0.44", "-45.3139, 71.5271, -7.57593, 0.88", "-45.7136, 72.248, -7.69708, 0.88", "-46.405, 73.5078, -7.83348, 0.59", "-46.851, 74.3472, -7.89966, 0.59", "-47.5424, 75.7081, -7.9545, 0.44", "-48.2926, 77.2775, -7.99213, 1.03", "-48.8896, 78.6127, -7.9851, 1.55", "-49.2242, 79.4418, -7.94651, 1.62", "-49.6713, 80.656, -7.8527, 1.11", "-50.1251, 81.9895, -7.72225, 0.59", "-50.4211, 82.9107, -7.60485, 0.59", "-50.8906, 84.4494, -7.37078, 0.59", "-51.3602, 85.9816, -7.11222, 0.52", "-51.6772, 86.9826, -6.92019, 0.52", "-52.0909, 88.2273, -6.63387, 0.52", "-52.5397, 89.5251, -6.3267, 0.52", "-53.0641, 90.9453, -6.00645, 0.37", "-53.857, 92.8316, -5.61874, 1.55", "-54.1611, 93.4523, -5.50936, 1.92", "-54.4791, 94.0158, -5.42999, 1.92", "-54.7825, 94.4956, -5.38758, 1.92", "-55.4409, 95.4024, -5.36026, 0.88", "-56.3319, 96.5501, -5.37637, 0.44", "-57.0069, 97.3992, -5.40878, 0.44", "-57.7298, 98.3197, -5.46337, 0.44", "-58.7324, 99.6313, -5.54282, 0.37", "-59.2655, 100.346, -5.58534, 0.37", "-60.3606, 101.879, -5.66672, 0.74", "-60.7963, 102.51, -5.68954, 0.74", "-61.3335, 103.321, -5.71145, 0.52", "-62.0412, 104.444, -5.75693, 1.25", "-62.5284, 105.234, -5.81967, 1.47", "-62.8512, 105.771, -5.88008, 1.47", "-63.2938, 106.435, -6.01125, 0.81", "-63.8965, 107.266, -6.23121, 0.59", "-64.5, 108.031, -6.50279, 0.88", "-65.0091, 108.647, -6.75915, 1.18", "-65.326, 109.026, -6.92893, 1.18", "-66.106, 109.988, -7.31586, 0.96", "-66.9396, 111.082, -7.66751, 0.52", "-67.4256, 111.765, -7.79776, 0.37", "-68.1308, 112.827, -7.86823, 0.37", "-68.8056, 113.932, -7.83862, 0.37", "-69.4232, 115.039, -7.73183, 0.37", "-69.8471, 115.898, -7.58852, 0.81", "-70.449, 117.278, -7.30811, 1.84", "-70.688, 117.836, -7.19292, 1.92", "-70.8692, 118.239, -7.12264, 1.92", "-71.1942, 118.989, -7.01699, 1.62", "-71.6334, 120.055, -6.9309, 0.88", "-72.0711, 121.203, -6.8749, 0.29", "-72.7365, 122.995, -6.82513, 0.29", "-73.2436, 124.283, -6.7965, 0.29", "-73.5815, 125.034, -6.77835, 0.29", "-73.7645, 125.381, -6.77061, 0.29", "-74.2443, 126.143, -6.75989, 0.66", "-74.865, 126.978, -6.75784, 0.81", "-75.3196, 127.527, -6.76221, 0.81", "-76.1909, 128.565, -6.77705, 0.37", "-76.8785, 129.362, -6.79249, 0.37", "-77.5289, 130.125, -6.80634, 0.81", "-77.9874, 130.668, -6.81109, 0.81", "-78.6374, 131.449, -6.80662, 0.37", "-79.2843, 132.176, -6.80276, 0.37", "-79.9491, 132.852, -6.79995, 0.88", "-80.7685, 133.645, -6.79756, 1.47", "-81.3849, 134.238, -6.80012, 1.69", "-81.8834, 134.723, -6.80792, 1.69", "-83.241, 136.022, -6.84259, 0.37", "-83.706, 136.475, -6.85606, 0.37", "-84.5709, 137.381, -6.88756, 0.37", "-85.5576, 138.506, -6.92917, 0.81", "-86.1862, 139.331, -6.95515, 1.33", "-86.5612, 139.881, -6.97397, 1.33", "-87.059, 140.656, -7.0042, 0.81", "-88.0637, 142.176, -7.08887, 0.52", "-88.9038, 143.352, -7.18318, 0.52", "-89.851, 144.656, -7.30531, 0.52", "-90.3734, 145.374, -7.37846, 0.52", "-91.0435, 146.306, -7.47901, 0.52", "-91.7936, 147.351, -7.60325, 0.52", "-93.0706, 149.111, -7.83088, 0.52", "-93.5334, 149.747, -7.91517, 0.52", "-94.6863, 151.302, -8.12249, 1.25", "-95.0125, 151.742, -8.17807, 1.47", "-95.4402, 152.315, -8.25785, 1.47", "-96.0693, 153.11, -8.38733, 0.88", "-96.8398, 153.992, -8.55749, 0.29", "-97.1633, 154.319, -8.62929, 0.29", "-97.8386, 154.939, -8.77342, 0.44", "-98.3787, 155.413, -8.87724, 0.44", "-98.8909, 155.845, -8.96307, 0.44", "-99.1886, 156.111, -9.02382, 0.44", "-99.6134, 156.506, -9.08655, 0.29", "-100.161, 157.155, -9.11272, 0.29", "-100.351, 157.403, -9.10004, 0.44", "-100.585, 157.715, -9.06732, 0.44", "-101.209, 158.518, -8.96519, 0.37", "-102.057, 159.561, -8.82045, 0.44", "-103.424, 161.226, -8.69082, 2.28", "-103.966, 161.889, -8.6753, 2.5", "-104.377, 162.419, -8.68981, 2.5", "-105.034, 163.292, -8.75568, 1.92", "-105.676, 164.18, -8.88562, 0.81", "-106.469, 165.412, -9.20111, 0.52", "-106.788, 165.98, -9.36966, 0.52", "-107.443, 167.297, -9.77025, 0.88", "-107.798, 168.112, -10.0074, 0.88", "-108.181, 169.097, -10.2719, 0.66", "-108.468, 169.908, -10.4738, 0.44", "-108.855, 171.086, -10.7202, 0.29", "-109.259, 172.447, -11.0077, 0.29", "-109.659, 174.003, -11.3515, 0.29", "-109.836, 174.776, -11.5303, 0.29", "-110.134, 176.213, -11.9268, 0.52", "-110.341, 177.202, -12.2492, 0.88", "-110.515, 178.015, -12.5739, 0.88", "-110.734, 178.91, -12.9886, 0.44", "-111.22, 180.329, -13.7532, 1.11", "-111.793, 181.556, -14.4967, 2.43", "-112.31, 182.384, -15.0563, 2.43", "-112.698, 182.862, -15.4147, 2.43", "-113.282, 183.423, -15.8494, 1.69", "-114.156, 184.128, -16.4182, 0.59", "-115.163, 184.795, -16.9672, 0.74", "-115.515, 184.997, -17.1178, 0.74", "-116.11, 185.317, -17.3583, 0.52", "-117.037, 185.812, -17.6939, 0.52" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "26.2343, 6.28408, 6.94687, 1.99", "27.6449, 6.38006, 6.97415, 1.99", "28.4739, 6.63349, 7.05133, 1.99", "29.0599, 7.02545, 7.14023, 1.69", "29.8837, 7.57646, 7.26521, 1.69", "30.2307, 7.80855, 7.31785, 1.69", "30.8072, 8.19415, 7.40531, 1.69", "31.179, 8.59208, 7.44458, 1.92", "31.7281, 9.42671, 7.57572, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "26.2343, 6.28408, 6.94687, 0.74", "27.4928, 9.47567, 7.8497, 0.74", "27.9571, 10.8583, 8.21715, 0.74", "28.5913, 13.0281, 8.75924, 0.74", "29.0803, 14.8958, 9.20673, 0.44", "29.4509, 16.4764, 9.59041, 0.44", "29.9412, 18.8177, 10.1623, 0.66", "30.1172, 19.9456, 10.4166, 0.88", "30.3381, 21.5786, 10.8287, 0.88", "30.5158, 23.078, 11.2703, 1.03", "30.7963, 25.2221, 11.964, 0.96", "31.022, 26.7399, 12.4826, 0.52", "31.2452, 27.9602, 12.9122, 0.52", "31.4937, 29.5801, 13.491, 0.88", "31.6972, 30.8997, 13.9689, 0.66", "31.932, 32.3753, 14.5181, 0.88", "32.1391, 33.6915, 15.0178, 0.88", "32.4221, 35.6316, 15.7793, 0.29", "32.6098, 37.1985, 16.3876, 0.29", "32.7243, 38.2798, 16.7883, 0.29", "32.9172, 40.1213, 17.4828, 0.44", "33.0606, 41.2177, 17.9277, 0.74", "33.2876, 42.5374, 18.4774, 0.88", "33.4588, 43.3354, 18.8235, 1.11", "33.6138, 43.9675, 19.0939, 1.11", "33.9019, 45.408, 19.6612, 0.29", "34.2138, 46.8386, 20.1505, 0.29", "34.5769, 48.1979, 20.5752, 0.29", "37.9604, 62.4623, 28.6779, 0.29", "43.4737, 76.6582, 35.7243, 0.29", "47.1232, 91.9438, 41.3398, 0.29", "49.2021, 107.755, 46.0989, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.95552, 38.3192, 1.13455, 0.59", "9.5476, 53.0936, 1.13455, 0.59", "12.1397, 67.8679, 1.13455, 0.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-85.4621, -57.1224, 3.08755, 0.44", "-87.1669, -57.488, 3.37009, 0.44", "-88.0313, -57.7257, 3.53592, 0.29", "-88.9372, -58.0255, 3.70933, 0.29", "-89.4663, -58.2153, 3.80864, 0.29", "-90.5831, -58.6239, 3.99612, 0.37", "-91.093, -58.7975, 4.07733, 0.37", "-91.8518, -59.0788, 4.14364, 0.29", "-92.5858, -59.3826, 4.24515, 0.29", "-93.1522, -59.6454, 4.35134, 0.29", "-93.5461, -59.8389, 4.43109, 0.29", "-94.1583, -60.1332, 4.54673, 0.29", "-94.7557, -60.3894, 4.62686, 0.44", "-95.5753, -60.7032, 4.7093, 0.44", "-96.0166, -60.8698, 4.775, 0.44", "-96.6741, -61.1312, 4.92087, 0.66", "-97.3504, -61.4321, 5.1427, 0.66", "-97.7147, -61.622, 5.32189, 0.52", "-98.3966, -62.0414, 5.8509, 0.44", "-98.7256, -62.3124, 6.28543, 0.66", "-98.975, -62.5806, 6.77889, 0.66", "-99.2109, -62.8841, 7.36843, 0.52", "-99.5208, -63.2814, 8.15858, 0.52", "-99.7758, -63.6461, 8.8825, 0.44", "-99.9793, -63.9662, 9.52079, 0.37", "-100.33, -64.4697, 10.4978, 0.37", "-100.651, -64.8631, 11.2639, 0.29", "-101.062, -65.2449, 12.0442, 0.29", "-107.305, -69.5887, 14.2127, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-85.4621, -57.1224, 3.08755, 1.11", "-86.1507, -57.3732, 3.15947, 1.11", "-86.6848, -57.6163, 3.21834, 1.11", "-87.7686, -58.1433, 3.3533, 0.88", "-88.5944, -58.5232, 3.44799, 0.88", "-89.8495, -59.055, 3.57378, 0.88", "-91.1563, -59.5613, 3.67721, 0.88", "-91.872, -59.8353, 3.73079, 0.88", "-92.5341, -60.0881, 3.76173, 0.81", "-93.2744, -60.3672, 3.77422, 0.81", "-93.8085, -60.5499, 3.77309, 0.81", "-94.7578, -60.8427, 3.76232, 0.96", "-95.253, -61.0115, 3.7576, 0.96", "-95.7567, -61.237, 3.75653, 0.96", "-96.2311, -61.5284, 3.76186, 0.96", "-96.8481, -61.9845, 3.78278, 0.96", "-97.0526, -62.1452, 3.78744, 0.96", "-97.6753, -62.6314, 3.78102, 0.88", "-98.4516, -63.1784, 3.72975, 0.88", "-99.0061, -63.5578, 3.68123, 1.11", "-99.5652, -63.9426, 3.63014, 1.11", "-100.209, -64.407, 3.5637, 0.96", "-100.757, -64.8275, 3.53313, 0.96", "-101.515, -65.4508, 3.53378, 0.88", "-102.383, -66.234, 3.54727, 0.88", "-103.047, -66.8757, 3.53496, 0.96", "-103.573, -67.4043, 3.50288, 0.96", "-104.318, -68.1428, 3.42613, 0.88", "-104.668, -68.4805, 3.36586, 0.74", "-105.447, -69.2038, 3.18371, 0.96", "-106.135, -69.7915, 2.99629, 1.11", "-106.696, -70.2463, 2.84591, 1.25", "-107.187, -70.6378, 2.72996, 1.25", "-107.982, -71.2761, 2.56601, 1.03", "-109.067, -72.1683, 2.42161, 0.88", "-109.862, -72.8593, 2.37488, 0.88", "-110.667, -73.5965, 2.35827, 0.88", "-111.339, -74.2196, 2.34547, 0.88", "-111.987, -74.798, 2.32613, 1.33", "-112.498, -75.2106, 2.30407, 1.33", "-113.107, -75.6721, 2.26395, 1.18", "-113.534, -75.9806, 2.22605, 0.96", "-114.305, -76.4973, 2.1531, 0.96", "-115.018, -76.9215, 2.08188, 0.96", "-115.984, -77.4117, 1.9937, 0.88", "-116.828, -77.7424, 1.92778, 0.81", "-117.308, -77.8761, 1.90187, 0.81", "-117.87, -78.0061, 1.88083, 0.74", "-118.288, -78.1134, 1.87673, 0.74", "-118.823, -78.2916, 1.89093, 0.74", "-119.589, -78.6398, 1.9446, 0.74", "-120.015, -78.9193, 1.9959, 1.11", "-120.663, -79.5219, 2.1123, 1.11", "-121.453, -80.4309, 2.28351, 0.88", "-121.964, -81.109, 2.41306, 0.88", "-122.354, -81.6799, 2.52178, 0.88", "-122.889, -82.4781, 2.66892, 0.81", "-123.621, -83.5207, 2.81844, 0.81", "-123.994, -84.0152, 2.86822, 1.18", "-124.402, -84.552, 2.8966, 1.33", "-124.842, -85.1013, 2.90125, 1.33", "-125.561, -85.9355, 2.87358, 0.88", "-126.272, -86.7081, 2.80509, 0.81", "-127.016, -87.4642, 2.71305, 0.81", "-127.899, -88.328, 2.57825, 0.81", "-128.563, -88.9645, 2.44858, 0.81", "-129.188, -89.5514, 2.31532, 1.11", "-129.566, -89.9054, 2.22817, 1.25", "-130.019, -90.3268, 2.12405, 2.14", "-130.453, -90.7584, 2.0154, 2.5", "-131.047, -91.3421, 1.86399, 1.92", "-131.894, -92.2998, 1.63806, 1.11", "-132.254, -92.7626, 1.54078, 0.96", "-132.745, -93.4507, 1.41478, 1.4", "-133.367, -94.3842, 1.23092, 1.69" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-9.24936, -136.437, -1.71643, 0.37", "-8.11249, -138.546, -1.26705, 0.37", "-7.80754, -139.09, -1.18097, 0.52", "-7.43758, -139.755, -1.10494, 0.66", "-7.02655, -140.513, -1.03441, 0.37", "-6.72191, -141.073, -0.991136, 0.44", "-6.36916, -141.724, -0.951269, 0.44", "-5.96914, -142.498, -0.984088, 0.29", "-5.56643, -143.224, -1.0217, 0.29", "-5.17841, -143.832, -1.07165, 0.59", "-4.79656, -144.352, -1.14628, 0.59", "-4.34091, -144.892, -1.26139, 0.37", "-3.85901, -145.398, -1.40923, 0.66", "-3.39566, -145.822, -1.56943, 0.52", "-2.6996, -146.384, -1.83883, 0.37", "-2.17369, -146.777, -2.06295, 0.37", "-1.39092, -147.355, -2.42361, 0.37", "-0.636722, -147.909, -2.7946, 1.03", "-0.0940385, -148.315, -3.07902, 1.18", "0.410862, -148.705, -3.36448, 0.81", "0.804156, -149.02, -3.60168, 0.52", "1.5397, -149.614, -4.0467, 0.52", "2.23693, -150.201, -4.47259, 0.59", "2.83469, -150.758, -4.86918, 0.59", "3.31392, -151.261, -5.20973, 0.81", "3.69961, -151.701, -5.49529, 0.81", "4.11845, -152.212, -5.81932, 0.66", "4.41618, -152.603, -6.06175, 0.29", "5.08975, -153.557, -6.63182, 0.52", "5.66044, -154.389, -7.12315, 1.03", "5.86254, -154.694, -7.30372, 1.47", "6.23157, -155.225, -7.63475, 1.62", "6.73015, -155.865, -8.07597, 1.03", "7.22372, -156.415, -8.48358, 0.29", "7.71414, -156.89, -8.8576, 0.29", "8.28987, -157.398, -9.29254, 0.37", "8.88995, -157.92, -9.74473, 0.66", "9.20167, -158.186, -9.9736, 0.81", "9.70251, -158.593, -10.3215, 0.96", "10.086, -158.895, -10.5748, 0.44", "10.3957, -159.131, -10.7662, 0.29", "11.008, -159.578, -11.1133, 0.29", "11.4731, -159.955, -11.3692, 0.59", "11.9213, -160.365, -11.609, 0.74", "12.2809, -160.732, -11.7982, 0.74", "12.7625, -161.281, -12.0515, 0.74", "13.1445, -161.764, -12.2592, 0.44", "13.6476, -162.459, -12.5412, 0.29", "13.9412, -162.895, -12.7142, 0.66", "14.3014, -163.452, -12.9384, 0.88", "14.6354, -163.966, -13.1518, 0.96", "15.1198, -164.685, -13.4518, 0.66", "15.6223, -165.422, -13.7556, 0.37", "16.2215, -166.252, -14.1078, 0.74", "16.5568, -166.7, -14.3019, 0.81", "16.9458, -167.225, -14.5227, 0.37", "17.467, -167.96, -14.8144, 0.37", "17.9149, -168.62, -15.0635, 0.37", "18.2856, -169.188, -15.272, 0.37", "18.5813, -169.663, -15.4428, 0.52", "18.9302, -170.225, -15.6538, 0.52", "19.2856, -170.796, -15.8818, 0.37", "19.6442, -171.397, -16.1296, 0.37", "20.0647, -172.082, -16.4195, 0.81", "20.3207, -172.456, -16.5928, 0.88", "20.7599, -173.025, -16.8858, 0.59", "21.1431, -173.478, -17.1366, 0.37", "21.5368, -173.905, -17.3911, 0.37", "22.044, -174.418, -17.7106, 0.44", "23.0915, -175.395, -18.3554, 0.44", "23.7814, -175.962, -18.7713, 1.18", "24.3042, -176.355, -19.0797, 1.47", "24.8799, -176.765, -19.4278, 1.47", "25.7218, -177.362, -19.9534, 1.18", "26.3668, -177.857, -20.3803, 0.29", "26.7613, -178.195, -20.6609, 0.29", "27.0534, -178.471, -20.891, 0.29", "27.5515, -179.014, -21.3515, 0.59", "28.0103, -179.607, -21.8429, 0.66", "28.2472, -179.98, -22.1436, 0.74", "28.481, -180.417, -22.4706, 0.59", "28.7314, -180.958, -22.8424, 0.44", "29.0228, -181.651, -23.3008, 0.29", "29.1873, -182.122, -23.5798, 0.37", "29.417, -182.914, -24.009, 0.52", "29.5723, -183.524, -24.2926, 1.03", "29.7165, -184.163, -24.5774, 1.55", "29.8454, -184.716, -24.8163, 1.55", "30.1651, -186.113, -25.4106, 0.44", "30.3851, -187.023, -25.8172, 0.37", "30.9529, -189.049, -26.8387, 0.29", "31.1038, -189.477, -27.0863, 0.29", "31.6079, -190.572, -27.8164, 1.47", "31.8243, -190.925, -28.0992, 1.92", "32.2766, -191.483, -28.6614, 2.06", "32.9588, -192.158, -29.5424, 0.81", "33.8311, -192.856, -30.7495, 0.29", "34.3717, -193.263, -31.5351, 0.29", "35.0846, -193.776, -32.5548, 0.44", "35.4454, -194.033, -33.0346, 0.52", "36.3337, -194.673, -34.1082, 0.29", "37.0214, -195.176, -34.828, 0.88", "37.45, -195.489, -35.1862, 0.74", "38.5456, -196.31, -35.8389, 0.29", "39.3705, -196.92, -36.1695, 0.29", "40.2117, -197.536, -36.4097, 0.59", "40.7738, -197.947, -36.521, 0.66", "41.8526, -198.749, -36.6974, 0.29", "42.9281, -199.593, -36.8787, 0.29", "43.615, -200.202, -37.0332, 0.29", "44.2301, -200.836, -37.2055, 1.03", "44.6634, -201.334, -37.3592, 1.47", "45.041, -201.816, -37.5309, 1.18", "45.7058, -202.755, -37.9062, 0.22", "46.2874, -203.623, -38.2708, 0.22", "47.0165, -204.744, -38.7673, 0.22", "47.3274, -205.204, -38.9805, 0.52", "47.8636, -205.972, -39.3508, 0.29", "48.3691, -206.681, -39.7089, 0.29", "48.6863, -207.107, -39.946, 0.88", "49.1301, -207.679, -40.2516, 0.88", "49.7922, -208.546, -40.6846, 0.29", "50.1006, -208.947, -40.8652, 0.29", "50.6633, -209.641, -41.1276, 0.96", "51.0771, -210.099, -41.2638, 1.4", "51.5297, -210.563, -41.3717, 1.77", "51.8204, -210.835, -41.4216, 1.77", "52.9693, -211.84, -41.5951, 0.22", "54.1605, -212.801, -41.7395, 0.22", "55.0969, -213.492, -41.857, 0.88", "55.5159, -213.789, -41.9204, 1.33", "55.9382, -214.082, -42.0068, 1.33", "56.8924, -214.729, -42.2315, 0.22", "58.0574, -215.505, -42.557, 0.22", "59.2705, -216.34, -42.9678, 0.22", "60.3496, -217.137, -43.3999, 0.22", "60.969, -217.624, -43.6737, 0.74", "61.298, -217.905, -43.8335, 0.88", "61.6745, -218.264, -44.0408, 0.52", "62.3141, -218.993, -44.4554, 0.22", "62.6285, -219.411, -44.6777, 0.88", "62.973, -219.907, -44.9178, 1.33", "63.2476, -220.32, -45.1005, 1.33", "63.8907, -221.335, -45.5074, 0.29", "64.6471, -222.581, -45.9462, 0.29", "65.0192, -223.202, -46.1348, 0.44", "65.3491, -223.748, -46.2776, 0.59", "65.6555, -224.249, -46.3905, 0.59", "66.1543, -225.051, -46.5458, 0.22", "66.6656, -225.876, -46.6874, 0.22", "66.9831, -226.379, -46.7754, 0.74", "67.1728, -226.678, -46.8346, 0.88", "67.4204, -227.06, -46.93, 0.88", "67.9147, -227.806, -47.1256, 0.22", "68.7826, -229.068, -47.4967, 0.22", "69.1642, -229.62, -47.682, 0.52", "69.4078, -229.98, -47.8148, 0.66", "69.7848, -230.54, -48.0351, 0.44", "74.8826, -236.116, -52.5074, 0.44" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.24936, -136.437, -1.71643, 2.28", "-9.68285, -137.559, -1.37724, 2.28", "-10.0851, -138.52, -1.01885, 1.62", "-10.607, -139.664, -0.568831, 1.33", "-11.1425, -140.74, -0.146043, 0.88", "-11.4105, -141.236, 0.0475585, 0.88", "-11.8447, -141.965, 0.335406, 1.03", "-12.732, -143.27, 0.8665, 1.03", "-13.5157, -144.27, 1.28736, 0.96", "-14.1539, -144.992, 1.58175, 0.88", "-14.7123, -145.608, 1.79302, 1.11", "-15.3379, -146.348, 1.96508, 1.33", "-15.8404, -147.049, 2.03985, 1.55", "-16.2537, -147.761, 2.033, 1.25", "-16.5618, -148.476, 1.96209, 0.96", "-16.8357, -149.455, 1.80254, 0.88", "-17.0529, -150.668, 1.54853, 0.88", "-17.1993, -151.962, 1.25245, 0.88", "-17.2853, -153.099, 0.987183, 1.03", "-17.3339, -154.162, 0.742572, 1.03", "-17.3693, -155.413, 0.475784, 1.03", "-17.3838, -156.554, 0.255391, 1.25", "-17.3681, -157.871, 0.0355065, 1.55", "-17.3207, -158.877, -0.107516, 1.55", "-17.1982, -160.264, -0.281113, 1.33", "-17.0657, -161.398, -0.408998, 1.33", "-16.9456, -162.41, -0.509603, 1.11", "-16.7962, -163.493, -0.571553, 1.11", "-16.6432, -164.686, -0.593183, 0.96", "-16.5532, -165.575, -0.576745, 0.96", "-16.4567, -166.864, -0.491197, 0.88", "-16.3659, -168.566, -0.321209, 0.88", "-16.3114, -170.045, -0.125687, 1.03", "-16.2806, -171.362, 0.084724, 1.25", "-16.2702, -172.615, 0.310435, 1.33", "-16.2744, -173.603, 0.502754, 1.62", "-16.2665, -174.618, 0.710726, 2.5", "-16.2436, -175.168, 0.81611, 2.8", "-16.2108, -175.848, 0.91033, 3.02", "-16.1508, -176.485, 0.994443, 3.02", "-16.1066, -176.912, 1.04722, 3.32" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.439221, -48.8933, -7.78397, 0.81", "-0.773568, -50.5281, -7.69967, 0.81", "-1.08711, -51.6281, -7.59083, 0.66", "-1.52188, -52.8571, -7.4457, 0.66", "-2.03059, -54.1442, -7.28751, 0.52", "-2.24207, -54.6584, -7.22478, 0.52", "-2.80289, -56.0131, -7.06412, 0.74", "-3.35978, -57.3904, -6.83904, 0.74", "-3.85548, -58.5296, -6.66229, 0.88", "-4.43859, -59.7644, -6.49882, 0.59", "-4.82496, -60.5692, -6.4257, 1.03", "-5.17732, -61.3593, -6.36401, 1.25", "-5.51981, -62.2884, -6.29899, 1.03", "-5.87401, -63.4886, -6.22578, 0.66", "-6.1373, -64.4675, -6.17224, 0.66", "-6.4079, -65.4779, -6.13339, 0.81", "-6.7068, -66.6608, -6.12418, 0.81", "-6.91896, -67.6512, -6.1636, 0.66", "-7.08217, -68.7005, -6.25777, 0.52", "-7.15224, -69.3237, -6.35527, 0.52", "-7.22939, -70.0875, -6.49735, 0.52", "-7.34691, -71.1761, -6.72871, 0.66", "-7.47262, -72.1646, -6.94869, 0.66", "-7.63035, -73.2091, -7.19035, 0.59", "-7.83221, -74.3541, -7.44372, 1.18", "-7.99894, -75.3513, -7.65441, 1.55", "-8.17953, -76.3048, -7.83477, 1.99", "-8.48429, -77.4582, -8.0226, 2.73", "-8.77521, -78.3102, -8.13931, 2.87", "-9.09614, -79.1042, -8.2474, 3.02" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.439221, -48.8933, -7.78397, 0.52", "0.188911, -50.1661, -8.99386, 0.52", "0.326844, -50.466, -9.24735, 0.52", "0.810223, -51.4569, -10.0859, 0.52", "1.2089, -52.1914, -10.7151, 0.66", "1.47619, -52.6408, -11.0845, 0.66", "1.72552, -53.0201, -11.3893, 0.44", "2.02624, -53.5438, -11.8049, 0.88", "2.295, -54.0357, -12.1583, 1.33", "2.59252, -54.5656, -12.5021, 1.47", "2.93242, -55.1794, -12.971, 1.03", "3.33436, -56.1339, -13.8165, 0.44", "3.40358, -56.7157, -14.448, 0.44", "3.29326, -57.382, -15.374, 0.37", "3.13345, -57.8647, -16.1706, 0.37", "2.92921, -58.4846, -17.3655, 0.37", "2.82602, -58.8911, -18.27, 0.74", "2.79795, -59.168, -18.9515, 0.96", "2.83858, -59.5536, -19.885, 0.96", "2.98902, -60.2544, -21.5136, 0.44", "3.14771, -60.7371, -22.543, 1.33", "3.40807, -61.4011, -23.831, 1.55", "3.64984, -62.0125, -24.9509, 1.33", "3.98037, -62.8473, -26.3505, 0.81", "4.12838, -63.2053, -26.8887, 1.25", "4.33042, -63.6493, -27.4713, 0.88", "4.54124, -64.1483, -28.0293, 0.37", "4.7145, -64.5883, -28.4341, 0.81", "4.8854, -65.0601, -28.814, 1.03", "4.99757, -65.3441, -29.0154, 1.03", "5.42496, -66.3288, -29.6794, 0.29", "5.6563, -66.8291, -29.9937, 0.29", "5.98992, -67.4775, -30.368, 1.84", "6.31616, -68.0238, -30.6835, 2.14", "7.2391, -69.3726, -31.5079, 0.29", "7.72299, -69.9912, -31.8999, 0.81", "8.22012, -70.5471, -32.261, 0.81", "8.74365, -71.0654, -32.6231, 0.52", "9.46505, -71.7046, -33.1292, 1.25", "9.93898, -72.0931, -33.4722, 1.4", "11.1589, -73.0541, -34.3547, 0.22", "11.9113, -73.6391, -34.8706, 0.22", "12.7627, -74.308, -35.4225, 1.4", "13.294, -74.7528, -35.7483, 2.21", "13.5363, -74.9733, -35.8824, 2.21", "15.1014, -76.5303, -36.6604, 0.22", "15.52, -76.9691, -36.858, 0.74", "15.8896, -77.3761, -37.039, 1.03", "16.485, -78.0813, -37.3412, 0.59", "17.8724, -79.8224, -38.0621, 0.22", "19.6293, -82.0857, -39.0163, 0.22", "20.2418, -82.8905, -39.3824, 0.81", "20.6963, -83.4854, -39.6662, 0.96", "22.1716, -85.4241, -40.6324, 0.22", "23.095, -86.6212, -41.2803, 0.22", "23.6049, -87.2827, -41.6775, 0.88", "24.1079, -87.9243, -42.1087, 0.88", "25.5261, -89.7171, -43.3681, 0.15", "26.5986, -91.0267, -44.2605, 0.15", "27.2274, -91.7668, -44.7742, 0.15", "27.7985, -92.4412, -45.2323, 1.62", "28.1536, -92.8763, -45.5099, 1.92", "28.435, -93.2256, -45.7086, 1.92", "30.2545, -95.5486, -46.9132, 0.22", "30.6439, -96.045, -47.1469, 0.66", "30.9395, -96.4309, -47.3171, 0.88", "31.2429, -96.8245, -47.4934, 0.88", "32.2137, -98.1099, -48.1753, 0.15", "32.9288, -99.1516, -48.8531, 0.15", "33.3056, -99.7865, -49.331, 0.81", "33.5303, -100.241, -49.6855, 1.03", "33.696, -100.652, -50.015, 1.03", "34.1152, -102.037, -51.163, 0.22", "34.4095, -103.542, -52.4656, 0.22", "34.5046, -104.155, -53.0339, 0.22", "34.6288, -105.042, -53.9046, 1.03", "34.6955, -105.503, -54.3615, 1.62", "34.7641, -105.968, -54.8491, 1.62", "34.8978, -106.753, -55.7248, 1.03", "35.2116, -108.361, -57.6077, 0.22", "35.3571, -109.113, -58.5854, 0.44", "35.4523, -109.526, -59.1519, 0.44", "35.6757, -110.437, -60.4109, 0.66", "35.7986, -110.896, -61.0275, 0.96", "35.9539, -111.426, -61.7248, 0.37", "36.4942, -113.125, -63.8724, 0.66", "36.6201, -113.474, -64.301, 0.66", "37.109, -114.741, -65.87, 0.22", "37.3977, -115.409, -66.6623, 0.22", "37.6792, -116.004, -67.3517, 0.81", "37.9753, -116.539, -67.9507, 0.96", "38.1981, -116.886, -68.2416, 0.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "18.7403, 161.998, -23.1343, 0.37", "20.7933, 160.959, -20.7583, 0.37", "21.2122, 160.747, -20.2735, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "18.7403, 161.998, -23.1343, 0.22", "19.3668, 163.544, -23.0271, 0.22", "19.6918, 164.384, -23.0104, 0.22", "19.943, 165.048, -23.0144, 0.74", "20.0316, 165.295, -23.0195, 0.74", "20.4417, 166.435, -23.0431, 0.15", "20.7071, 167.173, -23.0583, 0.15", "20.9142, 167.706, -23.1294, 0.66", "21.0155, 168.035, -23.1676, 0.88", "21.1174, 168.409, -23.1922, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-12.5725, 53.1475, 1.14483, 0.66", "-12.9493, 54.9193, 0.895419, 0.66", "-13.034, 55.5916, 0.82972, 0.96", "-13.1287, 56.3811, 0.767787, 0.96", "-13.2503, 57.4604, 0.697253, 0.59", "-13.3462, 58.4171, 0.642497, 0.59", "-13.4411, 59.5489, 0.584244, 0.59", "-13.5373, 61.1964, 0.553551, 0.59", "-13.5575, 61.9741, 0.542189, 0.52", "-13.5615, 63.1363, 0.530127, 0.88", "-13.5652, 63.9784, 0.514911, 1.11", "-13.5912, 64.9825, 0.483634, 1.11", "-13.638, 66.1385, 0.448896, 0.74", "-13.7153, 67.3502, 0.414049, 0.74", "-13.8307, 68.9007, 0.374859, 0.74", "-13.9325, 69.9698, 0.341553, 0.52", "-14.067, 71.1121, 0.288813, 0.52", "-14.1752, 71.9342, 0.239634, 0.96", "-14.3392, 73.1469, 0.139294, 1.11", "-14.5891, 74.9438, -0.0423072, 1.11", "-14.7525, 76.1239, -0.178441, 1.11", "-14.8951, 77.3007, -0.305131, 0.81", "-15.0012, 78.3357, -0.409188, 0.74", "-15.0858, 79.415, -0.507102, 0.74", "-15.1359, 80.4278, -0.582718, 0.44", "-15.1704, 81.2853, -0.628022, 0.44", "-15.2315, 82.698, -0.66076, 0.74", "-15.2726, 83.6739, -0.661958, 0.74", "-15.3091, 84.7119, -0.653955, 0.37", "-15.3144, 85.79, -0.639454, 0.74", "-15.3058, 86.7301, -0.664635, 0.96", "-15.2869, 87.8066, -0.7394, 0.96", "-15.2602, 88.9889, -0.886734, 0.81", "-15.2252, 90.0975, -1.06203, 0.52", "-15.1733, 91.255, -1.27554, 0.52", "-15.0643, 92.7732, -1.58266, 1.03", "-14.9885, 93.58, -1.75499, 1.55", "-14.9126, 94.309, -1.91841, 1.69", "-14.862, 94.784, -2.02453, 1.69", "-14.7303, 95.9597, -2.26503, 0.37", "-14.6126, 96.9446, -2.42698, 0.44", "-14.5293, 97.4587, -2.47765, 0.44", "-14.4136, 98.0516, -2.51789, 0.44", "-14.1998, 99.0339, -2.56087, 0.29", "-14.0937, 99.4518, -2.57693, 0.59", "-13.8799, 100.161, -2.60233, 0.44", "-13.5292, 101.277, -2.63815, 0.29", "-13.2216, 102.312, -2.667, 1.18", "-13.0669, 102.869, -2.67979, 1.18", "-12.8415, 103.705, -2.70088, 0.52", "-12.6269, 104.507, -2.7212, 0.29", "-12.3744, 105.423, -2.71704, 0.29", "-12.1606, 106.255, -2.66544, 0.29", "-12.039, 106.8, -2.6051, 0.29", "-11.8331, 107.887, -2.44513, 0.81", "-11.6697, 108.84, -2.27895, 0.44", "-11.4961, 109.754, -2.12658, 0.22", "-11.2784, 110.675, -1.98599, 0.44", "-11.1867, 111.028, -1.92875, 0.44", "-10.9957, 111.786, -1.80198, 0.29", "-10.8393, 112.471, -1.68213, 0.29", "-10.6223, 113.406, -1.53976, 0.29", "-10.4794, 114.002, -1.4716, 0.29", "-10.2897, 114.769, -1.3936, 0.66", "-10.1398, 115.392, -1.32366, 0.66", "-9.95623, 116.18, -1.25644, 0.74", "-9.79465, 117.038, -1.1782, 0.37", "-9.69066, 117.71, -1.11336, 0.37", "-9.55154, 118.648, -1.05277, 0.52", "-9.44337, 119.355, -1.03599, 0.59", "-9.27657, 120.43, -1.0264, 0.44", "-9.15563, 121.188, -1.02751, 0.29", "-9.06381, 121.719, -1.02577, 0.29", "-8.86285, 122.895, -1.00678, 1.11", "-8.74977, 123.568, -0.987443, 1.25", "-8.67022, 124.048, -0.967946, 1.25", "-8.48591, 125.058, -0.926693, 0.66", "-8.35375, 125.659, -0.921821, 0.29", "-8.11659, 126.595, -0.926882, 0.29", "-7.87977, 127.43, -0.940146, 0.29", "-7.64267, 128.185, -0.958953, 0.29", "-7.26059, 129.314, -0.998517, 0.96", "-7.09341, 129.803, -1.02473, 1.47", "-6.96278, 130.221, -1.05415, 1.47", "-6.89511, 130.468, -1.07545, 1.47", "-6.72715, 131.189, -1.13659, 0.74", "-6.55544, 132.018, -1.19974, 0.29", "-6.40612, 132.867, -1.25704, 0.52", "-6.26716, 133.652, -1.30481, 0.74", "-6.06454, 134.65, -1.35772, 0.44", "-5.88052, 135.444, -1.39517, 0.29", "-5.73425, 136.001, -1.41943, 0.29", "-5.4997, 136.766, -1.44871, 0.66", "-5.31311, 137.313, -1.47065, 0.74", "-5.03935, 138.083, -1.5033, 0.74", "-4.73945, 138.947, -1.53314, 0.29", "-4.48774, 139.72, -1.55469, 0.29", "-4.01864, 141.276, -1.58995, 0.29", "-3.73302, 142.339, -1.55767, 0.52", "-3.57983, 142.983, -1.51233, 1.18", "-3.46595, 143.543, -1.45508, 1.4", "-3.31285, 144.454, -1.33843, 1.4", "-3.21732, 145.17, -1.23399, 0.66", "-3.01612, 146.848, -0.983554, 0.29", "-2.87567, 147.904, -0.848897, 0.29", "-2.77066, 148.54, -0.804864, 0.37", "-2.60464, 149.394, -0.794616, 0.37", "-2.40687, 150.274, -0.823421, 0.37", "-2.00703, 151.829, -0.94368, 0.37", "-1.51255, 153.514, -1.16682, 0.37", "-0.986804, 155.147, -1.40395, 1.33", "-0.70524, 155.929, -1.5352, 1.99", "-0.466734, 156.549, -1.65012, 1.99", "-0.364895, 156.811, -1.70201, 1.99", "-0.174676, 157.296, -1.7975, 1.99", "0.226786, 158.307, -1.97691, 0.59", "0.702889, 159.482, -2.14056, 0.29", "1.04611, 160.306, -2.20771, 0.59", "1.31667, 160.944, -2.23892, 0.59", "1.89159, 162.281, -2.26445, 0.37", "2.20178, 163.025, -2.25653, 0.37", "2.67973, 164.232, -2.20727, 0.37", "3.21479, 165.686, -2.10825, 0.74", "3.40674, 166.285, -2.06648, 0.74", "3.57115, 166.905, -2.01638, 0.88", "3.75483, 167.806, -1.93732, 0.44", "3.98925, 169.364, -1.83415, 0.29", "4.06744, 170.196, -1.82586, 0.52", "4.14565, 171.74, -1.90768, 1.25", "4.16053, 172.397, -1.96168, 1.62", "4.16441, 172.828, -2.01929, 1.62", "4.16386, 173.712, -2.17942, 0.96", "4.16703, 175.027, -2.48364, 0.29", "4.18972, 175.783, -2.67687, 0.29", "4.24669, 176.702, -2.90594, 0.29", "4.31309, 177.666, -3.11455, 0.74", "4.33842, 178.104, -3.18735, 0.96", "4.36359, 178.614, -3.24559, 0.96", "4.41999, 179.906, -3.35805, 0.52", "4.49366, 181.689, -3.52285, 0.37", "4.54034, 182.913, -3.63188, 0.29", "4.56805, 184.066, -3.74077, 0.66", "4.57929, 184.839, -3.82972, 0.66", "4.58231, 186.289, -4.02558, 0.29", "4.58264, 187.008, -4.12883, 0.29", "4.59182, 188.903, -4.40638, 0.29", "4.63201, 190.966, -4.70124, 1.99", "4.64318, 191.435, -4.76095, 2.28", "4.6534, 192.098, -4.82885, 1.55", "4.66028, 192.826, -4.86601, 0.88", "4.65816, 194.017, -4.85595, 0.22", "4.64841, 194.576, -4.82465, 0.22", "4.62185, 195.597, -4.7285, 0.66", "4.60467, 196.243, -4.66763, 0.66", "4.58366, 197.335, -4.57653, 0.29", "4.55575, 199.082, -4.46838, 0.22", "4.5638, 199.967, -4.42622, 0.22", "4.59617, 200.904, -4.39811, 0.52", "4.69386, 202.075, -4.39026, 0.44", "4.82608, 203.094, -4.40548, 0.44", "5.02511, 204.269, -4.45374, 0.44", "5.41867, 206.09, -4.55615, 0.22", "5.74806, 207.446, -4.64061, 0.66", "6.04654, 208.542, -4.71491, 1.77", "6.22038, 209.122, -4.75615, 1.77", "6.39214, 209.641, -4.79381, 1.77", "6.68069, 210.402, -4.84839, 0.88", "7.03214, 211.249, -4.87453, 0.29", "7.28009, 211.825, -4.86972, 0.52", "7.90796, 213.314, -4.82055, 0.22", "8.26745, 214.164, -4.79718, 0.52", "8.67546, 215.12, -4.78389, 0.52", "9.55739, 217.222, -4.78223, 0.22", "10.224, 218.829, -4.80686, 0.37", "10.655, 219.886, -4.82732, 0.37", "11.1196, 221.063, -4.86002, 1.92", "11.323, 221.604, -4.88395, 2.21", "11.5159, 222.163, -4.93002, 2.21", "11.727, 222.821, -5.06659, 1.18" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-12.5725, 53.1475, 1.14483, 0.66", "-12.1771, 54.4079, 1.26423, 0.66", "-11.9353, 55.1751, 1.33025, 0.81", "-11.7582, 55.7465, 1.39574, 0.37", "-11.5582, 56.4349, 1.47977, 0.29", "-11.2185, 57.5886, 1.61202, 0.29", "-11.0021, 58.2642, 1.68768, 0.29", "-10.7571, 58.9131, 1.7395, 0.29", "-10.3736, 59.7698, 1.81652, 0.29", "-10.0306, 60.4731, 1.88152, 0.29", "-9.68891, 61.1735, 1.94584, 0.74", "-9.45123, 61.6445, 1.99416, 0.74", "-9.0008, 62.4428, 2.07463, 0.29", "-8.73331, 62.9016, 2.12556, 0.37", "-8.12056, 63.9685, 2.23526, 0.37", "-7.79584, 64.5719, 2.30318, 0.37", "-7.46255, 65.284, 2.38639, 0.37", "-7.32814, 65.612, 2.42559, 0.37", "-7.11363, 66.2103, 2.50256, 0.22", "-6.92151, 66.791, 2.5785, 0.22", "-6.75337, 67.2491, 2.63206, 0.66", "-6.57005, 67.7992, 2.67156, 0.96", "-4.61791, 74.346, 2.62805, 0.96", "-1.02436, 80.1531, 3.68751, 0.96", "1.9084, 86.087, 5.64635, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "31.7281, 9.42671, 7.57572, 0.66", "32.497, 7.84337, 7.7471, 0.66", "32.7131, 7.337, 7.76747, 0.66", "33.0698, 6.56021, 7.82416, 0.88", "33.7195, 5.3113, 7.96946, 0.88", "34.1899, 4.51827, 8.0989, 0.88", "34.6479, 3.86075, 8.23408, 1.03", "35.189, 3.14942, 8.39271, 1.03", "35.9911, 2.60353, 8.6901, 0.88", "36.6453, 2.47645, 8.94108, 0.88", "37.2108, 2.43562, 9.17094, 0.88", "38.104, 2.34637, 9.56534, 0.81", "39.1242, 2.11496, 10.0629, 0.81", "39.7671, 1.84103, 10.3777, 0.81", "40.577, 1.29127, 10.7326, 0.74", "41.4361, 0.570437, 11.0807, 0.88", "42.1969, -0.158908, 11.3563, 0.88", "43.0094, -1.04828, 11.6195, 0.52", "43.419, -1.51143, 11.7156, 0.52", "43.9299, -2.00832, 11.7629, 0.52", "44.5989, -2.52461, 11.7629, 0.52", "45.3777, -2.97753, 11.7122, 0.74", "46.1766, -3.35827, 11.6298, 0.74", "47.1964, -3.77669, 11.5029, 0.74", "48.5474, -4.27658, 11.3345, 0.74", "49.4864, -4.59873, 11.2082, 0.74", "50.2319, -4.8174, 11.1091, 0.74", "51.0461, -4.97598, 11.0033, 0.74", "51.5238, -5.03172, 10.9571, 0.88", "52.8768, -5.08731, 10.8429, 0.88", "54.0308, -5.09623, 10.7638, 0.88", "55.458, -5.11677, 10.6834, 0.66", "56.4994, -5.1487, 10.6509, 0.66", "59.1735, -5.24618, 10.6361, 0.59", "60.0995, -5.28556, 10.6482, 0.52", "61.5011, -5.31312, 10.6865, 0.52", "62.3465, -5.28481, 10.719, 0.52", "63.2693, -5.17242, 10.7498, 0.52", "64.3751, -4.96988, 10.7852, 0.52", "65.1144, -4.81704, 10.8165, 0.52", "66.3185, -4.61513, 10.8858, 0.52", "67.6242, -4.39496, 10.9701, 0.52", "68.8461, -4.22385, 11.0613, 0.52", "69.9788, -4.15096, 11.1661, 0.52", "71.2617, -4.21301, 11.3195, 0.52", "72.1359, -4.38997, 11.4638, 0.52", "72.9412, -4.64483, 11.6629, 0.52", "73.4796, -4.82932, 11.8323, 0.52", "74.1579, -5.04261, 12.0751, 0.52", "75.5315, -5.38235, 12.6382, 0.29", "77.9899, -5.78732, 13.7349, 0.29", "80.2235, -5.99548, 14.7755, 0.29", "81.3652, -6.00974, 15.3328, 0.29", "82.1861, -5.97983, 15.7434, 0.44", "83.0569, -5.87634, 16.2027, 0.59", "83.6041, -5.73253, 16.5399, 0.59", "84.5001, -5.16417, 17.2041, 0.59", "84.9823, -4.64704, 17.5635, 0.59", "94.2277, -7.58989, 20.2386, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "31.7281, 9.42671, 7.57572, 1.11", "32.8164, 9.11855, 7.66867, 1.11", "33.4843, 8.84475, 7.72824, 1.11", "34.2578, 8.55229, 7.72288, 1.25", "34.8636, 8.3781, 7.68881, 1.47", "35.696, 8.22492, 7.61733, 1.4", "36.4428, 8.15366, 7.53743, 1.4", "37.2904, 8.10345, 7.4042, 1.18", "38.4551, 8.22822, 7.15547, 1.18", "39.2648, 8.46839, 6.93554, 1.18", "39.9606, 8.73022, 6.72588, 1.18", "40.3743, 8.88944, 6.60027, 0.88", "40.7864, 9.01046, 6.48604, 0.88", "41.4283, 9.07378, 6.34059, 0.88", "42.3991, 8.9543, 6.18101, 1.11", "43.132, 8.76224, 6.07433, 1.11", "43.8716, 8.5146, 5.97076, 1.11", "44.7055, 8.19175, 5.86127, 1.25", "45.5535, 7.8226, 5.7592, 1.33", "45.9444, 7.63626, 5.71849, 1.47", "46.589, 7.33893, 5.66536, 1.77" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-133.367, -94.3842, 1.23092, 0.59", "-133.257, -96.3695, 1.47947, 0.59", "-133.208, -97.1979, 1.6201, 0.59", "-133.148, -97.9164, 1.76957, 0.52", "-133.072, -98.7384, 1.9673, 0.52", "-133.016, -99.6248, 2.19036, 0.88", "-132.963, -100.604, 2.44646, 1.03", "-132.948, -101.179, 2.64366, 1.03", "-132.894, -102.186, 3.01388, 1.03", "-132.823, -103.048, 3.3492, 0.29", "-132.778, -103.661, 3.59117, 0.29", "-132.757, -104.167, 3.79081, 0.29", "-132.771, -105.128, 4.15315, 0.59", "-132.836, -105.906, 4.47769, 0.74", "-132.921, -106.456, 4.72481, 0.88", "-133.03, -106.985, 4.9713, 0.88", "-133.149, -107.471, 5.21242, 0.88", "-133.354, -108.118, 5.53994, 0.81", "-133.861, -109.512, 6.24122, 0.37", "-134.134, -110.263, 6.62754, 1.03", "-134.417, -110.998, 7.04483, 1.33", "-134.687, -111.664, 7.44589, 1.33", "-135.06, -112.51, 7.97118, 1.03", "-135.392, -113.219, 8.41297, 0.74", "-135.691, -113.841, 8.77087, 0.37", "-136.109, -114.645, 9.29115, 0.74", "-136.363, -115.103, 9.60252, 0.74", "-136.646, -115.677, 9.94339, 0.59", "-136.828, -116.125, 10.1748, 0.37", "-137.045, -116.798, 10.4499, 0.37", "-137.357, -117.949, 10.7623, 0.66", "-137.572, -118.794, 10.89, 0.74", "-137.958, -120.251, 11.0063, 0.52", "-138.12, -120.867, 11.0259, 0.52", "-138.35, -121.605, 11.0224, 1.33", "-138.649, -122.532, 10.9914, 1.55", "-139.055, -123.741, 10.9718, 1.99", "-139.327, -124.453, 10.9997, 2.21", "-139.715, -125.322, 11.0778, 1.99", "-140.21, -126.37, 11.1721, 1.11", "-140.735, -127.572, 11.2801, 0.37", "-141.124, -128.597, 11.3839, 1.11", "-141.3, -129.117, 11.4366, 1.25", "-141.522, -129.788, 11.5058, 1.25", "-142.015, -131.277, 11.6194, 0.29", "-142.33, -132.232, 11.6703, 0.29", "-142.653, -133.109, 11.7048, 0.44", "-143.004, -134.02, 11.7298, 0.59", "-143.43, -135.092, 11.7681, 0.88", "-143.794, -135.979, 11.8126, 0.96", "-144.199, -136.828, 11.8642, 0.66", "-144.767, -137.826, 11.9523, 0.37", "-145.205, -138.535, 12.0215, 0.29", "-145.698, -139.263, 12.1241, 0.29", "-146.133, -139.892, 12.2449, 0.29", "-146.744, -140.727, 12.4403, 0.29", "-147.663, -141.874, 12.6979, 0.74", "-148.385, -142.656, 12.8981, 1.03", "-149.291, -143.554, 13.1563, 2.28", "-150.009, -144.2, 13.3559, 2.8", "-150.7, -144.81, 13.5452, 3.09", "-151.811, -145.83, 13.8563, 1.84", "-153.097, -147.001, 14.2028, 0.29", "-153.727, -147.606, 14.3886, 0.29", "-154.55, -148.473, 14.6478, 0.29", "-155.379, -149.425, 14.9458, 0.29", "-155.946, -150.211, 15.2179, 0.88", "-156.383, -150.918, 15.4709, 1.11", "-156.721, -151.533, 15.6711, 0.81", "-156.994, -152.065, 15.8491, 0.52", "-157.411, -152.957, 16.1592, 0.29", "-157.878, -154.011, 16.5414, 0.29", "-158.254, -154.912, 16.8757, 0.29", "-158.464, -155.399, 17.0537, 0.29", "-158.864, -156.368, 17.414, 0.81", "-159.206, -157.266, 17.7566, 1.11", "-159.45, -157.97, 18.0308, 0.88", "-159.792, -158.971, 18.4185, 0.29", "-160.203, -160.19, 18.8953, 0.29", "-160.596, -161.293, 19.2746, 0.29", "-160.746, -161.699, 19.4006, 0.29", "-161.097, -162.678, 19.6781, 0.74", "-161.346, -163.384, 19.8594, 0.74", "-161.682, -164.385, 20.1025, 0.44", "-162.053, -165.554, 20.3724, 0.29", "-162.244, -166.136, 20.4992, 0.29", "-162.504, -166.937, 20.7085, 0.29", "-162.776, -167.884, 21.0157, 0.29", "-162.917, -168.417, 21.2313, 0.74", "-163.047, -168.9, 21.4628, 0.74", "-163.29, -169.749, 21.9423, 0.44", "-163.587, -170.701, 22.4997, 0.29", "-163.867, -171.513, 23.012, 0.74", "-164.072, -172.081, 23.3777, 1.11", "-164.265, -172.56, 23.6789, 1.69", "-164.431, -172.965, 23.9246, 1.92", "-164.67, -173.557, 24.2635, 1.92", "-165.005, -174.465, 24.7338, 1.62", "-165.403, -175.574, 25.2795, 0.29", "-165.71, -176.469, 25.6993, 0.22", "-165.978, -177.213, 26.0316, 0.22", "-166.352, -178.226, 26.4559, 0.59", "-166.676, -179.073, 26.7848, 0.74", "-166.922, -179.667, 27.0032, 0.74", "-167.268, -180.428, 27.2865, 0.44", "-167.598, -181.072, 27.5225, 0.29", "-167.994, -181.707, 27.7715, 0.29", "-168.939, -182.957, 28.3063, 0.44", "-169.491, -183.601, 28.5697, 0.59", "-170.044, -184.2, 28.8019, 0.59", "-170.691, -184.895, 29.036, 0.52", "-171.677, -185.95, 29.3416, 1.33", "-172.484, -186.814, 29.5502, 2.06", "-173.234, -187.662, 29.7197, 2.21", "-173.772, -188.349, 29.8353, 2.21", "-174.543, -189.484, 29.9999, 0.81", "-175.001, -190.316, 30.0986, 0.29", "-175.338, -191.082, 30.1679, 0.44", "-175.542, -191.666, 30.2265, 0.44", "-175.798, -192.518, 30.3322, 0.29", "-175.986, -193.162, 30.3976, 0.29", "-176.224, -193.961, 30.4776, 0.29", "-176.404, -194.482, 30.5267, 0.74", "-176.603, -194.949, 30.582, 0.88", "-176.872, -195.492, 30.6642, 0.88", "-177.324, -196.357, 30.8467, 0.29", "-177.792, -197.199, 31.0944, 0.29", "-178.25, -198.023, 31.4312, 0.29", "-178.769, -199.0, 31.9018, 0.52", "-179.007, -199.451, 32.1443, 0.52", "-179.422, -200.261, 32.6348, 0.29", "-179.68, -200.806, 33.0237, 0.29", "-180.137, -201.887, 33.894, 0.59", "-180.379, -202.487, 34.4283, 0.29", "-180.55, -202.871, 34.8046, 0.29", "-180.832, -203.388, 35.3527, 0.74", "-181.332, -204.046, 36.1, 0.88", "-181.819, -204.529, 36.6569, 0.29", "-182.377, -204.961, 37.1654, 0.29", "-183.158, -205.505, 37.7624, 0.96", "-183.793, -205.951, 38.1801, 1.11", "-184.581, -206.551, 38.6054, 1.11", "-185.409, -207.268, 39.0046, 0.29", "-185.942, -207.82, 39.2707, 0.22", "-186.365, -208.387, 39.5048, 0.44", "-186.762, -209.074, 39.7502, 0.44", "-187.289, -210.257, 40.1045, 0.22", "-187.573, -211.011, 40.2903, 0.22", "-187.757, -211.583, 40.4009, 0.22", "-187.96, -212.239, 40.5035, 0.59", "-188.104, -212.712, 40.5739, 0.74", "-188.534, -214.119, 40.7413, 0.29", "-188.764, -214.87, 40.8158, 0.29", "-189.055, -215.809, 40.8981, 0.44", "-189.32, -216.707, 40.9797, 0.44", "-189.655, -217.893, 41.1111, 0.52", "-189.847, -218.566, 41.1989, 0.96", "-190.052, -219.23, 41.3041, 1.4", "-190.283, -219.903, 41.4053, 1.4", "-190.907, -221.429, 41.7111, 0.29", "-191.587, -222.882, 42.0809, 0.22", "-191.954, -223.574, 42.3041, 0.37", "-192.581, -224.643, 42.727, 0.37", "-193.24, -225.669, 43.1944, 0.29", "-194.17, -226.979, 43.8666, 0.74", "-194.693, -227.632, 44.2381, 1.11", "-195.296, -228.316, 44.635, 1.25", "-195.93, -228.991, 45.0083, 1.11", "-196.536, -229.615, 45.3267, 0.59", "-197.322, -230.436, 45.6859, 0.29", "-197.778, -230.955, 45.8378, 0.29", "-198.623, -231.961, 46.0823, 0.22", "-199.178, -232.656, 46.2322, 0.22", "-199.486, -233.055, 46.3153, 0.66", "-199.962, -233.679, 46.4469, 0.66", "-200.933, -234.971, 46.7555, 0.29", "-201.525, -235.743, 46.9541, 0.29", "-202.151, -236.511, 47.1547, 0.29", "-202.806, -237.268, 47.3449, 0.66", "-203.332, -237.845, 47.4815, 0.66", "-204.177, -238.736, 47.6768, 0.22", "-204.758, -239.335, 47.797, 0.22", "-205.73, -240.346, 47.9831, 0.22", "-207.418, -242.152, 48.2665, 0.22", "-207.918, -242.744, 48.3428, 0.22", "-208.43, -243.426, 48.4165, 1.11", "-208.699, -243.856, 48.451, 1.11", "-208.822, -244.107, 48.4734, 1.11", "-209.062, -244.767, 48.5431, 0.66", "-209.344, -245.864, 48.6664, 0.22", "-209.473, -246.535, 48.7567, 0.52", "-209.668, -248.072, 49.0028, 0.22", "-209.82, -249.317, 49.215, 0.22", "-209.887, -249.848, 49.311, 0.59", "-209.974, -250.52, 49.443, 0.59", "-210.097, -251.492, 49.6331, 0.52", "-210.26, -252.927, 49.9113, 0.22", "-210.338, -253.768, 50.0751, 0.22", "-210.367, -254.27, 50.1773, 0.22", "-210.386, -254.84, 50.2951, 0.66", "-210.389, -255.643, 50.5221, 0.81", "-210.336, -256.502, 50.8628, 0.59", "-210.122, -257.672, 51.549, 1.25", "-209.919, -258.263, 52.0087, 1.69", "-209.765, -258.539, 52.2854, 1.92", "-209.06, -259.377, 53.3554, 1.18", "-208.336, -259.956, 54.3366, 0.22", "-207.441, -260.44, 55.3997, 0.22", "-206.812, -260.685, 56.0729, 0.22", "-206.001, -260.955, 56.859, 0.22", "-205.401, -261.148, 57.3875, 0.66", "-204.943, -261.307, 57.7418, 0.66", "-203.681, -261.762, 58.6413, 0.22", "-203.196, -261.951, 58.9675, 0.37", "-202.707, -262.198, 59.3148, 0.37", "-202.321, -262.448, 59.6225, 0.22", "-201.742, -262.893, 60.1199, 0.22", "-206.337, -271.898, 62.8865, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-133.367, -94.3842, 1.23092, 0.37", "-134.95, -94.0357, 1.05168, 0.37", "-135.612, -93.9261, 0.958003, 0.37", "-137.018, -93.7724, 0.685305, 0.29", "-138.084, -93.7036, 0.453469, 0.44", "-139.11, -93.6768, 0.216422, 0.66", "-139.698, -93.6834, 0.068997, 0.81", "-140.204, -93.7184, -0.0804209, 0.81", "-141.765, -93.8971, -0.597683, 0.22", "-142.25, -93.974, -0.781322, 0.22", "-143.121, -94.1179, -1.11149, 0.74", "-143.835, -94.2359, -1.38906, 0.88", "-145.017, -94.4504, -1.88241, 0.22", "-145.494, -94.5458, -2.12941, 0.22", "-145.93, -94.6509, -2.39511, 0.22", "-146.419, -94.7901, -2.72537, 0.74", "-146.929, -94.9806, -3.10494, 0.88", "-147.474, -95.2824, -3.57783, 0.88", "-148.633, -96.1964, -4.75566, 0.22", "-149.035, -96.5748, -5.20129, 0.22", "-149.359, -96.9128, -5.59233, 0.74", "-149.746, -97.4012, -6.15287, 0.74", "-150.572, -98.4026, -7.23003, 0.29", "-150.837, -98.706, -7.54081, 0.29", "-151.279, -99.187, -8.00575, 0.88", "-151.817, -99.7119, -8.53889, 1.03", "-153.462, -101.124, -10.0941, 0.22", "-155.047, -102.355, -11.4974, 0.22", "-155.702, -102.8, -12.019, 0.22", "-156.094, -103.05, -12.3154, 1.11", "-156.573, -103.346, -12.6518, 1.11", "-157.099, -103.635, -12.9602, 0.81" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-16.1066, -176.912, 1.04722, 0.81", "-15.198, -177.396, 0.427263, 0.81", "-14.4702, -177.738, -0.0839654, 0.52", "-13.4409, -178.182, -0.825196, 0.52", "-12.9935, -178.383, -1.15355, 0.37", "-12.1019, -178.799, -1.8149, 0.37", "-11.7482, -178.971, -2.07859, 0.66", "-11.4391, -179.124, -2.3252, 0.88", "-11.1806, -179.256, -2.52763, 0.88", "-10.519, -179.671, -3.04924, 0.59", "-9.93045, -180.127, -3.51555, 0.66", "-9.34153, -180.657, -3.98019, 0.74", "-8.98076, -180.979, -4.2632, 0.74", "-8.70042, -181.208, -4.4811, 0.52", "-8.24443, -181.536, -4.83584, 0.29", "-7.75366, -181.81, -5.20309, 0.96", "-7.30342, -182.015, -5.52687, 1.03", "-7.00241, -182.137, -5.73229, 1.03", "-6.30838, -182.4, -6.18131, 0.66", "-6.01747, -182.513, -6.37132, 0.52", "-5.34997, -182.786, -6.81006, 0.59", "-4.68892, -183.1, -7.2483, 0.59", "-4.08316, -183.434, -7.65799, 0.52", "-3.58476, -183.749, -8.00423, 0.52", "-3.06597, -184.117, -8.375, 0.96", "-2.74808, -184.352, -8.61617, 1.18", "-2.23128, -184.73, -9.0321, 0.66", "-1.62545, -185.136, -9.52673, 0.37", "-1.24836, -185.362, -9.8378, 0.37", "-0.470786, -185.777, -10.484, 0.88", "0.229404, -186.128, -11.0354, 1.03", "0.767282, -186.395, -11.4456, 0.81", "1.2707, -186.642, -11.8113, 0.52", "1.8711, -186.935, -12.2253, 0.52", "2.34949, -187.176, -12.5354, 0.52", "3.0209, -187.565, -12.9471, 0.52", "3.59545, -187.938, -13.2819, 1.33", "3.95705, -188.2, -13.4882, 1.69", "4.37466, -188.542, -13.7227, 1.69", "5.03984, -189.154, -14.1641, 1.11", "5.72984, -189.831, -14.6949, 0.44", "6.14977, -190.248, -15.0811, 0.44", "6.47443, -190.571, -15.4175, 0.29", "6.82287, -190.921, -15.8359, 0.29", "7.57578, -191.666, -16.8434, 1.03", "7.78469, -191.868, -17.1536, 1.4", "7.99922, -192.089, -17.507, 1.4", "8.6547, -192.869, -18.6858, 0.22", "8.99929, -193.307, -19.3156, 0.52", "9.17166, -193.534, -19.6218, 0.52", "9.4764, -193.967, -20.1346, 0.29", "9.89991, -194.597, -20.8578, 0.29", "10.164, -194.989, -21.2933, 0.29", "10.4289, -195.408, -21.7377, 0.66", "10.6351, -195.723, -22.047, 0.81", "10.7889, -195.954, -22.2651, 0.81", "11.0598, -196.312, -22.6082, 0.59", "11.3743, -196.676, -22.9849, 0.29", "11.686, -197.039, -23.3247, 0.29", "12.0498, -197.52, -23.686, 0.66", "12.3435, -197.95, -23.9293, 0.66", "12.7567, -198.62, -24.1993, 0.29", "13.004, -199.058, -24.3148, 0.29", "13.4377, -199.864, -24.4529, 0.66", "13.7501, -200.438, -24.5094, 0.66", "14.1519, -201.194, -24.5316, 0.44", "14.5436, -201.967, -24.5103, 1.47", "14.8413, -202.593, -24.4676, 1.84", "15.0071, -202.961, -24.4376, 1.84", "15.1017, -203.189, -24.4272, 1.84", "15.3438, -203.771, -24.4139, 1.33", "15.6454, -204.471, -24.423, 0.52", "15.8085, -204.839, -24.436, 0.52", "16.0321, -205.339, -24.4559, 0.52", "16.3934, -206.136, -24.4816, 0.29", "16.587, -206.549, -24.4927, 0.29", "16.8821, -207.137, -24.5037, 0.29", "17.1724, -207.678, -24.5119, 0.44", "17.6023, -208.402, -24.541, 0.44", "17.9897, -208.989, -24.5993, 0.44", "18.2802, -209.395, -24.6708, 1.33", "18.6067, -209.859, -24.7852, 1.84", "18.9159, -210.267, -24.9211, 1.84", "19.43, -210.896, -25.1743, 0.96", "20.097, -211.659, -25.5337, 0.22", "20.6602, -212.272, -25.8571, 0.22", "21.4508, -213.094, -26.3376, 0.22", "21.9262, -213.552, -26.6353, 0.22", "22.4652, -214.018, -26.9796, 0.22", "22.9367, -214.389, -27.2951, 0.44", "23.4911, -214.79, -27.6893, 0.88", "24.0136, -215.157, -28.0919, 1.03", "24.3511, -215.394, -28.3637, 1.03", "24.7416, -215.693, -28.6871, 0.88", "25.1291, -215.973, -29.0146, 0.29", "25.4136, -216.161, -29.242, 0.29", "25.8654, -216.421, -29.5633, 0.29", "26.4515, -216.72, -29.9385, 0.37", "26.9078, -216.924, -30.1964, 0.37", "27.3184, -217.083, -30.4047, 0.29", "28.1234, -217.344, -30.7744, 0.29", "28.7558, -217.53, -31.061, 0.81", "29.1084, -217.634, -31.2259, 0.81", "29.7867, -217.872, -31.544, 0.59", "30.2856, -218.104, -31.7677, 0.29", "30.7173, -218.346, -31.951, 0.29", "31.174, -218.637, -32.1332, 0.66", "31.5165, -218.866, -32.2535, 0.66", "32.5538, -219.573, -32.5665, 0.29", "33.226, -220.02, -32.7251, 0.29", "33.9419, -220.485, -32.8367, 0.29", "34.498, -220.844, -32.8831, 0.29", "35.0626, -221.196, -32.8917, 0.88", "35.3187, -221.353, -32.8916, 0.88", "36.0109, -221.774, -32.8666, 0.66", "36.9746, -222.345, -32.7943, 0.29", "37.4781, -222.646, -32.7366, 0.29", "38.0741, -223.015, -32.6647, 0.66", "38.5658, -223.338, -32.6253, 0.44", "44.664, -228.178, -34.6568, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-16.1066, -176.912, 1.04722, 2.14", "-16.7433, -178.5, 0.916443, 2.14", "-17.258, -179.946, 0.810505, 1.33", "-17.7114, -181.369, 0.723006, 1.03", "-17.9981, -182.448, 0.666769, 1.03", "-18.1747, -183.183, 0.630813, 1.25", "-18.3379, -183.902, 0.598655, 1.25", "-18.5656, -185.258, 0.544648, 0.96", "-18.716, -186.356, 0.524091, 0.96", "-18.9878, -188.281, 0.510723, 0.88", "-19.1448, -189.417, 0.528839, 0.88", "-19.2614, -190.492, 0.555419, 0.96", "-19.3526, -191.718, 0.593693, 0.96", "-19.4018, -192.765, 0.643237, 0.74", "-19.4271, -193.774, 0.70466, 0.52", "-19.4327, -194.611, 0.770657, 0.52", "-19.4253, -195.64, 0.866781, 0.37", "-19.4149, -196.459, 0.945219, 0.74", "-19.42, -197.349, 1.03793, 0.74", "-19.4325, -198.353, 1.15813, 1.03", "-19.4501, -198.992, 1.24201, 1.18", "-19.4896, -199.875, 1.35525, 1.33", "-19.5345, -200.542, 1.44816, 1.33", "-19.5608, -201.253, 1.57866, 1.18", "-19.5605, -202.291, 1.87445, 0.96", "-19.5315, -203.086, 2.18455, 0.81", "-19.4723, -203.889, 2.55471, 0.81", "-19.363, -204.77, 2.99608, 0.81", "-19.2503, -205.541, 3.38906, 0.59", "-19.054, -206.814, 4.00531, 0.66", "-18.9993, -207.357, 4.24725, 0.66", "-18.9961, -208.331, 4.60937, 1.18", "-19.1675, -209.336, 4.86708, 1.47", "-19.4764, -210.206, 4.99395, 1.55", "-19.825, -210.839, 5.03802, 1.55", "-20.4489, -211.695, 5.06177, 1.4", "-21.34, -212.691, 5.11377, 1.18", "-22.4164, -213.746, 5.20089, 0.66", "-23.3143, -214.575, 5.29895, 0.74", "-24.4786, -215.618, 5.46318, 1.18", "-25.4341, -216.457, 5.64528, 1.25", "-26.4238, -217.322, 5.8976, 1.25", "-27.2483, -218.041, 6.17744, 1.25", "-28.0766, -218.714, 6.51376, 1.33", "-28.5485, -219.056, 6.73971, 1.33", "-29.2941, -219.529, 7.17934, 1.03", "-29.9233, -219.872, 7.61948, 0.74", "-30.4192, -220.11, 7.99907, 0.59", "-31.0648, -220.425, 8.52282, 0.59", "-31.7029, -220.782, 9.0597, 0.88", "-32.3229, -221.255, 9.6239, 1.18", "-32.8781, -221.822, 10.1984, 1.18", "-33.3482, -222.423, 10.7412, 1.18", "-33.7795, -223.085, 11.2605, 1.18", "-34.109, -223.661, 11.6564, 1.18", "-34.5644, -224.542, 12.1963, 0.81", "-34.8386, -225.122, 12.5099, 0.59", "-35.0923, -225.726, 12.7858, 0.52", "-35.5846, -227.01, 13.2806, 0.96", "-35.8716, -227.867, 13.5417, 1.18", "-36.1168, -228.663, 13.7329, 1.18", "-36.4444, -229.747, 13.9341, 0.88", "-36.7712, -230.838, 14.0982, 0.59", "-37.0394, -231.818, 14.2228, 0.59", "-37.3302, -232.959, 14.3566, 0.59", "-37.6005, -234.024, 14.4827, 0.74", "-37.9173, -235.215, 14.6327, 1.33", "-38.2035, -236.251, 14.7694, 1.69", "-38.5727, -237.53, 14.9458, 1.77", "-38.784, -238.283, 15.045, 1.77", "-39.0522, -239.23, 15.1441, 1.77", "-39.2785, -240.139, 15.1968, 1.47", "-39.4973, -241.146, 15.2082, 1.03", "-39.7033, -242.135, 15.1873, 1.03", "-39.9512, -243.29, 15.1344, 1.03", "-40.1949, -244.487, 15.071, 1.11", "-40.4054, -245.614, 15.0138, 1.33", "-40.5538, -246.641, 14.9644, 1.03", "-40.6794, -248.029, 14.8987, 0.81", "-40.7229, -249.001, 14.8586, 1.03", "-40.7254, -250.222, 14.8182, 0.81", "-40.7043, -250.888, 14.8045, 0.81", "-40.6072, -252.687, 14.7632, 0.74", "-40.4721, -254.495, 14.7171, 0.74", "-40.3323, -255.947, 14.6705, 0.74", "-40.1313, -258.068, 14.6046, 0.74", "-40.0297, -259.533, 14.5633, 0.74", "-40.0014, -260.485, 14.5504, 1.18", "-40.0414, -261.466, 14.5746, 1.4", "-40.1854, -262.486, 14.6606, 1.4", "-40.4421, -263.457, 14.8151, 1.47", "-40.91, -264.535, 15.0855, 1.55", "-41.2982, -265.184, 15.2976, 1.55", "-42.0485, -266.197, 15.7045, 1.11", "-43.0541, -267.34, 16.2551, 0.88", "-43.7869, -268.085, 16.6869, 0.88", "-44.6257, -268.853, 17.2107, 1.03", "-45.2062, -269.355, 17.5797, 1.03", "-45.6638, -269.762, 17.8792, 1.03", "-46.3165, -270.443, 18.3537, 0.81", "-47.047, -271.401, 18.9306, 0.59", "-47.8221, -272.709, 19.5843, 0.59", "-48.2928, -273.722, 20.0109, 0.88", "-48.6279, -274.656, 20.3468, 0.88", "-49.0368, -276.118, 20.7846, 0.74", "-49.249, -277.123, 21.0294, 0.96", "-49.417, -278.109, 21.2044, 1.11", "-49.5093, -278.817, 21.3021, 1.11", "-49.6042, -279.561, 21.3759, 0.88", "-49.7697, -280.583, 21.4264, 0.66", "-49.9103, -281.301, 21.4453, 0.66", "-50.1432, -282.508, 21.479, 0.96", "-50.3146, -283.431, 21.4982, 0.96", "-50.5251, -284.611, 21.5128, 0.66", "-50.7176, -285.688, 21.5244, 0.74", "-51.0086, -287.416, 21.5575, 0.96", "-51.1584, -288.414, 21.6017, 0.96", "-51.3066, -289.455, 21.6512, 0.96", "-51.4942, -290.648, 21.6936, 0.66", "-51.7891, -292.408, 21.7266, 0.66", "-52.0507, -294.087, 21.695, 0.66", "-52.1978, -295.089, 21.6374, 0.81", "-52.4352, -296.839, 21.4852, 0.74", "-52.6054, -298.224, 21.3225, 0.74", "-52.7535, -299.683, 21.1087, 0.96", "-52.855, -300.907, 20.9018, 0.96", "-52.9173, -301.719, 20.7707, 1.62", "-52.9663, -302.166, 20.7266, 1.62", "-53.0458, -302.757, 20.7315, 1.62", "-53.1796, -303.623, 20.7989, 1.4", "-53.3483, -304.531, 20.9164, 0.88", "-53.571, -305.694, 21.0988, 0.59", "-53.8577, -307.274, 21.3614, 0.81", "-54.0853, -308.547, 21.5838, 0.96", "-54.259, -309.574, 21.7514, 0.96", "-54.4543, -310.812, 21.9238, 1.11", "-54.5865, -311.623, 22.0265, 1.11", "-54.7047, -312.249, 22.1021, 1.33", "-54.8338, -312.859, 22.1752, 1.33", "-55.1013, -313.854, 22.3375, 1.03", "-55.4348, -314.838, 22.5506, 0.66", "-55.7165, -315.574, 22.7363, 0.37", "-55.9302, -316.111, 22.8786, 0.37", "-56.1859, -316.814, 23.0566, 0.37", "-56.4124, -317.482, 23.2214, 1.03", "-56.656, -318.225, 23.4009, 1.25", "-56.8089, -318.776, 23.5224, 1.25", "-57.0431, -319.803, 23.7182, 0.96", "-57.2947, -321.094, 23.9312, 0.52", "-57.5105, -322.256, 24.1043, 0.52", "-57.7902, -323.873, 24.3157, 0.52", "-57.9819, -325.189, 24.4607, 0.81", "-58.1128, -326.149, 24.5654, 1.03", "-58.2374, -327.016, 24.6657, 1.03", "-58.34, -327.684, 24.7459, 0.81", "-58.4816, -328.491, 24.8467, 0.81", "-58.7236, -329.625, 24.9967, 0.59", "-59.0562, -330.816, 25.1763, 0.44", "-59.5963, -332.318, 25.467, 0.88", "-59.8819, -332.964, 25.6213, 0.88", "-60.3202, -333.801, 25.8577, 0.59", "-60.7945, -334.518, 26.117, 0.59", "-61.5708, -335.421, 26.5277, 0.59", "-62.4279, -336.22, 26.9644, 0.81", "-62.9233, -336.604, 27.2151, 0.81", "-63.326, -336.881, 27.4177, 0.81", "-64.2445, -337.423, 27.8718, 0.59", "-65.2622, -337.914, 28.3696, 0.88", "-66.2826, -338.315, 28.86, 1.03", "-67.2639, -338.644, 29.3224, 1.03", "-68.0761, -338.87, 29.7095, 0.59", "-68.8051, -339.051, 30.0687, 0.59", "-69.4201, -339.206, 30.3823, 0.59", "-69.9403, -339.337, 30.6687, 0.59", "-70.4892, -339.504, 30.98, 0.59", "-71.1991, -339.761, 31.3979, 0.44", "-72.2501, -340.229, 32.0361, 0.81", "-73.1149, -340.691, 32.5822, 1.11", "-74.0427, -341.278, 33.1959, 0.81", "-74.9585, -341.955, 33.8216, 0.66", "-75.3738, -342.305, 34.1104, 0.66", "-75.8687, -342.781, 34.4589, 0.52", "-76.4272, -343.376, 34.8633, 0.52", "-76.9852, -344.049, 35.2761, 0.52", "-77.5401, -344.771, 35.6935, 0.52", "-77.8707, -345.248, 35.9473, 1.11", "-78.6011, -346.408, 36.5005, 1.4", "-78.994, -347.102, 36.7934, 1.84", "-79.428, -347.94, 37.0977, 2.43" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.09614, -79.1042, -8.2474, 0.66", "-9.22274, -80.7129, -8.17792, 0.66", "-9.31621, -81.7041, -8.14427, 0.37", "-9.36602, -82.3674, -8.14387, 0.81", "-9.4093, -83.2255, -8.15625, 1.03", "-9.4458, -83.9716, -8.17301, 1.11", "-9.48626, -84.7682, -8.20549, 0.88", "-9.52596, -85.6866, -8.2772, 0.59", "-9.53681, -86.7572, -8.38798, 0.29", "-9.51542, -87.5346, -8.48366, 0.29", "-9.4861, -87.8914, -8.53107, 0.29", "-9.35279, -88.6974, -8.65251, 0.74", "-9.15757, -89.4495, -8.77347, 1.11", "-9.00033, -89.9247, -8.84667, 1.11", "-8.74567, -90.6249, -8.95028, 1.11", "-8.43788, -91.4362, -9.03261, 0.81", "-7.94555, -92.7738, -9.10588, 0.44", "-7.51598, -94.0423, -9.1197, 0.59", "-7.29556, -94.805, -9.10642, 0.88", "-7.11576, -95.6062, -9.06972, 0.88", "-6.93281, -96.7512, -8.99211, 0.81", "-6.83116, -97.8727, -8.8828, 0.44", "-6.8115, -98.7552, -8.76701, 1.03", "-6.82593, -99.4932, -8.66417, 0.74", "-6.86045, -100.418, -8.54698, 0.52", "-6.8926, -101.134, -8.4711, 0.88", "-6.92378, -101.793, -8.44723, 1.18", "-6.94883, -102.364, -8.43834, 1.18", "-6.98311, -103.018, -8.43783, 0.88", "-7.04376, -104.156, -8.45172, 0.29", "-7.09312, -105.017, -8.47577, 0.29", "-7.16548, -106.25, -8.54042, 1.03", "-7.20473, -107.069, -8.5962, 1.47", "-7.23025, -107.586, -8.63261, 1.47", "-7.25405, -108.155, -8.67224, 1.47", "-7.26966, -109.004, -8.72428, 1.25", "-7.27595, -110.043, -8.7713, 0.44", "-7.26534, -110.9, -8.79008, 0.44", "-7.24466, -111.738, -8.81116, 0.44", "-7.22746, -112.169, -8.82213, 0.59", "-7.1838, -113.181, -8.8484, 0.59", "-7.1352, -113.952, -8.86858, 0.37", "-7.09312, -114.596, -8.88486, 0.81", "-7.05735, -115.186, -8.89181, 1.03", "-7.03558, -115.617, -8.8902, 1.03", "-7.02425, -116.151, -8.87969, 0.59", "-7.00578, -117.021, -8.84666, 0.22", "-6.97588, -117.566, -8.81737, 0.22", "-6.92329, -118.21, -8.77628, 0.22", "-6.85393, -118.903, -8.72741, 0.66", "-6.7565, -119.733, -8.66849, 0.88", "-6.58525, -120.944, -8.58007, 0.88", "-6.37404, -122.352, -8.4781, 0.96", "-6.20741, -123.413, -8.41811, 1.18", "-6.08264, -124.273, -8.3911, 0.66", "-5.98603, -124.978, -8.37451, 0.52", "-5.82692, -126.325, -8.363, 0.52", "-5.72465, -127.365, -8.36853, 0.81", "-5.63107, -128.414, -8.38686, 0.52", "-5.56071, -129.199, -8.39789, 0.52", "-5.46651, -130.128, -8.42807, 1.47", "-5.35377, -131.08, -8.47897, 1.77", "-5.24801, -131.815, -8.54546, 1.77", "-5.17083, -132.239, -8.59142, 1.77", "-5.01835, -132.94, -8.66727, 1.25", "-4.82396, -133.752, -8.75287, 0.81", "-4.5919, -134.739, -8.86236, 0.44", "-4.29564, -135.976, -8.99224, 0.37", "-4.11504, -136.737, -9.06652, 0.52", "-3.88524, -137.657, -9.14605, 0.52", "-3.70335, -138.345, -9.1978, 0.66", "-3.44525, -139.252, -9.26185, 0.66", "-3.08727, -140.412, -9.38294, 0.88", "-2.7571, -141.388, -9.5132, 1.25", "-2.55389, -141.938, -9.61193, 1.25", "-2.3603, -142.412, -9.71316, 1.25", "-1.94991, -143.343, -9.94153, 1.11", "-1.56784, -144.166, -10.1648, 0.74", "-1.21844, -144.889, -10.3791, 0.29", "-1.01079, -145.317, -10.5158, 0.29", "-0.522523, -146.361, -10.8403, 0.44", "-0.259782, -146.959, -11.0057, 0.88", "-0.0529863, -147.501, -11.1273, 1.33", "0.158262, -148.143, -11.2344, 1.47", "0.352652, -148.838, -11.3173, 1.47", "0.506338, -149.455, -11.3661, 1.25", "0.697008, -150.298, -11.4056, 0.44", "0.949955, -151.532, -11.3886, 0.29", "1.11955, -152.509, -11.3202, 0.29", "1.25912, -153.504, -11.206, 0.29", "1.34225, -154.297, -11.0863, 0.74", "1.37695, -154.857, -10.9867, 0.88", "1.38043, -155.992, -10.7598, 0.96", "1.31696, -156.961, -10.5665, 1.03", "1.2204, -157.691, -10.4447, 1.03", "1.08366, -158.417, -10.3349, 0.59", "0.921856, -159.192, -10.2298, 0.22", "0.823129, -159.682, -10.1791, 0.22", "0.621471, -160.81, -10.1228, 0.96", "0.509208, -161.48, -10.1087, 1.11", "0.393143, -162.216, -10.0724, 1.11", "0.298454, -162.919, -10.0068, 0.59", "0.221492, -163.633, -9.91661, 0.29", "0.17052, -164.243, -9.8174, 0.29", "0.127296, -164.752, -9.71854, 0.29", "0.0344822, -165.853, -9.48031, 0.44", "-0.0484836, -166.786, -9.25284, 0.66", "-0.136636, -167.77, -9.0021, 0.66", "-0.190533, -168.482, -8.82522, 0.81", "-0.240422, -169.274, -8.64584, 0.81", "-0.280559, -170.031, -8.48808, 0.52", "-0.346947, -170.994, -8.32141, 0.66", "-0.406396, -171.708, -8.20657, 0.66", "-0.529521, -172.91, -8.08424, 0.37", "-0.651314, -173.976, -8.03808, 0.37", "-0.761876, -174.828, -8.04737, 1.03", "-0.876948, -175.686, -8.12466, 1.47", "-1.00106, -176.53, -8.26373, 1.62", "-1.25147, -178.037, -8.61987, 0.88", "-1.45777, -179.018, -8.95052, 0.59", "-1.65681, -179.766, -9.27929, 0.37", "-2.06422, -180.97, -9.90309, 0.29", "-2.21355, -181.324, -10.0932, 0.29", "-2.47146, -181.83, -10.3599, 0.29", "-2.98744, -182.767, -10.7955, 0.29", "-3.50352, -183.65, -11.2142, 0.59", "-4.04437, -184.587, -11.6369, 0.59", "-4.38614, -185.167, -11.8943, 0.44", "-4.80992, -185.861, -12.2205, 0.44", "-5.0874, -186.286, -12.467, 0.29", "-5.48391, -186.891, -12.8781, 1.4", "-6.05943, -187.585, -13.5432, 1.62", "-6.60087, -188.059, -14.1638, 1.4", "-7.13747, -188.398, -14.755, 1.11", "-8.04854, -188.85, -15.7037, 0.81", "-8.55542, -189.081, -16.2261, 0.59", "-9.10717, -189.362, -16.824, 0.74", "-9.63101, -189.703, -17.42, 0.81", "-10.0343, -190.139, -17.9076, 0.52", "-10.3255, -190.582, -18.2904, 0.52", "-10.5948, -191.076, -18.6306, 0.74", "-10.957, -191.779, -19.1235, 0.74", "-11.1443, -192.216, -19.3883, 0.74", "-11.3258, -192.711, -19.6889, 0.52", "-11.5982, -193.491, -20.1139, 0.52", "-11.7503, -193.918, -20.3319, 0.52", "-12.0511, -194.757, -20.7018, 1.69", "-12.2407, -195.31, -20.8968, 2.14", "-12.5936, -196.48, -21.2162, 1.55", "-12.9273, -197.706, -21.4727, 0.29", "-13.1084, -198.422, -21.5881, 0.29", "-13.3501, -199.408, -21.7137, 0.44", "-13.5837, -200.346, -21.7973, 0.59", "-13.795, -201.178, -21.8503, 0.59", "-14.0169, -202.025, -21.87, 0.29", "-14.1371, -202.48, -21.8818, 0.29", "-14.3025, -203.116, -21.8977, 0.96", "-14.4378, -203.673, -21.9099, 1.03", "-14.603, -204.45, -21.9267, 0.52", "-14.7817, -205.462, -21.9471, 0.29", "-14.8649, -206.039, -21.9556, 0.81", "-14.9482, -206.708, -21.9605, 0.96", "-15.0072, -207.224, -21.9641, 0.96", "-15.1083, -208.13, -21.9721, 0.29", "-15.242, -209.162, -21.983, 0.29", "-15.3906, -210.244, -22.0284, 1.47", "-15.4933, -211.002, -22.0761, 1.92", "-15.5385, -211.37, -22.1028, 1.92", "-15.6492, -212.287, -22.1624, 1.33", "-15.7593, -213.307, -22.2309, 0.29", "-15.8626, -214.348, -22.3076, 0.29", "-15.9338, -215.18, -22.3781, 0.29", "-16.0766, -216.988, -22.5452, 0.29", "-16.1639, -218.218, -22.6483, 1.4", "-16.2091, -218.967, -22.7024, 2.14", "-16.2256, -219.294, -22.7221, 2.28", "-16.2482, -219.828, -22.7417, 2.28", "-16.2784, -220.379, -22.7453, 1.92", "-16.3478, -221.175, -22.6881, 0.88", "-16.4768, -222.387, -22.5277, 0.29", "-16.565, -223.126, -22.39, 0.29", "-16.6676, -223.953, -22.2077, 0.29", "-16.8336, -225.245, -21.8927, 0.29", "-16.9981, -226.569, -21.5669, 0.96", "-17.0991, -227.456, -21.3568, 1.62", "-17.1529, -227.958, -21.2409, 1.62", "-17.2008, -228.432, -21.1428, 1.62", "-17.2974, -229.454, -20.9758, 1.11", "-17.3878, -230.712, -20.8915, 0.29", "-17.4533, -231.652, -20.8956, 0.29", "-17.5094, -232.398, -20.9236, 0.59", "-17.5428, -232.767, -20.9476, 0.66", "-17.5906, -233.215, -20.9844, 0.66", "-17.7494, -234.445, -21.1012, 0.29", "-17.9726, -235.871, -21.2783, 0.29", "-18.1755, -236.975, -21.4343, 0.96", "-18.371, -237.844, -21.5628, 1.4", "-18.5361, -238.494, -21.6541, 1.4", "-18.7183, -239.166, -21.7389, 1.4", "-18.9741, -240.052, -21.8304, 0.88", "-19.2936, -241.136, -21.9362, 0.29", "-19.5853, -242.126, -22.0169, 0.29", "-19.8941, -243.126, -22.0936, 0.44", "-20.1066, -243.758, -22.1365, 0.66", "-20.2903, -244.265, -22.1609, 0.66", "-20.6325, -245.167, -22.1679, 0.29", "-20.8365, -245.708, -22.1669, 0.29", "-21.0923, -246.401, -22.1967, 0.29", "-21.4466, -247.353, -22.3065, 0.29", "-21.6505, -247.897, -22.4096, 0.52", "-21.9169, -248.654, -22.5915, 0.66", "-22.1304, -249.409, -22.7452, 0.66", "-22.3595, -250.584, -22.9405, 1.4", "-22.447, -251.617, -23.084, 2.28", "-22.4402, -252.648, -23.2068, 2.5", "-22.3864, -253.227, -23.2469, 2.5", "-21.9808, -255.255, -23.2573, 0.22", "-21.7364, -256.073, -23.1973, 0.22", "-21.3107, -257.109, -23.0313, 0.37", "-20.9912, -257.721, -22.8816, 0.44", "-20.3591, -258.63, -22.691, 0.29", "-19.623, -259.475, -22.6094, 0.88", "-19.1635, -259.878, -22.6802, 1.4", "-18.7982, -260.17, -22.8002, 1.4", "-18.2955, -260.588, -23.0511, 1.11", "-16.6992, -262.034, -24.1192, 0.29", "-16.1861, -262.556, -24.5434, 0.29", "-15.4017, -263.467, -25.292, 0.81", "-15.0139, -264.056, -25.7121, 0.81", "-14.3993, -265.298, -26.4665, 0.22", "-14.2108, -265.816, -26.7279, 0.22", "-14.0219, -266.612, -27.0118, 0.44", "-13.9446, -267.06, -27.1412, 0.59", "-13.7146, -268.93, -27.5688, 0.22", "-13.6499, -269.583, -27.7105, 0.74", "-13.6045, -270.163, -27.8282, 1.03", "-13.5519, -270.783, -27.9398, 1.03", "-13.5002, -271.389, -28.0384, 0.74", "-13.4487, -271.953, -28.1267, 0.37", "-13.2994, -273.385, -28.3531, 0.22", "-13.1637, -274.809, -28.587, 0.22", "-13.0785, -275.881, -28.7618, 0.88", "-13.0248, -276.672, -28.8915, 1.62", "-13.0013, -277.107, -28.9641, 1.84", "-12.9858, -277.631, -29.0521, 1.84", "-12.9861, -278.711, -29.2292, 0.52", "-13.0271, -279.621, -29.3845, 0.22", "-13.0946, -280.35, -29.5193, 0.22", "-13.1801, -280.978, -29.6411, 0.37", "-13.2259, -281.221, -29.6838, 0.37", "-13.3716, -281.822, -29.7945, 0.22", "-13.5141, -282.31, -29.8866, 0.74", "-13.6884, -282.865, -29.9978, 0.74", "-13.8576, -283.367, -30.0955, 0.59", "-14.2509, -284.452, -30.3009, 0.22", "-14.4521, -284.952, -30.389, 0.22", "-14.763, -285.619, -30.4757, 0.59", "-15.0181, -286.097, -30.509, 0.59", "-15.3022, -286.587, -30.4945, 0.29", "-15.6189, -287.086, -30.4546, 0.22", "-16.1055, -287.773, -30.4241, 0.37", "-16.7487, -288.597, -30.4125, 0.44", "-17.3265, -289.181, -30.4992, 0.59", "-18.064, -289.775, -30.7257, 0.37", "-18.5157, -290.034, -30.9329, 0.22", "-19.6427, -290.431, -31.6103, 2.21", "-20.0649, -290.472, -31.9265, 2.5", "-21.6888, -290.176, -33.3436, 0.22", "-22.1834, -289.972, -33.8183, 0.22", "-22.8337, -289.526, -34.5446, 0.66", "-23.1365, -289.241, -34.9275, 0.66", "-23.5566, -288.752, -35.5094, 0.37", "-24.1298, -288.036, -36.3748, 1.92", "-24.3305, -287.783, -36.6905, 1.92", "-25.3517, -286.713, -38.3577, 0.44", "-25.8063, -286.334, -39.1005, 0.59", "-26.0899, -286.172, -39.5148, 0.37", "-26.5526, -286.035, -40.0755, 0.37", "-27.0393, -285.963, -40.6281, 0.22", "-28.2388, -285.936, -41.8105, 0.29", "-28.6798, -286.004, -42.1369, 0.22", "-29.4174, -286.155, -42.6138, 0.22", "-30.4437, -286.356, -43.2381, 0.22" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-9.09614, -79.1042, -8.2474, 0.74", "-11.5141, -80.7387, -8.26288, 0.74", "-12.4727, -81.3215, -8.27033, 0.74", "-13.8569, -82.0511, -8.32309, 0.74", "-14.826, -82.4773, -8.38619, 0.52", "-15.8335, -82.7814, -8.50965, 0.52", "-16.7991, -82.9786, -8.67757, 0.88", "-17.6075, -82.9197, -8.95986, 0.88", "-18.8956, -82.6091, -9.56458, 0.59", "-19.6973, -82.3448, -10.0005, 0.37", "-20.9284, -81.9807, -10.7506, 0.37", "-21.6714, -81.8509, -11.2746, 1.11", "-22.2914, -81.8957, -11.767, 1.47", "-22.8908, -82.0527, -12.2441, 1.47", "-23.3303, -82.2139, -12.5715, 1.47", "-24.3405, -82.5927, -13.2868, 0.96", "-25.2461, -82.8592, -13.8847, 0.59", "-26.085, -83.0043, -14.3637, 0.59", "-26.9632, -83.0817, -14.7561, 0.59", "-27.8931, -83.1567, -15.1365, 0.81", "-28.7792, -83.23, -15.4746, 0.81", "-29.4755, -83.2845, -15.6898, 0.81", "-30.3026, -83.3801, -15.9161, 0.81", "-31.1929, -83.784, -16.2864, 0.22", "-31.7456, -84.7191, -16.7845, 0.22", "-32.0818, -85.4699, -17.2017, 0.66", "-32.257, -85.9179, -17.464, 0.88", "-32.5046, -86.5693, -17.877, 0.88", "-32.8591, -87.3314, -18.5429, 0.44", "-33.4094, -88.0827, -19.4598, 1.4", "-33.9445, -88.4861, -20.2537, 2.14", "-34.1867, -88.5867, -20.6058, 2.58", "-34.7029, -88.6646, -21.318, 2.36", "-36.1093, -88.6672, -23.2445, 1.69", "-36.8555, -88.5989, -24.2308, 0.37", "-37.786, -88.4575, -25.3251, 0.37", "-38.5594, -88.3317, -26.1457, 0.37", "-40.1438, -88.1391, -27.6685, 1.92", "-40.8051, -88.1014, -28.2555, 2.14", "-41.4742, -88.1318, -28.7992, 2.5", "-43.4399, -88.4527, -30.4443, 0.44", "-44.0493, -88.6178, -30.9675, 0.44", "-44.9746, -88.8977, -31.819, 0.44", "-45.8076, -89.1229, -32.6509, 0.44", "-46.6584, -89.2855, -33.5406, 1.4", "-47.5807, -89.4175, -34.549, 2.06", "-48.3944, -89.5239, -35.5201, 2.06", "-49.3803, -89.5834, -36.7632, 0.66", "-50.1402, -89.5977, -37.8184, 0.81", "-50.9396, -89.6115, -39.0455, 0.52", "-51.5604, -89.6761, -40.2049, 1.77", "-51.9448, -89.7923, -41.126, 2.28", "-52.8976, -90.4483, -44.2603, 1.33", "-53.1439, -90.8263, -45.4965, 1.77", "-53.2487, -91.0982, -46.2894, 1.77", "-53.3994, -91.6475, -47.8186, 0.74", "-53.5002, -92.0956, -49.0344, 0.52", "-53.6726, -92.8099, -50.794, 0.52", "-53.8589, -93.661, -52.567, 0.88", "-54.1342, -94.4793, -54.1857, 1.47", "-54.4838, -95.2909, -55.7005, 0.22", "-54.6888, -95.7123, -56.4266, 0.22", "-54.9704, -96.2871, -57.2937, 0.81", "-55.2527, -96.9121, -58.0764, 0.96", "-55.6156, -97.7461, -58.9844, 1.55", "-55.9568, -98.5791, -59.754, 1.55", "-56.3313, -99.4868, -60.5536, 0.37", "-56.6018, -100.131, -61.1339, 0.74", "-56.9513, -100.927, -61.9058, 0.81", "-57.384, -101.974, -62.9749, 0.29", "-57.5591, -102.477, -63.4893, 0.96", "-57.7705, -103.215, -64.2319, 1.33", "-57.9854, -104.249, -65.2628, 0.74", "-58.0828, -105.113, -66.0935, 0.59", "-58.0893, -106.479, -67.3322, 0.29", "-57.9801, -107.364, -68.0386, 0.29", "-57.7875, -108.18, -68.6469, 0.29", "-57.5687, -108.807, -69.0494, 1.18", "-57.2946, -109.394, -69.3919, 1.69", "-56.8044, -110.247, -69.8389, 1.33", "-56.0279, -111.444, -70.4488, 0.22", "-55.6637, -111.991, -70.7374, 0.22", "-55.2256, -112.701, -71.1149, 0.96", "-54.9552, -113.203, -71.3821, 1.11", "-54.4961, -114.167, -71.8842, 0.52", "-53.8411, -115.724, -72.6694, 0.22", "-53.5601, -116.464, -73.0367, 0.22", "-53.285, -117.275, -73.4417, 0.88", "-53.1039, -117.866, -73.7664, 1.03", "-52.8126, -118.889, -74.3778, 0.22", "-52.6768, -119.36, -74.6757, 0.22", "-52.4615, -120.048, -75.1259, 0.66", "-52.202, -120.812, -75.6219, 0.74", "-51.5653, -122.588, -76.7258, 0.22", "-51.1196, -123.882, -77.4417, 0.22", "-50.652, -125.53, -78.2412, 0.96", "-50.5083, -126.156, -78.5088, 1.25", "-50.3916, -126.996, -78.8058, 1.25", "-50.315, -128.245, -79.145, 0.66", "-50.3624, -129.787, -79.4682, 0.15", "-50.5633, -131.107, -79.7214, 0.37", "-50.7212, -131.723, -79.8536, 0.37", "-51.4552, -133.967, -80.4024, 0.22", "-51.5932, -134.314, -80.5063, 0.74", "-51.9208, -135.053, -80.7702, 0.88", "-53.0372, -137.397, -81.6985, 0.22", "-53.4688, -138.278, -82.0531, 0.74", "-53.9008, -139.131, -82.3917, 0.74", "-54.8467, -140.988, -83.1431, 0.22", "-55.635, -142.548, -83.7527, 0.22", "-56.5204, -144.341, -84.3583, 0.22", "-57.3211, -146.038, -84.8233, 0.22", "-57.7418, -146.963, -85.0176, 0.88", "-58.0569, -147.696, -85.1279, 1.11", "-58.3382, -148.443, -85.1828, 1.11", "-58.9362, -150.268, -85.221, 0.15", "-59.3416, -151.749, -85.2132, 0.15", "-59.5391, -152.571, -85.1961, 0.81", "-59.6964, -153.289, -85.1766, 0.96", "-60.2166, -155.977, -85.4163, 0.22", "-60.4374, -157.241, -85.5619, 0.22", "-60.655, -158.638, -85.8104, 0.22", "-60.7342, -159.198, -85.9383, 1.18", "-60.8041, -159.733, -86.0961, 1.18", "-61.3064, -163.676, -87.8357, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "21.2122, 160.747, -20.2735, 0.37", "21.8376, 159.872, -20.0079, 0.37", "22.3348, 159.219, -19.8364, 0.52", "23.0338, 158.335, -19.6151, 0.74", "23.5946, 157.636, -19.4577, 1.11", "23.9222, 157.241, -19.3685, 1.11", "24.3992, 156.67, -19.235, 0.81", "25.5088, 155.426, -18.8699, 0.22", "26.0415, 154.818, -18.6931, 0.22", "26.3694, 154.412, -18.5978, 0.66", "26.6999, 153.961, -18.5052, 0.66", "27.0167, 153.492, -18.4183, 0.66", "27.6071, 152.554, -18.2321, 0.44", "28.1457, 151.622, -18.0376, 0.22", "28.6977, 150.589, -17.8357, 0.22", "28.9463, 150.087, -17.7438, 0.44", "29.0987, 149.742, -17.7006, 0.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "21.2122, 160.747, -20.2735, 0.22", "23.0711, 160.849, -20.4826, 0.22", "23.4944, 160.9, -20.5454, 0.44", "25.4345, 161.241, -20.8424, 0.22", "26.2652, 161.416, -20.9929, 0.59", "26.8979, 161.561, -21.138, 0.59", "29.6119, 162.186, -21.7606, 0.22", "32.7357, 162.96, -22.5522, 0.22", "33.8502, 163.27, -22.8579, 0.66", "34.7178, 163.552, -23.1288, 0.81", "36.024, 164.01, -23.5745, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "11.727, 222.821, -5.06659, 0.59", "12.9072, 223.774, -5.56602, 0.59", "13.2915, 224.097, -5.71472, 0.44", "14.0856, 224.805, -6.04642, 0.22", "14.7653, 225.461, -6.3312, 0.81", "15.1217, 225.823, -6.49459, 0.96", "15.2852, 225.993, -6.57541, 0.96", "15.7839, 226.591, -6.84464, 0.22", "16.4652, 227.554, -7.32478, 0.22", "16.9981, 228.452, -7.80217, 1.11", "17.2516, 228.953, -8.06779, 1.47", "17.3526, 229.199, -8.20773, 1.47", "17.684, 230.276, -8.8226, 0.22", "17.8868, 231.261, -9.39215, 0.22", "17.9596, 231.841, -9.72438, 0.66", "17.9819, 232.129, -9.89504, 0.66", "18.0058, 233.502, -10.6891, 0.22", "17.9659, 234.755, -11.3967, 0.22", "17.9058, 235.468, -11.8009, 0.22", "17.8089, 236.296, -12.2655, 1.47", "17.732, 236.768, -12.519, 1.47", "17.3959, 238.366, -13.3061, 0.22", "17.2585, 238.885, -13.5431, 0.81", "17.1154, 239.321, -13.727, 0.81", "16.7037, 240.388, -14.1281, 0.22", "16.334, 241.233, -14.4221, 0.22", "15.9134, 242.112, -14.7092, 1.47", "15.7244, 242.474, -14.8375, 1.84", "15.008, 243.791, -15.3093, 0.22", "14.4327, 244.799, -15.6652, 0.22", "14.2154, 245.147, -15.7918, 0.22", "13.6221, 246.057, -16.16, 1.55", "13.2415, 246.603, -16.4041, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "11.727, 222.821, -5.06659, 0.22", "12.6661, 225.409, -5.28635, 0.22", "13.1981, 226.815, -5.38157, 0.22", "13.6182, 227.906, -5.44317, 0.96", "13.8012, 228.381, -5.46463, 1.18", "13.9905, 228.872, -5.48181, 1.18", "14.2943, 229.674, -5.50345, 0.22", "14.517, 230.247, -5.49761, 0.44", "14.6234, 230.539, -5.49945, 0.44", "14.9062, 231.382, -5.5127, 0.22", "15.1449, 232.122, -5.52555, 0.44", "15.4047, 232.942, -5.53992, 0.44", "16.1546, 235.452, -5.58485, 0.22", "16.7764, 237.566, -5.64372, 0.22", "17.0129, 238.359, -5.67591, 0.66", "17.1443, 238.794, -5.69956, 0.74", "17.3633, 239.486, -5.75747, 0.22", "17.9255, 241.176, -5.93513, 0.22", "18.2592, 242.168, -6.0553, 1.03", "18.4827, 242.826, -6.14358, 1.25", "18.6517, 243.322, -6.21444, 1.25", "19.222, 244.994, -6.46474, 0.22", "20.1712, 247.743, -6.88753, 0.22", "20.4962, 248.669, -7.02857, 0.74", "20.6757, 249.203, -7.09683, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "1.9084, 86.087, 5.64635, 0.37", "3.77576, 92.957, 9.1237, 0.37", "6.19354, 99.4425, 13.0511, 0.37", "6.84374, 105.773, 17.8716, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "1.9084, 86.087, 5.64635, 0.22", "7.18438, 95.2617, 4.43985, 0.37", "13.2557, 103.75, 2.06292, 0.37", "19.8071, 111.792, -0.713708, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "94.2277, -7.58989, 20.2386, 0.37", "105.749, -10.6271, 23.3649, 0.37", "117.831, -12.3007, 25.3037, 0.37", "130.016, -12.2679, 27.3503, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "94.2277, -7.58989, 20.2386, 0.22", "104.847, -10.3794, 23.463, 0.37", "116.073, -12.2376, 24.962, 0.37", "127.138, -14.073, 27.3648, 0.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "46.589, 7.33893, 5.66536, 0.52", "48.0584, 7.73415, 6.09132, 0.52", "48.6265, 7.86763, 6.27588, 0.52", "49.2106, 8.01161, 6.51344, 0.52", "50.3252, 8.29265, 7.009, 0.52", "50.9883, 8.45401, 7.32761, 0.88", "52.0023, 8.67907, 7.8181, 0.88", "52.7546, 8.83711, 8.17358, 0.88", "53.5455, 8.92635, 8.60877, 0.81", "54.044, 8.87163, 8.92142, 0.81", "54.7755, 8.60899, 9.45484, 0.59", "55.3482, 8.25699, 9.90807, 0.59", "55.9571, 7.75176, 10.3825, 0.59", "56.5616, 7.16965, 10.8118, 0.74", "57.4994, 6.12975, 11.4646, 0.66", "57.8794, 5.65915, 11.7425, 0.66", "58.4462, 4.88397, 12.1861, 0.52", "58.8296, 4.34534, 12.4861, 0.52", "59.3287, 3.66876, 12.8486, 0.81", "59.9505, 2.82178, 13.2889, 0.81", "60.3571, 2.24199, 13.6027, 0.81", "60.8389, 1.47969, 14.0092, 0.81", "61.4006, 0.476713, 14.5486, 0.88", "61.8347, -0.404341, 15.0278, 1.11", "62.0954, -0.984114, 15.3386, 1.11", "62.5584, -2.14461, 15.9651, 0.88", "62.8496, -3.04689, 16.488, 0.96", "63.0126, -3.7244, 16.9271, 0.96", "63.1051, -4.26929, 17.32, 0.96", "63.17, -4.75481, 17.6955, 0.66", "63.2685, -5.49599, 18.3377, 0.66", "63.4323, -6.43083, 19.2486, 0.81", "63.6432, -7.14897, 20.0154, 1.11", "63.9729, -7.93382, 20.9265, 0.96", "64.2906, -8.50023, 21.5757, 0.81", "64.8109, -9.22862, 22.396, 0.81", "65.5006, -10.0024, 23.2341, 0.59", "66.1226, -10.6066, 23.844, 0.37", "66.7156, -11.1433, 24.3425, 0.37", "67.6086, -11.9466, 25.0232, 0.59", "68.1023, -12.4184, 25.3641, 0.88", "68.3765, -12.7076, 25.5379, 1.11", "68.7227, -13.1089, 25.7753, 1.11", "69.1732, -13.6572, 26.1251, 0.74", "69.5387, -14.077, 26.3943, 0.74", "69.8987, -14.5103, 26.6605, 0.74", "70.4453, -15.2224, 27.0448, 0.74", "70.9993, -15.9995, 27.4069, 0.74", "71.5045, -16.715, 27.719, 0.66", "71.9864, -17.3945, 27.9937, 0.66", "72.6287, -18.3015, 28.331, 0.96", "73.3848, -19.417, 28.7027, 1.4", "73.7653, -20.0399, 28.8812, 1.62", "74.1515, -20.7389, 29.0535, 1.77" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "46.589, 7.33893, 5.66536, 0.88", "47.4339, 8.10166, 5.74913, 0.88", "48.1937, 8.71611, 5.86237, 0.88", "49.0511, 9.30402, 6.01764, 0.88", "49.9835, 9.84386, 6.19778, 0.88", "51.0899, 10.4013, 6.43382, 0.74", "51.7905, 10.7335, 6.596, 0.74", "52.7814, 11.1397, 6.86511, 0.88", "53.6722, 11.449, 7.12041, 0.88", "54.4104, 11.6722, 7.32628, 0.88", "55.1279, 11.8784, 7.51894, 0.66", "55.6327, 12.0427, 7.63953, 0.66", "56.314, 12.3388, 7.74884, 0.88", "56.724, 12.5697, 7.78466, 0.88", "57.118, 12.8277, 7.79858, 0.88", "57.5188, 13.1, 7.80346, 0.88", "58.2651, 13.5947, 7.81514, 0.59", "58.7928, 13.9337, 7.85913, 0.59", "59.1948, 14.2092, 7.92082, 0.81", "59.7199, 14.6113, 8.02781, 0.81", "60.1204, 14.9621, 8.12286, 0.81", "60.572, 15.3911, 8.23848, 0.66", "61.2191, 16.0285, 8.4135, 0.59", "61.9061, 16.8212, 8.58648, 0.59", "62.2775, 17.31, 8.65855, 0.59", "62.7032, 17.921, 8.70451, 0.44", "62.9721, 18.3061, 8.70739, 0.44", "63.2638, 18.7081, 8.68554, 0.44", "63.9943, 19.6687, 8.5923, 0.44", "64.5735, 20.388, 8.51747, 0.66", "65.0576, 20.9742, 8.45405, 0.66", "65.6565, 21.6901, 8.37105, 0.74", "66.1243, 22.248, 8.30273, 0.96", "66.4842, 22.6628, 8.25088, 0.96", "67.0155, 23.212, 8.18375, 0.66", "67.5363, 23.7238, 8.12255, 0.66", "68.3629, 24.5196, 8.02735, 0.59", "69.1269, 25.2801, 7.95458, 0.59", "69.6198, 25.7841, 7.91733, 0.81", "69.9931, 26.1796, 7.89439, 0.81", "70.6307, 26.8304, 7.86778, 0.52", "71.1238, 27.2902, 7.85754, 0.52", "71.7779, 27.8623, 7.86036, 0.52", "72.3285, 28.3319, 7.8669, 0.52", "72.8565, 28.7715, 7.87185, 0.37", "73.7983, 29.5344, 7.8767, 0.37", "74.4189, 30.0252, 7.87315, 0.59", "74.8154, 30.3158, 7.86568, 0.59", "75.6591, 30.904, 7.82901, 0.74", "76.0995, 31.2145, 7.80862, 0.74", "76.4738, 31.4915, 7.7935, 0.74", "77.007, 31.9416, 7.77698, 0.74", "77.3671, 32.2575, 7.73568, 0.44", "77.8873, 32.6822, 7.61341, 0.44", "78.3375, 33.0074, 7.47317, 0.81", "79.0963, 33.5002, 7.20129, 0.81", "79.6555, 33.8201, 6.97282, 0.66", "80.6326, 34.337, 6.55206, 0.52", "81.3804, 34.7285, 6.1891, 0.44", "81.8763, 34.968, 5.91864, 0.44", "82.3112, 35.168, 5.65694, 0.44", "82.6524, 35.3114, 5.42991, 0.44", "83.2217, 35.5303, 5.06659, 0.74", "83.7096, 35.7386, 4.8577, 0.59", "84.0383, 35.9144, 4.73543, 0.59", "89.9597, 41.5162, 5.60473, 0.59", "96.0736, 46.9331, 6.42504, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-79.428, -347.94, 37.0977, 0.52", "-79.8679, -349.195, 37.1975, 0.52", "-80.052, -349.703, 37.2452, 0.29", "-80.3108, -350.367, 37.3077, 0.44", "-80.5568, -350.984, 37.3632, 0.44", "-80.754, -351.463, 37.4052, 0.29", "-81.0599, -352.161, 37.4599, 0.29", "-81.3804, -352.826, 37.5094, 0.81", "-81.628, -353.336, 37.528, 1.18", "-81.7591, -353.615, 37.5306, 1.4", "-81.9651, -354.078, 37.5283, 1.4", "-82.1447, -354.522, 37.5209, 1.11", "-82.4966, -355.482, 37.5022, 0.52", "-82.7255, -356.234, 37.489, 0.44", "-82.8785, -356.836, 37.4806, 0.74", "-83.0491, -357.561, 37.4765, 0.81", "-83.1684, -358.107, 37.474, 0.81", "-83.2803, -358.685, 37.4688, 0.74", "-83.4042, -359.449, 37.4917, 0.22", "-83.4565, -359.801, 37.5066, 0.22", "-83.5341, -360.421, 37.5271, 0.22", "-83.577, -360.957, 37.5554, 0.66", "-83.5993, -361.515, 37.6041, 0.81", "-83.6015, -362.41, 37.7092, 0.66", "-83.5648, -363.223, 37.8331, 0.22", "-83.4897, -363.945, 37.9629, 0.22", "-83.4023, -364.47, 38.0701, 0.22", "-83.3017, -364.977, 38.1999, 0.96", "-83.2528, -365.237, 38.274, 1.18", "-83.1846, -365.625, 38.3844, 1.18", "-83.1255, -365.943, 38.4956, 1.18", "-83.0388, -366.55, 38.7032, 0.74", "-82.9581, -367.472, 38.9979, 0.22", "-82.945, -367.777, 39.0923, 0.22", "-82.9387, -368.133, 39.2024, 0.44", "-82.9382, -368.441, 39.2906, 0.44", "-82.9331, -369.248, 39.4991, 0.22", "-82.9267, -369.756, 39.6108, 0.96", "-82.9109, -370.145, 39.6765, 1.18", "-82.889, -370.517, 39.7328, 1.25", "-82.8467, -371.226, 39.8314, 0.96", "-82.8172, -372.246, 39.967, 0.29", "-82.8165, -373.049, 40.0673, 0.22", "-82.8485, -373.959, 40.1693, 0.22", "-82.8838, -374.428, 40.2201, 0.81", "-82.9346, -374.81, 40.2603, 0.96", "-83.1925, -376.144, 40.41, 0.22", "-83.3001, -376.562, 40.4603, 0.22", "-83.4924, -377.228, 40.5494, 0.59", "-83.6438, -377.715, 40.6217, 0.59", "-83.8619, -378.447, 40.7321, 0.52", "-84.0245, -379.048, 40.8256, 0.52", "-84.2181, -379.863, 40.9658, 0.52", "-84.2895, -380.183, 41.0249, 0.96", "-84.4024, -380.731, 41.1291, 0.96", "-84.5203, -381.346, 41.249, 0.59", "-84.7123, -382.386, 41.4841, 0.22", "-84.9002, -383.459, 41.7318, 0.22", "-84.986, -383.961, 41.8516, 0.22", "-85.0688, -384.407, 41.9631, 0.96", "-85.1264, -384.711, 42.0442, 1.18", "-85.2475, -385.317, 42.2221, 0.52", "-85.2958, -392.741, 42.26, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-79.428, -347.94, 37.0977, 0.29", "-81.4074, -347.402, 38.0228, 0.29", "-82.4546, -347.401, 38.495, 0.37", "-82.9259, -347.531, 38.7016, 0.37", "-83.9853, -348.002, 39.2075, 0.37", "-85.0285, -348.523, 39.5791, 0.52", "-85.9497, -348.999, 39.8483, 0.59", "-87.206, -349.787, 40.1185, 0.59", "-88.3305, -350.53, 40.3046, 0.37", "-89.3754, -351.231, 40.4369, 0.37", "-91.2456, -352.494, 40.5946, 0.37", "-92.1142, -353.028, 40.6461, 0.37", "-92.922, -353.487, 40.686, 0.29", "-93.5677, -353.826, 40.7232, 0.29", "-94.2934, -354.198, 40.784, 0.81", "-94.869, -354.521, 40.8568, 0.81", "-95.629, -355.051, 41.065, 0.81", "-96.891, -356.076, 41.4698, 0.29", "-97.4816, -356.622, 41.6861, 0.66", "-97.9114, -357.062, 41.8738, 0.66", "-98.3032, -357.499, 42.0673, 0.66", "-99.6937, -359.161, 42.8169, 0.29", "-100.309, -359.932, 43.1467, 0.44", "-100.842, -360.598, 43.4296, 0.29", "-101.485, -361.366, 43.7481, 0.74", "-101.969, -361.889, 43.9449, 0.74", "-102.789, -362.649, 44.2111, 0.52", "-104.272, -363.821, 44.5837, 0.29", "-105.167, -364.457, 44.7727, 0.52", "-105.784, -364.854, 44.863, 0.52", "-107.101, -365.632, 44.9547, 0.29", "-108.091, -366.162, 44.9937, 0.29", "-108.698, -366.445, 45.0024, 0.59", "-109.425, -366.745, 44.9839, 0.59", "-110.746, -367.268, 44.9174, 0.22", "-111.486, -367.55, 44.8933, 0.29", "-112.591, -367.981, 44.896, 0.29", "-113.111, -368.193, 44.9016, 0.29", "-114.435, -368.795, 44.9275, 0.37", "-115.409, -369.356, 45.042, 0.37", "-116.376, -370.045, 45.2765, 0.52", "-117.459, -370.977, 45.6338, 1.55", "-118.094, -371.618, 45.8798, 1.92", "-118.687, -372.286, 46.1472, 1.92", "-120.026, -373.94, 46.8685, 0.29", "-120.889, -375.103, 47.3679, 0.29", "-121.57, -376.105, 47.8013, 0.29", "-122.105, -376.915, 48.1653, 0.74", "-122.37, -377.321, 48.348, 0.96", "-122.609, -377.667, 48.5032, 1.11", "-123.301, -378.69, 48.9464, 0.52", "-123.721, -379.374, 49.2702, 0.29", "-124.326, -380.362, 49.7862, 0.22", "-124.741, -381.005, 50.1482, 0.44", "-125.099, -381.53, 50.461, 0.44", "-126.089, -382.965, 51.346, 0.22", "-126.687, -383.819, 51.8957, 0.22", "-127.267, -384.609, 52.4185, 1.25", "-127.798, -385.323, 52.9155, 1.55", "-128.056, -385.648, 53.1485, 1.62" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "74.1515, -20.7389, 29.0535, 0.74", "75.5976, -20.2066, 30.4433, 0.74", "76.0136, -20.0866, 30.8482, 0.74", "76.7168, -19.9556, 31.5501, 0.59", "77.5308, -19.9056, 32.3869, 0.59", "78.2766, -19.9427, 33.1785, 0.59", "78.647, -19.9825, 33.5762, 0.59", "79.3633, -20.1604, 34.3768, 0.59", "79.9685, -20.3591, 35.0634, 0.81", "80.7726, -20.623, 35.9662, 0.81", "81.4411, -20.8298, 36.6861, 0.37", "82.1424, -21.0169, 37.399, 0.37", "82.9643, -21.2208, 38.2295, 0.37", "83.802, -21.4002, 39.0965, 0.37", "84.6094, -21.5291, 39.9154, 0.37", "85.8314, -21.6553, 41.1301, 0.22", "87.1405, -21.7474, 42.4143, 0.22", "93.7419, -23.8408, 50.5376, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "74.1515, -20.7389, 29.0535, 0.37", "74.0652, -21.53, 29.3901, 0.37", "74.0474, -22.0126, 29.6298, 0.37", "74.0591, -22.4546, 29.8668, 0.37", "74.1015, -22.8828, 30.148, 0.37", "74.1571, -23.2445, 30.4024, 0.37", "74.2419, -23.6586, 30.7136, 0.29", "74.4178, -24.2529, 31.1485, 0.22", "74.6306, -24.907, 31.5885, 0.22", "74.9276, -25.7525, 32.1073, 0.22", "75.0421, -26.078, 32.2863, 1.18", "75.1242, -26.3658, 32.4099, 1.4", "75.2625, -27.3259, 32.6882, 1.4", "75.2562, -28.161, 32.8298, 0.44", "75.2168, -28.4494, 32.8659, 0.44", "75.1123, -28.89, 32.909, 0.29", "74.8851, -29.5945, 33.0042, 0.29", "74.5543, -30.4621, 33.1417, 0.22", "74.2602, -31.0777, 33.2947, 0.22", "74.0528, -31.437, 33.3909, 1.03", "73.9416, -31.6129, 33.4457, 1.33", "73.7785, -31.8473, 33.534, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-128.056, -385.648, 53.1485, 0.29", "-128.573, -385.232, 53.2992, 0.29", "-128.689, -385.141, 53.3294, 0.52", "-128.869, -384.996, 53.3709, 0.59", "-129.904, -384.177, 53.5466, 0.22", "-130.197, -383.951, 53.5865, 0.22", "-130.602, -383.646, 53.6319, 0.66", "-130.821, -383.482, 53.6416, 0.66", "-131.754, -382.815, 53.6551, 0.22", "-132.14, -382.553, 53.6516, 0.22", "-132.493, -382.336, 53.6457, 0.52", "-132.744, -382.194, 53.6423, 0.66", "-133.428, -381.837, 53.6364, 0.22", "-134.783, -381.146, 53.6284, 0.22", "-135.655, -380.724, 53.6287, 0.22", "-136.459, -380.338, 53.6471, 1.18", "-136.685, -380.232, 53.6524, 1.4", "-137.031, -380.075, 53.6632, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-128.056, -385.648, 53.1485, 0.22", "-128.851, -387.168, 53.592, 0.22", "-129.456, -388.415, 54.0142, 0.22", "-129.705, -388.976, 54.2075, 0.44", "-129.81, -389.222, 54.2929, 0.44", "-130.765, -391.577, 55.0921, 0.22", "-131.212, -392.678, 55.4662, 0.44", "-131.586, -393.604, 55.7929, 0.22", "-131.809, -394.228, 56.0147, 0.59", "-131.99, -394.768, 56.2114, 0.66", "-132.115, -395.183, 56.3659, 0.44", "-134.163, -404.752, 59.8853, 0.44" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_49", "dend_42", "dend_27", "dend_20", "dend_11", "dend_0", "axon_0", "dend_51", "dend_50", "dend_44", "dend_43", "dend_33", "dend_28", "dend_22", "dend_21", "dend_13", "dend_12", "dend_2", "dend_1", "axon_1", "dend_48", "dend_45", "dend_41", "dend_34", "dend_30", "dend_29", "dend_24", "dend_23", "dend_17", "dend_14", "dend_8", "dend_3", "dend_47", "dend_46", "dend_40", "dend_35", "dend_32", "dend_31", "dend_26", "dend_25", "dend_19", "dend_18", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_4", "dend_39", "dend_36", "dend_7", "dend_6", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_ChC_ab30296908_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_49(0), soma_0(0.49999994654580493)
    connect dend_42(0), soma_0(0.49999994654580493)
    connect dend_27(0), soma_0(0.49999994654580493)
    connect dend_20(0), soma_0(0.49999994654580493)
    connect dend_11(0), soma_0(0.49999994654580493)
    connect dend_0(0), soma_0(0.49999994654580493)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.44259, -9.54825, -1.27888, 2.30647 ) }
    soma_0 { pt3dadd( -1.2819, -8.63231, -1.15821, 3.63473 ) }
    soma_0 { pt3dadd( -1.1212, -7.71637, -1.03754, 6.81375 ) }
    soma_0 { pt3dadd( -0.960502, -6.80044, -0.916865, 9.18535 ) }
    soma_0 { pt3dadd( -0.799804, -5.8845, -0.796194, 10.2157 ) }
    soma_0 { pt3dadd( -0.639107, -4.96856, -0.675522, 11.1797 ) }
    soma_0 { pt3dadd( -0.478409, -4.05262, -0.554851, 12.0566 ) }
    soma_0 { pt3dadd( -0.317712, -3.13668, -0.43418, 12.6775 ) }
    soma_0 { pt3dadd( -0.157014, -2.22074, -0.313508, 13.0617 ) }
    soma_0 { pt3dadd( 0.00368301, -1.3048, -0.192837, 13.2009 ) }
    soma_0 { pt3dadd( 0.16438, -0.388856, -0.0721652, 13.2418 ) }
    soma_0 { pt3dadd( 0.325078, 0.527084, 0.0485063, 12.889 ) }
    soma_0 { pt3dadd( 0.485775, 1.44302, 0.169178, 12.4912 ) }
    soma_0 { pt3dadd( 0.646473, 2.35896, 0.289849, 12.2347 ) }
    soma_0 { pt3dadd( 0.80717, 3.2749, 0.410521, 12.0486 ) }
    soma_0 { pt3dadd( 0.967868, 4.19084, 0.531192, 11.9346 ) }
    soma_0 { pt3dadd( 1.12856, 5.10678, 0.651864, 11.8925 ) }
    soma_0 { pt3dadd( 1.28926, 6.02272, 0.772535, 11.1454 ) }
    soma_0 { pt3dadd( 1.44996, 6.93866, 0.893206, 8.66152 ) }
    soma_0 { pt3dadd( 1.61066, 7.8546, 1.01388, 5.25757 ) }
    soma_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 3.12251 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.66144, -6.91316, -8.0337, 1.77 ) }
    dend_49 { pt3dadd( -3.19632, -8.37833, -8.25116, 1.77 ) }
    dend_49 { pt3dadd( -2.84208, -9.46902, -8.42439, 1.77 ) }
    dend_49 { pt3dadd( -2.30067, -11.1786, -8.68004, 1.55 ) }
    dend_49 { pt3dadd( -1.98267, -12.3122, -8.88307, 1.69 ) }
    dend_49 { pt3dadd( -1.76498, -13.193, -9.06, 1.77 ) }
    dend_49 { pt3dadd( -1.57428, -14.05, -9.27399, 1.77 ) }
    dend_49 { pt3dadd( -1.33217, -15.1987, -9.63369, 1.25 ) }
    dend_49 { pt3dadd( -0.939714, -16.961, -10.1186, 0.74 ) }
    dend_49 { pt3dadd( -1.69411, -16.1932, -10.9494, 0.74 ) }
    dend_49 { pt3dadd( -2.2824, -15.9217, -11.8334, 0.74 ) }
    dend_49 { pt3dadd( -3.31395, -15.5527, -13.4227, 1.18 ) }
    dend_49 { pt3dadd( -3.86847, -15.4601, -14.3288, 1.18 ) }
    dend_49 { pt3dadd( -4.70023, -15.2738, -15.5814, 0.52 ) }
    dend_49 { pt3dadd( -5.6845, -14.9347, -16.927, 0.52 ) }
    dend_49 { pt3dadd( -6.80333, -14.9838, -18.6276, 0.74 ) }
    dend_49 { pt3dadd( -7.27481, -15.2306, -19.7845, 0.74 ) }
    dend_49 { pt3dadd( -7.49975, -15.6111, -20.7941, 0.74 ) }
    dend_49 { pt3dadd( -7.86277, -16.1014, -22.3177, 1.11 ) }
    dend_49 { pt3dadd( -8.18683, -16.3574, -23.2929, 1.69 ) }
    dend_49 { pt3dadd( -8.7172, -16.5336, -24.2776, 1.77 ) }
    dend_49 { pt3dadd( -9.92543, -16.8726, -26.4538, 1.33 ) }
    dend_49 { pt3dadd( -10.5685, -17.1759, -27.7803, 1.4 ) }
    dend_49 { pt3dadd( -10.9474, -17.58, -28.7766, 1.55 ) }
    dend_49 { pt3dadd( -11.1628, -18.2522, -29.8199, 1.33 ) }
    dend_49 { pt3dadd( -11.1862, -19.411, -31.1442, 0.74 ) }
    dend_49 { pt3dadd( -10.9846, -20.3598, -31.9137, 1.03 ) }
    dend_49 { pt3dadd( -10.6902, -21.1564, -32.4002, 1.47 ) }
    dend_49 { pt3dadd( -10.3778, -21.6799, -32.7496, 1.62 ) }
    dend_49 { pt3dadd( -9.88293, -22.3051, -33.2315, 1.62 ) }
    dend_49 { pt3dadd( -9.3221, -22.8076, -33.675, 0.52 ) }
    dend_49 { pt3dadd( -8.65548, -23.2803, -34.1643, 0.52 ) }
    dend_49 { pt3dadd( -8.48963, -23.5273, -34.5848, 0.52 ) }
    dend_49 { pt3dadd( -8.52335, -24.033, -35.6741, 0.66 ) }
    dend_49 { pt3dadd( -8.73898, -24.5294, -36.8251, 0.74 ) }
    dend_49 { pt3dadd( -9.09066, -24.732, -37.637, 0.44 ) }
    dend_49 { pt3dadd( -9.69663, -24.7295, -38.4959, 0.44 ) }
    dend_49 { pt3dadd( -10.5898, -24.6253, -39.5881, 0.44 ) }
    dend_49 { pt3dadd( -11.2248, -24.6867, -40.5599, 0.44 ) }
    dend_49 { pt3dadd( -11.5779, -24.8076, -41.2491, 0.44 ) }
    dend_49 { pt3dadd( -12.2342, -25.2114, -42.5882, 0.66 ) }
    dend_49 { pt3dadd( -12.5547, -25.8384, -43.9412, 1.11 ) }
    dend_49 { pt3dadd( -12.7206, -26.0682, -44.4112, 0.96 ) }
    dend_49 { pt3dadd( -13.1541, -26.5527, -45.4885, 1.18 ) }
    dend_49 { pt3dadd( -13.3227, -26.7601, -45.9096, 1.69 ) }
    dend_49 { pt3dadd( -13.5968, -27.0792, -46.52, 1.69 ) }
    dend_49 { pt3dadd( -14.6414, -28.2091, -48.5625, 0.88 ) }
    dend_49 { pt3dadd( -15.2794, -28.7466, -49.629, 2.14 ) }
    dend_49 { pt3dadd( -16.7267, -29.4731, -51.5998, 2.28 ) }
    dend_49 { pt3dadd( -16.9299, -29.5256, -51.8254, 2.28 ) }
    dend_49 { pt3dadd( -18.104, -29.6287, -52.9206, 0.44 ) }
    dend_49 { pt3dadd( -18.7742, -29.5776, -53.4131, 0.44 ) }
    dend_49 { pt3dadd( -19.5659, -29.4241, -53.8673, 0.81 ) }
    dend_49 { pt3dadd( -20.3781, -29.2278, -54.3523, 0.81 ) }
    dend_49 { pt3dadd( -20.7484, -29.1794, -54.6177, 0.96 ) }
    dend_49 { pt3dadd( -21.484, -29.2423, -55.2643, 0.66 ) }
    dend_49 { pt3dadd( -22.2237, -29.4813, -56.0238, 1.99 ) }
    dend_49 { pt3dadd( -22.7777, -29.7672, -56.6646, 2.21 ) }
    dend_49 { pt3dadd( -23.3186, -30.1442, -57.3339, 2.5 ) }
    dend_49 { pt3dadd( -24.807, -31.4382, -59.3178, 0.66 ) }
    dend_49 { pt3dadd( -25.5785, -32.2824, -60.4894, 0.66 ) }
    dend_49 { pt3dadd( -26.0552, -32.9387, -61.2943, 0.66 ) }
    dend_49 { pt3dadd( -26.5459, -33.7194, -62.1558, 1.55 ) }
    dend_49 { pt3dadd( -26.7739, -34.1033, -62.5372, 2.21 ) }
    dend_49 { pt3dadd( -26.9938, -34.5044, -62.9012, 2.21 ) }
    dend_49 { pt3dadd( -27.6003, -35.7795, -63.9959, 0.29 ) }
    dend_49 { pt3dadd( -27.9248, -36.602, -64.7569, 0.29 ) }
    dend_49 { pt3dadd( -28.1369, -37.1699, -65.272, 1.55 ) }
    dend_49 { pt3dadd( -28.4014, -37.8551, -65.88, 1.99 ) }
    dend_49 { pt3dadd( -28.6446, -38.4685, -66.4369, 2.36 ) }
    dend_49 { pt3dadd( -29.3285, -40.1368, -67.9983, 0.59 ) }
    dend_49 { pt3dadd( -29.6685, -40.992, -68.8528, 1.84 ) }
    dend_49 { pt3dadd( -29.8023, -41.3889, -69.2978, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -6.50143, -1.62167, 2.1563, 1.92 ) }
    dend_42 { pt3dadd( -7.03825, -2.5244, 2.1136, 1.92 ) }
    dend_42 { pt3dadd( -7.95139, -4.31445, 2.02074, 1.92 ) }
    dend_42 { pt3dadd( -8.89302, -5.94752, 1.92707, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( -9.61888, -7.05195, 1.84784, 2.36 ) }
    dend_42 { pt3dadd( -10.6475, -8.38836, 1.73862, 2.28 ) }
    dend_42 { pt3dadd( -11.7774, -9.62223, 1.6137, 2.36 ) }
    dend_42 { pt3dadd( -13.0418, -10.764, 1.4515, 2.36 ) }
    dend_42 { pt3dadd( -15.0041, -12.044, 1.22, 1.77 ) }
    dend_42 { pt3dadd( -16.0835, -12.4652, 1.13888, 1.77 ) }
    dend_42 { pt3dadd( -17.7758, -12.8086, 1.09378, 1.99 ) }
    dend_42 { pt3dadd( -19.284, -12.9495, 1.18953, 1.99 ) }
    dend_42 { pt3dadd( -20.0302, -12.9751, 1.28166, 1.99 ) }
    dend_42 { pt3dadd( -21.1425, -13.0264, 1.48011, 1.77 ) }
    dend_42 { pt3dadd( -22.8641, -13.3115, 1.92551, 1.47 ) }
    dend_42 { pt3dadd( -24.1068, -13.7332, 2.2771, 1.47 ) }
    dend_42 { pt3dadd( -25.6731, -14.5923, 2.67287, 1.33 ) }
    dend_42 { pt3dadd( -26.385, -15.1178, 2.80545, 1.99 ) }
    dend_42 { pt3dadd( -27.5951, -16.1922, 2.93828, 1.99 ) }
    dend_42 { pt3dadd( -28.9891, -17.5883, 2.95608, 1.77 ) }
    dend_42 { pt3dadd( -30.5309, -19.294, 2.8204, 1.92 ) }
    dend_42 { pt3dadd( -31.9567, -20.9153, 2.52951, 1.69 ) }
    dend_42 { pt3dadd( -32.8334, -21.8565, 2.24756, 1.69 ) }
    dend_42 { pt3dadd( -33.9319, -22.9166, 1.83224, 1.84 ) }
    dend_42 { pt3dadd( -34.9339, -23.8031, 1.44957, 1.84 ) }
    dend_42 { pt3dadd( -36.2309, -24.9105, 0.974413, 1.69 ) }
    dend_42 { pt3dadd( -37.6564, -26.144, 0.529695, 1.55 ) }
    dend_42 { pt3dadd( -39.0959, -27.479, 0.193748, 1.4 ) }
    dend_42 { pt3dadd( -40.2753, -28.578, -0.0456632, 1.25 ) }
    dend_42 { pt3dadd( -41.5094, -29.78, -0.267969, 1.33 ) }
    dend_42 { pt3dadd( -42.6781, -31.0295, -0.397283, 1.47 ) }
    dend_42 { pt3dadd( -43.7722, -32.3552, -0.344839, 1.62 ) }
    dend_42 { pt3dadd( -44.5457, -33.5953, -0.0723518, 1.77 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 29/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.448551, -8.29066, -4.9037, 3.61 ) }
    dend_27 { pt3dadd( 0.639395, -9.57258, -4.84079, 2.95 ) }
    dend_27 { pt3dadd( 0.912925, -11.5619, -4.74613, 2.8 ) }
    dend_27 { pt3dadd( 1.07064, -12.8951, -4.65594, 2.8 ) }
    dend_27 { pt3dadd( 1.20801, -14.3858, -4.54229, 3.02 ) }
    dend_27 { pt3dadd( 1.27374, -15.3753, -4.4662, 3.02 ) }
    dend_27 { pt3dadd( 1.30124, -16.3458, -4.38758, 3.02 ) }
    dend_27 { pt3dadd( 1.27473, -17.8082, -4.26699, 3.02 ) }
    dend_27 { pt3dadd( 1.16723, -19.3552, -4.13438, 2.36 ) }
    dend_27 { pt3dadd( 0.878735, -22.0613, -3.98945, 2.36 ) }
    dend_27 { pt3dadd( 0.670468, -23.5772, -3.97531, 2.43 ) }
    dend_27 { pt3dadd( 0.430879, -25.0445, -4.01143, 2.43 ) }
    dend_27 { pt3dadd( 0.117717, -26.7644, -4.11392, 2.43 ) }
    dend_27 { pt3dadd( -0.369194, -29.1389, -4.3231, 2.28 ) }
    dend_27 { pt3dadd( -0.893871, -31.5753, -4.59675, 2.14 ) }
    dend_27 { pt3dadd( -1.62638, -34.8029, -5.0249, 2.06 ) }
    dend_27 { pt3dadd( -2.13476, -37.043, -5.35932, 2.43 ) }
    dend_27 { pt3dadd( -2.45588, -38.4696, -5.60203, 2.58 ) }
    dend_27 { pt3dadd( -2.80021, -39.9728, -5.89239, 2.58 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 49/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.381405, 7.21333, -7.5337, 1.62 ) }
    dend_20 { pt3dadd( -0.462757, 7.91084, -7.58952, 1.62 ) }
    dend_20 { pt3dadd( -0.5914, 8.93701, -7.62198, 1.92 ) }
    dend_20 { pt3dadd( -0.785404, 10.3078, -7.6781, 1.33 ) }
    dend_20 { pt3dadd( -1.03008, 11.7833, -7.76079, 1.69 ) }
    dend_20 { pt3dadd( -1.23076, 12.875, -7.80286, 2.21 ) }
    dend_20 { pt3dadd( -1.40278, 13.7876, -7.79562, 2.21 ) }
    dend_20 { pt3dadd( -1.60989, 14.815, -7.74536, 1.99 ) }
    dend_20 { pt3dadd( -1.80426, 15.6886, -7.66907, 1.77 ) }
    dend_20 { pt3dadd( -2.03507, 16.6604, -7.55689, 1.99 ) }
    dend_20 { pt3dadd( -2.28538, 17.689, -7.43363, 1.99 ) }
    dend_20 { pt3dadd( -2.71325, 19.4961, -7.25391, 1.11 ) }
    dend_20 { pt3dadd( -2.97737, 20.6258, -7.17682, 1.11 ) }
    dend_20 { pt3dadd( -3.2604, 21.7624, -7.14621, 1.25 ) }
    dend_20 { pt3dadd( -3.53024, 22.7168, -7.14095, 1.4 ) }
    dend_20 { pt3dadd( -3.88346, 23.7599, -7.20196, 0.81 ) }
    dend_20 { pt3dadd( -4.29945, 24.748, -7.35793, 0.74 ) }
    dend_20 { pt3dadd( -4.63002, 25.394, -7.52396, 0.74 ) }
    dend_20 { pt3dadd( -5.03751, 26.0948, -7.74856, 0.74 ) }
    dend_20 { pt3dadd( -5.51107, 26.8581, -8.03414, 0.96 ) }
    dend_20 { pt3dadd( -5.95753, 27.5766, -8.32256, 0.96 ) }
    dend_20 { pt3dadd( -6.42333, 28.298, -8.61922, 1.55 ) }
    dend_20 { pt3dadd( -6.94947, 29.1068, -8.96384, 2.06 ) }
    dend_20 { pt3dadd( -7.39461, 29.8432, -9.28525, 2.43 ) }
    dend_20 { pt3dadd( -7.90512, 30.8349, -9.72158, 2.36 ) }
    dend_20 { pt3dadd( -8.48313, 32.1858, -10.3006, 2.58 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.32144, 7.89733, 0.346303, 2.5 ) }
    dend_11 { pt3dadd( -2.39548, 8.05259, 0.347145, 2.5 ) }
    dend_11 { pt3dadd( -3.56943, 10.2277, 0.30178, 1.77 ) }
    dend_11 { pt3dadd( -4.38882, 11.6975, 0.310165, 1.55 ) }
    dend_11 { pt3dadd( -5.34987, 13.3705, 0.388429, 1.55 ) }
    dend_11 { pt3dadd( -6.08214, 14.647, 0.497605, 1.33 ) }
    dend_11 { pt3dadd( -7.19944, 16.627, 0.729921, 1.33 ) }
    dend_11 { pt3dadd( -7.89813, 17.8367, 0.90867, 1.55 ) }
    dend_11 { pt3dadd( -8.95229, 19.6287, 1.21245, 1.55 ) }
    dend_11 { pt3dadd( -10.0471, 21.5775, 1.54941, 1.62 ) }
    dend_11 { pt3dadd( -10.9212, 23.3143, 1.83242, 1.4 ) }
    dend_11 { pt3dadd( -11.7362, 25.2259, 2.10881, 1.4 ) }
    dend_11 { pt3dadd( -12.1998, 26.4002, 2.28048, 1.4 ) }
    dend_11 { pt3dadd( -12.9207, 28.2886, 2.54142, 1.4 ) }
    dend_11 { pt3dadd( -13.605, 30.1751, 2.72356, 1.4 ) }
    dend_11 { pt3dadd( -14.3746, 32.5069, 2.84706, 1.77 ) }
    dend_11 { pt3dadd( -15.0224, 34.5989, 2.87015, 2.73 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.82855, 3.96433, 1.3463, 2.58 ) }
    dend_0 { pt3dadd( 6.88739, 4.01887, 1.35164, 2.58 ) }
    dend_0 { pt3dadd( 7.629, 4.7237, 1.42909, 2.58 ) }
    dend_0 { pt3dadd( 8.47044, 5.53173, 1.54298, 1.84 ) }
    dend_0 { pt3dadd( 9.09334, 6.11798, 1.64403, 2.06 ) }
    dend_0 { pt3dadd( 9.8976, 6.87281, 1.79513, 2.06 ) }
    dend_0 { pt3dadd( 10.429, 7.36002, 1.92935, 2.58 ) }
    dend_0 { pt3dadd( 11.0189, 7.89714, 2.11239, 2.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 11.4089, 8.25807, 2.26029, 2.58 ) }
    dend_0 { pt3dadd( 12.1009, 8.86981, 2.55594, 2.58 ) }
    dend_0 { pt3dadd( 12.5877, 9.26962, 2.77548, 2.43 ) }
    dend_0 { pt3dadd( 13.6076, 10.0586, 3.27514, 2.21 ) }
    dend_0 { pt3dadd( 14.3515, 10.6009, 3.65472, 1.99 ) }
    dend_0 { pt3dadd( 14.9486, 11.0106, 3.94091, 1.99 ) }
    dend_0 { pt3dadd( 15.7229, 11.4638, 4.27535, 1.69 ) }
    dend_0 { pt3dadd( 16.3702, 11.7232, 4.52085, 1.69 ) }
    dend_0 { pt3dadd( 17.5163, 11.8724, 4.89759, 2.06 ) }
    dend_0 { pt3dadd( 18.2357, 11.7529, 5.09348, 2.06 ) }
    dend_0 { pt3dadd( 19.9355, 11.0493, 5.54825, 1.69 ) }
    dend_0 { pt3dadd( 21.1046, 10.4401, 5.84371, 1.92 ) }
    dend_0 { pt3dadd( 22.9323, 9.25985, 6.27299, 1.92 ) }
    dend_0 { pt3dadd( 24.6728, 7.90155, 6.64405, 2.06 ) }
    dend_0 { pt3dadd( 25.565, 7.05519, 6.81194, 2.28 ) }
    dend_0 { pt3dadd( 26.2343, 6.28408, 6.94687, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 16/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.77135, 8.77054, 1.13455, 0.835316 ) }
    axon_0 { pt3dadd( 4.36343, 23.5449, 1.13455, 0.835316 ) }
    axon_0 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.835316 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 19/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -29.8023, -41.3889, -69.2978, 0.96 ) }
    dend_51 { pt3dadd( -29.206, -42.5485, -71.5914, 0.96 ) }
    dend_51 { pt3dadd( -29.0993, -42.8071, -72.0212, 0.96 ) }
    dend_51 { pt3dadd( -28.9708, -43.1573, -72.5295, 0.96 ) }
    dend_51 { pt3dadd( -28.7992, -43.6488, -73.1822, 1.55 ) }
    dend_51 { pt3dadd( -28.6697, -44.0627, -73.6791, 0.22 ) }
    dend_51 { pt3dadd( -28.5396, -44.5425, -74.1698, 0.22 ) }
    dend_51 { pt3dadd( -28.4875, -44.8521, -74.3652, 1.11 ) }
    dend_51 { pt3dadd( -28.4461, -45.1431, -74.5227, 1.4 ) }
    dend_51 { pt3dadd( -28.3754, -45.5384, -74.701, 1.4 ) }
    dend_51 { pt3dadd( -28.1941, -46.3915, -75.0276, 0.22 ) }
    dend_51 { pt3dadd( -27.9574, -47.2668, -75.3351, 0.22 ) }
    dend_51 { pt3dadd( -27.8646, -47.5546, -75.4311, 0.74 ) }
    dend_51 { pt3dadd( -27.8107, -47.7088, -75.4773, 0.74 ) }
    dend_51 { pt3dadd( -27.5127, -48.5311, -75.6974, 0.15 ) }
    dend_51 { pt3dadd( -27.4638, -48.6587, -75.7258, 0.37 ) }
    dend_51 { pt3dadd( -27.1556, -49.3549, -75.8567, 0.22 ) }
    dend_51 { pt3dadd( -26.9634, -49.7425, -75.9405, 0.22 ) }
    dend_51 { pt3dadd( -26.8107, -50.0517, -76.0061, 0.74 ) }
    dend_51 { pt3dadd( -26.6721, -50.3661, -76.0651, 0.88 ) }
    dend_51 { pt3dadd( -26.6406, -50.4727, -76.0814, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 40/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -29.8023, -41.3889, -69.2978, 2.87 ) }
    dend_50 { pt3dadd( -30.2585, -41.466, -69.3922, 2.87 ) }
    dend_50 { pt3dadd( -31.7101, -41.8245, -69.7462, 0.22 ) }
    dend_50 { pt3dadd( -33.0438, -42.31, -70.0932, 0.22 ) }
    dend_50 { pt3dadd( -33.6929, -42.5788, -70.2626, 1.69 ) }
    dend_50 { pt3dadd( -33.898, -42.6711, -70.3159, 2.21 ) }
    dend_50 { pt3dadd( -34.2327, -42.8297, -70.4021, 2.21 ) }
    dend_50 { pt3dadd( -35.478, -43.5189, -70.7071, 0.22 ) }
    dend_50 { pt3dadd( -36.5925, -44.2834, -70.9963, 0.22 ) }
    dend_50 { pt3dadd( -36.9408, -44.5457, -71.0914, 1.25 ) }
    dend_50 { pt3dadd( -37.2256, -44.7628, -71.1696, 1.25 ) }
    dend_50 { pt3dadd( -37.6028, -45.0473, -71.2784, 1.25 ) }
    dend_50 { pt3dadd( -38.3662, -45.584, -71.5011, 0.15 ) }
    dend_50 { pt3dadd( -38.7975, -45.8732, -71.6242, 0.15 ) }
    dend_50 { pt3dadd( -39.1332, -46.0728, -71.7261, 0.96 ) }
    dend_50 { pt3dadd( -39.51, -46.2735, -71.8546, 1.18 ) }
    dend_50 { pt3dadd( -39.6808, -46.3511, -71.9165, 1.18 ) }
    dend_50 { pt3dadd( -40.7666, -46.7652, -72.3788, 0.22 ) }
    dend_50 { pt3dadd( -41.0492, -46.837, -72.5162, 0.52 ) }
    dend_50 { pt3dadd( -41.304, -46.8882, -72.6444, 0.52 ) }
    dend_50 { pt3dadd( -41.9572, -46.9996, -72.9709, 0.22 ) }
    dend_50 { pt3dadd( -42.3618, -47.0647, -73.1783, 1.25 ) }
    dend_50 { pt3dadd( -42.9596, -47.1813, -73.4737, 1.4 ) }
    dend_50 { pt3dadd( -44.1245, -47.511, -74.0727, 0.22 ) }
    dend_50 { pt3dadd( -44.9326, -47.8335, -74.4839, 0.22 ) }
    dend_50 { pt3dadd( -45.2444, -48.0003, -74.6417, 0.74 ) }
    dend_50 { pt3dadd( -45.6533, -48.2878, -74.844, 0.88 ) }
    dend_50 { pt3dadd( -46.2421, -48.9056, -75.2109, 0.22 ) }
    dend_50 { pt3dadd( -46.7472, -49.7404, -75.5681, 0.22 ) }
    dend_50 { pt3dadd( -46.9713, -50.302, -75.76, 1.99 ) }
    dend_50 { pt3dadd( -47.0741, -50.6509, -75.855, 2.36 ) }
    dend_50 { pt3dadd( -47.1605, -50.9956, -75.9461, 2.36 ) }
    dend_50 { pt3dadd( -47.5582, -52.9437, -76.4419, 0.15 ) }
    dend_50 { pt3dadd( -47.7462, -54.1636, -76.7679, 0.15 ) }
    dend_50 { pt3dadd( -47.7873, -54.4817, -76.8393, 0.44 ) }
    dend_50 { pt3dadd( -47.8488, -55.0964, -76.9597, 0.44 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 76/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -44.5457, -33.5953, -0.0723518, 0.96 ) }
    dend_44 { pt3dadd( -45.3215, -33.9169, -0.39848, 0.96 ) }
    dend_44 { pt3dadd( -46.0598, -34.249, -0.711549, 1.25 ) }
    dend_44 { pt3dadd( -47.1242, -34.7265, -1.15792, 1.25 ) }
    dend_44 { pt3dadd( -48.9826, -35.4938, -1.88893, 1.18 ) }
    dend_44 { pt3dadd( -50.2508, -35.9566, -2.34938, 1.11 ) }
    dend_44 { pt3dadd( -51.2284, -36.2894, -2.69607, 0.88 ) }
    dend_44 { pt3dadd( -52.5143, -36.7374, -3.17212, 0.96 ) }
    dend_44 { pt3dadd( -53.25, -36.9944, -3.4513, 0.96 ) }
    dend_44 { pt3dadd( -54.3293, -37.3804, -3.86715, 0.96 ) }
    dend_44 { pt3dadd( -55.3978, -37.7587, -4.2153, 0.96 ) }
    dend_44 { pt3dadd( -56.3105, -38.0656, -4.45859, 1.18 ) }
    dend_44 { pt3dadd( -57.4365, -38.4214, -4.70978, 1.03 ) }
    dend_44 { pt3dadd( -57.9982, -38.5746, -4.77837, 1.03 ) }
    dend_44 { pt3dadd( -59.1828, -38.8398, -4.79595, 1.18 ) }
    dend_44 { pt3dadd( -59.9103, -38.9584, -4.70373, 1.18 ) }
    dend_44 { pt3dadd( -61.5722, -39.096, -4.18915, 0.96 ) }
    dend_44 { pt3dadd( -62.1863, -39.1054, -3.9455, 1.11 ) }
    dend_44 { pt3dadd( -63.3862, -39.0939, -3.41298, 1.11 ) }
    dend_44 { pt3dadd( -64.3488, -39.1066, -2.97247, 1.11 ) }
    dend_44 { pt3dadd( -65.4812, -39.1624, -2.45003, 1.11 ) }
    dend_44 { pt3dadd( -66.9921, -39.3571, -1.75652, 1.55 ) }
    dend_44 { pt3dadd( -68.0705, -39.6148, -1.29053, 1.03 ) }
    dend_44 { pt3dadd( -69.3593, -40.0754, -0.73605, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( -70.4558, -40.6211, -0.283483, 0.74 ) }
    dend_44 { pt3dadd( -71.0822, -41.0362, -0.0337069, 0.74 ) }
    dend_44 { pt3dadd( -71.8856, -41.7285, 0.241545, 0.74 ) }
    dend_44 { pt3dadd( -72.6768, -42.5806, 0.454391, 0.66 ) }
    dend_44 { pt3dadd( -73.3815, -43.4681, 0.621145, 0.88 ) }
    dend_44 { pt3dadd( -73.8388, -44.1202, 0.706047, 1.03 ) }
    dend_44 { pt3dadd( -74.3136, -44.8906, 0.784099, 1.03 ) }
    dend_44 { pt3dadd( -74.9189, -45.885, 0.868168, 0.88 ) }
    dend_44 { pt3dadd( -75.6732, -47.0554, 0.94764, 0.88 ) }
    dend_44 { pt3dadd( -76.1003, -47.6431, 0.973973, 0.88 ) }
    dend_44 { pt3dadd( -76.7359, -48.3652, 0.999063, 0.88 ) }
    dend_44 { pt3dadd( -77.978, -49.5217, 1.0293, 0.88 ) }
    dend_44 { pt3dadd( -78.7066, -50.0457, 1.03298, 0.88 ) }
    dend_44 { pt3dadd( -79.7532, -50.5961, 1.02029, 0.88 ) }
    dend_44 { pt3dadd( -80.4592, -50.8496, 0.996303, 0.96 ) }
    dend_44 { pt3dadd( -81.2897, -51.0735, 0.936229, 0.96 ) }
    dend_44 { pt3dadd( -82.0452, -51.2199, 0.878266, 0.96 ) }
    dend_44 { pt3dadd( -82.8921, -51.3574, 0.81847, 0.52 ) }
    dend_44 { pt3dadd( -83.4706, -51.5449, 0.799568, 0.52 ) }
    dend_44 { pt3dadd( -83.9079, -51.8756, 0.846276, 0.52 ) }
    dend_44 { pt3dadd( -84.3384, -52.4873, 1.02833, 0.81 ) }
    dend_44 { pt3dadd( -84.6732, -53.1302, 1.27028, 0.96 ) }
    dend_44 { pt3dadd( -84.9206, -53.8714, 1.57284, 0.96 ) }
    dend_44 { pt3dadd( -85.2006, -55.1982, 2.13425, 0.81 ) }
    dend_44 { pt3dadd( -85.2948, -55.8467, 2.41971, 0.81 ) }
    dend_44 { pt3dadd( -85.3792, -56.6639, 2.82236, 1.11 ) }
    dend_44 { pt3dadd( -85.4621, -57.1224, 3.08755, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 27/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -44.5457, -33.5953, -0.0723518, 1.33 ) }
    dend_43 { pt3dadd( -45.354, -33.6663, 0.459373, 1.33 ) }
    dend_43 { pt3dadd( -46.1264, -33.7732, 0.899829, 1.18 ) }
    dend_43 { pt3dadd( -47.5709, -33.9553, 1.67731, 0.88 ) }
    dend_43 { pt3dadd( -48.2642, -34.0233, 2.01089, 0.74 ) }
    dend_43 { pt3dadd( -49.2728, -34.0921, 2.42551, 0.74 ) }
    dend_43 { pt3dadd( -50.2968, -34.1087, 2.83157, 0.74 ) }
    dend_43 { pt3dadd( -51.066, -34.1085, 3.10728, 0.59 ) }
    dend_43 { pt3dadd( -51.9689, -34.0661, 3.41568, 0.59 ) }
    dend_43 { pt3dadd( -52.6795, -33.9915, 3.65323, 0.52 ) }
    dend_43 { pt3dadd( -53.4018, -33.8328, 3.93044, 0.52 ) }
    dend_43 { pt3dadd( -54.7736, -33.3603, 4.5247, 0.74 ) }
    dend_43 { pt3dadd( -55.6497, -32.9805, 4.94632, 0.59 ) }
    dend_43 { pt3dadd( -56.4599, -32.6168, 5.35458, 0.44 ) }
    dend_43 { pt3dadd( -57.3373, -32.2635, 5.82499, 0.37 ) }
    dend_43 { pt3dadd( -58.0419, -32.0448, 6.2221, 0.66 ) }
    dend_43 { pt3dadd( -58.6645, -31.9517, 6.52126, 0.66 ) }
    dend_43 { pt3dadd( -59.0617, -31.9628, 6.64856, 0.66 ) }
    dend_43 { pt3dadd( -59.584, -32.0117, 6.79499, 0.44 ) }
    dend_43 { pt3dadd( -60.1871, -32.1112, 6.94523, 0.44 ) }
    dend_43 { pt3dadd( -61.2595, -32.2988, 7.18903, 0.44 ) }
    dend_43 { pt3dadd( -62.741, -32.5881, 7.53619, 0.74 ) }
    dend_43 { pt3dadd( -63.6192, -32.7892, 7.7443, 0.74 ) }
    dend_43 { pt3dadd( -64.83, -33.0591, 8.01495, 0.52 ) }
    dend_43 { pt3dadd( -65.9605, -33.2998, 8.25303, 0.59 ) }
    dend_43 { pt3dadd( -66.9288, -33.5035, 8.44056, 0.44 ) }
    dend_43 { pt3dadd( -68.2752, -33.8367, 8.71042, 0.37 ) }
    dend_43 { pt3dadd( -69.2455, -34.1547, 8.92442, 0.37 ) }
    dend_43 { pt3dadd( -70.2999, -34.6405, 9.15911, 0.29 ) }
    dend_43 { pt3dadd( -70.8, -34.9685, 9.27639, 0.29 ) }
    dend_43 { pt3dadd( -71.3959, -35.4653, 9.48021, 0.29 ) }
    dend_43 { pt3dadd( -71.9099, -35.9346, 9.70226, 0.37 ) }
    dend_43 { pt3dadd( -72.498, -36.476, 10.0082, 0.37 ) }
    dend_43 { pt3dadd( -73.1003, -36.9878, 10.3598, 0.37 ) }
    dend_43 { pt3dadd( -73.755, -37.5863, 10.7984, 0.66 ) }
    dend_43 { pt3dadd( -74.4102, -38.1624, 11.2512, 0.81 ) }
    dend_43 { pt3dadd( -74.9158, -38.5528, 11.5933, 0.81 ) }
    dend_43 { pt3dadd( -75.6518, -39.0071, 12.0412, 0.22 ) }
    dend_43 { pt3dadd( -76.5543, -39.4574, 12.5517, 0.22 ) }
    dend_43 { pt3dadd( -85.1775, -39.9605, 15.4671, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 67/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.80021, -39.9728, -5.89239, 1.55 ) }
    dend_33 { pt3dadd( -2.22002, -41.4656, -6.05027, 1.55 ) }
    dend_33 { pt3dadd( -1.64045, -42.9868, -6.20459, 1.55 ) }
    dend_33 { pt3dadd( -1.14915, -44.3243, -6.34021, 1.55 ) }
    dend_33 { pt3dadd( -0.605568, -45.843, -6.48155, 1.69 ) }
    dend_33 { pt3dadd( -0.210869, -47.0099, -6.57577, 1.69 ) }
    dend_33 { pt3dadd( 0.0561429, -47.8843, -6.63644, 1.69 ) }
    dend_33 { pt3dadd( 0.431367, -49.3399, -6.71297, 1.55 ) }
    dend_33 { pt3dadd( 0.848083, -51.2492, -6.79357, 1.47 ) }
    dend_33 { pt3dadd( 1.11278, -52.8458, -6.81884, 1.33 ) }
    dend_33 { pt3dadd( 1.26808, -54.383, -6.79735, 1.33 ) }
    dend_33 { pt3dadd( 1.33442, -56.4333, -6.71452, 1.33 ) }
    dend_33 { pt3dadd( 1.27208, -57.9444, -6.59681, 1.11 ) }
    dend_33 { pt3dadd( 1.15392, -58.9016, -6.48234, 1.11 ) }
    dend_33 { pt3dadd( 0.752027, -60.9967, -6.1591, 1.25 ) }
    dend_33 { pt3dadd( 0.407025, -62.3931, -5.90965, 1.25 ) }
    dend_33 { pt3dadd( 0.0469281, -63.6527, -5.66511, 1.25 ) }
    dend_33 { pt3dadd( -0.501238, -65.4045, -5.32403, 1.4 ) }
    dend_33 { pt3dadd( -1.07291, -67.1336, -4.99885, 1.4 ) }
    dend_33 { pt3dadd( -1.53106, -68.5354, -4.77166, 1.55 ) }
    dend_33 { pt3dadd( -1.82797, -69.5649, -4.66598, 1.55 ) }
    dend_33 { pt3dadd( -2.18653, -71.0839, -4.59, 1.33 ) }
    dend_33 { pt3dadd( -2.54174, -72.9758, -4.60665, 0.96 ) }
    dend_33 { pt3dadd( -2.64875, -73.7236, -4.66092, 0.81 ) }
    dend_33 { pt3dadd( -2.73252, -74.5632, -4.74234, 0.81 ) }
    dend_33 { pt3dadd( -2.85045, -76.5002, -4.94528, 0.96 ) }
    dend_33 { pt3dadd( -2.87958, -77.8399, -5.08119, 1.33 ) }
    dend_33 { pt3dadd( -2.8796, -79.3177, -5.21256, 1.69 ) }
    dend_33 { pt3dadd( -2.88254, -80.2141, -5.26768, 1.84 ) }
    dend_33 { pt3dadd( -2.89813, -81.2319, -5.29387, 1.99 ) }
    dend_33 { pt3dadd( -2.96082, -82.4396, -5.26614, 2.06 ) }
    dend_33 { pt3dadd( -3.02421, -83.4734, -5.21045, 2.06 ) }
    dend_33 { pt3dadd( -3.07556, -84.5261, -5.11267, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( -3.10022, -85.6495, -4.96282, 1.62 ) }
    dend_33 { pt3dadd( -3.08964, -86.9988, -4.74618, 1.18 ) }
    dend_33 { pt3dadd( -3.04929, -88.0783, -4.56751, 0.88 ) }
    dend_33 { pt3dadd( -2.96979, -89.5532, -4.30487, 0.88 ) }
    dend_33 { pt3dadd( -2.8953, -90.5682, -4.09117, 1.03 ) }
    dend_33 { pt3dadd( -2.8113, -91.613, -3.83925, 1.11 ) }
    dend_33 { pt3dadd( -2.76622, -92.3578, -3.64423, 1.11 ) }
    dend_33 { pt3dadd( -2.74465, -94.2206, -3.12554, 1.03 ) }
    dend_33 { pt3dadd( -2.78923, -95.4389, -2.76981, 1.18 ) }
    dend_33 { pt3dadd( -2.85492, -96.4342, -2.48785, 1.25 ) }
    dend_33 { pt3dadd( -2.98763, -97.9492, -2.09023, 1.18 ) }
    dend_33 { pt3dadd( -3.14553, -99.3236, -1.76296, 1.03 ) }
    dend_33 { pt3dadd( -3.35208, -100.696, -1.46577, 0.96 ) }
    dend_33 { pt3dadd( -3.63238, -102.184, -1.18484, 0.88 ) }
    dend_33 { pt3dadd( -3.86887, -103.178, -1.03568, 0.88 ) }
    dend_33 { pt3dadd( -4.34143, -104.677, -0.912749, 1.25 ) }
    dend_33 { pt3dadd( -4.90874, -106.173, -0.869971, 1.55 ) }
    dend_33 { pt3dadd( -5.36852, -107.317, -0.884036, 1.62 ) }
    dend_33 { pt3dadd( -5.71933, -108.231, -0.922762, 1.62 ) }
    dend_33 { pt3dadd( -6.13362, -109.426, -0.99555, 1.4 ) }
    dend_33 { pt3dadd( -6.64356, -111.116, -1.0987, 1.11 ) }
    dend_33 { pt3dadd( -7.05576, -112.854, -1.20232, 1.11 ) }
    dend_33 { pt3dadd( -7.38038, -114.77, -1.27892, 1.11 ) }
    dend_33 { pt3dadd( -7.63996, -116.812, -1.33549, 1.11 ) }
    dend_33 { pt3dadd( -7.79366, -118.304, -1.35558, 1.4 ) }
    dend_33 { pt3dadd( -7.92398, -119.85, -1.36007, 1.4 ) }
    dend_33 { pt3dadd( -8.09682, -122.261, -1.33717, 1.25 ) }
    dend_33 { pt3dadd( -8.27627, -124.729, -1.32104, 1.25 ) }
    dend_33 { pt3dadd( -8.40939, -126.353, -1.30922, 1.62 ) }
    dend_33 { pt3dadd( -8.55178, -127.776, -1.30682, 1.77 ) }
    dend_33 { pt3dadd( -8.75367, -129.681, -1.33318, 1.33 ) }
    dend_33 { pt3dadd( -8.93176, -131.406, -1.37091, 0.88 ) }
    dend_33 { pt3dadd( -9.09652, -133.326, -1.44672, 1.25 ) }
    dend_33 { pt3dadd( -9.16468, -134.276, -1.5031, 1.84 ) }
    dend_33 { pt3dadd( -9.21681, -135.338, -1.59201, 2.28 ) }
    dend_33 { pt3dadd( -9.24936, -136.437, -1.71643, 2.43 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 36/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.80021, -39.9728, -5.89239, 2.14 ) }
    dend_28 { pt3dadd( -2.63545, -40.6669, -6.07602, 2.14 ) }
    dend_28 { pt3dadd( -2.34429, -41.7656, -6.30963, 2.14 ) }
    dend_28 { pt3dadd( -1.84641, -43.6444, -6.70912, 1.69 ) }
    dend_28 { pt3dadd( -1.42923, -45.2187, -7.04385, 1.84 ) }
    dend_28 { pt3dadd( -1.02394, -46.7481, -7.36904, 1.99 ) }
    dend_28 { pt3dadd( -0.696085, -47.9853, -7.6321, 2.36 ) }
    dend_28 { pt3dadd( -0.439221, -48.8933, -7.78397, 2.5 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 44/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.48313, 32.1858, -10.3006, 1.25 ) }
    dend_22 { pt3dadd( -8.14526, 33.2412, -10.4469, 1.25 ) }
    dend_22 { pt3dadd( -7.86017, 33.9519, -10.5216, 1.03 ) }
    dend_22 { pt3dadd( -7.48129, 34.7979, -10.5889, 0.81 ) }
    dend_22 { pt3dadd( -7.05934, 35.7449, -10.647, 0.81 ) }
    dend_22 { pt3dadd( -6.69399, 36.6878, -10.6978, 1.11 ) }
    dend_22 { pt3dadd( -6.46822, 37.3709, -10.7303, 1.11 ) }
    dend_22 { pt3dadd( -6.23539, 38.1681, -10.7306, 0.96 ) }
    dend_22 { pt3dadd( -5.97134, 39.2331, -10.7051, 0.66 ) }
    dend_22 { pt3dadd( -5.81639, 39.9692, -10.6868, 0.52 ) }
    dend_22 { pt3dadd( -5.64297, 40.9345, -10.6569, 0.52 ) }
    dend_22 { pt3dadd( -5.54013, 41.651, -10.6352, 0.52 ) }
    dend_22 { pt3dadd( -5.3133, 43.1851, -10.6136, 1.18 ) }
    dend_22 { pt3dadd( -5.1905, 43.9707, -10.6103, 1.62 ) }
    dend_22 { pt3dadd( -5.09234, 44.5348, -10.6132, 1.69 ) }
    dend_22 { pt3dadd( -4.89415, 45.4714, -10.6416, 1.33 ) }
    dend_22 { pt3dadd( -4.76117, 45.9366, -10.6697, 0.74 ) }
    dend_22 { pt3dadd( -4.50786, 46.6527, -10.7349, 0.59 ) }
    dend_22 { pt3dadd( -4.06386, 47.7888, -10.8986, 0.66 ) }
    dend_22 { pt3dadd( -3.83193, 48.4035, -11.005, 0.44 ) }
    dend_22 { pt3dadd( -3.68368, 48.8622, -11.089, 0.44 ) }
    dend_22 { pt3dadd( -3.45195, 49.7025, -11.2515, 0.37 ) }
    dend_22 { pt3dadd( -3.25459, 50.4097, -11.3814, 0.37 ) }
    dend_22 { pt3dadd( -3.09122, 50.9239, -11.4576, 0.37 ) }
    dend_22 { pt3dadd( -2.76569, 51.7361, -11.5841, 0.37 ) }
    dend_22 { pt3dadd( -2.44531, 52.4612, -11.707, 0.44 ) }
    dend_22 { pt3dadd( -2.1602, 53.1673, -11.857, 0.44 ) }
    dend_22 { pt3dadd( -1.77143, 54.3092, -12.1493, 0.81 ) }
    dend_22 { pt3dadd( -1.52482, 55.1159, -12.3712, 1.03 ) }
    dend_22 { pt3dadd( -1.29069, 55.8454, -12.5815, 1.03 ) }
    dend_22 { pt3dadd( -1.07277, 56.5104, -12.7991, 0.81 ) }
    dend_22 { pt3dadd( -0.769013, 57.4824, -13.1634, 0.29 ) }
    dend_22 { pt3dadd( -0.635947, 57.9657, -13.359, 0.29 ) }
    dend_22 { pt3dadd( -0.374653, 59.1325, -13.835, 1.77 ) }
    dend_22 { pt3dadd( -0.295548, 59.5207, -13.9902, 2.36 ) }
    dend_22 { pt3dadd( -0.182693, 60.0578, -14.1825, 2.36 ) }
    dend_22 { pt3dadd( 0.0501734, 61.0796, -14.5146, 2.28 ) }
    dend_22 { pt3dadd( 0.361067, 62.3049, -14.8611, 0.66 ) }
    dend_22 { pt3dadd( 0.538517, 62.9755, -15.0495, 0.88 ) }
    dend_22 { pt3dadd( 0.721718, 63.6737, -15.2495, 0.88 ) }
    dend_22 { pt3dadd( 0.925212, 64.4566, -15.4551, 0.37 ) }
    dend_22 { pt3dadd( 1.0627, 64.985, -15.5858, 0.37 ) }
    dend_22 { pt3dadd( 1.33456, 66.0852, -15.8357, 0.37 ) }
    dend_22 { pt3dadd( 1.52657, 66.9141, -16.0135, 1.11 ) }
    dend_22 { pt3dadd( 1.66586, 67.5756, -16.1496, 1.47 ) }
    dend_22 { pt3dadd( 1.75047, 68.048, -16.2406, 1.69 ) }
    dend_22 { pt3dadd( 1.86322, 68.8449, -16.3821, 1.33 ) }
    dend_22 { pt3dadd( 1.95381, 69.7186, -16.5202, 0.44 ) }
    dend_22 { pt3dadd( 1.97938, 70.6444, -16.6513, 0.29 ) }
    dend_22 { pt3dadd( 1.97031, 71.3701, -16.754, 0.52 ) }
    dend_22 { pt3dadd( 1.94797, 71.9119, -16.8309, 0.52 ) }
    dend_22 { pt3dadd( 1.89321, 72.8218, -16.9844, 0.29 ) }
    dend_22 { pt3dadd( 1.85228, 73.7593, -17.145, 0.29 ) }
    dend_22 { pt3dadd( 1.81983, 75.4146, -17.451, 1.18 ) }
    dend_22 { pt3dadd( 1.81728, 76.0373, -17.5647, 1.62 ) }
    dend_22 { pt3dadd( 1.81267, 76.7001, -17.6741, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 1.80718, 77.5364, -17.7963, 1.33 ) }
    dend_22 { pt3dadd( 1.7832, 79.9213, -18.1246, 0.22 ) }
    dend_22 { pt3dadd( 1.77284, 81.4478, -18.3184, 0.22 ) }
    dend_22 { pt3dadd( 1.75968, 82.8265, -18.4716, 0.22 ) }
    dend_22 { pt3dadd( 1.72185, 84.2816, -18.608, 0.74 ) }
    dend_22 { pt3dadd( 1.69184, 85.0741, -18.6761, 1.03 ) }
    dend_22 { pt3dadd( 1.67017, 85.4473, -18.7044, 1.03 ) }
    dend_22 { pt3dadd( 1.54899, 86.6363, -18.8297, 0.15 ) }
    dend_22 { pt3dadd( 1.49599, 87.0931, -18.9013, 0.15 ) }
    dend_22 { pt3dadd( 1.43603, 87.6175, -19.0216, 0.44 ) }
    dend_22 { pt3dadd( 1.38366, 88.1178, -19.1597, 0.66 ) }
    dend_22 { pt3dadd( 1.33652, 88.5788, -19.2882, 0.66 ) }
    dend_22 { pt3dadd( 1.24102, 89.9096, -19.6454, 1.55 ) }
    dend_22 { pt3dadd( 1.19866, 90.8888, -19.8905, 2.58 ) }
    dend_22 { pt3dadd( 1.1869, 91.7423, -20.0979, 2.58 ) }
    dend_22 { pt3dadd( 1.24427, 93.6391, -20.5069, 0.29 ) }
    dend_22 { pt3dadd( 1.35116, 94.907, -20.7091, 0.29 ) }
    dend_22 { pt3dadd( 1.59051, 96.7249, -20.8912, 0.29 ) }
    dend_22 { pt3dadd( 1.79991, 97.8666, -20.9374, 0.96 ) }
    dend_22 { pt3dadd( 1.92969, 98.4525, -20.9279, 0.96 ) }
    dend_22 { pt3dadd( 2.43444, 100.361, -20.7962, 0.22 ) }
    dend_22 { pt3dadd( 3.03355, 102.392, -20.5568, 0.22 ) }
    dend_22 { pt3dadd( 3.43536, 103.666, -20.3596, 1.77 ) }
    dend_22 { pt3dadd( 3.60125, 104.165, -20.2659, 2.36 ) }
    dend_22 { pt3dadd( 3.80776, 104.773, -20.1451, 2.5 ) }
    dend_22 { pt3dadd( 4.47271, 106.739, -19.7405, 0.15 ) }
    dend_22 { pt3dadd( 4.80437, 107.728, -19.5445, 0.29 ) }
    dend_22 { pt3dadd( 5.02338, 108.391, -19.4272, 0.29 ) }
    dend_22 { pt3dadd( 5.30466, 109.239, -19.3217, 0.15 ) }
    dend_22 { pt3dadd( 5.58499, 110.111, -19.2699, 1.18 ) }
    dend_22 { pt3dadd( 5.76347, 110.652, -19.2659, 1.55 ) }
    dend_22 { pt3dadd( 5.96496, 111.255, -19.2849, 1.18 ) }
    dend_22 { pt3dadd( 6.11399, 111.69, -19.3114, 0.74 ) }
    dend_22 { pt3dadd( 6.53654, 113.039, -19.4098, 0.22 ) }
    dend_22 { pt3dadd( 6.84062, 114.092, -19.494, 0.22 ) }
    dend_22 { pt3dadd( 7.31453, 115.93, -19.612, 0.22 ) }
    dend_22 { pt3dadd( 7.54474, 116.917, -19.658, 0.81 ) }
    dend_22 { pt3dadd( 7.62728, 117.313, -19.6696, 0.81 ) }
    dend_22 { pt3dadd( 8.07519, 119.781, -19.6747, 0.22 ) }
    dend_22 { pt3dadd( 8.25443, 121.017, -19.6139, 0.22 ) }
    dend_22 { pt3dadd( 8.37497, 122.132, -19.5526, 1.25 ) }
    dend_22 { pt3dadd( 8.38558, 122.427, -19.5385, 1.69 ) }
    dend_22 { pt3dadd( 8.38032, 122.76, -19.5237, 1.69 ) }
    dend_22 { pt3dadd( 8.34314, 123.467, -19.4908, 1.33 ) }
    dend_22 { pt3dadd( 8.28379, 124.085, -19.4742, 0.59 ) }
    dend_22 { pt3dadd( 8.1418, 125.372, -19.4775, 0.22 ) }
    dend_22 { pt3dadd( 7.96791, 127.209, -19.5378, 0.22 ) }
    dend_22 { pt3dadd( 7.86386, 128.341, -19.5886, 1.03 ) }
    dend_22 { pt3dadd( 7.81901, 128.817, -19.6132, 1.03 ) }
    dend_22 { pt3dadd( 7.78804, 129.317, -19.6364, 1.03 ) }
    dend_22 { pt3dadd( 7.76974, 130.058, -19.6596, 0.52 ) }
    dend_22 { pt3dadd( 7.78917, 131.721, -19.6672, 0.22 ) }
    dend_22 { pt3dadd( 7.86172, 132.525, -19.6591, 0.59 ) }
    dend_22 { pt3dadd( 7.9398, 133.041, -19.6455, 0.59 ) }
    dend_22 { pt3dadd( 8.3879, 135.312, -19.5498, 0.22 ) }
    dend_22 { pt3dadd( 8.56444, 136.018, -19.5059, 0.66 ) }
    dend_22 { pt3dadd( 8.72469, 136.524, -19.4678, 0.66 ) }
    dend_22 { pt3dadd( 9.14302, 137.7, -19.3818, 0.15 ) }
    dend_22 { pt3dadd( 9.38866, 138.354, -19.3419, 0.81 ) }
    dend_22 { pt3dadd( 9.55788, 138.805, -19.3226, 0.81 ) }
    dend_22 { pt3dadd( 9.80111, 139.47, -19.3126, 0.81 ) }
    dend_22 { pt3dadd( 10.2299, 140.738, -19.3213, 0.22 ) }
    dend_22 { pt3dadd( 10.649, 142.027, -19.3664, 1.33 ) }
    dend_22 { pt3dadd( 10.8168, 142.569, -19.3971, 1.55 ) }
    dend_22 { pt3dadd( 10.9164, 142.884, -19.4167, 1.55 ) }
    dend_22 { pt3dadd( 11.023, 143.219, -19.4427, 1.03 ) }
    dend_22 { pt3dadd( 11.5376, 144.748, -19.5812, 0.22 ) }
    dend_22 { pt3dadd( 12.0354, 146.111, -19.7177, 0.22 ) }
    dend_22 { pt3dadd( 12.3252, 146.827, -19.8032, 0.22 ) }
    dend_22 { pt3dadd( 12.6655, 147.675, -19.9072, 1.25 ) }
    dend_22 { pt3dadd( 12.8714, 148.223, -19.9804, 1.77 ) }
    dend_22 { pt3dadd( 13.0417, 148.718, -20.0543, 1.77 ) }
    dend_22 { pt3dadd( 13.177, 149.136, -20.1275, 1.18 ) }
    dend_22 { pt3dadd( 13.378, 149.797, -20.2538, 0.66 ) }
    dend_22 { pt3dadd( 13.9934, 151.813, -20.6856, 0.22 ) }
    dend_22 { pt3dadd( 14.4168, 153.162, -21.0144, 0.22 ) }
    dend_22 { pt3dadd( 14.7138, 154.082, -21.2359, 1.11 ) }
    dend_22 { pt3dadd( 14.9244, 154.674, -21.3691, 1.4 ) }
    dend_22 { pt3dadd( 15.134, 155.201, -21.4822, 1.4 ) }
    dend_22 { pt3dadd( 15.4105, 155.813, -21.6263, 0.96 ) }
    dend_22 { pt3dadd( 16.273, 157.55, -22.0721, 0.22 ) }
    dend_22 { pt3dadd( 17.2443, 159.358, -22.5306, 0.22 ) }
    dend_22 { pt3dadd( 18.019, 160.745, -22.8674, 1.77 ) }
    dend_22 { pt3dadd( 18.2968, 161.234, -22.9776, 2.65 ) }
    dend_22 { pt3dadd( 18.7403, 161.998, -23.1343, 2.95 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -8.48313, 32.1858, -10.3006, 0.66 ) }
    dend_21 { pt3dadd( -10.2642, 32.9735, -10.5912, 0.66 ) }
    dend_21 { pt3dadd( -10.9735, 33.2563, -10.705, 0.66 ) }
    dend_21 { pt3dadd( -11.805, 33.5575, -10.8318, 0.66 ) }
    dend_21 { pt3dadd( -12.7537, 33.8629, -10.9789, 1.11 ) }
    dend_21 { pt3dadd( -13.3416, 34.0264, -11.0746, 1.33 ) }
    dend_21 { pt3dadd( -14.2274, 34.2628, -11.2217, 1.33 ) }
    dend_21 { pt3dadd( -15.1887, 34.4908, -11.3802, 0.96 ) }
    dend_21 { pt3dadd( -15.8528, 34.6517, -11.4676, 0.88 ) }
    dend_21 { pt3dadd( -16.647, 34.8437, -11.5464, 0.88 ) }
    dend_21 { pt3dadd( -17.5926, 35.0678, -11.5937, 0.37 ) }
    dend_21 { pt3dadd( -18.0807, 35.1783, -11.5965, 0.37 ) }
    dend_21 { pt3dadd( -18.9154, 35.3648, -11.5708, 0.81 ) }
    dend_21 { pt3dadd( -19.6379, 35.5334, -11.5281, 0.88 ) }
    dend_21 { pt3dadd( -20.3075, 35.6945, -11.4786, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_21 { pt3dadd( -21.0148, 35.8687, -11.4155, 0.29 ) }
    dend_21 { pt3dadd( -21.4658, 35.9741, -11.3809, 0.29 ) }
    dend_21 { pt3dadd( -22.2478, 36.1108, -11.356, 0.74 ) }
    dend_21 { pt3dadd( -22.8291, 36.1967, -11.3626, 0.74 ) }
    dend_21 { pt3dadd( -23.1626, 36.2592, -11.3623, 0.74 ) }
    dend_21 { pt3dadd( -23.55, 36.3591, -11.334, 0.74 ) }
    dend_21 { pt3dadd( -24.0268, 36.5012, -11.2708, 0.59 ) }
    dend_21 { pt3dadd( -24.4922, 36.6329, -11.1795, 0.59 ) }
    dend_21 { pt3dadd( -24.9015, 36.7347, -11.0658, 0.37 ) }
    dend_21 { pt3dadd( -26.0094, 36.9511, -10.7355, 0.37 ) }
    dend_21 { pt3dadd( -26.7902, 37.0568, -10.4957, 0.37 ) }
    dend_21 { pt3dadd( -27.2076, 37.0912, -10.3671, 0.22 ) }
    dend_21 { pt3dadd( -27.9103, 37.1162, -10.1589, 0.22 ) }
    dend_21 { pt3dadd( -28.2887, 37.1087, -10.0655, 0.22 ) }
    dend_21 { pt3dadd( -29.4007, 37.0637, -9.84482, 1.03 ) }
    dend_21 { pt3dadd( -29.9512, 37.053, -9.76783, 1.4 ) }
    dend_21 { pt3dadd( -30.2808, 37.0634, -9.72808, 1.4 ) }
    dend_21 { pt3dadd( -31.0818, 37.1358, -9.64409, 0.81 ) }
    dend_21 { pt3dadd( -32.1065, 37.2717, -9.56763, 0.22 ) }
    dend_21 { pt3dadd( -32.6599, 37.3529, -9.53657, 0.22 ) }
    dend_21 { pt3dadd( -33.7762, 37.5324, -9.49947, 1.11 ) }
    dend_21 { pt3dadd( -34.346, 37.6312, -9.49431, 1.4 ) }
    dend_21 { pt3dadd( -34.7507, 37.703, -9.49842, 1.4 ) }
    dend_21 { pt3dadd( -35.6944, 37.8693, -9.52696, 0.66 ) }
    dend_21 { pt3dadd( -36.5813, 38.0157, -9.56397, 0.52 ) }
    dend_21 { pt3dadd( -37.6538, 38.1642, -9.62233, 0.74 ) }
    dend_21 { pt3dadd( -38.3499, 38.2561, -9.66868, 0.88 ) }
    dend_21 { pt3dadd( -39.3375, 38.3979, -9.74283, 0.66 ) }
    dend_21 { pt3dadd( -40.0382, 38.5058, -9.80027, 0.66 ) }
    dend_21 { pt3dadd( -40.6125, 38.601, -9.85345, 0.66 ) }
    dend_21 { pt3dadd( -41.6934, 38.7994, -9.94969, 0.29 ) }
    dend_21 { pt3dadd( -42.5608, 38.9738, -10.0042, 1.03 ) }
    dend_21 { pt3dadd( -43.2991, 39.1314, -10.0263, 1.25 ) }
    dend_21 { pt3dadd( -43.5349, 39.191, -10.0149, 1.25 ) }
    dend_21 { pt3dadd( -44.1437, 39.3785, -9.943, 0.81 ) }
    dend_21 { pt3dadd( -44.8765, 39.6299, -9.8074, 0.29 ) }
    dend_21 { pt3dadd( -45.3513, 39.8065, -9.68447, 0.52 ) }
    dend_21 { pt3dadd( -45.6676, 39.9359, -9.59254, 0.66 ) }
    dend_21 { pt3dadd( -46.8198, 40.4324, -9.2606, 0.22 ) }
    dend_21 { pt3dadd( -47.4712, 40.7209, -9.0896, 0.22 ) }
    dend_21 { pt3dadd( -48.0046, 40.9588, -8.97303, 0.22 ) }
    dend_21 { pt3dadd( -48.7194, 41.2847, -8.86876, 0.22 ) }
    dend_21 { pt3dadd( -49.6807, 41.7303, -8.77304, 0.59 ) }
    dend_21 { pt3dadd( -50.2299, 41.9909, -8.74295, 0.81 ) }
    dend_21 { pt3dadd( -50.739, 42.2524, -8.75597, 0.81 ) }
    dend_21 { pt3dadd( -51.517, 42.6897, -8.80986, 0.52 ) }
    dend_21 { pt3dadd( -52.5608, 43.3249, -8.92224, 1.03 ) }
    dend_21 { pt3dadd( -53.1842, 43.7224, -9.00897, 1.18 ) }
    dend_21 { pt3dadd( -53.6457, 44.0322, -9.08606, 1.25 ) }
    dend_21 { pt3dadd( -54.6719, 44.7545, -9.28004, 0.29 ) }
    dend_21 { pt3dadd( -55.5986, 45.4288, -9.47242, 0.74 ) }
    dend_21 { pt3dadd( -55.946, 45.6861, -9.55089, 0.96 ) }
    dend_21 { pt3dadd( -56.25, 45.9101, -9.62789, 0.96 ) }
    dend_21 { pt3dadd( -57.261, 46.6307, -9.90302, 0.22 ) }
    dend_21 { pt3dadd( -57.6625, 46.901, -10.0148, 0.22 ) }
    dend_21 { pt3dadd( -58.2137, 47.2455, -10.1618, 0.66 ) }
    dend_21 { pt3dadd( -58.589, 47.4704, -10.2704, 0.88 ) }
    dend_21 { pt3dadd( -59.0344, 47.724, -10.3987, 0.44 ) }
    dend_21 { pt3dadd( -59.616, 48.0468, -10.5605, 0.37 ) }
    dend_21 { pt3dadd( -59.9679, 48.2369, -10.6499, 0.44 ) }
    dend_21 { pt3dadd( -60.4366, 48.5002, -10.7676, 0.44 ) }
    dend_21 { pt3dadd( -60.7739, 48.6924, -10.8525, 0.44 ) }
    dend_21 { pt3dadd( -61.4242, 49.0701, -11.0087, 0.22 ) }
    dend_21 { pt3dadd( -61.8496, 49.3249, -11.0972, 0.22 ) }
    dend_21 { pt3dadd( -62.3546, 49.6534, -11.1907, 0.29 ) }
    dend_21 { pt3dadd( -62.6512, 49.8596, -11.234, 0.22 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -15.0224, 34.5989, 2.87015, 1.47 ) }
    dend_13 { pt3dadd( -14.5271, 35.5845, 2.69007, 1.47 ) }
    dend_13 { pt3dadd( -14.0813, 36.6594, 2.51725, 0.81 ) }
    dend_13 { pt3dadd( -13.8045, 37.4469, 2.40512, 0.81 ) }
    dend_13 { pt3dadd( -13.5147, 38.5498, 2.27194, 0.81 ) }
    dend_13 { pt3dadd( -13.219, 39.893, 2.12581, 0.81 ) }
    dend_13 { pt3dadd( -12.9454, 41.3762, 1.98001, 0.81 ) }
    dend_13 { pt3dadd( -12.7742, 42.857, 1.85312, 1.03 ) }
    dend_13 { pt3dadd( -12.6701, 44.1896, 1.75202, 1.03 ) }
    dend_13 { pt3dadd( -12.5494, 46.2294, 1.59922, 1.18 ) }
    dend_13 { pt3dadd( -12.4805, 47.4934, 1.51224, 1.18 ) }
    dend_13 { pt3dadd( -12.4709, 49.6902, 1.37103, 1.18 ) }
    dend_13 { pt3dadd( -12.5215, 51.2527, 1.27417, 1.4 ) }
    dend_13 { pt3dadd( -12.5466, 52.3598, 1.20035, 1.4 ) }
    dend_13 { pt3dadd( -12.5725, 53.1475, 1.14483, 1.4 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 81/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -15.0224, 34.5989, 2.87015, 0.96 ) }
    dend_12 { pt3dadd( -17.3614, 35.8153, 1.68487, 0.96 ) }
    dend_12 { pt3dadd( -18.2044, 36.2746, 1.28502, 0.96 ) }
    dend_12 { pt3dadd( -19.3732, 36.9227, 0.733041, 0.96 ) }
    dend_12 { pt3dadd( -20.5862, 37.6202, 0.147239, 0.81 ) }
    dend_12 { pt3dadd( -21.6304, 38.2416, -0.353168, 0.81 ) }
    dend_12 { pt3dadd( -23.0737, 39.1196, -1.0238, 1.03 ) }
    dend_12 { pt3dadd( -24.0491, 39.7617, -1.47128, 1.03 ) }
    dend_12 { pt3dadd( -24.9508, 40.4592, -1.87713, 1.03 ) }
    dend_12 { pt3dadd( -26.0658, 41.4542, -2.37003, 0.81 ) }
    dend_12 { pt3dadd( -26.8807, 42.2141, -2.72584, 0.81 ) }
    dend_12 { pt3dadd( -27.7771, 43.0746, -3.09994, 0.81 ) }
    dend_12 { pt3dadd( -28.8289, 44.1501, -3.53601, 0.52 ) }
    dend_12 { pt3dadd( -29.7944, 45.2405, -3.91575, 0.52 ) }
    dend_12 { pt3dadd( -30.3394, 45.9057, -4.10103, 0.52 ) }
    dend_12 { pt3dadd( -31.1212, 46.9271, -4.33382, 0.52 ) }
    dend_12 { pt3dadd( -32.0919, 48.2451, -4.60489, 0.52 ) }
    dend_12 { pt3dadd( -32.6021, 48.9662, -4.73327, 0.52 ) }
    dend_12 { pt3dadd( -33.121, 49.714, -4.83825, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -33.732, 50.6063, -4.93338, 0.66 ) }
    dend_12 { pt3dadd( -34.2978, 51.4915, -4.9976, 0.88 ) }
    dend_12 { pt3dadd( -34.8453, 52.4415, -5.03967, 0.88 ) }
    dend_12 { pt3dadd( -35.4509, 53.5593, -5.08207, 0.59 ) }
    dend_12 { pt3dadd( -36.0636, 54.6694, -5.13992, 0.88 ) }
    dend_12 { pt3dadd( -36.505, 55.4687, -5.19224, 0.88 ) }
    dend_12 { pt3dadd( -36.863, 56.1826, -5.2402, 0.96 ) }
    dend_12 { pt3dadd( -37.1763, 56.8367, -5.29442, 0.96 ) }
    dend_12 { pt3dadd( -37.4596, 57.4087, -5.35637, 0.96 ) }
    dend_12 { pt3dadd( -37.9716, 58.3432, -5.49045, 0.74 ) }
    dend_12 { pt3dadd( -38.7904, 59.7177, -5.73326, 1.25 ) }
    dend_12 { pt3dadd( -39.3619, 60.632, -5.91441, 1.25 ) }
    dend_12 { pt3dadd( -40.014, 61.6521, -6.12393, 0.29 ) }
    dend_12 { pt3dadd( -40.4485, 62.3307, -6.2554, 0.29 ) }
    dend_12 { pt3dadd( -40.8889, 63.0188, -6.37409, 0.66 ) }
    dend_12 { pt3dadd( -41.2878, 63.6406, -6.46211, 0.81 ) }
    dend_12 { pt3dadd( -41.6224, 64.1676, -6.51624, 0.81 ) }
    dend_12 { pt3dadd( -42.1783, 65.1042, -6.56103, 0.37 ) }
    dend_12 { pt3dadd( -42.6921, 66.1446, -6.61953, 0.37 ) }
    dend_12 { pt3dadd( -42.9834, 66.8271, -6.67444, 1.03 ) }
    dend_12 { pt3dadd( -43.2279, 67.4323, -6.73984, 1.25 ) }
    dend_12 { pt3dadd( -43.544, 68.1734, -6.84615, 1.25 ) }
    dend_12 { pt3dadd( -43.8214, 68.7614, -6.95784, 0.81 ) }
    dend_12 { pt3dadd( -44.4293, 69.927, -7.21983, 0.59 ) }
    dend_12 { pt3dadd( -44.7971, 70.5911, -7.38129, 0.44 ) }
    dend_12 { pt3dadd( -45.3139, 71.5271, -7.57593, 0.88 ) }
    dend_12 { pt3dadd( -45.7136, 72.248, -7.69708, 0.88 ) }
    dend_12 { pt3dadd( -46.405, 73.5078, -7.83348, 0.59 ) }
    dend_12 { pt3dadd( -46.851, 74.3472, -7.89966, 0.59 ) }
    dend_12 { pt3dadd( -47.5424, 75.7081, -7.9545, 0.44 ) }
    dend_12 { pt3dadd( -48.2926, 77.2775, -7.99213, 1.03 ) }
    dend_12 { pt3dadd( -48.8896, 78.6127, -7.9851, 1.55 ) }
    dend_12 { pt3dadd( -49.2242, 79.4418, -7.94651, 1.62 ) }
    dend_12 { pt3dadd( -49.6713, 80.656, -7.8527, 1.11 ) }
    dend_12 { pt3dadd( -50.1251, 81.9895, -7.72225, 0.59 ) }
    dend_12 { pt3dadd( -50.4211, 82.9107, -7.60485, 0.59 ) }
    dend_12 { pt3dadd( -50.8906, 84.4494, -7.37078, 0.59 ) }
    dend_12 { pt3dadd( -51.3602, 85.9816, -7.11222, 0.52 ) }
    dend_12 { pt3dadd( -51.6772, 86.9826, -6.92019, 0.52 ) }
    dend_12 { pt3dadd( -52.0909, 88.2273, -6.63387, 0.52 ) }
    dend_12 { pt3dadd( -52.5397, 89.5251, -6.3267, 0.52 ) }
    dend_12 { pt3dadd( -53.0641, 90.9453, -6.00645, 0.37 ) }
    dend_12 { pt3dadd( -53.857, 92.8316, -5.61874, 1.55 ) }
    dend_12 { pt3dadd( -54.1611, 93.4523, -5.50936, 1.92 ) }
    dend_12 { pt3dadd( -54.4791, 94.0158, -5.42999, 1.92 ) }
    dend_12 { pt3dadd( -54.7825, 94.4956, -5.38758, 1.92 ) }
    dend_12 { pt3dadd( -55.4409, 95.4024, -5.36026, 0.88 ) }
    dend_12 { pt3dadd( -56.3319, 96.5501, -5.37637, 0.44 ) }
    dend_12 { pt3dadd( -57.0069, 97.3992, -5.40878, 0.44 ) }
    dend_12 { pt3dadd( -57.7298, 98.3197, -5.46337, 0.44 ) }
    dend_12 { pt3dadd( -58.7324, 99.6313, -5.54282, 0.37 ) }
    dend_12 { pt3dadd( -59.2655, 100.346, -5.58534, 0.37 ) }
    dend_12 { pt3dadd( -60.3606, 101.879, -5.66672, 0.74 ) }
    dend_12 { pt3dadd( -60.7963, 102.51, -5.68954, 0.74 ) }
    dend_12 { pt3dadd( -61.3335, 103.321, -5.71145, 0.52 ) }
    dend_12 { pt3dadd( -62.0412, 104.444, -5.75693, 1.25 ) }
    dend_12 { pt3dadd( -62.5284, 105.234, -5.81967, 1.47 ) }
    dend_12 { pt3dadd( -62.8512, 105.771, -5.88008, 1.47 ) }
    dend_12 { pt3dadd( -63.2938, 106.435, -6.01125, 0.81 ) }
    dend_12 { pt3dadd( -63.8965, 107.266, -6.23121, 0.59 ) }
    dend_12 { pt3dadd( -64.5, 108.031, -6.50279, 0.88 ) }
    dend_12 { pt3dadd( -65.0091, 108.647, -6.75915, 1.18 ) }
    dend_12 { pt3dadd( -65.326, 109.026, -6.92893, 1.18 ) }
    dend_12 { pt3dadd( -66.106, 109.988, -7.31586, 0.96 ) }
    dend_12 { pt3dadd( -66.9396, 111.082, -7.66751, 0.52 ) }
    dend_12 { pt3dadd( -67.4256, 111.765, -7.79776, 0.37 ) }
    dend_12 { pt3dadd( -68.1308, 112.827, -7.86823, 0.37 ) }
    dend_12 { pt3dadd( -68.8056, 113.932, -7.83862, 0.37 ) }
    dend_12 { pt3dadd( -69.4232, 115.039, -7.73183, 0.37 ) }
    dend_12 { pt3dadd( -69.8471, 115.898, -7.58852, 0.81 ) }
    dend_12 { pt3dadd( -70.449, 117.278, -7.30811, 1.84 ) }
    dend_12 { pt3dadd( -70.688, 117.836, -7.19292, 1.92 ) }
    dend_12 { pt3dadd( -70.8692, 118.239, -7.12264, 1.92 ) }
    dend_12 { pt3dadd( -71.1942, 118.989, -7.01699, 1.62 ) }
    dend_12 { pt3dadd( -71.6334, 120.055, -6.9309, 0.88 ) }
    dend_12 { pt3dadd( -72.0711, 121.203, -6.8749, 0.29 ) }
    dend_12 { pt3dadd( -72.7365, 122.995, -6.82513, 0.29 ) }
    dend_12 { pt3dadd( -73.2436, 124.283, -6.7965, 0.29 ) }
    dend_12 { pt3dadd( -73.5815, 125.034, -6.77835, 0.29 ) }
    dend_12 { pt3dadd( -73.7645, 125.381, -6.77061, 0.29 ) }
    dend_12 { pt3dadd( -74.2443, 126.143, -6.75989, 0.66 ) }
    dend_12 { pt3dadd( -74.865, 126.978, -6.75784, 0.81 ) }
    dend_12 { pt3dadd( -75.3196, 127.527, -6.76221, 0.81 ) }
    dend_12 { pt3dadd( -76.1909, 128.565, -6.77705, 0.37 ) }
    dend_12 { pt3dadd( -76.8785, 129.362, -6.79249, 0.37 ) }
    dend_12 { pt3dadd( -77.5289, 130.125, -6.80634, 0.81 ) }
    dend_12 { pt3dadd( -77.9874, 130.668, -6.81109, 0.81 ) }
    dend_12 { pt3dadd( -78.6374, 131.449, -6.80662, 0.37 ) }
    dend_12 { pt3dadd( -79.2843, 132.176, -6.80276, 0.37 ) }
    dend_12 { pt3dadd( -79.9491, 132.852, -6.79995, 0.88 ) }
    dend_12 { pt3dadd( -80.7685, 133.645, -6.79756, 1.47 ) }
    dend_12 { pt3dadd( -81.3849, 134.238, -6.80012, 1.69 ) }
    dend_12 { pt3dadd( -81.8834, 134.723, -6.80792, 1.69 ) }
    dend_12 { pt3dadd( -83.241, 136.022, -6.84259, 0.37 ) }
    dend_12 { pt3dadd( -83.706, 136.475, -6.85606, 0.37 ) }
    dend_12 { pt3dadd( -84.5709, 137.381, -6.88756, 0.37 ) }
    dend_12 { pt3dadd( -85.5576, 138.506, -6.92917, 0.81 ) }
    dend_12 { pt3dadd( -86.1862, 139.331, -6.95515, 1.33 ) }
    dend_12 { pt3dadd( -86.5612, 139.881, -6.97397, 1.33 ) }
    dend_12 { pt3dadd( -87.059, 140.656, -7.0042, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -88.0637, 142.176, -7.08887, 0.52 ) }
    dend_12 { pt3dadd( -88.9038, 143.352, -7.18318, 0.52 ) }
    dend_12 { pt3dadd( -89.851, 144.656, -7.30531, 0.52 ) }
    dend_12 { pt3dadd( -90.3734, 145.374, -7.37846, 0.52 ) }
    dend_12 { pt3dadd( -91.0435, 146.306, -7.47901, 0.52 ) }
    dend_12 { pt3dadd( -91.7936, 147.351, -7.60325, 0.52 ) }
    dend_12 { pt3dadd( -93.0706, 149.111, -7.83088, 0.52 ) }
    dend_12 { pt3dadd( -93.5334, 149.747, -7.91517, 0.52 ) }
    dend_12 { pt3dadd( -94.6863, 151.302, -8.12249, 1.25 ) }
    dend_12 { pt3dadd( -95.0125, 151.742, -8.17807, 1.47 ) }
    dend_12 { pt3dadd( -95.4402, 152.315, -8.25785, 1.47 ) }
    dend_12 { pt3dadd( -96.0693, 153.11, -8.38733, 0.88 ) }
    dend_12 { pt3dadd( -96.8398, 153.992, -8.55749, 0.29 ) }
    dend_12 { pt3dadd( -97.1633, 154.319, -8.62929, 0.29 ) }
    dend_12 { pt3dadd( -97.8386, 154.939, -8.77342, 0.44 ) }
    dend_12 { pt3dadd( -98.3787, 155.413, -8.87724, 0.44 ) }
    dend_12 { pt3dadd( -98.8909, 155.845, -8.96307, 0.44 ) }
    dend_12 { pt3dadd( -99.1886, 156.111, -9.02382, 0.44 ) }
    dend_12 { pt3dadd( -99.6134, 156.506, -9.08655, 0.29 ) }
    dend_12 { pt3dadd( -100.161, 157.155, -9.11272, 0.29 ) }
    dend_12 { pt3dadd( -100.351, 157.403, -9.10004, 0.44 ) }
    dend_12 { pt3dadd( -100.585, 157.715, -9.06732, 0.44 ) }
    dend_12 { pt3dadd( -101.209, 158.518, -8.96519, 0.37 ) }
    dend_12 { pt3dadd( -102.057, 159.561, -8.82045, 0.44 ) }
    dend_12 { pt3dadd( -103.424, 161.226, -8.69082, 2.28 ) }
    dend_12 { pt3dadd( -103.966, 161.889, -8.6753, 2.5 ) }
    dend_12 { pt3dadd( -104.377, 162.419, -8.68981, 2.5 ) }
    dend_12 { pt3dadd( -105.034, 163.292, -8.75568, 1.92 ) }
    dend_12 { pt3dadd( -105.676, 164.18, -8.88562, 0.81 ) }
    dend_12 { pt3dadd( -106.469, 165.412, -9.20111, 0.52 ) }
    dend_12 { pt3dadd( -106.788, 165.98, -9.36966, 0.52 ) }
    dend_12 { pt3dadd( -107.443, 167.297, -9.77025, 0.88 ) }
    dend_12 { pt3dadd( -107.798, 168.112, -10.0074, 0.88 ) }
    dend_12 { pt3dadd( -108.181, 169.097, -10.2719, 0.66 ) }
    dend_12 { pt3dadd( -108.468, 169.908, -10.4738, 0.44 ) }
    dend_12 { pt3dadd( -108.855, 171.086, -10.7202, 0.29 ) }
    dend_12 { pt3dadd( -109.259, 172.447, -11.0077, 0.29 ) }
    dend_12 { pt3dadd( -109.659, 174.003, -11.3515, 0.29 ) }
    dend_12 { pt3dadd( -109.836, 174.776, -11.5303, 0.29 ) }
    dend_12 { pt3dadd( -110.134, 176.213, -11.9268, 0.52 ) }
    dend_12 { pt3dadd( -110.341, 177.202, -12.2492, 0.88 ) }
    dend_12 { pt3dadd( -110.515, 178.015, -12.5739, 0.88 ) }
    dend_12 { pt3dadd( -110.734, 178.91, -12.9886, 0.44 ) }
    dend_12 { pt3dadd( -111.22, 180.329, -13.7532, 1.11 ) }
    dend_12 { pt3dadd( -111.793, 181.556, -14.4967, 2.43 ) }
    dend_12 { pt3dadd( -112.31, 182.384, -15.0563, 2.43 ) }
    dend_12 { pt3dadd( -112.698, 182.862, -15.4147, 2.43 ) }
    dend_12 { pt3dadd( -113.282, 183.423, -15.8494, 1.69 ) }
    dend_12 { pt3dadd( -114.156, 184.128, -16.4182, 0.59 ) }
    dend_12 { pt3dadd( -115.163, 184.795, -16.9672, 0.74 ) }
    dend_12 { pt3dadd( -115.515, 184.997, -17.1178, 0.74 ) }
    dend_12 { pt3dadd( -116.11, 185.317, -17.3583, 0.52 ) }
    dend_12 { pt3dadd( -117.037, 185.812, -17.6939, 0.52 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 26.2343, 6.28408, 6.94687, 1.99 ) }
    dend_2 { pt3dadd( 27.6449, 6.38006, 6.97415, 1.99 ) }
    dend_2 { pt3dadd( 28.4739, 6.63349, 7.05133, 1.99 ) }
    dend_2 { pt3dadd( 29.0599, 7.02545, 7.14023, 1.69 ) }
    dend_2 { pt3dadd( 29.8837, 7.57646, 7.26521, 1.69 ) }
    dend_2 { pt3dadd( 30.2307, 7.80855, 7.31785, 1.69 ) }
    dend_2 { pt3dadd( 30.8072, 8.19415, 7.40531, 1.69 ) }
    dend_2 { pt3dadd( 31.179, 8.59208, 7.44458, 1.92 ) }
    dend_2 { pt3dadd( 31.7281, 9.42671, 7.57572, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 26.2343, 6.28408, 6.94687, 0.74 ) }
    dend_1 { pt3dadd( 27.4928, 9.47567, 7.8497, 0.74 ) }
    dend_1 { pt3dadd( 27.9571, 10.8583, 8.21715, 0.74 ) }
    dend_1 { pt3dadd( 28.5913, 13.0281, 8.75924, 0.74 ) }
    dend_1 { pt3dadd( 29.0803, 14.8958, 9.20673, 0.44 ) }
    dend_1 { pt3dadd( 29.4509, 16.4764, 9.59041, 0.44 ) }
    dend_1 { pt3dadd( 29.9412, 18.8177, 10.1623, 0.66 ) }
    dend_1 { pt3dadd( 30.1172, 19.9456, 10.4166, 0.88 ) }
    dend_1 { pt3dadd( 30.3381, 21.5786, 10.8287, 0.88 ) }
    dend_1 { pt3dadd( 30.5158, 23.078, 11.2703, 1.03 ) }
    dend_1 { pt3dadd( 30.7963, 25.2221, 11.964, 0.96 ) }
    dend_1 { pt3dadd( 31.022, 26.7399, 12.4826, 0.52 ) }
    dend_1 { pt3dadd( 31.2452, 27.9602, 12.9122, 0.52 ) }
    dend_1 { pt3dadd( 31.4937, 29.5801, 13.491, 0.88 ) }
    dend_1 { pt3dadd( 31.6972, 30.8997, 13.9689, 0.66 ) }
    dend_1 { pt3dadd( 31.932, 32.3753, 14.5181, 0.88 ) }
    dend_1 { pt3dadd( 32.1391, 33.6915, 15.0178, 0.88 ) }
    dend_1 { pt3dadd( 32.4221, 35.6316, 15.7793, 0.29 ) }
    dend_1 { pt3dadd( 32.6098, 37.1985, 16.3876, 0.29 ) }
    dend_1 { pt3dadd( 32.7243, 38.2798, 16.7883, 0.29 ) }
    dend_1 { pt3dadd( 32.9172, 40.1213, 17.4828, 0.44 ) }
    dend_1 { pt3dadd( 33.0606, 41.2177, 17.9277, 0.74 ) }
    dend_1 { pt3dadd( 33.2876, 42.5374, 18.4774, 0.88 ) }
    dend_1 { pt3dadd( 33.4588, 43.3354, 18.8235, 1.11 ) }
    dend_1 { pt3dadd( 33.6138, 43.9675, 19.0939, 1.11 ) }
    dend_1 { pt3dadd( 33.9019, 45.408, 19.6612, 0.29 ) }
    dend_1 { pt3dadd( 34.2138, 46.8386, 20.1505, 0.29 ) }
    dend_1 { pt3dadd( 34.5769, 48.1979, 20.5752, 0.29 ) }
    dend_1 { pt3dadd( 37.9604, 62.4623, 28.6779, 0.29 ) }
    dend_1 { pt3dadd( 43.4737, 76.6582, 35.7243, 0.29 ) }
    dend_1 { pt3dadd( 47.1232, 91.9438, 41.3398, 0.29 ) }
    dend_1 { pt3dadd( 49.2021, 107.755, 46.0989, 0.29 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 94/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.95552, 38.3192, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 9.5476, 53.0936, 1.13455, 0.59 ) }
    axon_1 { pt3dadd( 12.1397, 67.8679, 1.13455, 0.59 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 97/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -85.4621, -57.1224, 3.08755, 0.44 ) }
    dend_48 { pt3dadd( -87.1669, -57.488, 3.37009, 0.44 ) }
    dend_48 { pt3dadd( -88.0313, -57.7257, 3.53592, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( -88.9372, -58.0255, 3.70933, 0.29 ) }
    dend_48 { pt3dadd( -89.4663, -58.2153, 3.80864, 0.29 ) }
    dend_48 { pt3dadd( -90.5831, -58.6239, 3.99612, 0.37 ) }
    dend_48 { pt3dadd( -91.093, -58.7975, 4.07733, 0.37 ) }
    dend_48 { pt3dadd( -91.8518, -59.0788, 4.14364, 0.29 ) }
    dend_48 { pt3dadd( -92.5858, -59.3826, 4.24515, 0.29 ) }
    dend_48 { pt3dadd( -93.1522, -59.6454, 4.35134, 0.29 ) }
    dend_48 { pt3dadd( -93.5461, -59.8389, 4.43109, 0.29 ) }
    dend_48 { pt3dadd( -94.1583, -60.1332, 4.54673, 0.29 ) }
    dend_48 { pt3dadd( -94.7557, -60.3894, 4.62686, 0.44 ) }
    dend_48 { pt3dadd( -95.5753, -60.7032, 4.7093, 0.44 ) }
    dend_48 { pt3dadd( -96.0166, -60.8698, 4.775, 0.44 ) }
    dend_48 { pt3dadd( -96.6741, -61.1312, 4.92087, 0.66 ) }
    dend_48 { pt3dadd( -97.3504, -61.4321, 5.1427, 0.66 ) }
    dend_48 { pt3dadd( -97.7147, -61.622, 5.32189, 0.52 ) }
    dend_48 { pt3dadd( -98.3966, -62.0414, 5.8509, 0.44 ) }
    dend_48 { pt3dadd( -98.7256, -62.3124, 6.28543, 0.66 ) }
    dend_48 { pt3dadd( -98.975, -62.5806, 6.77889, 0.66 ) }
    dend_48 { pt3dadd( -99.2109, -62.8841, 7.36843, 0.52 ) }
    dend_48 { pt3dadd( -99.5208, -63.2814, 8.15858, 0.52 ) }
    dend_48 { pt3dadd( -99.7758, -63.6461, 8.8825, 0.44 ) }
    dend_48 { pt3dadd( -99.9793, -63.9662, 9.52079, 0.37 ) }
    dend_48 { pt3dadd( -100.33, -64.4697, 10.4978, 0.37 ) }
    dend_48 { pt3dadd( -100.651, -64.8631, 11.2639, 0.29 ) }
    dend_48 { pt3dadd( -101.062, -65.2449, 12.0442, 0.29 ) }
    dend_48 { pt3dadd( -107.305, -69.5887, 14.2127, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 26/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -85.4621, -57.1224, 3.08755, 1.11 ) }
    dend_45 { pt3dadd( -86.1507, -57.3732, 3.15947, 1.11 ) }
    dend_45 { pt3dadd( -86.6848, -57.6163, 3.21834, 1.11 ) }
    dend_45 { pt3dadd( -87.7686, -58.1433, 3.3533, 0.88 ) }
    dend_45 { pt3dadd( -88.5944, -58.5232, 3.44799, 0.88 ) }
    dend_45 { pt3dadd( -89.8495, -59.055, 3.57378, 0.88 ) }
    dend_45 { pt3dadd( -91.1563, -59.5613, 3.67721, 0.88 ) }
    dend_45 { pt3dadd( -91.872, -59.8353, 3.73079, 0.88 ) }
    dend_45 { pt3dadd( -92.5341, -60.0881, 3.76173, 0.81 ) }
    dend_45 { pt3dadd( -93.2744, -60.3672, 3.77422, 0.81 ) }
    dend_45 { pt3dadd( -93.8085, -60.5499, 3.77309, 0.81 ) }
    dend_45 { pt3dadd( -94.7578, -60.8427, 3.76232, 0.96 ) }
    dend_45 { pt3dadd( -95.253, -61.0115, 3.7576, 0.96 ) }
    dend_45 { pt3dadd( -95.7567, -61.237, 3.75653, 0.96 ) }
    dend_45 { pt3dadd( -96.2311, -61.5284, 3.76186, 0.96 ) }
    dend_45 { pt3dadd( -96.8481, -61.9845, 3.78278, 0.96 ) }
    dend_45 { pt3dadd( -97.0526, -62.1452, 3.78744, 0.96 ) }
    dend_45 { pt3dadd( -97.6753, -62.6314, 3.78102, 0.88 ) }
    dend_45 { pt3dadd( -98.4516, -63.1784, 3.72975, 0.88 ) }
    dend_45 { pt3dadd( -99.0061, -63.5578, 3.68123, 1.11 ) }
    dend_45 { pt3dadd( -99.5652, -63.9426, 3.63014, 1.11 ) }
    dend_45 { pt3dadd( -100.209, -64.407, 3.5637, 0.96 ) }
    dend_45 { pt3dadd( -100.757, -64.8275, 3.53313, 0.96 ) }
    dend_45 { pt3dadd( -101.515, -65.4508, 3.53378, 0.88 ) }
    dend_45 { pt3dadd( -102.383, -66.234, 3.54727, 0.88 ) }
    dend_45 { pt3dadd( -103.047, -66.8757, 3.53496, 0.96 ) }
    dend_45 { pt3dadd( -103.573, -67.4043, 3.50288, 0.96 ) }
    dend_45 { pt3dadd( -104.318, -68.1428, 3.42613, 0.88 ) }
    dend_45 { pt3dadd( -104.668, -68.4805, 3.36586, 0.74 ) }
    dend_45 { pt3dadd( -105.447, -69.2038, 3.18371, 0.96 ) }
    dend_45 { pt3dadd( -106.135, -69.7915, 2.99629, 1.11 ) }
    dend_45 { pt3dadd( -106.696, -70.2463, 2.84591, 1.25 ) }
    dend_45 { pt3dadd( -107.187, -70.6378, 2.72996, 1.25 ) }
    dend_45 { pt3dadd( -107.982, -71.2761, 2.56601, 1.03 ) }
    dend_45 { pt3dadd( -109.067, -72.1683, 2.42161, 0.88 ) }
    dend_45 { pt3dadd( -109.862, -72.8593, 2.37488, 0.88 ) }
    dend_45 { pt3dadd( -110.667, -73.5965, 2.35827, 0.88 ) }
    dend_45 { pt3dadd( -111.339, -74.2196, 2.34547, 0.88 ) }
    dend_45 { pt3dadd( -111.987, -74.798, 2.32613, 1.33 ) }
    dend_45 { pt3dadd( -112.498, -75.2106, 2.30407, 1.33 ) }
    dend_45 { pt3dadd( -113.107, -75.6721, 2.26395, 1.18 ) }
    dend_45 { pt3dadd( -113.534, -75.9806, 2.22605, 0.96 ) }
    dend_45 { pt3dadd( -114.305, -76.4973, 2.1531, 0.96 ) }
    dend_45 { pt3dadd( -115.018, -76.9215, 2.08188, 0.96 ) }
    dend_45 { pt3dadd( -115.984, -77.4117, 1.9937, 0.88 ) }
    dend_45 { pt3dadd( -116.828, -77.7424, 1.92778, 0.81 ) }
    dend_45 { pt3dadd( -117.308, -77.8761, 1.90187, 0.81 ) }
    dend_45 { pt3dadd( -117.87, -78.0061, 1.88083, 0.74 ) }
    dend_45 { pt3dadd( -118.288, -78.1134, 1.87673, 0.74 ) }
    dend_45 { pt3dadd( -118.823, -78.2916, 1.89093, 0.74 ) }
    dend_45 { pt3dadd( -119.589, -78.6398, 1.9446, 0.74 ) }
    dend_45 { pt3dadd( -120.015, -78.9193, 1.9959, 1.11 ) }
    dend_45 { pt3dadd( -120.663, -79.5219, 2.1123, 1.11 ) }
    dend_45 { pt3dadd( -121.453, -80.4309, 2.28351, 0.88 ) }
    dend_45 { pt3dadd( -121.964, -81.109, 2.41306, 0.88 ) }
    dend_45 { pt3dadd( -122.354, -81.6799, 2.52178, 0.88 ) }
    dend_45 { pt3dadd( -122.889, -82.4781, 2.66892, 0.81 ) }
    dend_45 { pt3dadd( -123.621, -83.5207, 2.81844, 0.81 ) }
    dend_45 { pt3dadd( -123.994, -84.0152, 2.86822, 1.18 ) }
    dend_45 { pt3dadd( -124.402, -84.552, 2.8966, 1.33 ) }
    dend_45 { pt3dadd( -124.842, -85.1013, 2.90125, 1.33 ) }
    dend_45 { pt3dadd( -125.561, -85.9355, 2.87358, 0.88 ) }
    dend_45 { pt3dadd( -126.272, -86.7081, 2.80509, 0.81 ) }
    dend_45 { pt3dadd( -127.016, -87.4642, 2.71305, 0.81 ) }
    dend_45 { pt3dadd( -127.899, -88.328, 2.57825, 0.81 ) }
    dend_45 { pt3dadd( -128.563, -88.9645, 2.44858, 0.81 ) }
    dend_45 { pt3dadd( -129.188, -89.5514, 2.31532, 1.11 ) }
    dend_45 { pt3dadd( -129.566, -89.9054, 2.22817, 1.25 ) }
    dend_45 { pt3dadd( -130.019, -90.3268, 2.12405, 2.14 ) }
    dend_45 { pt3dadd( -130.453, -90.7584, 2.0154, 2.5 ) }
    dend_45 { pt3dadd( -131.047, -91.3421, 1.86399, 1.92 ) }
    dend_45 { pt3dadd( -131.894, -92.2998, 1.63806, 1.11 ) }
    dend_45 { pt3dadd( -132.254, -92.7626, 1.54078, 0.96 ) }
    dend_45 { pt3dadd( -132.745, -93.4507, 1.41478, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_45 { pt3dadd( -133.367, -94.3842, 1.23092, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -9.24936, -136.437, -1.71643, 0.37 ) }
    dend_41 { pt3dadd( -8.11249, -138.546, -1.26705, 0.37 ) }
    dend_41 { pt3dadd( -7.80754, -139.09, -1.18097, 0.52 ) }
    dend_41 { pt3dadd( -7.43758, -139.755, -1.10494, 0.66 ) }
    dend_41 { pt3dadd( -7.02655, -140.513, -1.03441, 0.37 ) }
    dend_41 { pt3dadd( -6.72191, -141.073, -0.991136, 0.44 ) }
    dend_41 { pt3dadd( -6.36916, -141.724, -0.951269, 0.44 ) }
    dend_41 { pt3dadd( -5.96914, -142.498, -0.984088, 0.29 ) }
    dend_41 { pt3dadd( -5.56643, -143.224, -1.0217, 0.29 ) }
    dend_41 { pt3dadd( -5.17841, -143.832, -1.07165, 0.59 ) }
    dend_41 { pt3dadd( -4.79656, -144.352, -1.14628, 0.59 ) }
    dend_41 { pt3dadd( -4.34091, -144.892, -1.26139, 0.37 ) }
    dend_41 { pt3dadd( -3.85901, -145.398, -1.40923, 0.66 ) }
    dend_41 { pt3dadd( -3.39566, -145.822, -1.56943, 0.52 ) }
    dend_41 { pt3dadd( -2.6996, -146.384, -1.83883, 0.37 ) }
    dend_41 { pt3dadd( -2.17369, -146.777, -2.06295, 0.37 ) }
    dend_41 { pt3dadd( -1.39092, -147.355, -2.42361, 0.37 ) }
    dend_41 { pt3dadd( -0.636722, -147.909, -2.7946, 1.03 ) }
    dend_41 { pt3dadd( -0.0940385, -148.315, -3.07902, 1.18 ) }
    dend_41 { pt3dadd( 0.410862, -148.705, -3.36448, 0.81 ) }
    dend_41 { pt3dadd( 0.804156, -149.02, -3.60168, 0.52 ) }
    dend_41 { pt3dadd( 1.5397, -149.614, -4.0467, 0.52 ) }
    dend_41 { pt3dadd( 2.23693, -150.201, -4.47259, 0.59 ) }
    dend_41 { pt3dadd( 2.83469, -150.758, -4.86918, 0.59 ) }
    dend_41 { pt3dadd( 3.31392, -151.261, -5.20973, 0.81 ) }
    dend_41 { pt3dadd( 3.69961, -151.701, -5.49529, 0.81 ) }
    dend_41 { pt3dadd( 4.11845, -152.212, -5.81932, 0.66 ) }
    dend_41 { pt3dadd( 4.41618, -152.603, -6.06175, 0.29 ) }
    dend_41 { pt3dadd( 5.08975, -153.557, -6.63182, 0.52 ) }
    dend_41 { pt3dadd( 5.66044, -154.389, -7.12315, 1.03 ) }
    dend_41 { pt3dadd( 5.86254, -154.694, -7.30372, 1.47 ) }
    dend_41 { pt3dadd( 6.23157, -155.225, -7.63475, 1.62 ) }
    dend_41 { pt3dadd( 6.73015, -155.865, -8.07597, 1.03 ) }
    dend_41 { pt3dadd( 7.22372, -156.415, -8.48358, 0.29 ) }
    dend_41 { pt3dadd( 7.71414, -156.89, -8.8576, 0.29 ) }
    dend_41 { pt3dadd( 8.28987, -157.398, -9.29254, 0.37 ) }
    dend_41 { pt3dadd( 8.88995, -157.92, -9.74473, 0.66 ) }
    dend_41 { pt3dadd( 9.20167, -158.186, -9.9736, 0.81 ) }
    dend_41 { pt3dadd( 9.70251, -158.593, -10.3215, 0.96 ) }
    dend_41 { pt3dadd( 10.086, -158.895, -10.5748, 0.44 ) }
    dend_41 { pt3dadd( 10.3957, -159.131, -10.7662, 0.29 ) }
    dend_41 { pt3dadd( 11.008, -159.578, -11.1133, 0.29 ) }
    dend_41 { pt3dadd( 11.4731, -159.955, -11.3692, 0.59 ) }
    dend_41 { pt3dadd( 11.9213, -160.365, -11.609, 0.74 ) }
    dend_41 { pt3dadd( 12.2809, -160.732, -11.7982, 0.74 ) }
    dend_41 { pt3dadd( 12.7625, -161.281, -12.0515, 0.74 ) }
    dend_41 { pt3dadd( 13.1445, -161.764, -12.2592, 0.44 ) }
    dend_41 { pt3dadd( 13.6476, -162.459, -12.5412, 0.29 ) }
    dend_41 { pt3dadd( 13.9412, -162.895, -12.7142, 0.66 ) }
    dend_41 { pt3dadd( 14.3014, -163.452, -12.9384, 0.88 ) }
    dend_41 { pt3dadd( 14.6354, -163.966, -13.1518, 0.96 ) }
    dend_41 { pt3dadd( 15.1198, -164.685, -13.4518, 0.66 ) }
    dend_41 { pt3dadd( 15.6223, -165.422, -13.7556, 0.37 ) }
    dend_41 { pt3dadd( 16.2215, -166.252, -14.1078, 0.74 ) }
    dend_41 { pt3dadd( 16.5568, -166.7, -14.3019, 0.81 ) }
    dend_41 { pt3dadd( 16.9458, -167.225, -14.5227, 0.37 ) }
    dend_41 { pt3dadd( 17.467, -167.96, -14.8144, 0.37 ) }
    dend_41 { pt3dadd( 17.9149, -168.62, -15.0635, 0.37 ) }
    dend_41 { pt3dadd( 18.2856, -169.188, -15.272, 0.37 ) }
    dend_41 { pt3dadd( 18.5813, -169.663, -15.4428, 0.52 ) }
    dend_41 { pt3dadd( 18.9302, -170.225, -15.6538, 0.52 ) }
    dend_41 { pt3dadd( 19.2856, -170.796, -15.8818, 0.37 ) }
    dend_41 { pt3dadd( 19.6442, -171.397, -16.1296, 0.37 ) }
    dend_41 { pt3dadd( 20.0647, -172.082, -16.4195, 0.81 ) }
    dend_41 { pt3dadd( 20.3207, -172.456, -16.5928, 0.88 ) }
    dend_41 { pt3dadd( 20.7599, -173.025, -16.8858, 0.59 ) }
    dend_41 { pt3dadd( 21.1431, -173.478, -17.1366, 0.37 ) }
    dend_41 { pt3dadd( 21.5368, -173.905, -17.3911, 0.37 ) }
    dend_41 { pt3dadd( 22.044, -174.418, -17.7106, 0.44 ) }
    dend_41 { pt3dadd( 23.0915, -175.395, -18.3554, 0.44 ) }
    dend_41 { pt3dadd( 23.7814, -175.962, -18.7713, 1.18 ) }
    dend_41 { pt3dadd( 24.3042, -176.355, -19.0797, 1.47 ) }
    dend_41 { pt3dadd( 24.8799, -176.765, -19.4278, 1.47 ) }
    dend_41 { pt3dadd( 25.7218, -177.362, -19.9534, 1.18 ) }
    dend_41 { pt3dadd( 26.3668, -177.857, -20.3803, 0.29 ) }
    dend_41 { pt3dadd( 26.7613, -178.195, -20.6609, 0.29 ) }
    dend_41 { pt3dadd( 27.0534, -178.471, -20.891, 0.29 ) }
    dend_41 { pt3dadd( 27.5515, -179.014, -21.3515, 0.59 ) }
    dend_41 { pt3dadd( 28.0103, -179.607, -21.8429, 0.66 ) }
    dend_41 { pt3dadd( 28.2472, -179.98, -22.1436, 0.74 ) }
    dend_41 { pt3dadd( 28.481, -180.417, -22.4706, 0.59 ) }
    dend_41 { pt3dadd( 28.7314, -180.958, -22.8424, 0.44 ) }
    dend_41 { pt3dadd( 29.0228, -181.651, -23.3008, 0.29 ) }
    dend_41 { pt3dadd( 29.1873, -182.122, -23.5798, 0.37 ) }
    dend_41 { pt3dadd( 29.417, -182.914, -24.009, 0.52 ) }
    dend_41 { pt3dadd( 29.5723, -183.524, -24.2926, 1.03 ) }
    dend_41 { pt3dadd( 29.7165, -184.163, -24.5774, 1.55 ) }
    dend_41 { pt3dadd( 29.8454, -184.716, -24.8163, 1.55 ) }
    dend_41 { pt3dadd( 30.1651, -186.113, -25.4106, 0.44 ) }
    dend_41 { pt3dadd( 30.3851, -187.023, -25.8172, 0.37 ) }
    dend_41 { pt3dadd( 30.9529, -189.049, -26.8387, 0.29 ) }
    dend_41 { pt3dadd( 31.1038, -189.477, -27.0863, 0.29 ) }
    dend_41 { pt3dadd( 31.6079, -190.572, -27.8164, 1.47 ) }
    dend_41 { pt3dadd( 31.8243, -190.925, -28.0992, 1.92 ) }
    dend_41 { pt3dadd( 32.2766, -191.483, -28.6614, 2.06 ) }
    dend_41 { pt3dadd( 32.9588, -192.158, -29.5424, 0.81 ) }
    dend_41 { pt3dadd( 33.8311, -192.856, -30.7495, 0.29 ) }
    dend_41 { pt3dadd( 34.3717, -193.263, -31.5351, 0.29 ) }
    dend_41 { pt3dadd( 35.0846, -193.776, -32.5548, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( 35.4454, -194.033, -33.0346, 0.52 ) }
    dend_41 { pt3dadd( 36.3337, -194.673, -34.1082, 0.29 ) }
    dend_41 { pt3dadd( 37.0214, -195.176, -34.828, 0.88 ) }
    dend_41 { pt3dadd( 37.45, -195.489, -35.1862, 0.74 ) }
    dend_41 { pt3dadd( 38.5456, -196.31, -35.8389, 0.29 ) }
    dend_41 { pt3dadd( 39.3705, -196.92, -36.1695, 0.29 ) }
    dend_41 { pt3dadd( 40.2117, -197.536, -36.4097, 0.59 ) }
    dend_41 { pt3dadd( 40.7738, -197.947, -36.521, 0.66 ) }
    dend_41 { pt3dadd( 41.8526, -198.749, -36.6974, 0.29 ) }
    dend_41 { pt3dadd( 42.9281, -199.593, -36.8787, 0.29 ) }
    dend_41 { pt3dadd( 43.615, -200.202, -37.0332, 0.29 ) }
    dend_41 { pt3dadd( 44.2301, -200.836, -37.2055, 1.03 ) }
    dend_41 { pt3dadd( 44.6634, -201.334, -37.3592, 1.47 ) }
    dend_41 { pt3dadd( 45.041, -201.816, -37.5309, 1.18 ) }
    dend_41 { pt3dadd( 45.7058, -202.755, -37.9062, 0.22 ) }
    dend_41 { pt3dadd( 46.2874, -203.623, -38.2708, 0.22 ) }
    dend_41 { pt3dadd( 47.0165, -204.744, -38.7673, 0.22 ) }
    dend_41 { pt3dadd( 47.3274, -205.204, -38.9805, 0.52 ) }
    dend_41 { pt3dadd( 47.8636, -205.972, -39.3508, 0.29 ) }
    dend_41 { pt3dadd( 48.3691, -206.681, -39.7089, 0.29 ) }
    dend_41 { pt3dadd( 48.6863, -207.107, -39.946, 0.88 ) }
    dend_41 { pt3dadd( 49.1301, -207.679, -40.2516, 0.88 ) }
    dend_41 { pt3dadd( 49.7922, -208.546, -40.6846, 0.29 ) }
    dend_41 { pt3dadd( 50.1006, -208.947, -40.8652, 0.29 ) }
    dend_41 { pt3dadd( 50.6633, -209.641, -41.1276, 0.96 ) }
    dend_41 { pt3dadd( 51.0771, -210.099, -41.2638, 1.4 ) }
    dend_41 { pt3dadd( 51.5297, -210.563, -41.3717, 1.77 ) }
    dend_41 { pt3dadd( 51.8204, -210.835, -41.4216, 1.77 ) }
    dend_41 { pt3dadd( 52.9693, -211.84, -41.5951, 0.22 ) }
    dend_41 { pt3dadd( 54.1605, -212.801, -41.7395, 0.22 ) }
    dend_41 { pt3dadd( 55.0969, -213.492, -41.857, 0.88 ) }
    dend_41 { pt3dadd( 55.5159, -213.789, -41.9204, 1.33 ) }
    dend_41 { pt3dadd( 55.9382, -214.082, -42.0068, 1.33 ) }
    dend_41 { pt3dadd( 56.8924, -214.729, -42.2315, 0.22 ) }
    dend_41 { pt3dadd( 58.0574, -215.505, -42.557, 0.22 ) }
    dend_41 { pt3dadd( 59.2705, -216.34, -42.9678, 0.22 ) }
    dend_41 { pt3dadd( 60.3496, -217.137, -43.3999, 0.22 ) }
    dend_41 { pt3dadd( 60.969, -217.624, -43.6737, 0.74 ) }
    dend_41 { pt3dadd( 61.298, -217.905, -43.8335, 0.88 ) }
    dend_41 { pt3dadd( 61.6745, -218.264, -44.0408, 0.52 ) }
    dend_41 { pt3dadd( 62.3141, -218.993, -44.4554, 0.22 ) }
    dend_41 { pt3dadd( 62.6285, -219.411, -44.6777, 0.88 ) }
    dend_41 { pt3dadd( 62.973, -219.907, -44.9178, 1.33 ) }
    dend_41 { pt3dadd( 63.2476, -220.32, -45.1005, 1.33 ) }
    dend_41 { pt3dadd( 63.8907, -221.335, -45.5074, 0.29 ) }
    dend_41 { pt3dadd( 64.6471, -222.581, -45.9462, 0.29 ) }
    dend_41 { pt3dadd( 65.0192, -223.202, -46.1348, 0.44 ) }
    dend_41 { pt3dadd( 65.3491, -223.748, -46.2776, 0.59 ) }
    dend_41 { pt3dadd( 65.6555, -224.249, -46.3905, 0.59 ) }
    dend_41 { pt3dadd( 66.1543, -225.051, -46.5458, 0.22 ) }
    dend_41 { pt3dadd( 66.6656, -225.876, -46.6874, 0.22 ) }
    dend_41 { pt3dadd( 66.9831, -226.379, -46.7754, 0.74 ) }
    dend_41 { pt3dadd( 67.1728, -226.678, -46.8346, 0.88 ) }
    dend_41 { pt3dadd( 67.4204, -227.06, -46.93, 0.88 ) }
    dend_41 { pt3dadd( 67.9147, -227.806, -47.1256, 0.22 ) }
    dend_41 { pt3dadd( 68.7826, -229.068, -47.4967, 0.22 ) }
    dend_41 { pt3dadd( 69.1642, -229.62, -47.682, 0.52 ) }
    dend_41 { pt3dadd( 69.4078, -229.98, -47.8148, 0.66 ) }
    dend_41 { pt3dadd( 69.7848, -230.54, -48.0351, 0.44 ) }
    dend_41 { pt3dadd( 74.8826, -236.116, -52.5074, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.24936, -136.437, -1.71643, 2.28 ) }
    dend_34 { pt3dadd( -9.68285, -137.559, -1.37724, 2.28 ) }
    dend_34 { pt3dadd( -10.0851, -138.52, -1.01885, 1.62 ) }
    dend_34 { pt3dadd( -10.607, -139.664, -0.568831, 1.33 ) }
    dend_34 { pt3dadd( -11.1425, -140.74, -0.146043, 0.88 ) }
    dend_34 { pt3dadd( -11.4105, -141.236, 0.0475585, 0.88 ) }
    dend_34 { pt3dadd( -11.8447, -141.965, 0.335406, 1.03 ) }
    dend_34 { pt3dadd( -12.732, -143.27, 0.8665, 1.03 ) }
    dend_34 { pt3dadd( -13.5157, -144.27, 1.28736, 0.96 ) }
    dend_34 { pt3dadd( -14.1539, -144.992, 1.58175, 0.88 ) }
    dend_34 { pt3dadd( -14.7123, -145.608, 1.79302, 1.11 ) }
    dend_34 { pt3dadd( -15.3379, -146.348, 1.96508, 1.33 ) }
    dend_34 { pt3dadd( -15.8404, -147.049, 2.03985, 1.55 ) }
    dend_34 { pt3dadd( -16.2537, -147.761, 2.033, 1.25 ) }
    dend_34 { pt3dadd( -16.5618, -148.476, 1.96209, 0.96 ) }
    dend_34 { pt3dadd( -16.8357, -149.455, 1.80254, 0.88 ) }
    dend_34 { pt3dadd( -17.0529, -150.668, 1.54853, 0.88 ) }
    dend_34 { pt3dadd( -17.1993, -151.962, 1.25245, 0.88 ) }
    dend_34 { pt3dadd( -17.2853, -153.099, 0.987183, 1.03 ) }
    dend_34 { pt3dadd( -17.3339, -154.162, 0.742572, 1.03 ) }
    dend_34 { pt3dadd( -17.3693, -155.413, 0.475784, 1.03 ) }
    dend_34 { pt3dadd( -17.3838, -156.554, 0.255391, 1.25 ) }
    dend_34 { pt3dadd( -17.3681, -157.871, 0.0355065, 1.55 ) }
    dend_34 { pt3dadd( -17.3207, -158.877, -0.107516, 1.55 ) }
    dend_34 { pt3dadd( -17.1982, -160.264, -0.281113, 1.33 ) }
    dend_34 { pt3dadd( -17.0657, -161.398, -0.408998, 1.33 ) }
    dend_34 { pt3dadd( -16.9456, -162.41, -0.509603, 1.11 ) }
    dend_34 { pt3dadd( -16.7962, -163.493, -0.571553, 1.11 ) }
    dend_34 { pt3dadd( -16.6432, -164.686, -0.593183, 0.96 ) }
    dend_34 { pt3dadd( -16.5532, -165.575, -0.576745, 0.96 ) }
    dend_34 { pt3dadd( -16.4567, -166.864, -0.491197, 0.88 ) }
    dend_34 { pt3dadd( -16.3659, -168.566, -0.321209, 0.88 ) }
    dend_34 { pt3dadd( -16.3114, -170.045, -0.125687, 1.03 ) }
    dend_34 { pt3dadd( -16.2806, -171.362, 0.084724, 1.25 ) }
    dend_34 { pt3dadd( -16.2702, -172.615, 0.310435, 1.33 ) }
    dend_34 { pt3dadd( -16.2744, -173.603, 0.502754, 1.62 ) }
    dend_34 { pt3dadd( -16.2665, -174.618, 0.710726, 2.5 ) }
    dend_34 { pt3dadd( -16.2436, -175.168, 0.81611, 2.8 ) }
    dend_34 { pt3dadd( -16.2108, -175.848, 0.91033, 3.02 ) }
    dend_34 { pt3dadd( -16.1508, -176.485, 0.994443, 3.02 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( -16.1066, -176.912, 1.04722, 3.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 1/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.439221, -48.8933, -7.78397, 0.81 ) }
    dend_30 { pt3dadd( -0.773568, -50.5281, -7.69967, 0.81 ) }
    dend_30 { pt3dadd( -1.08711, -51.6281, -7.59083, 0.66 ) }
    dend_30 { pt3dadd( -1.52188, -52.8571, -7.4457, 0.66 ) }
    dend_30 { pt3dadd( -2.03059, -54.1442, -7.28751, 0.52 ) }
    dend_30 { pt3dadd( -2.24207, -54.6584, -7.22478, 0.52 ) }
    dend_30 { pt3dadd( -2.80289, -56.0131, -7.06412, 0.74 ) }
    dend_30 { pt3dadd( -3.35978, -57.3904, -6.83904, 0.74 ) }
    dend_30 { pt3dadd( -3.85548, -58.5296, -6.66229, 0.88 ) }
    dend_30 { pt3dadd( -4.43859, -59.7644, -6.49882, 0.59 ) }
    dend_30 { pt3dadd( -4.82496, -60.5692, -6.4257, 1.03 ) }
    dend_30 { pt3dadd( -5.17732, -61.3593, -6.36401, 1.25 ) }
    dend_30 { pt3dadd( -5.51981, -62.2884, -6.29899, 1.03 ) }
    dend_30 { pt3dadd( -5.87401, -63.4886, -6.22578, 0.66 ) }
    dend_30 { pt3dadd( -6.1373, -64.4675, -6.17224, 0.66 ) }
    dend_30 { pt3dadd( -6.4079, -65.4779, -6.13339, 0.81 ) }
    dend_30 { pt3dadd( -6.7068, -66.6608, -6.12418, 0.81 ) }
    dend_30 { pt3dadd( -6.91896, -67.6512, -6.1636, 0.66 ) }
    dend_30 { pt3dadd( -7.08217, -68.7005, -6.25777, 0.52 ) }
    dend_30 { pt3dadd( -7.15224, -69.3237, -6.35527, 0.52 ) }
    dend_30 { pt3dadd( -7.22939, -70.0875, -6.49735, 0.52 ) }
    dend_30 { pt3dadd( -7.34691, -71.1761, -6.72871, 0.66 ) }
    dend_30 { pt3dadd( -7.47262, -72.1646, -6.94869, 0.66 ) }
    dend_30 { pt3dadd( -7.63035, -73.2091, -7.19035, 0.59 ) }
    dend_30 { pt3dadd( -7.83221, -74.3541, -7.44372, 1.18 ) }
    dend_30 { pt3dadd( -7.99894, -75.3513, -7.65441, 1.55 ) }
    dend_30 { pt3dadd( -8.17953, -76.3048, -7.83477, 1.99 ) }
    dend_30 { pt3dadd( -8.48429, -77.4582, -8.0226, 2.73 ) }
    dend_30 { pt3dadd( -8.77521, -78.3102, -8.13931, 2.87 ) }
    dend_30 { pt3dadd( -9.09614, -79.1042, -8.2474, 3.02 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.439221, -48.8933, -7.78397, 0.52 ) }
    dend_29 { pt3dadd( 0.188911, -50.1661, -8.99386, 0.52 ) }
    dend_29 { pt3dadd( 0.326844, -50.466, -9.24735, 0.52 ) }
    dend_29 { pt3dadd( 0.810223, -51.4569, -10.0859, 0.52 ) }
    dend_29 { pt3dadd( 1.2089, -52.1914, -10.7151, 0.66 ) }
    dend_29 { pt3dadd( 1.47619, -52.6408, -11.0845, 0.66 ) }
    dend_29 { pt3dadd( 1.72552, -53.0201, -11.3893, 0.44 ) }
    dend_29 { pt3dadd( 2.02624, -53.5438, -11.8049, 0.88 ) }
    dend_29 { pt3dadd( 2.295, -54.0357, -12.1583, 1.33 ) }
    dend_29 { pt3dadd( 2.59252, -54.5656, -12.5021, 1.47 ) }
    dend_29 { pt3dadd( 2.93242, -55.1794, -12.971, 1.03 ) }
    dend_29 { pt3dadd( 3.33436, -56.1339, -13.8165, 0.44 ) }
    dend_29 { pt3dadd( 3.40358, -56.7157, -14.448, 0.44 ) }
    dend_29 { pt3dadd( 3.29326, -57.382, -15.374, 0.37 ) }
    dend_29 { pt3dadd( 3.13345, -57.8647, -16.1706, 0.37 ) }
    dend_29 { pt3dadd( 2.92921, -58.4846, -17.3655, 0.37 ) }
    dend_29 { pt3dadd( 2.82602, -58.8911, -18.27, 0.74 ) }
    dend_29 { pt3dadd( 2.79795, -59.168, -18.9515, 0.96 ) }
    dend_29 { pt3dadd( 2.83858, -59.5536, -19.885, 0.96 ) }
    dend_29 { pt3dadd( 2.98902, -60.2544, -21.5136, 0.44 ) }
    dend_29 { pt3dadd( 3.14771, -60.7371, -22.543, 1.33 ) }
    dend_29 { pt3dadd( 3.40807, -61.4011, -23.831, 1.55 ) }
    dend_29 { pt3dadd( 3.64984, -62.0125, -24.9509, 1.33 ) }
    dend_29 { pt3dadd( 3.98037, -62.8473, -26.3505, 0.81 ) }
    dend_29 { pt3dadd( 4.12838, -63.2053, -26.8887, 1.25 ) }
    dend_29 { pt3dadd( 4.33042, -63.6493, -27.4713, 0.88 ) }
    dend_29 { pt3dadd( 4.54124, -64.1483, -28.0293, 0.37 ) }
    dend_29 { pt3dadd( 4.7145, -64.5883, -28.4341, 0.81 ) }
    dend_29 { pt3dadd( 4.8854, -65.0601, -28.814, 1.03 ) }
    dend_29 { pt3dadd( 4.99757, -65.3441, -29.0154, 1.03 ) }
    dend_29 { pt3dadd( 5.42496, -66.3288, -29.6794, 0.29 ) }
    dend_29 { pt3dadd( 5.6563, -66.8291, -29.9937, 0.29 ) }
    dend_29 { pt3dadd( 5.98992, -67.4775, -30.368, 1.84 ) }
    dend_29 { pt3dadd( 6.31616, -68.0238, -30.6835, 2.14 ) }
    dend_29 { pt3dadd( 7.2391, -69.3726, -31.5079, 0.29 ) }
    dend_29 { pt3dadd( 7.72299, -69.9912, -31.8999, 0.81 ) }
    dend_29 { pt3dadd( 8.22012, -70.5471, -32.261, 0.81 ) }
    dend_29 { pt3dadd( 8.74365, -71.0654, -32.6231, 0.52 ) }
    dend_29 { pt3dadd( 9.46505, -71.7046, -33.1292, 1.25 ) }
    dend_29 { pt3dadd( 9.93898, -72.0931, -33.4722, 1.4 ) }
    dend_29 { pt3dadd( 11.1589, -73.0541, -34.3547, 0.22 ) }
    dend_29 { pt3dadd( 11.9113, -73.6391, -34.8706, 0.22 ) }
    dend_29 { pt3dadd( 12.7627, -74.308, -35.4225, 1.4 ) }
    dend_29 { pt3dadd( 13.294, -74.7528, -35.7483, 2.21 ) }
    dend_29 { pt3dadd( 13.5363, -74.9733, -35.8824, 2.21 ) }
    dend_29 { pt3dadd( 15.1014, -76.5303, -36.6604, 0.22 ) }
    dend_29 { pt3dadd( 15.52, -76.9691, -36.858, 0.74 ) }
    dend_29 { pt3dadd( 15.8896, -77.3761, -37.039, 1.03 ) }
    dend_29 { pt3dadd( 16.485, -78.0813, -37.3412, 0.59 ) }
    dend_29 { pt3dadd( 17.8724, -79.8224, -38.0621, 0.22 ) }
    dend_29 { pt3dadd( 19.6293, -82.0857, -39.0163, 0.22 ) }
    dend_29 { pt3dadd( 20.2418, -82.8905, -39.3824, 0.81 ) }
    dend_29 { pt3dadd( 20.6963, -83.4854, -39.6662, 0.96 ) }
    dend_29 { pt3dadd( 22.1716, -85.4241, -40.6324, 0.22 ) }
    dend_29 { pt3dadd( 23.095, -86.6212, -41.2803, 0.22 ) }
    dend_29 { pt3dadd( 23.6049, -87.2827, -41.6775, 0.88 ) }
    dend_29 { pt3dadd( 24.1079, -87.9243, -42.1087, 0.88 ) }
    dend_29 { pt3dadd( 25.5261, -89.7171, -43.3681, 0.15 ) }
    dend_29 { pt3dadd( 26.5986, -91.0267, -44.2605, 0.15 ) }
    dend_29 { pt3dadd( 27.2274, -91.7668, -44.7742, 0.15 ) }
    dend_29 { pt3dadd( 27.7985, -92.4412, -45.2323, 1.62 ) }
    dend_29 { pt3dadd( 28.1536, -92.8763, -45.5099, 1.92 ) }
    dend_29 { pt3dadd( 28.435, -93.2256, -45.7086, 1.92 ) }
    dend_29 { pt3dadd( 30.2545, -95.5486, -46.9132, 0.22 ) }
    dend_29 { pt3dadd( 30.6439, -96.045, -47.1469, 0.66 ) }
    dend_29 { pt3dadd( 30.9395, -96.4309, -47.3171, 0.88 ) }
    dend_29 { pt3dadd( 31.2429, -96.8245, -47.4934, 0.88 ) }
    dend_29 { pt3dadd( 32.2137, -98.1099, -48.1753, 0.15 ) }
    dend_29 { pt3dadd( 32.9288, -99.1516, -48.8531, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_29 { pt3dadd( 33.3056, -99.7865, -49.331, 0.81 ) }
    dend_29 { pt3dadd( 33.5303, -100.241, -49.6855, 1.03 ) }
    dend_29 { pt3dadd( 33.696, -100.652, -50.015, 1.03 ) }
    dend_29 { pt3dadd( 34.1152, -102.037, -51.163, 0.22 ) }
    dend_29 { pt3dadd( 34.4095, -103.542, -52.4656, 0.22 ) }
    dend_29 { pt3dadd( 34.5046, -104.155, -53.0339, 0.22 ) }
    dend_29 { pt3dadd( 34.6288, -105.042, -53.9046, 1.03 ) }
    dend_29 { pt3dadd( 34.6955, -105.503, -54.3615, 1.62 ) }
    dend_29 { pt3dadd( 34.7641, -105.968, -54.8491, 1.62 ) }
    dend_29 { pt3dadd( 34.8978, -106.753, -55.7248, 1.03 ) }
    dend_29 { pt3dadd( 35.2116, -108.361, -57.6077, 0.22 ) }
    dend_29 { pt3dadd( 35.3571, -109.113, -58.5854, 0.44 ) }
    dend_29 { pt3dadd( 35.4523, -109.526, -59.1519, 0.44 ) }
    dend_29 { pt3dadd( 35.6757, -110.437, -60.4109, 0.66 ) }
    dend_29 { pt3dadd( 35.7986, -110.896, -61.0275, 0.96 ) }
    dend_29 { pt3dadd( 35.9539, -111.426, -61.7248, 0.37 ) }
    dend_29 { pt3dadd( 36.4942, -113.125, -63.8724, 0.66 ) }
    dend_29 { pt3dadd( 36.6201, -113.474, -64.301, 0.66 ) }
    dend_29 { pt3dadd( 37.109, -114.741, -65.87, 0.22 ) }
    dend_29 { pt3dadd( 37.3977, -115.409, -66.6623, 0.22 ) }
    dend_29 { pt3dadd( 37.6792, -116.004, -67.3517, 0.81 ) }
    dend_29 { pt3dadd( 37.9753, -116.539, -67.9507, 0.96 ) }
    dend_29 { pt3dadd( 38.1981, -116.886, -68.2416, 0.96 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 23/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 18.7403, 161.998, -23.1343, 0.37 ) }
    dend_24 { pt3dadd( 20.7933, 160.959, -20.7583, 0.37 ) }
    dend_24 { pt3dadd( 21.2122, 160.747, -20.2735, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 26/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 18.7403, 161.998, -23.1343, 0.22 ) }
    dend_23 { pt3dadd( 19.3668, 163.544, -23.0271, 0.22 ) }
    dend_23 { pt3dadd( 19.6918, 164.384, -23.0104, 0.22 ) }
    dend_23 { pt3dadd( 19.943, 165.048, -23.0144, 0.74 ) }
    dend_23 { pt3dadd( 20.0316, 165.295, -23.0195, 0.74 ) }
    dend_23 { pt3dadd( 20.4417, 166.435, -23.0431, 0.15 ) }
    dend_23 { pt3dadd( 20.7071, 167.173, -23.0583, 0.15 ) }
    dend_23 { pt3dadd( 20.9142, 167.706, -23.1294, 0.66 ) }
    dend_23 { pt3dadd( 21.0155, 168.035, -23.1676, 0.88 ) }
    dend_23 { pt3dadd( 21.1174, 168.409, -23.1922, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 36/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -12.5725, 53.1475, 1.14483, 0.66 ) }
    dend_17 { pt3dadd( -12.9493, 54.9193, 0.895419, 0.66 ) }
    dend_17 { pt3dadd( -13.034, 55.5916, 0.82972, 0.96 ) }
    dend_17 { pt3dadd( -13.1287, 56.3811, 0.767787, 0.96 ) }
    dend_17 { pt3dadd( -13.2503, 57.4604, 0.697253, 0.59 ) }
    dend_17 { pt3dadd( -13.3462, 58.4171, 0.642497, 0.59 ) }
    dend_17 { pt3dadd( -13.4411, 59.5489, 0.584244, 0.59 ) }
    dend_17 { pt3dadd( -13.5373, 61.1964, 0.553551, 0.59 ) }
    dend_17 { pt3dadd( -13.5575, 61.9741, 0.542189, 0.52 ) }
    dend_17 { pt3dadd( -13.5615, 63.1363, 0.530127, 0.88 ) }
    dend_17 { pt3dadd( -13.5652, 63.9784, 0.514911, 1.11 ) }
    dend_17 { pt3dadd( -13.5912, 64.9825, 0.483634, 1.11 ) }
    dend_17 { pt3dadd( -13.638, 66.1385, 0.448896, 0.74 ) }
    dend_17 { pt3dadd( -13.7153, 67.3502, 0.414049, 0.74 ) }
    dend_17 { pt3dadd( -13.8307, 68.9007, 0.374859, 0.74 ) }
    dend_17 { pt3dadd( -13.9325, 69.9698, 0.341553, 0.52 ) }
    dend_17 { pt3dadd( -14.067, 71.1121, 0.288813, 0.52 ) }
    dend_17 { pt3dadd( -14.1752, 71.9342, 0.239634, 0.96 ) }
    dend_17 { pt3dadd( -14.3392, 73.1469, 0.139294, 1.11 ) }
    dend_17 { pt3dadd( -14.5891, 74.9438, -0.0423072, 1.11 ) }
    dend_17 { pt3dadd( -14.7525, 76.1239, -0.178441, 1.11 ) }
    dend_17 { pt3dadd( -14.8951, 77.3007, -0.305131, 0.81 ) }
    dend_17 { pt3dadd( -15.0012, 78.3357, -0.409188, 0.74 ) }
    dend_17 { pt3dadd( -15.0858, 79.415, -0.507102, 0.74 ) }
    dend_17 { pt3dadd( -15.1359, 80.4278, -0.582718, 0.44 ) }
    dend_17 { pt3dadd( -15.1704, 81.2853, -0.628022, 0.44 ) }
    dend_17 { pt3dadd( -15.2315, 82.698, -0.66076, 0.74 ) }
    dend_17 { pt3dadd( -15.2726, 83.6739, -0.661958, 0.74 ) }
    dend_17 { pt3dadd( -15.3091, 84.7119, -0.653955, 0.37 ) }
    dend_17 { pt3dadd( -15.3144, 85.79, -0.639454, 0.74 ) }
    dend_17 { pt3dadd( -15.3058, 86.7301, -0.664635, 0.96 ) }
    dend_17 { pt3dadd( -15.2869, 87.8066, -0.7394, 0.96 ) }
    dend_17 { pt3dadd( -15.2602, 88.9889, -0.886734, 0.81 ) }
    dend_17 { pt3dadd( -15.2252, 90.0975, -1.06203, 0.52 ) }
    dend_17 { pt3dadd( -15.1733, 91.255, -1.27554, 0.52 ) }
    dend_17 { pt3dadd( -15.0643, 92.7732, -1.58266, 1.03 ) }
    dend_17 { pt3dadd( -14.9885, 93.58, -1.75499, 1.55 ) }
    dend_17 { pt3dadd( -14.9126, 94.309, -1.91841, 1.69 ) }
    dend_17 { pt3dadd( -14.862, 94.784, -2.02453, 1.69 ) }
    dend_17 { pt3dadd( -14.7303, 95.9597, -2.26503, 0.37 ) }
    dend_17 { pt3dadd( -14.6126, 96.9446, -2.42698, 0.44 ) }
    dend_17 { pt3dadd( -14.5293, 97.4587, -2.47765, 0.44 ) }
    dend_17 { pt3dadd( -14.4136, 98.0516, -2.51789, 0.44 ) }
    dend_17 { pt3dadd( -14.1998, 99.0339, -2.56087, 0.29 ) }
    dend_17 { pt3dadd( -14.0937, 99.4518, -2.57693, 0.59 ) }
    dend_17 { pt3dadd( -13.8799, 100.161, -2.60233, 0.44 ) }
    dend_17 { pt3dadd( -13.5292, 101.277, -2.63815, 0.29 ) }
    dend_17 { pt3dadd( -13.2216, 102.312, -2.667, 1.18 ) }
    dend_17 { pt3dadd( -13.0669, 102.869, -2.67979, 1.18 ) }
    dend_17 { pt3dadd( -12.8415, 103.705, -2.70088, 0.52 ) }
    dend_17 { pt3dadd( -12.6269, 104.507, -2.7212, 0.29 ) }
    dend_17 { pt3dadd( -12.3744, 105.423, -2.71704, 0.29 ) }
    dend_17 { pt3dadd( -12.1606, 106.255, -2.66544, 0.29 ) }
    dend_17 { pt3dadd( -12.039, 106.8, -2.6051, 0.29 ) }
    dend_17 { pt3dadd( -11.8331, 107.887, -2.44513, 0.81 ) }
    dend_17 { pt3dadd( -11.6697, 108.84, -2.27895, 0.44 ) }
    dend_17 { pt3dadd( -11.4961, 109.754, -2.12658, 0.22 ) }
    dend_17 { pt3dadd( -11.2784, 110.675, -1.98599, 0.44 ) }
    dend_17 { pt3dadd( -11.1867, 111.028, -1.92875, 0.44 ) }
    dend_17 { pt3dadd( -10.9957, 111.786, -1.80198, 0.29 ) }
    dend_17 { pt3dadd( -10.8393, 112.471, -1.68213, 0.29 ) }
    dend_17 { pt3dadd( -10.6223, 113.406, -1.53976, 0.29 ) }
    dend_17 { pt3dadd( -10.4794, 114.002, -1.4716, 0.29 ) }
    dend_17 { pt3dadd( -10.2897, 114.769, -1.3936, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_17 { pt3dadd( -10.1398, 115.392, -1.32366, 0.66 ) }
    dend_17 { pt3dadd( -9.95623, 116.18, -1.25644, 0.74 ) }
    dend_17 { pt3dadd( -9.79465, 117.038, -1.1782, 0.37 ) }
    dend_17 { pt3dadd( -9.69066, 117.71, -1.11336, 0.37 ) }
    dend_17 { pt3dadd( -9.55154, 118.648, -1.05277, 0.52 ) }
    dend_17 { pt3dadd( -9.44337, 119.355, -1.03599, 0.59 ) }
    dend_17 { pt3dadd( -9.27657, 120.43, -1.0264, 0.44 ) }
    dend_17 { pt3dadd( -9.15563, 121.188, -1.02751, 0.29 ) }
    dend_17 { pt3dadd( -9.06381, 121.719, -1.02577, 0.29 ) }
    dend_17 { pt3dadd( -8.86285, 122.895, -1.00678, 1.11 ) }
    dend_17 { pt3dadd( -8.74977, 123.568, -0.987443, 1.25 ) }
    dend_17 { pt3dadd( -8.67022, 124.048, -0.967946, 1.25 ) }
    dend_17 { pt3dadd( -8.48591, 125.058, -0.926693, 0.66 ) }
    dend_17 { pt3dadd( -8.35375, 125.659, -0.921821, 0.29 ) }
    dend_17 { pt3dadd( -8.11659, 126.595, -0.926882, 0.29 ) }
    dend_17 { pt3dadd( -7.87977, 127.43, -0.940146, 0.29 ) }
    dend_17 { pt3dadd( -7.64267, 128.185, -0.958953, 0.29 ) }
    dend_17 { pt3dadd( -7.26059, 129.314, -0.998517, 0.96 ) }
    dend_17 { pt3dadd( -7.09341, 129.803, -1.02473, 1.47 ) }
    dend_17 { pt3dadd( -6.96278, 130.221, -1.05415, 1.47 ) }
    dend_17 { pt3dadd( -6.89511, 130.468, -1.07545, 1.47 ) }
    dend_17 { pt3dadd( -6.72715, 131.189, -1.13659, 0.74 ) }
    dend_17 { pt3dadd( -6.55544, 132.018, -1.19974, 0.29 ) }
    dend_17 { pt3dadd( -6.40612, 132.867, -1.25704, 0.52 ) }
    dend_17 { pt3dadd( -6.26716, 133.652, -1.30481, 0.74 ) }
    dend_17 { pt3dadd( -6.06454, 134.65, -1.35772, 0.44 ) }
    dend_17 { pt3dadd( -5.88052, 135.444, -1.39517, 0.29 ) }
    dend_17 { pt3dadd( -5.73425, 136.001, -1.41943, 0.29 ) }
    dend_17 { pt3dadd( -5.4997, 136.766, -1.44871, 0.66 ) }
    dend_17 { pt3dadd( -5.31311, 137.313, -1.47065, 0.74 ) }
    dend_17 { pt3dadd( -5.03935, 138.083, -1.5033, 0.74 ) }
    dend_17 { pt3dadd( -4.73945, 138.947, -1.53314, 0.29 ) }
    dend_17 { pt3dadd( -4.48774, 139.72, -1.55469, 0.29 ) }
    dend_17 { pt3dadd( -4.01864, 141.276, -1.58995, 0.29 ) }
    dend_17 { pt3dadd( -3.73302, 142.339, -1.55767, 0.52 ) }
    dend_17 { pt3dadd( -3.57983, 142.983, -1.51233, 1.18 ) }
    dend_17 { pt3dadd( -3.46595, 143.543, -1.45508, 1.4 ) }
    dend_17 { pt3dadd( -3.31285, 144.454, -1.33843, 1.4 ) }
    dend_17 { pt3dadd( -3.21732, 145.17, -1.23399, 0.66 ) }
    dend_17 { pt3dadd( -3.01612, 146.848, -0.983554, 0.29 ) }
    dend_17 { pt3dadd( -2.87567, 147.904, -0.848897, 0.29 ) }
    dend_17 { pt3dadd( -2.77066, 148.54, -0.804864, 0.37 ) }
    dend_17 { pt3dadd( -2.60464, 149.394, -0.794616, 0.37 ) }
    dend_17 { pt3dadd( -2.40687, 150.274, -0.823421, 0.37 ) }
    dend_17 { pt3dadd( -2.00703, 151.829, -0.94368, 0.37 ) }
    dend_17 { pt3dadd( -1.51255, 153.514, -1.16682, 0.37 ) }
    dend_17 { pt3dadd( -0.986804, 155.147, -1.40395, 1.33 ) }
    dend_17 { pt3dadd( -0.70524, 155.929, -1.5352, 1.99 ) }
    dend_17 { pt3dadd( -0.466734, 156.549, -1.65012, 1.99 ) }
    dend_17 { pt3dadd( -0.364895, 156.811, -1.70201, 1.99 ) }
    dend_17 { pt3dadd( -0.174676, 157.296, -1.7975, 1.99 ) }
    dend_17 { pt3dadd( 0.226786, 158.307, -1.97691, 0.59 ) }
    dend_17 { pt3dadd( 0.702889, 159.482, -2.14056, 0.29 ) }
    dend_17 { pt3dadd( 1.04611, 160.306, -2.20771, 0.59 ) }
    dend_17 { pt3dadd( 1.31667, 160.944, -2.23892, 0.59 ) }
    dend_17 { pt3dadd( 1.89159, 162.281, -2.26445, 0.37 ) }
    dend_17 { pt3dadd( 2.20178, 163.025, -2.25653, 0.37 ) }
    dend_17 { pt3dadd( 2.67973, 164.232, -2.20727, 0.37 ) }
    dend_17 { pt3dadd( 3.21479, 165.686, -2.10825, 0.74 ) }
    dend_17 { pt3dadd( 3.40674, 166.285, -2.06648, 0.74 ) }
    dend_17 { pt3dadd( 3.57115, 166.905, -2.01638, 0.88 ) }
    dend_17 { pt3dadd( 3.75483, 167.806, -1.93732, 0.44 ) }
    dend_17 { pt3dadd( 3.98925, 169.364, -1.83415, 0.29 ) }
    dend_17 { pt3dadd( 4.06744, 170.196, -1.82586, 0.52 ) }
    dend_17 { pt3dadd( 4.14565, 171.74, -1.90768, 1.25 ) }
    dend_17 { pt3dadd( 4.16053, 172.397, -1.96168, 1.62 ) }
    dend_17 { pt3dadd( 4.16441, 172.828, -2.01929, 1.62 ) }
    dend_17 { pt3dadd( 4.16386, 173.712, -2.17942, 0.96 ) }
    dend_17 { pt3dadd( 4.16703, 175.027, -2.48364, 0.29 ) }
    dend_17 { pt3dadd( 4.18972, 175.783, -2.67687, 0.29 ) }
    dend_17 { pt3dadd( 4.24669, 176.702, -2.90594, 0.29 ) }
    dend_17 { pt3dadd( 4.31309, 177.666, -3.11455, 0.74 ) }
    dend_17 { pt3dadd( 4.33842, 178.104, -3.18735, 0.96 ) }
    dend_17 { pt3dadd( 4.36359, 178.614, -3.24559, 0.96 ) }
    dend_17 { pt3dadd( 4.41999, 179.906, -3.35805, 0.52 ) }
    dend_17 { pt3dadd( 4.49366, 181.689, -3.52285, 0.37 ) }
    dend_17 { pt3dadd( 4.54034, 182.913, -3.63188, 0.29 ) }
    dend_17 { pt3dadd( 4.56805, 184.066, -3.74077, 0.66 ) }
    dend_17 { pt3dadd( 4.57929, 184.839, -3.82972, 0.66 ) }
    dend_17 { pt3dadd( 4.58231, 186.289, -4.02558, 0.29 ) }
    dend_17 { pt3dadd( 4.58264, 187.008, -4.12883, 0.29 ) }
    dend_17 { pt3dadd( 4.59182, 188.903, -4.40638, 0.29 ) }
    dend_17 { pt3dadd( 4.63201, 190.966, -4.70124, 1.99 ) }
    dend_17 { pt3dadd( 4.64318, 191.435, -4.76095, 2.28 ) }
    dend_17 { pt3dadd( 4.6534, 192.098, -4.82885, 1.55 ) }
    dend_17 { pt3dadd( 4.66028, 192.826, -4.86601, 0.88 ) }
    dend_17 { pt3dadd( 4.65816, 194.017, -4.85595, 0.22 ) }
    dend_17 { pt3dadd( 4.64841, 194.576, -4.82465, 0.22 ) }
    dend_17 { pt3dadd( 4.62185, 195.597, -4.7285, 0.66 ) }
    dend_17 { pt3dadd( 4.60467, 196.243, -4.66763, 0.66 ) }
    dend_17 { pt3dadd( 4.58366, 197.335, -4.57653, 0.29 ) }
    dend_17 { pt3dadd( 4.55575, 199.082, -4.46838, 0.22 ) }
    dend_17 { pt3dadd( 4.5638, 199.967, -4.42622, 0.22 ) }
    dend_17 { pt3dadd( 4.59617, 200.904, -4.39811, 0.52 ) }
    dend_17 { pt3dadd( 4.69386, 202.075, -4.39026, 0.44 ) }
    dend_17 { pt3dadd( 4.82608, 203.094, -4.40548, 0.44 ) }
    dend_17 { pt3dadd( 5.02511, 204.269, -4.45374, 0.44 ) }
    dend_17 { pt3dadd( 5.41867, 206.09, -4.55615, 0.22 ) }
    dend_17 { pt3dadd( 5.74806, 207.446, -4.64061, 0.66 ) }
    dend_17 { pt3dadd( 6.04654, 208.542, -4.71491, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_17 { pt3dadd( 6.22038, 209.122, -4.75615, 1.77 ) }
    dend_17 { pt3dadd( 6.39214, 209.641, -4.79381, 1.77 ) }
    dend_17 { pt3dadd( 6.68069, 210.402, -4.84839, 0.88 ) }
    dend_17 { pt3dadd( 7.03214, 211.249, -4.87453, 0.29 ) }
    dend_17 { pt3dadd( 7.28009, 211.825, -4.86972, 0.52 ) }
    dend_17 { pt3dadd( 7.90796, 213.314, -4.82055, 0.22 ) }
    dend_17 { pt3dadd( 8.26745, 214.164, -4.79718, 0.52 ) }
    dend_17 { pt3dadd( 8.67546, 215.12, -4.78389, 0.52 ) }
    dend_17 { pt3dadd( 9.55739, 217.222, -4.78223, 0.22 ) }
    dend_17 { pt3dadd( 10.224, 218.829, -4.80686, 0.37 ) }
    dend_17 { pt3dadd( 10.655, 219.886, -4.82732, 0.37 ) }
    dend_17 { pt3dadd( 11.1196, 221.063, -4.86002, 1.92 ) }
    dend_17 { pt3dadd( 11.323, 221.604, -4.88395, 2.21 ) }
    dend_17 { pt3dadd( 11.5159, 222.163, -4.93002, 2.21 ) }
    dend_17 { pt3dadd( 11.727, 222.821, -5.06659, 1.18 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 15/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -12.5725, 53.1475, 1.14483, 0.66 ) }
    dend_14 { pt3dadd( -12.1771, 54.4079, 1.26423, 0.66 ) }
    dend_14 { pt3dadd( -11.9353, 55.1751, 1.33025, 0.81 ) }
    dend_14 { pt3dadd( -11.7582, 55.7465, 1.39574, 0.37 ) }
    dend_14 { pt3dadd( -11.5582, 56.4349, 1.47977, 0.29 ) }
    dend_14 { pt3dadd( -11.2185, 57.5886, 1.61202, 0.29 ) }
    dend_14 { pt3dadd( -11.0021, 58.2642, 1.68768, 0.29 ) }
    dend_14 { pt3dadd( -10.7571, 58.9131, 1.7395, 0.29 ) }
    dend_14 { pt3dadd( -10.3736, 59.7698, 1.81652, 0.29 ) }
    dend_14 { pt3dadd( -10.0306, 60.4731, 1.88152, 0.29 ) }
    dend_14 { pt3dadd( -9.68891, 61.1735, 1.94584, 0.74 ) }
    dend_14 { pt3dadd( -9.45123, 61.6445, 1.99416, 0.74 ) }
    dend_14 { pt3dadd( -9.0008, 62.4428, 2.07463, 0.29 ) }
    dend_14 { pt3dadd( -8.73331, 62.9016, 2.12556, 0.37 ) }
    dend_14 { pt3dadd( -8.12056, 63.9685, 2.23526, 0.37 ) }
    dend_14 { pt3dadd( -7.79584, 64.5719, 2.30318, 0.37 ) }
    dend_14 { pt3dadd( -7.46255, 65.284, 2.38639, 0.37 ) }
    dend_14 { pt3dadd( -7.32814, 65.612, 2.42559, 0.37 ) }
    dend_14 { pt3dadd( -7.11363, 66.2103, 2.50256, 0.22 ) }
    dend_14 { pt3dadd( -6.92151, 66.791, 2.5785, 0.22 ) }
    dend_14 { pt3dadd( -6.75337, 67.2491, 2.63206, 0.66 ) }
    dend_14 { pt3dadd( -6.57005, 67.7992, 2.67156, 0.96 ) }
    dend_14 { pt3dadd( -4.61791, 74.346, 2.62805, 0.96 ) }
    dend_14 { pt3dadd( -1.02436, 80.1531, 3.68751, 0.96 ) }
    dend_14 { pt3dadd( 1.9084, 86.087, 5.64635, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 31.7281, 9.42671, 7.57572, 0.66 ) }
    dend_8 { pt3dadd( 32.497, 7.84337, 7.7471, 0.66 ) }
    dend_8 { pt3dadd( 32.7131, 7.337, 7.76747, 0.66 ) }
    dend_8 { pt3dadd( 33.0698, 6.56021, 7.82416, 0.88 ) }
    dend_8 { pt3dadd( 33.7195, 5.3113, 7.96946, 0.88 ) }
    dend_8 { pt3dadd( 34.1899, 4.51827, 8.0989, 0.88 ) }
    dend_8 { pt3dadd( 34.6479, 3.86075, 8.23408, 1.03 ) }
    dend_8 { pt3dadd( 35.189, 3.14942, 8.39271, 1.03 ) }
    dend_8 { pt3dadd( 35.9911, 2.60353, 8.6901, 0.88 ) }
    dend_8 { pt3dadd( 36.6453, 2.47645, 8.94108, 0.88 ) }
    dend_8 { pt3dadd( 37.2108, 2.43562, 9.17094, 0.88 ) }
    dend_8 { pt3dadd( 38.104, 2.34637, 9.56534, 0.81 ) }
    dend_8 { pt3dadd( 39.1242, 2.11496, 10.0629, 0.81 ) }
    dend_8 { pt3dadd( 39.7671, 1.84103, 10.3777, 0.81 ) }
    dend_8 { pt3dadd( 40.577, 1.29127, 10.7326, 0.74 ) }
    dend_8 { pt3dadd( 41.4361, 0.570437, 11.0807, 0.88 ) }
    dend_8 { pt3dadd( 42.1969, -0.158908, 11.3563, 0.88 ) }
    dend_8 { pt3dadd( 43.0094, -1.04828, 11.6195, 0.52 ) }
    dend_8 { pt3dadd( 43.419, -1.51143, 11.7156, 0.52 ) }
    dend_8 { pt3dadd( 43.9299, -2.00832, 11.7629, 0.52 ) }
    dend_8 { pt3dadd( 44.5989, -2.52461, 11.7629, 0.52 ) }
    dend_8 { pt3dadd( 45.3777, -2.97753, 11.7122, 0.74 ) }
    dend_8 { pt3dadd( 46.1766, -3.35827, 11.6298, 0.74 ) }
    dend_8 { pt3dadd( 47.1964, -3.77669, 11.5029, 0.74 ) }
    dend_8 { pt3dadd( 48.5474, -4.27658, 11.3345, 0.74 ) }
    dend_8 { pt3dadd( 49.4864, -4.59873, 11.2082, 0.74 ) }
    dend_8 { pt3dadd( 50.2319, -4.8174, 11.1091, 0.74 ) }
    dend_8 { pt3dadd( 51.0461, -4.97598, 11.0033, 0.74 ) }
    dend_8 { pt3dadd( 51.5238, -5.03172, 10.9571, 0.88 ) }
    dend_8 { pt3dadd( 52.8768, -5.08731, 10.8429, 0.88 ) }
    dend_8 { pt3dadd( 54.0308, -5.09623, 10.7638, 0.88 ) }
    dend_8 { pt3dadd( 55.458, -5.11677, 10.6834, 0.66 ) }
    dend_8 { pt3dadd( 56.4994, -5.1487, 10.6509, 0.66 ) }
    dend_8 { pt3dadd( 59.1735, -5.24618, 10.6361, 0.59 ) }
    dend_8 { pt3dadd( 60.0995, -5.28556, 10.6482, 0.52 ) }
    dend_8 { pt3dadd( 61.5011, -5.31312, 10.6865, 0.52 ) }
    dend_8 { pt3dadd( 62.3465, -5.28481, 10.719, 0.52 ) }
    dend_8 { pt3dadd( 63.2693, -5.17242, 10.7498, 0.52 ) }
    dend_8 { pt3dadd( 64.3751, -4.96988, 10.7852, 0.52 ) }
    dend_8 { pt3dadd( 65.1144, -4.81704, 10.8165, 0.52 ) }
    dend_8 { pt3dadd( 66.3185, -4.61513, 10.8858, 0.52 ) }
    dend_8 { pt3dadd( 67.6242, -4.39496, 10.9701, 0.52 ) }
    dend_8 { pt3dadd( 68.8461, -4.22385, 11.0613, 0.52 ) }
    dend_8 { pt3dadd( 69.9788, -4.15096, 11.1661, 0.52 ) }
    dend_8 { pt3dadd( 71.2617, -4.21301, 11.3195, 0.52 ) }
    dend_8 { pt3dadd( 72.1359, -4.38997, 11.4638, 0.52 ) }
    dend_8 { pt3dadd( 72.9412, -4.64483, 11.6629, 0.52 ) }
    dend_8 { pt3dadd( 73.4796, -4.82932, 11.8323, 0.52 ) }
    dend_8 { pt3dadd( 74.1579, -5.04261, 12.0751, 0.52 ) }
    dend_8 { pt3dadd( 75.5315, -5.38235, 12.6382, 0.29 ) }
    dend_8 { pt3dadd( 77.9899, -5.78732, 13.7349, 0.29 ) }
    dend_8 { pt3dadd( 80.2235, -5.99548, 14.7755, 0.29 ) }
    dend_8 { pt3dadd( 81.3652, -6.00974, 15.3328, 0.29 ) }
    dend_8 { pt3dadd( 82.1861, -5.97983, 15.7434, 0.44 ) }
    dend_8 { pt3dadd( 83.0569, -5.87634, 16.2027, 0.59 ) }
    dend_8 { pt3dadd( 83.6041, -5.73253, 16.5399, 0.59 ) }
    dend_8 { pt3dadd( 84.5001, -5.16417, 17.2041, 0.59 ) }
    dend_8 { pt3dadd( 84.9823, -4.64704, 17.5635, 0.59 ) }
    dend_8 { pt3dadd( 94.2277, -7.58989, 20.2386, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 99/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 31.7281, 9.42671, 7.57572, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_3 { pt3dadd( 32.8164, 9.11855, 7.66867, 1.11 ) }
    dend_3 { pt3dadd( 33.4843, 8.84475, 7.72824, 1.11 ) }
    dend_3 { pt3dadd( 34.2578, 8.55229, 7.72288, 1.25 ) }
    dend_3 { pt3dadd( 34.8636, 8.3781, 7.68881, 1.47 ) }
    dend_3 { pt3dadd( 35.696, 8.22492, 7.61733, 1.4 ) }
    dend_3 { pt3dadd( 36.4428, 8.15366, 7.53743, 1.4 ) }
    dend_3 { pt3dadd( 37.2904, 8.10345, 7.4042, 1.18 ) }
    dend_3 { pt3dadd( 38.4551, 8.22822, 7.15547, 1.18 ) }
    dend_3 { pt3dadd( 39.2648, 8.46839, 6.93554, 1.18 ) }
    dend_3 { pt3dadd( 39.9606, 8.73022, 6.72588, 1.18 ) }
    dend_3 { pt3dadd( 40.3743, 8.88944, 6.60027, 0.88 ) }
    dend_3 { pt3dadd( 40.7864, 9.01046, 6.48604, 0.88 ) }
    dend_3 { pt3dadd( 41.4283, 9.07378, 6.34059, 0.88 ) }
    dend_3 { pt3dadd( 42.3991, 8.9543, 6.18101, 1.11 ) }
    dend_3 { pt3dadd( 43.132, 8.76224, 6.07433, 1.11 ) }
    dend_3 { pt3dadd( 43.8716, 8.5146, 5.97076, 1.11 ) }
    dend_3 { pt3dadd( 44.7055, 8.19175, 5.86127, 1.25 ) }
    dend_3 { pt3dadd( 45.5535, 7.8226, 5.7592, 1.33 ) }
    dend_3 { pt3dadd( 45.9444, 7.63626, 5.71849, 1.47 ) }
    dend_3 { pt3dadd( 46.589, 7.33893, 5.66536, 1.77 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 20/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -133.367, -94.3842, 1.23092, 0.59 ) }
    dend_47 { pt3dadd( -133.257, -96.3695, 1.47947, 0.59 ) }
    dend_47 { pt3dadd( -133.208, -97.1979, 1.6201, 0.59 ) }
    dend_47 { pt3dadd( -133.148, -97.9164, 1.76957, 0.52 ) }
    dend_47 { pt3dadd( -133.072, -98.7384, 1.9673, 0.52 ) }
    dend_47 { pt3dadd( -133.016, -99.6248, 2.19036, 0.88 ) }
    dend_47 { pt3dadd( -132.963, -100.604, 2.44646, 1.03 ) }
    dend_47 { pt3dadd( -132.948, -101.179, 2.64366, 1.03 ) }
    dend_47 { pt3dadd( -132.894, -102.186, 3.01388, 1.03 ) }
    dend_47 { pt3dadd( -132.823, -103.048, 3.3492, 0.29 ) }
    dend_47 { pt3dadd( -132.778, -103.661, 3.59117, 0.29 ) }
    dend_47 { pt3dadd( -132.757, -104.167, 3.79081, 0.29 ) }
    dend_47 { pt3dadd( -132.771, -105.128, 4.15315, 0.59 ) }
    dend_47 { pt3dadd( -132.836, -105.906, 4.47769, 0.74 ) }
    dend_47 { pt3dadd( -132.921, -106.456, 4.72481, 0.88 ) }
    dend_47 { pt3dadd( -133.03, -106.985, 4.9713, 0.88 ) }
    dend_47 { pt3dadd( -133.149, -107.471, 5.21242, 0.88 ) }
    dend_47 { pt3dadd( -133.354, -108.118, 5.53994, 0.81 ) }
    dend_47 { pt3dadd( -133.861, -109.512, 6.24122, 0.37 ) }
    dend_47 { pt3dadd( -134.134, -110.263, 6.62754, 1.03 ) }
    dend_47 { pt3dadd( -134.417, -110.998, 7.04483, 1.33 ) }
    dend_47 { pt3dadd( -134.687, -111.664, 7.44589, 1.33 ) }
    dend_47 { pt3dadd( -135.06, -112.51, 7.97118, 1.03 ) }
    dend_47 { pt3dadd( -135.392, -113.219, 8.41297, 0.74 ) }
    dend_47 { pt3dadd( -135.691, -113.841, 8.77087, 0.37 ) }
    dend_47 { pt3dadd( -136.109, -114.645, 9.29115, 0.74 ) }
    dend_47 { pt3dadd( -136.363, -115.103, 9.60252, 0.74 ) }
    dend_47 { pt3dadd( -136.646, -115.677, 9.94339, 0.59 ) }
    dend_47 { pt3dadd( -136.828, -116.125, 10.1748, 0.37 ) }
    dend_47 { pt3dadd( -137.045, -116.798, 10.4499, 0.37 ) }
    dend_47 { pt3dadd( -137.357, -117.949, 10.7623, 0.66 ) }
    dend_47 { pt3dadd( -137.572, -118.794, 10.89, 0.74 ) }
    dend_47 { pt3dadd( -137.958, -120.251, 11.0063, 0.52 ) }
    dend_47 { pt3dadd( -138.12, -120.867, 11.0259, 0.52 ) }
    dend_47 { pt3dadd( -138.35, -121.605, 11.0224, 1.33 ) }
    dend_47 { pt3dadd( -138.649, -122.532, 10.9914, 1.55 ) }
    dend_47 { pt3dadd( -139.055, -123.741, 10.9718, 1.99 ) }
    dend_47 { pt3dadd( -139.327, -124.453, 10.9997, 2.21 ) }
    dend_47 { pt3dadd( -139.715, -125.322, 11.0778, 1.99 ) }
    dend_47 { pt3dadd( -140.21, -126.37, 11.1721, 1.11 ) }
    dend_47 { pt3dadd( -140.735, -127.572, 11.2801, 0.37 ) }
    dend_47 { pt3dadd( -141.124, -128.597, 11.3839, 1.11 ) }
    dend_47 { pt3dadd( -141.3, -129.117, 11.4366, 1.25 ) }
    dend_47 { pt3dadd( -141.522, -129.788, 11.5058, 1.25 ) }
    dend_47 { pt3dadd( -142.015, -131.277, 11.6194, 0.29 ) }
    dend_47 { pt3dadd( -142.33, -132.232, 11.6703, 0.29 ) }
    dend_47 { pt3dadd( -142.653, -133.109, 11.7048, 0.44 ) }
    dend_47 { pt3dadd( -143.004, -134.02, 11.7298, 0.59 ) }
    dend_47 { pt3dadd( -143.43, -135.092, 11.7681, 0.88 ) }
    dend_47 { pt3dadd( -143.794, -135.979, 11.8126, 0.96 ) }
    dend_47 { pt3dadd( -144.199, -136.828, 11.8642, 0.66 ) }
    dend_47 { pt3dadd( -144.767, -137.826, 11.9523, 0.37 ) }
    dend_47 { pt3dadd( -145.205, -138.535, 12.0215, 0.29 ) }
    dend_47 { pt3dadd( -145.698, -139.263, 12.1241, 0.29 ) }
    dend_47 { pt3dadd( -146.133, -139.892, 12.2449, 0.29 ) }
    dend_47 { pt3dadd( -146.744, -140.727, 12.4403, 0.29 ) }
    dend_47 { pt3dadd( -147.663, -141.874, 12.6979, 0.74 ) }
    dend_47 { pt3dadd( -148.385, -142.656, 12.8981, 1.03 ) }
    dend_47 { pt3dadd( -149.291, -143.554, 13.1563, 2.28 ) }
    dend_47 { pt3dadd( -150.009, -144.2, 13.3559, 2.8 ) }
    dend_47 { pt3dadd( -150.7, -144.81, 13.5452, 3.09 ) }
    dend_47 { pt3dadd( -151.811, -145.83, 13.8563, 1.84 ) }
    dend_47 { pt3dadd( -153.097, -147.001, 14.2028, 0.29 ) }
    dend_47 { pt3dadd( -153.727, -147.606, 14.3886, 0.29 ) }
    dend_47 { pt3dadd( -154.55, -148.473, 14.6478, 0.29 ) }
    dend_47 { pt3dadd( -155.379, -149.425, 14.9458, 0.29 ) }
    dend_47 { pt3dadd( -155.946, -150.211, 15.2179, 0.88 ) }
    dend_47 { pt3dadd( -156.383, -150.918, 15.4709, 1.11 ) }
    dend_47 { pt3dadd( -156.721, -151.533, 15.6711, 0.81 ) }
    dend_47 { pt3dadd( -156.994, -152.065, 15.8491, 0.52 ) }
    dend_47 { pt3dadd( -157.411, -152.957, 16.1592, 0.29 ) }
    dend_47 { pt3dadd( -157.878, -154.011, 16.5414, 0.29 ) }
    dend_47 { pt3dadd( -158.254, -154.912, 16.8757, 0.29 ) }
    dend_47 { pt3dadd( -158.464, -155.399, 17.0537, 0.29 ) }
    dend_47 { pt3dadd( -158.864, -156.368, 17.414, 0.81 ) }
    dend_47 { pt3dadd( -159.206, -157.266, 17.7566, 1.11 ) }
    dend_47 { pt3dadd( -159.45, -157.97, 18.0308, 0.88 ) }
    dend_47 { pt3dadd( -159.792, -158.971, 18.4185, 0.29 ) }
    dend_47 { pt3dadd( -160.203, -160.19, 18.8953, 0.29 ) }
    dend_47 { pt3dadd( -160.596, -161.293, 19.2746, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_47 { pt3dadd( -160.746, -161.699, 19.4006, 0.29 ) }
    dend_47 { pt3dadd( -161.097, -162.678, 19.6781, 0.74 ) }
    dend_47 { pt3dadd( -161.346, -163.384, 19.8594, 0.74 ) }
    dend_47 { pt3dadd( -161.682, -164.385, 20.1025, 0.44 ) }
    dend_47 { pt3dadd( -162.053, -165.554, 20.3724, 0.29 ) }
    dend_47 { pt3dadd( -162.244, -166.136, 20.4992, 0.29 ) }
    dend_47 { pt3dadd( -162.504, -166.937, 20.7085, 0.29 ) }
    dend_47 { pt3dadd( -162.776, -167.884, 21.0157, 0.29 ) }
    dend_47 { pt3dadd( -162.917, -168.417, 21.2313, 0.74 ) }
    dend_47 { pt3dadd( -163.047, -168.9, 21.4628, 0.74 ) }
    dend_47 { pt3dadd( -163.29, -169.749, 21.9423, 0.44 ) }
    dend_47 { pt3dadd( -163.587, -170.701, 22.4997, 0.29 ) }
    dend_47 { pt3dadd( -163.867, -171.513, 23.012, 0.74 ) }
    dend_47 { pt3dadd( -164.072, -172.081, 23.3777, 1.11 ) }
    dend_47 { pt3dadd( -164.265, -172.56, 23.6789, 1.69 ) }
    dend_47 { pt3dadd( -164.431, -172.965, 23.9246, 1.92 ) }
    dend_47 { pt3dadd( -164.67, -173.557, 24.2635, 1.92 ) }
    dend_47 { pt3dadd( -165.005, -174.465, 24.7338, 1.62 ) }
    dend_47 { pt3dadd( -165.403, -175.574, 25.2795, 0.29 ) }
    dend_47 { pt3dadd( -165.71, -176.469, 25.6993, 0.22 ) }
    dend_47 { pt3dadd( -165.978, -177.213, 26.0316, 0.22 ) }
    dend_47 { pt3dadd( -166.352, -178.226, 26.4559, 0.59 ) }
    dend_47 { pt3dadd( -166.676, -179.073, 26.7848, 0.74 ) }
    dend_47 { pt3dadd( -166.922, -179.667, 27.0032, 0.74 ) }
    dend_47 { pt3dadd( -167.268, -180.428, 27.2865, 0.44 ) }
    dend_47 { pt3dadd( -167.598, -181.072, 27.5225, 0.29 ) }
    dend_47 { pt3dadd( -167.994, -181.707, 27.7715, 0.29 ) }
    dend_47 { pt3dadd( -168.939, -182.957, 28.3063, 0.44 ) }
    dend_47 { pt3dadd( -169.491, -183.601, 28.5697, 0.59 ) }
    dend_47 { pt3dadd( -170.044, -184.2, 28.8019, 0.59 ) }
    dend_47 { pt3dadd( -170.691, -184.895, 29.036, 0.52 ) }
    dend_47 { pt3dadd( -171.677, -185.95, 29.3416, 1.33 ) }
    dend_47 { pt3dadd( -172.484, -186.814, 29.5502, 2.06 ) }
    dend_47 { pt3dadd( -173.234, -187.662, 29.7197, 2.21 ) }
    dend_47 { pt3dadd( -173.772, -188.349, 29.8353, 2.21 ) }
    dend_47 { pt3dadd( -174.543, -189.484, 29.9999, 0.81 ) }
    dend_47 { pt3dadd( -175.001, -190.316, 30.0986, 0.29 ) }
    dend_47 { pt3dadd( -175.338, -191.082, 30.1679, 0.44 ) }
    dend_47 { pt3dadd( -175.542, -191.666, 30.2265, 0.44 ) }
    dend_47 { pt3dadd( -175.798, -192.518, 30.3322, 0.29 ) }
    dend_47 { pt3dadd( -175.986, -193.162, 30.3976, 0.29 ) }
    dend_47 { pt3dadd( -176.224, -193.961, 30.4776, 0.29 ) }
    dend_47 { pt3dadd( -176.404, -194.482, 30.5267, 0.74 ) }
    dend_47 { pt3dadd( -176.603, -194.949, 30.582, 0.88 ) }
    dend_47 { pt3dadd( -176.872, -195.492, 30.6642, 0.88 ) }
    dend_47 { pt3dadd( -177.324, -196.357, 30.8467, 0.29 ) }
    dend_47 { pt3dadd( -177.792, -197.199, 31.0944, 0.29 ) }
    dend_47 { pt3dadd( -178.25, -198.023, 31.4312, 0.29 ) }
    dend_47 { pt3dadd( -178.769, -199.0, 31.9018, 0.52 ) }
    dend_47 { pt3dadd( -179.007, -199.451, 32.1443, 0.52 ) }
    dend_47 { pt3dadd( -179.422, -200.261, 32.6348, 0.29 ) }
    dend_47 { pt3dadd( -179.68, -200.806, 33.0237, 0.29 ) }
    dend_47 { pt3dadd( -180.137, -201.887, 33.894, 0.59 ) }
    dend_47 { pt3dadd( -180.379, -202.487, 34.4283, 0.29 ) }
    dend_47 { pt3dadd( -180.55, -202.871, 34.8046, 0.29 ) }
    dend_47 { pt3dadd( -180.832, -203.388, 35.3527, 0.74 ) }
    dend_47 { pt3dadd( -181.332, -204.046, 36.1, 0.88 ) }
    dend_47 { pt3dadd( -181.819, -204.529, 36.6569, 0.29 ) }
    dend_47 { pt3dadd( -182.377, -204.961, 37.1654, 0.29 ) }
    dend_47 { pt3dadd( -183.158, -205.505, 37.7624, 0.96 ) }
    dend_47 { pt3dadd( -183.793, -205.951, 38.1801, 1.11 ) }
    dend_47 { pt3dadd( -184.581, -206.551, 38.6054, 1.11 ) }
    dend_47 { pt3dadd( -185.409, -207.268, 39.0046, 0.29 ) }
    dend_47 { pt3dadd( -185.942, -207.82, 39.2707, 0.22 ) }
    dend_47 { pt3dadd( -186.365, -208.387, 39.5048, 0.44 ) }
    dend_47 { pt3dadd( -186.762, -209.074, 39.7502, 0.44 ) }
    dend_47 { pt3dadd( -187.289, -210.257, 40.1045, 0.22 ) }
    dend_47 { pt3dadd( -187.573, -211.011, 40.2903, 0.22 ) }
    dend_47 { pt3dadd( -187.757, -211.583, 40.4009, 0.22 ) }
    dend_47 { pt3dadd( -187.96, -212.239, 40.5035, 0.59 ) }
    dend_47 { pt3dadd( -188.104, -212.712, 40.5739, 0.74 ) }
    dend_47 { pt3dadd( -188.534, -214.119, 40.7413, 0.29 ) }
    dend_47 { pt3dadd( -188.764, -214.87, 40.8158, 0.29 ) }
    dend_47 { pt3dadd( -189.055, -215.809, 40.8981, 0.44 ) }
    dend_47 { pt3dadd( -189.32, -216.707, 40.9797, 0.44 ) }
    dend_47 { pt3dadd( -189.655, -217.893, 41.1111, 0.52 ) }
    dend_47 { pt3dadd( -189.847, -218.566, 41.1989, 0.96 ) }
    dend_47 { pt3dadd( -190.052, -219.23, 41.3041, 1.4 ) }
    dend_47 { pt3dadd( -190.283, -219.903, 41.4053, 1.4 ) }
    dend_47 { pt3dadd( -190.907, -221.429, 41.7111, 0.29 ) }
    dend_47 { pt3dadd( -191.587, -222.882, 42.0809, 0.22 ) }
    dend_47 { pt3dadd( -191.954, -223.574, 42.3041, 0.37 ) }
    dend_47 { pt3dadd( -192.581, -224.643, 42.727, 0.37 ) }
    dend_47 { pt3dadd( -193.24, -225.669, 43.1944, 0.29 ) }
    dend_47 { pt3dadd( -194.17, -226.979, 43.8666, 0.74 ) }
    dend_47 { pt3dadd( -194.693, -227.632, 44.2381, 1.11 ) }
    dend_47 { pt3dadd( -195.296, -228.316, 44.635, 1.25 ) }
    dend_47 { pt3dadd( -195.93, -228.991, 45.0083, 1.11 ) }
    dend_47 { pt3dadd( -196.536, -229.615, 45.3267, 0.59 ) }
    dend_47 { pt3dadd( -197.322, -230.436, 45.6859, 0.29 ) }
    dend_47 { pt3dadd( -197.778, -230.955, 45.8378, 0.29 ) }
    dend_47 { pt3dadd( -198.623, -231.961, 46.0823, 0.22 ) }
    dend_47 { pt3dadd( -199.178, -232.656, 46.2322, 0.22 ) }
    dend_47 { pt3dadd( -199.486, -233.055, 46.3153, 0.66 ) }
    dend_47 { pt3dadd( -199.962, -233.679, 46.4469, 0.66 ) }
    dend_47 { pt3dadd( -200.933, -234.971, 46.7555, 0.29 ) }
    dend_47 { pt3dadd( -201.525, -235.743, 46.9541, 0.29 ) }
    dend_47 { pt3dadd( -202.151, -236.511, 47.1547, 0.29 ) }
    dend_47 { pt3dadd( -202.806, -237.268, 47.3449, 0.66 ) }
    dend_47 { pt3dadd( -203.332, -237.845, 47.4815, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_47 { pt3dadd( -204.177, -238.736, 47.6768, 0.22 ) }
    dend_47 { pt3dadd( -204.758, -239.335, 47.797, 0.22 ) }
    dend_47 { pt3dadd( -205.73, -240.346, 47.9831, 0.22 ) }
    dend_47 { pt3dadd( -207.418, -242.152, 48.2665, 0.22 ) }
    dend_47 { pt3dadd( -207.918, -242.744, 48.3428, 0.22 ) }
    dend_47 { pt3dadd( -208.43, -243.426, 48.4165, 1.11 ) }
    dend_47 { pt3dadd( -208.699, -243.856, 48.451, 1.11 ) }
    dend_47 { pt3dadd( -208.822, -244.107, 48.4734, 1.11 ) }
    dend_47 { pt3dadd( -209.062, -244.767, 48.5431, 0.66 ) }
    dend_47 { pt3dadd( -209.344, -245.864, 48.6664, 0.22 ) }
    dend_47 { pt3dadd( -209.473, -246.535, 48.7567, 0.52 ) }
    dend_47 { pt3dadd( -209.668, -248.072, 49.0028, 0.22 ) }
    dend_47 { pt3dadd( -209.82, -249.317, 49.215, 0.22 ) }
    dend_47 { pt3dadd( -209.887, -249.848, 49.311, 0.59 ) }
    dend_47 { pt3dadd( -209.974, -250.52, 49.443, 0.59 ) }
    dend_47 { pt3dadd( -210.097, -251.492, 49.6331, 0.52 ) }
    dend_47 { pt3dadd( -210.26, -252.927, 49.9113, 0.22 ) }
    dend_47 { pt3dadd( -210.338, -253.768, 50.0751, 0.22 ) }
    dend_47 { pt3dadd( -210.367, -254.27, 50.1773, 0.22 ) }
    dend_47 { pt3dadd( -210.386, -254.84, 50.2951, 0.66 ) }
    dend_47 { pt3dadd( -210.389, -255.643, 50.5221, 0.81 ) }
    dend_47 { pt3dadd( -210.336, -256.502, 50.8628, 0.59 ) }
    dend_47 { pt3dadd( -210.122, -257.672, 51.549, 1.25 ) }
    dend_47 { pt3dadd( -209.919, -258.263, 52.0087, 1.69 ) }
    dend_47 { pt3dadd( -209.765, -258.539, 52.2854, 1.92 ) }
    dend_47 { pt3dadd( -209.06, -259.377, 53.3554, 1.18 ) }
    dend_47 { pt3dadd( -208.336, -259.956, 54.3366, 0.22 ) }
    dend_47 { pt3dadd( -207.441, -260.44, 55.3997, 0.22 ) }
    dend_47 { pt3dadd( -206.812, -260.685, 56.0729, 0.22 ) }
    dend_47 { pt3dadd( -206.001, -260.955, 56.859, 0.22 ) }
    dend_47 { pt3dadd( -205.401, -261.148, 57.3875, 0.66 ) }
    dend_47 { pt3dadd( -204.943, -261.307, 57.7418, 0.66 ) }
    dend_47 { pt3dadd( -203.681, -261.762, 58.6413, 0.22 ) }
    dend_47 { pt3dadd( -203.196, -261.951, 58.9675, 0.37 ) }
    dend_47 { pt3dadd( -202.707, -262.198, 59.3148, 0.37 ) }
    dend_47 { pt3dadd( -202.321, -262.448, 59.6225, 0.22 ) }
    dend_47 { pt3dadd( -201.742, -262.893, 60.1199, 0.22 ) }
    dend_47 { pt3dadd( -206.337, -271.898, 62.8865, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 38/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -133.367, -94.3842, 1.23092, 0.37 ) }
    dend_46 { pt3dadd( -134.95, -94.0357, 1.05168, 0.37 ) }
    dend_46 { pt3dadd( -135.612, -93.9261, 0.958003, 0.37 ) }
    dend_46 { pt3dadd( -137.018, -93.7724, 0.685305, 0.29 ) }
    dend_46 { pt3dadd( -138.084, -93.7036, 0.453469, 0.44 ) }
    dend_46 { pt3dadd( -139.11, -93.6768, 0.216422, 0.66 ) }
    dend_46 { pt3dadd( -139.698, -93.6834, 0.068997, 0.81 ) }
    dend_46 { pt3dadd( -140.204, -93.7184, -0.0804209, 0.81 ) }
    dend_46 { pt3dadd( -141.765, -93.8971, -0.597683, 0.22 ) }
    dend_46 { pt3dadd( -142.25, -93.974, -0.781322, 0.22 ) }
    dend_46 { pt3dadd( -143.121, -94.1179, -1.11149, 0.74 ) }
    dend_46 { pt3dadd( -143.835, -94.2359, -1.38906, 0.88 ) }
    dend_46 { pt3dadd( -145.017, -94.4504, -1.88241, 0.22 ) }
    dend_46 { pt3dadd( -145.494, -94.5458, -2.12941, 0.22 ) }
    dend_46 { pt3dadd( -145.93, -94.6509, -2.39511, 0.22 ) }
    dend_46 { pt3dadd( -146.419, -94.7901, -2.72537, 0.74 ) }
    dend_46 { pt3dadd( -146.929, -94.9806, -3.10494, 0.88 ) }
    dend_46 { pt3dadd( -147.474, -95.2824, -3.57783, 0.88 ) }
    dend_46 { pt3dadd( -148.633, -96.1964, -4.75566, 0.22 ) }
    dend_46 { pt3dadd( -149.035, -96.5748, -5.20129, 0.22 ) }
    dend_46 { pt3dadd( -149.359, -96.9128, -5.59233, 0.74 ) }
    dend_46 { pt3dadd( -149.746, -97.4012, -6.15287, 0.74 ) }
    dend_46 { pt3dadd( -150.572, -98.4026, -7.23003, 0.29 ) }
    dend_46 { pt3dadd( -150.837, -98.706, -7.54081, 0.29 ) }
    dend_46 { pt3dadd( -151.279, -99.187, -8.00575, 0.88 ) }
    dend_46 { pt3dadd( -151.817, -99.7119, -8.53889, 1.03 ) }
    dend_46 { pt3dadd( -153.462, -101.124, -10.0941, 0.22 ) }
    dend_46 { pt3dadd( -155.047, -102.355, -11.4974, 0.22 ) }
    dend_46 { pt3dadd( -155.702, -102.8, -12.019, 0.22 ) }
    dend_46 { pt3dadd( -156.094, -103.05, -12.3154, 1.11 ) }
    dend_46 { pt3dadd( -156.573, -103.346, -12.6518, 1.11 ) }
    dend_46 { pt3dadd( -157.099, -103.635, -12.9602, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -16.1066, -176.912, 1.04722, 0.81 ) }
    dend_40 { pt3dadd( -15.198, -177.396, 0.427263, 0.81 ) }
    dend_40 { pt3dadd( -14.4702, -177.738, -0.0839654, 0.52 ) }
    dend_40 { pt3dadd( -13.4409, -178.182, -0.825196, 0.52 ) }
    dend_40 { pt3dadd( -12.9935, -178.383, -1.15355, 0.37 ) }
    dend_40 { pt3dadd( -12.1019, -178.799, -1.8149, 0.37 ) }
    dend_40 { pt3dadd( -11.7482, -178.971, -2.07859, 0.66 ) }
    dend_40 { pt3dadd( -11.4391, -179.124, -2.3252, 0.88 ) }
    dend_40 { pt3dadd( -11.1806, -179.256, -2.52763, 0.88 ) }
    dend_40 { pt3dadd( -10.519, -179.671, -3.04924, 0.59 ) }
    dend_40 { pt3dadd( -9.93045, -180.127, -3.51555, 0.66 ) }
    dend_40 { pt3dadd( -9.34153, -180.657, -3.98019, 0.74 ) }
    dend_40 { pt3dadd( -8.98076, -180.979, -4.2632, 0.74 ) }
    dend_40 { pt3dadd( -8.70042, -181.208, -4.4811, 0.52 ) }
    dend_40 { pt3dadd( -8.24443, -181.536, -4.83584, 0.29 ) }
    dend_40 { pt3dadd( -7.75366, -181.81, -5.20309, 0.96 ) }
    dend_40 { pt3dadd( -7.30342, -182.015, -5.52687, 1.03 ) }
    dend_40 { pt3dadd( -7.00241, -182.137, -5.73229, 1.03 ) }
    dend_40 { pt3dadd( -6.30838, -182.4, -6.18131, 0.66 ) }
    dend_40 { pt3dadd( -6.01747, -182.513, -6.37132, 0.52 ) }
    dend_40 { pt3dadd( -5.34997, -182.786, -6.81006, 0.59 ) }
    dend_40 { pt3dadd( -4.68892, -183.1, -7.2483, 0.59 ) }
    dend_40 { pt3dadd( -4.08316, -183.434, -7.65799, 0.52 ) }
    dend_40 { pt3dadd( -3.58476, -183.749, -8.00423, 0.52 ) }
    dend_40 { pt3dadd( -3.06597, -184.117, -8.375, 0.96 ) }
    dend_40 { pt3dadd( -2.74808, -184.352, -8.61617, 1.18 ) }
    dend_40 { pt3dadd( -2.23128, -184.73, -9.0321, 0.66 ) }
    dend_40 { pt3dadd( -1.62545, -185.136, -9.52673, 0.37 ) }
    dend_40 { pt3dadd( -1.24836, -185.362, -9.8378, 0.37 ) }
    dend_40 { pt3dadd( -0.470786, -185.777, -10.484, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_40 { pt3dadd( 0.229404, -186.128, -11.0354, 1.03 ) }
    dend_40 { pt3dadd( 0.767282, -186.395, -11.4456, 0.81 ) }
    dend_40 { pt3dadd( 1.2707, -186.642, -11.8113, 0.52 ) }
    dend_40 { pt3dadd( 1.8711, -186.935, -12.2253, 0.52 ) }
    dend_40 { pt3dadd( 2.34949, -187.176, -12.5354, 0.52 ) }
    dend_40 { pt3dadd( 3.0209, -187.565, -12.9471, 0.52 ) }
    dend_40 { pt3dadd( 3.59545, -187.938, -13.2819, 1.33 ) }
    dend_40 { pt3dadd( 3.95705, -188.2, -13.4882, 1.69 ) }
    dend_40 { pt3dadd( 4.37466, -188.542, -13.7227, 1.69 ) }
    dend_40 { pt3dadd( 5.03984, -189.154, -14.1641, 1.11 ) }
    dend_40 { pt3dadd( 5.72984, -189.831, -14.6949, 0.44 ) }
    dend_40 { pt3dadd( 6.14977, -190.248, -15.0811, 0.44 ) }
    dend_40 { pt3dadd( 6.47443, -190.571, -15.4175, 0.29 ) }
    dend_40 { pt3dadd( 6.82287, -190.921, -15.8359, 0.29 ) }
    dend_40 { pt3dadd( 7.57578, -191.666, -16.8434, 1.03 ) }
    dend_40 { pt3dadd( 7.78469, -191.868, -17.1536, 1.4 ) }
    dend_40 { pt3dadd( 7.99922, -192.089, -17.507, 1.4 ) }
    dend_40 { pt3dadd( 8.6547, -192.869, -18.6858, 0.22 ) }
    dend_40 { pt3dadd( 8.99929, -193.307, -19.3156, 0.52 ) }
    dend_40 { pt3dadd( 9.17166, -193.534, -19.6218, 0.52 ) }
    dend_40 { pt3dadd( 9.4764, -193.967, -20.1346, 0.29 ) }
    dend_40 { pt3dadd( 9.89991, -194.597, -20.8578, 0.29 ) }
    dend_40 { pt3dadd( 10.164, -194.989, -21.2933, 0.29 ) }
    dend_40 { pt3dadd( 10.4289, -195.408, -21.7377, 0.66 ) }
    dend_40 { pt3dadd( 10.6351, -195.723, -22.047, 0.81 ) }
    dend_40 { pt3dadd( 10.7889, -195.954, -22.2651, 0.81 ) }
    dend_40 { pt3dadd( 11.0598, -196.312, -22.6082, 0.59 ) }
    dend_40 { pt3dadd( 11.3743, -196.676, -22.9849, 0.29 ) }
    dend_40 { pt3dadd( 11.686, -197.039, -23.3247, 0.29 ) }
    dend_40 { pt3dadd( 12.0498, -197.52, -23.686, 0.66 ) }
    dend_40 { pt3dadd( 12.3435, -197.95, -23.9293, 0.66 ) }
    dend_40 { pt3dadd( 12.7567, -198.62, -24.1993, 0.29 ) }
    dend_40 { pt3dadd( 13.004, -199.058, -24.3148, 0.29 ) }
    dend_40 { pt3dadd( 13.4377, -199.864, -24.4529, 0.66 ) }
    dend_40 { pt3dadd( 13.7501, -200.438, -24.5094, 0.66 ) }
    dend_40 { pt3dadd( 14.1519, -201.194, -24.5316, 0.44 ) }
    dend_40 { pt3dadd( 14.5436, -201.967, -24.5103, 1.47 ) }
    dend_40 { pt3dadd( 14.8413, -202.593, -24.4676, 1.84 ) }
    dend_40 { pt3dadd( 15.0071, -202.961, -24.4376, 1.84 ) }
    dend_40 { pt3dadd( 15.1017, -203.189, -24.4272, 1.84 ) }
    dend_40 { pt3dadd( 15.3438, -203.771, -24.4139, 1.33 ) }
    dend_40 { pt3dadd( 15.6454, -204.471, -24.423, 0.52 ) }
    dend_40 { pt3dadd( 15.8085, -204.839, -24.436, 0.52 ) }
    dend_40 { pt3dadd( 16.0321, -205.339, -24.4559, 0.52 ) }
    dend_40 { pt3dadd( 16.3934, -206.136, -24.4816, 0.29 ) }
    dend_40 { pt3dadd( 16.587, -206.549, -24.4927, 0.29 ) }
    dend_40 { pt3dadd( 16.8821, -207.137, -24.5037, 0.29 ) }
    dend_40 { pt3dadd( 17.1724, -207.678, -24.5119, 0.44 ) }
    dend_40 { pt3dadd( 17.6023, -208.402, -24.541, 0.44 ) }
    dend_40 { pt3dadd( 17.9897, -208.989, -24.5993, 0.44 ) }
    dend_40 { pt3dadd( 18.2802, -209.395, -24.6708, 1.33 ) }
    dend_40 { pt3dadd( 18.6067, -209.859, -24.7852, 1.84 ) }
    dend_40 { pt3dadd( 18.9159, -210.267, -24.9211, 1.84 ) }
    dend_40 { pt3dadd( 19.43, -210.896, -25.1743, 0.96 ) }
    dend_40 { pt3dadd( 20.097, -211.659, -25.5337, 0.22 ) }
    dend_40 { pt3dadd( 20.6602, -212.272, -25.8571, 0.22 ) }
    dend_40 { pt3dadd( 21.4508, -213.094, -26.3376, 0.22 ) }
    dend_40 { pt3dadd( 21.9262, -213.552, -26.6353, 0.22 ) }
    dend_40 { pt3dadd( 22.4652, -214.018, -26.9796, 0.22 ) }
    dend_40 { pt3dadd( 22.9367, -214.389, -27.2951, 0.44 ) }
    dend_40 { pt3dadd( 23.4911, -214.79, -27.6893, 0.88 ) }
    dend_40 { pt3dadd( 24.0136, -215.157, -28.0919, 1.03 ) }
    dend_40 { pt3dadd( 24.3511, -215.394, -28.3637, 1.03 ) }
    dend_40 { pt3dadd( 24.7416, -215.693, -28.6871, 0.88 ) }
    dend_40 { pt3dadd( 25.1291, -215.973, -29.0146, 0.29 ) }
    dend_40 { pt3dadd( 25.4136, -216.161, -29.242, 0.29 ) }
    dend_40 { pt3dadd( 25.8654, -216.421, -29.5633, 0.29 ) }
    dend_40 { pt3dadd( 26.4515, -216.72, -29.9385, 0.37 ) }
    dend_40 { pt3dadd( 26.9078, -216.924, -30.1964, 0.37 ) }
    dend_40 { pt3dadd( 27.3184, -217.083, -30.4047, 0.29 ) }
    dend_40 { pt3dadd( 28.1234, -217.344, -30.7744, 0.29 ) }
    dend_40 { pt3dadd( 28.7558, -217.53, -31.061, 0.81 ) }
    dend_40 { pt3dadd( 29.1084, -217.634, -31.2259, 0.81 ) }
    dend_40 { pt3dadd( 29.7867, -217.872, -31.544, 0.59 ) }
    dend_40 { pt3dadd( 30.2856, -218.104, -31.7677, 0.29 ) }
    dend_40 { pt3dadd( 30.7173, -218.346, -31.951, 0.29 ) }
    dend_40 { pt3dadd( 31.174, -218.637, -32.1332, 0.66 ) }
    dend_40 { pt3dadd( 31.5165, -218.866, -32.2535, 0.66 ) }
    dend_40 { pt3dadd( 32.5538, -219.573, -32.5665, 0.29 ) }
    dend_40 { pt3dadd( 33.226, -220.02, -32.7251, 0.29 ) }
    dend_40 { pt3dadd( 33.9419, -220.485, -32.8367, 0.29 ) }
    dend_40 { pt3dadd( 34.498, -220.844, -32.8831, 0.29 ) }
    dend_40 { pt3dadd( 35.0626, -221.196, -32.8917, 0.88 ) }
    dend_40 { pt3dadd( 35.3187, -221.353, -32.8916, 0.88 ) }
    dend_40 { pt3dadd( 36.0109, -221.774, -32.8666, 0.66 ) }
    dend_40 { pt3dadd( 36.9746, -222.345, -32.7943, 0.29 ) }
    dend_40 { pt3dadd( 37.4781, -222.646, -32.7366, 0.29 ) }
    dend_40 { pt3dadd( 38.0741, -223.015, -32.6647, 0.66 ) }
    dend_40 { pt3dadd( 38.5658, -223.338, -32.6253, 0.44 ) }
    dend_40 { pt3dadd( 44.664, -228.178, -34.6568, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -16.1066, -176.912, 1.04722, 2.14 ) }
    dend_35 { pt3dadd( -16.7433, -178.5, 0.916443, 2.14 ) }
    dend_35 { pt3dadd( -17.258, -179.946, 0.810505, 1.33 ) }
    dend_35 { pt3dadd( -17.7114, -181.369, 0.723006, 1.03 ) }
    dend_35 { pt3dadd( -17.9981, -182.448, 0.666769, 1.03 ) }
    dend_35 { pt3dadd( -18.1747, -183.183, 0.630813, 1.25 ) }
    dend_35 { pt3dadd( -18.3379, -183.902, 0.598655, 1.25 ) }
    dend_35 { pt3dadd( -18.5656, -185.258, 0.544648, 0.96 ) }
    dend_35 { pt3dadd( -18.716, -186.356, 0.524091, 0.96 ) }
    dend_35 { pt3dadd( -18.9878, -188.281, 0.510723, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_35 { pt3dadd( -19.1448, -189.417, 0.528839, 0.88 ) }
    dend_35 { pt3dadd( -19.2614, -190.492, 0.555419, 0.96 ) }
    dend_35 { pt3dadd( -19.3526, -191.718, 0.593693, 0.96 ) }
    dend_35 { pt3dadd( -19.4018, -192.765, 0.643237, 0.74 ) }
    dend_35 { pt3dadd( -19.4271, -193.774, 0.70466, 0.52 ) }
    dend_35 { pt3dadd( -19.4327, -194.611, 0.770657, 0.52 ) }
    dend_35 { pt3dadd( -19.4253, -195.64, 0.866781, 0.37 ) }
    dend_35 { pt3dadd( -19.4149, -196.459, 0.945219, 0.74 ) }
    dend_35 { pt3dadd( -19.42, -197.349, 1.03793, 0.74 ) }
    dend_35 { pt3dadd( -19.4325, -198.353, 1.15813, 1.03 ) }
    dend_35 { pt3dadd( -19.4501, -198.992, 1.24201, 1.18 ) }
    dend_35 { pt3dadd( -19.4896, -199.875, 1.35525, 1.33 ) }
    dend_35 { pt3dadd( -19.5345, -200.542, 1.44816, 1.33 ) }
    dend_35 { pt3dadd( -19.5608, -201.253, 1.57866, 1.18 ) }
    dend_35 { pt3dadd( -19.5605, -202.291, 1.87445, 0.96 ) }
    dend_35 { pt3dadd( -19.5315, -203.086, 2.18455, 0.81 ) }
    dend_35 { pt3dadd( -19.4723, -203.889, 2.55471, 0.81 ) }
    dend_35 { pt3dadd( -19.363, -204.77, 2.99608, 0.81 ) }
    dend_35 { pt3dadd( -19.2503, -205.541, 3.38906, 0.59 ) }
    dend_35 { pt3dadd( -19.054, -206.814, 4.00531, 0.66 ) }
    dend_35 { pt3dadd( -18.9993, -207.357, 4.24725, 0.66 ) }
    dend_35 { pt3dadd( -18.9961, -208.331, 4.60937, 1.18 ) }
    dend_35 { pt3dadd( -19.1675, -209.336, 4.86708, 1.47 ) }
    dend_35 { pt3dadd( -19.4764, -210.206, 4.99395, 1.55 ) }
    dend_35 { pt3dadd( -19.825, -210.839, 5.03802, 1.55 ) }
    dend_35 { pt3dadd( -20.4489, -211.695, 5.06177, 1.4 ) }
    dend_35 { pt3dadd( -21.34, -212.691, 5.11377, 1.18 ) }
    dend_35 { pt3dadd( -22.4164, -213.746, 5.20089, 0.66 ) }
    dend_35 { pt3dadd( -23.3143, -214.575, 5.29895, 0.74 ) }
    dend_35 { pt3dadd( -24.4786, -215.618, 5.46318, 1.18 ) }
    dend_35 { pt3dadd( -25.4341, -216.457, 5.64528, 1.25 ) }
    dend_35 { pt3dadd( -26.4238, -217.322, 5.8976, 1.25 ) }
    dend_35 { pt3dadd( -27.2483, -218.041, 6.17744, 1.25 ) }
    dend_35 { pt3dadd( -28.0766, -218.714, 6.51376, 1.33 ) }
    dend_35 { pt3dadd( -28.5485, -219.056, 6.73971, 1.33 ) }
    dend_35 { pt3dadd( -29.2941, -219.529, 7.17934, 1.03 ) }
    dend_35 { pt3dadd( -29.9233, -219.872, 7.61948, 0.74 ) }
    dend_35 { pt3dadd( -30.4192, -220.11, 7.99907, 0.59 ) }
    dend_35 { pt3dadd( -31.0648, -220.425, 8.52282, 0.59 ) }
    dend_35 { pt3dadd( -31.7029, -220.782, 9.0597, 0.88 ) }
    dend_35 { pt3dadd( -32.3229, -221.255, 9.6239, 1.18 ) }
    dend_35 { pt3dadd( -32.8781, -221.822, 10.1984, 1.18 ) }
    dend_35 { pt3dadd( -33.3482, -222.423, 10.7412, 1.18 ) }
    dend_35 { pt3dadd( -33.7795, -223.085, 11.2605, 1.18 ) }
    dend_35 { pt3dadd( -34.109, -223.661, 11.6564, 1.18 ) }
    dend_35 { pt3dadd( -34.5644, -224.542, 12.1963, 0.81 ) }
    dend_35 { pt3dadd( -34.8386, -225.122, 12.5099, 0.59 ) }
    dend_35 { pt3dadd( -35.0923, -225.726, 12.7858, 0.52 ) }
    dend_35 { pt3dadd( -35.5846, -227.01, 13.2806, 0.96 ) }
    dend_35 { pt3dadd( -35.8716, -227.867, 13.5417, 1.18 ) }
    dend_35 { pt3dadd( -36.1168, -228.663, 13.7329, 1.18 ) }
    dend_35 { pt3dadd( -36.4444, -229.747, 13.9341, 0.88 ) }
    dend_35 { pt3dadd( -36.7712, -230.838, 14.0982, 0.59 ) }
    dend_35 { pt3dadd( -37.0394, -231.818, 14.2228, 0.59 ) }
    dend_35 { pt3dadd( -37.3302, -232.959, 14.3566, 0.59 ) }
    dend_35 { pt3dadd( -37.6005, -234.024, 14.4827, 0.74 ) }
    dend_35 { pt3dadd( -37.9173, -235.215, 14.6327, 1.33 ) }
    dend_35 { pt3dadd( -38.2035, -236.251, 14.7694, 1.69 ) }
    dend_35 { pt3dadd( -38.5727, -237.53, 14.9458, 1.77 ) }
    dend_35 { pt3dadd( -38.784, -238.283, 15.045, 1.77 ) }
    dend_35 { pt3dadd( -39.0522, -239.23, 15.1441, 1.77 ) }
    dend_35 { pt3dadd( -39.2785, -240.139, 15.1968, 1.47 ) }
    dend_35 { pt3dadd( -39.4973, -241.146, 15.2082, 1.03 ) }
    dend_35 { pt3dadd( -39.7033, -242.135, 15.1873, 1.03 ) }
    dend_35 { pt3dadd( -39.9512, -243.29, 15.1344, 1.03 ) }
    dend_35 { pt3dadd( -40.1949, -244.487, 15.071, 1.11 ) }
    dend_35 { pt3dadd( -40.4054, -245.614, 15.0138, 1.33 ) }
    dend_35 { pt3dadd( -40.5538, -246.641, 14.9644, 1.03 ) }
    dend_35 { pt3dadd( -40.6794, -248.029, 14.8987, 0.81 ) }
    dend_35 { pt3dadd( -40.7229, -249.001, 14.8586, 1.03 ) }
    dend_35 { pt3dadd( -40.7254, -250.222, 14.8182, 0.81 ) }
    dend_35 { pt3dadd( -40.7043, -250.888, 14.8045, 0.81 ) }
    dend_35 { pt3dadd( -40.6072, -252.687, 14.7632, 0.74 ) }
    dend_35 { pt3dadd( -40.4721, -254.495, 14.7171, 0.74 ) }
    dend_35 { pt3dadd( -40.3323, -255.947, 14.6705, 0.74 ) }
    dend_35 { pt3dadd( -40.1313, -258.068, 14.6046, 0.74 ) }
    dend_35 { pt3dadd( -40.0297, -259.533, 14.5633, 0.74 ) }
    dend_35 { pt3dadd( -40.0014, -260.485, 14.5504, 1.18 ) }
    dend_35 { pt3dadd( -40.0414, -261.466, 14.5746, 1.4 ) }
    dend_35 { pt3dadd( -40.1854, -262.486, 14.6606, 1.4 ) }
    dend_35 { pt3dadd( -40.4421, -263.457, 14.8151, 1.47 ) }
    dend_35 { pt3dadd( -40.91, -264.535, 15.0855, 1.55 ) }
    dend_35 { pt3dadd( -41.2982, -265.184, 15.2976, 1.55 ) }
    dend_35 { pt3dadd( -42.0485, -266.197, 15.7045, 1.11 ) }
    dend_35 { pt3dadd( -43.0541, -267.34, 16.2551, 0.88 ) }
    dend_35 { pt3dadd( -43.7869, -268.085, 16.6869, 0.88 ) }
    dend_35 { pt3dadd( -44.6257, -268.853, 17.2107, 1.03 ) }
    dend_35 { pt3dadd( -45.2062, -269.355, 17.5797, 1.03 ) }
    dend_35 { pt3dadd( -45.6638, -269.762, 17.8792, 1.03 ) }
    dend_35 { pt3dadd( -46.3165, -270.443, 18.3537, 0.81 ) }
    dend_35 { pt3dadd( -47.047, -271.401, 18.9306, 0.59 ) }
    dend_35 { pt3dadd( -47.8221, -272.709, 19.5843, 0.59 ) }
    dend_35 { pt3dadd( -48.2928, -273.722, 20.0109, 0.88 ) }
    dend_35 { pt3dadd( -48.6279, -274.656, 20.3468, 0.88 ) }
    dend_35 { pt3dadd( -49.0368, -276.118, 20.7846, 0.74 ) }
    dend_35 { pt3dadd( -49.249, -277.123, 21.0294, 0.96 ) }
    dend_35 { pt3dadd( -49.417, -278.109, 21.2044, 1.11 ) }
    dend_35 { pt3dadd( -49.5093, -278.817, 21.3021, 1.11 ) }
    dend_35 { pt3dadd( -49.6042, -279.561, 21.3759, 0.88 ) }
    dend_35 { pt3dadd( -49.7697, -280.583, 21.4264, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_35 { pt3dadd( -49.9103, -281.301, 21.4453, 0.66 ) }
    dend_35 { pt3dadd( -50.1432, -282.508, 21.479, 0.96 ) }
    dend_35 { pt3dadd( -50.3146, -283.431, 21.4982, 0.96 ) }
    dend_35 { pt3dadd( -50.5251, -284.611, 21.5128, 0.66 ) }
    dend_35 { pt3dadd( -50.7176, -285.688, 21.5244, 0.74 ) }
    dend_35 { pt3dadd( -51.0086, -287.416, 21.5575, 0.96 ) }
    dend_35 { pt3dadd( -51.1584, -288.414, 21.6017, 0.96 ) }
    dend_35 { pt3dadd( -51.3066, -289.455, 21.6512, 0.96 ) }
    dend_35 { pt3dadd( -51.4942, -290.648, 21.6936, 0.66 ) }
    dend_35 { pt3dadd( -51.7891, -292.408, 21.7266, 0.66 ) }
    dend_35 { pt3dadd( -52.0507, -294.087, 21.695, 0.66 ) }
    dend_35 { pt3dadd( -52.1978, -295.089, 21.6374, 0.81 ) }
    dend_35 { pt3dadd( -52.4352, -296.839, 21.4852, 0.74 ) }
    dend_35 { pt3dadd( -52.6054, -298.224, 21.3225, 0.74 ) }
    dend_35 { pt3dadd( -52.7535, -299.683, 21.1087, 0.96 ) }
    dend_35 { pt3dadd( -52.855, -300.907, 20.9018, 0.96 ) }
    dend_35 { pt3dadd( -52.9173, -301.719, 20.7707, 1.62 ) }
    dend_35 { pt3dadd( -52.9663, -302.166, 20.7266, 1.62 ) }
    dend_35 { pt3dadd( -53.0458, -302.757, 20.7315, 1.62 ) }
    dend_35 { pt3dadd( -53.1796, -303.623, 20.7989, 1.4 ) }
    dend_35 { pt3dadd( -53.3483, -304.531, 20.9164, 0.88 ) }
    dend_35 { pt3dadd( -53.571, -305.694, 21.0988, 0.59 ) }
    dend_35 { pt3dadd( -53.8577, -307.274, 21.3614, 0.81 ) }
    dend_35 { pt3dadd( -54.0853, -308.547, 21.5838, 0.96 ) }
    dend_35 { pt3dadd( -54.259, -309.574, 21.7514, 0.96 ) }
    dend_35 { pt3dadd( -54.4543, -310.812, 21.9238, 1.11 ) }
    dend_35 { pt3dadd( -54.5865, -311.623, 22.0265, 1.11 ) }
    dend_35 { pt3dadd( -54.7047, -312.249, 22.1021, 1.33 ) }
    dend_35 { pt3dadd( -54.8338, -312.859, 22.1752, 1.33 ) }
    dend_35 { pt3dadd( -55.1013, -313.854, 22.3375, 1.03 ) }
    dend_35 { pt3dadd( -55.4348, -314.838, 22.5506, 0.66 ) }
    dend_35 { pt3dadd( -55.7165, -315.574, 22.7363, 0.37 ) }
    dend_35 { pt3dadd( -55.9302, -316.111, 22.8786, 0.37 ) }
    dend_35 { pt3dadd( -56.1859, -316.814, 23.0566, 0.37 ) }
    dend_35 { pt3dadd( -56.4124, -317.482, 23.2214, 1.03 ) }
    dend_35 { pt3dadd( -56.656, -318.225, 23.4009, 1.25 ) }
    dend_35 { pt3dadd( -56.8089, -318.776, 23.5224, 1.25 ) }
    dend_35 { pt3dadd( -57.0431, -319.803, 23.7182, 0.96 ) }
    dend_35 { pt3dadd( -57.2947, -321.094, 23.9312, 0.52 ) }
    dend_35 { pt3dadd( -57.5105, -322.256, 24.1043, 0.52 ) }
    dend_35 { pt3dadd( -57.7902, -323.873, 24.3157, 0.52 ) }
    dend_35 { pt3dadd( -57.9819, -325.189, 24.4607, 0.81 ) }
    dend_35 { pt3dadd( -58.1128, -326.149, 24.5654, 1.03 ) }
    dend_35 { pt3dadd( -58.2374, -327.016, 24.6657, 1.03 ) }
    dend_35 { pt3dadd( -58.34, -327.684, 24.7459, 0.81 ) }
    dend_35 { pt3dadd( -58.4816, -328.491, 24.8467, 0.81 ) }
    dend_35 { pt3dadd( -58.7236, -329.625, 24.9967, 0.59 ) }
    dend_35 { pt3dadd( -59.0562, -330.816, 25.1763, 0.44 ) }
    dend_35 { pt3dadd( -59.5963, -332.318, 25.467, 0.88 ) }
    dend_35 { pt3dadd( -59.8819, -332.964, 25.6213, 0.88 ) }
    dend_35 { pt3dadd( -60.3202, -333.801, 25.8577, 0.59 ) }
    dend_35 { pt3dadd( -60.7945, -334.518, 26.117, 0.59 ) }
    dend_35 { pt3dadd( -61.5708, -335.421, 26.5277, 0.59 ) }
    dend_35 { pt3dadd( -62.4279, -336.22, 26.9644, 0.81 ) }
    dend_35 { pt3dadd( -62.9233, -336.604, 27.2151, 0.81 ) }
    dend_35 { pt3dadd( -63.326, -336.881, 27.4177, 0.81 ) }
    dend_35 { pt3dadd( -64.2445, -337.423, 27.8718, 0.59 ) }
    dend_35 { pt3dadd( -65.2622, -337.914, 28.3696, 0.88 ) }
    dend_35 { pt3dadd( -66.2826, -338.315, 28.86, 1.03 ) }
    dend_35 { pt3dadd( -67.2639, -338.644, 29.3224, 1.03 ) }
    dend_35 { pt3dadd( -68.0761, -338.87, 29.7095, 0.59 ) }
    dend_35 { pt3dadd( -68.8051, -339.051, 30.0687, 0.59 ) }
    dend_35 { pt3dadd( -69.4201, -339.206, 30.3823, 0.59 ) }
    dend_35 { pt3dadd( -69.9403, -339.337, 30.6687, 0.59 ) }
    dend_35 { pt3dadd( -70.4892, -339.504, 30.98, 0.59 ) }
    dend_35 { pt3dadd( -71.1991, -339.761, 31.3979, 0.44 ) }
    dend_35 { pt3dadd( -72.2501, -340.229, 32.0361, 0.81 ) }
    dend_35 { pt3dadd( -73.1149, -340.691, 32.5822, 1.11 ) }
    dend_35 { pt3dadd( -74.0427, -341.278, 33.1959, 0.81 ) }
    dend_35 { pt3dadd( -74.9585, -341.955, 33.8216, 0.66 ) }
    dend_35 { pt3dadd( -75.3738, -342.305, 34.1104, 0.66 ) }
    dend_35 { pt3dadd( -75.8687, -342.781, 34.4589, 0.52 ) }
    dend_35 { pt3dadd( -76.4272, -343.376, 34.8633, 0.52 ) }
    dend_35 { pt3dadd( -76.9852, -344.049, 35.2761, 0.52 ) }
    dend_35 { pt3dadd( -77.5401, -344.771, 35.6935, 0.52 ) }
    dend_35 { pt3dadd( -77.8707, -345.248, 35.9473, 1.11 ) }
    dend_35 { pt3dadd( -78.6011, -346.408, 36.5005, 1.4 ) }
    dend_35 { pt3dadd( -78.994, -347.102, 36.7934, 1.84 ) }
    dend_35 { pt3dadd( -79.428, -347.94, 37.0977, 2.43 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 79/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.09614, -79.1042, -8.2474, 0.66 ) }
    dend_32 { pt3dadd( -9.22274, -80.7129, -8.17792, 0.66 ) }
    dend_32 { pt3dadd( -9.31621, -81.7041, -8.14427, 0.37 ) }
    dend_32 { pt3dadd( -9.36602, -82.3674, -8.14387, 0.81 ) }
    dend_32 { pt3dadd( -9.4093, -83.2255, -8.15625, 1.03 ) }
    dend_32 { pt3dadd( -9.4458, -83.9716, -8.17301, 1.11 ) }
    dend_32 { pt3dadd( -9.48626, -84.7682, -8.20549, 0.88 ) }
    dend_32 { pt3dadd( -9.52596, -85.6866, -8.2772, 0.59 ) }
    dend_32 { pt3dadd( -9.53681, -86.7572, -8.38798, 0.29 ) }
    dend_32 { pt3dadd( -9.51542, -87.5346, -8.48366, 0.29 ) }
    dend_32 { pt3dadd( -9.4861, -87.8914, -8.53107, 0.29 ) }
    dend_32 { pt3dadd( -9.35279, -88.6974, -8.65251, 0.74 ) }
    dend_32 { pt3dadd( -9.15757, -89.4495, -8.77347, 1.11 ) }
    dend_32 { pt3dadd( -9.00033, -89.9247, -8.84667, 1.11 ) }
    dend_32 { pt3dadd( -8.74567, -90.6249, -8.95028, 1.11 ) }
    dend_32 { pt3dadd( -8.43788, -91.4362, -9.03261, 0.81 ) }
    dend_32 { pt3dadd( -7.94555, -92.7738, -9.10588, 0.44 ) }
    dend_32 { pt3dadd( -7.51598, -94.0423, -9.1197, 0.59 ) }
    dend_32 { pt3dadd( -7.29556, -94.805, -9.10642, 0.88 ) }
    dend_32 { pt3dadd( -7.11576, -95.6062, -9.06972, 0.88 ) }
    dend_32 { pt3dadd( -6.93281, -96.7512, -8.99211, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -6.83116, -97.8727, -8.8828, 0.44 ) }
    dend_32 { pt3dadd( -6.8115, -98.7552, -8.76701, 1.03 ) }
    dend_32 { pt3dadd( -6.82593, -99.4932, -8.66417, 0.74 ) }
    dend_32 { pt3dadd( -6.86045, -100.418, -8.54698, 0.52 ) }
    dend_32 { pt3dadd( -6.8926, -101.134, -8.4711, 0.88 ) }
    dend_32 { pt3dadd( -6.92378, -101.793, -8.44723, 1.18 ) }
    dend_32 { pt3dadd( -6.94883, -102.364, -8.43834, 1.18 ) }
    dend_32 { pt3dadd( -6.98311, -103.018, -8.43783, 0.88 ) }
    dend_32 { pt3dadd( -7.04376, -104.156, -8.45172, 0.29 ) }
    dend_32 { pt3dadd( -7.09312, -105.017, -8.47577, 0.29 ) }
    dend_32 { pt3dadd( -7.16548, -106.25, -8.54042, 1.03 ) }
    dend_32 { pt3dadd( -7.20473, -107.069, -8.5962, 1.47 ) }
    dend_32 { pt3dadd( -7.23025, -107.586, -8.63261, 1.47 ) }
    dend_32 { pt3dadd( -7.25405, -108.155, -8.67224, 1.47 ) }
    dend_32 { pt3dadd( -7.26966, -109.004, -8.72428, 1.25 ) }
    dend_32 { pt3dadd( -7.27595, -110.043, -8.7713, 0.44 ) }
    dend_32 { pt3dadd( -7.26534, -110.9, -8.79008, 0.44 ) }
    dend_32 { pt3dadd( -7.24466, -111.738, -8.81116, 0.44 ) }
    dend_32 { pt3dadd( -7.22746, -112.169, -8.82213, 0.59 ) }
    dend_32 { pt3dadd( -7.1838, -113.181, -8.8484, 0.59 ) }
    dend_32 { pt3dadd( -7.1352, -113.952, -8.86858, 0.37 ) }
    dend_32 { pt3dadd( -7.09312, -114.596, -8.88486, 0.81 ) }
    dend_32 { pt3dadd( -7.05735, -115.186, -8.89181, 1.03 ) }
    dend_32 { pt3dadd( -7.03558, -115.617, -8.8902, 1.03 ) }
    dend_32 { pt3dadd( -7.02425, -116.151, -8.87969, 0.59 ) }
    dend_32 { pt3dadd( -7.00578, -117.021, -8.84666, 0.22 ) }
    dend_32 { pt3dadd( -6.97588, -117.566, -8.81737, 0.22 ) }
    dend_32 { pt3dadd( -6.92329, -118.21, -8.77628, 0.22 ) }
    dend_32 { pt3dadd( -6.85393, -118.903, -8.72741, 0.66 ) }
    dend_32 { pt3dadd( -6.7565, -119.733, -8.66849, 0.88 ) }
    dend_32 { pt3dadd( -6.58525, -120.944, -8.58007, 0.88 ) }
    dend_32 { pt3dadd( -6.37404, -122.352, -8.4781, 0.96 ) }
    dend_32 { pt3dadd( -6.20741, -123.413, -8.41811, 1.18 ) }
    dend_32 { pt3dadd( -6.08264, -124.273, -8.3911, 0.66 ) }
    dend_32 { pt3dadd( -5.98603, -124.978, -8.37451, 0.52 ) }
    dend_32 { pt3dadd( -5.82692, -126.325, -8.363, 0.52 ) }
    dend_32 { pt3dadd( -5.72465, -127.365, -8.36853, 0.81 ) }
    dend_32 { pt3dadd( -5.63107, -128.414, -8.38686, 0.52 ) }
    dend_32 { pt3dadd( -5.56071, -129.199, -8.39789, 0.52 ) }
    dend_32 { pt3dadd( -5.46651, -130.128, -8.42807, 1.47 ) }
    dend_32 { pt3dadd( -5.35377, -131.08, -8.47897, 1.77 ) }
    dend_32 { pt3dadd( -5.24801, -131.815, -8.54546, 1.77 ) }
    dend_32 { pt3dadd( -5.17083, -132.239, -8.59142, 1.77 ) }
    dend_32 { pt3dadd( -5.01835, -132.94, -8.66727, 1.25 ) }
    dend_32 { pt3dadd( -4.82396, -133.752, -8.75287, 0.81 ) }
    dend_32 { pt3dadd( -4.5919, -134.739, -8.86236, 0.44 ) }
    dend_32 { pt3dadd( -4.29564, -135.976, -8.99224, 0.37 ) }
    dend_32 { pt3dadd( -4.11504, -136.737, -9.06652, 0.52 ) }
    dend_32 { pt3dadd( -3.88524, -137.657, -9.14605, 0.52 ) }
    dend_32 { pt3dadd( -3.70335, -138.345, -9.1978, 0.66 ) }
    dend_32 { pt3dadd( -3.44525, -139.252, -9.26185, 0.66 ) }
    dend_32 { pt3dadd( -3.08727, -140.412, -9.38294, 0.88 ) }
    dend_32 { pt3dadd( -2.7571, -141.388, -9.5132, 1.25 ) }
    dend_32 { pt3dadd( -2.55389, -141.938, -9.61193, 1.25 ) }
    dend_32 { pt3dadd( -2.3603, -142.412, -9.71316, 1.25 ) }
    dend_32 { pt3dadd( -1.94991, -143.343, -9.94153, 1.11 ) }
    dend_32 { pt3dadd( -1.56784, -144.166, -10.1648, 0.74 ) }
    dend_32 { pt3dadd( -1.21844, -144.889, -10.3791, 0.29 ) }
    dend_32 { pt3dadd( -1.01079, -145.317, -10.5158, 0.29 ) }
    dend_32 { pt3dadd( -0.522523, -146.361, -10.8403, 0.44 ) }
    dend_32 { pt3dadd( -0.259782, -146.959, -11.0057, 0.88 ) }
    dend_32 { pt3dadd( -0.0529863, -147.501, -11.1273, 1.33 ) }
    dend_32 { pt3dadd( 0.158262, -148.143, -11.2344, 1.47 ) }
    dend_32 { pt3dadd( 0.352652, -148.838, -11.3173, 1.47 ) }
    dend_32 { pt3dadd( 0.506338, -149.455, -11.3661, 1.25 ) }
    dend_32 { pt3dadd( 0.697008, -150.298, -11.4056, 0.44 ) }
    dend_32 { pt3dadd( 0.949955, -151.532, -11.3886, 0.29 ) }
    dend_32 { pt3dadd( 1.11955, -152.509, -11.3202, 0.29 ) }
    dend_32 { pt3dadd( 1.25912, -153.504, -11.206, 0.29 ) }
    dend_32 { pt3dadd( 1.34225, -154.297, -11.0863, 0.74 ) }
    dend_32 { pt3dadd( 1.37695, -154.857, -10.9867, 0.88 ) }
    dend_32 { pt3dadd( 1.38043, -155.992, -10.7598, 0.96 ) }
    dend_32 { pt3dadd( 1.31696, -156.961, -10.5665, 1.03 ) }
    dend_32 { pt3dadd( 1.2204, -157.691, -10.4447, 1.03 ) }
    dend_32 { pt3dadd( 1.08366, -158.417, -10.3349, 0.59 ) }
    dend_32 { pt3dadd( 0.921856, -159.192, -10.2298, 0.22 ) }
    dend_32 { pt3dadd( 0.823129, -159.682, -10.1791, 0.22 ) }
    dend_32 { pt3dadd( 0.621471, -160.81, -10.1228, 0.96 ) }
    dend_32 { pt3dadd( 0.509208, -161.48, -10.1087, 1.11 ) }
    dend_32 { pt3dadd( 0.393143, -162.216, -10.0724, 1.11 ) }
    dend_32 { pt3dadd( 0.298454, -162.919, -10.0068, 0.59 ) }
    dend_32 { pt3dadd( 0.221492, -163.633, -9.91661, 0.29 ) }
    dend_32 { pt3dadd( 0.17052, -164.243, -9.8174, 0.29 ) }
    dend_32 { pt3dadd( 0.127296, -164.752, -9.71854, 0.29 ) }
    dend_32 { pt3dadd( 0.0344822, -165.853, -9.48031, 0.44 ) }
    dend_32 { pt3dadd( -0.0484836, -166.786, -9.25284, 0.66 ) }
    dend_32 { pt3dadd( -0.136636, -167.77, -9.0021, 0.66 ) }
    dend_32 { pt3dadd( -0.190533, -168.482, -8.82522, 0.81 ) }
    dend_32 { pt3dadd( -0.240422, -169.274, -8.64584, 0.81 ) }
    dend_32 { pt3dadd( -0.280559, -170.031, -8.48808, 0.52 ) }
    dend_32 { pt3dadd( -0.346947, -170.994, -8.32141, 0.66 ) }
    dend_32 { pt3dadd( -0.406396, -171.708, -8.20657, 0.66 ) }
    dend_32 { pt3dadd( -0.529521, -172.91, -8.08424, 0.37 ) }
    dend_32 { pt3dadd( -0.651314, -173.976, -8.03808, 0.37 ) }
    dend_32 { pt3dadd( -0.761876, -174.828, -8.04737, 1.03 ) }
    dend_32 { pt3dadd( -0.876948, -175.686, -8.12466, 1.47 ) }
    dend_32 { pt3dadd( -1.00106, -176.53, -8.26373, 1.62 ) }
    dend_32 { pt3dadd( -1.25147, -178.037, -8.61987, 0.88 ) }
    dend_32 { pt3dadd( -1.45777, -179.018, -8.95052, 0.59 ) }
    dend_32 { pt3dadd( -1.65681, -179.766, -9.27929, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_32 { pt3dadd( -2.06422, -180.97, -9.90309, 0.29 ) }
    dend_32 { pt3dadd( -2.21355, -181.324, -10.0932, 0.29 ) }
    dend_32 { pt3dadd( -2.47146, -181.83, -10.3599, 0.29 ) }
    dend_32 { pt3dadd( -2.98744, -182.767, -10.7955, 0.29 ) }
    dend_32 { pt3dadd( -3.50352, -183.65, -11.2142, 0.59 ) }
    dend_32 { pt3dadd( -4.04437, -184.587, -11.6369, 0.59 ) }
    dend_32 { pt3dadd( -4.38614, -185.167, -11.8943, 0.44 ) }
    dend_32 { pt3dadd( -4.80992, -185.861, -12.2205, 0.44 ) }
    dend_32 { pt3dadd( -5.0874, -186.286, -12.467, 0.29 ) }
    dend_32 { pt3dadd( -5.48391, -186.891, -12.8781, 1.4 ) }
    dend_32 { pt3dadd( -6.05943, -187.585, -13.5432, 1.62 ) }
    dend_32 { pt3dadd( -6.60087, -188.059, -14.1638, 1.4 ) }
    dend_32 { pt3dadd( -7.13747, -188.398, -14.755, 1.11 ) }
    dend_32 { pt3dadd( -8.04854, -188.85, -15.7037, 0.81 ) }
    dend_32 { pt3dadd( -8.55542, -189.081, -16.2261, 0.59 ) }
    dend_32 { pt3dadd( -9.10717, -189.362, -16.824, 0.74 ) }
    dend_32 { pt3dadd( -9.63101, -189.703, -17.42, 0.81 ) }
    dend_32 { pt3dadd( -10.0343, -190.139, -17.9076, 0.52 ) }
    dend_32 { pt3dadd( -10.3255, -190.582, -18.2904, 0.52 ) }
    dend_32 { pt3dadd( -10.5948, -191.076, -18.6306, 0.74 ) }
    dend_32 { pt3dadd( -10.957, -191.779, -19.1235, 0.74 ) }
    dend_32 { pt3dadd( -11.1443, -192.216, -19.3883, 0.74 ) }
    dend_32 { pt3dadd( -11.3258, -192.711, -19.6889, 0.52 ) }
    dend_32 { pt3dadd( -11.5982, -193.491, -20.1139, 0.52 ) }
    dend_32 { pt3dadd( -11.7503, -193.918, -20.3319, 0.52 ) }
    dend_32 { pt3dadd( -12.0511, -194.757, -20.7018, 1.69 ) }
    dend_32 { pt3dadd( -12.2407, -195.31, -20.8968, 2.14 ) }
    dend_32 { pt3dadd( -12.5936, -196.48, -21.2162, 1.55 ) }
    dend_32 { pt3dadd( -12.9273, -197.706, -21.4727, 0.29 ) }
    dend_32 { pt3dadd( -13.1084, -198.422, -21.5881, 0.29 ) }
    dend_32 { pt3dadd( -13.3501, -199.408, -21.7137, 0.44 ) }
    dend_32 { pt3dadd( -13.5837, -200.346, -21.7973, 0.59 ) }
    dend_32 { pt3dadd( -13.795, -201.178, -21.8503, 0.59 ) }
    dend_32 { pt3dadd( -14.0169, -202.025, -21.87, 0.29 ) }
    dend_32 { pt3dadd( -14.1371, -202.48, -21.8818, 0.29 ) }
    dend_32 { pt3dadd( -14.3025, -203.116, -21.8977, 0.96 ) }
    dend_32 { pt3dadd( -14.4378, -203.673, -21.9099, 1.03 ) }
    dend_32 { pt3dadd( -14.603, -204.45, -21.9267, 0.52 ) }
    dend_32 { pt3dadd( -14.7817, -205.462, -21.9471, 0.29 ) }
    dend_32 { pt3dadd( -14.8649, -206.039, -21.9556, 0.81 ) }
    dend_32 { pt3dadd( -14.9482, -206.708, -21.9605, 0.96 ) }
    dend_32 { pt3dadd( -15.0072, -207.224, -21.9641, 0.96 ) }
    dend_32 { pt3dadd( -15.1083, -208.13, -21.9721, 0.29 ) }
    dend_32 { pt3dadd( -15.242, -209.162, -21.983, 0.29 ) }
    dend_32 { pt3dadd( -15.3906, -210.244, -22.0284, 1.47 ) }
    dend_32 { pt3dadd( -15.4933, -211.002, -22.0761, 1.92 ) }
    dend_32 { pt3dadd( -15.5385, -211.37, -22.1028, 1.92 ) }
    dend_32 { pt3dadd( -15.6492, -212.287, -22.1624, 1.33 ) }
    dend_32 { pt3dadd( -15.7593, -213.307, -22.2309, 0.29 ) }
    dend_32 { pt3dadd( -15.8626, -214.348, -22.3076, 0.29 ) }
    dend_32 { pt3dadd( -15.9338, -215.18, -22.3781, 0.29 ) }
    dend_32 { pt3dadd( -16.0766, -216.988, -22.5452, 0.29 ) }
    dend_32 { pt3dadd( -16.1639, -218.218, -22.6483, 1.4 ) }
    dend_32 { pt3dadd( -16.2091, -218.967, -22.7024, 2.14 ) }
    dend_32 { pt3dadd( -16.2256, -219.294, -22.7221, 2.28 ) }
    dend_32 { pt3dadd( -16.2482, -219.828, -22.7417, 2.28 ) }
    dend_32 { pt3dadd( -16.2784, -220.379, -22.7453, 1.92 ) }
    dend_32 { pt3dadd( -16.3478, -221.175, -22.6881, 0.88 ) }
    dend_32 { pt3dadd( -16.4768, -222.387, -22.5277, 0.29 ) }
    dend_32 { pt3dadd( -16.565, -223.126, -22.39, 0.29 ) }
    dend_32 { pt3dadd( -16.6676, -223.953, -22.2077, 0.29 ) }
    dend_32 { pt3dadd( -16.8336, -225.245, -21.8927, 0.29 ) }
    dend_32 { pt3dadd( -16.9981, -226.569, -21.5669, 0.96 ) }
    dend_32 { pt3dadd( -17.0991, -227.456, -21.3568, 1.62 ) }
    dend_32 { pt3dadd( -17.1529, -227.958, -21.2409, 1.62 ) }
    dend_32 { pt3dadd( -17.2008, -228.432, -21.1428, 1.62 ) }
    dend_32 { pt3dadd( -17.2974, -229.454, -20.9758, 1.11 ) }
    dend_32 { pt3dadd( -17.3878, -230.712, -20.8915, 0.29 ) }
    dend_32 { pt3dadd( -17.4533, -231.652, -20.8956, 0.29 ) }
    dend_32 { pt3dadd( -17.5094, -232.398, -20.9236, 0.59 ) }
    dend_32 { pt3dadd( -17.5428, -232.767, -20.9476, 0.66 ) }
    dend_32 { pt3dadd( -17.5906, -233.215, -20.9844, 0.66 ) }
    dend_32 { pt3dadd( -17.7494, -234.445, -21.1012, 0.29 ) }
    dend_32 { pt3dadd( -17.9726, -235.871, -21.2783, 0.29 ) }
    dend_32 { pt3dadd( -18.1755, -236.975, -21.4343, 0.96 ) }
    dend_32 { pt3dadd( -18.371, -237.844, -21.5628, 1.4 ) }
    dend_32 { pt3dadd( -18.5361, -238.494, -21.6541, 1.4 ) }
    dend_32 { pt3dadd( -18.7183, -239.166, -21.7389, 1.4 ) }
    dend_32 { pt3dadd( -18.9741, -240.052, -21.8304, 0.88 ) }
    dend_32 { pt3dadd( -19.2936, -241.136, -21.9362, 0.29 ) }
    dend_32 { pt3dadd( -19.5853, -242.126, -22.0169, 0.29 ) }
    dend_32 { pt3dadd( -19.8941, -243.126, -22.0936, 0.44 ) }
    dend_32 { pt3dadd( -20.1066, -243.758, -22.1365, 0.66 ) }
    dend_32 { pt3dadd( -20.2903, -244.265, -22.1609, 0.66 ) }
    dend_32 { pt3dadd( -20.6325, -245.167, -22.1679, 0.29 ) }
    dend_32 { pt3dadd( -20.8365, -245.708, -22.1669, 0.29 ) }
    dend_32 { pt3dadd( -21.0923, -246.401, -22.1967, 0.29 ) }
    dend_32 { pt3dadd( -21.4466, -247.353, -22.3065, 0.29 ) }
    dend_32 { pt3dadd( -21.6505, -247.897, -22.4096, 0.52 ) }
    dend_32 { pt3dadd( -21.9169, -248.654, -22.5915, 0.66 ) }
    dend_32 { pt3dadd( -22.1304, -249.409, -22.7452, 0.66 ) }
    dend_32 { pt3dadd( -22.3595, -250.584, -22.9405, 1.4 ) }
    dend_32 { pt3dadd( -22.447, -251.617, -23.084, 2.28 ) }
    dend_32 { pt3dadd( -22.4402, -252.648, -23.2068, 2.5 ) }
    dend_32 { pt3dadd( -22.3864, -253.227, -23.2469, 2.5 ) }
    dend_32 { pt3dadd( -21.9808, -255.255, -23.2573, 0.22 ) }
    dend_32 { pt3dadd( -21.7364, -256.073, -23.1973, 0.22 ) }
    dend_32 { pt3dadd( -21.3107, -257.109, -23.0313, 0.37 ) }
    dend_32 { pt3dadd( -20.9912, -257.721, -22.8816, 0.44 ) }
    dend_32 { pt3dadd( -20.3591, -258.63, -22.691, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -19.623, -259.475, -22.6094, 0.88 ) }
    dend_32 { pt3dadd( -19.1635, -259.878, -22.6802, 1.4 ) }
    dend_32 { pt3dadd( -18.7982, -260.17, -22.8002, 1.4 ) }
    dend_32 { pt3dadd( -18.2955, -260.588, -23.0511, 1.11 ) }
    dend_32 { pt3dadd( -16.6992, -262.034, -24.1192, 0.29 ) }
    dend_32 { pt3dadd( -16.1861, -262.556, -24.5434, 0.29 ) }
    dend_32 { pt3dadd( -15.4017, -263.467, -25.292, 0.81 ) }
    dend_32 { pt3dadd( -15.0139, -264.056, -25.7121, 0.81 ) }
    dend_32 { pt3dadd( -14.3993, -265.298, -26.4665, 0.22 ) }
    dend_32 { pt3dadd( -14.2108, -265.816, -26.7279, 0.22 ) }
    dend_32 { pt3dadd( -14.0219, -266.612, -27.0118, 0.44 ) }
    dend_32 { pt3dadd( -13.9446, -267.06, -27.1412, 0.59 ) }
    dend_32 { pt3dadd( -13.7146, -268.93, -27.5688, 0.22 ) }
    dend_32 { pt3dadd( -13.6499, -269.583, -27.7105, 0.74 ) }
    dend_32 { pt3dadd( -13.6045, -270.163, -27.8282, 1.03 ) }
    dend_32 { pt3dadd( -13.5519, -270.783, -27.9398, 1.03 ) }
    dend_32 { pt3dadd( -13.5002, -271.389, -28.0384, 0.74 ) }
    dend_32 { pt3dadd( -13.4487, -271.953, -28.1267, 0.37 ) }
    dend_32 { pt3dadd( -13.2994, -273.385, -28.3531, 0.22 ) }
    dend_32 { pt3dadd( -13.1637, -274.809, -28.587, 0.22 ) }
    dend_32 { pt3dadd( -13.0785, -275.881, -28.7618, 0.88 ) }
    dend_32 { pt3dadd( -13.0248, -276.672, -28.8915, 1.62 ) }
    dend_32 { pt3dadd( -13.0013, -277.107, -28.9641, 1.84 ) }
    dend_32 { pt3dadd( -12.9858, -277.631, -29.0521, 1.84 ) }
    dend_32 { pt3dadd( -12.9861, -278.711, -29.2292, 0.52 ) }
    dend_32 { pt3dadd( -13.0271, -279.621, -29.3845, 0.22 ) }
    dend_32 { pt3dadd( -13.0946, -280.35, -29.5193, 0.22 ) }
    dend_32 { pt3dadd( -13.1801, -280.978, -29.6411, 0.37 ) }
    dend_32 { pt3dadd( -13.2259, -281.221, -29.6838, 0.37 ) }
    dend_32 { pt3dadd( -13.3716, -281.822, -29.7945, 0.22 ) }
    dend_32 { pt3dadd( -13.5141, -282.31, -29.8866, 0.74 ) }
    dend_32 { pt3dadd( -13.6884, -282.865, -29.9978, 0.74 ) }
    dend_32 { pt3dadd( -13.8576, -283.367, -30.0955, 0.59 ) }
    dend_32 { pt3dadd( -14.2509, -284.452, -30.3009, 0.22 ) }
    dend_32 { pt3dadd( -14.4521, -284.952, -30.389, 0.22 ) }
    dend_32 { pt3dadd( -14.763, -285.619, -30.4757, 0.59 ) }
    dend_32 { pt3dadd( -15.0181, -286.097, -30.509, 0.59 ) }
    dend_32 { pt3dadd( -15.3022, -286.587, -30.4945, 0.29 ) }
    dend_32 { pt3dadd( -15.6189, -287.086, -30.4546, 0.22 ) }
    dend_32 { pt3dadd( -16.1055, -287.773, -30.4241, 0.37 ) }
    dend_32 { pt3dadd( -16.7487, -288.597, -30.4125, 0.44 ) }
    dend_32 { pt3dadd( -17.3265, -289.181, -30.4992, 0.59 ) }
    dend_32 { pt3dadd( -18.064, -289.775, -30.7257, 0.37 ) }
    dend_32 { pt3dadd( -18.5157, -290.034, -30.9329, 0.22 ) }
    dend_32 { pt3dadd( -19.6427, -290.431, -31.6103, 2.21 ) }
    dend_32 { pt3dadd( -20.0649, -290.472, -31.9265, 2.5 ) }
    dend_32 { pt3dadd( -21.6888, -290.176, -33.3436, 0.22 ) }
    dend_32 { pt3dadd( -22.1834, -289.972, -33.8183, 0.22 ) }
    dend_32 { pt3dadd( -22.8337, -289.526, -34.5446, 0.66 ) }
    dend_32 { pt3dadd( -23.1365, -289.241, -34.9275, 0.66 ) }
    dend_32 { pt3dadd( -23.5566, -288.752, -35.5094, 0.37 ) }
    dend_32 { pt3dadd( -24.1298, -288.036, -36.3748, 1.92 ) }
    dend_32 { pt3dadd( -24.3305, -287.783, -36.6905, 1.92 ) }
    dend_32 { pt3dadd( -25.3517, -286.713, -38.3577, 0.44 ) }
    dend_32 { pt3dadd( -25.8063, -286.334, -39.1005, 0.59 ) }
    dend_32 { pt3dadd( -26.0899, -286.172, -39.5148, 0.37 ) }
    dend_32 { pt3dadd( -26.5526, -286.035, -40.0755, 0.37 ) }
    dend_32 { pt3dadd( -27.0393, -285.963, -40.6281, 0.22 ) }
    dend_32 { pt3dadd( -28.2388, -285.936, -41.8105, 0.29 ) }
    dend_32 { pt3dadd( -28.6798, -286.004, -42.1369, 0.22 ) }
    dend_32 { pt3dadd( -29.4174, -286.155, -42.6138, 0.22 ) }
    dend_32 { pt3dadd( -30.4437, -286.356, -43.2381, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -9.09614, -79.1042, -8.2474, 0.74 ) }
    dend_31 { pt3dadd( -11.5141, -80.7387, -8.26288, 0.74 ) }
    dend_31 { pt3dadd( -12.4727, -81.3215, -8.27033, 0.74 ) }
    dend_31 { pt3dadd( -13.8569, -82.0511, -8.32309, 0.74 ) }
    dend_31 { pt3dadd( -14.826, -82.4773, -8.38619, 0.52 ) }
    dend_31 { pt3dadd( -15.8335, -82.7814, -8.50965, 0.52 ) }
    dend_31 { pt3dadd( -16.7991, -82.9786, -8.67757, 0.88 ) }
    dend_31 { pt3dadd( -17.6075, -82.9197, -8.95986, 0.88 ) }
    dend_31 { pt3dadd( -18.8956, -82.6091, -9.56458, 0.59 ) }
    dend_31 { pt3dadd( -19.6973, -82.3448, -10.0005, 0.37 ) }
    dend_31 { pt3dadd( -20.9284, -81.9807, -10.7506, 0.37 ) }
    dend_31 { pt3dadd( -21.6714, -81.8509, -11.2746, 1.11 ) }
    dend_31 { pt3dadd( -22.2914, -81.8957, -11.767, 1.47 ) }
    dend_31 { pt3dadd( -22.8908, -82.0527, -12.2441, 1.47 ) }
    dend_31 { pt3dadd( -23.3303, -82.2139, -12.5715, 1.47 ) }
    dend_31 { pt3dadd( -24.3405, -82.5927, -13.2868, 0.96 ) }
    dend_31 { pt3dadd( -25.2461, -82.8592, -13.8847, 0.59 ) }
    dend_31 { pt3dadd( -26.085, -83.0043, -14.3637, 0.59 ) }
    dend_31 { pt3dadd( -26.9632, -83.0817, -14.7561, 0.59 ) }
    dend_31 { pt3dadd( -27.8931, -83.1567, -15.1365, 0.81 ) }
    dend_31 { pt3dadd( -28.7792, -83.23, -15.4746, 0.81 ) }
    dend_31 { pt3dadd( -29.4755, -83.2845, -15.6898, 0.81 ) }
    dend_31 { pt3dadd( -30.3026, -83.3801, -15.9161, 0.81 ) }
    dend_31 { pt3dadd( -31.1929, -83.784, -16.2864, 0.22 ) }
    dend_31 { pt3dadd( -31.7456, -84.7191, -16.7845, 0.22 ) }
    dend_31 { pt3dadd( -32.0818, -85.4699, -17.2017, 0.66 ) }
    dend_31 { pt3dadd( -32.257, -85.9179, -17.464, 0.88 ) }
    dend_31 { pt3dadd( -32.5046, -86.5693, -17.877, 0.88 ) }
    dend_31 { pt3dadd( -32.8591, -87.3314, -18.5429, 0.44 ) }
    dend_31 { pt3dadd( -33.4094, -88.0827, -19.4598, 1.4 ) }
    dend_31 { pt3dadd( -33.9445, -88.4861, -20.2537, 2.14 ) }
    dend_31 { pt3dadd( -34.1867, -88.5867, -20.6058, 2.58 ) }
    dend_31 { pt3dadd( -34.7029, -88.6646, -21.318, 2.36 ) }
    dend_31 { pt3dadd( -36.1093, -88.6672, -23.2445, 1.69 ) }
    dend_31 { pt3dadd( -36.8555, -88.5989, -24.2308, 0.37 ) }
    dend_31 { pt3dadd( -37.786, -88.4575, -25.3251, 0.37 ) }
    dend_31 { pt3dadd( -38.5594, -88.3317, -26.1457, 0.37 ) }
    dend_31 { pt3dadd( -40.1438, -88.1391, -27.6685, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -40.8051, -88.1014, -28.2555, 2.14 ) }
    dend_31 { pt3dadd( -41.4742, -88.1318, -28.7992, 2.5 ) }
    dend_31 { pt3dadd( -43.4399, -88.4527, -30.4443, 0.44 ) }
    dend_31 { pt3dadd( -44.0493, -88.6178, -30.9675, 0.44 ) }
    dend_31 { pt3dadd( -44.9746, -88.8977, -31.819, 0.44 ) }
    dend_31 { pt3dadd( -45.8076, -89.1229, -32.6509, 0.44 ) }
    dend_31 { pt3dadd( -46.6584, -89.2855, -33.5406, 1.4 ) }
    dend_31 { pt3dadd( -47.5807, -89.4175, -34.549, 2.06 ) }
    dend_31 { pt3dadd( -48.3944, -89.5239, -35.5201, 2.06 ) }
    dend_31 { pt3dadd( -49.3803, -89.5834, -36.7632, 0.66 ) }
    dend_31 { pt3dadd( -50.1402, -89.5977, -37.8184, 0.81 ) }
    dend_31 { pt3dadd( -50.9396, -89.6115, -39.0455, 0.52 ) }
    dend_31 { pt3dadd( -51.5604, -89.6761, -40.2049, 1.77 ) }
    dend_31 { pt3dadd( -51.9448, -89.7923, -41.126, 2.28 ) }
    dend_31 { pt3dadd( -52.8976, -90.4483, -44.2603, 1.33 ) }
    dend_31 { pt3dadd( -53.1439, -90.8263, -45.4965, 1.77 ) }
    dend_31 { pt3dadd( -53.2487, -91.0982, -46.2894, 1.77 ) }
    dend_31 { pt3dadd( -53.3994, -91.6475, -47.8186, 0.74 ) }
    dend_31 { pt3dadd( -53.5002, -92.0956, -49.0344, 0.52 ) }
    dend_31 { pt3dadd( -53.6726, -92.8099, -50.794, 0.52 ) }
    dend_31 { pt3dadd( -53.8589, -93.661, -52.567, 0.88 ) }
    dend_31 { pt3dadd( -54.1342, -94.4793, -54.1857, 1.47 ) }
    dend_31 { pt3dadd( -54.4838, -95.2909, -55.7005, 0.22 ) }
    dend_31 { pt3dadd( -54.6888, -95.7123, -56.4266, 0.22 ) }
    dend_31 { pt3dadd( -54.9704, -96.2871, -57.2937, 0.81 ) }
    dend_31 { pt3dadd( -55.2527, -96.9121, -58.0764, 0.96 ) }
    dend_31 { pt3dadd( -55.6156, -97.7461, -58.9844, 1.55 ) }
    dend_31 { pt3dadd( -55.9568, -98.5791, -59.754, 1.55 ) }
    dend_31 { pt3dadd( -56.3313, -99.4868, -60.5536, 0.37 ) }
    dend_31 { pt3dadd( -56.6018, -100.131, -61.1339, 0.74 ) }
    dend_31 { pt3dadd( -56.9513, -100.927, -61.9058, 0.81 ) }
    dend_31 { pt3dadd( -57.384, -101.974, -62.9749, 0.29 ) }
    dend_31 { pt3dadd( -57.5591, -102.477, -63.4893, 0.96 ) }
    dend_31 { pt3dadd( -57.7705, -103.215, -64.2319, 1.33 ) }
    dend_31 { pt3dadd( -57.9854, -104.249, -65.2628, 0.74 ) }
    dend_31 { pt3dadd( -58.0828, -105.113, -66.0935, 0.59 ) }
    dend_31 { pt3dadd( -58.0893, -106.479, -67.3322, 0.29 ) }
    dend_31 { pt3dadd( -57.9801, -107.364, -68.0386, 0.29 ) }
    dend_31 { pt3dadd( -57.7875, -108.18, -68.6469, 0.29 ) }
    dend_31 { pt3dadd( -57.5687, -108.807, -69.0494, 1.18 ) }
    dend_31 { pt3dadd( -57.2946, -109.394, -69.3919, 1.69 ) }
    dend_31 { pt3dadd( -56.8044, -110.247, -69.8389, 1.33 ) }
    dend_31 { pt3dadd( -56.0279, -111.444, -70.4488, 0.22 ) }
    dend_31 { pt3dadd( -55.6637, -111.991, -70.7374, 0.22 ) }
    dend_31 { pt3dadd( -55.2256, -112.701, -71.1149, 0.96 ) }
    dend_31 { pt3dadd( -54.9552, -113.203, -71.3821, 1.11 ) }
    dend_31 { pt3dadd( -54.4961, -114.167, -71.8842, 0.52 ) }
    dend_31 { pt3dadd( -53.8411, -115.724, -72.6694, 0.22 ) }
    dend_31 { pt3dadd( -53.5601, -116.464, -73.0367, 0.22 ) }
    dend_31 { pt3dadd( -53.285, -117.275, -73.4417, 0.88 ) }
    dend_31 { pt3dadd( -53.1039, -117.866, -73.7664, 1.03 ) }
    dend_31 { pt3dadd( -52.8126, -118.889, -74.3778, 0.22 ) }
    dend_31 { pt3dadd( -52.6768, -119.36, -74.6757, 0.22 ) }
    dend_31 { pt3dadd( -52.4615, -120.048, -75.1259, 0.66 ) }
    dend_31 { pt3dadd( -52.202, -120.812, -75.6219, 0.74 ) }
    dend_31 { pt3dadd( -51.5653, -122.588, -76.7258, 0.22 ) }
    dend_31 { pt3dadd( -51.1196, -123.882, -77.4417, 0.22 ) }
    dend_31 { pt3dadd( -50.652, -125.53, -78.2412, 0.96 ) }
    dend_31 { pt3dadd( -50.5083, -126.156, -78.5088, 1.25 ) }
    dend_31 { pt3dadd( -50.3916, -126.996, -78.8058, 1.25 ) }
    dend_31 { pt3dadd( -50.315, -128.245, -79.145, 0.66 ) }
    dend_31 { pt3dadd( -50.3624, -129.787, -79.4682, 0.15 ) }
    dend_31 { pt3dadd( -50.5633, -131.107, -79.7214, 0.37 ) }
    dend_31 { pt3dadd( -50.7212, -131.723, -79.8536, 0.37 ) }
    dend_31 { pt3dadd( -51.4552, -133.967, -80.4024, 0.22 ) }
    dend_31 { pt3dadd( -51.5932, -134.314, -80.5063, 0.74 ) }
    dend_31 { pt3dadd( -51.9208, -135.053, -80.7702, 0.88 ) }
    dend_31 { pt3dadd( -53.0372, -137.397, -81.6985, 0.22 ) }
    dend_31 { pt3dadd( -53.4688, -138.278, -82.0531, 0.74 ) }
    dend_31 { pt3dadd( -53.9008, -139.131, -82.3917, 0.74 ) }
    dend_31 { pt3dadd( -54.8467, -140.988, -83.1431, 0.22 ) }
    dend_31 { pt3dadd( -55.635, -142.548, -83.7527, 0.22 ) }
    dend_31 { pt3dadd( -56.5204, -144.341, -84.3583, 0.22 ) }
    dend_31 { pt3dadd( -57.3211, -146.038, -84.8233, 0.22 ) }
    dend_31 { pt3dadd( -57.7418, -146.963, -85.0176, 0.88 ) }
    dend_31 { pt3dadd( -58.0569, -147.696, -85.1279, 1.11 ) }
    dend_31 { pt3dadd( -58.3382, -148.443, -85.1828, 1.11 ) }
    dend_31 { pt3dadd( -58.9362, -150.268, -85.221, 0.15 ) }
    dend_31 { pt3dadd( -59.3416, -151.749, -85.2132, 0.15 ) }
    dend_31 { pt3dadd( -59.5391, -152.571, -85.1961, 0.81 ) }
    dend_31 { pt3dadd( -59.6964, -153.289, -85.1766, 0.96 ) }
    dend_31 { pt3dadd( -60.2166, -155.977, -85.4163, 0.22 ) }
    dend_31 { pt3dadd( -60.4374, -157.241, -85.5619, 0.22 ) }
    dend_31 { pt3dadd( -60.655, -158.638, -85.8104, 0.22 ) }
    dend_31 { pt3dadd( -60.7342, -159.198, -85.9383, 1.18 ) }
    dend_31 { pt3dadd( -60.8041, -159.733, -86.0961, 1.18 ) }
    dend_31 { pt3dadd( -61.3064, -163.676, -87.8357, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 21.2122, 160.747, -20.2735, 0.37 ) }
    dend_26 { pt3dadd( 21.8376, 159.872, -20.0079, 0.37 ) }
    dend_26 { pt3dadd( 22.3348, 159.219, -19.8364, 0.52 ) }
    dend_26 { pt3dadd( 23.0338, 158.335, -19.6151, 0.74 ) }
    dend_26 { pt3dadd( 23.5946, 157.636, -19.4577, 1.11 ) }
    dend_26 { pt3dadd( 23.9222, 157.241, -19.3685, 1.11 ) }
    dend_26 { pt3dadd( 24.3992, 156.67, -19.235, 0.81 ) }
    dend_26 { pt3dadd( 25.5088, 155.426, -18.8699, 0.22 ) }
    dend_26 { pt3dadd( 26.0415, 154.818, -18.6931, 0.22 ) }
    dend_26 { pt3dadd( 26.3694, 154.412, -18.5978, 0.66 ) }
    dend_26 { pt3dadd( 26.6999, 153.961, -18.5052, 0.66 ) }
    dend_26 { pt3dadd( 27.0167, 153.492, -18.4183, 0.66 ) }
    dend_26 { pt3dadd( 27.6071, 152.554, -18.2321, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_26 { pt3dadd( 28.1457, 151.622, -18.0376, 0.22 ) }
    dend_26 { pt3dadd( 28.6977, 150.589, -17.8357, 0.22 ) }
    dend_26 { pt3dadd( 28.9463, 150.087, -17.7438, 0.44 ) }
    dend_26 { pt3dadd( 29.0987, 149.742, -17.7006, 0.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 21.2122, 160.747, -20.2735, 0.22 ) }
    dend_25 { pt3dadd( 23.0711, 160.849, -20.4826, 0.22 ) }
    dend_25 { pt3dadd( 23.4944, 160.9, -20.5454, 0.44 ) }
    dend_25 { pt3dadd( 25.4345, 161.241, -20.8424, 0.22 ) }
    dend_25 { pt3dadd( 26.2652, 161.416, -20.9929, 0.59 ) }
    dend_25 { pt3dadd( 26.8979, 161.561, -21.138, 0.59 ) }
    dend_25 { pt3dadd( 29.6119, 162.186, -21.7606, 0.22 ) }
    dend_25 { pt3dadd( 32.7357, 162.96, -22.5522, 0.22 ) }
    dend_25 { pt3dadd( 33.8502, 163.27, -22.8579, 0.66 ) }
    dend_25 { pt3dadd( 34.7178, 163.552, -23.1288, 0.81 ) }
    dend_25 { pt3dadd( 36.024, 164.01, -23.5745, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 11.727, 222.821, -5.06659, 0.59 ) }
    dend_19 { pt3dadd( 12.9072, 223.774, -5.56602, 0.59 ) }
    dend_19 { pt3dadd( 13.2915, 224.097, -5.71472, 0.44 ) }
    dend_19 { pt3dadd( 14.0856, 224.805, -6.04642, 0.22 ) }
    dend_19 { pt3dadd( 14.7653, 225.461, -6.3312, 0.81 ) }
    dend_19 { pt3dadd( 15.1217, 225.823, -6.49459, 0.96 ) }
    dend_19 { pt3dadd( 15.2852, 225.993, -6.57541, 0.96 ) }
    dend_19 { pt3dadd( 15.7839, 226.591, -6.84464, 0.22 ) }
    dend_19 { pt3dadd( 16.4652, 227.554, -7.32478, 0.22 ) }
    dend_19 { pt3dadd( 16.9981, 228.452, -7.80217, 1.11 ) }
    dend_19 { pt3dadd( 17.2516, 228.953, -8.06779, 1.47 ) }
    dend_19 { pt3dadd( 17.3526, 229.199, -8.20773, 1.47 ) }
    dend_19 { pt3dadd( 17.684, 230.276, -8.8226, 0.22 ) }
    dend_19 { pt3dadd( 17.8868, 231.261, -9.39215, 0.22 ) }
    dend_19 { pt3dadd( 17.9596, 231.841, -9.72438, 0.66 ) }
    dend_19 { pt3dadd( 17.9819, 232.129, -9.89504, 0.66 ) }
    dend_19 { pt3dadd( 18.0058, 233.502, -10.6891, 0.22 ) }
    dend_19 { pt3dadd( 17.9659, 234.755, -11.3967, 0.22 ) }
    dend_19 { pt3dadd( 17.9058, 235.468, -11.8009, 0.22 ) }
    dend_19 { pt3dadd( 17.8089, 236.296, -12.2655, 1.47 ) }
    dend_19 { pt3dadd( 17.732, 236.768, -12.519, 1.47 ) }
    dend_19 { pt3dadd( 17.3959, 238.366, -13.3061, 0.22 ) }
    dend_19 { pt3dadd( 17.2585, 238.885, -13.5431, 0.81 ) }
    dend_19 { pt3dadd( 17.1154, 239.321, -13.727, 0.81 ) }
    dend_19 { pt3dadd( 16.7037, 240.388, -14.1281, 0.22 ) }
    dend_19 { pt3dadd( 16.334, 241.233, -14.4221, 0.22 ) }
    dend_19 { pt3dadd( 15.9134, 242.112, -14.7092, 1.47 ) }
    dend_19 { pt3dadd( 15.7244, 242.474, -14.8375, 1.84 ) }
    dend_19 { pt3dadd( 15.008, 243.791, -15.3093, 0.22 ) }
    dend_19 { pt3dadd( 14.4327, 244.799, -15.6652, 0.22 ) }
    dend_19 { pt3dadd( 14.2154, 245.147, -15.7918, 0.22 ) }
    dend_19 { pt3dadd( 13.6221, 246.057, -16.16, 1.55 ) }
    dend_19 { pt3dadd( 13.2415, 246.603, -16.4041, 2.06 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 48/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 11.727, 222.821, -5.06659, 0.22 ) }
    dend_18 { pt3dadd( 12.6661, 225.409, -5.28635, 0.22 ) }
    dend_18 { pt3dadd( 13.1981, 226.815, -5.38157, 0.22 ) }
    dend_18 { pt3dadd( 13.6182, 227.906, -5.44317, 0.96 ) }
    dend_18 { pt3dadd( 13.8012, 228.381, -5.46463, 1.18 ) }
    dend_18 { pt3dadd( 13.9905, 228.872, -5.48181, 1.18 ) }
    dend_18 { pt3dadd( 14.2943, 229.674, -5.50345, 0.22 ) }
    dend_18 { pt3dadd( 14.517, 230.247, -5.49761, 0.44 ) }
    dend_18 { pt3dadd( 14.6234, 230.539, -5.49945, 0.44 ) }
    dend_18 { pt3dadd( 14.9062, 231.382, -5.5127, 0.22 ) }
    dend_18 { pt3dadd( 15.1449, 232.122, -5.52555, 0.44 ) }
    dend_18 { pt3dadd( 15.4047, 232.942, -5.53992, 0.44 ) }
    dend_18 { pt3dadd( 16.1546, 235.452, -5.58485, 0.22 ) }
    dend_18 { pt3dadd( 16.7764, 237.566, -5.64372, 0.22 ) }
    dend_18 { pt3dadd( 17.0129, 238.359, -5.67591, 0.66 ) }
    dend_18 { pt3dadd( 17.1443, 238.794, -5.69956, 0.74 ) }
    dend_18 { pt3dadd( 17.3633, 239.486, -5.75747, 0.22 ) }
    dend_18 { pt3dadd( 17.9255, 241.176, -5.93513, 0.22 ) }
    dend_18 { pt3dadd( 18.2592, 242.168, -6.0553, 1.03 ) }
    dend_18 { pt3dadd( 18.4827, 242.826, -6.14358, 1.25 ) }
    dend_18 { pt3dadd( 18.6517, 243.322, -6.21444, 1.25 ) }
    dend_18 { pt3dadd( 19.222, 244.994, -6.46474, 0.22 ) }
    dend_18 { pt3dadd( 20.1712, 247.743, -6.88753, 0.22 ) }
    dend_18 { pt3dadd( 20.4962, 248.669, -7.02857, 0.74 ) }
    dend_18 { pt3dadd( 20.6757, 249.203, -7.09683, 0.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 73/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 1.9084, 86.087, 5.64635, 0.37 ) }
    dend_16 { pt3dadd( 3.77576, 92.957, 9.1237, 0.37 ) }
    dend_16 { pt3dadd( 6.19354, 99.4425, 13.0511, 0.37 ) }
    dend_16 { pt3dadd( 6.84374, 105.773, 17.8716, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 1.9084, 86.087, 5.64635, 0.22 ) }
    dend_15 { pt3dadd( 7.18438, 95.2617, 4.43985, 0.37 ) }
    dend_15 { pt3dadd( 13.2557, 103.75, 2.06292, 0.37 ) }
    dend_15 { pt3dadd( 19.8071, 111.792, -0.713708, 0.37 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 81/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 94.2277, -7.58989, 20.2386, 0.37 ) }
    dend_10 { pt3dadd( 105.749, -10.6271, 23.3649, 0.37 ) }
    dend_10 { pt3dadd( 117.831, -12.3007, 25.3037, 0.37 ) }
    dend_10 { pt3dadd( 130.016, -12.2679, 27.3503, 0.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 85/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 94.2277, -7.58989, 20.2386, 0.22 ) }
    dend_9 { pt3dadd( 104.847, -10.3794, 23.463, 0.37 ) }
    dend_9 { pt3dadd( 116.073, -12.2376, 24.962, 0.37 ) }
    dend_9 { pt3dadd( 127.138, -14.073, 27.3648, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 89/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 46.589, 7.33893, 5.66536, 0.52 ) }
    dend_5 { pt3dadd( 48.0584, 7.73415, 6.09132, 0.52 ) }
    dend_5 { pt3dadd( 48.6265, 7.86763, 6.27588, 0.52 ) }
    dend_5 { pt3dadd( 49.2106, 8.01161, 6.51344, 0.52 ) }
    dend_5 { pt3dadd( 50.3252, 8.29265, 7.009, 0.52 ) }
    dend_5 { pt3dadd( 50.9883, 8.45401, 7.32761, 0.88 ) }
    dend_5 { pt3dadd( 52.0023, 8.67907, 7.8181, 0.88 ) }
    dend_5 { pt3dadd( 52.7546, 8.83711, 8.17358, 0.88 ) }
    dend_5 { pt3dadd( 53.5455, 8.92635, 8.60877, 0.81 ) }
    dend_5 { pt3dadd( 54.044, 8.87163, 8.92142, 0.81 ) }
    dend_5 { pt3dadd( 54.7755, 8.60899, 9.45484, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_5 { pt3dadd( 55.3482, 8.25699, 9.90807, 0.59 ) }
    dend_5 { pt3dadd( 55.9571, 7.75176, 10.3825, 0.59 ) }
    dend_5 { pt3dadd( 56.5616, 7.16965, 10.8118, 0.74 ) }
    dend_5 { pt3dadd( 57.4994, 6.12975, 11.4646, 0.66 ) }
    dend_5 { pt3dadd( 57.8794, 5.65915, 11.7425, 0.66 ) }
    dend_5 { pt3dadd( 58.4462, 4.88397, 12.1861, 0.52 ) }
    dend_5 { pt3dadd( 58.8296, 4.34534, 12.4861, 0.52 ) }
    dend_5 { pt3dadd( 59.3287, 3.66876, 12.8486, 0.81 ) }
    dend_5 { pt3dadd( 59.9505, 2.82178, 13.2889, 0.81 ) }
    dend_5 { pt3dadd( 60.3571, 2.24199, 13.6027, 0.81 ) }
    dend_5 { pt3dadd( 60.8389, 1.47969, 14.0092, 0.81 ) }
    dend_5 { pt3dadd( 61.4006, 0.476713, 14.5486, 0.88 ) }
    dend_5 { pt3dadd( 61.8347, -0.404341, 15.0278, 1.11 ) }
    dend_5 { pt3dadd( 62.0954, -0.984114, 15.3386, 1.11 ) }
    dend_5 { pt3dadd( 62.5584, -2.14461, 15.9651, 0.88 ) }
    dend_5 { pt3dadd( 62.8496, -3.04689, 16.488, 0.96 ) }
    dend_5 { pt3dadd( 63.0126, -3.7244, 16.9271, 0.96 ) }
    dend_5 { pt3dadd( 63.1051, -4.26929, 17.32, 0.96 ) }
    dend_5 { pt3dadd( 63.17, -4.75481, 17.6955, 0.66 ) }
    dend_5 { pt3dadd( 63.2685, -5.49599, 18.3377, 0.66 ) }
    dend_5 { pt3dadd( 63.4323, -6.43083, 19.2486, 0.81 ) }
    dend_5 { pt3dadd( 63.6432, -7.14897, 20.0154, 1.11 ) }
    dend_5 { pt3dadd( 63.9729, -7.93382, 20.9265, 0.96 ) }
    dend_5 { pt3dadd( 64.2906, -8.50023, 21.5757, 0.81 ) }
    dend_5 { pt3dadd( 64.8109, -9.22862, 22.396, 0.81 ) }
    dend_5 { pt3dadd( 65.5006, -10.0024, 23.2341, 0.59 ) }
    dend_5 { pt3dadd( 66.1226, -10.6066, 23.844, 0.37 ) }
    dend_5 { pt3dadd( 66.7156, -11.1433, 24.3425, 0.37 ) }
    dend_5 { pt3dadd( 67.6086, -11.9466, 25.0232, 0.59 ) }
    dend_5 { pt3dadd( 68.1023, -12.4184, 25.3641, 0.88 ) }
    dend_5 { pt3dadd( 68.3765, -12.7076, 25.5379, 1.11 ) }
    dend_5 { pt3dadd( 68.7227, -13.1089, 25.7753, 1.11 ) }
    dend_5 { pt3dadd( 69.1732, -13.6572, 26.1251, 0.74 ) }
    dend_5 { pt3dadd( 69.5387, -14.077, 26.3943, 0.74 ) }
    dend_5 { pt3dadd( 69.8987, -14.5103, 26.6605, 0.74 ) }
    dend_5 { pt3dadd( 70.4453, -15.2224, 27.0448, 0.74 ) }
    dend_5 { pt3dadd( 70.9993, -15.9995, 27.4069, 0.74 ) }
    dend_5 { pt3dadd( 71.5045, -16.715, 27.719, 0.66 ) }
    dend_5 { pt3dadd( 71.9864, -17.3945, 27.9937, 0.66 ) }
    dend_5 { pt3dadd( 72.6287, -18.3015, 28.331, 0.96 ) }
    dend_5 { pt3dadd( 73.3848, -19.417, 28.7027, 1.4 ) }
    dend_5 { pt3dadd( 73.7653, -20.0399, 28.8812, 1.62 ) }
    dend_5 { pt3dadd( 74.1515, -20.7389, 29.0535, 1.77 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 46.589, 7.33893, 5.66536, 0.88 ) }
    dend_4 { pt3dadd( 47.4339, 8.10166, 5.74913, 0.88 ) }
    dend_4 { pt3dadd( 48.1937, 8.71611, 5.86237, 0.88 ) }
    dend_4 { pt3dadd( 49.0511, 9.30402, 6.01764, 0.88 ) }
    dend_4 { pt3dadd( 49.9835, 9.84386, 6.19778, 0.88 ) }
    dend_4 { pt3dadd( 51.0899, 10.4013, 6.43382, 0.74 ) }
    dend_4 { pt3dadd( 51.7905, 10.7335, 6.596, 0.74 ) }
    dend_4 { pt3dadd( 52.7814, 11.1397, 6.86511, 0.88 ) }
    dend_4 { pt3dadd( 53.6722, 11.449, 7.12041, 0.88 ) }
    dend_4 { pt3dadd( 54.4104, 11.6722, 7.32628, 0.88 ) }
    dend_4 { pt3dadd( 55.1279, 11.8784, 7.51894, 0.66 ) }
    dend_4 { pt3dadd( 55.6327, 12.0427, 7.63953, 0.66 ) }
    dend_4 { pt3dadd( 56.314, 12.3388, 7.74884, 0.88 ) }
    dend_4 { pt3dadd( 56.724, 12.5697, 7.78466, 0.88 ) }
    dend_4 { pt3dadd( 57.118, 12.8277, 7.79858, 0.88 ) }
    dend_4 { pt3dadd( 57.5188, 13.1, 7.80346, 0.88 ) }
    dend_4 { pt3dadd( 58.2651, 13.5947, 7.81514, 0.59 ) }
    dend_4 { pt3dadd( 58.7928, 13.9337, 7.85913, 0.59 ) }
    dend_4 { pt3dadd( 59.1948, 14.2092, 7.92082, 0.81 ) }
    dend_4 { pt3dadd( 59.7199, 14.6113, 8.02781, 0.81 ) }
    dend_4 { pt3dadd( 60.1204, 14.9621, 8.12286, 0.81 ) }
    dend_4 { pt3dadd( 60.572, 15.3911, 8.23848, 0.66 ) }
    dend_4 { pt3dadd( 61.2191, 16.0285, 8.4135, 0.59 ) }
    dend_4 { pt3dadd( 61.9061, 16.8212, 8.58648, 0.59 ) }
    dend_4 { pt3dadd( 62.2775, 17.31, 8.65855, 0.59 ) }
    dend_4 { pt3dadd( 62.7032, 17.921, 8.70451, 0.44 ) }
    dend_4 { pt3dadd( 62.9721, 18.3061, 8.70739, 0.44 ) }
    dend_4 { pt3dadd( 63.2638, 18.7081, 8.68554, 0.44 ) }
    dend_4 { pt3dadd( 63.9943, 19.6687, 8.5923, 0.44 ) }
    dend_4 { pt3dadd( 64.5735, 20.388, 8.51747, 0.66 ) }
    dend_4 { pt3dadd( 65.0576, 20.9742, 8.45405, 0.66 ) }
    dend_4 { pt3dadd( 65.6565, 21.6901, 8.37105, 0.74 ) }
    dend_4 { pt3dadd( 66.1243, 22.248, 8.30273, 0.96 ) }
    dend_4 { pt3dadd( 66.4842, 22.6628, 8.25088, 0.96 ) }
    dend_4 { pt3dadd( 67.0155, 23.212, 8.18375, 0.66 ) }
    dend_4 { pt3dadd( 67.5363, 23.7238, 8.12255, 0.66 ) }
    dend_4 { pt3dadd( 68.3629, 24.5196, 8.02735, 0.59 ) }
    dend_4 { pt3dadd( 69.1269, 25.2801, 7.95458, 0.59 ) }
    dend_4 { pt3dadd( 69.6198, 25.7841, 7.91733, 0.81 ) }
    dend_4 { pt3dadd( 69.9931, 26.1796, 7.89439, 0.81 ) }
    dend_4 { pt3dadd( 70.6307, 26.8304, 7.86778, 0.52 ) }
    dend_4 { pt3dadd( 71.1238, 27.2902, 7.85754, 0.52 ) }
    dend_4 { pt3dadd( 71.7779, 27.8623, 7.86036, 0.52 ) }
    dend_4 { pt3dadd( 72.3285, 28.3319, 7.8669, 0.52 ) }
    dend_4 { pt3dadd( 72.8565, 28.7715, 7.87185, 0.37 ) }
    dend_4 { pt3dadd( 73.7983, 29.5344, 7.8767, 0.37 ) }
    dend_4 { pt3dadd( 74.4189, 30.0252, 7.87315, 0.59 ) }
    dend_4 { pt3dadd( 74.8154, 30.3158, 7.86568, 0.59 ) }
    dend_4 { pt3dadd( 75.6591, 30.904, 7.82901, 0.74 ) }
    dend_4 { pt3dadd( 76.0995, 31.2145, 7.80862, 0.74 ) }
    dend_4 { pt3dadd( 76.4738, 31.4915, 7.7935, 0.74 ) }
    dend_4 { pt3dadd( 77.007, 31.9416, 7.77698, 0.74 ) }
    dend_4 { pt3dadd( 77.3671, 32.2575, 7.73568, 0.44 ) }
    dend_4 { pt3dadd( 77.8873, 32.6822, 7.61341, 0.44 ) }
    dend_4 { pt3dadd( 78.3375, 33.0074, 7.47317, 0.81 ) }
    dend_4 { pt3dadd( 79.0963, 33.5002, 7.20129, 0.81 ) }
    dend_4 { pt3dadd( 79.6555, 33.8201, 6.97282, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( 80.6326, 34.337, 6.55206, 0.52 ) }
    dend_4 { pt3dadd( 81.3804, 34.7285, 6.1891, 0.44 ) }
    dend_4 { pt3dadd( 81.8763, 34.968, 5.91864, 0.44 ) }
    dend_4 { pt3dadd( 82.3112, 35.168, 5.65694, 0.44 ) }
    dend_4 { pt3dadd( 82.6524, 35.3114, 5.42991, 0.44 ) }
    dend_4 { pt3dadd( 83.2217, 35.5303, 5.06659, 0.74 ) }
    dend_4 { pt3dadd( 83.7096, 35.7386, 4.8577, 0.59 ) }
    dend_4 { pt3dadd( 84.0383, 35.9144, 4.73543, 0.59 ) }
    dend_4 { pt3dadd( 89.9597, 41.5162, 5.60473, 0.59 ) }
    dend_4 { pt3dadd( 96.0736, 46.9331, 6.42504, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -79.428, -347.94, 37.0977, 0.52 ) }
    dend_39 { pt3dadd( -79.8679, -349.195, 37.1975, 0.52 ) }
    dend_39 { pt3dadd( -80.052, -349.703, 37.2452, 0.29 ) }
    dend_39 { pt3dadd( -80.3108, -350.367, 37.3077, 0.44 ) }
    dend_39 { pt3dadd( -80.5568, -350.984, 37.3632, 0.44 ) }
    dend_39 { pt3dadd( -80.754, -351.463, 37.4052, 0.29 ) }
    dend_39 { pt3dadd( -81.0599, -352.161, 37.4599, 0.29 ) }
    dend_39 { pt3dadd( -81.3804, -352.826, 37.5094, 0.81 ) }
    dend_39 { pt3dadd( -81.628, -353.336, 37.528, 1.18 ) }
    dend_39 { pt3dadd( -81.7591, -353.615, 37.5306, 1.4 ) }
    dend_39 { pt3dadd( -81.9651, -354.078, 37.5283, 1.4 ) }
    dend_39 { pt3dadd( -82.1447, -354.522, 37.5209, 1.11 ) }
    dend_39 { pt3dadd( -82.4966, -355.482, 37.5022, 0.52 ) }
    dend_39 { pt3dadd( -82.7255, -356.234, 37.489, 0.44 ) }
    dend_39 { pt3dadd( -82.8785, -356.836, 37.4806, 0.74 ) }
    dend_39 { pt3dadd( -83.0491, -357.561, 37.4765, 0.81 ) }
    dend_39 { pt3dadd( -83.1684, -358.107, 37.474, 0.81 ) }
    dend_39 { pt3dadd( -83.2803, -358.685, 37.4688, 0.74 ) }
    dend_39 { pt3dadd( -83.4042, -359.449, 37.4917, 0.22 ) }
    dend_39 { pt3dadd( -83.4565, -359.801, 37.5066, 0.22 ) }
    dend_39 { pt3dadd( -83.5341, -360.421, 37.5271, 0.22 ) }
    dend_39 { pt3dadd( -83.577, -360.957, 37.5554, 0.66 ) }
    dend_39 { pt3dadd( -83.5993, -361.515, 37.6041, 0.81 ) }
    dend_39 { pt3dadd( -83.6015, -362.41, 37.7092, 0.66 ) }
    dend_39 { pt3dadd( -83.5648, -363.223, 37.8331, 0.22 ) }
    dend_39 { pt3dadd( -83.4897, -363.945, 37.9629, 0.22 ) }
    dend_39 { pt3dadd( -83.4023, -364.47, 38.0701, 0.22 ) }
    dend_39 { pt3dadd( -83.3017, -364.977, 38.1999, 0.96 ) }
    dend_39 { pt3dadd( -83.2528, -365.237, 38.274, 1.18 ) }
    dend_39 { pt3dadd( -83.1846, -365.625, 38.3844, 1.18 ) }
    dend_39 { pt3dadd( -83.1255, -365.943, 38.4956, 1.18 ) }
    dend_39 { pt3dadd( -83.0388, -366.55, 38.7032, 0.74 ) }
    dend_39 { pt3dadd( -82.9581, -367.472, 38.9979, 0.22 ) }
    dend_39 { pt3dadd( -82.945, -367.777, 39.0923, 0.22 ) }
    dend_39 { pt3dadd( -82.9387, -368.133, 39.2024, 0.44 ) }
    dend_39 { pt3dadd( -82.9382, -368.441, 39.2906, 0.44 ) }
    dend_39 { pt3dadd( -82.9331, -369.248, 39.4991, 0.22 ) }
    dend_39 { pt3dadd( -82.9267, -369.756, 39.6108, 0.96 ) }
    dend_39 { pt3dadd( -82.9109, -370.145, 39.6765, 1.18 ) }
    dend_39 { pt3dadd( -82.889, -370.517, 39.7328, 1.25 ) }
    dend_39 { pt3dadd( -82.8467, -371.226, 39.8314, 0.96 ) }
    dend_39 { pt3dadd( -82.8172, -372.246, 39.967, 0.29 ) }
    dend_39 { pt3dadd( -82.8165, -373.049, 40.0673, 0.22 ) }
    dend_39 { pt3dadd( -82.8485, -373.959, 40.1693, 0.22 ) }
    dend_39 { pt3dadd( -82.8838, -374.428, 40.2201, 0.81 ) }
    dend_39 { pt3dadd( -82.9346, -374.81, 40.2603, 0.96 ) }
    dend_39 { pt3dadd( -83.1925, -376.144, 40.41, 0.22 ) }
    dend_39 { pt3dadd( -83.3001, -376.562, 40.4603, 0.22 ) }
    dend_39 { pt3dadd( -83.4924, -377.228, 40.5494, 0.59 ) }
    dend_39 { pt3dadd( -83.6438, -377.715, 40.6217, 0.59 ) }
    dend_39 { pt3dadd( -83.8619, -378.447, 40.7321, 0.52 ) }
    dend_39 { pt3dadd( -84.0245, -379.048, 40.8256, 0.52 ) }
    dend_39 { pt3dadd( -84.2181, -379.863, 40.9658, 0.52 ) }
    dend_39 { pt3dadd( -84.2895, -380.183, 41.0249, 0.96 ) }
    dend_39 { pt3dadd( -84.4024, -380.731, 41.1291, 0.96 ) }
    dend_39 { pt3dadd( -84.5203, -381.346, 41.249, 0.59 ) }
    dend_39 { pt3dadd( -84.7123, -382.386, 41.4841, 0.22 ) }
    dend_39 { pt3dadd( -84.9002, -383.459, 41.7318, 0.22 ) }
    dend_39 { pt3dadd( -84.986, -383.961, 41.8516, 0.22 ) }
    dend_39 { pt3dadd( -85.0688, -384.407, 41.9631, 0.96 ) }
    dend_39 { pt3dadd( -85.1264, -384.711, 42.0442, 1.18 ) }
    dend_39 { pt3dadd( -85.2475, -385.317, 42.2221, 0.52 ) }
    dend_39 { pt3dadd( -85.2958, -392.741, 42.26, 0.52 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -79.428, -347.94, 37.0977, 0.29 ) }
    dend_36 { pt3dadd( -81.4074, -347.402, 38.0228, 0.29 ) }
    dend_36 { pt3dadd( -82.4546, -347.401, 38.495, 0.37 ) }
    dend_36 { pt3dadd( -82.9259, -347.531, 38.7016, 0.37 ) }
    dend_36 { pt3dadd( -83.9853, -348.002, 39.2075, 0.37 ) }
    dend_36 { pt3dadd( -85.0285, -348.523, 39.5791, 0.52 ) }
    dend_36 { pt3dadd( -85.9497, -348.999, 39.8483, 0.59 ) }
    dend_36 { pt3dadd( -87.206, -349.787, 40.1185, 0.59 ) }
    dend_36 { pt3dadd( -88.3305, -350.53, 40.3046, 0.37 ) }
    dend_36 { pt3dadd( -89.3754, -351.231, 40.4369, 0.37 ) }
    dend_36 { pt3dadd( -91.2456, -352.494, 40.5946, 0.37 ) }
    dend_36 { pt3dadd( -92.1142, -353.028, 40.6461, 0.37 ) }
    dend_36 { pt3dadd( -92.922, -353.487, 40.686, 0.29 ) }
    dend_36 { pt3dadd( -93.5677, -353.826, 40.7232, 0.29 ) }
    dend_36 { pt3dadd( -94.2934, -354.198, 40.784, 0.81 ) }
    dend_36 { pt3dadd( -94.869, -354.521, 40.8568, 0.81 ) }
    dend_36 { pt3dadd( -95.629, -355.051, 41.065, 0.81 ) }
    dend_36 { pt3dadd( -96.891, -356.076, 41.4698, 0.29 ) }
    dend_36 { pt3dadd( -97.4816, -356.622, 41.6861, 0.66 ) }
    dend_36 { pt3dadd( -97.9114, -357.062, 41.8738, 0.66 ) }
    dend_36 { pt3dadd( -98.3032, -357.499, 42.0673, 0.66 ) }
    dend_36 { pt3dadd( -99.6937, -359.161, 42.8169, 0.29 ) }
    dend_36 { pt3dadd( -100.309, -359.932, 43.1467, 0.44 ) }
    dend_36 { pt3dadd( -100.842, -360.598, 43.4296, 0.29 ) }
    dend_36 { pt3dadd( -101.485, -361.366, 43.7481, 0.74 ) }
    dend_36 { pt3dadd( -101.969, -361.889, 43.9449, 0.74 ) }
    dend_36 { pt3dadd( -102.789, -362.649, 44.2111, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_36 { pt3dadd( -104.272, -363.821, 44.5837, 0.29 ) }
    dend_36 { pt3dadd( -105.167, -364.457, 44.7727, 0.52 ) }
    dend_36 { pt3dadd( -105.784, -364.854, 44.863, 0.52 ) }
    dend_36 { pt3dadd( -107.101, -365.632, 44.9547, 0.29 ) }
    dend_36 { pt3dadd( -108.091, -366.162, 44.9937, 0.29 ) }
    dend_36 { pt3dadd( -108.698, -366.445, 45.0024, 0.59 ) }
    dend_36 { pt3dadd( -109.425, -366.745, 44.9839, 0.59 ) }
    dend_36 { pt3dadd( -110.746, -367.268, 44.9174, 0.22 ) }
    dend_36 { pt3dadd( -111.486, -367.55, 44.8933, 0.29 ) }
    dend_36 { pt3dadd( -112.591, -367.981, 44.896, 0.29 ) }
    dend_36 { pt3dadd( -113.111, -368.193, 44.9016, 0.29 ) }
    dend_36 { pt3dadd( -114.435, -368.795, 44.9275, 0.37 ) }
    dend_36 { pt3dadd( -115.409, -369.356, 45.042, 0.37 ) }
    dend_36 { pt3dadd( -116.376, -370.045, 45.2765, 0.52 ) }
    dend_36 { pt3dadd( -117.459, -370.977, 45.6338, 1.55 ) }
    dend_36 { pt3dadd( -118.094, -371.618, 45.8798, 1.92 ) }
    dend_36 { pt3dadd( -118.687, -372.286, 46.1472, 1.92 ) }
    dend_36 { pt3dadd( -120.026, -373.94, 46.8685, 0.29 ) }
    dend_36 { pt3dadd( -120.889, -375.103, 47.3679, 0.29 ) }
    dend_36 { pt3dadd( -121.57, -376.105, 47.8013, 0.29 ) }
    dend_36 { pt3dadd( -122.105, -376.915, 48.1653, 0.74 ) }
    dend_36 { pt3dadd( -122.37, -377.321, 48.348, 0.96 ) }
    dend_36 { pt3dadd( -122.609, -377.667, 48.5032, 1.11 ) }
    dend_36 { pt3dadd( -123.301, -378.69, 48.9464, 0.52 ) }
    dend_36 { pt3dadd( -123.721, -379.374, 49.2702, 0.29 ) }
    dend_36 { pt3dadd( -124.326, -380.362, 49.7862, 0.22 ) }
    dend_36 { pt3dadd( -124.741, -381.005, 50.1482, 0.44 ) }
    dend_36 { pt3dadd( -125.099, -381.53, 50.461, 0.44 ) }
    dend_36 { pt3dadd( -126.089, -382.965, 51.346, 0.22 ) }
    dend_36 { pt3dadd( -126.687, -383.819, 51.8957, 0.22 ) }
    dend_36 { pt3dadd( -127.267, -384.609, 52.4185, 1.25 ) }
    dend_36 { pt3dadd( -127.798, -385.323, 52.9155, 1.55 ) }
    dend_36 { pt3dadd( -128.056, -385.648, 53.1485, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 74.1515, -20.7389, 29.0535, 0.74 ) }
    dend_7 { pt3dadd( 75.5976, -20.2066, 30.4433, 0.74 ) }
    dend_7 { pt3dadd( 76.0136, -20.0866, 30.8482, 0.74 ) }
    dend_7 { pt3dadd( 76.7168, -19.9556, 31.5501, 0.59 ) }
    dend_7 { pt3dadd( 77.5308, -19.9056, 32.3869, 0.59 ) }
    dend_7 { pt3dadd( 78.2766, -19.9427, 33.1785, 0.59 ) }
    dend_7 { pt3dadd( 78.647, -19.9825, 33.5762, 0.59 ) }
    dend_7 { pt3dadd( 79.3633, -20.1604, 34.3768, 0.59 ) }
    dend_7 { pt3dadd( 79.9685, -20.3591, 35.0634, 0.81 ) }
    dend_7 { pt3dadd( 80.7726, -20.623, 35.9662, 0.81 ) }
    dend_7 { pt3dadd( 81.4411, -20.8298, 36.6861, 0.37 ) }
    dend_7 { pt3dadd( 82.1424, -21.0169, 37.399, 0.37 ) }
    dend_7 { pt3dadd( 82.9643, -21.2208, 38.2295, 0.37 ) }
    dend_7 { pt3dadd( 83.802, -21.4002, 39.0965, 0.37 ) }
    dend_7 { pt3dadd( 84.6094, -21.5291, 39.9154, 0.37 ) }
    dend_7 { pt3dadd( 85.8314, -21.6553, 41.1301, 0.22 ) }
    dend_7 { pt3dadd( 87.1405, -21.7474, 42.4143, 0.22 ) }
    dend_7 { pt3dadd( 93.7419, -23.8408, 50.5376, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 51/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 74.1515, -20.7389, 29.0535, 0.37 ) }
    dend_6 { pt3dadd( 74.0652, -21.53, 29.3901, 0.37 ) }
    dend_6 { pt3dadd( 74.0474, -22.0126, 29.6298, 0.37 ) }
    dend_6 { pt3dadd( 74.0591, -22.4546, 29.8668, 0.37 ) }
    dend_6 { pt3dadd( 74.1015, -22.8828, 30.148, 0.37 ) }
    dend_6 { pt3dadd( 74.1571, -23.2445, 30.4024, 0.37 ) }
    dend_6 { pt3dadd( 74.2419, -23.6586, 30.7136, 0.29 ) }
    dend_6 { pt3dadd( 74.4178, -24.2529, 31.1485, 0.22 ) }
    dend_6 { pt3dadd( 74.6306, -24.907, 31.5885, 0.22 ) }
    dend_6 { pt3dadd( 74.9276, -25.7525, 32.1073, 0.22 ) }
    dend_6 { pt3dadd( 75.0421, -26.078, 32.2863, 1.18 ) }
    dend_6 { pt3dadd( 75.1242, -26.3658, 32.4099, 1.4 ) }
    dend_6 { pt3dadd( 75.2625, -27.3259, 32.6882, 1.4 ) }
    dend_6 { pt3dadd( 75.2562, -28.161, 32.8298, 0.44 ) }
    dend_6 { pt3dadd( 75.2168, -28.4494, 32.8659, 0.44 ) }
    dend_6 { pt3dadd( 75.1123, -28.89, 32.909, 0.29 ) }
    dend_6 { pt3dadd( 74.8851, -29.5945, 33.0042, 0.29 ) }
    dend_6 { pt3dadd( 74.5543, -30.4621, 33.1417, 0.22 ) }
    dend_6 { pt3dadd( 74.2602, -31.0777, 33.2947, 0.22 ) }
    dend_6 { pt3dadd( 74.0528, -31.437, 33.3909, 1.03 ) }
    dend_6 { pt3dadd( 73.9416, -31.6129, 33.4457, 1.33 ) }
    dend_6 { pt3dadd( 73.7785, -31.8473, 33.534, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 73/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -128.056, -385.648, 53.1485, 0.29 ) }
    dend_38 { pt3dadd( -128.573, -385.232, 53.2992, 0.29 ) }
    dend_38 { pt3dadd( -128.689, -385.141, 53.3294, 0.52 ) }
    dend_38 { pt3dadd( -128.869, -384.996, 53.3709, 0.59 ) }
    dend_38 { pt3dadd( -129.904, -384.177, 53.5466, 0.22 ) }
    dend_38 { pt3dadd( -130.197, -383.951, 53.5865, 0.22 ) }
    dend_38 { pt3dadd( -130.602, -383.646, 53.6319, 0.66 ) }
    dend_38 { pt3dadd( -130.821, -383.482, 53.6416, 0.66 ) }
    dend_38 { pt3dadd( -131.754, -382.815, 53.6551, 0.22 ) }
    dend_38 { pt3dadd( -132.14, -382.553, 53.6516, 0.22 ) }
    dend_38 { pt3dadd( -132.493, -382.336, 53.6457, 0.52 ) }
    dend_38 { pt3dadd( -132.744, -382.194, 53.6423, 0.66 ) }
    dend_38 { pt3dadd( -133.428, -381.837, 53.6364, 0.22 ) }
    dend_38 { pt3dadd( -134.783, -381.146, 53.6284, 0.22 ) }
    dend_38 { pt3dadd( -135.655, -380.724, 53.6287, 0.22 ) }
    dend_38 { pt3dadd( -136.459, -380.338, 53.6471, 1.18 ) }
    dend_38 { pt3dadd( -136.685, -380.232, 53.6524, 1.4 ) }
    dend_38 { pt3dadd( -137.031, -380.075, 53.6632, 0.74 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 91/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -128.056, -385.648, 53.1485, 0.22 ) }
    dend_37 { pt3dadd( -128.851, -387.168, 53.592, 0.22 ) }
    dend_37 { pt3dadd( -129.456, -388.415, 54.0142, 0.22 ) }
    dend_37 { pt3dadd( -129.705, -388.976, 54.2075, 0.44 ) }
    dend_37 { pt3dadd( -129.81, -389.222, 54.2929, 0.44 ) }
    dend_37 { pt3dadd( -130.765, -391.577, 55.0921, 0.22 ) }
    dend_37 { pt3dadd( -131.212, -392.678, 55.4662, 0.44 ) }
    dend_37 { pt3dadd( -131.586, -393.604, 55.7929, 0.22 ) }
    dend_37 { pt3dadd( -131.809, -394.228, 56.0147, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_37 { pt3dadd( -131.99, -394.768, 56.2114, 0.66 ) }
    dend_37 { pt3dadd( -132.115, -395.183, 56.3659, 0.44 ) }
    dend_37 { pt3dadd( -134.163, -404.752, 59.8853, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_49 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_49, dend_42, dend_27, dend_20, dend_11, dend_0, axon_0, dend_51, dend_50, dend_44, dend_43, dend_33, dend_28, dend_22, dend_21, dend_13, dend_12, dend_2, dend_1, axon_1, dend_48, dend_45, dend_41, dend_34, dend_30, dend_29, dend_24, dend_23, dend_17, dend_14, dend_8, dend_3, dend_47, dend_46, dend_40, dend_35, dend_32, dend_31, dend_26, dend_25, dend_19, dend_18, dend_16, dend_15, dend_10, dend_9, dend_5, dend_4, dend_39, dend_36, dend_7, dend_6, dend_38, dend_37]}
    ModelViewParmSubset_5 = new SectionList()
    dend_49 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_49 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_42 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_44 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_22 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_17 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_47 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_40 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_31 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_5 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_4 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_39 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_20 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_11 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_2 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_13 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_14 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_6 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_7 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_48 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_10 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_24 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_26 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_19 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_49 nseg = 5
    dend_42 nseg = 3
    dend_44 nseg = 3
    dend_43 nseg = 3
    dend_33 nseg = 5
    dend_22 nseg = 7
    dend_21 nseg = 3
    dend_12 nseg = 9
    dend_1 nseg = 5
    dend_45 nseg = 3
    dend_41 nseg = 7
    dend_34 nseg = 3
    dend_29 nseg = 5
    dend_17 nseg = 9
    dend_8 nseg = 3
    dend_47 nseg = 11
    dend_40 nseg = 5
    dend_35 nseg = 11
    dend_32 nseg = 13
    dend_31 nseg = 7
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_ChC_ab30296908_0_0


