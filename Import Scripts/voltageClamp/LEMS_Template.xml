<Lems xmlns="http://www.neuroml.org/lems/0.7.2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.neuroml.org/lems/0.7.2 https://raw.githubusercontent.com/LEMS/LEMS/development/Schemas/LEMS/LEMS_v0.7.2.xsd">
    
    <Target component="sim1"/>
    
    <!--Include standard NeuroML 2 ComponentType definitions-->
    
    <Include file="Cells.xml"/>
    <Include file="Networks.xml"/>
    <Include file="Simulation.xml"/>
    
    <Include file="[FileName]"/>
    
    <fixedCaConcModel id="CaPoolModel" restingConc="[CaConc]" ion="ca">
    </fixedCaConcModel>
    
    [VoltageClamps]
    
    <network id="net1" type="networkWithTemperature" temperature="36.0 degC">
        
        [Populations]
        
    </network>
    
    
    <Component type="Simulation" id="sim1" length="[SimDuration]" step="[TimeStep] ms" target="net1">
        <Display id="V" title="V" xmin="[xmin]" xmax="[xmax]" ymin="-150" ymax="150" timeScale="1ms">
            [VoltagePlots]
        </Display>
        
        <Display id="G" title="G" xmin="[xmin]" xmax="[xmax]" ymin="0" ymax="10" timeScale="1ms">
            [ConductancePlots]
        </Display>
        
        <Display id="I" title="I" xmin="[xmin]" xmax="[xmax]" ymin="-10" ymax="10" timeScale="1ms">
            [CurrentPlots]
        </Display>

        <OutputFile id="fileOut" fileName="[OutFile]">
            [FileColumns]
        </OutputFile>
    </Component>
    
    <cell id="TestCell">
        
        <morphology>
            
            <segment id="0" name="Soma">
                <proximal x="0.0" y="0.0" z="0.0" diameter="96.0"/>
                <distal x="0.0" y="0.0" z="0.0" diameter="96.0"/>
            </segment>
            
            <segmentGroup id="Soma" neuroLexId="sao864921383">
                <member segment="0"/>
            </segmentGroup>
            
            <segmentGroup id="all">
                <include segmentGroup="Soma"/>
            </segmentGroup>
            
            <segmentGroup id="soma_group" neuroLexId="GO:0043025">
                <include segmentGroup="Soma"/>
            </segmentGroup>
            
            
        </morphology>
        
        <!--Adding the biophysical parameters-->
        
        <biophysicalProperties id="biophys">
            
            <membraneProperties>
                
                <channelDensity condDensity="1e-4 S_per_cm2" id="channel" ionChannel="[ChannelName]" erev="[ReversalE]" ion="[Ion]"/>
                
                <spikeThresh value="0 mV"/>
                
                <specificCapacitance value="1.0 uF_per_cm2"/>
                
                <initMembPotential value="-84.0 mV"/>
                
            </membraneProperties>
            
            <intracellularProperties>
                
                <species id="ca" ion="ca" concentrationModel="CaPoolModel" initialConcentration="[CaConc]" initialExtConcentration="[CaConc]" />
                
                <resistivity value="100 ohm_cm"/>
                
            </intracellularProperties>
            
        </biophysicalProperties>
        
    </cell>
    
    <ComponentType name="voltageClampProtocol" extends="baseVoltageDepPointCurrent">
        
        <Parameter name="active" dimension="none" />
        
        <Parameter name="delay" dimension="time" />
        <Parameter name="duration1" dimension="time" />
        <Parameter name="duration2" dimension="time" />
        <Parameter name="restingVoltage" dimension="voltage" />
        <Parameter name="voltage1" dimension="voltage" />
        <Parameter name="voltage2" dimension="voltage" />
        
        <Parameter name="simpleSeriesResistance" dimension="resistance"/>
        
        <!--TODO: remove! Only required as EventConnection is used in explicitInput to
         connect inputs to cells. Events aren't passed! ... -->
        <EventPort name="in" direction="in" description="Note this is not used here. Will be removed in future"/>
        
        <Dynamics>
            
            <StateVariable name="i" exposure="i" dimension="current"/>
            
            <OnEvent port="in"><!--TODO: remove, see above...
                                <StateAssignment variable="i" value="0"/>-->
            </OnEvent>
            
            <OnCondition test="active .eq. 1 .and. t .lt. delay">
                <StateAssignment variable="i" value="(restingVoltage - v) / simpleSeriesResistance"/>
            </OnCondition>
            
            <OnCondition test="active .eq. 1 .and. t .geq. delay .and. t .lt. (delay + duration1)">
                <StateAssignment variable="i" value="(voltage1 - v) / simpleSeriesResistance"/>
            </OnCondition>
            
            <OnCondition test="active .eq. 1 .and. t .geq. delay + duration1 .and. t .lt. delay + duration1 + duration2">
                <StateAssignment variable="i" value="(voltage2 - v) / simpleSeriesResistance"/>
            </OnCondition>
            
            <OnCondition test="active .eq. 1 .and. t .geq. delay + duration1 + duration2">
                <StateAssignment variable="i" value="(restingVoltage - v) / simpleSeriesResistance"/>
            </OnCondition>
            
        </Dynamics>
        
    </ComponentType>
    
    
    
    <ComponentType name="fixedCaConcModel"
        extends="concentrationModel">
        <Parameter name="restingConc" dimension="concentration"/>
        
        <Text name="ion"/>
        
        <Dynamics>
            
            <StateVariable name="concentration" exposure="concentration" dimension="concentration"/>
            <StateVariable name="extConcentration" exposure="extConcentration" dimension="concentration"/>
            
            <OnStart>
                <StateAssignment variable="concentration" value="restingConc"/>
                <StateAssignment variable="extConcentration" value="restingConc"/>
            </OnStart>
            
        </Dynamics>
        
    </ComponentType>
    
    
</Lems>
